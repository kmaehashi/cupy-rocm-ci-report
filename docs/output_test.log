============================= test session starts ==============================
platform linux -- Python 3.8.7, pytest-6.2.2, py-1.10.0, pluggy-0.13.1
rootdir: /home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.t8hdvgF7FH/cupy, configfile: setup.cfg
plugins: html-3.1.1, metadata-1.11.0
collected 71430 items / 58 deselected / 12 skipped / 71360 selected

tests/cupy_tests/test_cublas.py ........................................ [  0%]
........................................................................ [  0%]
........................................................................ [  0%]
........................................................................ [  0%]
........................................................................ [  0%]
........................................................................ [  0%]
........................................................................ [  0%]
........................................................................ [  0%]
........................................................................ [  0%]
........................................................................ [  0%]
........................................................................ [  1%]
........................................................................ [  1%]
........................................................................ [  1%]
........................................................................ [  1%]
........................................................................ [  1%]
........................................................................ [  1%]
........................................................................ [  1%]
........................................................................ [  1%]
........................................................................ [  1%]
........................................................................ [  1%]
........................................................................ [  2%]
........................................................................ [  2%]
........................................................................ [  2%]
........................................................................ [  2%]
........................................................................ [  2%]
........................................................................ [  2%]
........................................................................ [  2%]
........................................................................ [  2%]
........................................................................ [  2%]
........................................................................ [  2%]
........................................................................ [  3%]
........................................................................ [  3%]
........................................................................ [  3%]
...........................x...........x.............................x.. [  3%]
.........x..........                                                     [  3%]
tests/cupy_tests/test_cudnn.py sssssssssssssssssssssssssssssssssssssssss [  3%]
ssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssss [  3%]
ssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssss [  3%]
ssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssss [  3%]
ssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssss [  3%]
ssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssss [  3%]
ssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssss [  4%]
ssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssss [  4%]
ssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssss [  4%]
ssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssss [  4%]
ssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssss [  4%]
ssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssss [  4%]
ssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssss [  4%]
ssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssss [  4%]
ssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssss [  4%]
ssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssss [  4%]
ssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssss [  5%]
ssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssss [  5%]
ssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssss [  5%]
ssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssss [  5%]
ssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssss [  5%]
ssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssss [  5%]
ssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssss [  5%]
ssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssss [  5%]
ssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssss [  5%]
sssssssssssssssssssssssssssssssssssssssssssssssssssssss                  [  5%]
tests/cupy_tests/test_cusolver.py ssssssssssssssssssssssssssssssssssssss [  6%]
ssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssss [  6%]
ssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssss [  6%]
ssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssss [  6%]
ssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssss [  6%]
ssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssss [  6%]
ssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssss [  6%]
ssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssss [  6%]
ssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssss [  6%]
ssssssssssssssssssssssssss                                               [  6%]
tests/cupy_tests/test_cutensor.py ssssssssssssssssssssssssssssssssssssss [  6%]
sssssssssssssssssssssssssssssssssssss                                    [  6%]
tests/cupy_tests/test_init.py ..s.......                                 [  6%]
tests/cupy_tests/test_ndim.py ............                               [  7%]
tests/cupy_tests/test_numpy_interop.py ..x....                           [  7%]
tests/cupy_tests/test_type_routines.py ................................. [  7%]
.                                                                        [  7%]
tests/cupy_tests/binary_tests/test_elementwise.py ......                 [  7%]
tests/cupy_tests/binary_tests/test_packing.py ...                        [  7%]
tests/cupy_tests/core_tests/test_array_function.py .....                 [  7%]
tests/cupy_tests/core_tests/test_carray.py .....                         [  7%]
tests/cupy_tests/core_tests/test_core.py ......                          [  7%]
tests/cupy_tests/core_tests/test_cub_reduction.py ...................... [  7%]
...                                                                      [  7%]
tests/cupy_tests/core_tests/test_dlpack.py ....                          [  7%]
tests/cupy_tests/core_tests/test_elementwise.py ...............          [  7%]
tests/cupy_tests/core_tests/test_flags.py .............................  [  7%]
tests/cupy_tests/core_tests/test_function.py ..                          [  7%]
tests/cupy_tests/core_tests/test_internal.py ........................... [  7%]
...............................................................          [  7%]
tests/cupy_tests/core_tests/test_iter.py ............                    [  7%]
tests/cupy_tests/core_tests/test_ndarray.py ..........................ss [  7%]
ssss.................................................................... [  7%]
.........................sss...............                              [  7%]
tests/cupy_tests/core_tests/test_ndarray_adv_indexing.py ............... [  7%]
........................................................................ [  7%]
........................................................................ [  7%]
........................................................................ [  7%]
.............................................                            [  7%]
tests/cupy_tests/core_tests/test_ndarray_complex_ops.py ................ [  7%]
.....                                                                    [  7%]
tests/cupy_tests/core_tests/test_ndarray_contiguity.py .                 [  7%]
tests/cupy_tests/core_tests/test_ndarray_conversion.py .......xx..       [  7%]
tests/cupy_tests/core_tests/test_ndarray_copy_and_view.py ss........s... [  7%]
....ssss.......                                                          [  8%]
tests/cupy_tests/core_tests/test_ndarray_cuda_array_interface.py sssssss [  8%]
sssssssssssssssssssssssssssssssssssssssssssssssss                        [  8%]
tests/cupy_tests/core_tests/test_ndarray_elementwise_op.py ............. [  8%]
........................................................................ [  8%]
.................................................................        [  8%]
tests/cupy_tests/core_tests/test_ndarray_get.py ............             [  8%]
tests/cupy_tests/core_tests/test_ndarray_indexing.py xxxx..........x...x [  8%]
........x..........x.............................                        [  8%]
tests/cupy_tests/core_tests/test_ndarray_math.py ......................s [  8%]
sssssssssss                                                              [  8%]
tests/cupy_tests/core_tests/test_ndarray_owndata.py ...                  [  8%]
tests/cupy_tests/core_tests/test_ndarray_reduction.py .................. [  8%]
........................................................................ [  8%]
........................................................................ [  8%]
................................                                         [  8%]
tests/cupy_tests/core_tests/test_ndarray_scatter.py .................... [  8%]
........................................................................ [  8%]
...............................................................          [  8%]
tests/cupy_tests/core_tests/test_ndarray_ufunc.py .......                [  8%]
tests/cupy_tests/core_tests/test_ndarray_unary_op.py .......x..........s [  8%]
...                                                                      [  8%]
tests/cupy_tests/core_tests/test_raw.py .ss.........sss..s.s.s........ss [  9%]
.........sss..s.s.s........ss.........sss..s.s.s......ssssssssssssssssss [  9%]
ssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssss.s [  9%]
s.......sssss....s.s......sssssssssssssssssssssssssssss                  [  9%]
tests/cupy_tests/core_tests/test_reduction.py .......................    [  9%]
tests/cupy_tests/core_tests/test_scan.py ....                            [  9%]
tests/cupy_tests/core_tests/test_syncdetect.py ....                      [  9%]
tests/cupy_tests/core_tests/test_userkernel.py ....sss.............      [  9%]
tests/cupy_tests/core_tests/fusion_tests/test_array.py ................. [  9%]
........................................................................ [  9%]
....................................................                     [  9%]
tests/cupy_tests/core_tests/fusion_tests/test_indexing.py .............. [  9%]
.................s                                                       [  9%]
tests/cupy_tests/core_tests/fusion_tests/test_kernel_cache.py ....       [  9%]
tests/cupy_tests/core_tests/fusion_tests/test_misc.py .......s.......... [  9%]
........                                                                 [  9%]
tests/cupy_tests/core_tests/fusion_tests/test_optimization.py .......... [  9%]
....                                                                     [  9%]
tests/cupy_tests/core_tests/fusion_tests/test_reduction.py ............. [  9%]
........................................................................ [  9%]
.........................................................s.s.s.s.s.s.s.s [  9%]
.s.ssssssssssssssssss.sss                                                [  9%]
tests/cupy_tests/core_tests/fusion_tests/test_routines.py .............. [  9%]
........................................................................ [ 10%]
..............                                                           [ 10%]
tests/cupy_tests/core_tests/fusion_tests/test_ufunc.py ................. [ 10%]
......................................................                   [ 10%]
tests/cupy_tests/creation_tests/test_basic.py .......................... [ 10%]
...........................................................s............ [ 10%]
....s.                                                                   [ 10%]
tests/cupy_tests/creation_tests/test_from_data.py ssssssssssssssssssssss [ 10%]
sssssssssssssssssssssssssssssssssssssssssssssssssssssssssss............. [ 10%]
...................................................................      [ 10%]
tests/cupy_tests/creation_tests/test_matrix.py ......................... [ 10%]
.................................                                        [ 10%]
tests/cupy_tests/creation_tests/test_ranges.py ......................... [ 10%]
..............................................................           [ 10%]
tests/cupy_tests/cuda_tests/test_compiler.py sssssss........             [ 10%]
tests/cupy_tests/cuda_tests/test_cublas.py .                             [ 10%]
tests/cupy_tests/cuda_tests/test_cudnn.py s                              [ 10%]
tests/cupy_tests/cuda_tests/test_cufft.py ssssssssssssssss.              [ 10%]
tests/cupy_tests/cuda_tests/test_curand.py .....                         [ 10%]
tests/cupy_tests/cuda_tests/test_cusolver.py .                           [ 10%]
tests/cupy_tests/cuda_tests/test_cusparse.py .                           [ 10%]
tests/cupy_tests/cuda_tests/test_cutensor.py s                           [ 10%]
tests/cupy_tests/cuda_tests/test_device.py .............x.               [ 10%]
tests/cupy_tests/cuda_tests/test_driver.py ss.                           [ 10%]
tests/cupy_tests/cuda_tests/test_memory.py ....ssssssss................. [ 10%]
.ssssssssss.................................................ssssss       [ 10%]
tests/cupy_tests/cuda_tests/test_memory_hook.py .                        [ 10%]
tests/cupy_tests/cuda_tests/test_nccl.py ........                        [ 10%]
tests/cupy_tests/cuda_tests/test_nvrtc.py .                              [ 10%]
tests/cupy_tests/cuda_tests/test_nvtx.py ....                            [ 11%]
tests/cupy_tests/cuda_tests/test_pinned_memory.py ............           [ 11%]
tests/cupy_tests/cuda_tests/test_profile.py ..                           [ 11%]
tests/cupy_tests/cuda_tests/test_runtime.py .                            [ 11%]
tests/cupy_tests/cuda_tests/test_stream.py ..s..s..ssssssss.s            [ 11%]
tests/cupy_tests/cuda_tests/memory_hooks_tests/test_debug_print.py .     [ 11%]
tests/cupy_tests/cuda_tests/memory_hooks_tests/test_line_profile.py ..   [ 11%]
tests/cupy_tests/fft_tests/test_cache.py ..sss.....s..                   [ 11%]
tests/cupy_tests/fft_tests/test_callback.py ssssssssssssssssssssssssssss [ 11%]
ssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssss [ 11%]
ssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssss [ 11%]
ssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssss [ 11%]
ssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssss [ 11%]
ssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssss [ 11%]
ssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssss [ 11%]
ssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssss [ 11%]
ssssssssssssssssssssssssssssssssssssssssssssssssssss                     [ 11%]
tests/cupy_tests/fft_tests/test_fft.py ....ssss....ssss........ssss....s [ 11%]
sss........ssss....ssss........ssss....ssss........ssss....ssss........s [ 12%]
sss....ssss........ssss....ssss........ssss....ssss........ssss....ssss. [ 12%]
.......ssss....ssss....................................................s [ 12%]
ssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssss [ 12%]
sssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssss. [ 12%]
.s.s..s.s..s.s..s.s..s.s..s.s..s.s..s.s..s.s..s.s..s.s..s.s..s.s..s.s..s [ 12%]
.s..s.s..s.s..s.s..s.s..s.s..s.s..s.s..s.s..s.s..s.s..s.s..s.s..s.s..s.s [ 12%]
..s.s..s.s..s.s..s.s..s.s..s.s..s.s..s.s..s.s..s.s..s.s..s.s..s.s..s.s.. [ 12%]
s.s..s.s..s.s..s.s..s.s..s.s..s.s..s.s..s.s..s.s..s.s..s.s..s.s..s.s..s. [ 12%]
s..s.s..s.s..s.s..s.s..s.s..s.s..s.s..s.s..s.s..s.s..s.s..s.s..s.s..s.s. [ 12%]
.s.s..s.s..s.s..s.s..s.s..s.s..s.s..s.s..s.s..s.s..s.s..s.s..s.s..s.s..s [ 13%]
.s..s.s..s.s..s.s..s.s..s.s..s.s..s.s..s.s.s.s.s.s.s.s.s.s.s.s.s.s.s.s.s [ 13%]
.s.s.sssss.s.s.s.s.s.s.s.s.s.s.s.s.s.s.s.s.s.s.s.s.s.s.s.s.s.s.s.s.s.s.s [ 13%]
.sssss.s.s.s.s.s.s.s.s.s.s.s.s.s.s.s.s.s.s.s.s.s.s.s.s.s.s.s.s.s.s.s.sss [ 13%]
ss.s.s.s.s.s.s.s.s.s.s.s.s.s.s.s.s.s.s.s.s.s.s.s.s.s.s.s.s.s.s.s.s.s.s.s [ 13%]
.sssssssssssssssssssssssssssssssssssssssssssssssssssssssssssss.s.s..s.s. [ 13%]
.s.s..s.s..s.s..s.s..s.s..s.s..s.s..s.s..s.s..s.s..s.s..s.s..s.s..s.s..s [ 13%]
.s..s.s..s.s..s.s..s.s..s.s..s.s..s.s...ss..ss....ss..ss....ss..ss....ss [ 13%]
..ss....ss..ss....ss..ss....ss..ss....ss..ss...s.s.s.s.s.s.s.s.s.s.s.s.s [ 13%]
.s.s.s.s.s.s.s.s.s.s.s.s.s..s.s..s.s..s.s..s.s..s.s..s.s..s.s..s.s..s.s. [ 13%]
.s.s..s.s..s.s..s.s..s.s..s.s..s.s..s.s..s.s..s.s..s.s..s.s..s.s..s.s..s [ 14%]
.s..s.s..s.s..s.s..s.s..s.s..s.s..s.s......s.s..s.s..s.s..s.s..s.s..s.s. [ 14%]
.s.s..s.s..s.s..s.s..s.s..s.s..s.s..s.s..s.s..s.s..s.s..s.s..s.s..s.s..s [ 14%]
.s..s.s..s.s..s.s..s.s..s.s..s.s..s.s..s.s..s.s..s.s..s.s..s.s..s.s..s.s [ 14%]
..s.s..s.s..s.s..s.s..s.s..s.s..s.s.sssss.s.s..s.s.sssssssssssssssssssss [ 14%]
ssssssssssssssssssssssssssssssssssssssssssss.s.s..s.s..s.s..s.s..s.s..s. [ 14%]
s..s.s..s.s..s.s..s.s..s.s..s.s..s.s..s.s..s.s..s.s..s.s..s.s..s.s..s.s. [ 14%]
.s.s..s.s..s.s..s.s..s.s..s.s.......ss..ss....ss..ss....ss..ss....ss..ss [ 14%]
....ss..ss....ss..ss....ss..ss....ss..ss........................         [ 14%]
tests/cupy_tests/functional_tests/test_piecewise.py .............        [ 14%]
tests/cupy_tests/functional_tests/test_vectorize.py ...FFFFFFFFFFFFFFFFF [ 14%]
FFFFFFFFFF..FFFFFFFFFFFFFFFFFFFF                                         [ 14%]
tests/cupy_tests/indexing_tests/test_generate.py ....F..x..............F [ 14%]
..............F                                                          [ 14%]
tests/cupy_tests/indexing_tests/test_indexing.py F..FF..........F.FFFF.. [ 15%]
...FFF.FF..FFFFFF...FF...                                                [ 15%]
tests/cupy_tests/indexing_tests/test_insert.py ...FFFFFFFFFF.F.F....FFFF [ 15%]
FFFFFFFF...FFFFFFFFFFFF...FFFFFFFFFFFFFFFFFFFF.FF........FFFFFFFFF.FF.FF [ 15%]
.FF.FF.FF.FF.FF.FF..F..F..F..F..F..F.................................... [ 15%]
.........................................................                [ 15%]
tests/cupy_tests/indexing_tests/test_iterate.py ........................ [ 15%]
...............................................                          [ 15%]
tests/cupy_tests/io_tests/test_base_n.py ............................    [ 15%]
tests/cupy_tests/io_tests/test_formatting.py ..                          [ 15%]
tests/cupy_tests/io_tests/test_npz.py .......                            [ 15%]
tests/cupy_tests/lib_tests/test_polynomial.py .....FFss.....FFssssssssss [ 15%]
sssssss........ssssssssssssssssssssssssssssssssssssxxxxxxxxxxxxxxxxxxxx. [ 15%]
..ssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssss [ 15%]
ssssssssssssssssssssssssss......xxxxxxxxxxxxxxxxxxxxxxxx................ [ 15%]
........................................................................ [ 15%]
........xxxxxxxx........xxxxxxxx........................................ [ 16%]
...........xxxxxx............................x.......................... [ 16%]
..                                                                       [ 16%]
tests/cupy_tests/lib_tests/test_shape_base.py ......................     [ 16%]
tests/cupy_tests/lib_tests/test_strided_tricks.py ..                     [ 16%]
tests/cupy_tests/linalg_tests/test_decomposition.py .................... [ 16%]
.......................                                                  [ 16%]
tests/cupy_tests/linalg_tests/test_eigenvalue.py xxxxxxxx                [ 16%]
tests/cupy_tests/linalg_tests/test_einsum.py ........................... [ 16%]
........................................................................ [ 16%]
........................................................................ [ 16%]
........................................................................ [ 16%]
........................................................................ [ 16%]
........................................................................ [ 16%]
........................................................................ [ 16%]
........................................................................ [ 17%]
........................................................................ [ 17%]
........................................................................ [ 17%]
........................................................................ [ 17%]
..........                                                               [ 17%]
tests/cupy_tests/linalg_tests/test_norms.py ............................ [ 17%]
........................................................................ [ 17%]
........................................................................ [ 17%]
.................................................................        [ 17%]
tests/cupy_tests/linalg_tests/test_product.py .......................... [ 17%]
........................................................................ [ 17%]
........................................................................ [ 17%]
..........................................                               [ 17%]
tests/cupy_tests/linalg_tests/test_solve.py ............................ [ 18%]
                                                                         [ 18%]
tests/cupy_tests/logic_tests/test_comparison.py ........................ [ 18%]
.....                                                                    [ 18%]
tests/cupy_tests/logic_tests/test_content.py ...                         [ 18%]
tests/cupy_tests/logic_tests/test_ops.py ....                            [ 18%]
tests/cupy_tests/logic_tests/test_truth.py ............................. [ 18%]
........................................................................ [ 18%]
........................................................................ [ 18%]
........................................................................ [ 18%]
........................................................................ [ 18%]
........................................................................ [ 18%]
........................................................................ [ 18%]
........................................................................ [ 18%]
........................................................................ [ 18%]
........................................................................ [ 19%]
...........................................                              [ 19%]
tests/cupy_tests/logic_tests/test_type_test.py ......................... [ 19%]
.......                                                                  [ 19%]
tests/cupy_tests/manipulation_tests/test_add_remove.py ................. [ 19%]
.........................                                                [ 19%]
tests/cupy_tests/manipulation_tests/test_basic.py ...................... [ 19%]
.......................................................                  [ 19%]
tests/cupy_tests/manipulation_tests/test_dims.py .....x.x............... [ 19%]
................................................                         [ 19%]
tests/cupy_tests/manipulation_tests/test_join.py ....................... [ 19%]
...........................                                              [ 19%]
tests/cupy_tests/manipulation_tests/test_kind.py ...........             [ 19%]
tests/cupy_tests/manipulation_tests/test_rearrange.py .................. [ 19%]
.......................................................                  [ 19%]
tests/cupy_tests/manipulation_tests/test_shape.py ...................... [ 19%]
....................................                                     [ 19%]
tests/cupy_tests/manipulation_tests/test_split.py ..................     [ 19%]
tests/cupy_tests/manipulation_tests/test_tiling.py ..................... [ 19%]
...........                                                              [ 19%]
tests/cupy_tests/manipulation_tests/test_transpose.py .................. [ 19%]
..........                                                               [ 19%]
tests/cupy_tests/math_tests/test_arithmetic.py ......................... [ 19%]
........................................................................ [ 19%]
........................................................................ [ 19%]
........................................................................ [ 20%]
........................................................................ [ 20%]
........................................................................ [ 20%]
........................................................................ [ 20%]
........................................................................ [ 20%]
........................................................................ [ 20%]
........................................................................ [ 20%]
........................................................................ [ 20%]
........................................................................ [ 20%]
........................................................................ [ 21%]
........................................................................ [ 21%]
........................................................................ [ 21%]
........................................................................ [ 21%]
........................................................................ [ 21%]
........................................................................ [ 21%]
........................................................................ [ 21%]
........................................................................ [ 21%]
........................................................................ [ 21%]
........................................................................ [ 21%]
........................................................................ [ 22%]
........................................................................ [ 22%]
........................................................................ [ 22%]
........................................................................ [ 22%]
........................................................................ [ 22%]
........................................................................ [ 22%]
........................................................................ [ 22%]
........................................................................ [ 22%]
........................................................................ [ 22%]
........................................................................ [ 22%]
........................................................................ [ 23%]
........................................................................ [ 23%]
........................................................................ [ 23%]
........................................................................ [ 23%]
........................................................................ [ 23%]
........................................................................ [ 23%]
........................................................................ [ 23%]
........................................................................ [ 23%]
........................................................................ [ 23%]
........................................................................ [ 23%]
........................................................................ [ 24%]
........................................................................ [ 24%]
........................................................................ [ 24%]
........................................................................ [ 24%]
........................................................................ [ 24%]
........................................................................ [ 24%]
........................................................................ [ 24%]
........................................................................ [ 24%]
........................................................................ [ 24%]
........................................................................ [ 24%]
........................................................................ [ 25%]
........................................................................ [ 25%]
........................................................................ [ 25%]
........................................................................ [ 25%]
........................................................................ [ 25%]
........................................................................ [ 25%]
........................................................................ [ 25%]
........................................................................ [ 25%]
........................................................................ [ 25%]
........................................................................ [ 25%]
........................................................................ [ 26%]
........................................................................ [ 26%]
........................................................................ [ 26%]
........................................................................ [ 26%]
........................................................................ [ 26%]
........................................................................ [ 26%]
........................................................................ [ 26%]
........................................................................ [ 26%]
........................................................................ [ 26%]
........................................................................ [ 26%]
........................................................................ [ 27%]
........................................................................ [ 27%]
........................................................................ [ 27%]
........................................................................ [ 27%]
........................................................................ [ 27%]
........................................................................ [ 27%]
........................................................................ [ 27%]
........................................................................ [ 27%]
........................................................................ [ 27%]
........................................................................ [ 27%]
........................................................................ [ 28%]
........................................................................ [ 28%]
........................................................................ [ 28%]
........................................................................ [ 28%]
........................................................................ [ 28%]
........................................................................ [ 28%]
........................................................................ [ 28%]
........................................................................ [ 28%]
........................................................................ [ 28%]
........................................................................ [ 28%]
........................................................................ [ 29%]
........................................................................ [ 29%]
........................................................................ [ 29%]
........................................................................ [ 29%]
........................................................................ [ 29%]
........................................................................ [ 29%]
........................................................................ [ 29%]
........................................................................ [ 29%]
........................................................................ [ 29%]
........................................................................ [ 29%]
........................................................................ [ 30%]
........................................................................ [ 30%]
........................................................................ [ 30%]
........................................................................ [ 30%]
........................................................................ [ 30%]
........................................................................ [ 30%]
........................................................................ [ 30%]
........................................................................ [ 30%]
........................................................................ [ 30%]
........................................................................ [ 30%]
........................................................................ [ 31%]
...........................                                              [ 31%]
tests/cupy_tests/math_tests/test_explog.py .........                     [ 31%]
tests/cupy_tests/math_tests/test_floating.py .......                     [ 31%]
tests/cupy_tests/math_tests/test_hyperbolic.py ......                    [ 31%]
tests/cupy_tests/math_tests/test_matmul.py ............................. [ 31%]
........................................................................ [ 31%]
........................................................................ [ 31%]
........................................................................ [ 31%]
...............................................                          [ 31%]
tests/cupy_tests/math_tests/test_misc.py ............................... [ 31%]
............................................x..x..x..................... [ 31%]
............................                                             [ 31%]
tests/cupy_tests/math_tests/test_rational.py ....                        [ 31%]
tests/cupy_tests/math_tests/test_rounding.py ........................... [ 31%]
..........................................                               [ 31%]
tests/cupy_tests/math_tests/test_special.py ...                          [ 31%]
tests/cupy_tests/math_tests/test_sumprod.py ............................ [ 31%]
....................................................ssssssssssssssss.... [ 31%]
........................................................................ [ 32%]
........................................................................ [ 32%]
........................................................................ [ 32%]
........................................................................ [ 32%]
........................................................................ [ 32%]
........................................................................ [ 32%]
........................................................................ [ 32%]
........................................................................ [ 32%]
..............................................................           [ 32%]
tests/cupy_tests/math_tests/test_trigonometric.py ...............        [ 32%]
tests/cupy_tests/math_tests/test_window.py ............................. [ 32%]
.....                                                                    [ 32%]
tests/cupy_tests/misc_tests/test_memory_ranges.py ................       [ 32%]
tests/cupy_tests/misc_tests/test_who.py ......                           [ 32%]
tests/cupy_tests/padding_tests/test_pad.py ............................. [ 33%]
..............................................                           [ 33%]
tests/cupy_tests/polynomial_tests/test_polynomial.py ................... [ 33%]
                                                                         [ 33%]
tests/cupy_tests/polynomial_tests/test_polyutils.py .................... [ 33%]
................                                                         [ 33%]
tests/cupy_tests/prof_tests/test_range.py ........                       [ 33%]
tests/cupy_tests/random_tests/test_bit_generator.py ssssssssssss         [ 33%]
tests/cupy_tests/random_tests/test_distributions.py .................... [ 33%]
........................................................................ [ 33%]
........................................................................ [ 33%]
........................................................................ [ 33%]
........................................................................ [ 33%]
........................................................................ [ 33%]
........................................................................ [ 33%]
........................................................................ [ 33%]
........................................................................ [ 34%]
........................................................................ [ 34%]
........................................................................ [ 34%]
........................................................................ [ 34%]
........................................................................ [ 34%]
........................................................................ [ 34%]
........................................................................ [ 34%]
........................................................................ [ 34%]
.................................................                        [ 34%]
tests/cupy_tests/random_tests/test_generator.py ........................ [ 34%]
........................................................................ [ 34%]
........................................................................ [ 35%]
......................s.s............................................... [ 35%]
............................x...............................             [ 35%]
tests/cupy_tests/random_tests/test_generator_api.py ssssssssssssssssssss [ 35%]
sssssssssssssss                                                          [ 35%]
tests/cupy_tests/random_tests/test_init.py .                             [ 35%]
tests/cupy_tests/random_tests/test_permutations.py ...x...x............. [ 35%]
........................................................................ [ 35%]
........................................................................ [ 35%]
.............                                                            [ 35%]
tests/cupy_tests/random_tests/test_random.py .                           [ 35%]
tests/cupy_tests/random_tests/test_sample.py ...............x........x.. [ 35%]
............                                                             [ 35%]
tests/cupy_tests/sorting_tests/test_count.py ....                        [ 35%]
tests/cupy_tests/sorting_tests/test_search.py ssssssss........ssssssss.. [ 35%]
........................................................................ [ 35%]
........................................................................ [ 35%]
....................................................................     [ 35%]
tests/cupy_tests/sorting_tests/test_sort.py ............................ [ 35%]
........................................................................ [ 36%]
..........................................................x...........   [ 36%]
tests/cupy_tests/statistics_tests/test_correlation.py .................. [ 36%]
..............................x..x.xx...................                 [ 36%]
tests/cupy_tests/statistics_tests/test_histogram.py .................... [ 36%]
........................................................................ [ 36%]
........................................................................ [ 36%]
........................................................................ [ 36%]
........................................................................ [ 36%]
........................................................                 [ 36%]
tests/cupy_tests/statistics_tests/test_meanvar.py ...................... [ 36%]
........................................................................ [ 36%]
........................................................................ [ 37%]
..                                                                       [ 37%]
tests/cupy_tests/statistics_tests/test_order.py sssss................... [ 37%]
.........................                                                [ 37%]
tests/cupy_tests/testing_tests/test_array.py ........................... [ 37%]
...............................................                          [ 37%]
tests/cupy_tests/testing_tests/test_condition.py ................        [ 37%]
tests/cupy_tests/testing_tests/test_helper.py .......................... [ 37%]
........................................................................ [ 37%]
.....sssss..sssssss..ssxxxxxxxx................x..x.................     [ 37%]
tests/cupy_tests/testing_tests/test_parameterized.py ............s.s.s.s [ 37%]
....ssss......                                                           [ 37%]
tests/cupyx_tests/test_cupyx.py ..                                       [ 37%]
tests/cupyx_tests/test_lapack.py .s.s.s.s.....s.s.s.s.....s.s.s.s.....s. [ 37%]
s.s.s.............sssssssssssss                                          [ 37%]
tests/cupyx_tests/test_optimize.py sssssssss                             [ 37%]
tests/cupyx_tests/test_rsqrt.py .                                        [ 37%]
tests/cupyx_tests/test_runtime.py s.                                     [ 37%]
tests/cupyx_tests/test_scatter.py ...                                    [ 37%]
tests/cupyx_tests/test_time.py .........                                 [ 37%]
tests/cupyx_tests/fallback_mode_tests/test_fallback.py ................. [ 37%]
........................................................................ [ 37%]
.........                                                                [ 37%]
tests/cupyx_tests/fallback_mode_tests/test_notifications.py .........    [ 37%]
tests/cupyx_tests/jit_tests/test_raw.py ....F..                          [ 37%]
tests/cupyx_tests/linalg_tests/test_solve.py xxxxxxxxxxxxxxxx....ssss    [ 37%]
tests/cupyx_tests/scipy_tests/test_get_array_module.py ..                [ 37%]
tests/cupyx_tests/scipy_tests/fft_tests/test_fft.py .................... [ 37%]
........................................................................ [ 37%]
........................................................................ [ 38%]
........................................................................ [ 38%]
........................................................................ [ 38%]
........................................................................ [ 38%]
........................................................................ [ 38%]
........................................................................ [ 38%]
........................................................................ [ 38%]
........................................................................ [ 38%]
........................................................................ [ 38%]
........................................................................ [ 38%]
........................................................................ [ 39%]
........................................................................ [ 39%]
........................................................................ [ 39%]
........................................................................ [ 39%]
........................................................................ [ 39%]
........................................................................ [ 39%]
........................................................................ [ 39%]
........................................................................ [ 39%]
........................................................................ [ 39%]
........................................................................ [ 39%]
........................................................................ [ 40%]
........................................................................ [ 40%]
........................................................................ [ 40%]
........................................................................ [ 40%]
........................................................................ [ 40%]
........................................................................ [ 40%]
........................................................................ [ 40%]
........................................................................ [ 40%]
........................................................................ [ 40%]
........................................................................ [ 40%]
........................................................................ [ 41%]
........................................................................ [ 41%]
........................................................................ [ 41%]
........................................................................ [ 41%]
........................................................................ [ 41%]
........................................................................ [ 41%]
........................................................................ [ 41%]
........................................................................ [ 41%]
........................................................................ [ 41%]
........................................................................ [ 41%]
........................................................................ [ 42%]
........................................................................ [ 42%]
........................................................................ [ 42%]
........................................................................ [ 42%]
........................................................................ [ 42%]
........................................................................ [ 42%]
........................................................................ [ 42%]
........................................................................ [ 42%]
........................................................................ [ 42%]
........................................................................ [ 42%]
........................................................................ [ 43%]
........................................................................ [ 43%]
........................................................................ [ 43%]
........................................................................ [ 43%]
........................................................................ [ 43%]
........................................................................ [ 43%]
........................................................................ [ 43%]
........................................................................ [ 43%]
........................................................................ [ 43%]
........................................................................ [ 44%]
........................................................................ [ 44%]
........................................................................ [ 44%]
........................................................................ [ 44%]
........................................................................ [ 44%]
........................................................................ [ 44%]
........................................................................ [ 44%]
........................................................................ [ 44%]
........................................................................ [ 44%]
........................................................................ [ 44%]
........................................................................ [ 45%]
........................................................................ [ 45%]
........................................................................ [ 45%]
........................................................................ [ 45%]
........................................................................ [ 45%]
........................................................................ [ 45%]
........................................................................ [ 45%]
........................................................................ [ 45%]
........................................................................ [ 45%]
........................................................................ [ 45%]
........................................................................ [ 46%]
........................................................................ [ 46%]
........................................................................ [ 46%]
........................................................................ [ 46%]
........................................................................ [ 46%]
........................................................................ [ 46%]
........................................................................ [ 46%]
........................................................................ [ 46%]
........................................................................ [ 46%]
........................................................................ [ 46%]
........................................................................ [ 47%]
........................................................................ [ 47%]
........................................................................ [ 47%]
........................................................................ [ 47%]
........................................................................ [ 47%]
........................................................................ [ 47%]
........................................................................ [ 47%]
........................................................................ [ 47%]
........................................................................ [ 47%]
........................................................................ [ 47%]
........................................................................ [ 48%]
........................................................................ [ 48%]
........................................................................ [ 48%]
.................sss.........sss.........sss.........sss.........sss.... [ 48%]
.....sss.........sss.........sss.........sss.........sss.........sss.... [ 48%]
.....sss.........sss.........sss.........sss.........sss.........sss.... [ 48%]
.....sss.........sss.........sss.........sss.........sss.........sss.... [ 48%]
.....sss.........sss.........sss.........sss.........sss.........sss.... [ 48%]
.....sss.........sss.........sss.........sss.........sss.........sss.... [ 48%]
.....sss.........sss.........sss.........sss.........sss.........sss.... [ 48%]
.....sss.........sss.........sss.........sss.........sss.........sss.... [ 49%]
.....sss.........sss.........sss.........sss.........sss.........sss.... [ 49%]
.....sss.........sss.........sss.........sss.........sss.........sss.... [ 49%]
.....sss.........sss.........sss.........sss.........sss.........sss.... [ 49%]
.....sss.........sss.........sss.........sss.........sss.........sss.... [ 49%]
.....sss.........sss.........sss.........sss.........sss.........sss.... [ 49%]
.....sss.........sss.........sss.........sss.........sss.........sss.... [ 49%]
.....sss.........sss.........sss.........sss.........sss.........sss.... [ 49%]
.....sss.........sss.........sss.........sss.........sss.........sss.... [ 49%]
.....sss.........sss.........sss.........sss.........sss.........sss.... [ 49%]
.....sss.........sss.........sss.........sss.........sss.........sss.... [ 50%]
.....sss.........sss.........sss.........sss.........sss.........sss.... [ 50%]
.....sss.........sss.........sss.........sss.........sss.........sss.... [ 50%]
.....sss.........sss.........sss.........sss.........sss.........sss.... [ 50%]
.....sss.........sss.........sss.........sss.........sss.........sss.... [ 50%]
.....sss.........sss.........sss.........sss.........sss.........sss.... [ 50%]
.....sss.........sss.........sss........................................ [ 50%]
........................................................................ [ 50%]
........................................................................ [ 50%]
........................................................................ [ 50%]
........................................................................ [ 51%]
........................................................................ [ 51%]
........................................................................ [ 51%]
........................................................................ [ 51%]
........................................................................ [ 51%]
......................................                                   [ 51%]
tests/cupyx_tests/scipy_tests/fft_tests/test_helper.py .                 [ 51%]
tests/cupyx_tests/scipy_tests/fftpack_tests/test_fftpack.py ............ [ 51%]
........................................................................ [ 51%]
........................................................................ [ 51%]
........................................................................ [ 51%]
........................................................................ [ 51%]
........................................................................ [ 52%]
........................................................................ [ 52%]
........................................................................ [ 52%]
........................................................................ [ 52%]
........................................................................ [ 52%]
........................................................................ [ 52%]
........................................................................ [ 52%]
........................................................................ [ 52%]
.........................                                                [ 52%]
tests/cupyx_tests/scipy_tests/linalg_tests/test_decomp_lu.py ........... [ 52%]
...............................................F...                      [ 52%]
tests/cupyx_tests/scipy_tests/linalg_tests/test_solve_triangular.py .... [ 52%]
........................................................................ [ 52%]
........................................................................ [ 53%]
........................................................................ [ 53%]
....................................................................     [ 53%]
tests/cupyx_tests/scipy_tests/linalg_tests/test_special_matrices.py .... [ 53%]
........................................................................ [ 53%]
.................................................                        [ 53%]
tests/cupyx_tests/scipy_tests/ndimage_tests/test_filters.py ...sss...... [ 53%]
sss......sss......sss......sss......sss.........sss......sss......sss... [ 53%]
...sss......sss......sss................................................ [ 53%]
...........................................................sss......sss. [ 53%]
.....sss......sss......sss......sss.........sss......sss......sss......s [ 53%]
ss......sss......sss.................................................... [ 53%]
.......................................................sss......sss..... [ 54%]
.sss......sss......sss......sss.........sss......sss......sss......sss.. [ 54%]
....sss......sss........................................................ [ 54%]
...................................................sss......sss......sss [ 54%]
......sss......sss......sss.........sss......sss......sss......sss...... [ 54%]
sss......sss............................................................ [ 54%]
...............................................sss......sss......sss.... [ 54%]
..sss......sss......sss.........sss......sss......sss......sss......sss. [ 54%]
.....sss................................................................ [ 54%]
...........................................sss......sss......sss......ss [ 54%]
s......sss......sss.........sss......sss......sss......sss......sss..... [ 55%]
.sss.................................................................... [ 55%]
.......................................sss......sss......sss......sss... [ 55%]
...sss......sss.........sss......sss......sss......sss......sss......sss [ 55%]
........................................................................ [ 55%]
...................................sss......sss......sss......sss......s [ 55%]
ss......sss.........sss......sss......sss......sss......sss......sss.... [ 55%]
........................................................................ [ 55%]
...............................sss......sss......sss......sss......sss.. [ 55%]
....sss.........sss......sss......sss......sss......sss......sss........ [ 55%]
........................................................................ [ 56%]
...........................sss......sss......sss......sss......sss...... [ 56%]
sss.........sss......sss......sss......sss......sss......sss............ [ 56%]
........................................................................ [ 56%]
.......................sss......sss......sss......sss......sss......sss. [ 56%]
........sss......sss......sss......sss......sss......sss................ [ 56%]
........................................................................ [ 56%]
...................sss......sss......sss......sss......sss......sss..... [ 56%]
....sss......sss......sss......sss......sss......sss.................... [ 56%]
........................................................................ [ 56%]
...............sss......sss......sss......sss......sss......sss......... [ 57%]
sss......sss......sss......sss......sss......sss........................ [ 57%]
........................................................................ [ 57%]
...........sss......sss......sss......sss......sss......sss.........sss. [ 57%]
.....sss......sss......sss......sss......sss............................ [ 57%]
........................................................................ [ 57%]
xxx....sss......sss......sss......sss......sss......sss....x..x.sss.x..x [ 57%]
.sss.x..x.sss......sss......sss......sss................................ [ 57%]
.....................................................x..x.............x. [ 57%]
......................................x.....x....x.....x......x.....x... [ 58%]
........................................................................ [ 58%]
........................................................................ [ 58%]
........................................................................ [ 58%]
........................................................................ [ 58%]
........................................................................ [ 58%]
........................................................................ [ 58%]
........................................................................ [ 58%]
........................................................................ [ 58%]
........................................................................ [ 58%]
........................F.F.F.F......................................... [ 59%]
........................................................................ [ 59%]
................................................F.F..................... [ 59%]
........................................................................ [ 59%]
................................................................F.F.F.F. [ 59%]
........................................................................ [ 59%]
........................................................................ [ 59%]
................F.F..................................................... [ 59%]
........................................................................ [ 59%]
........................................................................ [ 59%]
........................................................................ [ 60%]
........................................................................ [ 60%]
........................................................................ [ 60%]
........................................................................ [ 60%]
........................................................................ [ 60%]
........................................................................ [ 60%]
........................................................................ [ 60%]
........................s.s.s.s.s.s.s.s.s.s.s.s.s.s.s.s.s.s............. [ 60%]
........................................................................ [ 60%]
.........................s.s.s.s.s.s.s.s.s.s.s.s.s.s.s.s.s.ss.s.s.s.s.s. [ 60%]
s.s.s.s.s.s.s.s.s.s.s.s................................................. [ 61%]
.............................................................s.s.s.s.s.s [ 61%]
.s.s.s.s.s.s.s.s.s.s.s.ss.s.s.s.s.s.s.s.s.s.s.s.s.s.s.s.s.s............. [ 61%]
........................................................................ [ 61%]
.........................s.s.s.s.s.s.s.s.s.s.s.s.s.s.s.s.s.ss.s.s.s.s.s. [ 61%]
s.s.s.s.s.s.s.s.s.s.s.s................................................. [ 61%]
.............................................................s.s.s.s.s.s [ 61%]
.s.s.s.s.s.s.s.s.s.s.s.ss.s.s.s.s.s.s.s.s.s.s.s.s.s.s.s.s.s............. [ 61%]
........................................................................ [ 61%]
.........................s.s.s.s.s.s.s.s.s.s.s.s.s.s.s.s.s.ss.s.s.s.s.s. [ 61%]
s.s.s.s.s.s.s.s.s.s.s.s................................................. [ 62%]
.............................................................s.s.s.s.s.s [ 62%]
.s.s.s.s.s.s.s.s.s.s.s.ss.s.s.s.s.s.s.s.s.s.s.s.s.s.s.s.s.s............. [ 62%]
........................................................................ [ 62%]
.........................s.s.s.s.s.s.s.s.s.s.s.s.s.s.s.s.s.ss.s.s.s.s.s. [ 62%]
s.s.s.s.s.s.s.s.s.s.s.s................................................. [ 62%]
.............................................................s.s.s.s.s.s [ 62%]
.s.s.s.s.s.s.s.s.s.s.s.ssss..sss..sss............sss..sss..sss.......... [ 62%]
..sss..sss..sss............sss..sss..sss............sss..sss..sss....... [ 62%]
.....sss..sss..sss............sss..sss..sss............sss..sss..sss.... [ 62%]
........sss..sss..sss............sss..sss..sss............sss..sss..sss. [ 63%]
...........sss..sss..sss................................................ [ 63%]
........................................................................ [ 63%]
....................................                                     [ 63%]
tests/cupyx_tests/scipy_tests/ndimage_tests/test_fourier.py ............ [ 63%]
........................................................................ [ 63%]
........................................................................ [ 63%]
........................................................................ [ 63%]
........................................................................ [ 63%]
........................................................................ [ 63%]
........................................................................ [ 63%]
........................................................................ [ 64%]
........................................                                 [ 64%]
tests/cupyx_tests/scipy_tests/ndimage_tests/test_interpolation.py ...... [ 64%]
........................................................................ [ 64%]
........................................................................ [ 64%]
........................................................................ [ 64%]
........................................................................ [ 64%]
........................................................................ [ 64%]
........................................................................ [ 64%]
........................................................................ [ 64%]
........................................................................ [ 64%]
........................................................................ [ 64%]
........................................................................ [ 65%]
........................................................................ [ 65%]
........................................................................ [ 65%]
........................................................................ [ 65%]
........................................................................ [ 65%]
........................................................................ [ 65%]
........................................................................ [ 65%]
........................................................................ [ 65%]
........................................................................ [ 65%]
........................................................................ [ 66%]
........................................................................ [ 66%]
........................................................................ [ 66%]
........................................................................ [ 66%]
........................................................................ [ 66%]
........................................................................ [ 66%]
........................................................................ [ 66%]
........................................................................ [ 66%]
........................................................................ [ 66%]
........................................................................ [ 66%]
........................................................................ [ 67%]
........................................................................ [ 67%]
........................................................................ [ 67%]
........................................................................ [ 67%]
........................................................................ [ 67%]
........................................................................ [ 67%]
........................................................................ [ 67%]
........................................................................ [ 67%]
........................................................................ [ 67%]
........................................................................ [ 67%]
........................................................................ [ 68%]
........................................................................ [ 68%]
........................................................................ [ 68%]
........................................................................ [ 68%]
........................................................................ [ 68%]
........................................................................ [ 68%]
........................................................................ [ 68%]
........................................................................ [ 68%]
........................................................................ [ 68%]
........................................................................ [ 68%]
........................................................................ [ 69%]
........................................................................ [ 69%]
........................................................................ [ 69%]
........................................................................ [ 69%]
........................................................................ [ 69%]
........................................................................ [ 69%]
........................................................................ [ 69%]
........................................................................ [ 69%]
........................................................................ [ 69%]
........................................................................ [ 69%]
........................................................................ [ 70%]
........................................................................ [ 70%]
........................................................................ [ 70%]
........................................................................ [ 70%]
........................................................................ [ 70%]
........................................................................ [ 70%]
........................................................................ [ 70%]
........................................................................ [ 70%]
........................................................................ [ 70%]
........................................................................ [ 70%]
........................................................................ [ 71%]
........................................................................ [ 71%]
........................................................................ [ 71%]
........................................................................ [ 71%]
........................................................................ [ 71%]
........................................................................ [ 71%]
........................................................................ [ 71%]
........................................................................ [ 71%]
........................................................................ [ 71%]
........................................................................ [ 71%]
........................................................................ [ 72%]
........................................................................ [ 72%]
........................................................................ [ 72%]
........................................................................ [ 72%]
........................................................................ [ 72%]
........................................................................ [ 72%]
........................................................................ [ 72%]
........................................................................ [ 72%]
........................................................................ [ 72%]
........................................................................ [ 72%]
........................................................................ [ 73%]
........................................................................ [ 73%]
........................................................................ [ 73%]
........................................................................ [ 73%]
........................................................................ [ 73%]
........................................................................ [ 73%]
........................................................................ [ 73%]
........................................................................ [ 73%]
........................................................................ [ 73%]
........................................................................ [ 73%]
........................................................................ [ 74%]
........................................................................ [ 74%]
........................................................................ [ 74%]
........................................................................ [ 74%]
........................................................................ [ 74%]
........................................................................ [ 74%]
........................................................................ [ 74%]
........................................................................ [ 74%]
........................................................................ [ 74%]
........................................................................ [ 74%]
........................................................................ [ 75%]
........................................................................ [ 75%]
........................................................................ [ 75%]
........................................................................ [ 75%]
........................................................................ [ 75%]
...............................x...x.x...x.x...x.x...x.............x...x [ 75%]
.x...x.x...x.x...x.............x...x.x...x.x...x.x...x.............x...x [ 75%]
.x...x.x...x.x...x.............x...x.x...x.x...x.x...x.............x...x [ 75%]
.x...x.x...x.x...x.............x...x.x...x.x...x.x...x.............x...x [ 75%]
.x...x.x...x.x...x.............x...x.x...x.x...x.x...x.............x...x [ 75%]
.x...x.x...x.x...x.............x...x.x...x.x...x.x...x.............x...x [ 76%]
.x...x.x...x.x...x.............x...x.x...x.x...x.x...x.............x...x [ 76%]
.x...x.x...x.x...x.............x...x.x...x.x...x.x...x.............x...x [ 76%]
.x...x.x...x.x...x.............x...x.x...x.x...x.x...x.............x...x [ 76%]
.x...x.x...x.x...x.............x...x.x...x.x...x.x...x.............x...x [ 76%]
.x...x.x...x.x...x.............x...x.x...x.x...x.x...x.............x...x [ 76%]
.x...x.x...x.x...x.............x...x.x...x.x...x.x...x.............x...x [ 76%]
.x...x.x...x.x...x.............x...x.x...x.x...x.x...x.............x...x [ 76%]
.x...x.x...x.x...x.............x...x.x...x.x...x.x...x.............x...x [ 76%]
.x...x.x...x.x...x.............x...x.x...x.x...x.x...x.............x...x [ 77%]
.x...x.x...x.x...x.............x...x.x...x.x...x.x...x.............x...x [ 77%]
.x...x.x...x.x...x...................................................... [ 77%]
........................................................................ [ 77%]
........................................................................ [ 77%]
........................................................................ [ 77%]
........................................................................ [ 77%]
........................................................................ [ 77%]
........................................................................ [ 77%]
........................................................................ [ 77%]
........................................................................ [ 78%]
........................................................................ [ 78%]
........................................................................ [ 78%]
........................................................................ [ 78%]
........................................................................ [ 78%]
........................................................................ [ 78%]
........................................................................ [ 78%]
........................................................................ [ 78%]
.....................s.................................................. [ 78%]
........................................................................ [ 78%]
........................................................................ [ 79%]
........................................................................ [ 79%]
.........................x.....x.....x.....x.....x.....x.....x.....x.... [ 79%]
.x.....x.....x.....x.......x........x..x..x........s.................... [ 79%]
........................................................................ [ 79%]
........................................................................ [ 79%]
........................................................................ [ 79%]
........................................................................ [ 79%]
........................................................................ [ 79%]
........................................................................ [ 79%]
........................................................................ [ 80%]
........................................................................ [ 80%]
........................................................................ [ 80%]
........................................................................ [ 80%]
.......x.....x....................x.....x....................x.....x.... [ 80%]
................x.....x....................x.....x....................x. [ 80%]
....x....................x.....x....................x.....x............. [ 80%]
........................................................................ [ 80%]
........................................................................ [ 80%]
........................................................................ [ 80%]
........................................s............................... [ 81%]
........................................................................ [ 81%]
........................................................................ [ 81%]
........................................................................ [ 81%]
........................................................................ [ 81%]
.................................ss..................................... [ 81%]
........................................................................ [ 81%]
........................................................................ [ 81%]
........................................................................ [ 81%]
........................................................................ [ 81%]
........................................................................ [ 82%]
........................................................................ [ 82%]
........................................................................ [ 82%]
........................................................................ [ 82%]
........................................................................ [ 82%]
........................................................................ [ 82%]
...........ssssssssssssssssssssssssssssssssssssssssssssssss              [ 82%]
tests/cupyx_tests/scipy_tests/ndimage_tests/test_measurements.py ....... [ 82%]
........................................................................ [ 82%]
........................................................................ [ 82%]
........................................................................ [ 82%]
........................................................................ [ 83%]
........................................................................ [ 83%]
........................................................................ [ 83%]
........................................................................ [ 83%]
........................................................................ [ 83%]
........................................................................ [ 83%]
........................................................................ [ 83%]
........................................................................ [ 83%]
........................................................................ [ 83%]
........................................................................ [ 83%]
........................................................................ [ 84%]
........................................................................ [ 84%]
........................................................................ [ 84%]
........................................................................ [ 84%]
........................................................................ [ 84%]
........................................................................ [ 84%]
........................................................................ [ 84%]
........................................................................ [ 84%]
........................................................................ [ 84%]
........................................................................ [ 84%]
........................................................................ [ 85%]
........................................................................ [ 85%]
........................................................................ [ 85%]
........................................................................ [ 85%]
........................................................................ [ 85%]
........................................................................ [ 85%]
........................................................................ [ 85%]
........................................................................ [ 85%]
........................................................................ [ 85%]
........................................................................ [ 85%]
........................................................................ [ 86%]
........................................................................ [ 86%]
........................................................................ [ 86%]
........................................................................ [ 86%]
.....xx..........xx..........xx..........xx..........xx..........F...... [ 86%]
.....xx..................................xx............................. [ 86%]
.....xx..........xx..........xx..........xx..........xx................. [ 86%]
.....xx..................................xx............................. [ 86%]
........................................................................ [ 86%]
........................................................................ [ 86%]
...                                                                      [ 86%]
tests/cupyx_tests/scipy_tests/ndimage_tests/test_morphology.py ......... [ 86%]
......................s....s....s..s....s....s.......................... [ 87%]
..........s....s....s..s....s....s....................................s. [ 87%]
...s....s..s....s....s....................................s....s....s..s [ 87%]
....s....s....................................s....s....s..s....s....s.. [ 87%]
..................................s....s....s..s....s....s.............. [ 87%]
......................s....s....s..s....s....s.......................... [ 87%]
..........s....s....s..s....s....s....................................s. [ 87%]
...s....s..s....s....s....................................s....s....s..s [ 87%]
....s....s....................................s....s....s..s....s....s.. [ 87%]
..................................s....s....s..s....s....s.............. [ 88%]
......................s....s....s..s....s....s.......................... [ 88%]
..........s....s....s..s....s....s....................................s. [ 88%]
...s....s..s....s....s....................................s....s....s..s [ 88%]
....s....s....................................s....s....s..s....s....s.. [ 88%]
..................................s....s....s..s....s....s.............. [ 88%]
......................s....s....s..s....s....s.......................... [ 88%]
..........s....s....s..s....s....s....................................s. [ 88%]
...s....s..s....s....s....................................s....s....s..s [ 88%]
....s....s....................................s....s....s..s....s....s.. [ 88%]
..................................s....s....s..s....s....s.............. [ 89%]
........................................................................ [ 89%]
........................................................................ [ 89%]
........................................................................ [ 89%]
........................................................................ [ 89%]
........................................................................ [ 89%]
........................................................................ [ 89%]
........................................................................ [ 89%]
.......................................................................s [ 89%]
.s.s.............s.s.s.............s.s.s.............s.s.s.............s [ 89%]
.s.s.............s.s.s.............s.s.s.............s.s.s.............s [ 90%]
.s.s.............s.s.s.............s.s.s.............s.s.s.............s [ 90%]
.s.s.............s.s.s.............s.s.s.............s.s.s.............s [ 90%]
.s.s.............s.s.s.............s.s.s.............s.s.s.............s [ 90%]
.s.s.............s.s.s.............s.s.s.............s.s.s.............s [ 90%]
.s.s.............s.s.s.............s.s.s.............s.s.s.............s [ 90%]
.s.s.............s.s.s.............s.s.s.............s.s.s.............s [ 90%]
.s.s.............s.s.s.............s.s.s.............s.s.s.............s [ 90%]
.s.s.............s.s.s.............s.s.s.............s.s.s.............s [ 90%]
.s.s.............s.s.s.............s.s.s.............s.s.s.............s [ 90%]
.s.s.............s.s.s.............s.s.s.............s.s.s.............s [ 91%]
.s.s.............s.s.s.............s.s.s.............s.s.s.............s [ 91%]
.s.s.............s.s.s.............s.s.s.............s.s.s.............s [ 91%]
.s.s.............s.s.s.............s.s.s.............s.s.s.............s [ 91%]
.s.s.............s.s.s.............s.s.s.............s.s.s.............s [ 91%]
.s.s.............s.s.s.............s.s.s.............s.s.s.............s [ 91%]
.s.s.............s.s.s.............s.s.s.............s.s.s.............s [ 91%]
.s.s.............s.s.s.............s.s.s.............s.s.s.............s [ 91%]
.s.s.............s.s.s.............s.s.s.............s.s.s.............s [ 91%]
.s.s.............s.s.s.............s.s.s.............s.s.s.............s [ 91%]
.s.s.............s.s.s.............s.s.s.............s.s.s.............s [ 92%]
.s.s.............s.s.s.............s.s.s.............s.s.s.............s [ 92%]
.s.s.............s.s.s.............s.s.s.............s.s.s.............s [ 92%]
.s.s.............s.s.s.............s.s.s.............s.s.s.............s [ 92%]
.s.s.............s.s.s.............s.s.s.............s.s.s.............s [ 92%]
.s.s.............s.s.s.............s.s.s.............s.s.s.............s [ 92%]
.s.s.............s.s.s.............s.s.s.............s.s.s.............s [ 92%]
.s.s.............s.s.s.............s.s.s.............s.s.s.............s [ 92%]
.s.s.............s.s.s.............s.s.s.............s.s.s.............s [ 92%]
.s.s.............s.s.s.............s.s.s.............s.s.s.............s [ 92%]
.s.s.............s.s.s.............s.s.s.............s.s.s.............s [ 93%]
.s.s.............s.s.s.............s.s.s.............s.s.s.............s [ 93%]
.s.s.............s.s.s.............s.s.s.............s.s.s.............s [ 93%]
.s.s.............s.s.s.............s.s.s.............s.s.s.............s [ 93%]
.s.s.............s.s.s.............s.s.s.............s.s.s.............. [ 93%]
........................................................................ [ 93%]
......s....s....s....s....s....s....s....s....s....s....s....s......s... [ 93%]
.s....s....s....s....s....s....s....s....s....s....s.................... [ 93%]
..........................................s....s....s....s....s....s.... [ 93%]
s....s....s....s....s....s......s....s....s....s....s....s....s....s.... [ 93%]
s....s....s....s........................................................ [ 94%]
......s....s....s....s....s....s....s....s....s....s....s....s......s... [ 94%]
.s....s....s....s....s....s....s....s....s....s....s.................... [ 94%]
..........................................s....s....s....s....s....s.... [ 94%]
s....s....s....s....s....s......s....s....s....s....s....s....s....s.... [ 94%]
s....s....s....s........................................................ [ 94%]
......s....s....s....s....s....s....s....s....s....s....s....s......s... [ 94%]
.s....s....s....s....s....s....s....s....s....s....s.................... [ 94%]
..........................................s....s....s....s....s....s.... [ 94%]
s....s....s....s....s....s......s....s....s....s....s....s....s....s.... [ 94%]
s....s....s....s........................................................ [ 95%]
......s....s....s....s....s....s....s....s....s....s....s....s......s... [ 95%]
.s....s....s....s....s....s....s....s....s....s....s.................... [ 95%]
..........................................s....s....s....s....s....s.... [ 95%]
s....s....s....s....s....s......s....s....s....s....s....s....s....s.... [ 95%]
s....s....s....s........................................................ [ 95%]
......s....s....s....s....s....s....s....s....s....s....s....s......s... [ 95%]
.s....s....s....s....s....s....s....s....s....s....s.................... [ 95%]
..........................................s....s....s....s....s....s.... [ 95%]
s....s....s....s....s....s......s....s....s....s....s....s....s....s.... [ 95%]
s....s....s....s........................................................ [ 96%]
......s....s....s....s....s....s....s....s....s....s....s....s......s... [ 96%]
.s....s....s....s....s....s....s....s....s....s....s.................... [ 96%]
..........................................s....s....s....s....s....s.... [ 96%]
s....s....s....s....s....s......s....s....s....s....s....s....s....s.... [ 96%]
s....s....s....s........................................................ [ 96%]
........................................................................ [ 96%]
........................................................................ [ 96%]
........................................................................ [ 96%]
........................................................ssssssss........ [ 96%]
........................................................ssssssss........ [ 97%]
........................................................ssssssss........ [ 97%]
........................................................ssssssss........ [ 97%]
........................................................................ [ 97%]
........................................................................ [ 97%]
........................................................................ [ 97%]
........................................................................ [ 97%]
........................................................................ [ 97%]
........................................................................ [ 97%]
........................................................................ [ 97%]
........................................................................ [ 98%]
........................................................................ [ 98%]
........................................................................ [ 98%]
........................................................................ [ 98%]
........................................................................ [ 98%]
........................................................................ [ 98%]
........................................................................ [ 98%]
                                                                         [ 98%]
tests/cupyx_tests/scipy_tests/signal_tests/test_bsplines.py ............ [ 98%]
                                                                         [ 98%]
tests/cupyx_tests/scipy_tests/signal_tests/test_signaltools.py ......... [ 98%]
........................................................................ [ 98%]
......................................................xxxxxxxxx......... [ 98%]
...........................xxxxxxxxxxxx................................. [ 99%]
...F........xxx..x.x..x.x..x.x..x.x..x.x..x.x..x.x..x.x..x.x..x.x..x.x.. [ 99%]
x.x..................................................................... [ 99%]
........................................................................ [ 99%]
........................................................................ [ 99%]
........................................................................ [ 99%]
........................................................................ [ 99%]
....................................                                     [ 99%]
tests/cupyx_tests/scipy_tests/special_tests/test_bessel.py ............  [ 99%]
tests/cupyx_tests/scipy_tests/special_tests/test_convex_analysis.py .... [ 99%]
.                                                                        [ 99%]
tests/cupyx_tests/scipy_tests/special_tests/test_digamma.py .....        [ 99%]
tests/cupyx_tests/scipy_tests/special_tests/test_erf.py ............     [ 99%]
tests/cupyx_tests/scipy_tests/special_tests/test_gamma.py ....           [ 99%]
tests/cupyx_tests/scipy_tests/special_tests/test_gammaln.py ....         [ 99%]
tests/cupyx_tests/scipy_tests/special_tests/test_polygamma.py ....       [ 99%]
tests/cupyx_tests/scipy_tests/special_tests/test_statistics.py ..        [ 99%]
tests/cupyx_tests/scipy_tests/special_tests/test_zeta.py ....            [ 99%]
tests/cupyx_tests/scipy_tests/stats_tests/test_distributions.py ........ [ 99%]
........................................................................ [ 99%]
........................................................................ [ 99%]
                                                                         [ 99%]
tests/cupyx_tests/tools_tests/test_install_library.py ......             [ 99%]
tests/example_tests/test_finance.py ...                                  [ 99%]
tests/example_tests/test_gemm.py .                                       [ 99%]
tests/example_tests/test_gmm.py ss                                       [ 99%]
tests/example_tests/test_kmeans.py sss                                   [ 99%]
tests/install_tests/test_build.py sx.                                    [ 99%]
tests/install_tests/test_utils.py ..                                     [100%]

=================================== FAILURES ===================================
____________________ TestVectorizeOps.test_vectorize_bit_or ____________________

self = <cupy_tests.functional_tests.test_vectorize.TestVectorizeOps testMethod=test_vectorize_bit_or>
xp = <module 'cupy' from '/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.t8hdvgF7FH/cupy/cupy/__init__.py'>
dtype1 = <class 'numpy.longlong'>, dtype2 = <class 'numpy.longlong'>

    @testing.for_all_dtypes_combination(names=('dtype1', 'dtype2'))
    @testing.numpy_cupy_array_equal(accept_error=TypeError)
    def test_vectorize_bit_or(self, xp, dtype1, dtype2):
        def my_bit_or(x, y):
            return x | y
    
>       return self._run(my_bit_or, xp, [dtype1, dtype2])

tests/cupy_tests/functional_tests/test_vectorize.py:110: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
tests/cupy_tests/functional_tests/test_vectorize.py:18: in _run
    return f(*args)
cupy/_functional/vectorize.py:98: in __call__
    return kern(*args)
cupy/core/_kernel.pyx:840: in cupy.core._kernel.ElementwiseKernel.__call__
    kern = self._get_elementwise_kernel(dev_id, arginfos, type_map)
cupy/core/_kernel.pyx:865: in cupy.core._kernel.ElementwiseKernel._get_elementwise_kernel
    kern = _get_elementwise_kernel(
cupy/_util.pyx:59: in cupy._util.memoize.decorator.ret
    result = f(*args, **kwargs)
cupy/core/_kernel.pyx:652: in cupy.core._kernel._get_elementwise_kernel
    return _get_simple_elementwise_kernel(
cupy/core/_kernel.pyx:38: in cupy.core._kernel._get_simple_elementwise_kernel
    cpdef function.Function _get_simple_elementwise_kernel(
cupy/core/_kernel.pyx:61: in cupy.core._kernel._get_simple_elementwise_kernel
    module = compile_with_cache(module_code, options)
cupy/core/core.pyx:2021: in cupy.core.core.compile_with_cache
    return cuda.compile_with_cache(
cupy/cuda/compiler.py:428: in compile_with_cache
    return _compile_with_cache_hip(
cupy/cuda/compiler.py:829: in _compile_with_cache_hip
    temp_path = tf.name
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <tempfile._TemporaryFileWrapper object at 0x7f50117cc970>, exc = None
value = None, tb = None

    def __exit__(self, exc, value, tb):
>       result = self.file.__exit__(exc, value, tb)
E       AssertionError: Only cupy raises error
E       
E       Traceback (most recent call last):
E         File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.t8hdvgF7FH/cupy/cupy/testing/_helper.py", line 47, in _call_func
E           result = impl(self, *args, **kw)
E         File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.t8hdvgF7FH/cupy/tests/cupy_tests/functional_tests/test_vectorize.py", line 110, in test_vectorize_bit_or
E           return self._run(my_bit_or, xp, [dtype1, dtype2])
E         File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.t8hdvgF7FH/cupy/tests/cupy_tests/functional_tests/test_vectorize.py", line 18, in _run
E           return f(*args)
E         File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.t8hdvgF7FH/cupy/cupy/_functional/vectorize.py", line 98, in __call__
E           return kern(*args)
E         File "cupy/core/_kernel.pyx", line 840, in cupy.core._kernel.ElementwiseKernel.__call__
E           kern = self._get_elementwise_kernel(dev_id, arginfos, type_map)
E         File "cupy/core/_kernel.pyx", line 865, in cupy.core._kernel.ElementwiseKernel._get_elementwise_kernel
E           kern = _get_elementwise_kernel(
E         File "cupy/_util.pyx", line 59, in cupy._util.memoize.decorator.ret
E           result = f(*args, **kwargs)
E         File "cupy/core/_kernel.pyx", line 652, in cupy.core._kernel._get_elementwise_kernel
E           return _get_simple_elementwise_kernel(
E         File "cupy/core/_kernel.pyx", line 38, in cupy.core._kernel._get_simple_elementwise_kernel
E           cpdef function.Function _get_simple_elementwise_kernel(
E         File "cupy/core/_kernel.pyx", line 61, in cupy.core._kernel._get_simple_elementwise_kernel
E           module = compile_with_cache(module_code, options)
E         File "cupy/core/core.pyx", line 2021, in cupy.core.core.compile_with_cache
E           return cuda.compile_with_cache(
E         File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.t8hdvgF7FH/cupy/cupy/cuda/compiler.py", line 428, in compile_with_cache
E           return _compile_with_cache_hip(
E         File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.t8hdvgF7FH/cupy/cupy/cuda/compiler.py", line 829, in _compile_with_cache_hip
E           temp_path = tf.name
E         File "/home/kmaeh/.pyenv/versions/3.8.7/lib/python3.8/tempfile.py", line 491, in __exit__
E           result = self.file.__exit__(exc, value, tb)
E       OSError: [Errno 28] No space left on device

/home/kmaeh/.pyenv/versions/3.8.7/lib/python3.8/tempfile.py:491: AssertionError
----------------------------- Captured stdout call -----------------------------
{'dtype1': <class 'numpy.longlong'>, 'dtype2': <class 'numpy.longlong'>}
___________________ TestVectorizeOps.test_vectorize_bit_xor ____________________

self = <cupy_tests.functional_tests.test_vectorize.TestVectorizeOps testMethod=test_vectorize_bit_xor>
xp = <module 'cupy' from '/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.t8hdvgF7FH/cupy/cupy/__init__.py'>
dtype1 = <class 'numpy.uint8'>, dtype2 = <class 'numpy.uint8'>

    @testing.for_all_dtypes_combination(names=('dtype1', 'dtype2'))
    @testing.numpy_cupy_array_equal(accept_error=TypeError)
    def test_vectorize_bit_xor(self, xp, dtype1, dtype2):
        def my_bit_xor(x, y):
            return x ^ y
    
>       return self._run(my_bit_xor, xp, [dtype1, dtype2])

tests/cupy_tests/functional_tests/test_vectorize.py:126: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
tests/cupy_tests/functional_tests/test_vectorize.py:18: in _run
    return f(*args)
cupy/_functional/vectorize.py:98: in __call__
    return kern(*args)
cupy/core/_kernel.pyx:840: in cupy.core._kernel.ElementwiseKernel.__call__
    kern = self._get_elementwise_kernel(dev_id, arginfos, type_map)
cupy/core/_kernel.pyx:865: in cupy.core._kernel.ElementwiseKernel._get_elementwise_kernel
    kern = _get_elementwise_kernel(
cupy/_util.pyx:59: in cupy._util.memoize.decorator.ret
    result = f(*args, **kwargs)
cupy/core/_kernel.pyx:652: in cupy.core._kernel._get_elementwise_kernel
    return _get_simple_elementwise_kernel(
cupy/core/_kernel.pyx:38: in cupy.core._kernel._get_simple_elementwise_kernel
    cpdef function.Function _get_simple_elementwise_kernel(
cupy/core/_kernel.pyx:61: in cupy.core._kernel._get_simple_elementwise_kernel
    module = compile_with_cache(module_code, options)
cupy/core/core.pyx:2021: in cupy.core.core.compile_with_cache
    return cuda.compile_with_cache(
cupy/cuda/compiler.py:428: in compile_with_cache
    return _compile_with_cache_hip(
cupy/cuda/compiler.py:829: in _compile_with_cache_hip
    temp_path = tf.name
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <tempfile._TemporaryFileWrapper object at 0x7f5010f200a0>, exc = None
value = None, tb = None

    def __exit__(self, exc, value, tb):
>       result = self.file.__exit__(exc, value, tb)
E       AssertionError: Only cupy raises error
E       
E       Traceback (most recent call last):
E         File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.t8hdvgF7FH/cupy/cupy/testing/_helper.py", line 47, in _call_func
E           result = impl(self, *args, **kw)
E         File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.t8hdvgF7FH/cupy/tests/cupy_tests/functional_tests/test_vectorize.py", line 126, in test_vectorize_bit_xor
E           return self._run(my_bit_xor, xp, [dtype1, dtype2])
E         File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.t8hdvgF7FH/cupy/tests/cupy_tests/functional_tests/test_vectorize.py", line 18, in _run
E           return f(*args)
E         File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.t8hdvgF7FH/cupy/cupy/_functional/vectorize.py", line 98, in __call__
E           return kern(*args)
E         File "cupy/core/_kernel.pyx", line 840, in cupy.core._kernel.ElementwiseKernel.__call__
E           kern = self._get_elementwise_kernel(dev_id, arginfos, type_map)
E         File "cupy/core/_kernel.pyx", line 865, in cupy.core._kernel.ElementwiseKernel._get_elementwise_kernel
E           kern = _get_elementwise_kernel(
E         File "cupy/_util.pyx", line 59, in cupy._util.memoize.decorator.ret
E           result = f(*args, **kwargs)
E         File "cupy/core/_kernel.pyx", line 652, in cupy.core._kernel._get_elementwise_kernel
E           return _get_simple_elementwise_kernel(
E         File "cupy/core/_kernel.pyx", line 38, in cupy.core._kernel._get_simple_elementwise_kernel
E           cpdef function.Function _get_simple_elementwise_kernel(
E         File "cupy/core/_kernel.pyx", line 61, in cupy.core._kernel._get_simple_elementwise_kernel
E           module = compile_with_cache(module_code, options)
E         File "cupy/core/core.pyx", line 2021, in cupy.core.core.compile_with_cache
E           return cuda.compile_with_cache(
E         File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.t8hdvgF7FH/cupy/cupy/cuda/compiler.py", line 428, in compile_with_cache
E           return _compile_with_cache_hip(
E         File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.t8hdvgF7FH/cupy/cupy/cuda/compiler.py", line 829, in _compile_with_cache_hip
E           temp_path = tf.name
E         File "/home/kmaeh/.pyenv/versions/3.8.7/lib/python3.8/tempfile.py", line 491, in __exit__
E           result = self.file.__exit__(exc, value, tb)
E       OSError: [Errno 28] No space left on device

/home/kmaeh/.pyenv/versions/3.8.7/lib/python3.8/tempfile.py:491: AssertionError
----------------------------- Captured stdout call -----------------------------
{'dtype1': <class 'numpy.uint8'>, 'dtype2': <class 'numpy.uint8'>}
_____________________ TestVectorizeOps.test_vectorize_div ______________________

self = <cupy_tests.functional_tests.test_vectorize.TestVectorizeOps testMethod=test_vectorize_div>
xp = <module 'cupy' from '/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.t8hdvgF7FH/cupy/cupy/__init__.py'>
dtype1 = <class 'numpy.uint8'>, dtype2 = <class 'numpy.uint8'>

    @testing.for_all_dtypes_combination(names=('dtype1', 'dtype2'))
    @testing.numpy_cupy_allclose(rtol=1e-6)
    def test_vectorize_div(self, xp, dtype1, dtype2):
        def my_div(x, y):
            return x / y
    
>       return self.run_div(my_div, xp, [dtype1, dtype2])

tests/cupy_tests/functional_tests/test_vectorize.py:70: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
tests/cupy_tests/functional_tests/test_vectorize.py:61: in run_div
    x2[x2 == 0] = 1
cupy/core/core.pyx:1381: in cupy.core.core.ndarray.__setitem__
    _indexing._ndarray_setitem(self, slices, value)
cupy/core/_routines_indexing.pyx:54: in cupy.core._routines_indexing._ndarray_setitem
    _scatter_op(self, slices, value, 'update')
cupy/core/_routines_indexing.pyx:934: in cupy.core._routines_indexing._scatter_op
    _scatter_op_mask_single(a, mask, value, mask_i, op)
cupy/core/_routines_indexing.pyx:897: in cupy.core._routines_indexing._scatter_op_mask_single
    mask, mask_scanned, masked_shape = _prepare_mask_indexing_single(
cupy/core/_routines_indexing.pyx:706: in cupy.core._routines_indexing._prepare_mask_indexing_single
    mask_scanned = _math.scan(mask.ravel(), op=op, dtype=mask_type)
cupy/core/_routines_math.pyx:493: in cupy.core._routines_math.scan
    bsum_kernel(a, b, size=size // 2, block_size=chunk_size // 2)
cupy/core/_kernel.pyx:840: in cupy.core._kernel.ElementwiseKernel.__call__
    kern = self._get_elementwise_kernel(dev_id, arginfos, type_map)
cupy/core/_kernel.pyx:865: in cupy.core._kernel.ElementwiseKernel._get_elementwise_kernel
    kern = _get_elementwise_kernel(
cupy/_util.pyx:59: in cupy._util.memoize.decorator.ret
    result = f(*args, **kwargs)
cupy/core/_kernel.pyx:652: in cupy.core._kernel._get_elementwise_kernel
    return _get_simple_elementwise_kernel(
cupy/core/_kernel.pyx:38: in cupy.core._kernel._get_simple_elementwise_kernel
    cpdef function.Function _get_simple_elementwise_kernel(
cupy/core/_kernel.pyx:61: in cupy.core._kernel._get_simple_elementwise_kernel
    module = compile_with_cache(module_code, options)
cupy/core/core.pyx:2021: in cupy.core.core.compile_with_cache
    return cuda.compile_with_cache(
cupy/cuda/compiler.py:428: in compile_with_cache
    return _compile_with_cache_hip(
cupy/cuda/compiler.py:829: in _compile_with_cache_hip
    temp_path = tf.name
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <tempfile._TemporaryFileWrapper object at 0x7f50116e41c0>, exc = None
value = None, tb = None

    def __exit__(self, exc, value, tb):
>       result = self.file.__exit__(exc, value, tb)
E       AssertionError: Only cupy raises error
E       
E       Traceback (most recent call last):
E         File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.t8hdvgF7FH/cupy/cupy/testing/_helper.py", line 47, in _call_func
E           result = impl(self, *args, **kw)
E         File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.t8hdvgF7FH/cupy/tests/cupy_tests/functional_tests/test_vectorize.py", line 70, in test_vectorize_div
E           return self.run_div(my_div, xp, [dtype1, dtype2])
E         File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.t8hdvgF7FH/cupy/tests/cupy_tests/functional_tests/test_vectorize.py", line 61, in run_div
E           x2[x2 == 0] = 1
E         File "cupy/core/core.pyx", line 1381, in cupy.core.core.ndarray.__setitem__
E           _indexing._ndarray_setitem(self, slices, value)
E         File "cupy/core/_routines_indexing.pyx", line 54, in cupy.core._routines_indexing._ndarray_setitem
E           _scatter_op(self, slices, value, 'update')
E         File "cupy/core/_routines_indexing.pyx", line 934, in cupy.core._routines_indexing._scatter_op
E           _scatter_op_mask_single(a, mask, value, mask_i, op)
E         File "cupy/core/_routines_indexing.pyx", line 897, in cupy.core._routines_indexing._scatter_op_mask_single
E           mask, mask_scanned, masked_shape = _prepare_mask_indexing_single(
E         File "cupy/core/_routines_indexing.pyx", line 706, in cupy.core._routines_indexing._prepare_mask_indexing_single
E           mask_scanned = _math.scan(mask.ravel(), op=op, dtype=mask_type)
E         File "cupy/core/_routines_math.pyx", line 493, in cupy.core._routines_math.scan
E           bsum_kernel(a, b, size=size // 2, block_size=chunk_size // 2)
E         File "cupy/core/_kernel.pyx", line 840, in cupy.core._kernel.ElementwiseKernel.__call__
E           kern = self._get_elementwise_kernel(dev_id, arginfos, type_map)
E         File "cupy/core/_kernel.pyx", line 865, in cupy.core._kernel.ElementwiseKernel._get_elementwise_kernel
E           kern = _get_elementwise_kernel(
E         File "cupy/_util.pyx", line 59, in cupy._util.memoize.decorator.ret
E           result = f(*args, **kwargs)
E         File "cupy/core/_kernel.pyx", line 652, in cupy.core._kernel._get_elementwise_kernel
E           return _get_simple_elementwise_kernel(
E         File "cupy/core/_kernel.pyx", line 38, in cupy.core._kernel._get_simple_elementwise_kernel
E           cpdef function.Function _get_simple_elementwise_kernel(
E         File "cupy/core/_kernel.pyx", line 61, in cupy.core._kernel._get_simple_elementwise_kernel
E           module = compile_with_cache(module_code, options)
E         File "cupy/core/core.pyx", line 2021, in cupy.core.core.compile_with_cache
E           return cuda.compile_with_cache(
E         File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.t8hdvgF7FH/cupy/cupy/cuda/compiler.py", line 428, in compile_with_cache
E           return _compile_with_cache_hip(
E         File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.t8hdvgF7FH/cupy/cupy/cuda/compiler.py", line 829, in _compile_with_cache_hip
E           temp_path = tf.name
E         File "/home/kmaeh/.pyenv/versions/3.8.7/lib/python3.8/tempfile.py", line 491, in __exit__
E           result = self.file.__exit__(exc, value, tb)
E       OSError: [Errno 28] No space left on device

/home/kmaeh/.pyenv/versions/3.8.7/lib/python3.8/tempfile.py:491: AssertionError
----------------------------- Captured stdout call -----------------------------
{'dtype1': <class 'numpy.uint8'>, 'dtype2': <class 'numpy.uint8'>}
______________________ TestVectorizeOps.test_vectorize_eq ______________________

self = <cupy_tests.functional_tests.test_vectorize.TestVectorizeOps testMethod=test_vectorize_eq>
xp = <module 'cupy' from '/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.t8hdvgF7FH/cupy/cupy/__init__.py'>
dtype1 = <class 'numpy.uint8'>, dtype2 = <class 'numpy.uint8'>

    @testing.for_all_dtypes_combination(names=('dtype1', 'dtype2'))
    @testing.numpy_cupy_array_equal(accept_error=TypeError)
    def test_vectorize_eq(self, xp, dtype1, dtype2):
        def my_eq(x, y):
            return x == y
    
>       return self._run(my_eq, xp, [dtype1, dtype2])

tests/cupy_tests/functional_tests/test_vectorize.py:150: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
tests/cupy_tests/functional_tests/test_vectorize.py:18: in _run
    return f(*args)
cupy/_functional/vectorize.py:98: in __call__
    return kern(*args)
cupy/core/_kernel.pyx:840: in cupy.core._kernel.ElementwiseKernel.__call__
    kern = self._get_elementwise_kernel(dev_id, arginfos, type_map)
cupy/core/_kernel.pyx:865: in cupy.core._kernel.ElementwiseKernel._get_elementwise_kernel
    kern = _get_elementwise_kernel(
cupy/_util.pyx:59: in cupy._util.memoize.decorator.ret
    result = f(*args, **kwargs)
cupy/core/_kernel.pyx:652: in cupy.core._kernel._get_elementwise_kernel
    return _get_simple_elementwise_kernel(
cupy/core/_kernel.pyx:38: in cupy.core._kernel._get_simple_elementwise_kernel
    cpdef function.Function _get_simple_elementwise_kernel(
cupy/core/_kernel.pyx:61: in cupy.core._kernel._get_simple_elementwise_kernel
    module = compile_with_cache(module_code, options)
cupy/core/core.pyx:2021: in cupy.core.core.compile_with_cache
    return cuda.compile_with_cache(
cupy/cuda/compiler.py:428: in compile_with_cache
    return _compile_with_cache_hip(
cupy/cuda/compiler.py:829: in _compile_with_cache_hip
    temp_path = tf.name
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <tempfile._TemporaryFileWrapper object at 0x7f5011704ee0>, exc = None
value = None, tb = None

    def __exit__(self, exc, value, tb):
>       result = self.file.__exit__(exc, value, tb)
E       AssertionError: Only cupy raises error
E       
E       Traceback (most recent call last):
E         File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.t8hdvgF7FH/cupy/cupy/testing/_helper.py", line 47, in _call_func
E           result = impl(self, *args, **kw)
E         File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.t8hdvgF7FH/cupy/tests/cupy_tests/functional_tests/test_vectorize.py", line 150, in test_vectorize_eq
E           return self._run(my_eq, xp, [dtype1, dtype2])
E         File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.t8hdvgF7FH/cupy/tests/cupy_tests/functional_tests/test_vectorize.py", line 18, in _run
E           return f(*args)
E         File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.t8hdvgF7FH/cupy/cupy/_functional/vectorize.py", line 98, in __call__
E           return kern(*args)
E         File "cupy/core/_kernel.pyx", line 840, in cupy.core._kernel.ElementwiseKernel.__call__
E           kern = self._get_elementwise_kernel(dev_id, arginfos, type_map)
E         File "cupy/core/_kernel.pyx", line 865, in cupy.core._kernel.ElementwiseKernel._get_elementwise_kernel
E           kern = _get_elementwise_kernel(
E         File "cupy/_util.pyx", line 59, in cupy._util.memoize.decorator.ret
E           result = f(*args, **kwargs)
E         File "cupy/core/_kernel.pyx", line 652, in cupy.core._kernel._get_elementwise_kernel
E           return _get_simple_elementwise_kernel(
E         File "cupy/core/_kernel.pyx", line 38, in cupy.core._kernel._get_simple_elementwise_kernel
E           cpdef function.Function _get_simple_elementwise_kernel(
E         File "cupy/core/_kernel.pyx", line 61, in cupy.core._kernel._get_simple_elementwise_kernel
E           module = compile_with_cache(module_code, options)
E         File "cupy/core/core.pyx", line 2021, in cupy.core.core.compile_with_cache
E           return cuda.compile_with_cache(
E         File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.t8hdvgF7FH/cupy/cupy/cuda/compiler.py", line 428, in compile_with_cache
E           return _compile_with_cache_hip(
E         File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.t8hdvgF7FH/cupy/cupy/cuda/compiler.py", line 829, in _compile_with_cache_hip
E           temp_path = tf.name
E         File "/home/kmaeh/.pyenv/versions/3.8.7/lib/python3.8/tempfile.py", line 491, in __exit__
E           result = self.file.__exit__(exc, value, tb)
E       OSError: [Errno 28] No space left on device

/home/kmaeh/.pyenv/versions/3.8.7/lib/python3.8/tempfile.py:491: AssertionError
----------------------------- Captured stdout call -----------------------------
{'dtype1': <class 'numpy.uint8'>, 'dtype2': <class 'numpy.uint8'>}
__________________ TestVectorizeOps.test_vectorize_floor_div ___________________

self = <cupy_tests.functional_tests.test_vectorize.TestVectorizeOps testMethod=test_vectorize_floor_div>
xp = <module 'cupy' from '/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.t8hdvgF7FH/cupy/cupy/__init__.py'>
dtype1 = <class 'numpy.uint8'>, dtype2 = <class 'numpy.uint8'>

    @testing.for_all_dtypes_combination(names=('dtype1', 'dtype2'))
    @testing.numpy_cupy_allclose(accept_error=TypeError)
    def test_vectorize_floor_div(self, xp, dtype1, dtype2):
        def my_floor_div(x, y):
            return x // y
    
>       return self.run_div(my_floor_div, xp, [dtype1, dtype2])

tests/cupy_tests/functional_tests/test_vectorize.py:78: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
tests/cupy_tests/functional_tests/test_vectorize.py:61: in run_div
    x2[x2 == 0] = 1
cupy/core/core.pyx:1381: in cupy.core.core.ndarray.__setitem__
    _indexing._ndarray_setitem(self, slices, value)
cupy/core/_routines_indexing.pyx:54: in cupy.core._routines_indexing._ndarray_setitem
    _scatter_op(self, slices, value, 'update')
cupy/core/_routines_indexing.pyx:934: in cupy.core._routines_indexing._scatter_op
    _scatter_op_mask_single(a, mask, value, mask_i, op)
cupy/core/_routines_indexing.pyx:897: in cupy.core._routines_indexing._scatter_op_mask_single
    mask, mask_scanned, masked_shape = _prepare_mask_indexing_single(
cupy/core/_routines_indexing.pyx:706: in cupy.core._routines_indexing._prepare_mask_indexing_single
    mask_scanned = _math.scan(mask.ravel(), op=op, dtype=mask_type)
cupy/core/_routines_math.pyx:493: in cupy.core._routines_math.scan
    bsum_kernel(a, b, size=size // 2, block_size=chunk_size // 2)
cupy/core/_kernel.pyx:840: in cupy.core._kernel.ElementwiseKernel.__call__
    kern = self._get_elementwise_kernel(dev_id, arginfos, type_map)
cupy/core/_kernel.pyx:865: in cupy.core._kernel.ElementwiseKernel._get_elementwise_kernel
    kern = _get_elementwise_kernel(
cupy/_util.pyx:59: in cupy._util.memoize.decorator.ret
    result = f(*args, **kwargs)
cupy/core/_kernel.pyx:652: in cupy.core._kernel._get_elementwise_kernel
    return _get_simple_elementwise_kernel(
cupy/core/_kernel.pyx:38: in cupy.core._kernel._get_simple_elementwise_kernel
    cpdef function.Function _get_simple_elementwise_kernel(
cupy/core/_kernel.pyx:61: in cupy.core._kernel._get_simple_elementwise_kernel
    module = compile_with_cache(module_code, options)
cupy/core/core.pyx:2021: in cupy.core.core.compile_with_cache
    return cuda.compile_with_cache(
cupy/cuda/compiler.py:428: in compile_with_cache
    return _compile_with_cache_hip(
cupy/cuda/compiler.py:829: in _compile_with_cache_hip
    temp_path = tf.name
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <tempfile._TemporaryFileWrapper object at 0x7f5010f716d0>, exc = None
value = None, tb = None

    def __exit__(self, exc, value, tb):
>       result = self.file.__exit__(exc, value, tb)
E       AssertionError: Only cupy raises error
E       
E       Traceback (most recent call last):
E         File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.t8hdvgF7FH/cupy/cupy/testing/_helper.py", line 47, in _call_func
E           result = impl(self, *args, **kw)
E         File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.t8hdvgF7FH/cupy/tests/cupy_tests/functional_tests/test_vectorize.py", line 78, in test_vectorize_floor_div
E           return self.run_div(my_floor_div, xp, [dtype1, dtype2])
E         File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.t8hdvgF7FH/cupy/tests/cupy_tests/functional_tests/test_vectorize.py", line 61, in run_div
E           x2[x2 == 0] = 1
E         File "cupy/core/core.pyx", line 1381, in cupy.core.core.ndarray.__setitem__
E           _indexing._ndarray_setitem(self, slices, value)
E         File "cupy/core/_routines_indexing.pyx", line 54, in cupy.core._routines_indexing._ndarray_setitem
E           _scatter_op(self, slices, value, 'update')
E         File "cupy/core/_routines_indexing.pyx", line 934, in cupy.core._routines_indexing._scatter_op
E           _scatter_op_mask_single(a, mask, value, mask_i, op)
E         File "cupy/core/_routines_indexing.pyx", line 897, in cupy.core._routines_indexing._scatter_op_mask_single
E           mask, mask_scanned, masked_shape = _prepare_mask_indexing_single(
E         File "cupy/core/_routines_indexing.pyx", line 706, in cupy.core._routines_indexing._prepare_mask_indexing_single
E           mask_scanned = _math.scan(mask.ravel(), op=op, dtype=mask_type)
E         File "cupy/core/_routines_math.pyx", line 493, in cupy.core._routines_math.scan
E           bsum_kernel(a, b, size=size // 2, block_size=chunk_size // 2)
E         File "cupy/core/_kernel.pyx", line 840, in cupy.core._kernel.ElementwiseKernel.__call__
E           kern = self._get_elementwise_kernel(dev_id, arginfos, type_map)
E         File "cupy/core/_kernel.pyx", line 865, in cupy.core._kernel.ElementwiseKernel._get_elementwise_kernel
E           kern = _get_elementwise_kernel(
E         File "cupy/_util.pyx", line 59, in cupy._util.memoize.decorator.ret
E           result = f(*args, **kwargs)
E         File "cupy/core/_kernel.pyx", line 652, in cupy.core._kernel._get_elementwise_kernel
E           return _get_simple_elementwise_kernel(
E         File "cupy/core/_kernel.pyx", line 38, in cupy.core._kernel._get_simple_elementwise_kernel
E           cpdef function.Function _get_simple_elementwise_kernel(
E         File "cupy/core/_kernel.pyx", line 61, in cupy.core._kernel._get_simple_elementwise_kernel
E           module = compile_with_cache(module_code, options)
E         File "cupy/core/core.pyx", line 2021, in cupy.core.core.compile_with_cache
E           return cuda.compile_with_cache(
E         File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.t8hdvgF7FH/cupy/cupy/cuda/compiler.py", line 428, in compile_with_cache
E           return _compile_with_cache_hip(
E         File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.t8hdvgF7FH/cupy/cupy/cuda/compiler.py", line 829, in _compile_with_cache_hip
E           temp_path = tf.name
E         File "/home/kmaeh/.pyenv/versions/3.8.7/lib/python3.8/tempfile.py", line 491, in __exit__
E           result = self.file.__exit__(exc, value, tb)
E       OSError: [Errno 28] No space left on device

/home/kmaeh/.pyenv/versions/3.8.7/lib/python3.8/tempfile.py:491: AssertionError
----------------------------- Captured stdout call -----------------------------
{'dtype1': <class 'numpy.uint8'>, 'dtype2': <class 'numpy.uint8'>}
______________________ TestVectorizeOps.test_vectorize_ge ______________________

self = <cupy_tests.functional_tests.test_vectorize.TestVectorizeOps testMethod=test_vectorize_ge>
xp = <module 'cupy' from '/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.t8hdvgF7FH/cupy/cupy/__init__.py'>
dtype1 = <class 'numpy.uint8'>, dtype2 = <class 'numpy.uint8'>

    @testing.for_all_dtypes_combination(names=('dtype1', 'dtype2'))
    @testing.numpy_cupy_array_equal(accept_error=TypeError)
    def test_vectorize_ge(self, xp, dtype1, dtype2):
        def my_ge(x, y):
            return x >= y
    
>       return self._run(my_ge, xp, [dtype1, dtype2])

tests/cupy_tests/functional_tests/test_vectorize.py:190: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
tests/cupy_tests/functional_tests/test_vectorize.py:18: in _run
    return f(*args)
cupy/_functional/vectorize.py:98: in __call__
    return kern(*args)
cupy/core/_kernel.pyx:840: in cupy.core._kernel.ElementwiseKernel.__call__
    kern = self._get_elementwise_kernel(dev_id, arginfos, type_map)
cupy/core/_kernel.pyx:865: in cupy.core._kernel.ElementwiseKernel._get_elementwise_kernel
    kern = _get_elementwise_kernel(
cupy/_util.pyx:59: in cupy._util.memoize.decorator.ret
    result = f(*args, **kwargs)
cupy/core/_kernel.pyx:652: in cupy.core._kernel._get_elementwise_kernel
    return _get_simple_elementwise_kernel(
cupy/core/_kernel.pyx:38: in cupy.core._kernel._get_simple_elementwise_kernel
    cpdef function.Function _get_simple_elementwise_kernel(
cupy/core/_kernel.pyx:61: in cupy.core._kernel._get_simple_elementwise_kernel
    module = compile_with_cache(module_code, options)
cupy/core/core.pyx:2021: in cupy.core.core.compile_with_cache
    return cuda.compile_with_cache(
cupy/cuda/compiler.py:428: in compile_with_cache
    return _compile_with_cache_hip(
cupy/cuda/compiler.py:829: in _compile_with_cache_hip
    temp_path = tf.name
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <tempfile._TemporaryFileWrapper object at 0x7f577c1d7be0>, exc = None
value = None, tb = None

    def __exit__(self, exc, value, tb):
>       result = self.file.__exit__(exc, value, tb)
E       AssertionError: Only cupy raises error
E       
E       Traceback (most recent call last):
E         File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.t8hdvgF7FH/cupy/cupy/testing/_helper.py", line 47, in _call_func
E           result = impl(self, *args, **kw)
E         File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.t8hdvgF7FH/cupy/tests/cupy_tests/functional_tests/test_vectorize.py", line 190, in test_vectorize_ge
E           return self._run(my_ge, xp, [dtype1, dtype2])
E         File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.t8hdvgF7FH/cupy/tests/cupy_tests/functional_tests/test_vectorize.py", line 18, in _run
E           return f(*args)
E         File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.t8hdvgF7FH/cupy/cupy/_functional/vectorize.py", line 98, in __call__
E           return kern(*args)
E         File "cupy/core/_kernel.pyx", line 840, in cupy.core._kernel.ElementwiseKernel.__call__
E           kern = self._get_elementwise_kernel(dev_id, arginfos, type_map)
E         File "cupy/core/_kernel.pyx", line 865, in cupy.core._kernel.ElementwiseKernel._get_elementwise_kernel
E           kern = _get_elementwise_kernel(
E         File "cupy/_util.pyx", line 59, in cupy._util.memoize.decorator.ret
E           result = f(*args, **kwargs)
E         File "cupy/core/_kernel.pyx", line 652, in cupy.core._kernel._get_elementwise_kernel
E           return _get_simple_elementwise_kernel(
E         File "cupy/core/_kernel.pyx", line 38, in cupy.core._kernel._get_simple_elementwise_kernel
E           cpdef function.Function _get_simple_elementwise_kernel(
E         File "cupy/core/_kernel.pyx", line 61, in cupy.core._kernel._get_simple_elementwise_kernel
E           module = compile_with_cache(module_code, options)
E         File "cupy/core/core.pyx", line 2021, in cupy.core.core.compile_with_cache
E           return cuda.compile_with_cache(
E         File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.t8hdvgF7FH/cupy/cupy/cuda/compiler.py", line 428, in compile_with_cache
E           return _compile_with_cache_hip(
E         File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.t8hdvgF7FH/cupy/cupy/cuda/compiler.py", line 829, in _compile_with_cache_hip
E           temp_path = tf.name
E         File "/home/kmaeh/.pyenv/versions/3.8.7/lib/python3.8/tempfile.py", line 491, in __exit__
E           result = self.file.__exit__(exc, value, tb)
E       OSError: [Errno 28] No space left on device

/home/kmaeh/.pyenv/versions/3.8.7/lib/python3.8/tempfile.py:491: AssertionError
----------------------------- Captured stdout call -----------------------------
{'dtype1': <class 'numpy.uint8'>, 'dtype2': <class 'numpy.uint8'>}
______________________ TestVectorizeOps.test_vectorize_gt ______________________

self = <cupy_tests.functional_tests.test_vectorize.TestVectorizeOps testMethod=test_vectorize_gt>
xp = <module 'cupy' from '/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.t8hdvgF7FH/cupy/cupy/__init__.py'>
dtype1 = <class 'numpy.uint8'>, dtype2 = <class 'numpy.uint8'>

    @testing.for_all_dtypes_combination(names=('dtype1', 'dtype2'))
    @testing.numpy_cupy_array_equal(accept_error=TypeError)
    def test_vectorize_gt(self, xp, dtype1, dtype2):
        def my_gt(x, y):
            return x > y
    
>       return self._run(my_gt, xp, [dtype1, dtype2])

tests/cupy_tests/functional_tests/test_vectorize.py:182: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
tests/cupy_tests/functional_tests/test_vectorize.py:18: in _run
    return f(*args)
cupy/_functional/vectorize.py:98: in __call__
    return kern(*args)
cupy/core/_kernel.pyx:840: in cupy.core._kernel.ElementwiseKernel.__call__
    kern = self._get_elementwise_kernel(dev_id, arginfos, type_map)
cupy/core/_kernel.pyx:865: in cupy.core._kernel.ElementwiseKernel._get_elementwise_kernel
    kern = _get_elementwise_kernel(
cupy/_util.pyx:59: in cupy._util.memoize.decorator.ret
    result = f(*args, **kwargs)
cupy/core/_kernel.pyx:652: in cupy.core._kernel._get_elementwise_kernel
    return _get_simple_elementwise_kernel(
cupy/core/_kernel.pyx:38: in cupy.core._kernel._get_simple_elementwise_kernel
    cpdef function.Function _get_simple_elementwise_kernel(
cupy/core/_kernel.pyx:61: in cupy.core._kernel._get_simple_elementwise_kernel
    module = compile_with_cache(module_code, options)
cupy/core/core.pyx:2021: in cupy.core.core.compile_with_cache
    return cuda.compile_with_cache(
cupy/cuda/compiler.py:428: in compile_with_cache
    return _compile_with_cache_hip(
cupy/cuda/compiler.py:829: in _compile_with_cache_hip
    temp_path = tf.name
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <tempfile._TemporaryFileWrapper object at 0x7f50109a7670>, exc = None
value = None, tb = None

    def __exit__(self, exc, value, tb):
>       result = self.file.__exit__(exc, value, tb)
E       AssertionError: Only cupy raises error
E       
E       Traceback (most recent call last):
E         File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.t8hdvgF7FH/cupy/cupy/testing/_helper.py", line 47, in _call_func
E           result = impl(self, *args, **kw)
E         File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.t8hdvgF7FH/cupy/tests/cupy_tests/functional_tests/test_vectorize.py", line 182, in test_vectorize_gt
E           return self._run(my_gt, xp, [dtype1, dtype2])
E         File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.t8hdvgF7FH/cupy/tests/cupy_tests/functional_tests/test_vectorize.py", line 18, in _run
E           return f(*args)
E         File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.t8hdvgF7FH/cupy/cupy/_functional/vectorize.py", line 98, in __call__
E           return kern(*args)
E         File "cupy/core/_kernel.pyx", line 840, in cupy.core._kernel.ElementwiseKernel.__call__
E           kern = self._get_elementwise_kernel(dev_id, arginfos, type_map)
E         File "cupy/core/_kernel.pyx", line 865, in cupy.core._kernel.ElementwiseKernel._get_elementwise_kernel
E           kern = _get_elementwise_kernel(
E         File "cupy/_util.pyx", line 59, in cupy._util.memoize.decorator.ret
E           result = f(*args, **kwargs)
E         File "cupy/core/_kernel.pyx", line 652, in cupy.core._kernel._get_elementwise_kernel
E           return _get_simple_elementwise_kernel(
E         File "cupy/core/_kernel.pyx", line 38, in cupy.core._kernel._get_simple_elementwise_kernel
E           cpdef function.Function _get_simple_elementwise_kernel(
E         File "cupy/core/_kernel.pyx", line 61, in cupy.core._kernel._get_simple_elementwise_kernel
E           module = compile_with_cache(module_code, options)
E         File "cupy/core/core.pyx", line 2021, in cupy.core.core.compile_with_cache
E           return cuda.compile_with_cache(
E         File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.t8hdvgF7FH/cupy/cupy/cuda/compiler.py", line 428, in compile_with_cache
E           return _compile_with_cache_hip(
E         File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.t8hdvgF7FH/cupy/cupy/cuda/compiler.py", line 829, in _compile_with_cache_hip
E           temp_path = tf.name
E         File "/home/kmaeh/.pyenv/versions/3.8.7/lib/python3.8/tempfile.py", line 491, in __exit__
E           result = self.file.__exit__(exc, value, tb)
E       OSError: [Errno 28] No space left on device

/home/kmaeh/.pyenv/versions/3.8.7/lib/python3.8/tempfile.py:491: AssertionError
----------------------------- Captured stdout call -----------------------------
{'dtype1': <class 'numpy.uint8'>, 'dtype2': <class 'numpy.uint8'>}
______________________ TestVectorizeOps.test_vectorize_le ______________________

self = <cupy_tests.functional_tests.test_vectorize.TestVectorizeOps testMethod=test_vectorize_le>
xp = <module 'cupy' from '/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.t8hdvgF7FH/cupy/cupy/__init__.py'>
dtype1 = <class 'numpy.uint8'>, dtype2 = <class 'numpy.uint8'>

    @testing.for_all_dtypes_combination(names=('dtype1', 'dtype2'))
    @testing.numpy_cupy_array_equal(accept_error=TypeError)
    def test_vectorize_le(self, xp, dtype1, dtype2):
        def my_le(x, y):
            return x <= y
    
>       return self._run(my_le, xp, [dtype1, dtype2])

tests/cupy_tests/functional_tests/test_vectorize.py:174: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
tests/cupy_tests/functional_tests/test_vectorize.py:18: in _run
    return f(*args)
cupy/_functional/vectorize.py:98: in __call__
    return kern(*args)
cupy/core/_kernel.pyx:840: in cupy.core._kernel.ElementwiseKernel.__call__
    kern = self._get_elementwise_kernel(dev_id, arginfos, type_map)
cupy/core/_kernel.pyx:865: in cupy.core._kernel.ElementwiseKernel._get_elementwise_kernel
    kern = _get_elementwise_kernel(
cupy/_util.pyx:59: in cupy._util.memoize.decorator.ret
    result = f(*args, **kwargs)
cupy/core/_kernel.pyx:652: in cupy.core._kernel._get_elementwise_kernel
    return _get_simple_elementwise_kernel(
cupy/core/_kernel.pyx:38: in cupy.core._kernel._get_simple_elementwise_kernel
    cpdef function.Function _get_simple_elementwise_kernel(
cupy/core/_kernel.pyx:61: in cupy.core._kernel._get_simple_elementwise_kernel
    module = compile_with_cache(module_code, options)
cupy/core/core.pyx:2021: in cupy.core.core.compile_with_cache
    return cuda.compile_with_cache(
cupy/cuda/compiler.py:428: in compile_with_cache
    return _compile_with_cache_hip(
cupy/cuda/compiler.py:829: in _compile_with_cache_hip
    temp_path = tf.name
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <tempfile._TemporaryFileWrapper object at 0x7f5010ea24f0>, exc = None
value = None, tb = None

    def __exit__(self, exc, value, tb):
>       result = self.file.__exit__(exc, value, tb)
E       AssertionError: Only cupy raises error
E       
E       Traceback (most recent call last):
E         File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.t8hdvgF7FH/cupy/cupy/testing/_helper.py", line 47, in _call_func
E           result = impl(self, *args, **kw)
E         File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.t8hdvgF7FH/cupy/tests/cupy_tests/functional_tests/test_vectorize.py", line 174, in test_vectorize_le
E           return self._run(my_le, xp, [dtype1, dtype2])
E         File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.t8hdvgF7FH/cupy/tests/cupy_tests/functional_tests/test_vectorize.py", line 18, in _run
E           return f(*args)
E         File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.t8hdvgF7FH/cupy/cupy/_functional/vectorize.py", line 98, in __call__
E           return kern(*args)
E         File "cupy/core/_kernel.pyx", line 840, in cupy.core._kernel.ElementwiseKernel.__call__
E           kern = self._get_elementwise_kernel(dev_id, arginfos, type_map)
E         File "cupy/core/_kernel.pyx", line 865, in cupy.core._kernel.ElementwiseKernel._get_elementwise_kernel
E           kern = _get_elementwise_kernel(
E         File "cupy/_util.pyx", line 59, in cupy._util.memoize.decorator.ret
E           result = f(*args, **kwargs)
E         File "cupy/core/_kernel.pyx", line 652, in cupy.core._kernel._get_elementwise_kernel
E           return _get_simple_elementwise_kernel(
E         File "cupy/core/_kernel.pyx", line 38, in cupy.core._kernel._get_simple_elementwise_kernel
E           cpdef function.Function _get_simple_elementwise_kernel(
E         File "cupy/core/_kernel.pyx", line 61, in cupy.core._kernel._get_simple_elementwise_kernel
E           module = compile_with_cache(module_code, options)
E         File "cupy/core/core.pyx", line 2021, in cupy.core.core.compile_with_cache
E           return cuda.compile_with_cache(
E         File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.t8hdvgF7FH/cupy/cupy/cuda/compiler.py", line 428, in compile_with_cache
E           return _compile_with_cache_hip(
E         File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.t8hdvgF7FH/cupy/cupy/cuda/compiler.py", line 829, in _compile_with_cache_hip
E           temp_path = tf.name
E         File "/home/kmaeh/.pyenv/versions/3.8.7/lib/python3.8/tempfile.py", line 491, in __exit__
E           result = self.file.__exit__(exc, value, tb)
E       OSError: [Errno 28] No space left on device

/home/kmaeh/.pyenv/versions/3.8.7/lib/python3.8/tempfile.py:491: AssertionError
----------------------------- Captured stdout call -----------------------------
{'dtype1': <class 'numpy.uint8'>, 'dtype2': <class 'numpy.uint8'>}
_________________ TestVectorizeOps.test_vectorize_logical_not __________________

self = <cupy_tests.functional_tests.test_vectorize.TestVectorizeOps testMethod=test_vectorize_logical_not>
xp = <module 'cupy' from '/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.t8hdvgF7FH/cupy/cupy/__init__.py'>
dtype = <class 'numpy.float64'>

    @testing.for_all_dtypes()
    @testing.numpy_cupy_array_equal(accept_error=TypeError)
    def test_vectorize_logical_not(self, xp, dtype):
        def my_logical_not(x):
            return not x
    
>       return self._run(my_logical_not, xp, [dtype])

tests/cupy_tests/functional_tests/test_vectorize.py:142: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
tests/cupy_tests/functional_tests/test_vectorize.py:18: in _run
    return f(*args)
cupy/_functional/vectorize.py:98: in __call__
    return kern(*args)
cupy/core/_kernel.pyx:840: in cupy.core._kernel.ElementwiseKernel.__call__
    kern = self._get_elementwise_kernel(dev_id, arginfos, type_map)
cupy/core/_kernel.pyx:865: in cupy.core._kernel.ElementwiseKernel._get_elementwise_kernel
    kern = _get_elementwise_kernel(
cupy/_util.pyx:59: in cupy._util.memoize.decorator.ret
    result = f(*args, **kwargs)
cupy/core/_kernel.pyx:652: in cupy.core._kernel._get_elementwise_kernel
    return _get_simple_elementwise_kernel(
cupy/core/_kernel.pyx:38: in cupy.core._kernel._get_simple_elementwise_kernel
    cpdef function.Function _get_simple_elementwise_kernel(
cupy/core/_kernel.pyx:61: in cupy.core._kernel._get_simple_elementwise_kernel
    module = compile_with_cache(module_code, options)
cupy/core/core.pyx:2021: in cupy.core.core.compile_with_cache
    return cuda.compile_with_cache(
cupy/cuda/compiler.py:428: in compile_with_cache
    return _compile_with_cache_hip(
cupy/cuda/compiler.py:829: in _compile_with_cache_hip
    temp_path = tf.name
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <tempfile._TemporaryFileWrapper object at 0x7f501097ca60>, exc = None
value = None, tb = None

    def __exit__(self, exc, value, tb):
>       result = self.file.__exit__(exc, value, tb)
E       AssertionError: Only cupy raises error
E       
E       Traceback (most recent call last):
E         File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.t8hdvgF7FH/cupy/cupy/testing/_helper.py", line 47, in _call_func
E           result = impl(self, *args, **kw)
E         File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.t8hdvgF7FH/cupy/tests/cupy_tests/functional_tests/test_vectorize.py", line 142, in test_vectorize_logical_not
E           return self._run(my_logical_not, xp, [dtype])
E         File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.t8hdvgF7FH/cupy/tests/cupy_tests/functional_tests/test_vectorize.py", line 18, in _run
E           return f(*args)
E         File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.t8hdvgF7FH/cupy/cupy/_functional/vectorize.py", line 98, in __call__
E           return kern(*args)
E         File "cupy/core/_kernel.pyx", line 840, in cupy.core._kernel.ElementwiseKernel.__call__
E           kern = self._get_elementwise_kernel(dev_id, arginfos, type_map)
E         File "cupy/core/_kernel.pyx", line 865, in cupy.core._kernel.ElementwiseKernel._get_elementwise_kernel
E           kern = _get_elementwise_kernel(
E         File "cupy/_util.pyx", line 59, in cupy._util.memoize.decorator.ret
E           result = f(*args, **kwargs)
E         File "cupy/core/_kernel.pyx", line 652, in cupy.core._kernel._get_elementwise_kernel
E           return _get_simple_elementwise_kernel(
E         File "cupy/core/_kernel.pyx", line 38, in cupy.core._kernel._get_simple_elementwise_kernel
E           cpdef function.Function _get_simple_elementwise_kernel(
E         File "cupy/core/_kernel.pyx", line 61, in cupy.core._kernel._get_simple_elementwise_kernel
E           module = compile_with_cache(module_code, options)
E         File "cupy/core/core.pyx", line 2021, in cupy.core.core.compile_with_cache
E           return cuda.compile_with_cache(
E         File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.t8hdvgF7FH/cupy/cupy/cuda/compiler.py", line 428, in compile_with_cache
E           return _compile_with_cache_hip(
E         File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.t8hdvgF7FH/cupy/cupy/cuda/compiler.py", line 829, in _compile_with_cache_hip
E           temp_path = tf.name
E         File "/home/kmaeh/.pyenv/versions/3.8.7/lib/python3.8/tempfile.py", line 491, in __exit__
E           result = self.file.__exit__(exc, value, tb)
E       OSError: [Errno 28] No space left on device

/home/kmaeh/.pyenv/versions/3.8.7/lib/python3.8/tempfile.py:491: AssertionError
----------------------------- Captured stdout call -----------------------------
dtype is <class 'numpy.float64'>
____________________ TestVectorizeOps.test_vectorize_lshift ____________________

self = <cupy_tests.functional_tests.test_vectorize.TestVectorizeOps testMethod=test_vectorize_lshift>
xp = <module 'cupy' from '/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.t8hdvgF7FH/cupy/cupy/__init__.py'>
dtype1 = <class 'numpy.uint8'>, dtype2 = <class 'numpy.uint8'>

    @testing.for_all_dtypes_combination(names=('dtype1', 'dtype2'))
    @testing.numpy_cupy_array_equal(accept_error=TypeError)
    def test_vectorize_lshift(self, xp, dtype1, dtype2):
        def my_lshift(x, y):
            return x << y
    
>       return self._run(my_lshift, xp, [dtype1, dtype2])

tests/cupy_tests/functional_tests/test_vectorize.py:94: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
tests/cupy_tests/functional_tests/test_vectorize.py:18: in _run
    return f(*args)
cupy/_functional/vectorize.py:98: in __call__
    return kern(*args)
cupy/core/_kernel.pyx:840: in cupy.core._kernel.ElementwiseKernel.__call__
    kern = self._get_elementwise_kernel(dev_id, arginfos, type_map)
cupy/core/_kernel.pyx:865: in cupy.core._kernel.ElementwiseKernel._get_elementwise_kernel
    kern = _get_elementwise_kernel(
cupy/_util.pyx:59: in cupy._util.memoize.decorator.ret
    result = f(*args, **kwargs)
cupy/core/_kernel.pyx:652: in cupy.core._kernel._get_elementwise_kernel
    return _get_simple_elementwise_kernel(
cupy/core/_kernel.pyx:38: in cupy.core._kernel._get_simple_elementwise_kernel
    cpdef function.Function _get_simple_elementwise_kernel(
cupy/core/_kernel.pyx:61: in cupy.core._kernel._get_simple_elementwise_kernel
    module = compile_with_cache(module_code, options)
cupy/core/core.pyx:2021: in cupy.core.core.compile_with_cache
    return cuda.compile_with_cache(
cupy/cuda/compiler.py:428: in compile_with_cache
    return _compile_with_cache_hip(
cupy/cuda/compiler.py:829: in _compile_with_cache_hip
    temp_path = tf.name
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <tempfile._TemporaryFileWrapper object at 0x7f5011702100>, exc = None
value = None, tb = None

    def __exit__(self, exc, value, tb):
>       result = self.file.__exit__(exc, value, tb)
E       AssertionError: Only cupy raises error
E       
E       Traceback (most recent call last):
E         File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.t8hdvgF7FH/cupy/cupy/testing/_helper.py", line 47, in _call_func
E           result = impl(self, *args, **kw)
E         File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.t8hdvgF7FH/cupy/tests/cupy_tests/functional_tests/test_vectorize.py", line 94, in test_vectorize_lshift
E           return self._run(my_lshift, xp, [dtype1, dtype2])
E         File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.t8hdvgF7FH/cupy/tests/cupy_tests/functional_tests/test_vectorize.py", line 18, in _run
E           return f(*args)
E         File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.t8hdvgF7FH/cupy/cupy/_functional/vectorize.py", line 98, in __call__
E           return kern(*args)
E         File "cupy/core/_kernel.pyx", line 840, in cupy.core._kernel.ElementwiseKernel.__call__
E           kern = self._get_elementwise_kernel(dev_id, arginfos, type_map)
E         File "cupy/core/_kernel.pyx", line 865, in cupy.core._kernel.ElementwiseKernel._get_elementwise_kernel
E           kern = _get_elementwise_kernel(
E         File "cupy/_util.pyx", line 59, in cupy._util.memoize.decorator.ret
E           result = f(*args, **kwargs)
E         File "cupy/core/_kernel.pyx", line 652, in cupy.core._kernel._get_elementwise_kernel
E           return _get_simple_elementwise_kernel(
E         File "cupy/core/_kernel.pyx", line 38, in cupy.core._kernel._get_simple_elementwise_kernel
E           cpdef function.Function _get_simple_elementwise_kernel(
E         File "cupy/core/_kernel.pyx", line 61, in cupy.core._kernel._get_simple_elementwise_kernel
E           module = compile_with_cache(module_code, options)
E         File "cupy/core/core.pyx", line 2021, in cupy.core.core.compile_with_cache
E           return cuda.compile_with_cache(
E         File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.t8hdvgF7FH/cupy/cupy/cuda/compiler.py", line 428, in compile_with_cache
E           return _compile_with_cache_hip(
E         File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.t8hdvgF7FH/cupy/cupy/cuda/compiler.py", line 829, in _compile_with_cache_hip
E           temp_path = tf.name
E         File "/home/kmaeh/.pyenv/versions/3.8.7/lib/python3.8/tempfile.py", line 491, in __exit__
E           result = self.file.__exit__(exc, value, tb)
E       OSError: [Errno 28] No space left on device

/home/kmaeh/.pyenv/versions/3.8.7/lib/python3.8/tempfile.py:491: AssertionError
----------------------------- Captured stdout call -----------------------------
{'dtype1': <class 'numpy.uint8'>, 'dtype2': <class 'numpy.uint8'>}
______________________ TestVectorizeOps.test_vectorize_lt ______________________

self = <cupy_tests.functional_tests.test_vectorize.TestVectorizeOps testMethod=test_vectorize_lt>
xp = <module 'cupy' from '/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.t8hdvgF7FH/cupy/cupy/__init__.py'>
dtype1 = <class 'numpy.uint8'>, dtype2 = <class 'numpy.uint8'>

    @testing.for_all_dtypes_combination(names=('dtype1', 'dtype2'))
    @testing.numpy_cupy_array_equal(accept_error=TypeError)
    def test_vectorize_lt(self, xp, dtype1, dtype2):
        def my_lt(x, y):
            return x < y
    
>       return self._run(my_lt, xp, [dtype1, dtype2])

tests/cupy_tests/functional_tests/test_vectorize.py:166: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
tests/cupy_tests/functional_tests/test_vectorize.py:18: in _run
    return f(*args)
cupy/_functional/vectorize.py:98: in __call__
    return kern(*args)
cupy/core/_kernel.pyx:840: in cupy.core._kernel.ElementwiseKernel.__call__
    kern = self._get_elementwise_kernel(dev_id, arginfos, type_map)
cupy/core/_kernel.pyx:865: in cupy.core._kernel.ElementwiseKernel._get_elementwise_kernel
    kern = _get_elementwise_kernel(
cupy/_util.pyx:59: in cupy._util.memoize.decorator.ret
    result = f(*args, **kwargs)
cupy/core/_kernel.pyx:652: in cupy.core._kernel._get_elementwise_kernel
    return _get_simple_elementwise_kernel(
cupy/core/_kernel.pyx:38: in cupy.core._kernel._get_simple_elementwise_kernel
    cpdef function.Function _get_simple_elementwise_kernel(
cupy/core/_kernel.pyx:61: in cupy.core._kernel._get_simple_elementwise_kernel
    module = compile_with_cache(module_code, options)
cupy/core/core.pyx:2021: in cupy.core.core.compile_with_cache
    return cuda.compile_with_cache(
cupy/cuda/compiler.py:428: in compile_with_cache
    return _compile_with_cache_hip(
cupy/cuda/compiler.py:829: in _compile_with_cache_hip
    temp_path = tf.name
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <tempfile._TemporaryFileWrapper object at 0x7f5010e827f0>, exc = None
value = None, tb = None

    def __exit__(self, exc, value, tb):
>       result = self.file.__exit__(exc, value, tb)
E       AssertionError: Only cupy raises error
E       
E       Traceback (most recent call last):
E         File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.t8hdvgF7FH/cupy/cupy/testing/_helper.py", line 47, in _call_func
E           result = impl(self, *args, **kw)
E         File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.t8hdvgF7FH/cupy/tests/cupy_tests/functional_tests/test_vectorize.py", line 166, in test_vectorize_lt
E           return self._run(my_lt, xp, [dtype1, dtype2])
E         File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.t8hdvgF7FH/cupy/tests/cupy_tests/functional_tests/test_vectorize.py", line 18, in _run
E           return f(*args)
E         File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.t8hdvgF7FH/cupy/cupy/_functional/vectorize.py", line 98, in __call__
E           return kern(*args)
E         File "cupy/core/_kernel.pyx", line 840, in cupy.core._kernel.ElementwiseKernel.__call__
E           kern = self._get_elementwise_kernel(dev_id, arginfos, type_map)
E         File "cupy/core/_kernel.pyx", line 865, in cupy.core._kernel.ElementwiseKernel._get_elementwise_kernel
E           kern = _get_elementwise_kernel(
E         File "cupy/_util.pyx", line 59, in cupy._util.memoize.decorator.ret
E           result = f(*args, **kwargs)
E         File "cupy/core/_kernel.pyx", line 652, in cupy.core._kernel._get_elementwise_kernel
E           return _get_simple_elementwise_kernel(
E         File "cupy/core/_kernel.pyx", line 38, in cupy.core._kernel._get_simple_elementwise_kernel
E           cpdef function.Function _get_simple_elementwise_kernel(
E         File "cupy/core/_kernel.pyx", line 61, in cupy.core._kernel._get_simple_elementwise_kernel
E           module = compile_with_cache(module_code, options)
E         File "cupy/core/core.pyx", line 2021, in cupy.core.core.compile_with_cache
E           return cuda.compile_with_cache(
E         File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.t8hdvgF7FH/cupy/cupy/cuda/compiler.py", line 428, in compile_with_cache
E           return _compile_with_cache_hip(
E         File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.t8hdvgF7FH/cupy/cupy/cuda/compiler.py", line 829, in _compile_with_cache_hip
E           temp_path = tf.name
E         File "/home/kmaeh/.pyenv/versions/3.8.7/lib/python3.8/tempfile.py", line 491, in __exit__
E           result = self.file.__exit__(exc, value, tb)
E       OSError: [Errno 28] No space left on device

/home/kmaeh/.pyenv/versions/3.8.7/lib/python3.8/tempfile.py:491: AssertionError
----------------------------- Captured stdout call -----------------------------
{'dtype1': <class 'numpy.uint8'>, 'dtype2': <class 'numpy.uint8'>}
_____________________ TestVectorizeOps.test_vectorize_mod ______________________

self = <cupy_tests.functional_tests.test_vectorize.TestVectorizeOps testMethod=test_vectorize_mod>
xp = <module 'cupy' from '/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.t8hdvgF7FH/cupy/cupy/__init__.py'>
dtype1 = <class 'numpy.uint8'>, dtype2 = <class 'numpy.uint8'>

    @testing.for_all_dtypes_combination(names=('dtype1', 'dtype2'))
    @testing.numpy_cupy_allclose(accept_error=TypeError)
    def test_vectorize_mod(self, xp, dtype1, dtype2):
        def my_mod(x, y):
            return x % y
    
>       return self.run_div(my_mod, xp, [dtype1, dtype2])

tests/cupy_tests/functional_tests/test_vectorize.py:86: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
tests/cupy_tests/functional_tests/test_vectorize.py:61: in run_div
    x2[x2 == 0] = 1
cupy/core/core.pyx:1381: in cupy.core.core.ndarray.__setitem__
    _indexing._ndarray_setitem(self, slices, value)
cupy/core/_routines_indexing.pyx:54: in cupy.core._routines_indexing._ndarray_setitem
    _scatter_op(self, slices, value, 'update')
cupy/core/_routines_indexing.pyx:934: in cupy.core._routines_indexing._scatter_op
    _scatter_op_mask_single(a, mask, value, mask_i, op)
cupy/core/_routines_indexing.pyx:897: in cupy.core._routines_indexing._scatter_op_mask_single
    mask, mask_scanned, masked_shape = _prepare_mask_indexing_single(
cupy/core/_routines_indexing.pyx:706: in cupy.core._routines_indexing._prepare_mask_indexing_single
    mask_scanned = _math.scan(mask.ravel(), op=op, dtype=mask_type)
cupy/core/_routines_math.pyx:493: in cupy.core._routines_math.scan
    bsum_kernel(a, b, size=size // 2, block_size=chunk_size // 2)
cupy/core/_kernel.pyx:840: in cupy.core._kernel.ElementwiseKernel.__call__
    kern = self._get_elementwise_kernel(dev_id, arginfos, type_map)
cupy/core/_kernel.pyx:865: in cupy.core._kernel.ElementwiseKernel._get_elementwise_kernel
    kern = _get_elementwise_kernel(
cupy/_util.pyx:59: in cupy._util.memoize.decorator.ret
    result = f(*args, **kwargs)
cupy/core/_kernel.pyx:652: in cupy.core._kernel._get_elementwise_kernel
    return _get_simple_elementwise_kernel(
cupy/core/_kernel.pyx:38: in cupy.core._kernel._get_simple_elementwise_kernel
    cpdef function.Function _get_simple_elementwise_kernel(
cupy/core/_kernel.pyx:61: in cupy.core._kernel._get_simple_elementwise_kernel
    module = compile_with_cache(module_code, options)
cupy/core/core.pyx:2021: in cupy.core.core.compile_with_cache
    return cuda.compile_with_cache(
cupy/cuda/compiler.py:428: in compile_with_cache
    return _compile_with_cache_hip(
cupy/cuda/compiler.py:829: in _compile_with_cache_hip
    temp_path = tf.name
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <tempfile._TemporaryFileWrapper object at 0x7f50116d3220>, exc = None
value = None, tb = None

    def __exit__(self, exc, value, tb):
>       result = self.file.__exit__(exc, value, tb)
E       AssertionError: Only cupy raises error
E       
E       Traceback (most recent call last):
E         File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.t8hdvgF7FH/cupy/cupy/testing/_helper.py", line 47, in _call_func
E           result = impl(self, *args, **kw)
E         File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.t8hdvgF7FH/cupy/tests/cupy_tests/functional_tests/test_vectorize.py", line 86, in test_vectorize_mod
E           return self.run_div(my_mod, xp, [dtype1, dtype2])
E         File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.t8hdvgF7FH/cupy/tests/cupy_tests/functional_tests/test_vectorize.py", line 61, in run_div
E           x2[x2 == 0] = 1
E         File "cupy/core/core.pyx", line 1381, in cupy.core.core.ndarray.__setitem__
E           _indexing._ndarray_setitem(self, slices, value)
E         File "cupy/core/_routines_indexing.pyx", line 54, in cupy.core._routines_indexing._ndarray_setitem
E           _scatter_op(self, slices, value, 'update')
E         File "cupy/core/_routines_indexing.pyx", line 934, in cupy.core._routines_indexing._scatter_op
E           _scatter_op_mask_single(a, mask, value, mask_i, op)
E         File "cupy/core/_routines_indexing.pyx", line 897, in cupy.core._routines_indexing._scatter_op_mask_single
E           mask, mask_scanned, masked_shape = _prepare_mask_indexing_single(
E         File "cupy/core/_routines_indexing.pyx", line 706, in cupy.core._routines_indexing._prepare_mask_indexing_single
E           mask_scanned = _math.scan(mask.ravel(), op=op, dtype=mask_type)
E         File "cupy/core/_routines_math.pyx", line 493, in cupy.core._routines_math.scan
E           bsum_kernel(a, b, size=size // 2, block_size=chunk_size // 2)
E         File "cupy/core/_kernel.pyx", line 840, in cupy.core._kernel.ElementwiseKernel.__call__
E           kern = self._get_elementwise_kernel(dev_id, arginfos, type_map)
E         File "cupy/core/_kernel.pyx", line 865, in cupy.core._kernel.ElementwiseKernel._get_elementwise_kernel
E           kern = _get_elementwise_kernel(
E         File "cupy/_util.pyx", line 59, in cupy._util.memoize.decorator.ret
E           result = f(*args, **kwargs)
E         File "cupy/core/_kernel.pyx", line 652, in cupy.core._kernel._get_elementwise_kernel
E           return _get_simple_elementwise_kernel(
E         File "cupy/core/_kernel.pyx", line 38, in cupy.core._kernel._get_simple_elementwise_kernel
E           cpdef function.Function _get_simple_elementwise_kernel(
E         File "cupy/core/_kernel.pyx", line 61, in cupy.core._kernel._get_simple_elementwise_kernel
E           module = compile_with_cache(module_code, options)
E         File "cupy/core/core.pyx", line 2021, in cupy.core.core.compile_with_cache
E           return cuda.compile_with_cache(
E         File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.t8hdvgF7FH/cupy/cupy/cuda/compiler.py", line 428, in compile_with_cache
E           return _compile_with_cache_hip(
E         File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.t8hdvgF7FH/cupy/cupy/cuda/compiler.py", line 829, in _compile_with_cache_hip
E           temp_path = tf.name
E         File "/home/kmaeh/.pyenv/versions/3.8.7/lib/python3.8/tempfile.py", line 491, in __exit__
E           result = self.file.__exit__(exc, value, tb)
E       OSError: [Errno 28] No space left on device

/home/kmaeh/.pyenv/versions/3.8.7/lib/python3.8/tempfile.py:491: AssertionError
----------------------------- Captured stdout call -----------------------------
{'dtype1': <class 'numpy.uint8'>, 'dtype2': <class 'numpy.uint8'>}
_____________________ TestVectorizeOps.test_vectorize_mul ______________________

self = <cupy_tests.functional_tests.test_vectorize.TestVectorizeOps testMethod=test_vectorize_mul>
xp = <module 'cupy' from '/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.t8hdvgF7FH/cupy/cupy/__init__.py'>
dtype1 = <class 'numpy.uint8'>, dtype2 = <class 'numpy.uint8'>

    @testing.for_all_dtypes_combination(names=('dtype1', 'dtype2'))
    @testing.numpy_cupy_allclose(rtol=1e-6)
    def test_vectorize_mul(self, xp, dtype1, dtype2):
        def my_mul(x, y):
            return x * y
    
>       return self._run(my_mul, xp, [dtype1, dtype2])

tests/cupy_tests/functional_tests/test_vectorize.py:42: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
tests/cupy_tests/functional_tests/test_vectorize.py:18: in _run
    return f(*args)
cupy/_functional/vectorize.py:98: in __call__
    return kern(*args)
cupy/core/_kernel.pyx:840: in cupy.core._kernel.ElementwiseKernel.__call__
    kern = self._get_elementwise_kernel(dev_id, arginfos, type_map)
cupy/core/_kernel.pyx:865: in cupy.core._kernel.ElementwiseKernel._get_elementwise_kernel
    kern = _get_elementwise_kernel(
cupy/_util.pyx:59: in cupy._util.memoize.decorator.ret
    result = f(*args, **kwargs)
cupy/core/_kernel.pyx:652: in cupy.core._kernel._get_elementwise_kernel
    return _get_simple_elementwise_kernel(
cupy/core/_kernel.pyx:38: in cupy.core._kernel._get_simple_elementwise_kernel
    cpdef function.Function _get_simple_elementwise_kernel(
cupy/core/_kernel.pyx:61: in cupy.core._kernel._get_simple_elementwise_kernel
    module = compile_with_cache(module_code, options)
cupy/core/core.pyx:2021: in cupy.core.core.compile_with_cache
    return cuda.compile_with_cache(
cupy/cuda/compiler.py:428: in compile_with_cache
    return _compile_with_cache_hip(
cupy/cuda/compiler.py:829: in _compile_with_cache_hip
    temp_path = tf.name
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <tempfile._TemporaryFileWrapper object at 0x7f50116c7f40>, exc = None
value = None, tb = None

    def __exit__(self, exc, value, tb):
>       result = self.file.__exit__(exc, value, tb)
E       AssertionError: Only cupy raises error
E       
E       Traceback (most recent call last):
E         File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.t8hdvgF7FH/cupy/cupy/testing/_helper.py", line 47, in _call_func
E           result = impl(self, *args, **kw)
E         File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.t8hdvgF7FH/cupy/tests/cupy_tests/functional_tests/test_vectorize.py", line 42, in test_vectorize_mul
E           return self._run(my_mul, xp, [dtype1, dtype2])
E         File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.t8hdvgF7FH/cupy/tests/cupy_tests/functional_tests/test_vectorize.py", line 18, in _run
E           return f(*args)
E         File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.t8hdvgF7FH/cupy/cupy/_functional/vectorize.py", line 98, in __call__
E           return kern(*args)
E         File "cupy/core/_kernel.pyx", line 840, in cupy.core._kernel.ElementwiseKernel.__call__
E           kern = self._get_elementwise_kernel(dev_id, arginfos, type_map)
E         File "cupy/core/_kernel.pyx", line 865, in cupy.core._kernel.ElementwiseKernel._get_elementwise_kernel
E           kern = _get_elementwise_kernel(
E         File "cupy/_util.pyx", line 59, in cupy._util.memoize.decorator.ret
E           result = f(*args, **kwargs)
E         File "cupy/core/_kernel.pyx", line 652, in cupy.core._kernel._get_elementwise_kernel
E           return _get_simple_elementwise_kernel(
E         File "cupy/core/_kernel.pyx", line 38, in cupy.core._kernel._get_simple_elementwise_kernel
E           cpdef function.Function _get_simple_elementwise_kernel(
E         File "cupy/core/_kernel.pyx", line 61, in cupy.core._kernel._get_simple_elementwise_kernel
E           module = compile_with_cache(module_code, options)
E         File "cupy/core/core.pyx", line 2021, in cupy.core.core.compile_with_cache
E           return cuda.compile_with_cache(
E         File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.t8hdvgF7FH/cupy/cupy/cuda/compiler.py", line 428, in compile_with_cache
E           return _compile_with_cache_hip(
E         File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.t8hdvgF7FH/cupy/cupy/cuda/compiler.py", line 829, in _compile_with_cache_hip
E           temp_path = tf.name
E         File "/home/kmaeh/.pyenv/versions/3.8.7/lib/python3.8/tempfile.py", line 491, in __exit__
E           result = self.file.__exit__(exc, value, tb)
E       OSError: [Errno 28] No space left on device

/home/kmaeh/.pyenv/versions/3.8.7/lib/python3.8/tempfile.py:491: AssertionError
----------------------------- Captured stdout call -----------------------------
{'dtype1': <class 'numpy.uint8'>, 'dtype2': <class 'numpy.uint8'>}
_____________________ TestVectorizeOps.test_vectorize_neq ______________________

self = <cupy_tests.functional_tests.test_vectorize.TestVectorizeOps testMethod=test_vectorize_neq>
xp = <module 'cupy' from '/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.t8hdvgF7FH/cupy/cupy/__init__.py'>
dtype1 = <class 'numpy.uint8'>, dtype2 = <class 'numpy.uint8'>

    @testing.for_all_dtypes_combination(names=('dtype1', 'dtype2'))
    @testing.numpy_cupy_array_equal(accept_error=TypeError)
    def test_vectorize_neq(self, xp, dtype1, dtype2):
        def my_neq(x, y):
            return x != y
    
>       return self._run(my_neq, xp, [dtype1, dtype2])

tests/cupy_tests/functional_tests/test_vectorize.py:158: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
tests/cupy_tests/functional_tests/test_vectorize.py:18: in _run
    return f(*args)
cupy/_functional/vectorize.py:98: in __call__
    return kern(*args)
cupy/core/_kernel.pyx:840: in cupy.core._kernel.ElementwiseKernel.__call__
    kern = self._get_elementwise_kernel(dev_id, arginfos, type_map)
cupy/core/_kernel.pyx:865: in cupy.core._kernel.ElementwiseKernel._get_elementwise_kernel
    kern = _get_elementwise_kernel(
cupy/_util.pyx:59: in cupy._util.memoize.decorator.ret
    result = f(*args, **kwargs)
cupy/core/_kernel.pyx:652: in cupy.core._kernel._get_elementwise_kernel
    return _get_simple_elementwise_kernel(
cupy/core/_kernel.pyx:38: in cupy.core._kernel._get_simple_elementwise_kernel
    cpdef function.Function _get_simple_elementwise_kernel(
cupy/core/_kernel.pyx:61: in cupy.core._kernel._get_simple_elementwise_kernel
    module = compile_with_cache(module_code, options)
cupy/core/core.pyx:2021: in cupy.core.core.compile_with_cache
    return cuda.compile_with_cache(
cupy/cuda/compiler.py:428: in compile_with_cache
    return _compile_with_cache_hip(
cupy/cuda/compiler.py:829: in _compile_with_cache_hip
    temp_path = tf.name
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <tempfile._TemporaryFileWrapper object at 0x7f5010f5f610>, exc = None
value = None, tb = None

    def __exit__(self, exc, value, tb):
>       result = self.file.__exit__(exc, value, tb)
E       AssertionError: Only cupy raises error
E       
E       Traceback (most recent call last):
E         File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.t8hdvgF7FH/cupy/cupy/testing/_helper.py", line 47, in _call_func
E           result = impl(self, *args, **kw)
E         File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.t8hdvgF7FH/cupy/tests/cupy_tests/functional_tests/test_vectorize.py", line 158, in test_vectorize_neq
E           return self._run(my_neq, xp, [dtype1, dtype2])
E         File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.t8hdvgF7FH/cupy/tests/cupy_tests/functional_tests/test_vectorize.py", line 18, in _run
E           return f(*args)
E         File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.t8hdvgF7FH/cupy/cupy/_functional/vectorize.py", line 98, in __call__
E           return kern(*args)
E         File "cupy/core/_kernel.pyx", line 840, in cupy.core._kernel.ElementwiseKernel.__call__
E           kern = self._get_elementwise_kernel(dev_id, arginfos, type_map)
E         File "cupy/core/_kernel.pyx", line 865, in cupy.core._kernel.ElementwiseKernel._get_elementwise_kernel
E           kern = _get_elementwise_kernel(
E         File "cupy/_util.pyx", line 59, in cupy._util.memoize.decorator.ret
E           result = f(*args, **kwargs)
E         File "cupy/core/_kernel.pyx", line 652, in cupy.core._kernel._get_elementwise_kernel
E           return _get_simple_elementwise_kernel(
E         File "cupy/core/_kernel.pyx", line 38, in cupy.core._kernel._get_simple_elementwise_kernel
E           cpdef function.Function _get_simple_elementwise_kernel(
E         File "cupy/core/_kernel.pyx", line 61, in cupy.core._kernel._get_simple_elementwise_kernel
E           module = compile_with_cache(module_code, options)
E         File "cupy/core/core.pyx", line 2021, in cupy.core.core.compile_with_cache
E           return cuda.compile_with_cache(
E         File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.t8hdvgF7FH/cupy/cupy/cuda/compiler.py", line 428, in compile_with_cache
E           return _compile_with_cache_hip(
E         File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.t8hdvgF7FH/cupy/cupy/cuda/compiler.py", line 829, in _compile_with_cache_hip
E           temp_path = tf.name
E         File "/home/kmaeh/.pyenv/versions/3.8.7/lib/python3.8/tempfile.py", line 491, in __exit__
E           result = self.file.__exit__(exc, value, tb)
E       OSError: [Errno 28] No space left on device

/home/kmaeh/.pyenv/versions/3.8.7/lib/python3.8/tempfile.py:491: AssertionError
----------------------------- Captured stdout call -----------------------------
{'dtype1': <class 'numpy.uint8'>, 'dtype2': <class 'numpy.uint8'>}
_____________________ TestVectorizeOps.test_vectorize_pow ______________________

self = <cupy_tests.functional_tests.test_vectorize.TestVectorizeOps testMethod=test_vectorize_pow>
xp = <module 'cupy' from '/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.t8hdvgF7FH/cupy/cupy/__init__.py'>
dtype1 = <class 'numpy.uint8'>, dtype2 = <class 'numpy.uint8'>

    @testing.for_all_dtypes_combination(names=('dtype1', 'dtype2'))
    @testing.numpy_cupy_allclose(rtol=1e-5)
    def test_vectorize_pow(self, xp, dtype1, dtype2):
        def my_pow(x, y):
            return x ** y
    
        f = xp.vectorize(my_pow)
        x1 = testing.shaped_random((20, 30), xp, dtype1, seed=0)
        x2 = testing.shaped_random((20, 30), xp, dtype2, seed=1)
>       x1[x1 == 0] = 1

tests/cupy_tests/functional_tests/test_vectorize.py:53: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
cupy/core/core.pyx:1381: in cupy.core.core.ndarray.__setitem__
    _indexing._ndarray_setitem(self, slices, value)
cupy/core/_routines_indexing.pyx:54: in cupy.core._routines_indexing._ndarray_setitem
    _scatter_op(self, slices, value, 'update')
cupy/core/_routines_indexing.pyx:934: in cupy.core._routines_indexing._scatter_op
    _scatter_op_mask_single(a, mask, value, mask_i, op)
cupy/core/_routines_indexing.pyx:897: in cupy.core._routines_indexing._scatter_op_mask_single
    mask, mask_scanned, masked_shape = _prepare_mask_indexing_single(
cupy/core/_routines_indexing.pyx:706: in cupy.core._routines_indexing._prepare_mask_indexing_single
    mask_scanned = _math.scan(mask.ravel(), op=op, dtype=mask_type)
cupy/core/_routines_math.pyx:493: in cupy.core._routines_math.scan
    bsum_kernel(a, b, size=size // 2, block_size=chunk_size // 2)
cupy/core/_kernel.pyx:840: in cupy.core._kernel.ElementwiseKernel.__call__
    kern = self._get_elementwise_kernel(dev_id, arginfos, type_map)
cupy/core/_kernel.pyx:865: in cupy.core._kernel.ElementwiseKernel._get_elementwise_kernel
    kern = _get_elementwise_kernel(
cupy/_util.pyx:59: in cupy._util.memoize.decorator.ret
    result = f(*args, **kwargs)
cupy/core/_kernel.pyx:652: in cupy.core._kernel._get_elementwise_kernel
    return _get_simple_elementwise_kernel(
cupy/core/_kernel.pyx:38: in cupy.core._kernel._get_simple_elementwise_kernel
    cpdef function.Function _get_simple_elementwise_kernel(
cupy/core/_kernel.pyx:61: in cupy.core._kernel._get_simple_elementwise_kernel
    module = compile_with_cache(module_code, options)
cupy/core/core.pyx:2021: in cupy.core.core.compile_with_cache
    return cuda.compile_with_cache(
cupy/cuda/compiler.py:428: in compile_with_cache
    return _compile_with_cache_hip(
cupy/cuda/compiler.py:829: in _compile_with_cache_hip
    temp_path = tf.name
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <tempfile._TemporaryFileWrapper object at 0x7f50109829a0>, exc = None
value = None, tb = None

    def __exit__(self, exc, value, tb):
>       result = self.file.__exit__(exc, value, tb)
E       AssertionError: Only cupy raises error
E       
E       Traceback (most recent call last):
E         File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.t8hdvgF7FH/cupy/cupy/testing/_helper.py", line 47, in _call_func
E           result = impl(self, *args, **kw)
E         File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.t8hdvgF7FH/cupy/tests/cupy_tests/functional_tests/test_vectorize.py", line 53, in test_vectorize_pow
E           x1[x1 == 0] = 1
E         File "cupy/core/core.pyx", line 1381, in cupy.core.core.ndarray.__setitem__
E           _indexing._ndarray_setitem(self, slices, value)
E         File "cupy/core/_routines_indexing.pyx", line 54, in cupy.core._routines_indexing._ndarray_setitem
E           _scatter_op(self, slices, value, 'update')
E         File "cupy/core/_routines_indexing.pyx", line 934, in cupy.core._routines_indexing._scatter_op
E           _scatter_op_mask_single(a, mask, value, mask_i, op)
E         File "cupy/core/_routines_indexing.pyx", line 897, in cupy.core._routines_indexing._scatter_op_mask_single
E           mask, mask_scanned, masked_shape = _prepare_mask_indexing_single(
E         File "cupy/core/_routines_indexing.pyx", line 706, in cupy.core._routines_indexing._prepare_mask_indexing_single
E           mask_scanned = _math.scan(mask.ravel(), op=op, dtype=mask_type)
E         File "cupy/core/_routines_math.pyx", line 493, in cupy.core._routines_math.scan
E           bsum_kernel(a, b, size=size // 2, block_size=chunk_size // 2)
E         File "cupy/core/_kernel.pyx", line 840, in cupy.core._kernel.ElementwiseKernel.__call__
E           kern = self._get_elementwise_kernel(dev_id, arginfos, type_map)
E         File "cupy/core/_kernel.pyx", line 865, in cupy.core._kernel.ElementwiseKernel._get_elementwise_kernel
E           kern = _get_elementwise_kernel(
E         File "cupy/_util.pyx", line 59, in cupy._util.memoize.decorator.ret
E           result = f(*args, **kwargs)
E         File "cupy/core/_kernel.pyx", line 652, in cupy.core._kernel._get_elementwise_kernel
E           return _get_simple_elementwise_kernel(
E         File "cupy/core/_kernel.pyx", line 38, in cupy.core._kernel._get_simple_elementwise_kernel
E           cpdef function.Function _get_simple_elementwise_kernel(
E         File "cupy/core/_kernel.pyx", line 61, in cupy.core._kernel._get_simple_elementwise_kernel
E           module = compile_with_cache(module_code, options)
E         File "cupy/core/core.pyx", line 2021, in cupy.core.core.compile_with_cache
E           return cuda.compile_with_cache(
E         File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.t8hdvgF7FH/cupy/cupy/cuda/compiler.py", line 428, in compile_with_cache
E           return _compile_with_cache_hip(
E         File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.t8hdvgF7FH/cupy/cupy/cuda/compiler.py", line 829, in _compile_with_cache_hip
E           temp_path = tf.name
E         File "/home/kmaeh/.pyenv/versions/3.8.7/lib/python3.8/tempfile.py", line 491, in __exit__
E           result = self.file.__exit__(exc, value, tb)
E       OSError: [Errno 28] No space left on device

/home/kmaeh/.pyenv/versions/3.8.7/lib/python3.8/tempfile.py:491: AssertionError
----------------------------- Captured stdout call -----------------------------
{'dtype1': <class 'numpy.uint8'>, 'dtype2': <class 'numpy.uint8'>}
____________________ TestVectorizeOps.test_vectorize_rshift ____________________

self = <cupy_tests.functional_tests.test_vectorize.TestVectorizeOps testMethod=test_vectorize_rshift>
xp = <module 'cupy' from '/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.t8hdvgF7FH/cupy/cupy/__init__.py'>
dtype1 = <class 'numpy.uint8'>, dtype2 = <class 'numpy.uint8'>

    @testing.for_all_dtypes_combination(names=('dtype1', 'dtype2'))
    @testing.numpy_cupy_array_equal(accept_error=TypeError)
    def test_vectorize_rshift(self, xp, dtype1, dtype2):
        def my_lshift(x, y):
            return x >> y
    
>       return self._run(my_lshift, xp, [dtype1, dtype2])

tests/cupy_tests/functional_tests/test_vectorize.py:102: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
tests/cupy_tests/functional_tests/test_vectorize.py:18: in _run
    return f(*args)
cupy/_functional/vectorize.py:98: in __call__
    return kern(*args)
cupy/core/_kernel.pyx:840: in cupy.core._kernel.ElementwiseKernel.__call__
    kern = self._get_elementwise_kernel(dev_id, arginfos, type_map)
cupy/core/_kernel.pyx:865: in cupy.core._kernel.ElementwiseKernel._get_elementwise_kernel
    kern = _get_elementwise_kernel(
cupy/_util.pyx:59: in cupy._util.memoize.decorator.ret
    result = f(*args, **kwargs)
cupy/core/_kernel.pyx:652: in cupy.core._kernel._get_elementwise_kernel
    return _get_simple_elementwise_kernel(
cupy/core/_kernel.pyx:38: in cupy.core._kernel._get_simple_elementwise_kernel
    cpdef function.Function _get_simple_elementwise_kernel(
cupy/core/_kernel.pyx:61: in cupy.core._kernel._get_simple_elementwise_kernel
    module = compile_with_cache(module_code, options)
cupy/core/core.pyx:2021: in cupy.core.core.compile_with_cache
    return cuda.compile_with_cache(
cupy/cuda/compiler.py:428: in compile_with_cache
    return _compile_with_cache_hip(
cupy/cuda/compiler.py:829: in _compile_with_cache_hip
    temp_path = tf.name
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <tempfile._TemporaryFileWrapper object at 0x7f5010948490>, exc = None
value = None, tb = None

    def __exit__(self, exc, value, tb):
>       result = self.file.__exit__(exc, value, tb)
E       AssertionError: Only cupy raises error
E       
E       Traceback (most recent call last):
E         File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.t8hdvgF7FH/cupy/cupy/testing/_helper.py", line 47, in _call_func
E           result = impl(self, *args, **kw)
E         File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.t8hdvgF7FH/cupy/tests/cupy_tests/functional_tests/test_vectorize.py", line 102, in test_vectorize_rshift
E           return self._run(my_lshift, xp, [dtype1, dtype2])
E         File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.t8hdvgF7FH/cupy/tests/cupy_tests/functional_tests/test_vectorize.py", line 18, in _run
E           return f(*args)
E         File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.t8hdvgF7FH/cupy/cupy/_functional/vectorize.py", line 98, in __call__
E           return kern(*args)
E         File "cupy/core/_kernel.pyx", line 840, in cupy.core._kernel.ElementwiseKernel.__call__
E           kern = self._get_elementwise_kernel(dev_id, arginfos, type_map)
E         File "cupy/core/_kernel.pyx", line 865, in cupy.core._kernel.ElementwiseKernel._get_elementwise_kernel
E           kern = _get_elementwise_kernel(
E         File "cupy/_util.pyx", line 59, in cupy._util.memoize.decorator.ret
E           result = f(*args, **kwargs)
E         File "cupy/core/_kernel.pyx", line 652, in cupy.core._kernel._get_elementwise_kernel
E           return _get_simple_elementwise_kernel(
E         File "cupy/core/_kernel.pyx", line 38, in cupy.core._kernel._get_simple_elementwise_kernel
E           cpdef function.Function _get_simple_elementwise_kernel(
E         File "cupy/core/_kernel.pyx", line 61, in cupy.core._kernel._get_simple_elementwise_kernel
E           module = compile_with_cache(module_code, options)
E         File "cupy/core/core.pyx", line 2021, in cupy.core.core.compile_with_cache
E           return cuda.compile_with_cache(
E         File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.t8hdvgF7FH/cupy/cupy/cuda/compiler.py", line 428, in compile_with_cache
E           return _compile_with_cache_hip(
E         File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.t8hdvgF7FH/cupy/cupy/cuda/compiler.py", line 829, in _compile_with_cache_hip
E           temp_path = tf.name
E         File "/home/kmaeh/.pyenv/versions/3.8.7/lib/python3.8/tempfile.py", line 491, in __exit__
E           result = self.file.__exit__(exc, value, tb)
E       OSError: [Errno 28] No space left on device

/home/kmaeh/.pyenv/versions/3.8.7/lib/python3.8/tempfile.py:491: AssertionError
----------------------------- Captured stdout call -----------------------------
{'dtype1': <class 'numpy.uint8'>, 'dtype2': <class 'numpy.uint8'>}
_____________________ TestVectorizeOps.test_vectorize_sub ______________________

self = <cupy_tests.functional_tests.test_vectorize.TestVectorizeOps testMethod=test_vectorize_sub>
xp = <module 'cupy' from '/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.t8hdvgF7FH/cupy/cupy/__init__.py'>
dtype1 = <class 'numpy.uint8'>, dtype2 = <class 'numpy.uint8'>

    @testing.for_all_dtypes_combination(names=('dtype1', 'dtype2'))
    @testing.numpy_cupy_array_equal(accept_error=TypeError)
    def test_vectorize_sub(self, xp, dtype1, dtype2):
        def my_sub(x, y):
            return x - y
    
>       return self._run(my_sub, xp, [dtype1, dtype2])

tests/cupy_tests/functional_tests/test_vectorize.py:34: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
tests/cupy_tests/functional_tests/test_vectorize.py:18: in _run
    return f(*args)
cupy/_functional/vectorize.py:98: in __call__
    return kern(*args)
cupy/core/_kernel.pyx:840: in cupy.core._kernel.ElementwiseKernel.__call__
    kern = self._get_elementwise_kernel(dev_id, arginfos, type_map)
cupy/core/_kernel.pyx:865: in cupy.core._kernel.ElementwiseKernel._get_elementwise_kernel
    kern = _get_elementwise_kernel(
cupy/_util.pyx:59: in cupy._util.memoize.decorator.ret
    result = f(*args, **kwargs)
cupy/core/_kernel.pyx:652: in cupy.core._kernel._get_elementwise_kernel
    return _get_simple_elementwise_kernel(
cupy/core/_kernel.pyx:38: in cupy.core._kernel._get_simple_elementwise_kernel
    cpdef function.Function _get_simple_elementwise_kernel(
cupy/core/_kernel.pyx:61: in cupy.core._kernel._get_simple_elementwise_kernel
    module = compile_with_cache(module_code, options)
cupy/core/core.pyx:2021: in cupy.core.core.compile_with_cache
    return cuda.compile_with_cache(
cupy/cuda/compiler.py:428: in compile_with_cache
    return _compile_with_cache_hip(
cupy/cuda/compiler.py:829: in _compile_with_cache_hip
    temp_path = tf.name
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <tempfile._TemporaryFileWrapper object at 0x7f50109bec70>, exc = None
value = None, tb = None

    def __exit__(self, exc, value, tb):
>       result = self.file.__exit__(exc, value, tb)
E       AssertionError: Only cupy raises error
E       
E       Traceback (most recent call last):
E         File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.t8hdvgF7FH/cupy/cupy/testing/_helper.py", line 47, in _call_func
E           result = impl(self, *args, **kw)
E         File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.t8hdvgF7FH/cupy/tests/cupy_tests/functional_tests/test_vectorize.py", line 34, in test_vectorize_sub
E           return self._run(my_sub, xp, [dtype1, dtype2])
E         File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.t8hdvgF7FH/cupy/tests/cupy_tests/functional_tests/test_vectorize.py", line 18, in _run
E           return f(*args)
E         File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.t8hdvgF7FH/cupy/cupy/_functional/vectorize.py", line 98, in __call__
E           return kern(*args)
E         File "cupy/core/_kernel.pyx", line 840, in cupy.core._kernel.ElementwiseKernel.__call__
E           kern = self._get_elementwise_kernel(dev_id, arginfos, type_map)
E         File "cupy/core/_kernel.pyx", line 865, in cupy.core._kernel.ElementwiseKernel._get_elementwise_kernel
E           kern = _get_elementwise_kernel(
E         File "cupy/_util.pyx", line 59, in cupy._util.memoize.decorator.ret
E           result = f(*args, **kwargs)
E         File "cupy/core/_kernel.pyx", line 652, in cupy.core._kernel._get_elementwise_kernel
E           return _get_simple_elementwise_kernel(
E         File "cupy/core/_kernel.pyx", line 38, in cupy.core._kernel._get_simple_elementwise_kernel
E           cpdef function.Function _get_simple_elementwise_kernel(
E         File "cupy/core/_kernel.pyx", line 61, in cupy.core._kernel._get_simple_elementwise_kernel
E           module = compile_with_cache(module_code, options)
E         File "cupy/core/core.pyx", line 2021, in cupy.core.core.compile_with_cache
E           return cuda.compile_with_cache(
E         File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.t8hdvgF7FH/cupy/cupy/cuda/compiler.py", line 428, in compile_with_cache
E           return _compile_with_cache_hip(
E         File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.t8hdvgF7FH/cupy/cupy/cuda/compiler.py", line 829, in _compile_with_cache_hip
E           temp_path = tf.name
E         File "/home/kmaeh/.pyenv/versions/3.8.7/lib/python3.8/tempfile.py", line 491, in __exit__
E           result = self.file.__exit__(exc, value, tb)
E       OSError: [Errno 28] No space left on device

/home/kmaeh/.pyenv/versions/3.8.7/lib/python3.8/tempfile.py:491: AssertionError
----------------------------- Captured stdout call -----------------------------
{'dtype1': <class 'numpy.uint8'>, 'dtype2': <class 'numpy.uint8'>}
_____________________ TestVectorizeOps.test_vectorize_usub _____________________

self = <cupy_tests.functional_tests.test_vectorize.TestVectorizeOps testMethod=test_vectorize_usub>
xp = <module 'cupy' from '/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.t8hdvgF7FH/cupy/cupy/__init__.py'>
dtype = <class 'numpy.float64'>

    @testing.for_all_dtypes()
    @testing.numpy_cupy_array_equal(accept_error=TypeError)
    def test_vectorize_usub(self, xp, dtype):
        def my_usub(x):
            return -x
    
>       return self._run(my_usub, xp, [dtype])

tests/cupy_tests/functional_tests/test_vectorize.py:198: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
tests/cupy_tests/functional_tests/test_vectorize.py:18: in _run
    return f(*args)
cupy/_functional/vectorize.py:98: in __call__
    return kern(*args)
cupy/core/_kernel.pyx:840: in cupy.core._kernel.ElementwiseKernel.__call__
    kern = self._get_elementwise_kernel(dev_id, arginfos, type_map)
cupy/core/_kernel.pyx:865: in cupy.core._kernel.ElementwiseKernel._get_elementwise_kernel
    kern = _get_elementwise_kernel(
cupy/_util.pyx:59: in cupy._util.memoize.decorator.ret
    result = f(*args, **kwargs)
cupy/core/_kernel.pyx:652: in cupy.core._kernel._get_elementwise_kernel
    return _get_simple_elementwise_kernel(
cupy/core/_kernel.pyx:38: in cupy.core._kernel._get_simple_elementwise_kernel
    cpdef function.Function _get_simple_elementwise_kernel(
cupy/core/_kernel.pyx:61: in cupy.core._kernel._get_simple_elementwise_kernel
    module = compile_with_cache(module_code, options)
cupy/core/core.pyx:2021: in cupy.core.core.compile_with_cache
    return cuda.compile_with_cache(
cupy/cuda/compiler.py:428: in compile_with_cache
    return _compile_with_cache_hip(
cupy/cuda/compiler.py:829: in _compile_with_cache_hip
    temp_path = tf.name
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <tempfile._TemporaryFileWrapper object at 0x7f5010e66a30>, exc = None
value = None, tb = None

    def __exit__(self, exc, value, tb):
>       result = self.file.__exit__(exc, value, tb)
E       AssertionError: Only cupy raises error
E       
E       Traceback (most recent call last):
E         File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.t8hdvgF7FH/cupy/cupy/testing/_helper.py", line 47, in _call_func
E           result = impl(self, *args, **kw)
E         File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.t8hdvgF7FH/cupy/tests/cupy_tests/functional_tests/test_vectorize.py", line 198, in test_vectorize_usub
E           return self._run(my_usub, xp, [dtype])
E         File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.t8hdvgF7FH/cupy/tests/cupy_tests/functional_tests/test_vectorize.py", line 18, in _run
E           return f(*args)
E         File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.t8hdvgF7FH/cupy/cupy/_functional/vectorize.py", line 98, in __call__
E           return kern(*args)
E         File "cupy/core/_kernel.pyx", line 840, in cupy.core._kernel.ElementwiseKernel.__call__
E           kern = self._get_elementwise_kernel(dev_id, arginfos, type_map)
E         File "cupy/core/_kernel.pyx", line 865, in cupy.core._kernel.ElementwiseKernel._get_elementwise_kernel
E           kern = _get_elementwise_kernel(
E         File "cupy/_util.pyx", line 59, in cupy._util.memoize.decorator.ret
E           result = f(*args, **kwargs)
E         File "cupy/core/_kernel.pyx", line 652, in cupy.core._kernel._get_elementwise_kernel
E           return _get_simple_elementwise_kernel(
E         File "cupy/core/_kernel.pyx", line 38, in cupy.core._kernel._get_simple_elementwise_kernel
E           cpdef function.Function _get_simple_elementwise_kernel(
E         File "cupy/core/_kernel.pyx", line 61, in cupy.core._kernel._get_simple_elementwise_kernel
E           module = compile_with_cache(module_code, options)
E         File "cupy/core/core.pyx", line 2021, in cupy.core.core.compile_with_cache
E           return cuda.compile_with_cache(
E         File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.t8hdvgF7FH/cupy/cupy/cuda/compiler.py", line 428, in compile_with_cache
E           return _compile_with_cache_hip(
E         File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.t8hdvgF7FH/cupy/cupy/cuda/compiler.py", line 829, in _compile_with_cache_hip
E           temp_path = tf.name
E         File "/home/kmaeh/.pyenv/versions/3.8.7/lib/python3.8/tempfile.py", line 491, in __exit__
E           result = self.file.__exit__(exc, value, tb)
E       OSError: [Errno 28] No space left on device

/home/kmaeh/.pyenv/versions/3.8.7/lib/python3.8/tempfile.py:491: AssertionError
----------------------------- Captured stdout call -----------------------------
dtype is <class 'numpy.float64'>
___________________ TestVectorizeExprs.test_vectorize_ifexp ____________________

self = <cupy_tests.functional_tests.test_vectorize.TestVectorizeExprs testMethod=test_vectorize_ifexp>
xp = <module 'cupy' from '/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.t8hdvgF7FH/cupy/cupy/__init__.py'>
dtype = <class 'numpy.float64'>, cond_dtype = <class 'numpy.float64'>

    @testing.for_all_dtypes(name='cond_dtype', no_complex=True)
    @testing.for_all_dtypes()
    @testing.numpy_cupy_allclose()
    def test_vectorize_ifexp(self, xp, dtype, cond_dtype):
        def my_ifexp(c, x, y):
            return x if c else y
    
        f = xp.vectorize(my_ifexp)
        cond = testing.shaped_random((20, 30), xp, cond_dtype, seed=0)
        x = testing.shaped_random((20, 30), xp, dtype, seed=1)
        y = testing.shaped_random((20, 30), xp, dtype, seed=2)
>       return f(cond, x, y)

tests/cupy_tests/functional_tests/test_vectorize.py:214: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
cupy/_functional/vectorize.py:98: in __call__
    return kern(*args)
cupy/core/_kernel.pyx:840: in cupy.core._kernel.ElementwiseKernel.__call__
    kern = self._get_elementwise_kernel(dev_id, arginfos, type_map)
cupy/core/_kernel.pyx:865: in cupy.core._kernel.ElementwiseKernel._get_elementwise_kernel
    kern = _get_elementwise_kernel(
cupy/_util.pyx:59: in cupy._util.memoize.decorator.ret
    result = f(*args, **kwargs)
cupy/core/_kernel.pyx:652: in cupy.core._kernel._get_elementwise_kernel
    return _get_simple_elementwise_kernel(
cupy/core/_kernel.pyx:38: in cupy.core._kernel._get_simple_elementwise_kernel
    cpdef function.Function _get_simple_elementwise_kernel(
cupy/core/_kernel.pyx:61: in cupy.core._kernel._get_simple_elementwise_kernel
    module = compile_with_cache(module_code, options)
cupy/core/core.pyx:2021: in cupy.core.core.compile_with_cache
    return cuda.compile_with_cache(
cupy/cuda/compiler.py:428: in compile_with_cache
    return _compile_with_cache_hip(
cupy/cuda/compiler.py:829: in _compile_with_cache_hip
    temp_path = tf.name
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <tempfile._TemporaryFileWrapper object at 0x7f50109fe370>, exc = None
value = None, tb = None

    def __exit__(self, exc, value, tb):
>       result = self.file.__exit__(exc, value, tb)
E       AssertionError: Only cupy raises error
E       
E       Traceback (most recent call last):
E         File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.t8hdvgF7FH/cupy/cupy/testing/_helper.py", line 47, in _call_func
E           result = impl(self, *args, **kw)
E         File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.t8hdvgF7FH/cupy/tests/cupy_tests/functional_tests/test_vectorize.py", line 214, in test_vectorize_ifexp
E           return f(cond, x, y)
E         File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.t8hdvgF7FH/cupy/cupy/_functional/vectorize.py", line 98, in __call__
E           return kern(*args)
E         File "cupy/core/_kernel.pyx", line 840, in cupy.core._kernel.ElementwiseKernel.__call__
E           kern = self._get_elementwise_kernel(dev_id, arginfos, type_map)
E         File "cupy/core/_kernel.pyx", line 865, in cupy.core._kernel.ElementwiseKernel._get_elementwise_kernel
E           kern = _get_elementwise_kernel(
E         File "cupy/_util.pyx", line 59, in cupy._util.memoize.decorator.ret
E           result = f(*args, **kwargs)
E         File "cupy/core/_kernel.pyx", line 652, in cupy.core._kernel._get_elementwise_kernel
E           return _get_simple_elementwise_kernel(
E         File "cupy/core/_kernel.pyx", line 38, in cupy.core._kernel._get_simple_elementwise_kernel
E           cpdef function.Function _get_simple_elementwise_kernel(
E         File "cupy/core/_kernel.pyx", line 61, in cupy.core._kernel._get_simple_elementwise_kernel
E           module = compile_with_cache(module_code, options)
E         File "cupy/core/core.pyx", line 2021, in cupy.core.core.compile_with_cache
E           return cuda.compile_with_cache(
E         File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.t8hdvgF7FH/cupy/cupy/cuda/compiler.py", line 428, in compile_with_cache
E           return _compile_with_cache_hip(
E         File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.t8hdvgF7FH/cupy/cupy/cuda/compiler.py", line 829, in _compile_with_cache_hip
E           temp_path = tf.name
E         File "/home/kmaeh/.pyenv/versions/3.8.7/lib/python3.8/tempfile.py", line 491, in __exit__
E           result = self.file.__exit__(exc, value, tb)
E       OSError: [Errno 28] No space left on device

/home/kmaeh/.pyenv/versions/3.8.7/lib/python3.8/tempfile.py:491: AssertionError
----------------------------- Captured stdout call -----------------------------
dtype is <class 'numpy.float64'>
cond_dtype is <class 'numpy.float64'>
____________________ TestVectorizeExprs.test_vectorize_incr ____________________

self = <cupy_tests.functional_tests.test_vectorize.TestVectorizeExprs testMethod=test_vectorize_incr>
xp = <module 'cupy' from '/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.t8hdvgF7FH/cupy/cupy/__init__.py'>
dtype = <class 'numpy.float64'>

    @testing.for_all_dtypes()
    @testing.numpy_cupy_allclose()
    def test_vectorize_incr(self, xp, dtype):
        def my_incr(x):
            return x + 1
    
        f = xp.vectorize(my_incr)
        x = testing.shaped_random((20, 30), xp, dtype, seed=0)
>       return f(x)

tests/cupy_tests/functional_tests/test_vectorize.py:224: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
cupy/_functional/vectorize.py:98: in __call__
    return kern(*args)
cupy/core/_kernel.pyx:840: in cupy.core._kernel.ElementwiseKernel.__call__
    kern = self._get_elementwise_kernel(dev_id, arginfos, type_map)
cupy/core/_kernel.pyx:865: in cupy.core._kernel.ElementwiseKernel._get_elementwise_kernel
    kern = _get_elementwise_kernel(
cupy/_util.pyx:59: in cupy._util.memoize.decorator.ret
    result = f(*args, **kwargs)
cupy/core/_kernel.pyx:652: in cupy.core._kernel._get_elementwise_kernel
    return _get_simple_elementwise_kernel(
cupy/core/_kernel.pyx:38: in cupy.core._kernel._get_simple_elementwise_kernel
    cpdef function.Function _get_simple_elementwise_kernel(
cupy/core/_kernel.pyx:61: in cupy.core._kernel._get_simple_elementwise_kernel
    module = compile_with_cache(module_code, options)
cupy/core/core.pyx:2021: in cupy.core.core.compile_with_cache
    return cuda.compile_with_cache(
cupy/cuda/compiler.py:428: in compile_with_cache
    return _compile_with_cache_hip(
cupy/cuda/compiler.py:829: in _compile_with_cache_hip
    temp_path = tf.name
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <tempfile._TemporaryFileWrapper object at 0x7f50116f69a0>, exc = None
value = None, tb = None

    def __exit__(self, exc, value, tb):
>       result = self.file.__exit__(exc, value, tb)
E       AssertionError: Only cupy raises error
E       
E       Traceback (most recent call last):
E         File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.t8hdvgF7FH/cupy/cupy/testing/_helper.py", line 47, in _call_func
E           result = impl(self, *args, **kw)
E         File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.t8hdvgF7FH/cupy/tests/cupy_tests/functional_tests/test_vectorize.py", line 224, in test_vectorize_incr
E           return f(x)
E         File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.t8hdvgF7FH/cupy/cupy/_functional/vectorize.py", line 98, in __call__
E           return kern(*args)
E         File "cupy/core/_kernel.pyx", line 840, in cupy.core._kernel.ElementwiseKernel.__call__
E           kern = self._get_elementwise_kernel(dev_id, arginfos, type_map)
E         File "cupy/core/_kernel.pyx", line 865, in cupy.core._kernel.ElementwiseKernel._get_elementwise_kernel
E           kern = _get_elementwise_kernel(
E         File "cupy/_util.pyx", line 59, in cupy._util.memoize.decorator.ret
E           result = f(*args, **kwargs)
E         File "cupy/core/_kernel.pyx", line 652, in cupy.core._kernel._get_elementwise_kernel
E           return _get_simple_elementwise_kernel(
E         File "cupy/core/_kernel.pyx", line 38, in cupy.core._kernel._get_simple_elementwise_kernel
E           cpdef function.Function _get_simple_elementwise_kernel(
E         File "cupy/core/_kernel.pyx", line 61, in cupy.core._kernel._get_simple_elementwise_kernel
E           module = compile_with_cache(module_code, options)
E         File "cupy/core/core.pyx", line 2021, in cupy.core.core.compile_with_cache
E           return cuda.compile_with_cache(
E         File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.t8hdvgF7FH/cupy/cupy/cuda/compiler.py", line 428, in compile_with_cache
E           return _compile_with_cache_hip(
E         File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.t8hdvgF7FH/cupy/cupy/cuda/compiler.py", line 829, in _compile_with_cache_hip
E           temp_path = tf.name
E         File "/home/kmaeh/.pyenv/versions/3.8.7/lib/python3.8/tempfile.py", line 491, in __exit__
E           result = self.file.__exit__(exc, value, tb)
E       OSError: [Errno 28] No space left on device

/home/kmaeh/.pyenv/versions/3.8.7/lib/python3.8/tempfile.py:491: AssertionError
----------------------------- Captured stdout call -----------------------------
dtype is <class 'numpy.float64'>
__________________ TestVectorizeExprs.test_vectorize_typecast __________________

self = <cupy_tests.functional_tests.test_vectorize.TestVectorizeExprs testMethod=test_vectorize_typecast>
xp = <module 'cupy' from '/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.t8hdvgF7FH/cupy/cupy/__init__.py'>
dtype1 = <class 'numpy.float64'>, dtype2 = <class 'numpy.float64'>

    @testing.for_all_dtypes_combination(names=('dtype1', 'dtype2'), full=True)
    @testing.numpy_cupy_array_equal(
        accept_error=(TypeError, numpy.ComplexWarning))
    def test_vectorize_typecast(self, xp, dtype1, dtype2):
        typecast = xp.dtype(dtype2).type
    
        def my_typecast(x):
            return typecast(x)
    
        f = xp.vectorize(my_typecast)
        x = testing.shaped_random((20, 30), xp, dtype1, seed=1)
>       return f(x)

tests/cupy_tests/functional_tests/test_vectorize.py:260: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
cupy/_functional/vectorize.py:98: in __call__
    return kern(*args)
cupy/core/_kernel.pyx:840: in cupy.core._kernel.ElementwiseKernel.__call__
    kern = self._get_elementwise_kernel(dev_id, arginfos, type_map)
cupy/core/_kernel.pyx:865: in cupy.core._kernel.ElementwiseKernel._get_elementwise_kernel
    kern = _get_elementwise_kernel(
cupy/_util.pyx:59: in cupy._util.memoize.decorator.ret
    result = f(*args, **kwargs)
cupy/core/_kernel.pyx:652: in cupy.core._kernel._get_elementwise_kernel
    return _get_simple_elementwise_kernel(
cupy/core/_kernel.pyx:38: in cupy.core._kernel._get_simple_elementwise_kernel
    cpdef function.Function _get_simple_elementwise_kernel(
cupy/core/_kernel.pyx:61: in cupy.core._kernel._get_simple_elementwise_kernel
    module = compile_with_cache(module_code, options)
cupy/core/core.pyx:2021: in cupy.core.core.compile_with_cache
    return cuda.compile_with_cache(
cupy/cuda/compiler.py:428: in compile_with_cache
    return _compile_with_cache_hip(
cupy/cuda/compiler.py:829: in _compile_with_cache_hip
    temp_path = tf.name
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <tempfile._TemporaryFileWrapper object at 0x7f50109f2250>, exc = None
value = None, tb = None

    def __exit__(self, exc, value, tb):
>       result = self.file.__exit__(exc, value, tb)
E       AssertionError: Only cupy raises error
E       
E       Traceback (most recent call last):
E         File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.t8hdvgF7FH/cupy/cupy/testing/_helper.py", line 47, in _call_func
E           result = impl(self, *args, **kw)
E         File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.t8hdvgF7FH/cupy/tests/cupy_tests/functional_tests/test_vectorize.py", line 260, in test_vectorize_typecast
E           return f(x)
E         File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.t8hdvgF7FH/cupy/cupy/_functional/vectorize.py", line 98, in __call__
E           return kern(*args)
E         File "cupy/core/_kernel.pyx", line 840, in cupy.core._kernel.ElementwiseKernel.__call__
E           kern = self._get_elementwise_kernel(dev_id, arginfos, type_map)
E         File "cupy/core/_kernel.pyx", line 865, in cupy.core._kernel.ElementwiseKernel._get_elementwise_kernel
E           kern = _get_elementwise_kernel(
E         File "cupy/_util.pyx", line 59, in cupy._util.memoize.decorator.ret
E           result = f(*args, **kwargs)
E         File "cupy/core/_kernel.pyx", line 652, in cupy.core._kernel._get_elementwise_kernel
E           return _get_simple_elementwise_kernel(
E         File "cupy/core/_kernel.pyx", line 38, in cupy.core._kernel._get_simple_elementwise_kernel
E           cpdef function.Function _get_simple_elementwise_kernel(
E         File "cupy/core/_kernel.pyx", line 61, in cupy.core._kernel._get_simple_elementwise_kernel
E           module = compile_with_cache(module_code, options)
E         File "cupy/core/core.pyx", line 2021, in cupy.core.core.compile_with_cache
E           return cuda.compile_with_cache(
E         File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.t8hdvgF7FH/cupy/cupy/cuda/compiler.py", line 428, in compile_with_cache
E           return _compile_with_cache_hip(
E         File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.t8hdvgF7FH/cupy/cupy/cuda/compiler.py", line 829, in _compile_with_cache_hip
E           temp_path = tf.name
E         File "/home/kmaeh/.pyenv/versions/3.8.7/lib/python3.8/tempfile.py", line 491, in __exit__
E           result = self.file.__exit__(exc, value, tb)
E       OSError: [Errno 28] No space left on device

/home/kmaeh/.pyenv/versions/3.8.7/lib/python3.8/tempfile.py:491: AssertionError
----------------------------- Captured stdout call -----------------------------
{'dtype1': <class 'numpy.float64'>, 'dtype2': <class 'numpy.float64'>}
_________________ TestVectorizeExprs.test_vectorize_ufunc_call _________________

self = <cupy_tests.functional_tests.test_vectorize.TestVectorizeExprs testMethod=test_vectorize_ufunc_call>
xp = <module 'cupy' from '/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.t8hdvgF7FH/cupy/cupy/__init__.py'>
dtype = <class 'numpy.float64'>

    @testing.for_all_dtypes()
    @testing.numpy_cupy_array_equal(accept_error=TypeError)
    def test_vectorize_ufunc_call(self, xp, dtype):
        def my_ufunc_add(x, y):
            return xp.add(x, y)
    
        f = xp.vectorize(my_ufunc_add)
        x = testing.shaped_random((20, 30), xp, dtype, seed=1)
        y = testing.shaped_random((20, 30), xp, dtype, seed=2)
>       return f(x, y)

tests/cupy_tests/functional_tests/test_vectorize.py:235: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
cupy/_functional/vectorize.py:98: in __call__
    return kern(*args)
cupy/core/_kernel.pyx:840: in cupy.core._kernel.ElementwiseKernel.__call__
    kern = self._get_elementwise_kernel(dev_id, arginfos, type_map)
cupy/core/_kernel.pyx:865: in cupy.core._kernel.ElementwiseKernel._get_elementwise_kernel
    kern = _get_elementwise_kernel(
cupy/_util.pyx:59: in cupy._util.memoize.decorator.ret
    result = f(*args, **kwargs)
cupy/core/_kernel.pyx:652: in cupy.core._kernel._get_elementwise_kernel
    return _get_simple_elementwise_kernel(
cupy/core/_kernel.pyx:38: in cupy.core._kernel._get_simple_elementwise_kernel
    cpdef function.Function _get_simple_elementwise_kernel(
cupy/core/_kernel.pyx:61: in cupy.core._kernel._get_simple_elementwise_kernel
    module = compile_with_cache(module_code, options)
cupy/core/core.pyx:2021: in cupy.core.core.compile_with_cache
    return cuda.compile_with_cache(
cupy/cuda/compiler.py:428: in compile_with_cache
    return _compile_with_cache_hip(
cupy/cuda/compiler.py:829: in _compile_with_cache_hip
    temp_path = tf.name
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <tempfile._TemporaryFileWrapper object at 0x7f5010fa0160>, exc = None
value = None, tb = None

    def __exit__(self, exc, value, tb):
>       result = self.file.__exit__(exc, value, tb)
E       AssertionError: Only cupy raises error
E       
E       Traceback (most recent call last):
E         File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.t8hdvgF7FH/cupy/cupy/testing/_helper.py", line 47, in _call_func
E           result = impl(self, *args, **kw)
E         File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.t8hdvgF7FH/cupy/tests/cupy_tests/functional_tests/test_vectorize.py", line 235, in test_vectorize_ufunc_call
E           return f(x, y)
E         File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.t8hdvgF7FH/cupy/cupy/_functional/vectorize.py", line 98, in __call__
E           return kern(*args)
E         File "cupy/core/_kernel.pyx", line 840, in cupy.core._kernel.ElementwiseKernel.__call__
E           kern = self._get_elementwise_kernel(dev_id, arginfos, type_map)
E         File "cupy/core/_kernel.pyx", line 865, in cupy.core._kernel.ElementwiseKernel._get_elementwise_kernel
E           kern = _get_elementwise_kernel(
E         File "cupy/_util.pyx", line 59, in cupy._util.memoize.decorator.ret
E           result = f(*args, **kwargs)
E         File "cupy/core/_kernel.pyx", line 652, in cupy.core._kernel._get_elementwise_kernel
E           return _get_simple_elementwise_kernel(
E         File "cupy/core/_kernel.pyx", line 38, in cupy.core._kernel._get_simple_elementwise_kernel
E           cpdef function.Function _get_simple_elementwise_kernel(
E         File "cupy/core/_kernel.pyx", line 61, in cupy.core._kernel._get_simple_elementwise_kernel
E           module = compile_with_cache(module_code, options)
E         File "cupy/core/core.pyx", line 2021, in cupy.core.core.compile_with_cache
E           return cuda.compile_with_cache(
E         File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.t8hdvgF7FH/cupy/cupy/cuda/compiler.py", line 428, in compile_with_cache
E           return _compile_with_cache_hip(
E         File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.t8hdvgF7FH/cupy/cupy/cuda/compiler.py", line 829, in _compile_with_cache_hip
E           temp_path = tf.name
E         File "/home/kmaeh/.pyenv/versions/3.8.7/lib/python3.8/tempfile.py", line 491, in __exit__
E           result = self.file.__exit__(exc, value, tb)
E       OSError: [Errno 28] No space left on device

/home/kmaeh/.pyenv/versions/3.8.7/lib/python3.8/tempfile.py:491: AssertionError
----------------------------- Captured stdout call -----------------------------
dtype is <class 'numpy.float64'>
______________ TestVectorizeExprs.test_vectorize_ufunc_call_dtype ______________

self = <cupy_tests.functional_tests.test_vectorize.TestVectorizeExprs testMethod=test_vectorize_ufunc_call_dtype>
xp = <module 'cupy' from '/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.t8hdvgF7FH/cupy/cupy/__init__.py'>
dtype1 = <class 'numpy.uint8'>, dtype2 = <class 'numpy.uint8'>

    @testing.for_all_dtypes_combination(names=('dtype1', 'dtype2'))
    @testing.numpy_cupy_allclose(
        rtol={numpy.float16: 1e3, 'default': 1e-7}, accept_error=TypeError)
    def test_vectorize_ufunc_call_dtype(self, xp, dtype1, dtype2):
        def my_ufunc_add(x, y):
            return xp.add(x, y, dtype=dtype2)
    
        f = xp.vectorize(my_ufunc_add)
        x = testing.shaped_random((20, 30), xp, dtype1, seed=1)
        y = testing.shaped_random((20, 30), xp, dtype1, seed=2)
>       return f(x, y)

tests/cupy_tests/functional_tests/test_vectorize.py:247: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
cupy/_functional/vectorize.py:98: in __call__
    return kern(*args)
cupy/core/_kernel.pyx:840: in cupy.core._kernel.ElementwiseKernel.__call__
    kern = self._get_elementwise_kernel(dev_id, arginfos, type_map)
cupy/core/_kernel.pyx:865: in cupy.core._kernel.ElementwiseKernel._get_elementwise_kernel
    kern = _get_elementwise_kernel(
cupy/_util.pyx:59: in cupy._util.memoize.decorator.ret
    result = f(*args, **kwargs)
cupy/core/_kernel.pyx:652: in cupy.core._kernel._get_elementwise_kernel
    return _get_simple_elementwise_kernel(
cupy/core/_kernel.pyx:38: in cupy.core._kernel._get_simple_elementwise_kernel
    cpdef function.Function _get_simple_elementwise_kernel(
cupy/core/_kernel.pyx:61: in cupy.core._kernel._get_simple_elementwise_kernel
    module = compile_with_cache(module_code, options)
cupy/core/core.pyx:2021: in cupy.core.core.compile_with_cache
    return cuda.compile_with_cache(
cupy/cuda/compiler.py:428: in compile_with_cache
    return _compile_with_cache_hip(
cupy/cuda/compiler.py:829: in _compile_with_cache_hip
    temp_path = tf.name
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <tempfile._TemporaryFileWrapper object at 0x7f577c266790>, exc = None
value = None, tb = None

    def __exit__(self, exc, value, tb):
>       result = self.file.__exit__(exc, value, tb)
E       AssertionError: Only cupy raises error
E       
E       Traceback (most recent call last):
E         File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.t8hdvgF7FH/cupy/cupy/testing/_helper.py", line 47, in _call_func
E           result = impl(self, *args, **kw)
E         File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.t8hdvgF7FH/cupy/tests/cupy_tests/functional_tests/test_vectorize.py", line 247, in test_vectorize_ufunc_call_dtype
E           return f(x, y)
E         File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.t8hdvgF7FH/cupy/cupy/_functional/vectorize.py", line 98, in __call__
E           return kern(*args)
E         File "cupy/core/_kernel.pyx", line 840, in cupy.core._kernel.ElementwiseKernel.__call__
E           kern = self._get_elementwise_kernel(dev_id, arginfos, type_map)
E         File "cupy/core/_kernel.pyx", line 865, in cupy.core._kernel.ElementwiseKernel._get_elementwise_kernel
E           kern = _get_elementwise_kernel(
E         File "cupy/_util.pyx", line 59, in cupy._util.memoize.decorator.ret
E           result = f(*args, **kwargs)
E         File "cupy/core/_kernel.pyx", line 652, in cupy.core._kernel._get_elementwise_kernel
E           return _get_simple_elementwise_kernel(
E         File "cupy/core/_kernel.pyx", line 38, in cupy.core._kernel._get_simple_elementwise_kernel
E           cpdef function.Function _get_simple_elementwise_kernel(
E         File "cupy/core/_kernel.pyx", line 61, in cupy.core._kernel._get_simple_elementwise_kernel
E           module = compile_with_cache(module_code, options)
E         File "cupy/core/core.pyx", line 2021, in cupy.core.core.compile_with_cache
E           return cuda.compile_with_cache(
E         File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.t8hdvgF7FH/cupy/cupy/cuda/compiler.py", line 428, in compile_with_cache
E           return _compile_with_cache_hip(
E         File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.t8hdvgF7FH/cupy/cupy/cuda/compiler.py", line 829, in _compile_with_cache_hip
E           temp_path = tf.name
E         File "/home/kmaeh/.pyenv/versions/3.8.7/lib/python3.8/tempfile.py", line 491, in __exit__
E           result = self.file.__exit__(exc, value, tb)
E       OSError: [Errno 28] No space left on device

/home/kmaeh/.pyenv/versions/3.8.7/lib/python3.8/tempfile.py:491: AssertionError
----------------------------- Captured stdout call -----------------------------
{'dtype1': <class 'numpy.uint8'>, 'dtype2': <class 'numpy.uint8'>}
_____________ TestVectorizeInstructions.test_vectorize_assign_new ______________

self = <cupy_tests.functional_tests.test_vectorize.TestVectorizeInstructions testMethod=test_vectorize_assign_new>
xp = <module 'cupy' from '/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.t8hdvgF7FH/cupy/cupy/__init__.py'>
dtype = <class 'numpy.float64'>

    @testing.for_all_dtypes()
    @testing.numpy_cupy_allclose()
    def test_vectorize_assign_new(self, xp, dtype):
        def my_assign(x):
            y = x + x
            return x + y
    
        f = xp.vectorize(my_assign)
        x = testing.shaped_random((20, 30), xp, dtype, seed=1)
>       return f(x)

tests/cupy_tests/functional_tests/test_vectorize.py:274: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
cupy/_functional/vectorize.py:98: in __call__
    return kern(*args)
cupy/core/_kernel.pyx:840: in cupy.core._kernel.ElementwiseKernel.__call__
    kern = self._get_elementwise_kernel(dev_id, arginfos, type_map)
cupy/core/_kernel.pyx:865: in cupy.core._kernel.ElementwiseKernel._get_elementwise_kernel
    kern = _get_elementwise_kernel(
cupy/_util.pyx:59: in cupy._util.memoize.decorator.ret
    result = f(*args, **kwargs)
cupy/core/_kernel.pyx:652: in cupy.core._kernel._get_elementwise_kernel
    return _get_simple_elementwise_kernel(
cupy/core/_kernel.pyx:38: in cupy.core._kernel._get_simple_elementwise_kernel
    cpdef function.Function _get_simple_elementwise_kernel(
cupy/core/_kernel.pyx:61: in cupy.core._kernel._get_simple_elementwise_kernel
    module = compile_with_cache(module_code, options)
cupy/core/core.pyx:2021: in cupy.core.core.compile_with_cache
    return cuda.compile_with_cache(
cupy/cuda/compiler.py:428: in compile_with_cache
    return _compile_with_cache_hip(
cupy/cuda/compiler.py:829: in _compile_with_cache_hip
    temp_path = tf.name
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <tempfile._TemporaryFileWrapper object at 0x7f5010ed61f0>, exc = None
value = None, tb = None

    def __exit__(self, exc, value, tb):
>       result = self.file.__exit__(exc, value, tb)
E       AssertionError: Only cupy raises error
E       
E       Traceback (most recent call last):
E         File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.t8hdvgF7FH/cupy/cupy/testing/_helper.py", line 47, in _call_func
E           result = impl(self, *args, **kw)
E         File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.t8hdvgF7FH/cupy/tests/cupy_tests/functional_tests/test_vectorize.py", line 274, in test_vectorize_assign_new
E           return f(x)
E         File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.t8hdvgF7FH/cupy/cupy/_functional/vectorize.py", line 98, in __call__
E           return kern(*args)
E         File "cupy/core/_kernel.pyx", line 840, in cupy.core._kernel.ElementwiseKernel.__call__
E           kern = self._get_elementwise_kernel(dev_id, arginfos, type_map)
E         File "cupy/core/_kernel.pyx", line 865, in cupy.core._kernel.ElementwiseKernel._get_elementwise_kernel
E           kern = _get_elementwise_kernel(
E         File "cupy/_util.pyx", line 59, in cupy._util.memoize.decorator.ret
E           result = f(*args, **kwargs)
E         File "cupy/core/_kernel.pyx", line 652, in cupy.core._kernel._get_elementwise_kernel
E           return _get_simple_elementwise_kernel(
E         File "cupy/core/_kernel.pyx", line 38, in cupy.core._kernel._get_simple_elementwise_kernel
E           cpdef function.Function _get_simple_elementwise_kernel(
E         File "cupy/core/_kernel.pyx", line 61, in cupy.core._kernel._get_simple_elementwise_kernel
E           module = compile_with_cache(module_code, options)
E         File "cupy/core/core.pyx", line 2021, in cupy.core.core.compile_with_cache
E           return cuda.compile_with_cache(
E         File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.t8hdvgF7FH/cupy/cupy/cuda/compiler.py", line 428, in compile_with_cache
E           return _compile_with_cache_hip(
E         File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.t8hdvgF7FH/cupy/cupy/cuda/compiler.py", line 829, in _compile_with_cache_hip
E           temp_path = tf.name
E         File "/home/kmaeh/.pyenv/versions/3.8.7/lib/python3.8/tempfile.py", line 491, in __exit__
E           result = self.file.__exit__(exc, value, tb)
E       OSError: [Errno 28] No space left on device

/home/kmaeh/.pyenv/versions/3.8.7/lib/python3.8/tempfile.py:491: AssertionError
----------------------------- Captured stdout call -----------------------------
dtype is <class 'numpy.float64'>
____________ TestVectorizeInstructions.test_vectorize_assign_update ____________

self = <cupy_tests.functional_tests.test_vectorize.TestVectorizeInstructions testMethod=test_vectorize_assign_update>
xp = <module 'cupy' from '/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.t8hdvgF7FH/cupy/cupy/__init__.py'>
dtype = <class 'numpy.float64'>

    @testing.for_all_dtypes()
    @testing.numpy_cupy_allclose()
    def test_vectorize_assign_update(self, xp, dtype):
        def my_assign(x):
            x = x + x
            return x + x
    
        f = xp.vectorize(my_assign)
        x = testing.shaped_random((20, 30), xp, dtype, seed=1)
>       return f(x)

tests/cupy_tests/functional_tests/test_vectorize.py:285: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
cupy/_functional/vectorize.py:98: in __call__
    return kern(*args)
cupy/core/_kernel.pyx:840: in cupy.core._kernel.ElementwiseKernel.__call__
    kern = self._get_elementwise_kernel(dev_id, arginfos, type_map)
cupy/core/_kernel.pyx:865: in cupy.core._kernel.ElementwiseKernel._get_elementwise_kernel
    kern = _get_elementwise_kernel(
cupy/_util.pyx:59: in cupy._util.memoize.decorator.ret
    result = f(*args, **kwargs)
cupy/core/_kernel.pyx:652: in cupy.core._kernel._get_elementwise_kernel
    return _get_simple_elementwise_kernel(
cupy/core/_kernel.pyx:38: in cupy.core._kernel._get_simple_elementwise_kernel
    cpdef function.Function _get_simple_elementwise_kernel(
cupy/core/_kernel.pyx:61: in cupy.core._kernel._get_simple_elementwise_kernel
    module = compile_with_cache(module_code, options)
cupy/core/core.pyx:2021: in cupy.core.core.compile_with_cache
    return cuda.compile_with_cache(
cupy/cuda/compiler.py:428: in compile_with_cache
    return _compile_with_cache_hip(
cupy/cuda/compiler.py:829: in _compile_with_cache_hip
    temp_path = tf.name
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <tempfile._TemporaryFileWrapper object at 0x7f5010948c40>, exc = None
value = None, tb = None

    def __exit__(self, exc, value, tb):
>       result = self.file.__exit__(exc, value, tb)
E       AssertionError: Only cupy raises error
E       
E       Traceback (most recent call last):
E         File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.t8hdvgF7FH/cupy/cupy/testing/_helper.py", line 47, in _call_func
E           result = impl(self, *args, **kw)
E         File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.t8hdvgF7FH/cupy/tests/cupy_tests/functional_tests/test_vectorize.py", line 285, in test_vectorize_assign_update
E           return f(x)
E         File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.t8hdvgF7FH/cupy/cupy/_functional/vectorize.py", line 98, in __call__
E           return kern(*args)
E         File "cupy/core/_kernel.pyx", line 840, in cupy.core._kernel.ElementwiseKernel.__call__
E           kern = self._get_elementwise_kernel(dev_id, arginfos, type_map)
E         File "cupy/core/_kernel.pyx", line 865, in cupy.core._kernel.ElementwiseKernel._get_elementwise_kernel
E           kern = _get_elementwise_kernel(
E         File "cupy/_util.pyx", line 59, in cupy._util.memoize.decorator.ret
E           result = f(*args, **kwargs)
E         File "cupy/core/_kernel.pyx", line 652, in cupy.core._kernel._get_elementwise_kernel
E           return _get_simple_elementwise_kernel(
E         File "cupy/core/_kernel.pyx", line 38, in cupy.core._kernel._get_simple_elementwise_kernel
E           cpdef function.Function _get_simple_elementwise_kernel(
E         File "cupy/core/_kernel.pyx", line 61, in cupy.core._kernel._get_simple_elementwise_kernel
E           module = compile_with_cache(module_code, options)
E         File "cupy/core/core.pyx", line 2021, in cupy.core.core.compile_with_cache
E           return cuda.compile_with_cache(
E         File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.t8hdvgF7FH/cupy/cupy/cuda/compiler.py", line 428, in compile_with_cache
E           return _compile_with_cache_hip(
E         File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.t8hdvgF7FH/cupy/cupy/cuda/compiler.py", line 829, in _compile_with_cache_hip
E           temp_path = tf.name
E         File "/home/kmaeh/.pyenv/versions/3.8.7/lib/python3.8/tempfile.py", line 491, in __exit__
E           result = self.file.__exit__(exc, value, tb)
E       OSError: [Errno 28] No space left on device

/home/kmaeh/.pyenv/versions/3.8.7/lib/python3.8/tempfile.py:491: AssertionError
----------------------------- Captured stdout call -----------------------------
dtype is <class 'numpy.float64'>
______________ TestVectorizeInstructions.test_vectorize_augassign ______________

self = <cupy_tests.functional_tests.test_vectorize.TestVectorizeInstructions testMethod=test_vectorize_augassign>
xp = <module 'cupy' from '/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.t8hdvgF7FH/cupy/cupy/__init__.py'>
dtype = <class 'numpy.float64'>

    @testing.for_all_dtypes()
    @testing.numpy_cupy_allclose()
    def test_vectorize_augassign(self, xp, dtype):
        def my_augassign(x):
            x += x
            return x + x
    
        f = xp.vectorize(my_augassign)
        x = testing.shaped_random((20, 30), xp, dtype, seed=1)
>       return f(x)

tests/cupy_tests/functional_tests/test_vectorize.py:296: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
cupy/_functional/vectorize.py:98: in __call__
    return kern(*args)
cupy/core/_kernel.pyx:840: in cupy.core._kernel.ElementwiseKernel.__call__
    kern = self._get_elementwise_kernel(dev_id, arginfos, type_map)
cupy/core/_kernel.pyx:865: in cupy.core._kernel.ElementwiseKernel._get_elementwise_kernel
    kern = _get_elementwise_kernel(
cupy/_util.pyx:59: in cupy._util.memoize.decorator.ret
    result = f(*args, **kwargs)
cupy/core/_kernel.pyx:652: in cupy.core._kernel._get_elementwise_kernel
    return _get_simple_elementwise_kernel(
cupy/core/_kernel.pyx:38: in cupy.core._kernel._get_simple_elementwise_kernel
    cpdef function.Function _get_simple_elementwise_kernel(
cupy/core/_kernel.pyx:61: in cupy.core._kernel._get_simple_elementwise_kernel
    module = compile_with_cache(module_code, options)
cupy/core/core.pyx:2021: in cupy.core.core.compile_with_cache
    return cuda.compile_with_cache(
cupy/cuda/compiler.py:428: in compile_with_cache
    return _compile_with_cache_hip(
cupy/cuda/compiler.py:829: in _compile_with_cache_hip
    temp_path = tf.name
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <tempfile._TemporaryFileWrapper object at 0x7f5046396190>, exc = None
value = None, tb = None

    def __exit__(self, exc, value, tb):
>       result = self.file.__exit__(exc, value, tb)
E       AssertionError: Only cupy raises error
E       
E       Traceback (most recent call last):
E         File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.t8hdvgF7FH/cupy/cupy/testing/_helper.py", line 47, in _call_func
E           result = impl(self, *args, **kw)
E         File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.t8hdvgF7FH/cupy/tests/cupy_tests/functional_tests/test_vectorize.py", line 296, in test_vectorize_augassign
E           return f(x)
E         File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.t8hdvgF7FH/cupy/cupy/_functional/vectorize.py", line 98, in __call__
E           return kern(*args)
E         File "cupy/core/_kernel.pyx", line 840, in cupy.core._kernel.ElementwiseKernel.__call__
E           kern = self._get_elementwise_kernel(dev_id, arginfos, type_map)
E         File "cupy/core/_kernel.pyx", line 865, in cupy.core._kernel.ElementwiseKernel._get_elementwise_kernel
E           kern = _get_elementwise_kernel(
E         File "cupy/_util.pyx", line 59, in cupy._util.memoize.decorator.ret
E           result = f(*args, **kwargs)
E         File "cupy/core/_kernel.pyx", line 652, in cupy.core._kernel._get_elementwise_kernel
E           return _get_simple_elementwise_kernel(
E         File "cupy/core/_kernel.pyx", line 38, in cupy.core._kernel._get_simple_elementwise_kernel
E           cpdef function.Function _get_simple_elementwise_kernel(
E         File "cupy/core/_kernel.pyx", line 61, in cupy.core._kernel._get_simple_elementwise_kernel
E           module = compile_with_cache(module_code, options)
E         File "cupy/core/core.pyx", line 2021, in cupy.core.core.compile_with_cache
E           return cuda.compile_with_cache(
E         File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.t8hdvgF7FH/cupy/cupy/cuda/compiler.py", line 428, in compile_with_cache
E           return _compile_with_cache_hip(
E         File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.t8hdvgF7FH/cupy/cupy/cuda/compiler.py", line 829, in _compile_with_cache_hip
E           temp_path = tf.name
E         File "/home/kmaeh/.pyenv/versions/3.8.7/lib/python3.8/tempfile.py", line 491, in __exit__
E           result = self.file.__exit__(exc, value, tb)
E       OSError: [Errno 28] No space left on device

/home/kmaeh/.pyenv/versions/3.8.7/lib/python3.8/tempfile.py:491: AssertionError
----------------------------- Captured stdout call -----------------------------
dtype is <class 'numpy.float64'>
____________ TestVectorizeInstructions.test_vectorize_const_assign _____________

self = <cupy_tests.functional_tests.test_vectorize.TestVectorizeInstructions testMethod=test_vectorize_const_assign>
xp = <module 'cupy' from '/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.t8hdvgF7FH/cupy/cupy/__init__.py'>

    @testing.numpy_cupy_array_equal()
    def test_vectorize_const_assign(self, xp):
        def my_typecast(x):
            typecast = xp.dtype('f').type
            return typecast(x)
    
        f = xp.vectorize(my_typecast)
        x = testing.shaped_random((20, 30), xp, numpy.int32, seed=1)
>       return f(x)

tests/cupy_tests/functional_tests/test_vectorize.py:306: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
cupy/_functional/vectorize.py:98: in __call__
    return kern(*args)
cupy/core/_kernel.pyx:840: in cupy.core._kernel.ElementwiseKernel.__call__
    kern = self._get_elementwise_kernel(dev_id, arginfos, type_map)
cupy/core/_kernel.pyx:865: in cupy.core._kernel.ElementwiseKernel._get_elementwise_kernel
    kern = _get_elementwise_kernel(
cupy/_util.pyx:59: in cupy._util.memoize.decorator.ret
    result = f(*args, **kwargs)
cupy/core/_kernel.pyx:652: in cupy.core._kernel._get_elementwise_kernel
    return _get_simple_elementwise_kernel(
cupy/core/_kernel.pyx:38: in cupy.core._kernel._get_simple_elementwise_kernel
    cpdef function.Function _get_simple_elementwise_kernel(
cupy/core/_kernel.pyx:61: in cupy.core._kernel._get_simple_elementwise_kernel
    module = compile_with_cache(module_code, options)
cupy/core/core.pyx:2021: in cupy.core.core.compile_with_cache
    return cuda.compile_with_cache(
cupy/cuda/compiler.py:428: in compile_with_cache
    return _compile_with_cache_hip(
cupy/cuda/compiler.py:829: in _compile_with_cache_hip
    temp_path = tf.name
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <tempfile._TemporaryFileWrapper object at 0x7f50117f26d0>, exc = None
value = None, tb = None

    def __exit__(self, exc, value, tb):
>       result = self.file.__exit__(exc, value, tb)
E       AssertionError: Only cupy raises error
E       
E       Traceback (most recent call last):
E         File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.t8hdvgF7FH/cupy/cupy/testing/_helper.py", line 47, in _call_func
E           result = impl(self, *args, **kw)
E         File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.t8hdvgF7FH/cupy/tests/cupy_tests/functional_tests/test_vectorize.py", line 306, in test_vectorize_const_assign
E           return f(x)
E         File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.t8hdvgF7FH/cupy/cupy/_functional/vectorize.py", line 98, in __call__
E           return kern(*args)
E         File "cupy/core/_kernel.pyx", line 840, in cupy.core._kernel.ElementwiseKernel.__call__
E           kern = self._get_elementwise_kernel(dev_id, arginfos, type_map)
E         File "cupy/core/_kernel.pyx", line 865, in cupy.core._kernel.ElementwiseKernel._get_elementwise_kernel
E           kern = _get_elementwise_kernel(
E         File "cupy/_util.pyx", line 59, in cupy._util.memoize.decorator.ret
E           result = f(*args, **kwargs)
E         File "cupy/core/_kernel.pyx", line 652, in cupy.core._kernel._get_elementwise_kernel
E           return _get_simple_elementwise_kernel(
E         File "cupy/core/_kernel.pyx", line 38, in cupy.core._kernel._get_simple_elementwise_kernel
E           cpdef function.Function _get_simple_elementwise_kernel(
E         File "cupy/core/_kernel.pyx", line 61, in cupy.core._kernel._get_simple_elementwise_kernel
E           module = compile_with_cache(module_code, options)
E         File "cupy/core/core.pyx", line 2021, in cupy.core.core.compile_with_cache
E           return cuda.compile_with_cache(
E         File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.t8hdvgF7FH/cupy/cupy/cuda/compiler.py", line 428, in compile_with_cache
E           return _compile_with_cache_hip(
E         File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.t8hdvgF7FH/cupy/cupy/cuda/compiler.py", line 829, in _compile_with_cache_hip
E           temp_path = tf.name
E         File "/home/kmaeh/.pyenv/versions/3.8.7/lib/python3.8/tempfile.py", line 491, in __exit__
E           result = self.file.__exit__(exc, value, tb)
E       OSError: [Errno 28] No space left on device

/home/kmaeh/.pyenv/versions/3.8.7/lib/python3.8/tempfile.py:491: AssertionError
_________ TestVectorizeInstructions.test_vectorize_nonconst_for_value __________

self = <cupy_tests.functional_tests.test_vectorize.TestVectorizeInstructions testMethod=test_vectorize_nonconst_for_value>
xp = <module 'cupy' from '/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.t8hdvgF7FH/cupy/cupy/__init__.py'>

    @testing.numpy_cupy_array_equal()
    def test_vectorize_nonconst_for_value(self, xp):
        def my_nonconst_result(x):
            result = numpy.int32(0)
            result = x
            return result
    
        f = xp.vectorize(my_nonconst_result)
        x = testing.shaped_random((20, 30), xp, numpy.int32, seed=1)
>       return f(x)

tests/cupy_tests/functional_tests/test_vectorize.py:338: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
cupy/_functional/vectorize.py:98: in __call__
    return kern(*args)
cupy/core/_kernel.pyx:840: in cupy.core._kernel.ElementwiseKernel.__call__
    kern = self._get_elementwise_kernel(dev_id, arginfos, type_map)
cupy/core/_kernel.pyx:865: in cupy.core._kernel.ElementwiseKernel._get_elementwise_kernel
    kern = _get_elementwise_kernel(
cupy/_util.pyx:59: in cupy._util.memoize.decorator.ret
    result = f(*args, **kwargs)
cupy/core/_kernel.pyx:652: in cupy.core._kernel._get_elementwise_kernel
    return _get_simple_elementwise_kernel(
cupy/core/_kernel.pyx:38: in cupy.core._kernel._get_simple_elementwise_kernel
    cpdef function.Function _get_simple_elementwise_kernel(
cupy/core/_kernel.pyx:61: in cupy.core._kernel._get_simple_elementwise_kernel
    module = compile_with_cache(module_code, options)
cupy/core/core.pyx:2021: in cupy.core.core.compile_with_cache
    return cuda.compile_with_cache(
cupy/cuda/compiler.py:428: in compile_with_cache
    return _compile_with_cache_hip(
cupy/cuda/compiler.py:829: in _compile_with_cache_hip
    temp_path = tf.name
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <tempfile._TemporaryFileWrapper object at 0x7f50109f43d0>, exc = None
value = None, tb = None

    def __exit__(self, exc, value, tb):
>       result = self.file.__exit__(exc, value, tb)
E       AssertionError: Only cupy raises error
E       
E       Traceback (most recent call last):
E         File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.t8hdvgF7FH/cupy/cupy/testing/_helper.py", line 47, in _call_func
E           result = impl(self, *args, **kw)
E         File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.t8hdvgF7FH/cupy/tests/cupy_tests/functional_tests/test_vectorize.py", line 338, in test_vectorize_nonconst_for_value
E           return f(x)
E         File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.t8hdvgF7FH/cupy/cupy/_functional/vectorize.py", line 98, in __call__
E           return kern(*args)
E         File "cupy/core/_kernel.pyx", line 840, in cupy.core._kernel.ElementwiseKernel.__call__
E           kern = self._get_elementwise_kernel(dev_id, arginfos, type_map)
E         File "cupy/core/_kernel.pyx", line 865, in cupy.core._kernel.ElementwiseKernel._get_elementwise_kernel
E           kern = _get_elementwise_kernel(
E         File "cupy/_util.pyx", line 59, in cupy._util.memoize.decorator.ret
E           result = f(*args, **kwargs)
E         File "cupy/core/_kernel.pyx", line 652, in cupy.core._kernel._get_elementwise_kernel
E           return _get_simple_elementwise_kernel(
E         File "cupy/core/_kernel.pyx", line 38, in cupy.core._kernel._get_simple_elementwise_kernel
E           cpdef function.Function _get_simple_elementwise_kernel(
E         File "cupy/core/_kernel.pyx", line 61, in cupy.core._kernel._get_simple_elementwise_kernel
E           module = compile_with_cache(module_code, options)
E         File "cupy/core/core.pyx", line 2021, in cupy.core.core.compile_with_cache
E           return cuda.compile_with_cache(
E         File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.t8hdvgF7FH/cupy/cupy/cuda/compiler.py", line 428, in compile_with_cache
E           return _compile_with_cache_hip(
E         File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.t8hdvgF7FH/cupy/cupy/cuda/compiler.py", line 829, in _compile_with_cache_hip
E           temp_path = tf.name
E         File "/home/kmaeh/.pyenv/versions/3.8.7/lib/python3.8/tempfile.py", line 491, in __exit__
E           result = self.file.__exit__(exc, value, tb)
E       OSError: [Errno 28] No space left on device

/home/kmaeh/.pyenv/versions/3.8.7/lib/python3.8/tempfile.py:491: AssertionError
_________________________ TestVectorizeStmts.test_elif _________________________

self = <cupy_tests.functional_tests.test_vectorize.TestVectorizeStmts testMethod=test_elif>
xp = <module 'cupy' from '/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.t8hdvgF7FH/cupy/cupy/__init__.py'>

    @testing.numpy_cupy_array_equal()
    def test_elif(self, xp):
        def func_if(x):
            y = 0
            if x % 2 == 0:
                y = x
            elif x % 3 == 0:
                y = -x
            return y
    
        f = xp.vectorize(func_if)
        x = xp.array([1, 2, 3, 4, 5, 6, 7, 8, 9, 10])
>       return f(x)

tests/cupy_tests/functional_tests/test_vectorize.py:380: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
cupy/_functional/vectorize.py:98: in __call__
    return kern(*args)
cupy/core/_kernel.pyx:840: in cupy.core._kernel.ElementwiseKernel.__call__
    kern = self._get_elementwise_kernel(dev_id, arginfos, type_map)
cupy/core/_kernel.pyx:865: in cupy.core._kernel.ElementwiseKernel._get_elementwise_kernel
    kern = _get_elementwise_kernel(
cupy/_util.pyx:59: in cupy._util.memoize.decorator.ret
    result = f(*args, **kwargs)
cupy/core/_kernel.pyx:652: in cupy.core._kernel._get_elementwise_kernel
    return _get_simple_elementwise_kernel(
cupy/core/_kernel.pyx:38: in cupy.core._kernel._get_simple_elementwise_kernel
    cpdef function.Function _get_simple_elementwise_kernel(
cupy/core/_kernel.pyx:61: in cupy.core._kernel._get_simple_elementwise_kernel
    module = compile_with_cache(module_code, options)
cupy/core/core.pyx:2021: in cupy.core.core.compile_with_cache
    return cuda.compile_with_cache(
cupy/cuda/compiler.py:428: in compile_with_cache
    return _compile_with_cache_hip(
cupy/cuda/compiler.py:829: in _compile_with_cache_hip
    temp_path = tf.name
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <tempfile._TemporaryFileWrapper object at 0x7f50462da5b0>, exc = None
value = None, tb = None

    def __exit__(self, exc, value, tb):
>       result = self.file.__exit__(exc, value, tb)
E       AssertionError: Only cupy raises error
E       
E       Traceback (most recent call last):
E         File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.t8hdvgF7FH/cupy/cupy/testing/_helper.py", line 47, in _call_func
E           result = impl(self, *args, **kw)
E         File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.t8hdvgF7FH/cupy/tests/cupy_tests/functional_tests/test_vectorize.py", line 380, in test_elif
E           return f(x)
E         File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.t8hdvgF7FH/cupy/cupy/_functional/vectorize.py", line 98, in __call__
E           return kern(*args)
E         File "cupy/core/_kernel.pyx", line 840, in cupy.core._kernel.ElementwiseKernel.__call__
E           kern = self._get_elementwise_kernel(dev_id, arginfos, type_map)
E         File "cupy/core/_kernel.pyx", line 865, in cupy.core._kernel.ElementwiseKernel._get_elementwise_kernel
E           kern = _get_elementwise_kernel(
E         File "cupy/_util.pyx", line 59, in cupy._util.memoize.decorator.ret
E           result = f(*args, **kwargs)
E         File "cupy/core/_kernel.pyx", line 652, in cupy.core._kernel._get_elementwise_kernel
E           return _get_simple_elementwise_kernel(
E         File "cupy/core/_kernel.pyx", line 38, in cupy.core._kernel._get_simple_elementwise_kernel
E           cpdef function.Function _get_simple_elementwise_kernel(
E         File "cupy/core/_kernel.pyx", line 61, in cupy.core._kernel._get_simple_elementwise_kernel
E           module = compile_with_cache(module_code, options)
E         File "cupy/core/core.pyx", line 2021, in cupy.core.core.compile_with_cache
E           return cuda.compile_with_cache(
E         File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.t8hdvgF7FH/cupy/cupy/cuda/compiler.py", line 428, in compile_with_cache
E           return _compile_with_cache_hip(
E         File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.t8hdvgF7FH/cupy/cupy/cuda/compiler.py", line 829, in _compile_with_cache_hip
E           temp_path = tf.name
E         File "/home/kmaeh/.pyenv/versions/3.8.7/lib/python3.8/tempfile.py", line 491, in __exit__
E           result = self.file.__exit__(exc, value, tb)
E       OSError: [Errno 28] No space left on device

/home/kmaeh/.pyenv/versions/3.8.7/lib/python3.8/tempfile.py:491: AssertionError
_________________________ TestVectorizeStmts.test_for __________________________

self = <cupy_tests.functional_tests.test_vectorize.TestVectorizeStmts testMethod=test_for>
xp = <module 'cupy' from '/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.t8hdvgF7FH/cupy/cupy/__init__.py'>

    @testing.numpy_cupy_array_equal()
    def test_for(self, xp):
        def func_for(x):
            y = 0
            for i in range(x):
                y += i
            return y
    
        f = xp.vectorize(func_for)
        x = xp.array([1, 2, 3, 4, 5, 6, 7, 8, 9, 10])
>       return f(x)

tests/cupy_tests/functional_tests/test_vectorize.py:405: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
cupy/_functional/vectorize.py:98: in __call__
    return kern(*args)
cupy/core/_kernel.pyx:840: in cupy.core._kernel.ElementwiseKernel.__call__
    kern = self._get_elementwise_kernel(dev_id, arginfos, type_map)
cupy/core/_kernel.pyx:865: in cupy.core._kernel.ElementwiseKernel._get_elementwise_kernel
    kern = _get_elementwise_kernel(
cupy/_util.pyx:59: in cupy._util.memoize.decorator.ret
    result = f(*args, **kwargs)
cupy/core/_kernel.pyx:652: in cupy.core._kernel._get_elementwise_kernel
    return _get_simple_elementwise_kernel(
cupy/core/_kernel.pyx:38: in cupy.core._kernel._get_simple_elementwise_kernel
    cpdef function.Function _get_simple_elementwise_kernel(
cupy/core/_kernel.pyx:61: in cupy.core._kernel._get_simple_elementwise_kernel
    module = compile_with_cache(module_code, options)
cupy/core/core.pyx:2021: in cupy.core.core.compile_with_cache
    return cuda.compile_with_cache(
cupy/cuda/compiler.py:428: in compile_with_cache
    return _compile_with_cache_hip(
cupy/cuda/compiler.py:829: in _compile_with_cache_hip
    temp_path = tf.name
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <tempfile._TemporaryFileWrapper object at 0x7f50109cabb0>, exc = None
value = None, tb = None

    def __exit__(self, exc, value, tb):
>       result = self.file.__exit__(exc, value, tb)
E       AssertionError: Only cupy raises error
E       
E       Traceback (most recent call last):
E         File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.t8hdvgF7FH/cupy/cupy/testing/_helper.py", line 47, in _call_func
E           result = impl(self, *args, **kw)
E         File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.t8hdvgF7FH/cupy/tests/cupy_tests/functional_tests/test_vectorize.py", line 405, in test_for
E           return f(x)
E         File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.t8hdvgF7FH/cupy/cupy/_functional/vectorize.py", line 98, in __call__
E           return kern(*args)
E         File "cupy/core/_kernel.pyx", line 840, in cupy.core._kernel.ElementwiseKernel.__call__
E           kern = self._get_elementwise_kernel(dev_id, arginfos, type_map)
E         File "cupy/core/_kernel.pyx", line 865, in cupy.core._kernel.ElementwiseKernel._get_elementwise_kernel
E           kern = _get_elementwise_kernel(
E         File "cupy/_util.pyx", line 59, in cupy._util.memoize.decorator.ret
E           result = f(*args, **kwargs)
E         File "cupy/core/_kernel.pyx", line 652, in cupy.core._kernel._get_elementwise_kernel
E           return _get_simple_elementwise_kernel(
E         File "cupy/core/_kernel.pyx", line 38, in cupy.core._kernel._get_simple_elementwise_kernel
E           cpdef function.Function _get_simple_elementwise_kernel(
E         File "cupy/core/_kernel.pyx", line 61, in cupy.core._kernel._get_simple_elementwise_kernel
E           module = compile_with_cache(module_code, options)
E         File "cupy/core/core.pyx", line 2021, in cupy.core.core.compile_with_cache
E           return cuda.compile_with_cache(
E         File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.t8hdvgF7FH/cupy/cupy/cuda/compiler.py", line 428, in compile_with_cache
E           return _compile_with_cache_hip(
E         File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.t8hdvgF7FH/cupy/cupy/cuda/compiler.py", line 829, in _compile_with_cache_hip
E           temp_path = tf.name
E         File "/home/kmaeh/.pyenv/versions/3.8.7/lib/python3.8/tempfile.py", line 491, in __exit__
E           result = self.file.__exit__(exc, value, tb)
E       OSError: [Errno 28] No space left on device

/home/kmaeh/.pyenv/versions/3.8.7/lib/python3.8/tempfile.py:491: AssertionError
____________ TestVectorizeStmts.test_for_compound_expression_param _____________

self = <cupy_tests.functional_tests.test_vectorize.TestVectorizeStmts testMethod=test_for_compound_expression_param>
xp = <module 'cupy' from '/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.t8hdvgF7FH/cupy/cupy/__init__.py'>

    @testing.numpy_cupy_array_equal()
    def test_for_compound_expression_param(self, xp):
        def func_for(x, y):
            res = 0
            for i in range(x * y):
                res += i
            return res
    
        f = xp.vectorize(func_for)
        x = xp.array([0, 1, 2, 3, 4])
>       return f(x, x)

tests/cupy_tests/functional_tests/test_vectorize.py:465: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
cupy/_functional/vectorize.py:98: in __call__
    return kern(*args)
cupy/core/_kernel.pyx:840: in cupy.core._kernel.ElementwiseKernel.__call__
    kern = self._get_elementwise_kernel(dev_id, arginfos, type_map)
cupy/core/_kernel.pyx:865: in cupy.core._kernel.ElementwiseKernel._get_elementwise_kernel
    kern = _get_elementwise_kernel(
cupy/_util.pyx:59: in cupy._util.memoize.decorator.ret
    result = f(*args, **kwargs)
cupy/core/_kernel.pyx:652: in cupy.core._kernel._get_elementwise_kernel
    return _get_simple_elementwise_kernel(
cupy/core/_kernel.pyx:38: in cupy.core._kernel._get_simple_elementwise_kernel
    cpdef function.Function _get_simple_elementwise_kernel(
cupy/core/_kernel.pyx:61: in cupy.core._kernel._get_simple_elementwise_kernel
    module = compile_with_cache(module_code, options)
cupy/core/core.pyx:2021: in cupy.core.core.compile_with_cache
    return cuda.compile_with_cache(
cupy/cuda/compiler.py:428: in compile_with_cache
    return _compile_with_cache_hip(
cupy/cuda/compiler.py:829: in _compile_with_cache_hip
    temp_path = tf.name
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <tempfile._TemporaryFileWrapper object at 0x7f50109d3c40>, exc = None
value = None, tb = None

    def __exit__(self, exc, value, tb):
>       result = self.file.__exit__(exc, value, tb)
E       AssertionError: Only cupy raises error
E       
E       Traceback (most recent call last):
E         File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.t8hdvgF7FH/cupy/cupy/testing/_helper.py", line 47, in _call_func
E           result = impl(self, *args, **kw)
E         File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.t8hdvgF7FH/cupy/tests/cupy_tests/functional_tests/test_vectorize.py", line 465, in test_for_compound_expression_param
E           return f(x, x)
E         File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.t8hdvgF7FH/cupy/cupy/_functional/vectorize.py", line 98, in __call__
E           return kern(*args)
E         File "cupy/core/_kernel.pyx", line 840, in cupy.core._kernel.ElementwiseKernel.__call__
E           kern = self._get_elementwise_kernel(dev_id, arginfos, type_map)
E         File "cupy/core/_kernel.pyx", line 865, in cupy.core._kernel.ElementwiseKernel._get_elementwise_kernel
E           kern = _get_elementwise_kernel(
E         File "cupy/_util.pyx", line 59, in cupy._util.memoize.decorator.ret
E           result = f(*args, **kwargs)
E         File "cupy/core/_kernel.pyx", line 652, in cupy.core._kernel._get_elementwise_kernel
E           return _get_simple_elementwise_kernel(
E         File "cupy/core/_kernel.pyx", line 38, in cupy.core._kernel._get_simple_elementwise_kernel
E           cpdef function.Function _get_simple_elementwise_kernel(
E         File "cupy/core/_kernel.pyx", line 61, in cupy.core._kernel._get_simple_elementwise_kernel
E           module = compile_with_cache(module_code, options)
E         File "cupy/core/core.pyx", line 2021, in cupy.core.core.compile_with_cache
E           return cuda.compile_with_cache(
E         File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.t8hdvgF7FH/cupy/cupy/cuda/compiler.py", line 428, in compile_with_cache
E           return _compile_with_cache_hip(
E         File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.t8hdvgF7FH/cupy/cupy/cuda/compiler.py", line 829, in _compile_with_cache_hip
E           temp_path = tf.name
E         File "/home/kmaeh/.pyenv/versions/3.8.7/lib/python3.8/tempfile.py", line 491, in __exit__
E           result = self.file.__exit__(exc, value, tb)
E       OSError: [Errno 28] No space left on device

/home/kmaeh/.pyenv/versions/3.8.7/lib/python3.8/tempfile.py:491: AssertionError
___________________ TestVectorizeStmts.test_for_const_range ____________________

self = <cupy_tests.functional_tests.test_vectorize.TestVectorizeStmts testMethod=test_for_const_range>
xp = <module 'cupy' from '/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.t8hdvgF7FH/cupy/cupy/__init__.py'>

    @testing.numpy_cupy_array_equal()
    def test_for_const_range(self, xp):
        def func_for(x):
            for i in range(3, 10):
                x += i
            return x
    
        f = xp.vectorize(func_for)
        x = xp.array([1, 2, 3, 4, 5, 6, 7, 8, 9, 10])
>       return f(x)

tests/cupy_tests/functional_tests/test_vectorize.py:416: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
cupy/_functional/vectorize.py:98: in __call__
    return kern(*args)
cupy/core/_kernel.pyx:840: in cupy.core._kernel.ElementwiseKernel.__call__
    kern = self._get_elementwise_kernel(dev_id, arginfos, type_map)
cupy/core/_kernel.pyx:865: in cupy.core._kernel.ElementwiseKernel._get_elementwise_kernel
    kern = _get_elementwise_kernel(
cupy/_util.pyx:59: in cupy._util.memoize.decorator.ret
    result = f(*args, **kwargs)
cupy/core/_kernel.pyx:652: in cupy.core._kernel._get_elementwise_kernel
    return _get_simple_elementwise_kernel(
cupy/core/_kernel.pyx:38: in cupy.core._kernel._get_simple_elementwise_kernel
    cpdef function.Function _get_simple_elementwise_kernel(
cupy/core/_kernel.pyx:61: in cupy.core._kernel._get_simple_elementwise_kernel
    module = compile_with_cache(module_code, options)
cupy/core/core.pyx:2021: in cupy.core.core.compile_with_cache
    return cuda.compile_with_cache(
cupy/cuda/compiler.py:428: in compile_with_cache
    return _compile_with_cache_hip(
cupy/cuda/compiler.py:829: in _compile_with_cache_hip
    temp_path = tf.name
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <tempfile._TemporaryFileWrapper object at 0x7f50109ef8b0>, exc = None
value = None, tb = None

    def __exit__(self, exc, value, tb):
>       result = self.file.__exit__(exc, value, tb)
E       AssertionError: Only cupy raises error
E       
E       Traceback (most recent call last):
E         File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.t8hdvgF7FH/cupy/cupy/testing/_helper.py", line 47, in _call_func
E           result = impl(self, *args, **kw)
E         File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.t8hdvgF7FH/cupy/tests/cupy_tests/functional_tests/test_vectorize.py", line 416, in test_for_const_range
E           return f(x)
E         File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.t8hdvgF7FH/cupy/cupy/_functional/vectorize.py", line 98, in __call__
E           return kern(*args)
E         File "cupy/core/_kernel.pyx", line 840, in cupy.core._kernel.ElementwiseKernel.__call__
E           kern = self._get_elementwise_kernel(dev_id, arginfos, type_map)
E         File "cupy/core/_kernel.pyx", line 865, in cupy.core._kernel.ElementwiseKernel._get_elementwise_kernel
E           kern = _get_elementwise_kernel(
E         File "cupy/_util.pyx", line 59, in cupy._util.memoize.decorator.ret
E           result = f(*args, **kwargs)
E         File "cupy/core/_kernel.pyx", line 652, in cupy.core._kernel._get_elementwise_kernel
E           return _get_simple_elementwise_kernel(
E         File "cupy/core/_kernel.pyx", line 38, in cupy.core._kernel._get_simple_elementwise_kernel
E           cpdef function.Function _get_simple_elementwise_kernel(
E         File "cupy/core/_kernel.pyx", line 61, in cupy.core._kernel._get_simple_elementwise_kernel
E           module = compile_with_cache(module_code, options)
E         File "cupy/core/core.pyx", line 2021, in cupy.core.core.compile_with_cache
E           return cuda.compile_with_cache(
E         File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.t8hdvgF7FH/cupy/cupy/cuda/compiler.py", line 428, in compile_with_cache
E           return _compile_with_cache_hip(
E         File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.t8hdvgF7FH/cupy/cupy/cuda/compiler.py", line 829, in _compile_with_cache_hip
E           temp_path = tf.name
E         File "/home/kmaeh/.pyenv/versions/3.8.7/lib/python3.8/tempfile.py", line 491, in __exit__
E           result = self.file.__exit__(exc, value, tb)
E       OSError: [Errno 28] No space left on device

/home/kmaeh/.pyenv/versions/3.8.7/lib/python3.8/tempfile.py:491: AssertionError
________________ TestVectorizeStmts.test_for_counter_after_loop ________________

self = <cupy_tests.functional_tests.test_vectorize.TestVectorizeStmts testMethod=test_for_counter_after_loop>
xp = <module 'cupy' from '/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.t8hdvgF7FH/cupy/cupy/__init__.py'>

    @testing.numpy_cupy_array_equal()
    def test_for_counter_after_loop(self, xp):
        def func_for(x):
            for i in range(10):
                pass
            return x + i
    
        f = xp.vectorize(func_for)
        x = xp.array([0, 1, 2, 3, 4])
>       return f(x)

tests/cupy_tests/functional_tests/test_vectorize.py:453: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
cupy/_functional/vectorize.py:98: in __call__
    return kern(*args)
cupy/core/_kernel.pyx:840: in cupy.core._kernel.ElementwiseKernel.__call__
    kern = self._get_elementwise_kernel(dev_id, arginfos, type_map)
cupy/core/_kernel.pyx:865: in cupy.core._kernel.ElementwiseKernel._get_elementwise_kernel
    kern = _get_elementwise_kernel(
cupy/_util.pyx:59: in cupy._util.memoize.decorator.ret
    result = f(*args, **kwargs)
cupy/core/_kernel.pyx:652: in cupy.core._kernel._get_elementwise_kernel
    return _get_simple_elementwise_kernel(
cupy/core/_kernel.pyx:38: in cupy.core._kernel._get_simple_elementwise_kernel
    cpdef function.Function _get_simple_elementwise_kernel(
cupy/core/_kernel.pyx:61: in cupy.core._kernel._get_simple_elementwise_kernel
    module = compile_with_cache(module_code, options)
cupy/core/core.pyx:2021: in cupy.core.core.compile_with_cache
    return cuda.compile_with_cache(
cupy/cuda/compiler.py:428: in compile_with_cache
    return _compile_with_cache_hip(
cupy/cuda/compiler.py:829: in _compile_with_cache_hip
    temp_path = tf.name
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <tempfile._TemporaryFileWrapper object at 0x7f50109d7820>, exc = None
value = None, tb = None

    def __exit__(self, exc, value, tb):
>       result = self.file.__exit__(exc, value, tb)
E       AssertionError: Only cupy raises error
E       
E       Traceback (most recent call last):
E         File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.t8hdvgF7FH/cupy/cupy/testing/_helper.py", line 47, in _call_func
E           result = impl(self, *args, **kw)
E         File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.t8hdvgF7FH/cupy/tests/cupy_tests/functional_tests/test_vectorize.py", line 453, in test_for_counter_after_loop
E           return f(x)
E         File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.t8hdvgF7FH/cupy/cupy/_functional/vectorize.py", line 98, in __call__
E           return kern(*args)
E         File "cupy/core/_kernel.pyx", line 840, in cupy.core._kernel.ElementwiseKernel.__call__
E           kern = self._get_elementwise_kernel(dev_id, arginfos, type_map)
E         File "cupy/core/_kernel.pyx", line 865, in cupy.core._kernel.ElementwiseKernel._get_elementwise_kernel
E           kern = _get_elementwise_kernel(
E         File "cupy/_util.pyx", line 59, in cupy._util.memoize.decorator.ret
E           result = f(*args, **kwargs)
E         File "cupy/core/_kernel.pyx", line 652, in cupy.core._kernel._get_elementwise_kernel
E           return _get_simple_elementwise_kernel(
E         File "cupy/core/_kernel.pyx", line 38, in cupy.core._kernel._get_simple_elementwise_kernel
E           cpdef function.Function _get_simple_elementwise_kernel(
E         File "cupy/core/_kernel.pyx", line 61, in cupy.core._kernel._get_simple_elementwise_kernel
E           module = compile_with_cache(module_code, options)
E         File "cupy/core/core.pyx", line 2021, in cupy.core.core.compile_with_cache
E           return cuda.compile_with_cache(
E         File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.t8hdvgF7FH/cupy/cupy/cuda/compiler.py", line 428, in compile_with_cache
E           return _compile_with_cache_hip(
E         File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.t8hdvgF7FH/cupy/cupy/cuda/compiler.py", line 829, in _compile_with_cache_hip
E           temp_path = tf.name
E         File "/home/kmaeh/.pyenv/versions/3.8.7/lib/python3.8/tempfile.py", line 491, in __exit__
E           result = self.file.__exit__(exc, value, tb)
E       OSError: [Errno 28] No space left on device

/home/kmaeh/.pyenv/versions/3.8.7/lib/python3.8/tempfile.py:491: AssertionError
____________________ TestVectorizeStmts.test_for_range_step ____________________

self = <cupy_tests.functional_tests.test_vectorize.TestVectorizeStmts testMethod=test_for_range_step>
xp = <module 'cupy' from '/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.t8hdvgF7FH/cupy/cupy/__init__.py'>

    @testing.numpy_cupy_array_equal()
    def test_for_range_step(self, xp):
        def func_for(x, y, z):
            res = 0
            for i in range(x, y, z):
                res += i * i
            return x
    
        f = xp.vectorize(func_for)
        start = xp.array([0, 1, 2, 3, 4, 5])
        stop = xp.array([-21, -23, -19, 17, 27, 24])
        step = xp.array([-3, -2, -1, 1, 2, 3])
>       return f(start, stop, step)

tests/cupy_tests/functional_tests/test_vectorize.py:430: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
cupy/_functional/vectorize.py:98: in __call__
    return kern(*args)
cupy/core/_kernel.pyx:840: in cupy.core._kernel.ElementwiseKernel.__call__
    kern = self._get_elementwise_kernel(dev_id, arginfos, type_map)
cupy/core/_kernel.pyx:865: in cupy.core._kernel.ElementwiseKernel._get_elementwise_kernel
    kern = _get_elementwise_kernel(
cupy/_util.pyx:59: in cupy._util.memoize.decorator.ret
    result = f(*args, **kwargs)
cupy/core/_kernel.pyx:652: in cupy.core._kernel._get_elementwise_kernel
    return _get_simple_elementwise_kernel(
cupy/core/_kernel.pyx:38: in cupy.core._kernel._get_simple_elementwise_kernel
    cpdef function.Function _get_simple_elementwise_kernel(
cupy/core/_kernel.pyx:61: in cupy.core._kernel._get_simple_elementwise_kernel
    module = compile_with_cache(module_code, options)
cupy/core/core.pyx:2021: in cupy.core.core.compile_with_cache
    return cuda.compile_with_cache(
cupy/cuda/compiler.py:428: in compile_with_cache
    return _compile_with_cache_hip(
cupy/cuda/compiler.py:829: in _compile_with_cache_hip
    temp_path = tf.name
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <tempfile._TemporaryFileWrapper object at 0x7f503beaca60>, exc = None
value = None, tb = None

    def __exit__(self, exc, value, tb):
>       result = self.file.__exit__(exc, value, tb)
E       AssertionError: Only cupy raises error
E       
E       Traceback (most recent call last):
E         File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.t8hdvgF7FH/cupy/cupy/testing/_helper.py", line 47, in _call_func
E           result = impl(self, *args, **kw)
E         File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.t8hdvgF7FH/cupy/tests/cupy_tests/functional_tests/test_vectorize.py", line 430, in test_for_range_step
E           return f(start, stop, step)
E         File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.t8hdvgF7FH/cupy/cupy/_functional/vectorize.py", line 98, in __call__
E           return kern(*args)
E         File "cupy/core/_kernel.pyx", line 840, in cupy.core._kernel.ElementwiseKernel.__call__
E           kern = self._get_elementwise_kernel(dev_id, arginfos, type_map)
E         File "cupy/core/_kernel.pyx", line 865, in cupy.core._kernel.ElementwiseKernel._get_elementwise_kernel
E           kern = _get_elementwise_kernel(
E         File "cupy/_util.pyx", line 59, in cupy._util.memoize.decorator.ret
E           result = f(*args, **kwargs)
E         File "cupy/core/_kernel.pyx", line 652, in cupy.core._kernel._get_elementwise_kernel
E           return _get_simple_elementwise_kernel(
E         File "cupy/core/_kernel.pyx", line 38, in cupy.core._kernel._get_simple_elementwise_kernel
E           cpdef function.Function _get_simple_elementwise_kernel(
E         File "cupy/core/_kernel.pyx", line 61, in cupy.core._kernel._get_simple_elementwise_kernel
E           module = compile_with_cache(module_code, options)
E         File "cupy/core/core.pyx", line 2021, in cupy.core.core.compile_with_cache
E           return cuda.compile_with_cache(
E         File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.t8hdvgF7FH/cupy/cupy/cuda/compiler.py", line 428, in compile_with_cache
E           return _compile_with_cache_hip(
E         File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.t8hdvgF7FH/cupy/cupy/cuda/compiler.py", line 829, in _compile_with_cache_hip
E           temp_path = tf.name
E         File "/home/kmaeh/.pyenv/versions/3.8.7/lib/python3.8/tempfile.py", line 491, in __exit__
E           result = self.file.__exit__(exc, value, tb)
E       OSError: [Errno 28] No space left on device

/home/kmaeh/.pyenv/versions/3.8.7/lib/python3.8/tempfile.py:491: AssertionError
__________________ TestVectorizeStmts.test_for_update_counter __________________

self = <cupy_tests.functional_tests.test_vectorize.TestVectorizeStmts testMethod=test_for_update_counter>
xp = <module 'cupy' from '/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.t8hdvgF7FH/cupy/cupy/__init__.py'>

    @testing.numpy_cupy_array_equal()
    def test_for_update_counter(self, xp):
        def func_for(x):
            for i in range(10):
                x += i
                i += 1
            return x
    
        f = xp.vectorize(func_for)
        x = xp.array([0, 1, 2, 3, 4])
>       return f(x)

tests/cupy_tests/functional_tests/test_vectorize.py:442: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
cupy/_functional/vectorize.py:98: in __call__
    return kern(*args)
cupy/core/_kernel.pyx:840: in cupy.core._kernel.ElementwiseKernel.__call__
    kern = self._get_elementwise_kernel(dev_id, arginfos, type_map)
cupy/core/_kernel.pyx:865: in cupy.core._kernel.ElementwiseKernel._get_elementwise_kernel
    kern = _get_elementwise_kernel(
cupy/_util.pyx:59: in cupy._util.memoize.decorator.ret
    result = f(*args, **kwargs)
cupy/core/_kernel.pyx:652: in cupy.core._kernel._get_elementwise_kernel
    return _get_simple_elementwise_kernel(
cupy/core/_kernel.pyx:38: in cupy.core._kernel._get_simple_elementwise_kernel
    cpdef function.Function _get_simple_elementwise_kernel(
cupy/core/_kernel.pyx:61: in cupy.core._kernel._get_simple_elementwise_kernel
    module = compile_with_cache(module_code, options)
cupy/core/core.pyx:2021: in cupy.core.core.compile_with_cache
    return cuda.compile_with_cache(
cupy/cuda/compiler.py:428: in compile_with_cache
    return _compile_with_cache_hip(
cupy/cuda/compiler.py:829: in _compile_with_cache_hip
    temp_path = tf.name
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <tempfile._TemporaryFileWrapper object at 0x7f5042ad2730>, exc = None
value = None, tb = None

    def __exit__(self, exc, value, tb):
>       result = self.file.__exit__(exc, value, tb)
E       AssertionError: Only cupy raises error
E       
E       Traceback (most recent call last):
E         File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.t8hdvgF7FH/cupy/cupy/testing/_helper.py", line 47, in _call_func
E           result = impl(self, *args, **kw)
E         File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.t8hdvgF7FH/cupy/tests/cupy_tests/functional_tests/test_vectorize.py", line 442, in test_for_update_counter
E           return f(x)
E         File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.t8hdvgF7FH/cupy/cupy/_functional/vectorize.py", line 98, in __call__
E           return kern(*args)
E         File "cupy/core/_kernel.pyx", line 840, in cupy.core._kernel.ElementwiseKernel.__call__
E           kern = self._get_elementwise_kernel(dev_id, arginfos, type_map)
E         File "cupy/core/_kernel.pyx", line 865, in cupy.core._kernel.ElementwiseKernel._get_elementwise_kernel
E           kern = _get_elementwise_kernel(
E         File "cupy/_util.pyx", line 59, in cupy._util.memoize.decorator.ret
E           result = f(*args, **kwargs)
E         File "cupy/core/_kernel.pyx", line 652, in cupy.core._kernel._get_elementwise_kernel
E           return _get_simple_elementwise_kernel(
E         File "cupy/core/_kernel.pyx", line 38, in cupy.core._kernel._get_simple_elementwise_kernel
E           cpdef function.Function _get_simple_elementwise_kernel(
E         File "cupy/core/_kernel.pyx", line 61, in cupy.core._kernel._get_simple_elementwise_kernel
E           module = compile_with_cache(module_code, options)
E         File "cupy/core/core.pyx", line 2021, in cupy.core.core.compile_with_cache
E           return cuda.compile_with_cache(
E         File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.t8hdvgF7FH/cupy/cupy/cuda/compiler.py", line 428, in compile_with_cache
E           return _compile_with_cache_hip(
E         File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.t8hdvgF7FH/cupy/cupy/cuda/compiler.py", line 829, in _compile_with_cache_hip
E           temp_path = tf.name
E         File "/home/kmaeh/.pyenv/versions/3.8.7/lib/python3.8/tempfile.py", line 491, in __exit__
E           result = self.file.__exit__(exc, value, tb)
E       OSError: [Errno 28] No space left on device

/home/kmaeh/.pyenv/versions/3.8.7/lib/python3.8/tempfile.py:491: AssertionError
______________ TestVectorizeStmts.test_for_update_loop_condition _______________

self = <cupy_tests.functional_tests.test_vectorize.TestVectorizeStmts testMethod=test_for_update_loop_condition>
xp = <module 'cupy' from '/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.t8hdvgF7FH/cupy/cupy/__init__.py'>

    @testing.numpy_cupy_array_equal()
    def test_for_update_loop_condition(self, xp):
        def func_for(x):
            res = 0
            for i in range(x):
                res += i
                x -= 1
            return res
    
        f = xp.vectorize(func_for)
        x = xp.array([0, 1, 2, 3, 4])
>       return f(x)

tests/cupy_tests/functional_tests/test_vectorize.py:478: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
cupy/_functional/vectorize.py:98: in __call__
    return kern(*args)
cupy/core/_kernel.pyx:840: in cupy.core._kernel.ElementwiseKernel.__call__
    kern = self._get_elementwise_kernel(dev_id, arginfos, type_map)
cupy/core/_kernel.pyx:865: in cupy.core._kernel.ElementwiseKernel._get_elementwise_kernel
    kern = _get_elementwise_kernel(
cupy/_util.pyx:59: in cupy._util.memoize.decorator.ret
    result = f(*args, **kwargs)
cupy/core/_kernel.pyx:652: in cupy.core._kernel._get_elementwise_kernel
    return _get_simple_elementwise_kernel(
cupy/core/_kernel.pyx:38: in cupy.core._kernel._get_simple_elementwise_kernel
    cpdef function.Function _get_simple_elementwise_kernel(
cupy/core/_kernel.pyx:61: in cupy.core._kernel._get_simple_elementwise_kernel
    module = compile_with_cache(module_code, options)
cupy/core/core.pyx:2021: in cupy.core.core.compile_with_cache
    return cuda.compile_with_cache(
cupy/cuda/compiler.py:428: in compile_with_cache
    return _compile_with_cache_hip(
cupy/cuda/compiler.py:829: in _compile_with_cache_hip
    temp_path = tf.name
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <tempfile._TemporaryFileWrapper object at 0x7f503be986a0>, exc = None
value = None, tb = None

    def __exit__(self, exc, value, tb):
>       result = self.file.__exit__(exc, value, tb)
E       AssertionError: Only cupy raises error
E       
E       Traceback (most recent call last):
E         File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.t8hdvgF7FH/cupy/cupy/testing/_helper.py", line 47, in _call_func
E           result = impl(self, *args, **kw)
E         File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.t8hdvgF7FH/cupy/tests/cupy_tests/functional_tests/test_vectorize.py", line 478, in test_for_update_loop_condition
E           return f(x)
E         File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.t8hdvgF7FH/cupy/cupy/_functional/vectorize.py", line 98, in __call__
E           return kern(*args)
E         File "cupy/core/_kernel.pyx", line 840, in cupy.core._kernel.ElementwiseKernel.__call__
E           kern = self._get_elementwise_kernel(dev_id, arginfos, type_map)
E         File "cupy/core/_kernel.pyx", line 865, in cupy.core._kernel.ElementwiseKernel._get_elementwise_kernel
E           kern = _get_elementwise_kernel(
E         File "cupy/_util.pyx", line 59, in cupy._util.memoize.decorator.ret
E           result = f(*args, **kwargs)
E         File "cupy/core/_kernel.pyx", line 652, in cupy.core._kernel._get_elementwise_kernel
E           return _get_simple_elementwise_kernel(
E         File "cupy/core/_kernel.pyx", line 38, in cupy.core._kernel._get_simple_elementwise_kernel
E           cpdef function.Function _get_simple_elementwise_kernel(
E         File "cupy/core/_kernel.pyx", line 61, in cupy.core._kernel._get_simple_elementwise_kernel
E           module = compile_with_cache(module_code, options)
E         File "cupy/core/core.pyx", line 2021, in cupy.core.core.compile_with_cache
E           return cuda.compile_with_cache(
E         File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.t8hdvgF7FH/cupy/cupy/cuda/compiler.py", line 428, in compile_with_cache
E           return _compile_with_cache_hip(
E         File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.t8hdvgF7FH/cupy/cupy/cuda/compiler.py", line 829, in _compile_with_cache_hip
E           temp_path = tf.name
E         File "/home/kmaeh/.pyenv/versions/3.8.7/lib/python3.8/tempfile.py", line 491, in __exit__
E           result = self.file.__exit__(exc, value, tb)
E       OSError: [Errno 28] No space left on device

/home/kmaeh/.pyenv/versions/3.8.7/lib/python3.8/tempfile.py:491: AssertionError
__________________________ TestVectorizeStmts.test_if __________________________

self = <cupy_tests.functional_tests.test_vectorize.TestVectorizeStmts testMethod=test_if>
xp = <module 'cupy' from '/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.t8hdvgF7FH/cupy/cupy/__init__.py'>

    @testing.numpy_cupy_array_equal()
    def test_if(self, xp):
        def func_if(x):
            if x % 2 == 0:
                y = x
            else:
                y = -x
            return y
    
        f = xp.vectorize(func_if)
        x = xp.array([1, 2, 3, 4, 5])
>       return f(x)

tests/cupy_tests/functional_tests/test_vectorize.py:354: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
cupy/_functional/vectorize.py:98: in __call__
    return kern(*args)
cupy/core/_kernel.pyx:840: in cupy.core._kernel.ElementwiseKernel.__call__
    kern = self._get_elementwise_kernel(dev_id, arginfos, type_map)
cupy/core/_kernel.pyx:865: in cupy.core._kernel.ElementwiseKernel._get_elementwise_kernel
    kern = _get_elementwise_kernel(
cupy/_util.pyx:59: in cupy._util.memoize.decorator.ret
    result = f(*args, **kwargs)
cupy/core/_kernel.pyx:652: in cupy.core._kernel._get_elementwise_kernel
    return _get_simple_elementwise_kernel(
cupy/core/_kernel.pyx:38: in cupy.core._kernel._get_simple_elementwise_kernel
    cpdef function.Function _get_simple_elementwise_kernel(
cupy/core/_kernel.pyx:61: in cupy.core._kernel._get_simple_elementwise_kernel
    module = compile_with_cache(module_code, options)
cupy/core/core.pyx:2021: in cupy.core.core.compile_with_cache
    return cuda.compile_with_cache(
cupy/cuda/compiler.py:428: in compile_with_cache
    return _compile_with_cache_hip(
cupy/cuda/compiler.py:829: in _compile_with_cache_hip
    temp_path = tf.name
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <tempfile._TemporaryFileWrapper object at 0x7f5010f89be0>, exc = None
value = None, tb = None

    def __exit__(self, exc, value, tb):
>       result = self.file.__exit__(exc, value, tb)
E       AssertionError: Only cupy raises error
E       
E       Traceback (most recent call last):
E         File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.t8hdvgF7FH/cupy/cupy/testing/_helper.py", line 47, in _call_func
E           result = impl(self, *args, **kw)
E         File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.t8hdvgF7FH/cupy/tests/cupy_tests/functional_tests/test_vectorize.py", line 354, in test_if
E           return f(x)
E         File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.t8hdvgF7FH/cupy/cupy/_functional/vectorize.py", line 98, in __call__
E           return kern(*args)
E         File "cupy/core/_kernel.pyx", line 840, in cupy.core._kernel.ElementwiseKernel.__call__
E           kern = self._get_elementwise_kernel(dev_id, arginfos, type_map)
E         File "cupy/core/_kernel.pyx", line 865, in cupy.core._kernel.ElementwiseKernel._get_elementwise_kernel
E           kern = _get_elementwise_kernel(
E         File "cupy/_util.pyx", line 59, in cupy._util.memoize.decorator.ret
E           result = f(*args, **kwargs)
E         File "cupy/core/_kernel.pyx", line 652, in cupy.core._kernel._get_elementwise_kernel
E           return _get_simple_elementwise_kernel(
E         File "cupy/core/_kernel.pyx", line 38, in cupy.core._kernel._get_simple_elementwise_kernel
E           cpdef function.Function _get_simple_elementwise_kernel(
E         File "cupy/core/_kernel.pyx", line 61, in cupy.core._kernel._get_simple_elementwise_kernel
E           module = compile_with_cache(module_code, options)
E         File "cupy/core/core.pyx", line 2021, in cupy.core.core.compile_with_cache
E           return cuda.compile_with_cache(
E         File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.t8hdvgF7FH/cupy/cupy/cuda/compiler.py", line 428, in compile_with_cache
E           return _compile_with_cache_hip(
E         File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.t8hdvgF7FH/cupy/cupy/cuda/compiler.py", line 829, in _compile_with_cache_hip
E           temp_path = tf.name
E         File "/home/kmaeh/.pyenv/versions/3.8.7/lib/python3.8/tempfile.py", line 491, in __exit__
E           result = self.file.__exit__(exc, value, tb)
E       OSError: [Errno 28] No space left on device

/home/kmaeh/.pyenv/versions/3.8.7/lib/python3.8/tempfile.py:491: AssertionError
_____________________ TestVectorizeStmts.test_if_no_orlese _____________________

self = <cupy_tests.functional_tests.test_vectorize.TestVectorizeStmts testMethod=test_if_no_orlese>
xp = <module 'cupy' from '/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.t8hdvgF7FH/cupy/cupy/__init__.py'>

    @testing.numpy_cupy_array_equal()
    def test_if_no_orlese(self, xp):
        def func_if(x):
            y = 0
            if x % 2 == 0:
                y = x
            return y
    
        f = xp.vectorize(func_if)
        x = xp.array([1, 2, 3, 4, 5])
>       return f(x)

tests/cupy_tests/functional_tests/test_vectorize.py:366: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
cupy/_functional/vectorize.py:98: in __call__
    return kern(*args)
cupy/core/_kernel.pyx:840: in cupy.core._kernel.ElementwiseKernel.__call__
    kern = self._get_elementwise_kernel(dev_id, arginfos, type_map)
cupy/core/_kernel.pyx:865: in cupy.core._kernel.ElementwiseKernel._get_elementwise_kernel
    kern = _get_elementwise_kernel(
cupy/_util.pyx:59: in cupy._util.memoize.decorator.ret
    result = f(*args, **kwargs)
cupy/core/_kernel.pyx:652: in cupy.core._kernel._get_elementwise_kernel
    return _get_simple_elementwise_kernel(
cupy/core/_kernel.pyx:38: in cupy.core._kernel._get_simple_elementwise_kernel
    cpdef function.Function _get_simple_elementwise_kernel(
cupy/core/_kernel.pyx:61: in cupy.core._kernel._get_simple_elementwise_kernel
    module = compile_with_cache(module_code, options)
cupy/core/core.pyx:2021: in cupy.core.core.compile_with_cache
    return cuda.compile_with_cache(
cupy/cuda/compiler.py:428: in compile_with_cache
    return _compile_with_cache_hip(
cupy/cuda/compiler.py:829: in _compile_with_cache_hip
    temp_path = tf.name
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <tempfile._TemporaryFileWrapper object at 0x7f5010ea5a60>, exc = None
value = None, tb = None

    def __exit__(self, exc, value, tb):
>       result = self.file.__exit__(exc, value, tb)
E       AssertionError: Only cupy raises error
E       
E       Traceback (most recent call last):
E         File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.t8hdvgF7FH/cupy/cupy/testing/_helper.py", line 47, in _call_func
E           result = impl(self, *args, **kw)
E         File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.t8hdvgF7FH/cupy/tests/cupy_tests/functional_tests/test_vectorize.py", line 366, in test_if_no_orlese
E           return f(x)
E         File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.t8hdvgF7FH/cupy/cupy/_functional/vectorize.py", line 98, in __call__
E           return kern(*args)
E         File "cupy/core/_kernel.pyx", line 840, in cupy.core._kernel.ElementwiseKernel.__call__
E           kern = self._get_elementwise_kernel(dev_id, arginfos, type_map)
E         File "cupy/core/_kernel.pyx", line 865, in cupy.core._kernel.ElementwiseKernel._get_elementwise_kernel
E           kern = _get_elementwise_kernel(
E         File "cupy/_util.pyx", line 59, in cupy._util.memoize.decorator.ret
E           result = f(*args, **kwargs)
E         File "cupy/core/_kernel.pyx", line 652, in cupy.core._kernel._get_elementwise_kernel
E           return _get_simple_elementwise_kernel(
E         File "cupy/core/_kernel.pyx", line 38, in cupy.core._kernel._get_simple_elementwise_kernel
E           cpdef function.Function _get_simple_elementwise_kernel(
E         File "cupy/core/_kernel.pyx", line 61, in cupy.core._kernel._get_simple_elementwise_kernel
E           module = compile_with_cache(module_code, options)
E         File "cupy/core/core.pyx", line 2021, in cupy.core.core.compile_with_cache
E           return cuda.compile_with_cache(
E         File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.t8hdvgF7FH/cupy/cupy/cuda/compiler.py", line 428, in compile_with_cache
E           return _compile_with_cache_hip(
E         File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.t8hdvgF7FH/cupy/cupy/cuda/compiler.py", line 829, in _compile_with_cache_hip
E           temp_path = tf.name
E         File "/home/kmaeh/.pyenv/versions/3.8.7/lib/python3.8/tempfile.py", line 491, in __exit__
E           result = self.file.__exit__(exc, value, tb)
E       OSError: [Errno 28] No space left on device

/home/kmaeh/.pyenv/versions/3.8.7/lib/python3.8/tempfile.py:491: AssertionError
_____________________ TestVectorizeStmts.test_return_tuple _____________________

self = <cupy_tests.functional_tests.test_vectorize.TestVectorizeStmts testMethod=test_return_tuple>
xp = <module 'cupy' from '/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.t8hdvgF7FH/cupy/cupy/__init__.py'>

    @testing.numpy_cupy_array_equal()
    def test_return_tuple(self, xp):
        def func_tuple(x, y):
            return x + y, x / y
    
        f = xp.vectorize(func_tuple)
        x = xp.array([0, 1, 2, 3, 4])
        y = xp.array([5, 6, 7, 8, 9])
>       return f(x, y)

tests/cupy_tests/functional_tests/test_vectorize.py:501: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
cupy/_functional/vectorize.py:98: in __call__
    return kern(*args)
cupy/core/_kernel.pyx:840: in cupy.core._kernel.ElementwiseKernel.__call__
    kern = self._get_elementwise_kernel(dev_id, arginfos, type_map)
cupy/core/_kernel.pyx:865: in cupy.core._kernel.ElementwiseKernel._get_elementwise_kernel
    kern = _get_elementwise_kernel(
cupy/_util.pyx:59: in cupy._util.memoize.decorator.ret
    result = f(*args, **kwargs)
cupy/core/_kernel.pyx:652: in cupy.core._kernel._get_elementwise_kernel
    return _get_simple_elementwise_kernel(
cupy/core/_kernel.pyx:38: in cupy.core._kernel._get_simple_elementwise_kernel
    cpdef function.Function _get_simple_elementwise_kernel(
cupy/core/_kernel.pyx:61: in cupy.core._kernel._get_simple_elementwise_kernel
    module = compile_with_cache(module_code, options)
cupy/core/core.pyx:2021: in cupy.core.core.compile_with_cache
    return cuda.compile_with_cache(
cupy/cuda/compiler.py:428: in compile_with_cache
    return _compile_with_cache_hip(
cupy/cuda/compiler.py:811: in _compile_with_cache_hip
    binary, mapping = compile_using_nvrtc(
cupy/cuda/compiler.py:271: in compile_using_nvrtc
    return _compile(source, options, cu_path,
cupy/cuda/compiler.py:255: in _compile
    ptx, mapping = prog.compile(options, log_stream)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <cupy.cuda.compiler._NVRTCProgram object at 0x7f503bcb25b0>
options = ('-D CUPY_JIT_MODE', '-I/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.t8hdvgF7FH/cupy/cupy/core/include', '-I/opt/rocm/include')
log_stream = None

    def compile(self, options=(), log_stream=None):
        try:
            if self.name_expressions:
                for ker in self.name_expressions:
                    nvrtc.addAddNameExpression(self.ptr, ker)
            nvrtc.compileProgram(self.ptr, options)
            mapping = None
            if self.name_expressions:
                mapping = {}
                for ker in self.name_expressions:
                    mapping[ker] = nvrtc.getLoweredName(self.ptr, ker)
            if log_stream is not None:
                log_stream.write(nvrtc.getProgramLog(self.ptr))
            # TODO(leofang): use getCUBIN() for _cuda_version >= 11010?
            return nvrtc.getPTX(self.ptr), mapping
        except nvrtc.NVRTCError:
            log = nvrtc.getProgramLog(self.ptr)
>           raise CompileException(log, self.src, self.name, options,
                                   'nvrtc' if not runtime.is_hip else 'hiprtc')
E           AssertionError: Only cupy raises error
E           
E           Traceback (most recent call last):
E             File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.t8hdvgF7FH/cupy/cupy/cuda/compiler.py", line 623, in compile
E               nvrtc.compileProgram(self.ptr, options)
E             File "cupy_backends/cuda/libs/nvrtc.pyx", line 133, in cupy_backends.cuda.libs.nvrtc.compileProgram
E               cpdef compileProgram(intptr_t prog, options):
E             File "cupy_backends/cuda/libs/nvrtc.pyx", line 145, in cupy_backends.cuda.libs.nvrtc.compileProgram
E               check_status(status)
E             File "cupy_backends/cuda/libs/nvrtc.pyx", line 64, in cupy_backends.cuda.libs.nvrtc.check_status
E               raise NVRTCError(status)
E           cupy_backends.cuda.libs.nvrtc.NVRTCError: HIPRTC_ERROR_COMPILATION (6)
E           
E           During handling of the above exception, another exception occurred:
E           
E           Traceback (most recent call last):
E             File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.t8hdvgF7FH/cupy/cupy/testing/_helper.py", line 47, in _call_func
E               result = impl(self, *args, **kw)
E             File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.t8hdvgF7FH/cupy/tests/cupy_tests/functional_tests/test_vectorize.py", line 501, in test_return_tuple
E               return f(x, y)
E             File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.t8hdvgF7FH/cupy/cupy/_functional/vectorize.py", line 98, in __call__
E               return kern(*args)
E             File "cupy/core/_kernel.pyx", line 840, in cupy.core._kernel.ElementwiseKernel.__call__
E               kern = self._get_elementwise_kernel(dev_id, arginfos, type_map)
E             File "cupy/core/_kernel.pyx", line 865, in cupy.core._kernel.ElementwiseKernel._get_elementwise_kernel
E               kern = _get_elementwise_kernel(
E             File "cupy/_util.pyx", line 59, in cupy._util.memoize.decorator.ret
E               result = f(*args, **kwargs)
E             File "cupy/core/_kernel.pyx", line 652, in cupy.core._kernel._get_elementwise_kernel
E               return _get_simple_elementwise_kernel(
E             File "cupy/core/_kernel.pyx", line 38, in cupy.core._kernel._get_simple_elementwise_kernel
E               cpdef function.Function _get_simple_elementwise_kernel(
E             File "cupy/core/_kernel.pyx", line 61, in cupy.core._kernel._get_simple_elementwise_kernel
E               module = compile_with_cache(module_code, options)
E             File "cupy/core/core.pyx", line 2021, in cupy.core.core.compile_with_cache
E               return cuda.compile_with_cache(
E             File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.t8hdvgF7FH/cupy/cupy/cuda/compiler.py", line 428, in compile_with_cache
E               return _compile_with_cache_hip(
E             File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.t8hdvgF7FH/cupy/cupy/cuda/compiler.py", line 811, in _compile_with_cache_hip
E               binary, mapping = compile_using_nvrtc(
E             File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.t8hdvgF7FH/cupy/cupy/cuda/compiler.py", line 271, in compile_using_nvrtc
E               return _compile(source, options, cu_path,
E             File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.t8hdvgF7FH/cupy/cupy/cuda/compiler.py", line 255, in _compile
E               ptx, mapping = prog.compile(options, log_stream)
E             File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.t8hdvgF7FH/cupy/cupy/cuda/compiler.py", line 635, in compile
E               raise CompileException(log, self.src, self.name, options,
E           cupy.cuda.compiler.CompileException: /tmp/comgr-c99ff6/input/CompileSource:5400:12: error: no template named 'tuple' in namespace 'thrust'; did you mean 'std::tuple'?
E           __device__ thrust::tuple<long long, double> func_tuple(long long x, long long y) {
E                      ^~~~~~~~~~~~~
E                      std::tuple
E           /usr/lib/gcc/x86_64-linux-gnu/7.5.0/../../../../include/c++/7.5.0/tuple:556:11: note: 'std::tuple' declared here
E               class tuple : public _Tuple_impl<0, _Elements...>
E                     ^
E           /tmp/comgr-c99ff6/input/CompileSource:5401:10: error: no member named 'make_tuple' in namespace 'thrust'; did you mean 'std::make_tuple'?
E             return thrust::make_tuple((x + y), ((double)x / (double)y));
E                    ^~~~~~~~~~~~~~~~~~
E                    std::make_tuple
E           /usr/lib/gcc/x86_64-linux-gnu/7.5.0/../../../../include/c++/7.5.0/tuple:1448:5: note: 'std::make_tuple' declared here
E               make_tuple(_Elements&&... __args)
E               ^
E           /tmp/comgr-c99ff6/input/CompileSource:5411:9: error: no member named 'tie' in namespace 'thrust'
E           thrust::tie(out0, out1) = func_tuple(in0, in1);
E           ~~~~~~~~^
E           3 errors generated when compiling for gfx906.
E           Error: Failed to compile opencl source (from CL or HIP source to LLVM IR).

cupy/cuda/compiler.py:635: AssertionError
________________________ TestVectorizeStmts.test_tuple _________________________

self = <cupy_tests.functional_tests.test_vectorize.TestVectorizeStmts testMethod=test_tuple>
xp = <module 'cupy' from '/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.t8hdvgF7FH/cupy/cupy/__init__.py'>

    @testing.numpy_cupy_array_equal()
    def test_tuple(self, xp):
        def func_tuple(x, y):
            x, y = y, x
            z = x, y
            a, b = z
            return a * a + b
    
        f = xp.vectorize(func_tuple)
        x = xp.array([0, 1, 2, 3, 4])
        y = xp.array([5, 6, 7, 8, 9])
>       return f(x, y)

tests/cupy_tests/functional_tests/test_vectorize.py:491: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
cupy/_functional/vectorize.py:98: in __call__
    return kern(*args)
cupy/core/_kernel.pyx:840: in cupy.core._kernel.ElementwiseKernel.__call__
    kern = self._get_elementwise_kernel(dev_id, arginfos, type_map)
cupy/core/_kernel.pyx:865: in cupy.core._kernel.ElementwiseKernel._get_elementwise_kernel
    kern = _get_elementwise_kernel(
cupy/_util.pyx:59: in cupy._util.memoize.decorator.ret
    result = f(*args, **kwargs)
cupy/core/_kernel.pyx:652: in cupy.core._kernel._get_elementwise_kernel
    return _get_simple_elementwise_kernel(
cupy/core/_kernel.pyx:38: in cupy.core._kernel._get_simple_elementwise_kernel
    cpdef function.Function _get_simple_elementwise_kernel(
cupy/core/_kernel.pyx:61: in cupy.core._kernel._get_simple_elementwise_kernel
    module = compile_with_cache(module_code, options)
cupy/core/core.pyx:2021: in cupy.core.core.compile_with_cache
    return cuda.compile_with_cache(
cupy/cuda/compiler.py:428: in compile_with_cache
    return _compile_with_cache_hip(
cupy/cuda/compiler.py:811: in _compile_with_cache_hip
    binary, mapping = compile_using_nvrtc(
cupy/cuda/compiler.py:271: in compile_using_nvrtc
    return _compile(source, options, cu_path,
cupy/cuda/compiler.py:255: in _compile
    ptx, mapping = prog.compile(options, log_stream)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <cupy.cuda.compiler._NVRTCProgram object at 0x7f5010e96040>
options = ('-D CUPY_JIT_MODE', '-I/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.t8hdvgF7FH/cupy/cupy/core/include', '-I/opt/rocm/include')
log_stream = None

    def compile(self, options=(), log_stream=None):
        try:
            if self.name_expressions:
                for ker in self.name_expressions:
                    nvrtc.addAddNameExpression(self.ptr, ker)
            nvrtc.compileProgram(self.ptr, options)
            mapping = None
            if self.name_expressions:
                mapping = {}
                for ker in self.name_expressions:
                    mapping[ker] = nvrtc.getLoweredName(self.ptr, ker)
            if log_stream is not None:
                log_stream.write(nvrtc.getProgramLog(self.ptr))
            # TODO(leofang): use getCUBIN() for _cuda_version >= 11010?
            return nvrtc.getPTX(self.ptr), mapping
        except nvrtc.NVRTCError:
            log = nvrtc.getProgramLog(self.ptr)
>           raise CompileException(log, self.src, self.name, options,
                                   'nvrtc' if not runtime.is_hip else 'hiprtc')
E           AssertionError: Only cupy raises error
E           
E           Traceback (most recent call last):
E             File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.t8hdvgF7FH/cupy/cupy/cuda/compiler.py", line 623, in compile
E               nvrtc.compileProgram(self.ptr, options)
E             File "cupy_backends/cuda/libs/nvrtc.pyx", line 133, in cupy_backends.cuda.libs.nvrtc.compileProgram
E               cpdef compileProgram(intptr_t prog, options):
E             File "cupy_backends/cuda/libs/nvrtc.pyx", line 145, in cupy_backends.cuda.libs.nvrtc.compileProgram
E               check_status(status)
E             File "cupy_backends/cuda/libs/nvrtc.pyx", line 64, in cupy_backends.cuda.libs.nvrtc.check_status
E               raise NVRTCError(status)
E           cupy_backends.cuda.libs.nvrtc.NVRTCError: HIPRTC_ERROR_COMPILATION (6)
E           
E           During handling of the above exception, another exception occurred:
E           
E           Traceback (most recent call last):
E             File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.t8hdvgF7FH/cupy/cupy/testing/_helper.py", line 47, in _call_func
E               result = impl(self, *args, **kw)
E             File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.t8hdvgF7FH/cupy/tests/cupy_tests/functional_tests/test_vectorize.py", line 491, in test_tuple
E               return f(x, y)
E             File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.t8hdvgF7FH/cupy/cupy/_functional/vectorize.py", line 98, in __call__
E               return kern(*args)
E             File "cupy/core/_kernel.pyx", line 840, in cupy.core._kernel.ElementwiseKernel.__call__
E               kern = self._get_elementwise_kernel(dev_id, arginfos, type_map)
E             File "cupy/core/_kernel.pyx", line 865, in cupy.core._kernel.ElementwiseKernel._get_elementwise_kernel
E               kern = _get_elementwise_kernel(
E             File "cupy/_util.pyx", line 59, in cupy._util.memoize.decorator.ret
E               result = f(*args, **kwargs)
E             File "cupy/core/_kernel.pyx", line 652, in cupy.core._kernel._get_elementwise_kernel
E               return _get_simple_elementwise_kernel(
E             File "cupy/core/_kernel.pyx", line 38, in cupy.core._kernel._get_simple_elementwise_kernel
E               cpdef function.Function _get_simple_elementwise_kernel(
E             File "cupy/core/_kernel.pyx", line 61, in cupy.core._kernel._get_simple_elementwise_kernel
E               module = compile_with_cache(module_code, options)
E             File "cupy/core/core.pyx", line 2021, in cupy.core.core.compile_with_cache
E               return cuda.compile_with_cache(
E             File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.t8hdvgF7FH/cupy/cupy/cuda/compiler.py", line 428, in compile_with_cache
E               return _compile_with_cache_hip(
E             File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.t8hdvgF7FH/cupy/cupy/cuda/compiler.py", line 811, in _compile_with_cache_hip
E               binary, mapping = compile_using_nvrtc(
E             File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.t8hdvgF7FH/cupy/cupy/cuda/compiler.py", line 271, in compile_using_nvrtc
E               return _compile(source, options, cu_path,
E             File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.t8hdvgF7FH/cupy/cupy/cuda/compiler.py", line 255, in _compile
E               ptx, mapping = prog.compile(options, log_stream)
E             File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.t8hdvgF7FH/cupy/cupy/cuda/compiler.py", line 635, in compile
E               raise CompileException(log, self.src, self.name, options,
E           cupy.cuda.compiler.CompileException: /tmp/comgr-114637/input/CompileSource:5401:3: error: no template named 'tuple' in namespace 'thrust'; did you mean 'std::tuple'?
E             thrust::tuple<long long, long long> z;
E             ^~~~~~~~~~~~~
E             std::tuple
E           /usr/lib/gcc/x86_64-linux-gnu/7.5.0/../../../../include/c++/7.5.0/tuple:556:11: note: 'std::tuple' declared here
E               class tuple : public _Tuple_impl<0, _Elements...>
E                     ^
E           /tmp/comgr-114637/input/CompileSource:5404:11: error: no member named 'tie' in namespace 'thrust'
E             thrust::tie(x, y) = thrust::make_tuple(y, x);
E             ~~~~~~~~^
E           /tmp/comgr-114637/input/CompileSource:5404:31: error: no member named 'make_tuple' in namespace 'thrust'
E             thrust::tie(x, y) = thrust::make_tuple(y, x);
E                                 ~~~~~~~~^
E           /tmp/comgr-114637/input/CompileSource:5405:15: error: no member named 'make_tuple' in namespace 'thrust'
E             z = thrust::make_tuple(x, y);
E                 ~~~~~~~~^
E           /tmp/comgr-114637/input/CompileSource:5406:11: error: no member named 'tie' in namespace 'thrust'
E             thrust::tie(a, b) = z;
E             ~~~~~~~~^
E           5 errors generated when compiling for gfx906.
E           Error: Failed to compile opencl source (from CL or HIP source to LLVM IR).

cupy/cuda/compiler.py:635: AssertionError
________________________ TestVectorizeStmts.test_while _________________________

self = <cupy_tests.functional_tests.test_vectorize.TestVectorizeStmts testMethod=test_while>
xp = <module 'cupy' from '/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.t8hdvgF7FH/cupy/cupy/__init__.py'>

    @testing.numpy_cupy_array_equal()
    def test_while(self, xp):
        def func_while(x):
            y = 0
            while x > 0:
                y += x
                x -= 1
            return y
    
        f = xp.vectorize(func_while)
        x = xp.array([1, 2, 3, 4, 5, 6, 7, 8, 9, 10])
>       return f(x)

tests/cupy_tests/functional_tests/test_vectorize.py:393: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
cupy/_functional/vectorize.py:98: in __call__
    return kern(*args)
cupy/core/_kernel.pyx:840: in cupy.core._kernel.ElementwiseKernel.__call__
    kern = self._get_elementwise_kernel(dev_id, arginfos, type_map)
cupy/core/_kernel.pyx:865: in cupy.core._kernel.ElementwiseKernel._get_elementwise_kernel
    kern = _get_elementwise_kernel(
cupy/_util.pyx:59: in cupy._util.memoize.decorator.ret
    result = f(*args, **kwargs)
cupy/core/_kernel.pyx:652: in cupy.core._kernel._get_elementwise_kernel
    return _get_simple_elementwise_kernel(
cupy/core/_kernel.pyx:38: in cupy.core._kernel._get_simple_elementwise_kernel
    cpdef function.Function _get_simple_elementwise_kernel(
cupy/core/_kernel.pyx:61: in cupy.core._kernel._get_simple_elementwise_kernel
    module = compile_with_cache(module_code, options)
cupy/core/core.pyx:2021: in cupy.core.core.compile_with_cache
    return cuda.compile_with_cache(
cupy/cuda/compiler.py:428: in compile_with_cache
    return _compile_with_cache_hip(
cupy/cuda/compiler.py:829: in _compile_with_cache_hip
    temp_path = tf.name
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <tempfile._TemporaryFileWrapper object at 0x7f5042bcbd90>, exc = None
value = None, tb = None

    def __exit__(self, exc, value, tb):
>       result = self.file.__exit__(exc, value, tb)
E       AssertionError: Only cupy raises error
E       
E       Traceback (most recent call last):
E         File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.t8hdvgF7FH/cupy/cupy/testing/_helper.py", line 47, in _call_func
E           result = impl(self, *args, **kw)
E         File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.t8hdvgF7FH/cupy/tests/cupy_tests/functional_tests/test_vectorize.py", line 393, in test_while
E           return f(x)
E         File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.t8hdvgF7FH/cupy/cupy/_functional/vectorize.py", line 98, in __call__
E           return kern(*args)
E         File "cupy/core/_kernel.pyx", line 840, in cupy.core._kernel.ElementwiseKernel.__call__
E           kern = self._get_elementwise_kernel(dev_id, arginfos, type_map)
E         File "cupy/core/_kernel.pyx", line 865, in cupy.core._kernel.ElementwiseKernel._get_elementwise_kernel
E           kern = _get_elementwise_kernel(
E         File "cupy/_util.pyx", line 59, in cupy._util.memoize.decorator.ret
E           result = f(*args, **kwargs)
E         File "cupy/core/_kernel.pyx", line 652, in cupy.core._kernel._get_elementwise_kernel
E           return _get_simple_elementwise_kernel(
E         File "cupy/core/_kernel.pyx", line 38, in cupy.core._kernel._get_simple_elementwise_kernel
E           cpdef function.Function _get_simple_elementwise_kernel(
E         File "cupy/core/_kernel.pyx", line 61, in cupy.core._kernel._get_simple_elementwise_kernel
E           module = compile_with_cache(module_code, options)
E         File "cupy/core/core.pyx", line 2021, in cupy.core.core.compile_with_cache
E           return cuda.compile_with_cache(
E         File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.t8hdvgF7FH/cupy/cupy/cuda/compiler.py", line 428, in compile_with_cache
E           return _compile_with_cache_hip(
E         File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.t8hdvgF7FH/cupy/cupy/cuda/compiler.py", line 829, in _compile_with_cache_hip
E           temp_path = tf.name
E         File "/home/kmaeh/.pyenv/versions/3.8.7/lib/python3.8/tempfile.py", line 491, in __exit__
E           result = self.file.__exit__(exc, value, tb)
E       OSError: [Errno 28] No space left on device

/home/kmaeh/.pyenv/versions/3.8.7/lib/python3.8/tempfile.py:491: AssertionError
_______________ TestVectorizeConstants.test_vectorize_const_attr _______________

self = <cupy_tests.functional_tests.test_vectorize.TestVectorizeConstants testMethod=test_vectorize_const_attr>
xp = <module 'cupy' from '/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.t8hdvgF7FH/cupy/cupy/__init__.py'>

    @testing.numpy_cupy_array_equal()
    def test_vectorize_const_attr(self, xp):
    
        def my_func(x1, x2):
            return x1 - x2 + const.x
    
        const = _MyClass(10)
        f = xp.vectorize(my_func)
        x1 = testing.shaped_random((20, 30), xp, xp.int64, seed=1)
        x2 = testing.shaped_random((20, 30), xp, xp.int64, seed=2)
>       return f(x1, x2)

tests/cupy_tests/functional_tests/test_vectorize.py:534: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
cupy/_functional/vectorize.py:98: in __call__
    return kern(*args)
cupy/core/_kernel.pyx:840: in cupy.core._kernel.ElementwiseKernel.__call__
    kern = self._get_elementwise_kernel(dev_id, arginfos, type_map)
cupy/core/_kernel.pyx:865: in cupy.core._kernel.ElementwiseKernel._get_elementwise_kernel
    kern = _get_elementwise_kernel(
cupy/_util.pyx:59: in cupy._util.memoize.decorator.ret
    result = f(*args, **kwargs)
cupy/core/_kernel.pyx:652: in cupy.core._kernel._get_elementwise_kernel
    return _get_simple_elementwise_kernel(
cupy/core/_kernel.pyx:38: in cupy.core._kernel._get_simple_elementwise_kernel
    cpdef function.Function _get_simple_elementwise_kernel(
cupy/core/_kernel.pyx:61: in cupy.core._kernel._get_simple_elementwise_kernel
    module = compile_with_cache(module_code, options)
cupy/core/core.pyx:2021: in cupy.core.core.compile_with_cache
    return cuda.compile_with_cache(
cupy/cuda/compiler.py:428: in compile_with_cache
    return _compile_with_cache_hip(
cupy/cuda/compiler.py:829: in _compile_with_cache_hip
    temp_path = tf.name
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <tempfile._TemporaryFileWrapper object at 0x7f5010e533a0>, exc = None
value = None, tb = None

    def __exit__(self, exc, value, tb):
>       result = self.file.__exit__(exc, value, tb)
E       AssertionError: Only cupy raises error
E       
E       Traceback (most recent call last):
E         File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.t8hdvgF7FH/cupy/cupy/testing/_helper.py", line 47, in _call_func
E           result = impl(self, *args, **kw)
E         File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.t8hdvgF7FH/cupy/tests/cupy_tests/functional_tests/test_vectorize.py", line 534, in test_vectorize_const_attr
E           return f(x1, x2)
E         File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.t8hdvgF7FH/cupy/cupy/_functional/vectorize.py", line 98, in __call__
E           return kern(*args)
E         File "cupy/core/_kernel.pyx", line 840, in cupy.core._kernel.ElementwiseKernel.__call__
E           kern = self._get_elementwise_kernel(dev_id, arginfos, type_map)
E         File "cupy/core/_kernel.pyx", line 865, in cupy.core._kernel.ElementwiseKernel._get_elementwise_kernel
E           kern = _get_elementwise_kernel(
E         File "cupy/_util.pyx", line 59, in cupy._util.memoize.decorator.ret
E           result = f(*args, **kwargs)
E         File "cupy/core/_kernel.pyx", line 652, in cupy.core._kernel._get_elementwise_kernel
E           return _get_simple_elementwise_kernel(
E         File "cupy/core/_kernel.pyx", line 38, in cupy.core._kernel._get_simple_elementwise_kernel
E           cpdef function.Function _get_simple_elementwise_kernel(
E         File "cupy/core/_kernel.pyx", line 61, in cupy.core._kernel._get_simple_elementwise_kernel
E           module = compile_with_cache(module_code, options)
E         File "cupy/core/core.pyx", line 2021, in cupy.core.core.compile_with_cache
E           return cuda.compile_with_cache(
E         File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.t8hdvgF7FH/cupy/cupy/cuda/compiler.py", line 428, in compile_with_cache
E           return _compile_with_cache_hip(
E         File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.t8hdvgF7FH/cupy/cupy/cuda/compiler.py", line 829, in _compile_with_cache_hip
E           temp_path = tf.name
E         File "/home/kmaeh/.pyenv/versions/3.8.7/lib/python3.8/tempfile.py", line 491, in __exit__
E           result = self.file.__exit__(exc, value, tb)
E       OSError: [Errno 28] No space left on device

/home/kmaeh/.pyenv/versions/3.8.7/lib/python3.8/tempfile.py:491: AssertionError
______________ TestVectorizeConstants.test_vectorize_const_value _______________

self = <cupy_tests.functional_tests.test_vectorize.TestVectorizeConstants testMethod=test_vectorize_const_value>
xp = <module 'cupy' from '/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.t8hdvgF7FH/cupy/cupy/__init__.py'>

    @testing.numpy_cupy_array_equal()
    def test_vectorize_const_value(self, xp):
    
        def my_func(x1, x2):
            return x1 - x2 + const
    
        const = 8
        f = xp.vectorize(my_func)
        x1 = testing.shaped_random((20, 30), xp, xp.int64, seed=1)
        x2 = testing.shaped_random((20, 30), xp, xp.int64, seed=2)
>       return f(x1, x2)

tests/cupy_tests/functional_tests/test_vectorize.py:522: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
cupy/_functional/vectorize.py:98: in __call__
    return kern(*args)
cupy/core/_kernel.pyx:840: in cupy.core._kernel.ElementwiseKernel.__call__
    kern = self._get_elementwise_kernel(dev_id, arginfos, type_map)
cupy/core/_kernel.pyx:865: in cupy.core._kernel.ElementwiseKernel._get_elementwise_kernel
    kern = _get_elementwise_kernel(
cupy/_util.pyx:59: in cupy._util.memoize.decorator.ret
    result = f(*args, **kwargs)
cupy/core/_kernel.pyx:652: in cupy.core._kernel._get_elementwise_kernel
    return _get_simple_elementwise_kernel(
cupy/core/_kernel.pyx:38: in cupy.core._kernel._get_simple_elementwise_kernel
    cpdef function.Function _get_simple_elementwise_kernel(
cupy/core/_kernel.pyx:61: in cupy.core._kernel._get_simple_elementwise_kernel
    module = compile_with_cache(module_code, options)
cupy/core/core.pyx:2021: in cupy.core.core.compile_with_cache
    return cuda.compile_with_cache(
cupy/cuda/compiler.py:428: in compile_with_cache
    return _compile_with_cache_hip(
cupy/cuda/compiler.py:829: in _compile_with_cache_hip
    temp_path = tf.name
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <tempfile._TemporaryFileWrapper object at 0x7f503be4af40>, exc = None
value = None, tb = None

    def __exit__(self, exc, value, tb):
>       result = self.file.__exit__(exc, value, tb)
E       AssertionError: Only cupy raises error
E       
E       Traceback (most recent call last):
E         File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.t8hdvgF7FH/cupy/cupy/testing/_helper.py", line 47, in _call_func
E           result = impl(self, *args, **kw)
E         File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.t8hdvgF7FH/cupy/tests/cupy_tests/functional_tests/test_vectorize.py", line 522, in test_vectorize_const_value
E           return f(x1, x2)
E         File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.t8hdvgF7FH/cupy/cupy/_functional/vectorize.py", line 98, in __call__
E           return kern(*args)
E         File "cupy/core/_kernel.pyx", line 840, in cupy.core._kernel.ElementwiseKernel.__call__
E           kern = self._get_elementwise_kernel(dev_id, arginfos, type_map)
E         File "cupy/core/_kernel.pyx", line 865, in cupy.core._kernel.ElementwiseKernel._get_elementwise_kernel
E           kern = _get_elementwise_kernel(
E         File "cupy/_util.pyx", line 59, in cupy._util.memoize.decorator.ret
E           result = f(*args, **kwargs)
E         File "cupy/core/_kernel.pyx", line 652, in cupy.core._kernel._get_elementwise_kernel
E           return _get_simple_elementwise_kernel(
E         File "cupy/core/_kernel.pyx", line 38, in cupy.core._kernel._get_simple_elementwise_kernel
E           cpdef function.Function _get_simple_elementwise_kernel(
E         File "cupy/core/_kernel.pyx", line 61, in cupy.core._kernel._get_simple_elementwise_kernel
E           module = compile_with_cache(module_code, options)
E         File "cupy/core/core.pyx", line 2021, in cupy.core.core.compile_with_cache
E           return cuda.compile_with_cache(
E         File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.t8hdvgF7FH/cupy/cupy/cuda/compiler.py", line 428, in compile_with_cache
E           return _compile_with_cache_hip(
E         File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.t8hdvgF7FH/cupy/cupy/cuda/compiler.py", line 829, in _compile_with_cache_hip
E           temp_path = tf.name
E         File "/home/kmaeh/.pyenv/versions/3.8.7/lib/python3.8/tempfile.py", line 491, in __exit__
E           result = self.file.__exit__(exc, value, tb)
E       OSError: [Errno 28] No space left on device

/home/kmaeh/.pyenv/versions/3.8.7/lib/python3.8/tempfile.py:491: AssertionError
_______________ TestVectorizeBroadcast.test_vectorize_broadcast ________________

self = <cupy_tests.functional_tests.test_vectorize.TestVectorizeBroadcast testMethod=test_vectorize_broadcast>
xp = <module 'cupy' from '/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.t8hdvgF7FH/cupy/cupy/__init__.py'>
dtype = <class 'numpy.float64'>

    @testing.for_all_dtypes(no_bool=True)
    @testing.numpy_cupy_allclose(rtol=1e-5)
    def test_vectorize_broadcast(self, xp, dtype):
        def my_func(x1, x2):
            return x1 + x2
    
        f = xp.vectorize(my_func)
        x1 = testing.shaped_random((20, 30), xp, dtype, seed=1)
        x2 = testing.shaped_random((30,), xp, dtype, seed=2)
>       return f(x1, x2)

tests/cupy_tests/functional_tests/test_vectorize.py:548: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
cupy/_functional/vectorize.py:98: in __call__
    return kern(*args)
cupy/core/_kernel.pyx:840: in cupy.core._kernel.ElementwiseKernel.__call__
    kern = self._get_elementwise_kernel(dev_id, arginfos, type_map)
cupy/core/_kernel.pyx:865: in cupy.core._kernel.ElementwiseKernel._get_elementwise_kernel
    kern = _get_elementwise_kernel(
cupy/_util.pyx:59: in cupy._util.memoize.decorator.ret
    result = f(*args, **kwargs)
cupy/core/_kernel.pyx:652: in cupy.core._kernel._get_elementwise_kernel
    return _get_simple_elementwise_kernel(
cupy/core/_kernel.pyx:38: in cupy.core._kernel._get_simple_elementwise_kernel
    cpdef function.Function _get_simple_elementwise_kernel(
cupy/core/_kernel.pyx:61: in cupy.core._kernel._get_simple_elementwise_kernel
    module = compile_with_cache(module_code, options)
cupy/core/core.pyx:2021: in cupy.core.core.compile_with_cache
    return cuda.compile_with_cache(
cupy/cuda/compiler.py:428: in compile_with_cache
    return _compile_with_cache_hip(
cupy/cuda/compiler.py:829: in _compile_with_cache_hip
    temp_path = tf.name
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <tempfile._TemporaryFileWrapper object at 0x7f5042b27400>, exc = None
value = None, tb = None

    def __exit__(self, exc, value, tb):
>       result = self.file.__exit__(exc, value, tb)
E       AssertionError: Only cupy raises error
E       
E       Traceback (most recent call last):
E         File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.t8hdvgF7FH/cupy/cupy/testing/_helper.py", line 47, in _call_func
E           result = impl(self, *args, **kw)
E         File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.t8hdvgF7FH/cupy/tests/cupy_tests/functional_tests/test_vectorize.py", line 548, in test_vectorize_broadcast
E           return f(x1, x2)
E         File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.t8hdvgF7FH/cupy/cupy/_functional/vectorize.py", line 98, in __call__
E           return kern(*args)
E         File "cupy/core/_kernel.pyx", line 840, in cupy.core._kernel.ElementwiseKernel.__call__
E           kern = self._get_elementwise_kernel(dev_id, arginfos, type_map)
E         File "cupy/core/_kernel.pyx", line 865, in cupy.core._kernel.ElementwiseKernel._get_elementwise_kernel
E           kern = _get_elementwise_kernel(
E         File "cupy/_util.pyx", line 59, in cupy._util.memoize.decorator.ret
E           result = f(*args, **kwargs)
E         File "cupy/core/_kernel.pyx", line 652, in cupy.core._kernel._get_elementwise_kernel
E           return _get_simple_elementwise_kernel(
E         File "cupy/core/_kernel.pyx", line 38, in cupy.core._kernel._get_simple_elementwise_kernel
E           cpdef function.Function _get_simple_elementwise_kernel(
E         File "cupy/core/_kernel.pyx", line 61, in cupy.core._kernel._get_simple_elementwise_kernel
E           module = compile_with_cache(module_code, options)
E         File "cupy/core/core.pyx", line 2021, in cupy.core.core.compile_with_cache
E           return cuda.compile_with_cache(
E         File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.t8hdvgF7FH/cupy/cupy/cuda/compiler.py", line 428, in compile_with_cache
E           return _compile_with_cache_hip(
E         File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.t8hdvgF7FH/cupy/cupy/cuda/compiler.py", line 829, in _compile_with_cache_hip
E           temp_path = tf.name
E         File "/home/kmaeh/.pyenv/versions/3.8.7/lib/python3.8/tempfile.py", line 491, in __exit__
E           result = self.file.__exit__(exc, value, tb)
E       OSError: [Errno 28] No space left on device

/home/kmaeh/.pyenv/versions/3.8.7/lib/python3.8/tempfile.py:491: AssertionError
----------------------------- Captured stdout call -----------------------------
dtype is <class 'numpy.float64'>
___________ TestVectorizeBroadcast.test_vectorize_numpy_scalar_input ___________

self = <cupy_tests.functional_tests.test_vectorize.TestVectorizeBroadcast testMethod=test_vectorize_numpy_scalar_input>
xp = <module 'cupy' from '/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.t8hdvgF7FH/cupy/cupy/__init__.py'>
dtype = <class 'numpy.float64'>

    @testing.for_all_dtypes(no_bool=True)
    @testing.numpy_cupy_allclose(rtol=1e-5)
    def test_vectorize_numpy_scalar_input(self, xp, dtype):
        def my_func(x1, x2):
            return x1 + x2
    
        f = xp.vectorize(my_func)
        x1 = testing.shaped_random((20, 30), xp, dtype, seed=1)
        x2 = dtype(1)
>       return f(x1, x2)

tests/cupy_tests/functional_tests/test_vectorize.py:570: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
cupy/_functional/vectorize.py:98: in __call__
    return kern(*args)
cupy/core/_kernel.pyx:840: in cupy.core._kernel.ElementwiseKernel.__call__
    kern = self._get_elementwise_kernel(dev_id, arginfos, type_map)
cupy/core/_kernel.pyx:865: in cupy.core._kernel.ElementwiseKernel._get_elementwise_kernel
    kern = _get_elementwise_kernel(
cupy/_util.pyx:59: in cupy._util.memoize.decorator.ret
    result = f(*args, **kwargs)
cupy/core/_kernel.pyx:652: in cupy.core._kernel._get_elementwise_kernel
    return _get_simple_elementwise_kernel(
cupy/core/_kernel.pyx:38: in cupy.core._kernel._get_simple_elementwise_kernel
    cpdef function.Function _get_simple_elementwise_kernel(
cupy/core/_kernel.pyx:61: in cupy.core._kernel._get_simple_elementwise_kernel
    module = compile_with_cache(module_code, options)
cupy/core/core.pyx:2021: in cupy.core.core.compile_with_cache
    return cuda.compile_with_cache(
cupy/cuda/compiler.py:428: in compile_with_cache
    return _compile_with_cache_hip(
cupy/cuda/compiler.py:829: in _compile_with_cache_hip
    temp_path = tf.name
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <tempfile._TemporaryFileWrapper object at 0x7f5010f5fcd0>, exc = None
value = None, tb = None

    def __exit__(self, exc, value, tb):
>       result = self.file.__exit__(exc, value, tb)
E       AssertionError: Only cupy raises error
E       
E       Traceback (most recent call last):
E         File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.t8hdvgF7FH/cupy/cupy/testing/_helper.py", line 47, in _call_func
E           result = impl(self, *args, **kw)
E         File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.t8hdvgF7FH/cupy/tests/cupy_tests/functional_tests/test_vectorize.py", line 570, in test_vectorize_numpy_scalar_input
E           return f(x1, x2)
E         File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.t8hdvgF7FH/cupy/cupy/_functional/vectorize.py", line 98, in __call__
E           return kern(*args)
E         File "cupy/core/_kernel.pyx", line 840, in cupy.core._kernel.ElementwiseKernel.__call__
E           kern = self._get_elementwise_kernel(dev_id, arginfos, type_map)
E         File "cupy/core/_kernel.pyx", line 865, in cupy.core._kernel.ElementwiseKernel._get_elementwise_kernel
E           kern = _get_elementwise_kernel(
E         File "cupy/_util.pyx", line 59, in cupy._util.memoize.decorator.ret
E           result = f(*args, **kwargs)
E         File "cupy/core/_kernel.pyx", line 652, in cupy.core._kernel._get_elementwise_kernel
E           return _get_simple_elementwise_kernel(
E         File "cupy/core/_kernel.pyx", line 38, in cupy.core._kernel._get_simple_elementwise_kernel
E           cpdef function.Function _get_simple_elementwise_kernel(
E         File "cupy/core/_kernel.pyx", line 61, in cupy.core._kernel._get_simple_elementwise_kernel
E           module = compile_with_cache(module_code, options)
E         File "cupy/core/core.pyx", line 2021, in cupy.core.core.compile_with_cache
E           return cuda.compile_with_cache(
E         File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.t8hdvgF7FH/cupy/cupy/cuda/compiler.py", line 428, in compile_with_cache
E           return _compile_with_cache_hip(
E         File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.t8hdvgF7FH/cupy/cupy/cuda/compiler.py", line 829, in _compile_with_cache_hip
E           temp_path = tf.name
E         File "/home/kmaeh/.pyenv/versions/3.8.7/lib/python3.8/tempfile.py", line 491, in __exit__
E           result = self.file.__exit__(exc, value, tb)
E       OSError: [Errno 28] No space left on device

/home/kmaeh/.pyenv/versions/3.8.7/lib/python3.8/tempfile.py:491: AssertionError
----------------------------- Captured stdout call -----------------------------
dtype is <class 'numpy.float64'>
__________ TestVectorizeBroadcast.test_vectorize_python_scalar_input ___________

self = <cupy_tests.functional_tests.test_vectorize.TestVectorizeBroadcast testMethod=test_vectorize_python_scalar_input>
xp = <module 'cupy' from '/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.t8hdvgF7FH/cupy/cupy/__init__.py'>
dtype = <class 'numpy.float64'>

    @testing.for_all_dtypes(no_bool=True)
    @testing.numpy_cupy_allclose(rtol=1e-5)
    def test_vectorize_python_scalar_input(self, xp, dtype):
        def my_func(x1, x2):
            return x1 + x2
    
        f = xp.vectorize(my_func)
        x1 = testing.shaped_random((20, 30), xp, dtype, seed=1)
        x2 = 1
>       return f(x1, x2)

tests/cupy_tests/functional_tests/test_vectorize.py:559: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
cupy/_functional/vectorize.py:98: in __call__
    return kern(*args)
cupy/core/_kernel.pyx:840: in cupy.core._kernel.ElementwiseKernel.__call__
    kern = self._get_elementwise_kernel(dev_id, arginfos, type_map)
cupy/core/_kernel.pyx:865: in cupy.core._kernel.ElementwiseKernel._get_elementwise_kernel
    kern = _get_elementwise_kernel(
cupy/_util.pyx:59: in cupy._util.memoize.decorator.ret
    result = f(*args, **kwargs)
cupy/core/_kernel.pyx:652: in cupy.core._kernel._get_elementwise_kernel
    return _get_simple_elementwise_kernel(
cupy/core/_kernel.pyx:38: in cupy.core._kernel._get_simple_elementwise_kernel
    cpdef function.Function _get_simple_elementwise_kernel(
cupy/core/_kernel.pyx:61: in cupy.core._kernel._get_simple_elementwise_kernel
    module = compile_with_cache(module_code, options)
cupy/core/core.pyx:2021: in cupy.core.core.compile_with_cache
    return cuda.compile_with_cache(
cupy/cuda/compiler.py:428: in compile_with_cache
    return _compile_with_cache_hip(
cupy/cuda/compiler.py:829: in _compile_with_cache_hip
    temp_path = tf.name
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <tempfile._TemporaryFileWrapper object at 0x7f5010e699a0>, exc = None
value = None, tb = None

    def __exit__(self, exc, value, tb):
>       result = self.file.__exit__(exc, value, tb)
E       AssertionError: Only cupy raises error
E       
E       Traceback (most recent call last):
E         File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.t8hdvgF7FH/cupy/cupy/testing/_helper.py", line 47, in _call_func
E           result = impl(self, *args, **kw)
E         File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.t8hdvgF7FH/cupy/tests/cupy_tests/functional_tests/test_vectorize.py", line 559, in test_vectorize_python_scalar_input
E           return f(x1, x2)
E         File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.t8hdvgF7FH/cupy/cupy/_functional/vectorize.py", line 98, in __call__
E           return kern(*args)
E         File "cupy/core/_kernel.pyx", line 840, in cupy.core._kernel.ElementwiseKernel.__call__
E           kern = self._get_elementwise_kernel(dev_id, arginfos, type_map)
E         File "cupy/core/_kernel.pyx", line 865, in cupy.core._kernel.ElementwiseKernel._get_elementwise_kernel
E           kern = _get_elementwise_kernel(
E         File "cupy/_util.pyx", line 59, in cupy._util.memoize.decorator.ret
E           result = f(*args, **kwargs)
E         File "cupy/core/_kernel.pyx", line 652, in cupy.core._kernel._get_elementwise_kernel
E           return _get_simple_elementwise_kernel(
E         File "cupy/core/_kernel.pyx", line 38, in cupy.core._kernel._get_simple_elementwise_kernel
E           cpdef function.Function _get_simple_elementwise_kernel(
E         File "cupy/core/_kernel.pyx", line 61, in cupy.core._kernel._get_simple_elementwise_kernel
E           module = compile_with_cache(module_code, options)
E         File "cupy/core/core.pyx", line 2021, in cupy.core.core.compile_with_cache
E           return cuda.compile_with_cache(
E         File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.t8hdvgF7FH/cupy/cupy/cuda/compiler.py", line 428, in compile_with_cache
E           return _compile_with_cache_hip(
E         File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.t8hdvgF7FH/cupy/cupy/cuda/compiler.py", line 829, in _compile_with_cache_hip
E           temp_path = tf.name
E         File "/home/kmaeh/.pyenv/versions/3.8.7/lib/python3.8/tempfile.py", line 491, in __exit__
E           result = self.file.__exit__(exc, value, tb)
E       OSError: [Errno 28] No space left on device

/home/kmaeh/.pyenv/versions/3.8.7/lib/python3.8/tempfile.py:491: AssertionError
----------------------------- Captured stdout call -----------------------------
dtype is <class 'numpy.float64'>
_________________ TestVectorize.test_vectorize_arithmetic_ops __________________

self = <cupy_tests.functional_tests.test_vectorize.TestVectorize testMethod=test_vectorize_arithmetic_ops>
xp = <module 'cupy' from '/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.t8hdvgF7FH/cupy/cupy/__init__.py'>
dtype = <class 'numpy.longlong'>

    @testing.for_dtypes('qQefdFD')
    @testing.numpy_cupy_allclose(rtol=1e-5)
    def test_vectorize_arithmetic_ops(self, xp, dtype):
        def my_func(x1, x2, x3):
            y = x1 + x2 * x3 ** x1
            x2 = y + x3 * x1
            return x1 + x2 + x3
    
        f = xp.vectorize(my_func)
        x1 = testing.shaped_random((20, 30), xp, dtype, seed=1)
        x2 = testing.shaped_random((20, 30), xp, dtype, seed=2)
        x3 = testing.shaped_random((20, 30), xp, dtype, seed=3)
>       return f(x1, x2, x3)

tests/cupy_tests/functional_tests/test_vectorize.py:587: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
cupy/_functional/vectorize.py:98: in __call__
    return kern(*args)
cupy/core/_kernel.pyx:840: in cupy.core._kernel.ElementwiseKernel.__call__
    kern = self._get_elementwise_kernel(dev_id, arginfos, type_map)
cupy/core/_kernel.pyx:865: in cupy.core._kernel.ElementwiseKernel._get_elementwise_kernel
    kern = _get_elementwise_kernel(
cupy/_util.pyx:59: in cupy._util.memoize.decorator.ret
    result = f(*args, **kwargs)
cupy/core/_kernel.pyx:652: in cupy.core._kernel._get_elementwise_kernel
    return _get_simple_elementwise_kernel(
cupy/core/_kernel.pyx:38: in cupy.core._kernel._get_simple_elementwise_kernel
    cpdef function.Function _get_simple_elementwise_kernel(
cupy/core/_kernel.pyx:61: in cupy.core._kernel._get_simple_elementwise_kernel
    module = compile_with_cache(module_code, options)
cupy/core/core.pyx:2021: in cupy.core.core.compile_with_cache
    return cuda.compile_with_cache(
cupy/cuda/compiler.py:428: in compile_with_cache
    return _compile_with_cache_hip(
cupy/cuda/compiler.py:829: in _compile_with_cache_hip
    temp_path = tf.name
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <tempfile._TemporaryFileWrapper object at 0x7f577cd47910>, exc = None
value = None, tb = None

    def __exit__(self, exc, value, tb):
>       result = self.file.__exit__(exc, value, tb)
E       AssertionError: Only cupy raises error
E       
E       Traceback (most recent call last):
E         File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.t8hdvgF7FH/cupy/cupy/testing/_helper.py", line 47, in _call_func
E           result = impl(self, *args, **kw)
E         File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.t8hdvgF7FH/cupy/tests/cupy_tests/functional_tests/test_vectorize.py", line 587, in test_vectorize_arithmetic_ops
E           return f(x1, x2, x3)
E         File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.t8hdvgF7FH/cupy/cupy/_functional/vectorize.py", line 98, in __call__
E           return kern(*args)
E         File "cupy/core/_kernel.pyx", line 840, in cupy.core._kernel.ElementwiseKernel.__call__
E           kern = self._get_elementwise_kernel(dev_id, arginfos, type_map)
E         File "cupy/core/_kernel.pyx", line 865, in cupy.core._kernel.ElementwiseKernel._get_elementwise_kernel
E           kern = _get_elementwise_kernel(
E         File "cupy/_util.pyx", line 59, in cupy._util.memoize.decorator.ret
E           result = f(*args, **kwargs)
E         File "cupy/core/_kernel.pyx", line 652, in cupy.core._kernel._get_elementwise_kernel
E           return _get_simple_elementwise_kernel(
E         File "cupy/core/_kernel.pyx", line 38, in cupy.core._kernel._get_simple_elementwise_kernel
E           cpdef function.Function _get_simple_elementwise_kernel(
E         File "cupy/core/_kernel.pyx", line 61, in cupy.core._kernel._get_simple_elementwise_kernel
E           module = compile_with_cache(module_code, options)
E         File "cupy/core/core.pyx", line 2021, in cupy.core.core.compile_with_cache
E           return cuda.compile_with_cache(
E         File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.t8hdvgF7FH/cupy/cupy/cuda/compiler.py", line 428, in compile_with_cache
E           return _compile_with_cache_hip(
E         File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.t8hdvgF7FH/cupy/cupy/cuda/compiler.py", line 829, in _compile_with_cache_hip
E           temp_path = tf.name
E         File "/home/kmaeh/.pyenv/versions/3.8.7/lib/python3.8/tempfile.py", line 491, in __exit__
E           result = self.file.__exit__(exc, value, tb)
E       OSError: [Errno 28] No space left on device

/home/kmaeh/.pyenv/versions/3.8.7/lib/python3.8/tempfile.py:491: AssertionError
----------------------------- Captured stdout call -----------------------------
dtype is q
_________________________ TestIX_.test_ix_bool_ndarray _________________________

self = <cupy_tests.indexing_tests.test_generate.TestIX_ testMethod=test_ix_bool_ndarray>
xp = <module 'cupy' from '/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.t8hdvgF7FH/cupy/cupy/__init__.py'>

    @testing.numpy_cupy_array_equal()
    def test_ix_bool_ndarray(self, xp):
>       return xp.ix_(xp.array([True, False] * 2))

tests/cupy_tests/indexing_tests/test_generate.py:55: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
cupy/_indexing/generate.py:246: in ix_
    new, = new.nonzero()  # may synchronize
cupy/core/core.pyx:770: in cupy.core.core.ndarray.nonzero
    cpdef tuple nonzero(self):
cupy/core/core.pyx:787: in cupy.core.core.ndarray.nonzero
    return _indexing._ndarray_nonzero(self)
cupy/core/_routines_indexing.pyx:59: in cupy.core._routines_indexing._ndarray_nonzero
    cdef ndarray dst = _ndarray_argwhere(self)
cupy/core/_routines_indexing.pyx:120: in cupy.core._routines_indexing._ndarray_argwhere
    _nonzero_kernel(nonzero, scan_index, dst)
cupy/core/_kernel.pyx:840: in cupy.core._kernel.ElementwiseKernel.__call__
    kern = self._get_elementwise_kernel(dev_id, arginfos, type_map)
cupy/core/_kernel.pyx:865: in cupy.core._kernel.ElementwiseKernel._get_elementwise_kernel
    kern = _get_elementwise_kernel(
cupy/_util.pyx:59: in cupy._util.memoize.decorator.ret
    result = f(*args, **kwargs)
cupy/core/_kernel.pyx:652: in cupy.core._kernel._get_elementwise_kernel
    return _get_simple_elementwise_kernel(
cupy/core/_kernel.pyx:38: in cupy.core._kernel._get_simple_elementwise_kernel
    cpdef function.Function _get_simple_elementwise_kernel(
cupy/core/_kernel.pyx:61: in cupy.core._kernel._get_simple_elementwise_kernel
    module = compile_with_cache(module_code, options)
cupy/core/core.pyx:2021: in cupy.core.core.compile_with_cache
    return cuda.compile_with_cache(
cupy/cuda/compiler.py:428: in compile_with_cache
    return _compile_with_cache_hip(
cupy/cuda/compiler.py:829: in _compile_with_cache_hip
    temp_path = tf.name
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <tempfile._TemporaryFileWrapper object at 0x7f50116d2dc0>, exc = None
value = None, tb = None

    def __exit__(self, exc, value, tb):
>       result = self.file.__exit__(exc, value, tb)
E       AssertionError: Only cupy raises error
E       
E       Traceback (most recent call last):
E         File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.t8hdvgF7FH/cupy/cupy/testing/_helper.py", line 47, in _call_func
E           result = impl(self, *args, **kw)
E         File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.t8hdvgF7FH/cupy/tests/cupy_tests/indexing_tests/test_generate.py", line 55, in test_ix_bool_ndarray
E           return xp.ix_(xp.array([True, False] * 2))
E         File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.t8hdvgF7FH/cupy/cupy/_indexing/generate.py", line 246, in ix_
E           new, = new.nonzero()  # may synchronize
E         File "cupy/core/core.pyx", line 770, in cupy.core.core.ndarray.nonzero
E           cpdef tuple nonzero(self):
E         File "cupy/core/core.pyx", line 787, in cupy.core.core.ndarray.nonzero
E           return _indexing._ndarray_nonzero(self)
E         File "cupy/core/_routines_indexing.pyx", line 59, in cupy.core._routines_indexing._ndarray_nonzero
E           cdef ndarray dst = _ndarray_argwhere(self)
E         File "cupy/core/_routines_indexing.pyx", line 120, in cupy.core._routines_indexing._ndarray_argwhere
E           _nonzero_kernel(nonzero, scan_index, dst)
E         File "cupy/core/_kernel.pyx", line 840, in cupy.core._kernel.ElementwiseKernel.__call__
E           kern = self._get_elementwise_kernel(dev_id, arginfos, type_map)
E         File "cupy/core/_kernel.pyx", line 865, in cupy.core._kernel.ElementwiseKernel._get_elementwise_kernel
E           kern = _get_elementwise_kernel(
E         File "cupy/_util.pyx", line 59, in cupy._util.memoize.decorator.ret
E           result = f(*args, **kwargs)
E         File "cupy/core/_kernel.pyx", line 652, in cupy.core._kernel._get_elementwise_kernel
E           return _get_simple_elementwise_kernel(
E         File "cupy/core/_kernel.pyx", line 38, in cupy.core._kernel._get_simple_elementwise_kernel
E           cpdef function.Function _get_simple_elementwise_kernel(
E         File "cupy/core/_kernel.pyx", line 61, in cupy.core._kernel._get_simple_elementwise_kernel
E           module = compile_with_cache(module_code, options)
E         File "cupy/core/core.pyx", line 2021, in cupy.core.core.compile_with_cache
E           return cuda.compile_with_cache(
E         File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.t8hdvgF7FH/cupy/cupy/cuda/compiler.py", line 428, in compile_with_cache
E           return _compile_with_cache_hip(
E         File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.t8hdvgF7FH/cupy/cupy/cuda/compiler.py", line 829, in _compile_with_cache_hip
E           temp_path = tf.name
E         File "/home/kmaeh/.pyenv/versions/3.8.7/lib/python3.8/tempfile.py", line 491, in __exit__
E           result = self.file.__exit__(exc, value, tb)
E       OSError: [Errno 28] No space left on device

/home/kmaeh/.pyenv/versions/3.8.7/lib/python3.8/tempfile.py:491: AssertionError
____________________________ TestUnravelIndex.test _____________________________

self = <cupy_tests.indexing_tests.test_generate.TestUnravelIndex testMethod=test>
xp = <module 'cupy' from '/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.t8hdvgF7FH/cupy/cupy/__init__.py'>
order = 'C', dtype = <class 'numpy.int8'>

    @testing.for_orders(['C', 'F', None])
    @testing.for_int_dtypes()
    @testing.numpy_cupy_array_equal(type_check=False)
    def test(self, xp, order, dtype):
        a = testing.shaped_arange((4, 3, 2), xp, dtype)
>       a = xp.minimum(a, 6 * 4 - 1)

tests/cupy_tests/indexing_tests/test_generate.py:158: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
cupy/core/_kernel.pyx:1103: in cupy.core._kernel.ufunc.__call__
    kern = self._get_ufunc_kernel(dev_id, op, arginfos)
cupy/core/_kernel.pyx:1126: in cupy.core._kernel.ufunc._get_ufunc_kernel
    kern = _get_ufunc_kernel(
cupy/core/_kernel.pyx:900: in cupy.core._kernel._get_ufunc_kernel
    return _get_simple_elementwise_kernel(
cupy/core/_kernel.pyx:61: in cupy.core._kernel._get_simple_elementwise_kernel
    module = compile_with_cache(module_code, options)
cupy/core/core.pyx:2021: in cupy.core.core.compile_with_cache
    return cuda.compile_with_cache(
cupy/cuda/compiler.py:428: in compile_with_cache
    return _compile_with_cache_hip(
cupy/cuda/compiler.py:829: in _compile_with_cache_hip
    temp_path = tf.name
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <tempfile._TemporaryFileWrapper object at 0x7f5010e3fe50>, exc = None
value = None, tb = None

    def __exit__(self, exc, value, tb):
>       result = self.file.__exit__(exc, value, tb)
E       AssertionError: Only cupy raises error
E       
E       Traceback (most recent call last):
E         File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.t8hdvgF7FH/cupy/cupy/testing/_helper.py", line 47, in _call_func
E           result = impl(self, *args, **kw)
E         File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.t8hdvgF7FH/cupy/tests/cupy_tests/indexing_tests/test_generate.py", line 158, in test
E           a = xp.minimum(a, 6 * 4 - 1)
E         File "cupy/core/_kernel.pyx", line 1103, in cupy.core._kernel.ufunc.__call__
E           kern = self._get_ufunc_kernel(dev_id, op, arginfos)
E         File "cupy/core/_kernel.pyx", line 1126, in cupy.core._kernel.ufunc._get_ufunc_kernel
E           kern = _get_ufunc_kernel(
E         File "cupy/core/_kernel.pyx", line 900, in cupy.core._kernel._get_ufunc_kernel
E           return _get_simple_elementwise_kernel(
E         File "cupy/core/_kernel.pyx", line 61, in cupy.core._kernel._get_simple_elementwise_kernel
E           module = compile_with_cache(module_code, options)
E         File "cupy/core/core.pyx", line 2021, in cupy.core.core.compile_with_cache
E           return cuda.compile_with_cache(
E         File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.t8hdvgF7FH/cupy/cupy/cuda/compiler.py", line 428, in compile_with_cache
E           return _compile_with_cache_hip(
E         File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.t8hdvgF7FH/cupy/cupy/cuda/compiler.py", line 829, in _compile_with_cache_hip
E           temp_path = tf.name
E         File "/home/kmaeh/.pyenv/versions/3.8.7/lib/python3.8/tempfile.py", line 491, in __exit__
E           result = self.file.__exit__(exc, value, tb)
E       OSError: [Errno 28] No space left on device

/home/kmaeh/.pyenv/versions/3.8.7/lib/python3.8/tempfile.py:491: AssertionError
----------------------------- Captured stdout call -----------------------------
dtype is <class 'numpy.int8'>
order is C
______________ TestRavelMultiIndex.test_multi_index_broadcasting _______________

self = <cupy_tests.indexing_tests.test_generate.TestRavelMultiIndex testMethod=test_multi_index_broadcasting>
xp = <module 'cupy' from '/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.t8hdvgF7FH/cupy/cupy/__init__.py'>
order = 'C', dtype = <class 'numpy.int8'>

    @testing.for_orders(['C', 'F', None])
    @testing.for_int_dtypes(no_bool=True)
    @testing.numpy_cupy_array_equal()
    def test_multi_index_broadcasting(self, xp, order, dtype):
        dims = (3, 5)
        x, y = xp.meshgrid(*[xp.arange(s, dtype=dtype) for s in dims],
                           sparse=True)
>       return xp.ravel_multi_index((x, y), dims, order=order)

tests/cupy_tests/indexing_tests/test_generate.py:204: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
cupy/_indexing/generate.py:353: in ravel_multi_index
    idx = idx.astype(cupy.int64, copy=False)
cupy/core/core.pyx:394: in cupy.core.core.ndarray.astype
    cpdef ndarray astype(
cupy/core/core.pyx:465: in cupy.core.core.ndarray.astype
    elementwise_copy(self, newarray)
cupy/core/_kernel.pyx:1103: in cupy.core._kernel.ufunc.__call__
    kern = self._get_ufunc_kernel(dev_id, op, arginfos)
cupy/core/_kernel.pyx:1126: in cupy.core._kernel.ufunc._get_ufunc_kernel
    kern = _get_ufunc_kernel(
cupy/core/_kernel.pyx:900: in cupy.core._kernel._get_ufunc_kernel
    return _get_simple_elementwise_kernel(
cupy/core/_kernel.pyx:61: in cupy.core._kernel._get_simple_elementwise_kernel
    module = compile_with_cache(module_code, options)
cupy/core/core.pyx:2021: in cupy.core.core.compile_with_cache
    return cuda.compile_with_cache(
cupy/cuda/compiler.py:428: in compile_with_cache
    return _compile_with_cache_hip(
cupy/cuda/compiler.py:829: in _compile_with_cache_hip
    temp_path = tf.name
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <tempfile._TemporaryFileWrapper object at 0x7f5010ee1190>, exc = None
value = None, tb = None

    def __exit__(self, exc, value, tb):
>       result = self.file.__exit__(exc, value, tb)
E       AssertionError: Only cupy raises error
E       
E       Traceback (most recent call last):
E         File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.t8hdvgF7FH/cupy/cupy/testing/_helper.py", line 47, in _call_func
E           result = impl(self, *args, **kw)
E         File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.t8hdvgF7FH/cupy/tests/cupy_tests/indexing_tests/test_generate.py", line 204, in test_multi_index_broadcasting
E           return xp.ravel_multi_index((x, y), dims, order=order)
E         File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.t8hdvgF7FH/cupy/cupy/_indexing/generate.py", line 353, in ravel_multi_index
E           idx = idx.astype(cupy.int64, copy=False)
E         File "cupy/core/core.pyx", line 394, in cupy.core.core.ndarray.astype
E           cpdef ndarray astype(
E         File "cupy/core/core.pyx", line 465, in cupy.core.core.ndarray.astype
E           elementwise_copy(self, newarray)
E         File "cupy/core/_kernel.pyx", line 1103, in cupy.core._kernel.ufunc.__call__
E           kern = self._get_ufunc_kernel(dev_id, op, arginfos)
E         File "cupy/core/_kernel.pyx", line 1126, in cupy.core._kernel.ufunc._get_ufunc_kernel
E           kern = _get_ufunc_kernel(
E         File "cupy/core/_kernel.pyx", line 900, in cupy.core._kernel._get_ufunc_kernel
E           return _get_simple_elementwise_kernel(
E         File "cupy/core/_kernel.pyx", line 61, in cupy.core._kernel._get_simple_elementwise_kernel
E           module = compile_with_cache(module_code, options)
E         File "cupy/core/core.pyx", line 2021, in cupy.core.core.compile_with_cache
E           return cuda.compile_with_cache(
E         File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.t8hdvgF7FH/cupy/cupy/cuda/compiler.py", line 428, in compile_with_cache
E           return _compile_with_cache_hip(
E         File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.t8hdvgF7FH/cupy/cupy/cuda/compiler.py", line 829, in _compile_with_cache_hip
E           temp_path = tf.name
E         File "/home/kmaeh/.pyenv/versions/3.8.7/lib/python3.8/tempfile.py", line 491, in __exit__
E           result = self.file.__exit__(exc, value, tb)
E       OSError: [Errno 28] No space left on device

/home/kmaeh/.pyenv/versions/3.8.7/lib/python3.8/tempfile.py:491: AssertionError
----------------------------- Captured stdout call -----------------------------
dtype is <class 'numpy.int8'>
order is C
__________________________ TestIndexing.test_compress __________________________

self = <cupy_tests.indexing_tests.test_indexing.TestIndexing testMethod=test_compress>
xp = <module 'cupy' from '/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.t8hdvgF7FH/cupy/cupy/__init__.py'>

    @testing.numpy_cupy_array_equal()
    def test_compress(self, xp):
        a = testing.shaped_arange((3, 4, 5), xp)
        b = xp.array([True, False, True])
>       return xp.compress(b, a, axis=1)

tests/cupy_tests/indexing_tests/test_indexing.py:69: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
cupy/_indexing/indexing.py:101: in compress
    return a.compress(condition, axis, out)
cupy/core/core.pyx:789: in cupy.core.core.ndarray.compress
    cpdef ndarray compress(self, condition, axis=None, out=None):
cupy/core/core.pyx:801: in cupy.core.core.ndarray.compress
    return _indexing._ndarray_compress(self, condition, axis, out)
cupy/core/_routines_indexing.pyx:212: in cupy.core._routines_indexing._ndarray_compress
    res = _ndarray_nonzero(condition)  # synchronize
cupy/core/_routines_indexing.pyx:59: in cupy.core._routines_indexing._ndarray_nonzero
    cdef ndarray dst = _ndarray_argwhere(self)
cupy/core/_routines_indexing.pyx:120: in cupy.core._routines_indexing._ndarray_argwhere
    _nonzero_kernel(nonzero, scan_index, dst)
cupy/core/_kernel.pyx:840: in cupy.core._kernel.ElementwiseKernel.__call__
    kern = self._get_elementwise_kernel(dev_id, arginfos, type_map)
cupy/core/_kernel.pyx:865: in cupy.core._kernel.ElementwiseKernel._get_elementwise_kernel
    kern = _get_elementwise_kernel(
cupy/_util.pyx:59: in cupy._util.memoize.decorator.ret
    result = f(*args, **kwargs)
cupy/core/_kernel.pyx:652: in cupy.core._kernel._get_elementwise_kernel
    return _get_simple_elementwise_kernel(
cupy/core/_kernel.pyx:38: in cupy.core._kernel._get_simple_elementwise_kernel
    cpdef function.Function _get_simple_elementwise_kernel(
cupy/core/_kernel.pyx:61: in cupy.core._kernel._get_simple_elementwise_kernel
    module = compile_with_cache(module_code, options)
cupy/core/core.pyx:2021: in cupy.core.core.compile_with_cache
    return cuda.compile_with_cache(
cupy/cuda/compiler.py:428: in compile_with_cache
    return _compile_with_cache_hip(
cupy/cuda/compiler.py:829: in _compile_with_cache_hip
    temp_path = tf.name
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <tempfile._TemporaryFileWrapper object at 0x7f50109fe130>, exc = None
value = None, tb = None

    def __exit__(self, exc, value, tb):
>       result = self.file.__exit__(exc, value, tb)
E       AssertionError: Only cupy raises error
E       
E       Traceback (most recent call last):
E         File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.t8hdvgF7FH/cupy/cupy/testing/_helper.py", line 47, in _call_func
E           result = impl(self, *args, **kw)
E         File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.t8hdvgF7FH/cupy/tests/cupy_tests/indexing_tests/test_indexing.py", line 69, in test_compress
E           return xp.compress(b, a, axis=1)
E         File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.t8hdvgF7FH/cupy/cupy/_indexing/indexing.py", line 101, in compress
E           return a.compress(condition, axis, out)
E         File "cupy/core/core.pyx", line 789, in cupy.core.core.ndarray.compress
E           cpdef ndarray compress(self, condition, axis=None, out=None):
E         File "cupy/core/core.pyx", line 801, in cupy.core.core.ndarray.compress
E           return _indexing._ndarray_compress(self, condition, axis, out)
E         File "cupy/core/_routines_indexing.pyx", line 212, in cupy.core._routines_indexing._ndarray_compress
E           res = _ndarray_nonzero(condition)  # synchronize
E         File "cupy/core/_routines_indexing.pyx", line 59, in cupy.core._routines_indexing._ndarray_nonzero
E           cdef ndarray dst = _ndarray_argwhere(self)
E         File "cupy/core/_routines_indexing.pyx", line 120, in cupy.core._routines_indexing._ndarray_argwhere
E           _nonzero_kernel(nonzero, scan_index, dst)
E         File "cupy/core/_kernel.pyx", line 840, in cupy.core._kernel.ElementwiseKernel.__call__
E           kern = self._get_elementwise_kernel(dev_id, arginfos, type_map)
E         File "cupy/core/_kernel.pyx", line 865, in cupy.core._kernel.ElementwiseKernel._get_elementwise_kernel
E           kern = _get_elementwise_kernel(
E         File "cupy/_util.pyx", line 59, in cupy._util.memoize.decorator.ret
E           result = f(*args, **kwargs)
E         File "cupy/core/_kernel.pyx", line 652, in cupy.core._kernel._get_elementwise_kernel
E           return _get_simple_elementwise_kernel(
E         File "cupy/core/_kernel.pyx", line 38, in cupy.core._kernel._get_simple_elementwise_kernel
E           cpdef function.Function _get_simple_elementwise_kernel(
E         File "cupy/core/_kernel.pyx", line 61, in cupy.core._kernel._get_simple_elementwise_kernel
E           module = compile_with_cache(module_code, options)
E         File "cupy/core/core.pyx", line 2021, in cupy.core.core.compile_with_cache
E           return cuda.compile_with_cache(
E         File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.t8hdvgF7FH/cupy/cupy/cuda/compiler.py", line 428, in compile_with_cache
E           return _compile_with_cache_hip(
E         File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.t8hdvgF7FH/cupy/cupy/cuda/compiler.py", line 829, in _compile_with_cache_hip
E           temp_path = tf.name
E         File "/home/kmaeh/.pyenv/versions/3.8.7/lib/python3.8/tempfile.py", line 491, in __exit__
E           result = self.file.__exit__(exc, value, tb)
E       OSError: [Errno 28] No space left on device

/home/kmaeh/.pyenv/versions/3.8.7/lib/python3.8/tempfile.py:491: AssertionError
______________________ TestIndexing.test_compress_no_axis ______________________

self = <cupy_tests.indexing_tests.test_indexing.TestIndexing testMethod=test_compress_no_axis>
xp = <module 'cupy' from '/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.t8hdvgF7FH/cupy/cupy/__init__.py'>

    @testing.numpy_cupy_array_equal()
    def test_compress_no_axis(self, xp):
        a = testing.shaped_arange((3, 4, 5), xp)
        b = xp.array([True, False, True])
>       return xp.compress(b, a)

tests/cupy_tests/indexing_tests/test_indexing.py:75: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
cupy/_indexing/indexing.py:101: in compress
    return a.compress(condition, axis, out)
cupy/core/core.pyx:789: in cupy.core.core.ndarray.compress
    cpdef ndarray compress(self, condition, axis=None, out=None):
cupy/core/core.pyx:801: in cupy.core.core.ndarray.compress
    return _indexing._ndarray_compress(self, condition, axis, out)
cupy/core/_routines_indexing.pyx:212: in cupy.core._routines_indexing._ndarray_compress
    res = _ndarray_nonzero(condition)  # synchronize
cupy/core/_routines_indexing.pyx:59: in cupy.core._routines_indexing._ndarray_nonzero
    cdef ndarray dst = _ndarray_argwhere(self)
cupy/core/_routines_indexing.pyx:120: in cupy.core._routines_indexing._ndarray_argwhere
    _nonzero_kernel(nonzero, scan_index, dst)
cupy/core/_kernel.pyx:840: in cupy.core._kernel.ElementwiseKernel.__call__
    kern = self._get_elementwise_kernel(dev_id, arginfos, type_map)
cupy/core/_kernel.pyx:865: in cupy.core._kernel.ElementwiseKernel._get_elementwise_kernel
    kern = _get_elementwise_kernel(
cupy/_util.pyx:59: in cupy._util.memoize.decorator.ret
    result = f(*args, **kwargs)
cupy/core/_kernel.pyx:652: in cupy.core._kernel._get_elementwise_kernel
    return _get_simple_elementwise_kernel(
cupy/core/_kernel.pyx:38: in cupy.core._kernel._get_simple_elementwise_kernel
    cpdef function.Function _get_simple_elementwise_kernel(
cupy/core/_kernel.pyx:61: in cupy.core._kernel._get_simple_elementwise_kernel
    module = compile_with_cache(module_code, options)
cupy/core/core.pyx:2021: in cupy.core.core.compile_with_cache
    return cuda.compile_with_cache(
cupy/cuda/compiler.py:428: in compile_with_cache
    return _compile_with_cache_hip(
cupy/cuda/compiler.py:829: in _compile_with_cache_hip
    temp_path = tf.name
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <tempfile._TemporaryFileWrapper object at 0x7f5010e5d730>, exc = None
value = None, tb = None

    def __exit__(self, exc, value, tb):
>       result = self.file.__exit__(exc, value, tb)
E       AssertionError: Only cupy raises error
E       
E       Traceback (most recent call last):
E         File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.t8hdvgF7FH/cupy/cupy/testing/_helper.py", line 47, in _call_func
E           result = impl(self, *args, **kw)
E         File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.t8hdvgF7FH/cupy/tests/cupy_tests/indexing_tests/test_indexing.py", line 75, in test_compress_no_axis
E           return xp.compress(b, a)
E         File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.t8hdvgF7FH/cupy/cupy/_indexing/indexing.py", line 101, in compress
E           return a.compress(condition, axis, out)
E         File "cupy/core/core.pyx", line 789, in cupy.core.core.ndarray.compress
E           cpdef ndarray compress(self, condition, axis=None, out=None):
E         File "cupy/core/core.pyx", line 801, in cupy.core.core.ndarray.compress
E           return _indexing._ndarray_compress(self, condition, axis, out)
E         File "cupy/core/_routines_indexing.pyx", line 212, in cupy.core._routines_indexing._ndarray_compress
E           res = _ndarray_nonzero(condition)  # synchronize
E         File "cupy/core/_routines_indexing.pyx", line 59, in cupy.core._routines_indexing._ndarray_nonzero
E           cdef ndarray dst = _ndarray_argwhere(self)
E         File "cupy/core/_routines_indexing.pyx", line 120, in cupy.core._routines_indexing._ndarray_argwhere
E           _nonzero_kernel(nonzero, scan_index, dst)
E         File "cupy/core/_kernel.pyx", line 840, in cupy.core._kernel.ElementwiseKernel.__call__
E           kern = self._get_elementwise_kernel(dev_id, arginfos, type_map)
E         File "cupy/core/_kernel.pyx", line 865, in cupy.core._kernel.ElementwiseKernel._get_elementwise_kernel
E           kern = _get_elementwise_kernel(
E         File "cupy/_util.pyx", line 59, in cupy._util.memoize.decorator.ret
E           result = f(*args, **kwargs)
E         File "cupy/core/_kernel.pyx", line 652, in cupy.core._kernel._get_elementwise_kernel
E           return _get_simple_elementwise_kernel(
E         File "cupy/core/_kernel.pyx", line 38, in cupy.core._kernel._get_simple_elementwise_kernel
E           cpdef function.Function _get_simple_elementwise_kernel(
E         File "cupy/core/_kernel.pyx", line 61, in cupy.core._kernel._get_simple_elementwise_kernel
E           module = compile_with_cache(module_code, options)
E         File "cupy/core/core.pyx", line 2021, in cupy.core.core.compile_with_cache
E           return cuda.compile_with_cache(
E         File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.t8hdvgF7FH/cupy/cupy/cuda/compiler.py", line 428, in compile_with_cache
E           return _compile_with_cache_hip(
E         File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.t8hdvgF7FH/cupy/cupy/cuda/compiler.py", line 829, in _compile_with_cache_hip
E           temp_path = tf.name
E         File "/home/kmaeh/.pyenv/versions/3.8.7/lib/python3.8/tempfile.py", line 491, in __exit__
E           result = self.file.__exit__(exc, value, tb)
E       OSError: [Errno 28] No space left on device

/home/kmaeh/.pyenv/versions/3.8.7/lib/python3.8/tempfile.py:491: AssertionError
______________________ TestIndexing.test_compress_no_bool ______________________

self = <cupy_tests.indexing_tests.test_indexing.TestIndexing testMethod=test_compress_no_bool>
xp = <module 'cupy' from '/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.t8hdvgF7FH/cupy/cupy/__init__.py'>
dtype = <class 'numpy.int8'>

    @testing.for_int_dtypes()
    @testing.numpy_cupy_array_equal()
    def test_compress_no_bool(self, xp, dtype):
        a = testing.shaped_arange((3, 4, 5), xp)
        b = testing.shaped_arange((3,), xp, dtype)
>       return xp.compress(b, a, axis=1)

tests/cupy_tests/indexing_tests/test_indexing.py:82: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
cupy/_indexing/indexing.py:101: in compress
    return a.compress(condition, axis, out)
cupy/core/core.pyx:789: in cupy.core.core.ndarray.compress
    cpdef ndarray compress(self, condition, axis=None, out=None):
cupy/core/core.pyx:801: in cupy.core.core.ndarray.compress
    return _indexing._ndarray_compress(self, condition, axis, out)
cupy/core/_routines_indexing.pyx:212: in cupy.core._routines_indexing._ndarray_compress
    res = _ndarray_nonzero(condition)  # synchronize
cupy/core/_routines_indexing.pyx:59: in cupy.core._routines_indexing._ndarray_nonzero
    cdef ndarray dst = _ndarray_argwhere(self)
cupy/core/_routines_indexing.pyx:120: in cupy.core._routines_indexing._ndarray_argwhere
    _nonzero_kernel(nonzero, scan_index, dst)
cupy/core/_kernel.pyx:840: in cupy.core._kernel.ElementwiseKernel.__call__
    kern = self._get_elementwise_kernel(dev_id, arginfos, type_map)
cupy/core/_kernel.pyx:865: in cupy.core._kernel.ElementwiseKernel._get_elementwise_kernel
    kern = _get_elementwise_kernel(
cupy/_util.pyx:59: in cupy._util.memoize.decorator.ret
    result = f(*args, **kwargs)
cupy/core/_kernel.pyx:652: in cupy.core._kernel._get_elementwise_kernel
    return _get_simple_elementwise_kernel(
cupy/core/_kernel.pyx:38: in cupy.core._kernel._get_simple_elementwise_kernel
    cpdef function.Function _get_simple_elementwise_kernel(
cupy/core/_kernel.pyx:61: in cupy.core._kernel._get_simple_elementwise_kernel
    module = compile_with_cache(module_code, options)
cupy/core/core.pyx:2021: in cupy.core.core.compile_with_cache
    return cuda.compile_with_cache(
cupy/cuda/compiler.py:428: in compile_with_cache
    return _compile_with_cache_hip(
cupy/cuda/compiler.py:829: in _compile_with_cache_hip
    temp_path = tf.name
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <tempfile._TemporaryFileWrapper object at 0x7f5011714c10>, exc = None
value = None, tb = None

    def __exit__(self, exc, value, tb):
>       result = self.file.__exit__(exc, value, tb)
E       AssertionError: Only cupy raises error
E       
E       Traceback (most recent call last):
E         File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.t8hdvgF7FH/cupy/cupy/testing/_helper.py", line 47, in _call_func
E           result = impl(self, *args, **kw)
E         File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.t8hdvgF7FH/cupy/tests/cupy_tests/indexing_tests/test_indexing.py", line 82, in test_compress_no_bool
E           return xp.compress(b, a, axis=1)
E         File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.t8hdvgF7FH/cupy/cupy/_indexing/indexing.py", line 101, in compress
E           return a.compress(condition, axis, out)
E         File "cupy/core/core.pyx", line 789, in cupy.core.core.ndarray.compress
E           cpdef ndarray compress(self, condition, axis=None, out=None):
E         File "cupy/core/core.pyx", line 801, in cupy.core.core.ndarray.compress
E           return _indexing._ndarray_compress(self, condition, axis, out)
E         File "cupy/core/_routines_indexing.pyx", line 212, in cupy.core._routines_indexing._ndarray_compress
E           res = _ndarray_nonzero(condition)  # synchronize
E         File "cupy/core/_routines_indexing.pyx", line 59, in cupy.core._routines_indexing._ndarray_nonzero
E           cdef ndarray dst = _ndarray_argwhere(self)
E         File "cupy/core/_routines_indexing.pyx", line 120, in cupy.core._routines_indexing._ndarray_argwhere
E           _nonzero_kernel(nonzero, scan_index, dst)
E         File "cupy/core/_kernel.pyx", line 840, in cupy.core._kernel.ElementwiseKernel.__call__
E           kern = self._get_elementwise_kernel(dev_id, arginfos, type_map)
E         File "cupy/core/_kernel.pyx", line 865, in cupy.core._kernel.ElementwiseKernel._get_elementwise_kernel
E           kern = _get_elementwise_kernel(
E         File "cupy/_util.pyx", line 59, in cupy._util.memoize.decorator.ret
E           result = f(*args, **kwargs)
E         File "cupy/core/_kernel.pyx", line 652, in cupy.core._kernel._get_elementwise_kernel
E           return _get_simple_elementwise_kernel(
E         File "cupy/core/_kernel.pyx", line 38, in cupy.core._kernel._get_simple_elementwise_kernel
E           cpdef function.Function _get_simple_elementwise_kernel(
E         File "cupy/core/_kernel.pyx", line 61, in cupy.core._kernel._get_simple_elementwise_kernel
E           module = compile_with_cache(module_code, options)
E         File "cupy/core/core.pyx", line 2021, in cupy.core.core.compile_with_cache
E           return cuda.compile_with_cache(
E         File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.t8hdvgF7FH/cupy/cupy/cuda/compiler.py", line 428, in compile_with_cache
E           return _compile_with_cache_hip(
E         File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.t8hdvgF7FH/cupy/cupy/cuda/compiler.py", line 829, in _compile_with_cache_hip
E           temp_path = tf.name
E         File "/home/kmaeh/.pyenv/versions/3.8.7/lib/python3.8/tempfile.py", line 491, in __exit__
E           result = self.file.__exit__(exc, value, tb)
E       OSError: [Errno 28] No space left on device

/home/kmaeh/.pyenv/versions/3.8.7/lib/python3.8/tempfile.py:491: AssertionError
----------------------------- Captured stdout call -----------------------------
dtype is <class 'numpy.int8'>
__________________________ TestIndexing.test_extract ___________________________

self = <cupy_tests.indexing_tests.test_indexing.TestIndexing testMethod=test_extract>
xp = <module 'cupy' from '/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.t8hdvgF7FH/cupy/cupy/__init__.py'>

    @testing.numpy_cupy_array_equal()
    def test_extract(self, xp):
        a = testing.shaped_arange((3, 3), xp)
        b = xp.array([[True, False, True],
                      [False, True, False],
                      [True, False, True]])
>       return xp.extract(b, a)

tests/cupy_tests/indexing_tests/test_indexing.py:156: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
cupy/_indexing/indexing.py:160: in extract
    return a.take(condition.nonzero()[0])
cupy/core/core.pyx:770: in cupy.core.core.ndarray.nonzero
    cpdef tuple nonzero(self):
cupy/core/core.pyx:787: in cupy.core.core.ndarray.nonzero
    return _indexing._ndarray_nonzero(self)
cupy/core/_routines_indexing.pyx:59: in cupy.core._routines_indexing._ndarray_nonzero
    cdef ndarray dst = _ndarray_argwhere(self)
cupy/core/_routines_indexing.pyx:120: in cupy.core._routines_indexing._ndarray_argwhere
    _nonzero_kernel(nonzero, scan_index, dst)
cupy/core/_kernel.pyx:840: in cupy.core._kernel.ElementwiseKernel.__call__
    kern = self._get_elementwise_kernel(dev_id, arginfos, type_map)
cupy/core/_kernel.pyx:865: in cupy.core._kernel.ElementwiseKernel._get_elementwise_kernel
    kern = _get_elementwise_kernel(
cupy/_util.pyx:59: in cupy._util.memoize.decorator.ret
    result = f(*args, **kwargs)
cupy/core/_kernel.pyx:652: in cupy.core._kernel._get_elementwise_kernel
    return _get_simple_elementwise_kernel(
cupy/core/_kernel.pyx:38: in cupy.core._kernel._get_simple_elementwise_kernel
    cpdef function.Function _get_simple_elementwise_kernel(
cupy/core/_kernel.pyx:61: in cupy.core._kernel._get_simple_elementwise_kernel
    module = compile_with_cache(module_code, options)
cupy/core/core.pyx:2021: in cupy.core.core.compile_with_cache
    return cuda.compile_with_cache(
cupy/cuda/compiler.py:428: in compile_with_cache
    return _compile_with_cache_hip(
cupy/cuda/compiler.py:829: in _compile_with_cache_hip
    temp_path = tf.name
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <tempfile._TemporaryFileWrapper object at 0x7f5010f20610>, exc = None
value = None, tb = None

    def __exit__(self, exc, value, tb):
>       result = self.file.__exit__(exc, value, tb)
E       AssertionError: Only cupy raises error
E       
E       Traceback (most recent call last):
E         File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.t8hdvgF7FH/cupy/cupy/testing/_helper.py", line 47, in _call_func
E           result = impl(self, *args, **kw)
E         File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.t8hdvgF7FH/cupy/tests/cupy_tests/indexing_tests/test_indexing.py", line 156, in test_extract
E           return xp.extract(b, a)
E         File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.t8hdvgF7FH/cupy/cupy/_indexing/indexing.py", line 160, in extract
E           return a.take(condition.nonzero()[0])
E         File "cupy/core/core.pyx", line 770, in cupy.core.core.ndarray.nonzero
E           cpdef tuple nonzero(self):
E         File "cupy/core/core.pyx", line 787, in cupy.core.core.ndarray.nonzero
E           return _indexing._ndarray_nonzero(self)
E         File "cupy/core/_routines_indexing.pyx", line 59, in cupy.core._routines_indexing._ndarray_nonzero
E           cdef ndarray dst = _ndarray_argwhere(self)
E         File "cupy/core/_routines_indexing.pyx", line 120, in cupy.core._routines_indexing._ndarray_argwhere
E           _nonzero_kernel(nonzero, scan_index, dst)
E         File "cupy/core/_kernel.pyx", line 840, in cupy.core._kernel.ElementwiseKernel.__call__
E           kern = self._get_elementwise_kernel(dev_id, arginfos, type_map)
E         File "cupy/core/_kernel.pyx", line 865, in cupy.core._kernel.ElementwiseKernel._get_elementwise_kernel
E           kern = _get_elementwise_kernel(
E         File "cupy/_util.pyx", line 59, in cupy._util.memoize.decorator.ret
E           result = f(*args, **kwargs)
E         File "cupy/core/_kernel.pyx", line 652, in cupy.core._kernel._get_elementwise_kernel
E           return _get_simple_elementwise_kernel(
E         File "cupy/core/_kernel.pyx", line 38, in cupy.core._kernel._get_simple_elementwise_kernel
E           cpdef function.Function _get_simple_elementwise_kernel(
E         File "cupy/core/_kernel.pyx", line 61, in cupy.core._kernel._get_simple_elementwise_kernel
E           module = compile_with_cache(module_code, options)
E         File "cupy/core/core.pyx", line 2021, in cupy.core.core.compile_with_cache
E           return cuda.compile_with_cache(
E         File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.t8hdvgF7FH/cupy/cupy/cuda/compiler.py", line 428, in compile_with_cache
E           return _compile_with_cache_hip(
E         File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.t8hdvgF7FH/cupy/cupy/cuda/compiler.py", line 829, in _compile_with_cache_hip
E           temp_path = tf.name
E         File "/home/kmaeh/.pyenv/versions/3.8.7/lib/python3.8/tempfile.py", line 491, in __exit__
E           result = self.file.__exit__(exc, value, tb)
E       OSError: [Errno 28] No space left on device

/home/kmaeh/.pyenv/versions/3.8.7/lib/python3.8/tempfile.py:491: AssertionError
______________________ TestIndexing.test_extract_no_bool _______________________

self = <cupy_tests.indexing_tests.test_indexing.TestIndexing testMethod=test_extract_no_bool>
xp = <module 'cupy' from '/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.t8hdvgF7FH/cupy/cupy/__init__.py'>
dtype = <class 'numpy.float64'>

    @testing.for_all_dtypes()
    @testing.numpy_cupy_array_equal()
    def test_extract_no_bool(self, xp, dtype):
        a = testing.shaped_arange((3, 3), xp)
        b = xp.array([[1, 0, 1], [0, 1, 0], [1, 0, 1]], dtype=dtype)
>       return xp.extract(b, a)

tests/cupy_tests/indexing_tests/test_indexing.py:163: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
cupy/_indexing/indexing.py:160: in extract
    return a.take(condition.nonzero()[0])
cupy/core/core.pyx:770: in cupy.core.core.ndarray.nonzero
    cpdef tuple nonzero(self):
cupy/core/core.pyx:787: in cupy.core.core.ndarray.nonzero
    return _indexing._ndarray_nonzero(self)
cupy/core/_routines_indexing.pyx:59: in cupy.core._routines_indexing._ndarray_nonzero
    cdef ndarray dst = _ndarray_argwhere(self)
cupy/core/_routines_indexing.pyx:120: in cupy.core._routines_indexing._ndarray_argwhere
    _nonzero_kernel(nonzero, scan_index, dst)
cupy/core/_kernel.pyx:840: in cupy.core._kernel.ElementwiseKernel.__call__
    kern = self._get_elementwise_kernel(dev_id, arginfos, type_map)
cupy/core/_kernel.pyx:865: in cupy.core._kernel.ElementwiseKernel._get_elementwise_kernel
    kern = _get_elementwise_kernel(
cupy/_util.pyx:59: in cupy._util.memoize.decorator.ret
    result = f(*args, **kwargs)
cupy/core/_kernel.pyx:652: in cupy.core._kernel._get_elementwise_kernel
    return _get_simple_elementwise_kernel(
cupy/core/_kernel.pyx:38: in cupy.core._kernel._get_simple_elementwise_kernel
    cpdef function.Function _get_simple_elementwise_kernel(
cupy/core/_kernel.pyx:61: in cupy.core._kernel._get_simple_elementwise_kernel
    module = compile_with_cache(module_code, options)
cupy/core/core.pyx:2021: in cupy.core.core.compile_with_cache
    return cuda.compile_with_cache(
cupy/cuda/compiler.py:428: in compile_with_cache
    return _compile_with_cache_hip(
cupy/cuda/compiler.py:829: in _compile_with_cache_hip
    temp_path = tf.name
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <tempfile._TemporaryFileWrapper object at 0x7f50108446d0>, exc = None
value = None, tb = None

    def __exit__(self, exc, value, tb):
>       result = self.file.__exit__(exc, value, tb)
E       AssertionError: Only cupy raises error
E       
E       Traceback (most recent call last):
E         File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.t8hdvgF7FH/cupy/cupy/testing/_helper.py", line 47, in _call_func
E           result = impl(self, *args, **kw)
E         File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.t8hdvgF7FH/cupy/tests/cupy_tests/indexing_tests/test_indexing.py", line 163, in test_extract_no_bool
E           return xp.extract(b, a)
E         File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.t8hdvgF7FH/cupy/cupy/_indexing/indexing.py", line 160, in extract
E           return a.take(condition.nonzero()[0])
E         File "cupy/core/core.pyx", line 770, in cupy.core.core.ndarray.nonzero
E           cpdef tuple nonzero(self):
E         File "cupy/core/core.pyx", line 787, in cupy.core.core.ndarray.nonzero
E           return _indexing._ndarray_nonzero(self)
E         File "cupy/core/_routines_indexing.pyx", line 59, in cupy.core._routines_indexing._ndarray_nonzero
E           cdef ndarray dst = _ndarray_argwhere(self)
E         File "cupy/core/_routines_indexing.pyx", line 120, in cupy.core._routines_indexing._ndarray_argwhere
E           _nonzero_kernel(nonzero, scan_index, dst)
E         File "cupy/core/_kernel.pyx", line 840, in cupy.core._kernel.ElementwiseKernel.__call__
E           kern = self._get_elementwise_kernel(dev_id, arginfos, type_map)
E         File "cupy/core/_kernel.pyx", line 865, in cupy.core._kernel.ElementwiseKernel._get_elementwise_kernel
E           kern = _get_elementwise_kernel(
E         File "cupy/_util.pyx", line 59, in cupy._util.memoize.decorator.ret
E           result = f(*args, **kwargs)
E         File "cupy/core/_kernel.pyx", line 652, in cupy.core._kernel._get_elementwise_kernel
E           return _get_simple_elementwise_kernel(
E         File "cupy/core/_kernel.pyx", line 38, in cupy.core._kernel._get_simple_elementwise_kernel
E           cpdef function.Function _get_simple_elementwise_kernel(
E         File "cupy/core/_kernel.pyx", line 61, in cupy.core._kernel._get_simple_elementwise_kernel
E           module = compile_with_cache(module_code, options)
E         File "cupy/core/core.pyx", line 2021, in cupy.core.core.compile_with_cache
E           return cuda.compile_with_cache(
E         File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.t8hdvgF7FH/cupy/cupy/cuda/compiler.py", line 428, in compile_with_cache
E           return _compile_with_cache_hip(
E         File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.t8hdvgF7FH/cupy/cupy/cuda/compiler.py", line 829, in _compile_with_cache_hip
E           temp_path = tf.name
E         File "/home/kmaeh/.pyenv/versions/3.8.7/lib/python3.8/tempfile.py", line 491, in __exit__
E           result = self.file.__exit__(exc, value, tb)
E       OSError: [Errno 28] No space left on device

/home/kmaeh/.pyenv/versions/3.8.7/lib/python3.8/tempfile.py:491: AssertionError
----------------------------- Captured stdout call -----------------------------
dtype is <class 'numpy.float64'>
___________________ TestIndexing.test_extract_shape_mismatch ___________________

self = <cupy_tests.indexing_tests.test_indexing.TestIndexing testMethod=test_extract_shape_mismatch>
xp = <module 'cupy' from '/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.t8hdvgF7FH/cupy/cupy/__init__.py'>

    @testing.numpy_cupy_array_equal()
    def test_extract_shape_mismatch(self, xp):
        a = testing.shaped_arange((2, 3), xp)
        b = xp.array([[True, False],
                      [True, False],
                      [True, False]])
>       return xp.extract(b, a)

tests/cupy_tests/indexing_tests/test_indexing.py:171: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
cupy/_indexing/indexing.py:160: in extract
    return a.take(condition.nonzero()[0])
cupy/core/core.pyx:770: in cupy.core.core.ndarray.nonzero
    cpdef tuple nonzero(self):
cupy/core/core.pyx:787: in cupy.core.core.ndarray.nonzero
    return _indexing._ndarray_nonzero(self)
cupy/core/_routines_indexing.pyx:59: in cupy.core._routines_indexing._ndarray_nonzero
    cdef ndarray dst = _ndarray_argwhere(self)
cupy/core/_routines_indexing.pyx:120: in cupy.core._routines_indexing._ndarray_argwhere
    _nonzero_kernel(nonzero, scan_index, dst)
cupy/core/_kernel.pyx:840: in cupy.core._kernel.ElementwiseKernel.__call__
    kern = self._get_elementwise_kernel(dev_id, arginfos, type_map)
cupy/core/_kernel.pyx:865: in cupy.core._kernel.ElementwiseKernel._get_elementwise_kernel
    kern = _get_elementwise_kernel(
cupy/_util.pyx:59: in cupy._util.memoize.decorator.ret
    result = f(*args, **kwargs)
cupy/core/_kernel.pyx:652: in cupy.core._kernel._get_elementwise_kernel
    return _get_simple_elementwise_kernel(
cupy/core/_kernel.pyx:38: in cupy.core._kernel._get_simple_elementwise_kernel
    cpdef function.Function _get_simple_elementwise_kernel(
cupy/core/_kernel.pyx:61: in cupy.core._kernel._get_simple_elementwise_kernel
    module = compile_with_cache(module_code, options)
cupy/core/core.pyx:2021: in cupy.core.core.compile_with_cache
    return cuda.compile_with_cache(
cupy/cuda/compiler.py:428: in compile_with_cache
    return _compile_with_cache_hip(
cupy/cuda/compiler.py:829: in _compile_with_cache_hip
    temp_path = tf.name
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <tempfile._TemporaryFileWrapper object at 0x7f5011724760>, exc = None
value = None, tb = None

    def __exit__(self, exc, value, tb):
>       result = self.file.__exit__(exc, value, tb)
E       AssertionError: Only cupy raises error
E       
E       Traceback (most recent call last):
E         File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.t8hdvgF7FH/cupy/cupy/testing/_helper.py", line 47, in _call_func
E           result = impl(self, *args, **kw)
E         File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.t8hdvgF7FH/cupy/tests/cupy_tests/indexing_tests/test_indexing.py", line 171, in test_extract_shape_mismatch
E           return xp.extract(b, a)
E         File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.t8hdvgF7FH/cupy/cupy/_indexing/indexing.py", line 160, in extract
E           return a.take(condition.nonzero()[0])
E         File "cupy/core/core.pyx", line 770, in cupy.core.core.ndarray.nonzero
E           cpdef tuple nonzero(self):
E         File "cupy/core/core.pyx", line 787, in cupy.core.core.ndarray.nonzero
E           return _indexing._ndarray_nonzero(self)
E         File "cupy/core/_routines_indexing.pyx", line 59, in cupy.core._routines_indexing._ndarray_nonzero
E           cdef ndarray dst = _ndarray_argwhere(self)
E         File "cupy/core/_routines_indexing.pyx", line 120, in cupy.core._routines_indexing._ndarray_argwhere
E           _nonzero_kernel(nonzero, scan_index, dst)
E         File "cupy/core/_kernel.pyx", line 840, in cupy.core._kernel.ElementwiseKernel.__call__
E           kern = self._get_elementwise_kernel(dev_id, arginfos, type_map)
E         File "cupy/core/_kernel.pyx", line 865, in cupy.core._kernel.ElementwiseKernel._get_elementwise_kernel
E           kern = _get_elementwise_kernel(
E         File "cupy/_util.pyx", line 59, in cupy._util.memoize.decorator.ret
E           result = f(*args, **kwargs)
E         File "cupy/core/_kernel.pyx", line 652, in cupy.core._kernel._get_elementwise_kernel
E           return _get_simple_elementwise_kernel(
E         File "cupy/core/_kernel.pyx", line 38, in cupy.core._kernel._get_simple_elementwise_kernel
E           cpdef function.Function _get_simple_elementwise_kernel(
E         File "cupy/core/_kernel.pyx", line 61, in cupy.core._kernel._get_simple_elementwise_kernel
E           module = compile_with_cache(module_code, options)
E         File "cupy/core/core.pyx", line 2021, in cupy.core.core.compile_with_cache
E           return cuda.compile_with_cache(
E         File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.t8hdvgF7FH/cupy/cupy/cuda/compiler.py", line 428, in compile_with_cache
E           return _compile_with_cache_hip(
E         File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.t8hdvgF7FH/cupy/cupy/cuda/compiler.py", line 829, in _compile_with_cache_hip
E           temp_path = tf.name
E         File "/home/kmaeh/.pyenv/versions/3.8.7/lib/python3.8/tempfile.py", line 491, in __exit__
E           result = self.file.__exit__(exc, value, tb)
E       OSError: [Errno 28] No space left on device

/home/kmaeh/.pyenv/versions/3.8.7/lib/python3.8/tempfile.py:491: AssertionError
___________________ TestIndexing.test_extract_size_mismatch ____________________

self = <cupy_tests.indexing_tests.test_indexing.TestIndexing testMethod=test_extract_size_mismatch>
xp = <module 'cupy' from '/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.t8hdvgF7FH/cupy/cupy/__init__.py'>

    @testing.numpy_cupy_array_equal()
    def test_extract_size_mismatch(self, xp):
        a = testing.shaped_arange((3, 3), xp)
        b = xp.array([[True, False, True],
                      [False, True, False]])
>       return xp.extract(b, a)

tests/cupy_tests/indexing_tests/test_indexing.py:178: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
cupy/_indexing/indexing.py:160: in extract
    return a.take(condition.nonzero()[0])
cupy/core/core.pyx:770: in cupy.core.core.ndarray.nonzero
    cpdef tuple nonzero(self):
cupy/core/core.pyx:787: in cupy.core.core.ndarray.nonzero
    return _indexing._ndarray_nonzero(self)
cupy/core/_routines_indexing.pyx:59: in cupy.core._routines_indexing._ndarray_nonzero
    cdef ndarray dst = _ndarray_argwhere(self)
cupy/core/_routines_indexing.pyx:120: in cupy.core._routines_indexing._ndarray_argwhere
    _nonzero_kernel(nonzero, scan_index, dst)
cupy/core/_kernel.pyx:840: in cupy.core._kernel.ElementwiseKernel.__call__
    kern = self._get_elementwise_kernel(dev_id, arginfos, type_map)
cupy/core/_kernel.pyx:865: in cupy.core._kernel.ElementwiseKernel._get_elementwise_kernel
    kern = _get_elementwise_kernel(
cupy/_util.pyx:59: in cupy._util.memoize.decorator.ret
    result = f(*args, **kwargs)
cupy/core/_kernel.pyx:652: in cupy.core._kernel._get_elementwise_kernel
    return _get_simple_elementwise_kernel(
cupy/core/_kernel.pyx:38: in cupy.core._kernel._get_simple_elementwise_kernel
    cpdef function.Function _get_simple_elementwise_kernel(
cupy/core/_kernel.pyx:61: in cupy.core._kernel._get_simple_elementwise_kernel
    module = compile_with_cache(module_code, options)
cupy/core/core.pyx:2021: in cupy.core.core.compile_with_cache
    return cuda.compile_with_cache(
cupy/cuda/compiler.py:428: in compile_with_cache
    return _compile_with_cache_hip(
cupy/cuda/compiler.py:829: in _compile_with_cache_hip
    temp_path = tf.name
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <tempfile._TemporaryFileWrapper object at 0x7f5010f7d400>, exc = None
value = None, tb = None

    def __exit__(self, exc, value, tb):
>       result = self.file.__exit__(exc, value, tb)
E       AssertionError: Only cupy raises error
E       
E       Traceback (most recent call last):
E         File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.t8hdvgF7FH/cupy/cupy/testing/_helper.py", line 47, in _call_func
E           result = impl(self, *args, **kw)
E         File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.t8hdvgF7FH/cupy/tests/cupy_tests/indexing_tests/test_indexing.py", line 178, in test_extract_size_mismatch
E           return xp.extract(b, a)
E         File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.t8hdvgF7FH/cupy/cupy/_indexing/indexing.py", line 160, in extract
E           return a.take(condition.nonzero()[0])
E         File "cupy/core/core.pyx", line 770, in cupy.core.core.ndarray.nonzero
E           cpdef tuple nonzero(self):
E         File "cupy/core/core.pyx", line 787, in cupy.core.core.ndarray.nonzero
E           return _indexing._ndarray_nonzero(self)
E         File "cupy/core/_routines_indexing.pyx", line 59, in cupy.core._routines_indexing._ndarray_nonzero
E           cdef ndarray dst = _ndarray_argwhere(self)
E         File "cupy/core/_routines_indexing.pyx", line 120, in cupy.core._routines_indexing._ndarray_argwhere
E           _nonzero_kernel(nonzero, scan_index, dst)
E         File "cupy/core/_kernel.pyx", line 840, in cupy.core._kernel.ElementwiseKernel.__call__
E           kern = self._get_elementwise_kernel(dev_id, arginfos, type_map)
E         File "cupy/core/_kernel.pyx", line 865, in cupy.core._kernel.ElementwiseKernel._get_elementwise_kernel
E           kern = _get_elementwise_kernel(
E         File "cupy/_util.pyx", line 59, in cupy._util.memoize.decorator.ret
E           result = f(*args, **kwargs)
E         File "cupy/core/_kernel.pyx", line 652, in cupy.core._kernel._get_elementwise_kernel
E           return _get_simple_elementwise_kernel(
E         File "cupy/core/_kernel.pyx", line 38, in cupy.core._kernel._get_simple_elementwise_kernel
E           cpdef function.Function _get_simple_elementwise_kernel(
E         File "cupy/core/_kernel.pyx", line 61, in cupy.core._kernel._get_simple_elementwise_kernel
E           module = compile_with_cache(module_code, options)
E         File "cupy/core/core.pyx", line 2021, in cupy.core.core.compile_with_cache
E           return cuda.compile_with_cache(
E         File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.t8hdvgF7FH/cupy/cupy/cuda/compiler.py", line 428, in compile_with_cache
E           return _compile_with_cache_hip(
E         File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.t8hdvgF7FH/cupy/cupy/cuda/compiler.py", line 829, in _compile_with_cache_hip
E           temp_path = tf.name
E         File "/home/kmaeh/.pyenv/versions/3.8.7/lib/python3.8/tempfile.py", line 491, in __exit__
E           result = self.file.__exit__(exc, value, tb)
E       OSError: [Errno 28] No space left on device

/home/kmaeh/.pyenv/versions/3.8.7/lib/python3.8/tempfile.py:491: AssertionError
___________________ TestIndexing.test_extract_size_mismatch2 ___________________

self = <cupy_tests.indexing_tests.test_indexing.TestIndexing testMethod=test_extract_size_mismatch2>
xp = <module 'cupy' from '/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.t8hdvgF7FH/cupy/cupy/__init__.py'>

    @testing.numpy_cupy_array_equal()
    def test_extract_size_mismatch2(self, xp):
        a = testing.shaped_arange((3, 3), xp)
        b = xp.array([[True, False, True, False],
                      [False, True, False, True]])
>       return xp.extract(b, a)

tests/cupy_tests/indexing_tests/test_indexing.py:185: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
cupy/_indexing/indexing.py:160: in extract
    return a.take(condition.nonzero()[0])
cupy/core/core.pyx:770: in cupy.core.core.ndarray.nonzero
    cpdef tuple nonzero(self):
cupy/core/core.pyx:787: in cupy.core.core.ndarray.nonzero
    return _indexing._ndarray_nonzero(self)
cupy/core/_routines_indexing.pyx:59: in cupy.core._routines_indexing._ndarray_nonzero
    cdef ndarray dst = _ndarray_argwhere(self)
cupy/core/_routines_indexing.pyx:120: in cupy.core._routines_indexing._ndarray_argwhere
    _nonzero_kernel(nonzero, scan_index, dst)
cupy/core/_kernel.pyx:840: in cupy.core._kernel.ElementwiseKernel.__call__
    kern = self._get_elementwise_kernel(dev_id, arginfos, type_map)
cupy/core/_kernel.pyx:865: in cupy.core._kernel.ElementwiseKernel._get_elementwise_kernel
    kern = _get_elementwise_kernel(
cupy/_util.pyx:59: in cupy._util.memoize.decorator.ret
    result = f(*args, **kwargs)
cupy/core/_kernel.pyx:652: in cupy.core._kernel._get_elementwise_kernel
    return _get_simple_elementwise_kernel(
cupy/core/_kernel.pyx:38: in cupy.core._kernel._get_simple_elementwise_kernel
    cpdef function.Function _get_simple_elementwise_kernel(
cupy/core/_kernel.pyx:61: in cupy.core._kernel._get_simple_elementwise_kernel
    module = compile_with_cache(module_code, options)
cupy/core/core.pyx:2021: in cupy.core.core.compile_with_cache
    return cuda.compile_with_cache(
cupy/cuda/compiler.py:428: in compile_with_cache
    return _compile_with_cache_hip(
cupy/cuda/compiler.py:829: in _compile_with_cache_hip
    temp_path = tf.name
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <tempfile._TemporaryFileWrapper object at 0x7f501099d7c0>, exc = None
value = None, tb = None

    def __exit__(self, exc, value, tb):
>       result = self.file.__exit__(exc, value, tb)
E       AssertionError: Only cupy raises error
E       
E       Traceback (most recent call last):
E         File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.t8hdvgF7FH/cupy/cupy/testing/_helper.py", line 47, in _call_func
E           result = impl(self, *args, **kw)
E         File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.t8hdvgF7FH/cupy/tests/cupy_tests/indexing_tests/test_indexing.py", line 185, in test_extract_size_mismatch2
E           return xp.extract(b, a)
E         File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.t8hdvgF7FH/cupy/cupy/_indexing/indexing.py", line 160, in extract
E           return a.take(condition.nonzero()[0])
E         File "cupy/core/core.pyx", line 770, in cupy.core.core.ndarray.nonzero
E           cpdef tuple nonzero(self):
E         File "cupy/core/core.pyx", line 787, in cupy.core.core.ndarray.nonzero
E           return _indexing._ndarray_nonzero(self)
E         File "cupy/core/_routines_indexing.pyx", line 59, in cupy.core._routines_indexing._ndarray_nonzero
E           cdef ndarray dst = _ndarray_argwhere(self)
E         File "cupy/core/_routines_indexing.pyx", line 120, in cupy.core._routines_indexing._ndarray_argwhere
E           _nonzero_kernel(nonzero, scan_index, dst)
E         File "cupy/core/_kernel.pyx", line 840, in cupy.core._kernel.ElementwiseKernel.__call__
E           kern = self._get_elementwise_kernel(dev_id, arginfos, type_map)
E         File "cupy/core/_kernel.pyx", line 865, in cupy.core._kernel.ElementwiseKernel._get_elementwise_kernel
E           kern = _get_elementwise_kernel(
E         File "cupy/_util.pyx", line 59, in cupy._util.memoize.decorator.ret
E           result = f(*args, **kwargs)
E         File "cupy/core/_kernel.pyx", line 652, in cupy.core._kernel._get_elementwise_kernel
E           return _get_simple_elementwise_kernel(
E         File "cupy/core/_kernel.pyx", line 38, in cupy.core._kernel._get_simple_elementwise_kernel
E           cpdef function.Function _get_simple_elementwise_kernel(
E         File "cupy/core/_kernel.pyx", line 61, in cupy.core._kernel._get_simple_elementwise_kernel
E           module = compile_with_cache(module_code, options)
E         File "cupy/core/core.pyx", line 2021, in cupy.core.core.compile_with_cache
E           return cuda.compile_with_cache(
E         File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.t8hdvgF7FH/cupy/cupy/cuda/compiler.py", line 428, in compile_with_cache
E           return _compile_with_cache_hip(
E         File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.t8hdvgF7FH/cupy/cupy/cuda/compiler.py", line 829, in _compile_with_cache_hip
E           temp_path = tf.name
E         File "/home/kmaeh/.pyenv/versions/3.8.7/lib/python3.8/tempfile.py", line 491, in __exit__
E           result = self.file.__exit__(exc, value, tb)
E       OSError: [Errno 28] No space left on device

/home/kmaeh/.pyenv/versions/3.8.7/lib/python3.8/tempfile.py:491: AssertionError
____________________________ TestChoose.test_choose ____________________________

self = <cupy_tests.indexing_tests.test_indexing.TestChoose testMethod=test_choose>
xp = <module 'cupy' from '/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.t8hdvgF7FH/cupy/cupy/__init__.py'>
dtype = <class 'numpy.float64'>

    @testing.for_all_dtypes()
    @testing.numpy_cupy_array_equal()
    def test_choose(self, xp, dtype):
        a = xp.array([0, 2, 1, 2])
        c = testing.shaped_arange((3, 4), xp, dtype)
>       return a.choose(c)

tests/cupy_tests/indexing_tests/test_indexing.py:202: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
cupy/core/core.pyx:688: in cupy.core.core.ndarray.choose
    cpdef choose(self, choices, out=None, mode='raise'):
cupy/core/core.pyx:690: in cupy.core.core.ndarray.choose
    return _indexing._ndarray_choose(self, choices, out, mode)
cupy/core/_routines_indexing.pyx:189: in cupy.core._routines_indexing._ndarray_choose
    _choose_kernel(ba[0], bcs, n_channel, out)
cupy/core/_kernel.pyx:840: in cupy.core._kernel.ElementwiseKernel.__call__
    kern = self._get_elementwise_kernel(dev_id, arginfos, type_map)
cupy/core/_kernel.pyx:865: in cupy.core._kernel.ElementwiseKernel._get_elementwise_kernel
    kern = _get_elementwise_kernel(
cupy/_util.pyx:59: in cupy._util.memoize.decorator.ret
    result = f(*args, **kwargs)
cupy/core/_kernel.pyx:652: in cupy.core._kernel._get_elementwise_kernel
    return _get_simple_elementwise_kernel(
cupy/core/_kernel.pyx:38: in cupy.core._kernel._get_simple_elementwise_kernel
    cpdef function.Function _get_simple_elementwise_kernel(
cupy/core/_kernel.pyx:61: in cupy.core._kernel._get_simple_elementwise_kernel
    module = compile_with_cache(module_code, options)
cupy/core/core.pyx:2021: in cupy.core.core.compile_with_cache
    return cuda.compile_with_cache(
cupy/cuda/compiler.py:428: in compile_with_cache
    return _compile_with_cache_hip(
cupy/cuda/compiler.py:829: in _compile_with_cache_hip
    temp_path = tf.name
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <tempfile._TemporaryFileWrapper object at 0x7f577c1526d0>, exc = None
value = None, tb = None

    def __exit__(self, exc, value, tb):
>       result = self.file.__exit__(exc, value, tb)
E       AssertionError: Only cupy raises error
E       
E       Traceback (most recent call last):
E         File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.t8hdvgF7FH/cupy/cupy/testing/_helper.py", line 47, in _call_func
E           result = impl(self, *args, **kw)
E         File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.t8hdvgF7FH/cupy/tests/cupy_tests/indexing_tests/test_indexing.py", line 202, in test_choose
E           return a.choose(c)
E         File "cupy/core/core.pyx", line 688, in cupy.core.core.ndarray.choose
E           cpdef choose(self, choices, out=None, mode='raise'):
E         File "cupy/core/core.pyx", line 690, in cupy.core.core.ndarray.choose
E           return _indexing._ndarray_choose(self, choices, out, mode)
E         File "cupy/core/_routines_indexing.pyx", line 189, in cupy.core._routines_indexing._ndarray_choose
E           _choose_kernel(ba[0], bcs, n_channel, out)
E         File "cupy/core/_kernel.pyx", line 840, in cupy.core._kernel.ElementwiseKernel.__call__
E           kern = self._get_elementwise_kernel(dev_id, arginfos, type_map)
E         File "cupy/core/_kernel.pyx", line 865, in cupy.core._kernel.ElementwiseKernel._get_elementwise_kernel
E           kern = _get_elementwise_kernel(
E         File "cupy/_util.pyx", line 59, in cupy._util.memoize.decorator.ret
E           result = f(*args, **kwargs)
E         File "cupy/core/_kernel.pyx", line 652, in cupy.core._kernel._get_elementwise_kernel
E           return _get_simple_elementwise_kernel(
E         File "cupy/core/_kernel.pyx", line 38, in cupy.core._kernel._get_simple_elementwise_kernel
E           cpdef function.Function _get_simple_elementwise_kernel(
E         File "cupy/core/_kernel.pyx", line 61, in cupy.core._kernel._get_simple_elementwise_kernel
E           module = compile_with_cache(module_code, options)
E         File "cupy/core/core.pyx", line 2021, in cupy.core.core.compile_with_cache
E           return cuda.compile_with_cache(
E         File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.t8hdvgF7FH/cupy/cupy/cuda/compiler.py", line 428, in compile_with_cache
E           return _compile_with_cache_hip(
E         File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.t8hdvgF7FH/cupy/cupy/cuda/compiler.py", line 829, in _compile_with_cache_hip
E           temp_path = tf.name
E         File "/home/kmaeh/.pyenv/versions/3.8.7/lib/python3.8/tempfile.py", line 491, in __exit__
E           result = self.file.__exit__(exc, value, tb)
E       OSError: [Errno 28] No space left on device

/home/kmaeh/.pyenv/versions/3.8.7/lib/python3.8/tempfile.py:491: AssertionError
----------------------------- Captured stdout call -----------------------------
dtype is <class 'numpy.float64'>
_______________________ TestChoose.test_choose_broadcast _______________________

self = <cupy_tests.indexing_tests.test_indexing.TestChoose testMethod=test_choose_broadcast>
xp = <module 'cupy' from '/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.t8hdvgF7FH/cupy/cupy/__init__.py'>
dtype = <class 'numpy.float64'>

    @testing.for_all_dtypes()
    @testing.numpy_cupy_array_equal()
    def test_choose_broadcast(self, xp, dtype):
        a = xp.array([[1, 0, 1], [0, 1, 0], [1, 0, 1]])
        c = xp.array([-10, 10], dtype=dtype)
>       return a.choose(c)

tests/cupy_tests/indexing_tests/test_indexing.py:209: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
cupy/core/core.pyx:688: in cupy.core.core.ndarray.choose
    cpdef choose(self, choices, out=None, mode='raise'):
cupy/core/core.pyx:690: in cupy.core.core.ndarray.choose
    return _indexing._ndarray_choose(self, choices, out, mode)
cupy/core/_routines_indexing.pyx:189: in cupy.core._routines_indexing._ndarray_choose
    _choose_kernel(ba[0], bcs, n_channel, out)
cupy/core/_kernel.pyx:840: in cupy.core._kernel.ElementwiseKernel.__call__
    kern = self._get_elementwise_kernel(dev_id, arginfos, type_map)
cupy/core/_kernel.pyx:865: in cupy.core._kernel.ElementwiseKernel._get_elementwise_kernel
    kern = _get_elementwise_kernel(
cupy/_util.pyx:59: in cupy._util.memoize.decorator.ret
    result = f(*args, **kwargs)
cupy/core/_kernel.pyx:652: in cupy.core._kernel._get_elementwise_kernel
    return _get_simple_elementwise_kernel(
cupy/core/_kernel.pyx:38: in cupy.core._kernel._get_simple_elementwise_kernel
    cpdef function.Function _get_simple_elementwise_kernel(
cupy/core/_kernel.pyx:61: in cupy.core._kernel._get_simple_elementwise_kernel
    module = compile_with_cache(module_code, options)
cupy/core/core.pyx:2021: in cupy.core.core.compile_with_cache
    return cuda.compile_with_cache(
cupy/cuda/compiler.py:428: in compile_with_cache
    return _compile_with_cache_hip(
cupy/cuda/compiler.py:829: in _compile_with_cache_hip
    temp_path = tf.name
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <tempfile._TemporaryFileWrapper object at 0x7f5010f38610>, exc = None
value = None, tb = None

    def __exit__(self, exc, value, tb):
>       result = self.file.__exit__(exc, value, tb)
E       AssertionError: Only cupy raises error
E       
E       Traceback (most recent call last):
E         File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.t8hdvgF7FH/cupy/cupy/testing/_helper.py", line 47, in _call_func
E           result = impl(self, *args, **kw)
E         File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.t8hdvgF7FH/cupy/tests/cupy_tests/indexing_tests/test_indexing.py", line 209, in test_choose_broadcast
E           return a.choose(c)
E         File "cupy/core/core.pyx", line 688, in cupy.core.core.ndarray.choose
E           cpdef choose(self, choices, out=None, mode='raise'):
E         File "cupy/core/core.pyx", line 690, in cupy.core.core.ndarray.choose
E           return _indexing._ndarray_choose(self, choices, out, mode)
E         File "cupy/core/_routines_indexing.pyx", line 189, in cupy.core._routines_indexing._ndarray_choose
E           _choose_kernel(ba[0], bcs, n_channel, out)
E         File "cupy/core/_kernel.pyx", line 840, in cupy.core._kernel.ElementwiseKernel.__call__
E           kern = self._get_elementwise_kernel(dev_id, arginfos, type_map)
E         File "cupy/core/_kernel.pyx", line 865, in cupy.core._kernel.ElementwiseKernel._get_elementwise_kernel
E           kern = _get_elementwise_kernel(
E         File "cupy/_util.pyx", line 59, in cupy._util.memoize.decorator.ret
E           result = f(*args, **kwargs)
E         File "cupy/core/_kernel.pyx", line 652, in cupy.core._kernel._get_elementwise_kernel
E           return _get_simple_elementwise_kernel(
E         File "cupy/core/_kernel.pyx", line 38, in cupy.core._kernel._get_simple_elementwise_kernel
E           cpdef function.Function _get_simple_elementwise_kernel(
E         File "cupy/core/_kernel.pyx", line 61, in cupy.core._kernel._get_simple_elementwise_kernel
E           module = compile_with_cache(module_code, options)
E         File "cupy/core/core.pyx", line 2021, in cupy.core.core.compile_with_cache
E           return cuda.compile_with_cache(
E         File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.t8hdvgF7FH/cupy/cupy/cuda/compiler.py", line 428, in compile_with_cache
E           return _compile_with_cache_hip(
E         File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.t8hdvgF7FH/cupy/cupy/cuda/compiler.py", line 829, in _compile_with_cache_hip
E           temp_path = tf.name
E         File "/home/kmaeh/.pyenv/versions/3.8.7/lib/python3.8/tempfile.py", line 491, in __exit__
E           result = self.file.__exit__(exc, value, tb)
E       OSError: [Errno 28] No space left on device

/home/kmaeh/.pyenv/versions/3.8.7/lib/python3.8/tempfile.py:491: AssertionError
----------------------------- Captured stdout call -----------------------------
dtype is <class 'numpy.float64'>
______________________ TestChoose.test_choose_broadcast2 _______________________

self = <cupy_tests.indexing_tests.test_indexing.TestChoose testMethod=test_choose_broadcast2>
xp = <module 'cupy' from '/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.t8hdvgF7FH/cupy/cupy/__init__.py'>
dtype = <class 'numpy.float64'>

    @testing.for_all_dtypes()
    @testing.numpy_cupy_array_equal()
    def test_choose_broadcast2(self, xp, dtype):
        a = xp.array([0, 1])
        c = testing.shaped_arange((3, 5, 2), xp, dtype)
>       return a.choose(c)

tests/cupy_tests/indexing_tests/test_indexing.py:216: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
cupy/core/core.pyx:688: in cupy.core.core.ndarray.choose
    cpdef choose(self, choices, out=None, mode='raise'):
cupy/core/core.pyx:690: in cupy.core.core.ndarray.choose
    return _indexing._ndarray_choose(self, choices, out, mode)
cupy/core/_routines_indexing.pyx:189: in cupy.core._routines_indexing._ndarray_choose
    _choose_kernel(ba[0], bcs, n_channel, out)
cupy/core/_kernel.pyx:840: in cupy.core._kernel.ElementwiseKernel.__call__
    kern = self._get_elementwise_kernel(dev_id, arginfos, type_map)
cupy/core/_kernel.pyx:865: in cupy.core._kernel.ElementwiseKernel._get_elementwise_kernel
    kern = _get_elementwise_kernel(
cupy/_util.pyx:59: in cupy._util.memoize.decorator.ret
    result = f(*args, **kwargs)
cupy/core/_kernel.pyx:652: in cupy.core._kernel._get_elementwise_kernel
    return _get_simple_elementwise_kernel(
cupy/core/_kernel.pyx:38: in cupy.core._kernel._get_simple_elementwise_kernel
    cpdef function.Function _get_simple_elementwise_kernel(
cupy/core/_kernel.pyx:61: in cupy.core._kernel._get_simple_elementwise_kernel
    module = compile_with_cache(module_code, options)
cupy/core/core.pyx:2021: in cupy.core.core.compile_with_cache
    return cuda.compile_with_cache(
cupy/cuda/compiler.py:428: in compile_with_cache
    return _compile_with_cache_hip(
cupy/cuda/compiler.py:829: in _compile_with_cache_hip
    temp_path = tf.name
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <tempfile._TemporaryFileWrapper object at 0x7f50109eb550>, exc = None
value = None, tb = None

    def __exit__(self, exc, value, tb):
>       result = self.file.__exit__(exc, value, tb)
E       AssertionError: Only cupy raises error
E       
E       Traceback (most recent call last):
E         File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.t8hdvgF7FH/cupy/cupy/testing/_helper.py", line 47, in _call_func
E           result = impl(self, *args, **kw)
E         File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.t8hdvgF7FH/cupy/tests/cupy_tests/indexing_tests/test_indexing.py", line 216, in test_choose_broadcast2
E           return a.choose(c)
E         File "cupy/core/core.pyx", line 688, in cupy.core.core.ndarray.choose
E           cpdef choose(self, choices, out=None, mode='raise'):
E         File "cupy/core/core.pyx", line 690, in cupy.core.core.ndarray.choose
E           return _indexing._ndarray_choose(self, choices, out, mode)
E         File "cupy/core/_routines_indexing.pyx", line 189, in cupy.core._routines_indexing._ndarray_choose
E           _choose_kernel(ba[0], bcs, n_channel, out)
E         File "cupy/core/_kernel.pyx", line 840, in cupy.core._kernel.ElementwiseKernel.__call__
E           kern = self._get_elementwise_kernel(dev_id, arginfos, type_map)
E         File "cupy/core/_kernel.pyx", line 865, in cupy.core._kernel.ElementwiseKernel._get_elementwise_kernel
E           kern = _get_elementwise_kernel(
E         File "cupy/_util.pyx", line 59, in cupy._util.memoize.decorator.ret
E           result = f(*args, **kwargs)
E         File "cupy/core/_kernel.pyx", line 652, in cupy.core._kernel._get_elementwise_kernel
E           return _get_simple_elementwise_kernel(
E         File "cupy/core/_kernel.pyx", line 38, in cupy.core._kernel._get_simple_elementwise_kernel
E           cpdef function.Function _get_simple_elementwise_kernel(
E         File "cupy/core/_kernel.pyx", line 61, in cupy.core._kernel._get_simple_elementwise_kernel
E           module = compile_with_cache(module_code, options)
E         File "cupy/core/core.pyx", line 2021, in cupy.core.core.compile_with_cache
E           return cuda.compile_with_cache(
E         File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.t8hdvgF7FH/cupy/cupy/cuda/compiler.py", line 428, in compile_with_cache
E           return _compile_with_cache_hip(
E         File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.t8hdvgF7FH/cupy/cupy/cuda/compiler.py", line 829, in _compile_with_cache_hip
E           temp_path = tf.name
E         File "/home/kmaeh/.pyenv/versions/3.8.7/lib/python3.8/tempfile.py", line 491, in __exit__
E           result = self.file.__exit__(exc, value, tb)
E       OSError: [Errno 28] No space left on device

/home/kmaeh/.pyenv/versions/3.8.7/lib/python3.8/tempfile.py:491: AssertionError
----------------------------- Captured stdout call -----------------------------
dtype is <class 'numpy.float64'>
_________________________ TestChoose.test_choose_clip __________________________

self = <cupy_tests.indexing_tests.test_indexing.TestChoose testMethod=test_choose_clip>
xp = <module 'cupy' from '/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.t8hdvgF7FH/cupy/cupy/__init__.py'>
dtype = <class 'numpy.float64'>

    @testing.for_all_dtypes()
    @testing.numpy_cupy_array_equal()
    def test_choose_clip(self, xp, dtype):
        a = xp.array([0, 3, -1, 5])
        c = testing.shaped_arange((3, 4), xp, dtype)
>       return a.choose(c, mode='clip')

tests/cupy_tests/indexing_tests/test_indexing.py:230: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
cupy/core/core.pyx:688: in cupy.core.core.ndarray.choose
    cpdef choose(self, choices, out=None, mode='raise'):
cupy/core/core.pyx:690: in cupy.core.core.ndarray.choose
    return _indexing._ndarray_choose(self, choices, out, mode)
cupy/core/_routines_indexing.pyx:194: in cupy.core._routines_indexing._ndarray_choose
    _choose_clip_kernel(ba[0], bcs, n_channel, n, out)
cupy/core/_kernel.pyx:840: in cupy.core._kernel.ElementwiseKernel.__call__
    kern = self._get_elementwise_kernel(dev_id, arginfos, type_map)
cupy/core/_kernel.pyx:865: in cupy.core._kernel.ElementwiseKernel._get_elementwise_kernel
    kern = _get_elementwise_kernel(
cupy/_util.pyx:59: in cupy._util.memoize.decorator.ret
    result = f(*args, **kwargs)
cupy/core/_kernel.pyx:652: in cupy.core._kernel._get_elementwise_kernel
    return _get_simple_elementwise_kernel(
cupy/core/_kernel.pyx:38: in cupy.core._kernel._get_simple_elementwise_kernel
    cpdef function.Function _get_simple_elementwise_kernel(
cupy/core/_kernel.pyx:61: in cupy.core._kernel._get_simple_elementwise_kernel
    module = compile_with_cache(module_code, options)
cupy/core/core.pyx:2021: in cupy.core.core.compile_with_cache
    return cuda.compile_with_cache(
cupy/cuda/compiler.py:428: in compile_with_cache
    return _compile_with_cache_hip(
cupy/cuda/compiler.py:829: in _compile_with_cache_hip
    temp_path = tf.name
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <tempfile._TemporaryFileWrapper object at 0x7f503bdd6790>, exc = None
value = None, tb = None

    def __exit__(self, exc, value, tb):
>       result = self.file.__exit__(exc, value, tb)
E       AssertionError: Only cupy raises error
E       
E       Traceback (most recent call last):
E         File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.t8hdvgF7FH/cupy/cupy/testing/_helper.py", line 47, in _call_func
E           result = impl(self, *args, **kw)
E         File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.t8hdvgF7FH/cupy/tests/cupy_tests/indexing_tests/test_indexing.py", line 230, in test_choose_clip
E           return a.choose(c, mode='clip')
E         File "cupy/core/core.pyx", line 688, in cupy.core.core.ndarray.choose
E           cpdef choose(self, choices, out=None, mode='raise'):
E         File "cupy/core/core.pyx", line 690, in cupy.core.core.ndarray.choose
E           return _indexing._ndarray_choose(self, choices, out, mode)
E         File "cupy/core/_routines_indexing.pyx", line 194, in cupy.core._routines_indexing._ndarray_choose
E           _choose_clip_kernel(ba[0], bcs, n_channel, n, out)
E         File "cupy/core/_kernel.pyx", line 840, in cupy.core._kernel.ElementwiseKernel.__call__
E           kern = self._get_elementwise_kernel(dev_id, arginfos, type_map)
E         File "cupy/core/_kernel.pyx", line 865, in cupy.core._kernel.ElementwiseKernel._get_elementwise_kernel
E           kern = _get_elementwise_kernel(
E         File "cupy/_util.pyx", line 59, in cupy._util.memoize.decorator.ret
E           result = f(*args, **kwargs)
E         File "cupy/core/_kernel.pyx", line 652, in cupy.core._kernel._get_elementwise_kernel
E           return _get_simple_elementwise_kernel(
E         File "cupy/core/_kernel.pyx", line 38, in cupy.core._kernel._get_simple_elementwise_kernel
E           cpdef function.Function _get_simple_elementwise_kernel(
E         File "cupy/core/_kernel.pyx", line 61, in cupy.core._kernel._get_simple_elementwise_kernel
E           module = compile_with_cache(module_code, options)
E         File "cupy/core/core.pyx", line 2021, in cupy.core.core.compile_with_cache
E           return cuda.compile_with_cache(
E         File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.t8hdvgF7FH/cupy/cupy/cuda/compiler.py", line 428, in compile_with_cache
E           return _compile_with_cache_hip(
E         File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.t8hdvgF7FH/cupy/cupy/cuda/compiler.py", line 829, in _compile_with_cache_hip
E           temp_path = tf.name
E         File "/home/kmaeh/.pyenv/versions/3.8.7/lib/python3.8/tempfile.py", line 491, in __exit__
E           result = self.file.__exit__(exc, value, tb)
E       OSError: [Errno 28] No space left on device

/home/kmaeh/.pyenv/versions/3.8.7/lib/python3.8/tempfile.py:491: AssertionError
----------------------------- Captured stdout call -----------------------------
dtype is <class 'numpy.float64'>
_________________________ TestChoose.test_choose_wrap __________________________

self = <cupy_tests.indexing_tests.test_indexing.TestChoose testMethod=test_choose_wrap>
xp = <module 'cupy' from '/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.t8hdvgF7FH/cupy/cupy/__init__.py'>
dtype = <class 'numpy.float64'>

    @testing.for_all_dtypes()
    @testing.numpy_cupy_array_equal()
    def test_choose_wrap(self, xp, dtype):
        a = xp.array([0, 3, -1, 5])
        c = testing.shaped_arange((3, 4), xp, dtype)
>       return a.choose(c, mode='wrap')

tests/cupy_tests/indexing_tests/test_indexing.py:223: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
cupy/core/core.pyx:688: in cupy.core.core.ndarray.choose
    cpdef choose(self, choices, out=None, mode='raise'):
cupy/core/core.pyx:690: in cupy.core.core.ndarray.choose
    return _indexing._ndarray_choose(self, choices, out, mode)
cupy/core/_routines_indexing.pyx:192: in cupy.core._routines_indexing._ndarray_choose
    _choose_kernel(ba, bcs, n_channel, out)
cupy/core/_kernel.pyx:840: in cupy.core._kernel.ElementwiseKernel.__call__
    kern = self._get_elementwise_kernel(dev_id, arginfos, type_map)
cupy/core/_kernel.pyx:865: in cupy.core._kernel.ElementwiseKernel._get_elementwise_kernel
    kern = _get_elementwise_kernel(
cupy/_util.pyx:59: in cupy._util.memoize.decorator.ret
    result = f(*args, **kwargs)
cupy/core/_kernel.pyx:652: in cupy.core._kernel._get_elementwise_kernel
    return _get_simple_elementwise_kernel(
cupy/core/_kernel.pyx:38: in cupy.core._kernel._get_simple_elementwise_kernel
    cpdef function.Function _get_simple_elementwise_kernel(
cupy/core/_kernel.pyx:61: in cupy.core._kernel._get_simple_elementwise_kernel
    module = compile_with_cache(module_code, options)
cupy/core/core.pyx:2021: in cupy.core.core.compile_with_cache
    return cuda.compile_with_cache(
cupy/cuda/compiler.py:428: in compile_with_cache
    return _compile_with_cache_hip(
cupy/cuda/compiler.py:829: in _compile_with_cache_hip
    temp_path = tf.name
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <tempfile._TemporaryFileWrapper object at 0x7f50109effa0>, exc = None
value = None, tb = None

    def __exit__(self, exc, value, tb):
>       result = self.file.__exit__(exc, value, tb)
E       AssertionError: Only cupy raises error
E       
E       Traceback (most recent call last):
E         File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.t8hdvgF7FH/cupy/cupy/testing/_helper.py", line 47, in _call_func
E           result = impl(self, *args, **kw)
E         File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.t8hdvgF7FH/cupy/tests/cupy_tests/indexing_tests/test_indexing.py", line 223, in test_choose_wrap
E           return a.choose(c, mode='wrap')
E         File "cupy/core/core.pyx", line 688, in cupy.core.core.ndarray.choose
E           cpdef choose(self, choices, out=None, mode='raise'):
E         File "cupy/core/core.pyx", line 690, in cupy.core.core.ndarray.choose
E           return _indexing._ndarray_choose(self, choices, out, mode)
E         File "cupy/core/_routines_indexing.pyx", line 192, in cupy.core._routines_indexing._ndarray_choose
E           _choose_kernel(ba, bcs, n_channel, out)
E         File "cupy/core/_kernel.pyx", line 840, in cupy.core._kernel.ElementwiseKernel.__call__
E           kern = self._get_elementwise_kernel(dev_id, arginfos, type_map)
E         File "cupy/core/_kernel.pyx", line 865, in cupy.core._kernel.ElementwiseKernel._get_elementwise_kernel
E           kern = _get_elementwise_kernel(
E         File "cupy/_util.pyx", line 59, in cupy._util.memoize.decorator.ret
E           result = f(*args, **kwargs)
E         File "cupy/core/_kernel.pyx", line 652, in cupy.core._kernel._get_elementwise_kernel
E           return _get_simple_elementwise_kernel(
E         File "cupy/core/_kernel.pyx", line 38, in cupy.core._kernel._get_simple_elementwise_kernel
E           cpdef function.Function _get_simple_elementwise_kernel(
E         File "cupy/core/_kernel.pyx", line 61, in cupy.core._kernel._get_simple_elementwise_kernel
E           module = compile_with_cache(module_code, options)
E         File "cupy/core/core.pyx", line 2021, in cupy.core.core.compile_with_cache
E           return cuda.compile_with_cache(
E         File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.t8hdvgF7FH/cupy/cupy/cuda/compiler.py", line 428, in compile_with_cache
E           return _compile_with_cache_hip(
E         File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.t8hdvgF7FH/cupy/cupy/cuda/compiler.py", line 829, in _compile_with_cache_hip
E           temp_path = tf.name
E         File "/home/kmaeh/.pyenv/versions/3.8.7/lib/python3.8/tempfile.py", line 491, in __exit__
E           result = self.file.__exit__(exc, value, tb)
E       OSError: [Errno 28] No space left on device

/home/kmaeh/.pyenv/versions/3.8.7/lib/python3.8/tempfile.py:491: AssertionError
----------------------------- Captured stdout call -----------------------------
dtype is <class 'numpy.float64'>
____________________________ TestSelect.test_select ____________________________

self = <cupy_tests.indexing_tests.test_indexing.TestSelect testMethod=test_select>
xp = <module 'cupy' from '/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.t8hdvgF7FH/cupy/cupy/__init__.py'>
dtype = <class 'numpy.float64'>

    @testing.for_all_dtypes(no_bool=True, no_complex=True)
    @testing.numpy_cupy_array_equal()
    def test_select(self, xp, dtype):
        a = xp.arange(10, dtype=dtype)
        condlist = [a > 3, a < 5]
        choicelist = [a, a**2]
>       return xp.select(condlist, choicelist)

tests/cupy_tests/indexing_tests/test_indexing.py:264: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
cupy/_indexing/indexing.py:221: in select
    cupy.copyto(result, choice, where=cond)
cupy/_manipulation/basic.py:66: in copyto
    core.elementwise_copy_where(src, where, dst)
cupy/core/_kernel.pyx:1103: in cupy.core._kernel.ufunc.__call__
    kern = self._get_ufunc_kernel(dev_id, op, arginfos)
cupy/core/_kernel.pyx:1126: in cupy.core._kernel.ufunc._get_ufunc_kernel
    kern = _get_ufunc_kernel(
cupy/core/_kernel.pyx:900: in cupy.core._kernel._get_ufunc_kernel
    return _get_simple_elementwise_kernel(
cupy/core/_kernel.pyx:61: in cupy.core._kernel._get_simple_elementwise_kernel
    module = compile_with_cache(module_code, options)
cupy/core/core.pyx:2021: in cupy.core.core.compile_with_cache
    return cuda.compile_with_cache(
cupy/cuda/compiler.py:428: in compile_with_cache
    return _compile_with_cache_hip(
cupy/cuda/compiler.py:829: in _compile_with_cache_hip
    temp_path = tf.name
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <tempfile._TemporaryFileWrapper object at 0x7f5010e1e250>, exc = None
value = None, tb = None

    def __exit__(self, exc, value, tb):
>       result = self.file.__exit__(exc, value, tb)
E       AssertionError: Only cupy raises error
E       
E       Traceback (most recent call last):
E         File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.t8hdvgF7FH/cupy/cupy/testing/_helper.py", line 47, in _call_func
E           result = impl(self, *args, **kw)
E         File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.t8hdvgF7FH/cupy/tests/cupy_tests/indexing_tests/test_indexing.py", line 264, in test_select
E           return xp.select(condlist, choicelist)
E         File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.t8hdvgF7FH/cupy/cupy/_indexing/indexing.py", line 221, in select
E           cupy.copyto(result, choice, where=cond)
E         File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.t8hdvgF7FH/cupy/cupy/_manipulation/basic.py", line 66, in copyto
E           core.elementwise_copy_where(src, where, dst)
E         File "cupy/core/_kernel.pyx", line 1103, in cupy.core._kernel.ufunc.__call__
E           kern = self._get_ufunc_kernel(dev_id, op, arginfos)
E         File "cupy/core/_kernel.pyx", line 1126, in cupy.core._kernel.ufunc._get_ufunc_kernel
E           kern = _get_ufunc_kernel(
E         File "cupy/core/_kernel.pyx", line 900, in cupy.core._kernel._get_ufunc_kernel
E           return _get_simple_elementwise_kernel(
E         File "cupy/core/_kernel.pyx", line 61, in cupy.core._kernel._get_simple_elementwise_kernel
E           module = compile_with_cache(module_code, options)
E         File "cupy/core/core.pyx", line 2021, in cupy.core.core.compile_with_cache
E           return cuda.compile_with_cache(
E         File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.t8hdvgF7FH/cupy/cupy/cuda/compiler.py", line 428, in compile_with_cache
E           return _compile_with_cache_hip(
E         File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.t8hdvgF7FH/cupy/cupy/cuda/compiler.py", line 829, in _compile_with_cache_hip
E           temp_path = tf.name
E         File "/home/kmaeh/.pyenv/versions/3.8.7/lib/python3.8/tempfile.py", line 491, in __exit__
E           result = self.file.__exit__(exc, value, tb)
E       OSError: [Errno 28] No space left on device

/home/kmaeh/.pyenv/versions/3.8.7/lib/python3.8/tempfile.py:491: AssertionError
----------------------------- Captured stdout call -----------------------------
dtype is <class 'numpy.float64'>
_____________________ TestSelect.test_select_1D_choicelist _____________________

self = <cupy_tests.indexing_tests.test_indexing.TestSelect testMethod=test_select_1D_choicelist>
xp = <module 'cupy' from '/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.t8hdvgF7FH/cupy/cupy/__init__.py'>
dtype = <class 'numpy.float64'>

    @testing.for_all_dtypes()
    @testing.numpy_cupy_array_equal()
    def test_select_1D_choicelist(self, xp, dtype):
        a = xp.array(1)
        b = xp.array(3)
        condlist = [a < 3, b > 8]
        choicelist = [a, b]
>       return xp.select(condlist, choicelist)

tests/cupy_tests/indexing_tests/test_indexing.py:317: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
cupy/_indexing/indexing.py:221: in select
    cupy.copyto(result, choice, where=cond)
cupy/_manipulation/basic.py:66: in copyto
    core.elementwise_copy_where(src, where, dst)
cupy/core/_kernel.pyx:1103: in cupy.core._kernel.ufunc.__call__
    kern = self._get_ufunc_kernel(dev_id, op, arginfos)
cupy/core/_kernel.pyx:1126: in cupy.core._kernel.ufunc._get_ufunc_kernel
    kern = _get_ufunc_kernel(
cupy/core/_kernel.pyx:900: in cupy.core._kernel._get_ufunc_kernel
    return _get_simple_elementwise_kernel(
cupy/core/_kernel.pyx:61: in cupy.core._kernel._get_simple_elementwise_kernel
    module = compile_with_cache(module_code, options)
cupy/core/core.pyx:2021: in cupy.core.core.compile_with_cache
    return cuda.compile_with_cache(
cupy/cuda/compiler.py:428: in compile_with_cache
    return _compile_with_cache_hip(
cupy/cuda/compiler.py:829: in _compile_with_cache_hip
    temp_path = tf.name
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <tempfile._TemporaryFileWrapper object at 0x7f501085a2e0>, exc = None
value = None, tb = None

    def __exit__(self, exc, value, tb):
>       result = self.file.__exit__(exc, value, tb)
E       AssertionError: Only cupy raises error
E       
E       Traceback (most recent call last):
E         File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.t8hdvgF7FH/cupy/cupy/testing/_helper.py", line 47, in _call_func
E           result = impl(self, *args, **kw)
E         File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.t8hdvgF7FH/cupy/tests/cupy_tests/indexing_tests/test_indexing.py", line 317, in test_select_1D_choicelist
E           return xp.select(condlist, choicelist)
E         File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.t8hdvgF7FH/cupy/cupy/_indexing/indexing.py", line 221, in select
E           cupy.copyto(result, choice, where=cond)
E         File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.t8hdvgF7FH/cupy/cupy/_manipulation/basic.py", line 66, in copyto
E           core.elementwise_copy_where(src, where, dst)
E         File "cupy/core/_kernel.pyx", line 1103, in cupy.core._kernel.ufunc.__call__
E           kern = self._get_ufunc_kernel(dev_id, op, arginfos)
E         File "cupy/core/_kernel.pyx", line 1126, in cupy.core._kernel.ufunc._get_ufunc_kernel
E           kern = _get_ufunc_kernel(
E         File "cupy/core/_kernel.pyx", line 900, in cupy.core._kernel._get_ufunc_kernel
E           return _get_simple_elementwise_kernel(
E         File "cupy/core/_kernel.pyx", line 61, in cupy.core._kernel._get_simple_elementwise_kernel
E           module = compile_with_cache(module_code, options)
E         File "cupy/core/core.pyx", line 2021, in cupy.core.core.compile_with_cache
E           return cuda.compile_with_cache(
E         File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.t8hdvgF7FH/cupy/cupy/cuda/compiler.py", line 428, in compile_with_cache
E           return _compile_with_cache_hip(
E         File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.t8hdvgF7FH/cupy/cupy/cuda/compiler.py", line 829, in _compile_with_cache_hip
E           temp_path = tf.name
E         File "/home/kmaeh/.pyenv/versions/3.8.7/lib/python3.8/tempfile.py", line 491, in __exit__
E           result = self.file.__exit__(exc, value, tb)
E       OSError: [Errno 28] No space left on device

/home/kmaeh/.pyenv/versions/3.8.7/lib/python3.8/tempfile.py:491: AssertionError
----------------------------- Captured stdout call -----------------------------
dtype is <class 'numpy.float64'>
_____________ TestSelect.test_select_choicelist_condlist_broadcast _____________

self = <cupy_tests.indexing_tests.test_indexing.TestSelect testMethod=test_select_choicelist_condlist_broadcast>
xp = <module 'cupy' from '/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.t8hdvgF7FH/cupy/cupy/__init__.py'>
dtype = <class 'numpy.float64'>

    @testing.for_all_dtypes(no_bool=True)
    @testing.numpy_cupy_array_equal()
    def test_select_choicelist_condlist_broadcast(self, xp, dtype):
        a = xp.arange(10, dtype=dtype)
        b = xp.arange(20, dtype=dtype).reshape(2, 10)
        condlist = [a < 4, b > 8]
        choicelist = [xp.repeat(a, 2).reshape(2, 10), b]
>       return xp.select(condlist, choicelist)

tests/cupy_tests/indexing_tests/test_indexing.py:326: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
cupy/_indexing/indexing.py:221: in select
    cupy.copyto(result, choice, where=cond)
cupy/_manipulation/basic.py:66: in copyto
    core.elementwise_copy_where(src, where, dst)
cupy/core/_kernel.pyx:1103: in cupy.core._kernel.ufunc.__call__
    kern = self._get_ufunc_kernel(dev_id, op, arginfos)
cupy/core/_kernel.pyx:1126: in cupy.core._kernel.ufunc._get_ufunc_kernel
    kern = _get_ufunc_kernel(
cupy/core/_kernel.pyx:900: in cupy.core._kernel._get_ufunc_kernel
    return _get_simple_elementwise_kernel(
cupy/core/_kernel.pyx:61: in cupy.core._kernel._get_simple_elementwise_kernel
    module = compile_with_cache(module_code, options)
cupy/core/core.pyx:2021: in cupy.core.core.compile_with_cache
    return cuda.compile_with_cache(
cupy/cuda/compiler.py:428: in compile_with_cache
    return _compile_with_cache_hip(
cupy/cuda/compiler.py:829: in _compile_with_cache_hip
    temp_path = tf.name
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <tempfile._TemporaryFileWrapper object at 0x7f50105c04c0>, exc = None
value = None, tb = None

    def __exit__(self, exc, value, tb):
>       result = self.file.__exit__(exc, value, tb)
E       AssertionError: Only cupy raises error
E       
E       Traceback (most recent call last):
E         File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.t8hdvgF7FH/cupy/cupy/testing/_helper.py", line 47, in _call_func
E           result = impl(self, *args, **kw)
E         File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.t8hdvgF7FH/cupy/tests/cupy_tests/indexing_tests/test_indexing.py", line 326, in test_select_choicelist_condlist_broadcast
E           return xp.select(condlist, choicelist)
E         File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.t8hdvgF7FH/cupy/cupy/_indexing/indexing.py", line 221, in select
E           cupy.copyto(result, choice, where=cond)
E         File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.t8hdvgF7FH/cupy/cupy/_manipulation/basic.py", line 66, in copyto
E           core.elementwise_copy_where(src, where, dst)
E         File "cupy/core/_kernel.pyx", line 1103, in cupy.core._kernel.ufunc.__call__
E           kern = self._get_ufunc_kernel(dev_id, op, arginfos)
E         File "cupy/core/_kernel.pyx", line 1126, in cupy.core._kernel.ufunc._get_ufunc_kernel
E           kern = _get_ufunc_kernel(
E         File "cupy/core/_kernel.pyx", line 900, in cupy.core._kernel._get_ufunc_kernel
E           return _get_simple_elementwise_kernel(
E         File "cupy/core/_kernel.pyx", line 61, in cupy.core._kernel._get_simple_elementwise_kernel
E           module = compile_with_cache(module_code, options)
E         File "cupy/core/core.pyx", line 2021, in cupy.core.core.compile_with_cache
E           return cuda.compile_with_cache(
E         File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.t8hdvgF7FH/cupy/cupy/cuda/compiler.py", line 428, in compile_with_cache
E           return _compile_with_cache_hip(
E         File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.t8hdvgF7FH/cupy/cupy/cuda/compiler.py", line 829, in _compile_with_cache_hip
E           temp_path = tf.name
E         File "/home/kmaeh/.pyenv/versions/3.8.7/lib/python3.8/tempfile.py", line 491, in __exit__
E           result = self.file.__exit__(exc, value, tb)
E       OSError: [Errno 28] No space left on device

/home/kmaeh/.pyenv/versions/3.8.7/lib/python3.8/tempfile.py:491: AssertionError
----------------------------- Captured stdout call -----------------------------
dtype is <class 'numpy.float64'>
________________________ TestSelect.test_select_complex ________________________

self = <cupy_tests.indexing_tests.test_indexing.TestSelect testMethod=test_select_complex>
xp = <module 'cupy' from '/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.t8hdvgF7FH/cupy/cupy/__init__.py'>
dtype = <class 'numpy.complex64'>

    @testing.for_complex_dtypes()
    @testing.numpy_cupy_array_almost_equal()
    def test_select_complex(self, xp, dtype):
        a = xp.arange(10, dtype=dtype)
        condlist = [a > 3, a < 5]
        choicelist = [a, a**2]
>       return xp.select(condlist, choicelist)

tests/cupy_tests/indexing_tests/test_indexing.py:272: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
cupy/_indexing/indexing.py:221: in select
    cupy.copyto(result, choice, where=cond)
cupy/_manipulation/basic.py:66: in copyto
    core.elementwise_copy_where(src, where, dst)
cupy/core/_kernel.pyx:1103: in cupy.core._kernel.ufunc.__call__
    kern = self._get_ufunc_kernel(dev_id, op, arginfos)
cupy/core/_kernel.pyx:1126: in cupy.core._kernel.ufunc._get_ufunc_kernel
    kern = _get_ufunc_kernel(
cupy/core/_kernel.pyx:900: in cupy.core._kernel._get_ufunc_kernel
    return _get_simple_elementwise_kernel(
cupy/core/_kernel.pyx:61: in cupy.core._kernel._get_simple_elementwise_kernel
    module = compile_with_cache(module_code, options)
cupy/core/core.pyx:2021: in cupy.core.core.compile_with_cache
    return cuda.compile_with_cache(
cupy/cuda/compiler.py:428: in compile_with_cache
    return _compile_with_cache_hip(
cupy/cuda/compiler.py:829: in _compile_with_cache_hip
    temp_path = tf.name
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <tempfile._TemporaryFileWrapper object at 0x7f503be4ad00>, exc = None
value = None, tb = None

    def __exit__(self, exc, value, tb):
>       result = self.file.__exit__(exc, value, tb)
E       AssertionError: Only cupy raises error
E       
E       Traceback (most recent call last):
E         File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.t8hdvgF7FH/cupy/cupy/testing/_helper.py", line 47, in _call_func
E           result = impl(self, *args, **kw)
E         File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.t8hdvgF7FH/cupy/tests/cupy_tests/indexing_tests/test_indexing.py", line 272, in test_select_complex
E           return xp.select(condlist, choicelist)
E         File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.t8hdvgF7FH/cupy/cupy/_indexing/indexing.py", line 221, in select
E           cupy.copyto(result, choice, where=cond)
E         File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.t8hdvgF7FH/cupy/cupy/_manipulation/basic.py", line 66, in copyto
E           core.elementwise_copy_where(src, where, dst)
E         File "cupy/core/_kernel.pyx", line 1103, in cupy.core._kernel.ufunc.__call__
E           kern = self._get_ufunc_kernel(dev_id, op, arginfos)
E         File "cupy/core/_kernel.pyx", line 1126, in cupy.core._kernel.ufunc._get_ufunc_kernel
E           kern = _get_ufunc_kernel(
E         File "cupy/core/_kernel.pyx", line 900, in cupy.core._kernel._get_ufunc_kernel
E           return _get_simple_elementwise_kernel(
E         File "cupy/core/_kernel.pyx", line 61, in cupy.core._kernel._get_simple_elementwise_kernel
E           module = compile_with_cache(module_code, options)
E         File "cupy/core/core.pyx", line 2021, in cupy.core.core.compile_with_cache
E           return cuda.compile_with_cache(
E         File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.t8hdvgF7FH/cupy/cupy/cuda/compiler.py", line 428, in compile_with_cache
E           return _compile_with_cache_hip(
E         File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.t8hdvgF7FH/cupy/cupy/cuda/compiler.py", line 829, in _compile_with_cache_hip
E           temp_path = tf.name
E         File "/home/kmaeh/.pyenv/versions/3.8.7/lib/python3.8/tempfile.py", line 491, in __exit__
E           result = self.file.__exit__(exc, value, tb)
E       OSError: [Errno 28] No space left on device

/home/kmaeh/.pyenv/versions/3.8.7/lib/python3.8/tempfile.py:491: AssertionError
----------------------------- Captured stdout call -----------------------------
dtype is <class 'numpy.complex64'>
________________________ TestSelect.test_select_default ________________________

self = <cupy_tests.indexing_tests.test_indexing.TestSelect testMethod=test_select_default>
xp = <module 'cupy' from '/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.t8hdvgF7FH/cupy/cupy/__init__.py'>
dtype = <class 'numpy.float64'>

    @testing.for_all_dtypes(no_bool=True, no_complex=True)
    @testing.numpy_cupy_array_equal()
    def test_select_default(self, xp, dtype):
        a = xp.arange(10, dtype=dtype)
        condlist = [a > 3, a < 5]
        choicelist = [a, a**2]
        default = 3
>       return xp.select(condlist, choicelist, default)

tests/cupy_tests/indexing_tests/test_indexing.py:281: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
cupy/_indexing/indexing.py:221: in select
    cupy.copyto(result, choice, where=cond)
cupy/_manipulation/basic.py:66: in copyto
    core.elementwise_copy_where(src, where, dst)
cupy/core/_kernel.pyx:1103: in cupy.core._kernel.ufunc.__call__
    kern = self._get_ufunc_kernel(dev_id, op, arginfos)
cupy/core/_kernel.pyx:1126: in cupy.core._kernel.ufunc._get_ufunc_kernel
    kern = _get_ufunc_kernel(
cupy/core/_kernel.pyx:900: in cupy.core._kernel._get_ufunc_kernel
    return _get_simple_elementwise_kernel(
cupy/core/_kernel.pyx:61: in cupy.core._kernel._get_simple_elementwise_kernel
    module = compile_with_cache(module_code, options)
cupy/core/core.pyx:2021: in cupy.core.core.compile_with_cache
    return cuda.compile_with_cache(
cupy/cuda/compiler.py:428: in compile_with_cache
    return _compile_with_cache_hip(
cupy/cuda/compiler.py:829: in _compile_with_cache_hip
    temp_path = tf.name
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <tempfile._TemporaryFileWrapper object at 0x7f50109bae20>, exc = None
value = None, tb = None

    def __exit__(self, exc, value, tb):
>       result = self.file.__exit__(exc, value, tb)
E       AssertionError: Only cupy raises error
E       
E       Traceback (most recent call last):
E         File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.t8hdvgF7FH/cupy/cupy/testing/_helper.py", line 47, in _call_func
E           result = impl(self, *args, **kw)
E         File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.t8hdvgF7FH/cupy/tests/cupy_tests/indexing_tests/test_indexing.py", line 281, in test_select_default
E           return xp.select(condlist, choicelist, default)
E         File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.t8hdvgF7FH/cupy/cupy/_indexing/indexing.py", line 221, in select
E           cupy.copyto(result, choice, where=cond)
E         File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.t8hdvgF7FH/cupy/cupy/_manipulation/basic.py", line 66, in copyto
E           core.elementwise_copy_where(src, where, dst)
E         File "cupy/core/_kernel.pyx", line 1103, in cupy.core._kernel.ufunc.__call__
E           kern = self._get_ufunc_kernel(dev_id, op, arginfos)
E         File "cupy/core/_kernel.pyx", line 1126, in cupy.core._kernel.ufunc._get_ufunc_kernel
E           kern = _get_ufunc_kernel(
E         File "cupy/core/_kernel.pyx", line 900, in cupy.core._kernel._get_ufunc_kernel
E           return _get_simple_elementwise_kernel(
E         File "cupy/core/_kernel.pyx", line 61, in cupy.core._kernel._get_simple_elementwise_kernel
E           module = compile_with_cache(module_code, options)
E         File "cupy/core/core.pyx", line 2021, in cupy.core.core.compile_with_cache
E           return cuda.compile_with_cache(
E         File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.t8hdvgF7FH/cupy/cupy/cuda/compiler.py", line 428, in compile_with_cache
E           return _compile_with_cache_hip(
E         File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.t8hdvgF7FH/cupy/cupy/cuda/compiler.py", line 829, in _compile_with_cache_hip
E           temp_path = tf.name
E         File "/home/kmaeh/.pyenv/versions/3.8.7/lib/python3.8/tempfile.py", line 491, in __exit__
E           result = self.file.__exit__(exc, value, tb)
E       OSError: [Errno 28] No space left on device

/home/kmaeh/.pyenv/versions/3.8.7/lib/python3.8/tempfile.py:491: AssertionError
----------------------------- Captured stdout call -----------------------------
dtype is <class 'numpy.float64'>
____________________ TestSelect.test_select_default_complex ____________________

self = <cupy_tests.indexing_tests.test_indexing.TestSelect testMethod=test_select_default_complex>
xp = <module 'cupy' from '/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.t8hdvgF7FH/cupy/cupy/__init__.py'>
dtype = <class 'numpy.complex64'>

    @testing.for_complex_dtypes()
    @testing.numpy_cupy_array_almost_equal()
    def test_select_default_complex(self, xp, dtype):
        a = xp.arange(10, dtype=dtype)
        condlist = [a > 3, a < 5]
        choicelist = [a, a**2]
        default = 3
>       return xp.select(condlist, choicelist, default)

tests/cupy_tests/indexing_tests/test_indexing.py:290: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
cupy/_indexing/indexing.py:221: in select
    cupy.copyto(result, choice, where=cond)
cupy/_manipulation/basic.py:66: in copyto
    core.elementwise_copy_where(src, where, dst)
cupy/core/_kernel.pyx:1103: in cupy.core._kernel.ufunc.__call__
    kern = self._get_ufunc_kernel(dev_id, op, arginfos)
cupy/core/_kernel.pyx:1126: in cupy.core._kernel.ufunc._get_ufunc_kernel
    kern = _get_ufunc_kernel(
cupy/core/_kernel.pyx:900: in cupy.core._kernel._get_ufunc_kernel
    return _get_simple_elementwise_kernel(
cupy/core/_kernel.pyx:61: in cupy.core._kernel._get_simple_elementwise_kernel
    module = compile_with_cache(module_code, options)
cupy/core/core.pyx:2021: in cupy.core.core.compile_with_cache
    return cuda.compile_with_cache(
cupy/cuda/compiler.py:428: in compile_with_cache
    return _compile_with_cache_hip(
cupy/cuda/compiler.py:829: in _compile_with_cache_hip
    temp_path = tf.name
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <tempfile._TemporaryFileWrapper object at 0x7f501085ac70>, exc = None
value = None, tb = None

    def __exit__(self, exc, value, tb):
>       result = self.file.__exit__(exc, value, tb)
E       AssertionError: Only cupy raises error
E       
E       Traceback (most recent call last):
E         File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.t8hdvgF7FH/cupy/cupy/testing/_helper.py", line 47, in _call_func
E           result = impl(self, *args, **kw)
E         File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.t8hdvgF7FH/cupy/tests/cupy_tests/indexing_tests/test_indexing.py", line 290, in test_select_default_complex
E           return xp.select(condlist, choicelist, default)
E         File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.t8hdvgF7FH/cupy/cupy/_indexing/indexing.py", line 221, in select
E           cupy.copyto(result, choice, where=cond)
E         File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.t8hdvgF7FH/cupy/cupy/_manipulation/basic.py", line 66, in copyto
E           core.elementwise_copy_where(src, where, dst)
E         File "cupy/core/_kernel.pyx", line 1103, in cupy.core._kernel.ufunc.__call__
E           kern = self._get_ufunc_kernel(dev_id, op, arginfos)
E         File "cupy/core/_kernel.pyx", line 1126, in cupy.core._kernel.ufunc._get_ufunc_kernel
E           kern = _get_ufunc_kernel(
E         File "cupy/core/_kernel.pyx", line 900, in cupy.core._kernel._get_ufunc_kernel
E           return _get_simple_elementwise_kernel(
E         File "cupy/core/_kernel.pyx", line 61, in cupy.core._kernel._get_simple_elementwise_kernel
E           module = compile_with_cache(module_code, options)
E         File "cupy/core/core.pyx", line 2021, in cupy.core.core.compile_with_cache
E           return cuda.compile_with_cache(
E         File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.t8hdvgF7FH/cupy/cupy/cuda/compiler.py", line 428, in compile_with_cache
E           return _compile_with_cache_hip(
E         File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.t8hdvgF7FH/cupy/cupy/cuda/compiler.py", line 829, in _compile_with_cache_hip
E           temp_path = tf.name
E         File "/home/kmaeh/.pyenv/versions/3.8.7/lib/python3.8/tempfile.py", line 491, in __exit__
E           result = self.file.__exit__(exc, value, tb)
E       OSError: [Errno 28] No space left on device

/home/kmaeh/.pyenv/versions/3.8.7/lib/python3.8/tempfile.py:491: AssertionError
----------------------------- Captured stdout call -----------------------------
dtype is <class 'numpy.complex64'>
_______________ TestSelect.test_select_odd_shaped_broadcastable ________________

self = <cupy_tests.indexing_tests.test_indexing.TestSelect testMethod=test_select_odd_shaped_broadcastable>
xp = <module 'cupy' from '/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.t8hdvgF7FH/cupy/cupy/__init__.py'>
dtype = <class 'numpy.float64'>

    @testing.for_all_dtypes(no_bool=True, no_complex=True)
    @testing.numpy_cupy_array_equal()
    def test_select_odd_shaped_broadcastable(self, xp, dtype):
        a = xp.arange(10, dtype=dtype)
        b = xp.arange(30, dtype=dtype).reshape(3, 10)
        condlist = [a < 3, b > 8]
        choicelist = [a, b]
>       return xp.select(condlist, choicelist)

tests/cupy_tests/indexing_tests/test_indexing.py:299: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
cupy/_indexing/indexing.py:221: in select
    cupy.copyto(result, choice, where=cond)
cupy/_manipulation/basic.py:66: in copyto
    core.elementwise_copy_where(src, where, dst)
cupy/core/_kernel.pyx:1103: in cupy.core._kernel.ufunc.__call__
    kern = self._get_ufunc_kernel(dev_id, op, arginfos)
cupy/core/_kernel.pyx:1126: in cupy.core._kernel.ufunc._get_ufunc_kernel
    kern = _get_ufunc_kernel(
cupy/core/_kernel.pyx:900: in cupy.core._kernel._get_ufunc_kernel
    return _get_simple_elementwise_kernel(
cupy/core/_kernel.pyx:61: in cupy.core._kernel._get_simple_elementwise_kernel
    module = compile_with_cache(module_code, options)
cupy/core/core.pyx:2021: in cupy.core.core.compile_with_cache
    return cuda.compile_with_cache(
cupy/cuda/compiler.py:428: in compile_with_cache
    return _compile_with_cache_hip(
cupy/cuda/compiler.py:829: in _compile_with_cache_hip
    temp_path = tf.name
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <tempfile._TemporaryFileWrapper object at 0x7f5010e0a3a0>, exc = None
value = None, tb = None

    def __exit__(self, exc, value, tb):
>       result = self.file.__exit__(exc, value, tb)
E       AssertionError: Only cupy raises error
E       
E       Traceback (most recent call last):
E         File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.t8hdvgF7FH/cupy/cupy/testing/_helper.py", line 47, in _call_func
E           result = impl(self, *args, **kw)
E         File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.t8hdvgF7FH/cupy/tests/cupy_tests/indexing_tests/test_indexing.py", line 299, in test_select_odd_shaped_broadcastable
E           return xp.select(condlist, choicelist)
E         File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.t8hdvgF7FH/cupy/cupy/_indexing/indexing.py", line 221, in select
E           cupy.copyto(result, choice, where=cond)
E         File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.t8hdvgF7FH/cupy/cupy/_manipulation/basic.py", line 66, in copyto
E           core.elementwise_copy_where(src, where, dst)
E         File "cupy/core/_kernel.pyx", line 1103, in cupy.core._kernel.ufunc.__call__
E           kern = self._get_ufunc_kernel(dev_id, op, arginfos)
E         File "cupy/core/_kernel.pyx", line 1126, in cupy.core._kernel.ufunc._get_ufunc_kernel
E           kern = _get_ufunc_kernel(
E         File "cupy/core/_kernel.pyx", line 900, in cupy.core._kernel._get_ufunc_kernel
E           return _get_simple_elementwise_kernel(
E         File "cupy/core/_kernel.pyx", line 61, in cupy.core._kernel._get_simple_elementwise_kernel
E           module = compile_with_cache(module_code, options)
E         File "cupy/core/core.pyx", line 2021, in cupy.core.core.compile_with_cache
E           return cuda.compile_with_cache(
E         File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.t8hdvgF7FH/cupy/cupy/cuda/compiler.py", line 428, in compile_with_cache
E           return _compile_with_cache_hip(
E         File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.t8hdvgF7FH/cupy/cupy/cuda/compiler.py", line 829, in _compile_with_cache_hip
E           temp_path = tf.name
E         File "/home/kmaeh/.pyenv/versions/3.8.7/lib/python3.8/tempfile.py", line 491, in __exit__
E           result = self.file.__exit__(exc, value, tb)
E       OSError: [Errno 28] No space left on device

/home/kmaeh/.pyenv/versions/3.8.7/lib/python3.8/tempfile.py:491: AssertionError
----------------------------- Captured stdout call -----------------------------
dtype is <class 'numpy.float64'>
___________ TestSelect.test_select_odd_shaped_broadcastable_complex ____________

self = <cupy_tests.indexing_tests.test_indexing.TestSelect testMethod=test_select_odd_shaped_broadcastable_complex>
xp = <module 'cupy' from '/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.t8hdvgF7FH/cupy/cupy/__init__.py'>
dtype = <class 'numpy.complex64'>

    @testing.for_complex_dtypes()
    @testing.numpy_cupy_allclose(rtol=1e-5)
    def test_select_odd_shaped_broadcastable_complex(self, xp, dtype):
        a = xp.arange(10, dtype=dtype)
        b = xp.arange(20, dtype=dtype).reshape(2, 10)
        condlist = [a < 3, b > 8]
        choicelist = [a, b**2]
>       return xp.select(condlist, choicelist)

tests/cupy_tests/indexing_tests/test_indexing.py:308: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
cupy/_indexing/indexing.py:221: in select
    cupy.copyto(result, choice, where=cond)
cupy/_manipulation/basic.py:66: in copyto
    core.elementwise_copy_where(src, where, dst)
cupy/core/_kernel.pyx:1103: in cupy.core._kernel.ufunc.__call__
    kern = self._get_ufunc_kernel(dev_id, op, arginfos)
cupy/core/_kernel.pyx:1126: in cupy.core._kernel.ufunc._get_ufunc_kernel
    kern = _get_ufunc_kernel(
cupy/core/_kernel.pyx:900: in cupy.core._kernel._get_ufunc_kernel
    return _get_simple_elementwise_kernel(
cupy/core/_kernel.pyx:61: in cupy.core._kernel._get_simple_elementwise_kernel
    module = compile_with_cache(module_code, options)
cupy/core/core.pyx:2021: in cupy.core.core.compile_with_cache
    return cuda.compile_with_cache(
cupy/cuda/compiler.py:428: in compile_with_cache
    return _compile_with_cache_hip(
cupy/cuda/compiler.py:829: in _compile_with_cache_hip
    temp_path = tf.name
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <tempfile._TemporaryFileWrapper object at 0x7f5010fd4fd0>, exc = None
value = None, tb = None

    def __exit__(self, exc, value, tb):
>       result = self.file.__exit__(exc, value, tb)
E       AssertionError: Only cupy raises error
E       
E       Traceback (most recent call last):
E         File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.t8hdvgF7FH/cupy/cupy/testing/_helper.py", line 47, in _call_func
E           result = impl(self, *args, **kw)
E         File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.t8hdvgF7FH/cupy/tests/cupy_tests/indexing_tests/test_indexing.py", line 308, in test_select_odd_shaped_broadcastable_complex
E           return xp.select(condlist, choicelist)
E         File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.t8hdvgF7FH/cupy/cupy/_indexing/indexing.py", line 221, in select
E           cupy.copyto(result, choice, where=cond)
E         File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.t8hdvgF7FH/cupy/cupy/_manipulation/basic.py", line 66, in copyto
E           core.elementwise_copy_where(src, where, dst)
E         File "cupy/core/_kernel.pyx", line 1103, in cupy.core._kernel.ufunc.__call__
E           kern = self._get_ufunc_kernel(dev_id, op, arginfos)
E         File "cupy/core/_kernel.pyx", line 1126, in cupy.core._kernel.ufunc._get_ufunc_kernel
E           kern = _get_ufunc_kernel(
E         File "cupy/core/_kernel.pyx", line 900, in cupy.core._kernel._get_ufunc_kernel
E           return _get_simple_elementwise_kernel(
E         File "cupy/core/_kernel.pyx", line 61, in cupy.core._kernel._get_simple_elementwise_kernel
E           module = compile_with_cache(module_code, options)
E         File "cupy/core/core.pyx", line 2021, in cupy.core.core.compile_with_cache
E           return cuda.compile_with_cache(
E         File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.t8hdvgF7FH/cupy/cupy/cuda/compiler.py", line 428, in compile_with_cache
E           return _compile_with_cache_hip(
E         File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.t8hdvgF7FH/cupy/cupy/cuda/compiler.py", line 829, in _compile_with_cache_hip
E           temp_path = tf.name
E         File "/home/kmaeh/.pyenv/versions/3.8.7/lib/python3.8/tempfile.py", line 491, in __exit__
E           result = self.file.__exit__(exc, value, tb)
E       OSError: [Errno 28] No space left on device

/home/kmaeh/.pyenv/versions/3.8.7/lib/python3.8/tempfile.py:491: AssertionError
----------------------------- Captured stdout call -----------------------------
dtype is <class 'numpy.complex64'>
_____________ TestPlace_param_3_{n_vals=1, shape=(7,)}.test_place ______________

self = <<cupy_tests.indexing_tests.test_insert.TestPlace_param_3_{n_vals=1, shape=(7,)} testMethod=test_place>  parameter: {'n_vals': 1, 'shape': (7,)}>
xp = <module 'cupy' from '/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.t8hdvgF7FH/cupy/cupy/__init__.py'>
dtype = <class 'numpy.float64'>

    @testing.for_all_dtypes()
    @testing.numpy_cupy_array_equal()
    def test_place(self, xp, dtype):
        a = testing.shaped_arange(self.shape, xp, dtype)
        if self.n_vals == 0:
            mask = xp.zeros(self.shape, dtype=numpy.bool_)
        else:
            mask = testing.shaped_random(self.shape, xp, numpy.bool_)
        vals = testing.shaped_random((self.n_vals,), xp, dtype)
>       xp.place(a, mask, vals)

tests/cupy_tests/indexing_tests/test_insert.py:28: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
cupy/_indexing/insert.py:41: in place
    mask_indices = mask.ravel().nonzero()[0]  # may synchronize
cupy/core/core.pyx:770: in cupy.core.core.ndarray.nonzero
    cpdef tuple nonzero(self):
cupy/core/core.pyx:787: in cupy.core.core.ndarray.nonzero
    return _indexing._ndarray_nonzero(self)
cupy/core/_routines_indexing.pyx:59: in cupy.core._routines_indexing._ndarray_nonzero
    cdef ndarray dst = _ndarray_argwhere(self)
cupy/core/_routines_indexing.pyx:120: in cupy.core._routines_indexing._ndarray_argwhere
    _nonzero_kernel(nonzero, scan_index, dst)
cupy/core/_kernel.pyx:840: in cupy.core._kernel.ElementwiseKernel.__call__
    kern = self._get_elementwise_kernel(dev_id, arginfos, type_map)
cupy/core/_kernel.pyx:865: in cupy.core._kernel.ElementwiseKernel._get_elementwise_kernel
    kern = _get_elementwise_kernel(
cupy/_util.pyx:59: in cupy._util.memoize.decorator.ret
    result = f(*args, **kwargs)
cupy/core/_kernel.pyx:652: in cupy.core._kernel._get_elementwise_kernel
    return _get_simple_elementwise_kernel(
cupy/core/_kernel.pyx:38: in cupy.core._kernel._get_simple_elementwise_kernel
    cpdef function.Function _get_simple_elementwise_kernel(
cupy/core/_kernel.pyx:61: in cupy.core._kernel._get_simple_elementwise_kernel
    module = compile_with_cache(module_code, options)
cupy/core/core.pyx:2021: in cupy.core.core.compile_with_cache
    return cuda.compile_with_cache(
cupy/cuda/compiler.py:428: in compile_with_cache
    return _compile_with_cache_hip(
cupy/cuda/compiler.py:829: in _compile_with_cache_hip
    temp_path = tf.name
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <tempfile._TemporaryFileWrapper object at 0x7f5010edc940>, exc = None
value = None, tb = None

    def __exit__(self, exc, value, tb):
>       result = self.file.__exit__(exc, value, tb)
E       AssertionError: Only cupy raises error
E       
E       Traceback (most recent call last):
E         File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.t8hdvgF7FH/cupy/cupy/testing/_helper.py", line 47, in _call_func
E           result = impl(self, *args, **kw)
E         File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.t8hdvgF7FH/cupy/tests/cupy_tests/indexing_tests/test_insert.py", line 28, in test_place
E           xp.place(a, mask, vals)
E         File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.t8hdvgF7FH/cupy/cupy/_indexing/insert.py", line 41, in place
E           mask_indices = mask.ravel().nonzero()[0]  # may synchronize
E         File "cupy/core/core.pyx", line 770, in cupy.core.core.ndarray.nonzero
E           cpdef tuple nonzero(self):
E         File "cupy/core/core.pyx", line 787, in cupy.core.core.ndarray.nonzero
E           return _indexing._ndarray_nonzero(self)
E         File "cupy/core/_routines_indexing.pyx", line 59, in cupy.core._routines_indexing._ndarray_nonzero
E           cdef ndarray dst = _ndarray_argwhere(self)
E         File "cupy/core/_routines_indexing.pyx", line 120, in cupy.core._routines_indexing._ndarray_argwhere
E           _nonzero_kernel(nonzero, scan_index, dst)
E         File "cupy/core/_kernel.pyx", line 840, in cupy.core._kernel.ElementwiseKernel.__call__
E           kern = self._get_elementwise_kernel(dev_id, arginfos, type_map)
E         File "cupy/core/_kernel.pyx", line 865, in cupy.core._kernel.ElementwiseKernel._get_elementwise_kernel
E           kern = _get_elementwise_kernel(
E         File "cupy/_util.pyx", line 59, in cupy._util.memoize.decorator.ret
E           result = f(*args, **kwargs)
E         File "cupy/core/_kernel.pyx", line 652, in cupy.core._kernel._get_elementwise_kernel
E           return _get_simple_elementwise_kernel(
E         File "cupy/core/_kernel.pyx", line 38, in cupy.core._kernel._get_simple_elementwise_kernel
E           cpdef function.Function _get_simple_elementwise_kernel(
E         File "cupy/core/_kernel.pyx", line 61, in cupy.core._kernel._get_simple_elementwise_kernel
E           module = compile_with_cache(module_code, options)
E         File "cupy/core/core.pyx", line 2021, in cupy.core.core.compile_with_cache
E           return cuda.compile_with_cache(
E         File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.t8hdvgF7FH/cupy/cupy/cuda/compiler.py", line 428, in compile_with_cache
E           return _compile_with_cache_hip(
E         File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.t8hdvgF7FH/cupy/cupy/cuda/compiler.py", line 829, in _compile_with_cache_hip
E           temp_path = tf.name
E         File "/home/kmaeh/.pyenv/versions/3.8.7/lib/python3.8/tempfile.py", line 491, in __exit__
E           result = self.file.__exit__(exc, value, tb)
E       OSError: [Errno 28] No space left on device

/home/kmaeh/.pyenv/versions/3.8.7/lib/python3.8/tempfile.py:491: AssertionError
----------------------------- Captured stdout call -----------------------------
dtype is <class 'numpy.float64'>
____________ TestPlace_param_4_{n_vals=1, shape=(2, 3)}.test_place _____________

self = <<cupy_tests.indexing_tests.test_insert.TestPlace_param_4_{n_vals=1, shape=(2, 3)} testMethod=test_place>  parameter: {'n_vals': 1, 'shape': (2, 3)}>
xp = <module 'cupy' from '/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.t8hdvgF7FH/cupy/cupy/__init__.py'>
dtype = <class 'numpy.float64'>

    @testing.for_all_dtypes()
    @testing.numpy_cupy_array_equal()
    def test_place(self, xp, dtype):
        a = testing.shaped_arange(self.shape, xp, dtype)
        if self.n_vals == 0:
            mask = xp.zeros(self.shape, dtype=numpy.bool_)
        else:
            mask = testing.shaped_random(self.shape, xp, numpy.bool_)
        vals = testing.shaped_random((self.n_vals,), xp, dtype)
>       xp.place(a, mask, vals)

tests/cupy_tests/indexing_tests/test_insert.py:28: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
cupy/_indexing/insert.py:41: in place
    mask_indices = mask.ravel().nonzero()[0]  # may synchronize
cupy/core/core.pyx:770: in cupy.core.core.ndarray.nonzero
    cpdef tuple nonzero(self):
cupy/core/core.pyx:787: in cupy.core.core.ndarray.nonzero
    return _indexing._ndarray_nonzero(self)
cupy/core/_routines_indexing.pyx:59: in cupy.core._routines_indexing._ndarray_nonzero
    cdef ndarray dst = _ndarray_argwhere(self)
cupy/core/_routines_indexing.pyx:120: in cupy.core._routines_indexing._ndarray_argwhere
    _nonzero_kernel(nonzero, scan_index, dst)
cupy/core/_kernel.pyx:840: in cupy.core._kernel.ElementwiseKernel.__call__
    kern = self._get_elementwise_kernel(dev_id, arginfos, type_map)
cupy/core/_kernel.pyx:865: in cupy.core._kernel.ElementwiseKernel._get_elementwise_kernel
    kern = _get_elementwise_kernel(
cupy/_util.pyx:59: in cupy._util.memoize.decorator.ret
    result = f(*args, **kwargs)
cupy/core/_kernel.pyx:652: in cupy.core._kernel._get_elementwise_kernel
    return _get_simple_elementwise_kernel(
cupy/core/_kernel.pyx:38: in cupy.core._kernel._get_simple_elementwise_kernel
    cpdef function.Function _get_simple_elementwise_kernel(
cupy/core/_kernel.pyx:61: in cupy.core._kernel._get_simple_elementwise_kernel
    module = compile_with_cache(module_code, options)
cupy/core/core.pyx:2021: in cupy.core.core.compile_with_cache
    return cuda.compile_with_cache(
cupy/cuda/compiler.py:428: in compile_with_cache
    return _compile_with_cache_hip(
cupy/cuda/compiler.py:829: in _compile_with_cache_hip
    temp_path = tf.name
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <tempfile._TemporaryFileWrapper object at 0x7f50117f32b0>, exc = None
value = None, tb = None

    def __exit__(self, exc, value, tb):
>       result = self.file.__exit__(exc, value, tb)
E       AssertionError: Only cupy raises error
E       
E       Traceback (most recent call last):
E         File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.t8hdvgF7FH/cupy/cupy/testing/_helper.py", line 47, in _call_func
E           result = impl(self, *args, **kw)
E         File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.t8hdvgF7FH/cupy/tests/cupy_tests/indexing_tests/test_insert.py", line 28, in test_place
E           xp.place(a, mask, vals)
E         File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.t8hdvgF7FH/cupy/cupy/_indexing/insert.py", line 41, in place
E           mask_indices = mask.ravel().nonzero()[0]  # may synchronize
E         File "cupy/core/core.pyx", line 770, in cupy.core.core.ndarray.nonzero
E           cpdef tuple nonzero(self):
E         File "cupy/core/core.pyx", line 787, in cupy.core.core.ndarray.nonzero
E           return _indexing._ndarray_nonzero(self)
E         File "cupy/core/_routines_indexing.pyx", line 59, in cupy.core._routines_indexing._ndarray_nonzero
E           cdef ndarray dst = _ndarray_argwhere(self)
E         File "cupy/core/_routines_indexing.pyx", line 120, in cupy.core._routines_indexing._ndarray_argwhere
E           _nonzero_kernel(nonzero, scan_index, dst)
E         File "cupy/core/_kernel.pyx", line 840, in cupy.core._kernel.ElementwiseKernel.__call__
E           kern = self._get_elementwise_kernel(dev_id, arginfos, type_map)
E         File "cupy/core/_kernel.pyx", line 865, in cupy.core._kernel.ElementwiseKernel._get_elementwise_kernel
E           kern = _get_elementwise_kernel(
E         File "cupy/_util.pyx", line 59, in cupy._util.memoize.decorator.ret
E           result = f(*args, **kwargs)
E         File "cupy/core/_kernel.pyx", line 652, in cupy.core._kernel._get_elementwise_kernel
E           return _get_simple_elementwise_kernel(
E         File "cupy/core/_kernel.pyx", line 38, in cupy.core._kernel._get_simple_elementwise_kernel
E           cpdef function.Function _get_simple_elementwise_kernel(
E         File "cupy/core/_kernel.pyx", line 61, in cupy.core._kernel._get_simple_elementwise_kernel
E           module = compile_with_cache(module_code, options)
E         File "cupy/core/core.pyx", line 2021, in cupy.core.core.compile_with_cache
E           return cuda.compile_with_cache(
E         File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.t8hdvgF7FH/cupy/cupy/cuda/compiler.py", line 428, in compile_with_cache
E           return _compile_with_cache_hip(
E         File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.t8hdvgF7FH/cupy/cupy/cuda/compiler.py", line 829, in _compile_with_cache_hip
E           temp_path = tf.name
E         File "/home/kmaeh/.pyenv/versions/3.8.7/lib/python3.8/tempfile.py", line 491, in __exit__
E           result = self.file.__exit__(exc, value, tb)
E       OSError: [Errno 28] No space left on device

/home/kmaeh/.pyenv/versions/3.8.7/lib/python3.8/tempfile.py:491: AssertionError
----------------------------- Captured stdout call -----------------------------
dtype is <class 'numpy.float64'>
___________ TestPlace_param_5_{n_vals=1, shape=(4, 3, 2)}.test_place ___________

self = <<cupy_tests.indexing_tests.test_insert.TestPlace_param_5_{n_vals=1, shape=(4, 3, 2)} testMethod=test_place>  parameter: {'n_vals': 1, 'shape': (4, 3, 2)}>
xp = <module 'cupy' from '/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.t8hdvgF7FH/cupy/cupy/__init__.py'>
dtype = <class 'numpy.float64'>

    @testing.for_all_dtypes()
    @testing.numpy_cupy_array_equal()
    def test_place(self, xp, dtype):
        a = testing.shaped_arange(self.shape, xp, dtype)
        if self.n_vals == 0:
            mask = xp.zeros(self.shape, dtype=numpy.bool_)
        else:
            mask = testing.shaped_random(self.shape, xp, numpy.bool_)
        vals = testing.shaped_random((self.n_vals,), xp, dtype)
>       xp.place(a, mask, vals)

tests/cupy_tests/indexing_tests/test_insert.py:28: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
cupy/_indexing/insert.py:41: in place
    mask_indices = mask.ravel().nonzero()[0]  # may synchronize
cupy/core/core.pyx:770: in cupy.core.core.ndarray.nonzero
    cpdef tuple nonzero(self):
cupy/core/core.pyx:787: in cupy.core.core.ndarray.nonzero
    return _indexing._ndarray_nonzero(self)
cupy/core/_routines_indexing.pyx:59: in cupy.core._routines_indexing._ndarray_nonzero
    cdef ndarray dst = _ndarray_argwhere(self)
cupy/core/_routines_indexing.pyx:120: in cupy.core._routines_indexing._ndarray_argwhere
    _nonzero_kernel(nonzero, scan_index, dst)
cupy/core/_kernel.pyx:840: in cupy.core._kernel.ElementwiseKernel.__call__
    kern = self._get_elementwise_kernel(dev_id, arginfos, type_map)
cupy/core/_kernel.pyx:865: in cupy.core._kernel.ElementwiseKernel._get_elementwise_kernel
    kern = _get_elementwise_kernel(
cupy/_util.pyx:59: in cupy._util.memoize.decorator.ret
    result = f(*args, **kwargs)
cupy/core/_kernel.pyx:652: in cupy.core._kernel._get_elementwise_kernel
    return _get_simple_elementwise_kernel(
cupy/core/_kernel.pyx:38: in cupy.core._kernel._get_simple_elementwise_kernel
    cpdef function.Function _get_simple_elementwise_kernel(
cupy/core/_kernel.pyx:61: in cupy.core._kernel._get_simple_elementwise_kernel
    module = compile_with_cache(module_code, options)
cupy/core/core.pyx:2021: in cupy.core.core.compile_with_cache
    return cuda.compile_with_cache(
cupy/cuda/compiler.py:428: in compile_with_cache
    return _compile_with_cache_hip(
cupy/cuda/compiler.py:829: in _compile_with_cache_hip
    temp_path = tf.name
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <tempfile._TemporaryFileWrapper object at 0x7f5011702ee0>, exc = None
value = None, tb = None

    def __exit__(self, exc, value, tb):
>       result = self.file.__exit__(exc, value, tb)
E       AssertionError: Only cupy raises error
E       
E       Traceback (most recent call last):
E         File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.t8hdvgF7FH/cupy/cupy/testing/_helper.py", line 47, in _call_func
E           result = impl(self, *args, **kw)
E         File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.t8hdvgF7FH/cupy/tests/cupy_tests/indexing_tests/test_insert.py", line 28, in test_place
E           xp.place(a, mask, vals)
E         File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.t8hdvgF7FH/cupy/cupy/_indexing/insert.py", line 41, in place
E           mask_indices = mask.ravel().nonzero()[0]  # may synchronize
E         File "cupy/core/core.pyx", line 770, in cupy.core.core.ndarray.nonzero
E           cpdef tuple nonzero(self):
E         File "cupy/core/core.pyx", line 787, in cupy.core.core.ndarray.nonzero
E           return _indexing._ndarray_nonzero(self)
E         File "cupy/core/_routines_indexing.pyx", line 59, in cupy.core._routines_indexing._ndarray_nonzero
E           cdef ndarray dst = _ndarray_argwhere(self)
E         File "cupy/core/_routines_indexing.pyx", line 120, in cupy.core._routines_indexing._ndarray_argwhere
E           _nonzero_kernel(nonzero, scan_index, dst)
E         File "cupy/core/_kernel.pyx", line 840, in cupy.core._kernel.ElementwiseKernel.__call__
E           kern = self._get_elementwise_kernel(dev_id, arginfos, type_map)
E         File "cupy/core/_kernel.pyx", line 865, in cupy.core._kernel.ElementwiseKernel._get_elementwise_kernel
E           kern = _get_elementwise_kernel(
E         File "cupy/_util.pyx", line 59, in cupy._util.memoize.decorator.ret
E           result = f(*args, **kwargs)
E         File "cupy/core/_kernel.pyx", line 652, in cupy.core._kernel._get_elementwise_kernel
E           return _get_simple_elementwise_kernel(
E         File "cupy/core/_kernel.pyx", line 38, in cupy.core._kernel._get_simple_elementwise_kernel
E           cpdef function.Function _get_simple_elementwise_kernel(
E         File "cupy/core/_kernel.pyx", line 61, in cupy.core._kernel._get_simple_elementwise_kernel
E           module = compile_with_cache(module_code, options)
E         File "cupy/core/core.pyx", line 2021, in cupy.core.core.compile_with_cache
E           return cuda.compile_with_cache(
E         File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.t8hdvgF7FH/cupy/cupy/cuda/compiler.py", line 428, in compile_with_cache
E           return _compile_with_cache_hip(
E         File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.t8hdvgF7FH/cupy/cupy/cuda/compiler.py", line 829, in _compile_with_cache_hip
E           temp_path = tf.name
E         File "/home/kmaeh/.pyenv/versions/3.8.7/lib/python3.8/tempfile.py", line 491, in __exit__
E           result = self.file.__exit__(exc, value, tb)
E       OSError: [Errno 28] No space left on device

/home/kmaeh/.pyenv/versions/3.8.7/lib/python3.8/tempfile.py:491: AssertionError
----------------------------- Captured stdout call -----------------------------
dtype is <class 'numpy.float64'>
_____________ TestPlace_param_6_{n_vals=3, shape=(7,)}.test_place ______________

self = <<cupy_tests.indexing_tests.test_insert.TestPlace_param_6_{n_vals=3, shape=(7,)} testMethod=test_place>  parameter: {'n_vals': 3, 'shape': (7,)}>
xp = <module 'cupy' from '/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.t8hdvgF7FH/cupy/cupy/__init__.py'>
dtype = <class 'numpy.float64'>

    @testing.for_all_dtypes()
    @testing.numpy_cupy_array_equal()
    def test_place(self, xp, dtype):
        a = testing.shaped_arange(self.shape, xp, dtype)
        if self.n_vals == 0:
            mask = xp.zeros(self.shape, dtype=numpy.bool_)
        else:
            mask = testing.shaped_random(self.shape, xp, numpy.bool_)
        vals = testing.shaped_random((self.n_vals,), xp, dtype)
>       xp.place(a, mask, vals)

tests/cupy_tests/indexing_tests/test_insert.py:28: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
cupy/_indexing/insert.py:41: in place
    mask_indices = mask.ravel().nonzero()[0]  # may synchronize
cupy/core/core.pyx:770: in cupy.core.core.ndarray.nonzero
    cpdef tuple nonzero(self):
cupy/core/core.pyx:787: in cupy.core.core.ndarray.nonzero
    return _indexing._ndarray_nonzero(self)
cupy/core/_routines_indexing.pyx:59: in cupy.core._routines_indexing._ndarray_nonzero
    cdef ndarray dst = _ndarray_argwhere(self)
cupy/core/_routines_indexing.pyx:120: in cupy.core._routines_indexing._ndarray_argwhere
    _nonzero_kernel(nonzero, scan_index, dst)
cupy/core/_kernel.pyx:840: in cupy.core._kernel.ElementwiseKernel.__call__
    kern = self._get_elementwise_kernel(dev_id, arginfos, type_map)
cupy/core/_kernel.pyx:865: in cupy.core._kernel.ElementwiseKernel._get_elementwise_kernel
    kern = _get_elementwise_kernel(
cupy/_util.pyx:59: in cupy._util.memoize.decorator.ret
    result = f(*args, **kwargs)
cupy/core/_kernel.pyx:652: in cupy.core._kernel._get_elementwise_kernel
    return _get_simple_elementwise_kernel(
cupy/core/_kernel.pyx:38: in cupy.core._kernel._get_simple_elementwise_kernel
    cpdef function.Function _get_simple_elementwise_kernel(
cupy/core/_kernel.pyx:61: in cupy.core._kernel._get_simple_elementwise_kernel
    module = compile_with_cache(module_code, options)
cupy/core/core.pyx:2021: in cupy.core.core.compile_with_cache
    return cuda.compile_with_cache(
cupy/cuda/compiler.py:428: in compile_with_cache
    return _compile_with_cache_hip(
cupy/cuda/compiler.py:829: in _compile_with_cache_hip
    temp_path = tf.name
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <tempfile._TemporaryFileWrapper object at 0x7f501093f370>, exc = None
value = None, tb = None

    def __exit__(self, exc, value, tb):
>       result = self.file.__exit__(exc, value, tb)
E       AssertionError: Only cupy raises error
E       
E       Traceback (most recent call last):
E         File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.t8hdvgF7FH/cupy/cupy/testing/_helper.py", line 47, in _call_func
E           result = impl(self, *args, **kw)
E         File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.t8hdvgF7FH/cupy/tests/cupy_tests/indexing_tests/test_insert.py", line 28, in test_place
E           xp.place(a, mask, vals)
E         File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.t8hdvgF7FH/cupy/cupy/_indexing/insert.py", line 41, in place
E           mask_indices = mask.ravel().nonzero()[0]  # may synchronize
E         File "cupy/core/core.pyx", line 770, in cupy.core.core.ndarray.nonzero
E           cpdef tuple nonzero(self):
E         File "cupy/core/core.pyx", line 787, in cupy.core.core.ndarray.nonzero
E           return _indexing._ndarray_nonzero(self)
E         File "cupy/core/_routines_indexing.pyx", line 59, in cupy.core._routines_indexing._ndarray_nonzero
E           cdef ndarray dst = _ndarray_argwhere(self)
E         File "cupy/core/_routines_indexing.pyx", line 120, in cupy.core._routines_indexing._ndarray_argwhere
E           _nonzero_kernel(nonzero, scan_index, dst)
E         File "cupy/core/_kernel.pyx", line 840, in cupy.core._kernel.ElementwiseKernel.__call__
E           kern = self._get_elementwise_kernel(dev_id, arginfos, type_map)
E         File "cupy/core/_kernel.pyx", line 865, in cupy.core._kernel.ElementwiseKernel._get_elementwise_kernel
E           kern = _get_elementwise_kernel(
E         File "cupy/_util.pyx", line 59, in cupy._util.memoize.decorator.ret
E           result = f(*args, **kwargs)
E         File "cupy/core/_kernel.pyx", line 652, in cupy.core._kernel._get_elementwise_kernel
E           return _get_simple_elementwise_kernel(
E         File "cupy/core/_kernel.pyx", line 38, in cupy.core._kernel._get_simple_elementwise_kernel
E           cpdef function.Function _get_simple_elementwise_kernel(
E         File "cupy/core/_kernel.pyx", line 61, in cupy.core._kernel._get_simple_elementwise_kernel
E           module = compile_with_cache(module_code, options)
E         File "cupy/core/core.pyx", line 2021, in cupy.core.core.compile_with_cache
E           return cuda.compile_with_cache(
E         File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.t8hdvgF7FH/cupy/cupy/cuda/compiler.py", line 428, in compile_with_cache
E           return _compile_with_cache_hip(
E         File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.t8hdvgF7FH/cupy/cupy/cuda/compiler.py", line 829, in _compile_with_cache_hip
E           temp_path = tf.name
E         File "/home/kmaeh/.pyenv/versions/3.8.7/lib/python3.8/tempfile.py", line 491, in __exit__
E           result = self.file.__exit__(exc, value, tb)
E       OSError: [Errno 28] No space left on device

/home/kmaeh/.pyenv/versions/3.8.7/lib/python3.8/tempfile.py:491: AssertionError
----------------------------- Captured stdout call -----------------------------
dtype is <class 'numpy.float64'>
____________ TestPlace_param_7_{n_vals=3, shape=(2, 3)}.test_place _____________

self = <<cupy_tests.indexing_tests.test_insert.TestPlace_param_7_{n_vals=3, shape=(2, 3)} testMethod=test_place>  parameter: {'n_vals': 3, 'shape': (2, 3)}>
xp = <module 'cupy' from '/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.t8hdvgF7FH/cupy/cupy/__init__.py'>
dtype = <class 'numpy.float64'>

    @testing.for_all_dtypes()
    @testing.numpy_cupy_array_equal()
    def test_place(self, xp, dtype):
        a = testing.shaped_arange(self.shape, xp, dtype)
        if self.n_vals == 0:
            mask = xp.zeros(self.shape, dtype=numpy.bool_)
        else:
            mask = testing.shaped_random(self.shape, xp, numpy.bool_)
        vals = testing.shaped_random((self.n_vals,), xp, dtype)
>       xp.place(a, mask, vals)

tests/cupy_tests/indexing_tests/test_insert.py:28: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
cupy/_indexing/insert.py:41: in place
    mask_indices = mask.ravel().nonzero()[0]  # may synchronize
cupy/core/core.pyx:770: in cupy.core.core.ndarray.nonzero
    cpdef tuple nonzero(self):
cupy/core/core.pyx:787: in cupy.core.core.ndarray.nonzero
    return _indexing._ndarray_nonzero(self)
cupy/core/_routines_indexing.pyx:59: in cupy.core._routines_indexing._ndarray_nonzero
    cdef ndarray dst = _ndarray_argwhere(self)
cupy/core/_routines_indexing.pyx:120: in cupy.core._routines_indexing._ndarray_argwhere
    _nonzero_kernel(nonzero, scan_index, dst)
cupy/core/_kernel.pyx:840: in cupy.core._kernel.ElementwiseKernel.__call__
    kern = self._get_elementwise_kernel(dev_id, arginfos, type_map)
cupy/core/_kernel.pyx:865: in cupy.core._kernel.ElementwiseKernel._get_elementwise_kernel
    kern = _get_elementwise_kernel(
cupy/_util.pyx:59: in cupy._util.memoize.decorator.ret
    result = f(*args, **kwargs)
cupy/core/_kernel.pyx:652: in cupy.core._kernel._get_elementwise_kernel
    return _get_simple_elementwise_kernel(
cupy/core/_kernel.pyx:38: in cupy.core._kernel._get_simple_elementwise_kernel
    cpdef function.Function _get_simple_elementwise_kernel(
cupy/core/_kernel.pyx:61: in cupy.core._kernel._get_simple_elementwise_kernel
    module = compile_with_cache(module_code, options)
cupy/core/core.pyx:2021: in cupy.core.core.compile_with_cache
    return cuda.compile_with_cache(
cupy/cuda/compiler.py:428: in compile_with_cache
    return _compile_with_cache_hip(
cupy/cuda/compiler.py:829: in _compile_with_cache_hip
    temp_path = tf.name
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <tempfile._TemporaryFileWrapper object at 0x7f5010ea1c40>, exc = None
value = None, tb = None

    def __exit__(self, exc, value, tb):
>       result = self.file.__exit__(exc, value, tb)
E       AssertionError: Only cupy raises error
E       
E       Traceback (most recent call last):
E         File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.t8hdvgF7FH/cupy/cupy/testing/_helper.py", line 47, in _call_func
E           result = impl(self, *args, **kw)
E         File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.t8hdvgF7FH/cupy/tests/cupy_tests/indexing_tests/test_insert.py", line 28, in test_place
E           xp.place(a, mask, vals)
E         File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.t8hdvgF7FH/cupy/cupy/_indexing/insert.py", line 41, in place
E           mask_indices = mask.ravel().nonzero()[0]  # may synchronize
E         File "cupy/core/core.pyx", line 770, in cupy.core.core.ndarray.nonzero
E           cpdef tuple nonzero(self):
E         File "cupy/core/core.pyx", line 787, in cupy.core.core.ndarray.nonzero
E           return _indexing._ndarray_nonzero(self)
E         File "cupy/core/_routines_indexing.pyx", line 59, in cupy.core._routines_indexing._ndarray_nonzero
E           cdef ndarray dst = _ndarray_argwhere(self)
E         File "cupy/core/_routines_indexing.pyx", line 120, in cupy.core._routines_indexing._ndarray_argwhere
E           _nonzero_kernel(nonzero, scan_index, dst)
E         File "cupy/core/_kernel.pyx", line 840, in cupy.core._kernel.ElementwiseKernel.__call__
E           kern = self._get_elementwise_kernel(dev_id, arginfos, type_map)
E         File "cupy/core/_kernel.pyx", line 865, in cupy.core._kernel.ElementwiseKernel._get_elementwise_kernel
E           kern = _get_elementwise_kernel(
E         File "cupy/_util.pyx", line 59, in cupy._util.memoize.decorator.ret
E           result = f(*args, **kwargs)
E         File "cupy/core/_kernel.pyx", line 652, in cupy.core._kernel._get_elementwise_kernel
E           return _get_simple_elementwise_kernel(
E         File "cupy/core/_kernel.pyx", line 38, in cupy.core._kernel._get_simple_elementwise_kernel
E           cpdef function.Function _get_simple_elementwise_kernel(
E         File "cupy/core/_kernel.pyx", line 61, in cupy.core._kernel._get_simple_elementwise_kernel
E           module = compile_with_cache(module_code, options)
E         File "cupy/core/core.pyx", line 2021, in cupy.core.core.compile_with_cache
E           return cuda.compile_with_cache(
E         File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.t8hdvgF7FH/cupy/cupy/cuda/compiler.py", line 428, in compile_with_cache
E           return _compile_with_cache_hip(
E         File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.t8hdvgF7FH/cupy/cupy/cuda/compiler.py", line 829, in _compile_with_cache_hip
E           temp_path = tf.name
E         File "/home/kmaeh/.pyenv/versions/3.8.7/lib/python3.8/tempfile.py", line 491, in __exit__
E           result = self.file.__exit__(exc, value, tb)
E       OSError: [Errno 28] No space left on device

/home/kmaeh/.pyenv/versions/3.8.7/lib/python3.8/tempfile.py:491: AssertionError
----------------------------- Captured stdout call -----------------------------
dtype is <class 'numpy.float64'>
___________ TestPlace_param_8_{n_vals=3, shape=(4, 3, 2)}.test_place ___________

self = <<cupy_tests.indexing_tests.test_insert.TestPlace_param_8_{n_vals=3, shape=(4, 3, 2)} testMethod=test_place>  parameter: {'n_vals': 3, 'shape': (4, 3, 2)}>
xp = <module 'cupy' from '/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.t8hdvgF7FH/cupy/cupy/__init__.py'>
dtype = <class 'numpy.float64'>

    @testing.for_all_dtypes()
    @testing.numpy_cupy_array_equal()
    def test_place(self, xp, dtype):
        a = testing.shaped_arange(self.shape, xp, dtype)
        if self.n_vals == 0:
            mask = xp.zeros(self.shape, dtype=numpy.bool_)
        else:
            mask = testing.shaped_random(self.shape, xp, numpy.bool_)
        vals = testing.shaped_random((self.n_vals,), xp, dtype)
>       xp.place(a, mask, vals)

tests/cupy_tests/indexing_tests/test_insert.py:28: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
cupy/_indexing/insert.py:41: in place
    mask_indices = mask.ravel().nonzero()[0]  # may synchronize
cupy/core/core.pyx:770: in cupy.core.core.ndarray.nonzero
    cpdef tuple nonzero(self):
cupy/core/core.pyx:787: in cupy.core.core.ndarray.nonzero
    return _indexing._ndarray_nonzero(self)
cupy/core/_routines_indexing.pyx:59: in cupy.core._routines_indexing._ndarray_nonzero
    cdef ndarray dst = _ndarray_argwhere(self)
cupy/core/_routines_indexing.pyx:120: in cupy.core._routines_indexing._ndarray_argwhere
    _nonzero_kernel(nonzero, scan_index, dst)
cupy/core/_kernel.pyx:840: in cupy.core._kernel.ElementwiseKernel.__call__
    kern = self._get_elementwise_kernel(dev_id, arginfos, type_map)
cupy/core/_kernel.pyx:865: in cupy.core._kernel.ElementwiseKernel._get_elementwise_kernel
    kern = _get_elementwise_kernel(
cupy/_util.pyx:59: in cupy._util.memoize.decorator.ret
    result = f(*args, **kwargs)
cupy/core/_kernel.pyx:652: in cupy.core._kernel._get_elementwise_kernel
    return _get_simple_elementwise_kernel(
cupy/core/_kernel.pyx:38: in cupy.core._kernel._get_simple_elementwise_kernel
    cpdef function.Function _get_simple_elementwise_kernel(
cupy/core/_kernel.pyx:61: in cupy.core._kernel._get_simple_elementwise_kernel
    module = compile_with_cache(module_code, options)
cupy/core/core.pyx:2021: in cupy.core.core.compile_with_cache
    return cuda.compile_with_cache(
cupy/cuda/compiler.py:428: in compile_with_cache
    return _compile_with_cache_hip(
cupy/cuda/compiler.py:829: in _compile_with_cache_hip
    temp_path = tf.name
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <tempfile._TemporaryFileWrapper object at 0x7f5010e961c0>, exc = None
value = None, tb = None

    def __exit__(self, exc, value, tb):
>       result = self.file.__exit__(exc, value, tb)
E       AssertionError: Only cupy raises error
E       
E       Traceback (most recent call last):
E         File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.t8hdvgF7FH/cupy/cupy/testing/_helper.py", line 47, in _call_func
E           result = impl(self, *args, **kw)
E         File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.t8hdvgF7FH/cupy/tests/cupy_tests/indexing_tests/test_insert.py", line 28, in test_place
E           xp.place(a, mask, vals)
E         File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.t8hdvgF7FH/cupy/cupy/_indexing/insert.py", line 41, in place
E           mask_indices = mask.ravel().nonzero()[0]  # may synchronize
E         File "cupy/core/core.pyx", line 770, in cupy.core.core.ndarray.nonzero
E           cpdef tuple nonzero(self):
E         File "cupy/core/core.pyx", line 787, in cupy.core.core.ndarray.nonzero
E           return _indexing._ndarray_nonzero(self)
E         File "cupy/core/_routines_indexing.pyx", line 59, in cupy.core._routines_indexing._ndarray_nonzero
E           cdef ndarray dst = _ndarray_argwhere(self)
E         File "cupy/core/_routines_indexing.pyx", line 120, in cupy.core._routines_indexing._ndarray_argwhere
E           _nonzero_kernel(nonzero, scan_index, dst)
E         File "cupy/core/_kernel.pyx", line 840, in cupy.core._kernel.ElementwiseKernel.__call__
E           kern = self._get_elementwise_kernel(dev_id, arginfos, type_map)
E         File "cupy/core/_kernel.pyx", line 865, in cupy.core._kernel.ElementwiseKernel._get_elementwise_kernel
E           kern = _get_elementwise_kernel(
E         File "cupy/_util.pyx", line 59, in cupy._util.memoize.decorator.ret
E           result = f(*args, **kwargs)
E         File "cupy/core/_kernel.pyx", line 652, in cupy.core._kernel._get_elementwise_kernel
E           return _get_simple_elementwise_kernel(
E         File "cupy/core/_kernel.pyx", line 38, in cupy.core._kernel._get_simple_elementwise_kernel
E           cpdef function.Function _get_simple_elementwise_kernel(
E         File "cupy/core/_kernel.pyx", line 61, in cupy.core._kernel._get_simple_elementwise_kernel
E           module = compile_with_cache(module_code, options)
E         File "cupy/core/core.pyx", line 2021, in cupy.core.core.compile_with_cache
E           return cuda.compile_with_cache(
E         File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.t8hdvgF7FH/cupy/cupy/cuda/compiler.py", line 428, in compile_with_cache
E           return _compile_with_cache_hip(
E         File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.t8hdvgF7FH/cupy/cupy/cuda/compiler.py", line 829, in _compile_with_cache_hip
E           temp_path = tf.name
E         File "/home/kmaeh/.pyenv/versions/3.8.7/lib/python3.8/tempfile.py", line 491, in __exit__
E           result = self.file.__exit__(exc, value, tb)
E       OSError: [Errno 28] No space left on device

/home/kmaeh/.pyenv/versions/3.8.7/lib/python3.8/tempfile.py:491: AssertionError
----------------------------- Captured stdout call -----------------------------
dtype is <class 'numpy.float64'>
_____________ TestPlace_param_9_{n_vals=15, shape=(7,)}.test_place _____________

self = <<cupy_tests.indexing_tests.test_insert.TestPlace_param_9_{n_vals=15, shape=(7,)} testMethod=test_place>  parameter: {'n_vals': 15, 'shape': (7,)}>
xp = <module 'cupy' from '/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.t8hdvgF7FH/cupy/cupy/__init__.py'>
dtype = <class 'numpy.float64'>

    @testing.for_all_dtypes()
    @testing.numpy_cupy_array_equal()
    def test_place(self, xp, dtype):
        a = testing.shaped_arange(self.shape, xp, dtype)
        if self.n_vals == 0:
            mask = xp.zeros(self.shape, dtype=numpy.bool_)
        else:
            mask = testing.shaped_random(self.shape, xp, numpy.bool_)
        vals = testing.shaped_random((self.n_vals,), xp, dtype)
>       xp.place(a, mask, vals)

tests/cupy_tests/indexing_tests/test_insert.py:28: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
cupy/_indexing/insert.py:41: in place
    mask_indices = mask.ravel().nonzero()[0]  # may synchronize
cupy/core/core.pyx:770: in cupy.core.core.ndarray.nonzero
    cpdef tuple nonzero(self):
cupy/core/core.pyx:787: in cupy.core.core.ndarray.nonzero
    return _indexing._ndarray_nonzero(self)
cupy/core/_routines_indexing.pyx:59: in cupy.core._routines_indexing._ndarray_nonzero
    cdef ndarray dst = _ndarray_argwhere(self)
cupy/core/_routines_indexing.pyx:120: in cupy.core._routines_indexing._ndarray_argwhere
    _nonzero_kernel(nonzero, scan_index, dst)
cupy/core/_kernel.pyx:840: in cupy.core._kernel.ElementwiseKernel.__call__
    kern = self._get_elementwise_kernel(dev_id, arginfos, type_map)
cupy/core/_kernel.pyx:865: in cupy.core._kernel.ElementwiseKernel._get_elementwise_kernel
    kern = _get_elementwise_kernel(
cupy/_util.pyx:59: in cupy._util.memoize.decorator.ret
    result = f(*args, **kwargs)
cupy/core/_kernel.pyx:652: in cupy.core._kernel._get_elementwise_kernel
    return _get_simple_elementwise_kernel(
cupy/core/_kernel.pyx:38: in cupy.core._kernel._get_simple_elementwise_kernel
    cpdef function.Function _get_simple_elementwise_kernel(
cupy/core/_kernel.pyx:61: in cupy.core._kernel._get_simple_elementwise_kernel
    module = compile_with_cache(module_code, options)
cupy/core/core.pyx:2021: in cupy.core.core.compile_with_cache
    return cuda.compile_with_cache(
cupy/cuda/compiler.py:428: in compile_with_cache
    return _compile_with_cache_hip(
cupy/cuda/compiler.py:829: in _compile_with_cache_hip
    temp_path = tf.name
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <tempfile._TemporaryFileWrapper object at 0x7f5010e38f10>, exc = None
value = None, tb = None

    def __exit__(self, exc, value, tb):
>       result = self.file.__exit__(exc, value, tb)
E       AssertionError: Only cupy raises error
E       
E       Traceback (most recent call last):
E         File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.t8hdvgF7FH/cupy/cupy/testing/_helper.py", line 47, in _call_func
E           result = impl(self, *args, **kw)
E         File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.t8hdvgF7FH/cupy/tests/cupy_tests/indexing_tests/test_insert.py", line 28, in test_place
E           xp.place(a, mask, vals)
E         File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.t8hdvgF7FH/cupy/cupy/_indexing/insert.py", line 41, in place
E           mask_indices = mask.ravel().nonzero()[0]  # may synchronize
E         File "cupy/core/core.pyx", line 770, in cupy.core.core.ndarray.nonzero
E           cpdef tuple nonzero(self):
E         File "cupy/core/core.pyx", line 787, in cupy.core.core.ndarray.nonzero
E           return _indexing._ndarray_nonzero(self)
E         File "cupy/core/_routines_indexing.pyx", line 59, in cupy.core._routines_indexing._ndarray_nonzero
E           cdef ndarray dst = _ndarray_argwhere(self)
E         File "cupy/core/_routines_indexing.pyx", line 120, in cupy.core._routines_indexing._ndarray_argwhere
E           _nonzero_kernel(nonzero, scan_index, dst)
E         File "cupy/core/_kernel.pyx", line 840, in cupy.core._kernel.ElementwiseKernel.__call__
E           kern = self._get_elementwise_kernel(dev_id, arginfos, type_map)
E         File "cupy/core/_kernel.pyx", line 865, in cupy.core._kernel.ElementwiseKernel._get_elementwise_kernel
E           kern = _get_elementwise_kernel(
E         File "cupy/_util.pyx", line 59, in cupy._util.memoize.decorator.ret
E           result = f(*args, **kwargs)
E         File "cupy/core/_kernel.pyx", line 652, in cupy.core._kernel._get_elementwise_kernel
E           return _get_simple_elementwise_kernel(
E         File "cupy/core/_kernel.pyx", line 38, in cupy.core._kernel._get_simple_elementwise_kernel
E           cpdef function.Function _get_simple_elementwise_kernel(
E         File "cupy/core/_kernel.pyx", line 61, in cupy.core._kernel._get_simple_elementwise_kernel
E           module = compile_with_cache(module_code, options)
E         File "cupy/core/core.pyx", line 2021, in cupy.core.core.compile_with_cache
E           return cuda.compile_with_cache(
E         File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.t8hdvgF7FH/cupy/cupy/cuda/compiler.py", line 428, in compile_with_cache
E           return _compile_with_cache_hip(
E         File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.t8hdvgF7FH/cupy/cupy/cuda/compiler.py", line 829, in _compile_with_cache_hip
E           temp_path = tf.name
E         File "/home/kmaeh/.pyenv/versions/3.8.7/lib/python3.8/tempfile.py", line 491, in __exit__
E           result = self.file.__exit__(exc, value, tb)
E       OSError: [Errno 28] No space left on device

/home/kmaeh/.pyenv/versions/3.8.7/lib/python3.8/tempfile.py:491: AssertionError
----------------------------- Captured stdout call -----------------------------
dtype is <class 'numpy.float64'>
___________ TestPlace_param_10_{n_vals=15, shape=(2, 3)}.test_place ____________

self = <<cupy_tests.indexing_tests.test_insert.TestPlace_param_10_{n_vals=15, shape=(2, 3)} testMethod=test_place>  parameter: {'n_vals': 15, 'shape': (2, 3)}>
xp = <module 'cupy' from '/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.t8hdvgF7FH/cupy/cupy/__init__.py'>
dtype = <class 'numpy.float64'>

    @testing.for_all_dtypes()
    @testing.numpy_cupy_array_equal()
    def test_place(self, xp, dtype):
        a = testing.shaped_arange(self.shape, xp, dtype)
        if self.n_vals == 0:
            mask = xp.zeros(self.shape, dtype=numpy.bool_)
        else:
            mask = testing.shaped_random(self.shape, xp, numpy.bool_)
        vals = testing.shaped_random((self.n_vals,), xp, dtype)
>       xp.place(a, mask, vals)

tests/cupy_tests/indexing_tests/test_insert.py:28: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
cupy/_indexing/insert.py:41: in place
    mask_indices = mask.ravel().nonzero()[0]  # may synchronize
cupy/core/core.pyx:770: in cupy.core.core.ndarray.nonzero
    cpdef tuple nonzero(self):
cupy/core/core.pyx:787: in cupy.core.core.ndarray.nonzero
    return _indexing._ndarray_nonzero(self)
cupy/core/_routines_indexing.pyx:59: in cupy.core._routines_indexing._ndarray_nonzero
    cdef ndarray dst = _ndarray_argwhere(self)
cupy/core/_routines_indexing.pyx:120: in cupy.core._routines_indexing._ndarray_argwhere
    _nonzero_kernel(nonzero, scan_index, dst)
cupy/core/_kernel.pyx:840: in cupy.core._kernel.ElementwiseKernel.__call__
    kern = self._get_elementwise_kernel(dev_id, arginfos, type_map)
cupy/core/_kernel.pyx:865: in cupy.core._kernel.ElementwiseKernel._get_elementwise_kernel
    kern = _get_elementwise_kernel(
cupy/_util.pyx:59: in cupy._util.memoize.decorator.ret
    result = f(*args, **kwargs)
cupy/core/_kernel.pyx:652: in cupy.core._kernel._get_elementwise_kernel
    return _get_simple_elementwise_kernel(
cupy/core/_kernel.pyx:38: in cupy.core._kernel._get_simple_elementwise_kernel
    cpdef function.Function _get_simple_elementwise_kernel(
cupy/core/_kernel.pyx:61: in cupy.core._kernel._get_simple_elementwise_kernel
    module = compile_with_cache(module_code, options)
cupy/core/core.pyx:2021: in cupy.core.core.compile_with_cache
    return cuda.compile_with_cache(
cupy/cuda/compiler.py:428: in compile_with_cache
    return _compile_with_cache_hip(
cupy/cuda/compiler.py:829: in _compile_with_cache_hip
    temp_path = tf.name
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <tempfile._TemporaryFileWrapper object at 0x7f50109ebb80>, exc = None
value = None, tb = None

    def __exit__(self, exc, value, tb):
>       result = self.file.__exit__(exc, value, tb)
E       AssertionError: Only cupy raises error
E       
E       Traceback (most recent call last):
E         File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.t8hdvgF7FH/cupy/cupy/testing/_helper.py", line 47, in _call_func
E           result = impl(self, *args, **kw)
E         File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.t8hdvgF7FH/cupy/tests/cupy_tests/indexing_tests/test_insert.py", line 28, in test_place
E           xp.place(a, mask, vals)
E         File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.t8hdvgF7FH/cupy/cupy/_indexing/insert.py", line 41, in place
E           mask_indices = mask.ravel().nonzero()[0]  # may synchronize
E         File "cupy/core/core.pyx", line 770, in cupy.core.core.ndarray.nonzero
E           cpdef tuple nonzero(self):
E         File "cupy/core/core.pyx", line 787, in cupy.core.core.ndarray.nonzero
E           return _indexing._ndarray_nonzero(self)
E         File "cupy/core/_routines_indexing.pyx", line 59, in cupy.core._routines_indexing._ndarray_nonzero
E           cdef ndarray dst = _ndarray_argwhere(self)
E         File "cupy/core/_routines_indexing.pyx", line 120, in cupy.core._routines_indexing._ndarray_argwhere
E           _nonzero_kernel(nonzero, scan_index, dst)
E         File "cupy/core/_kernel.pyx", line 840, in cupy.core._kernel.ElementwiseKernel.__call__
E           kern = self._get_elementwise_kernel(dev_id, arginfos, type_map)
E         File "cupy/core/_kernel.pyx", line 865, in cupy.core._kernel.ElementwiseKernel._get_elementwise_kernel
E           kern = _get_elementwise_kernel(
E         File "cupy/_util.pyx", line 59, in cupy._util.memoize.decorator.ret
E           result = f(*args, **kwargs)
E         File "cupy/core/_kernel.pyx", line 652, in cupy.core._kernel._get_elementwise_kernel
E           return _get_simple_elementwise_kernel(
E         File "cupy/core/_kernel.pyx", line 38, in cupy.core._kernel._get_simple_elementwise_kernel
E           cpdef function.Function _get_simple_elementwise_kernel(
E         File "cupy/core/_kernel.pyx", line 61, in cupy.core._kernel._get_simple_elementwise_kernel
E           module = compile_with_cache(module_code, options)
E         File "cupy/core/core.pyx", line 2021, in cupy.core.core.compile_with_cache
E           return cuda.compile_with_cache(
E         File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.t8hdvgF7FH/cupy/cupy/cuda/compiler.py", line 428, in compile_with_cache
E           return _compile_with_cache_hip(
E         File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.t8hdvgF7FH/cupy/cupy/cuda/compiler.py", line 829, in _compile_with_cache_hip
E           temp_path = tf.name
E         File "/home/kmaeh/.pyenv/versions/3.8.7/lib/python3.8/tempfile.py", line 491, in __exit__
E           result = self.file.__exit__(exc, value, tb)
E       OSError: [Errno 28] No space left on device

/home/kmaeh/.pyenv/versions/3.8.7/lib/python3.8/tempfile.py:491: AssertionError
----------------------------- Captured stdout call -----------------------------
dtype is <class 'numpy.float64'>
__________ TestPlace_param_11_{n_vals=15, shape=(4, 3, 2)}.test_place __________

self = <<cupy_tests.indexing_tests.test_insert.TestPlace_param_11_{n_vals=15, shape=(4, 3, 2)} testMethod=test_place>  parameter: {'n_vals': 15, 'shape': (4, 3, 2)}>
xp = <module 'cupy' from '/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.t8hdvgF7FH/cupy/cupy/__init__.py'>
dtype = <class 'numpy.float64'>

    @testing.for_all_dtypes()
    @testing.numpy_cupy_array_equal()
    def test_place(self, xp, dtype):
        a = testing.shaped_arange(self.shape, xp, dtype)
        if self.n_vals == 0:
            mask = xp.zeros(self.shape, dtype=numpy.bool_)
        else:
            mask = testing.shaped_random(self.shape, xp, numpy.bool_)
        vals = testing.shaped_random((self.n_vals,), xp, dtype)
>       xp.place(a, mask, vals)

tests/cupy_tests/indexing_tests/test_insert.py:28: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
cupy/_indexing/insert.py:41: in place
    mask_indices = mask.ravel().nonzero()[0]  # may synchronize
cupy/core/core.pyx:770: in cupy.core.core.ndarray.nonzero
    cpdef tuple nonzero(self):
cupy/core/core.pyx:787: in cupy.core.core.ndarray.nonzero
    return _indexing._ndarray_nonzero(self)
cupy/core/_routines_indexing.pyx:59: in cupy.core._routines_indexing._ndarray_nonzero
    cdef ndarray dst = _ndarray_argwhere(self)
cupy/core/_routines_indexing.pyx:120: in cupy.core._routines_indexing._ndarray_argwhere
    _nonzero_kernel(nonzero, scan_index, dst)
cupy/core/_kernel.pyx:840: in cupy.core._kernel.ElementwiseKernel.__call__
    kern = self._get_elementwise_kernel(dev_id, arginfos, type_map)
cupy/core/_kernel.pyx:865: in cupy.core._kernel.ElementwiseKernel._get_elementwise_kernel
    kern = _get_elementwise_kernel(
cupy/_util.pyx:59: in cupy._util.memoize.decorator.ret
    result = f(*args, **kwargs)
cupy/core/_kernel.pyx:652: in cupy.core._kernel._get_elementwise_kernel
    return _get_simple_elementwise_kernel(
cupy/core/_kernel.pyx:38: in cupy.core._kernel._get_simple_elementwise_kernel
    cpdef function.Function _get_simple_elementwise_kernel(
cupy/core/_kernel.pyx:61: in cupy.core._kernel._get_simple_elementwise_kernel
    module = compile_with_cache(module_code, options)
cupy/core/core.pyx:2021: in cupy.core.core.compile_with_cache
    return cuda.compile_with_cache(
cupy/cuda/compiler.py:428: in compile_with_cache
    return _compile_with_cache_hip(
cupy/cuda/compiler.py:829: in _compile_with_cache_hip
    temp_path = tf.name
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <tempfile._TemporaryFileWrapper object at 0x7f5010ea13d0>, exc = None
value = None, tb = None

    def __exit__(self, exc, value, tb):
>       result = self.file.__exit__(exc, value, tb)
E       AssertionError: Only cupy raises error
E       
E       Traceback (most recent call last):
E         File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.t8hdvgF7FH/cupy/cupy/testing/_helper.py", line 47, in _call_func
E           result = impl(self, *args, **kw)
E         File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.t8hdvgF7FH/cupy/tests/cupy_tests/indexing_tests/test_insert.py", line 28, in test_place
E           xp.place(a, mask, vals)
E         File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.t8hdvgF7FH/cupy/cupy/_indexing/insert.py", line 41, in place
E           mask_indices = mask.ravel().nonzero()[0]  # may synchronize
E         File "cupy/core/core.pyx", line 770, in cupy.core.core.ndarray.nonzero
E           cpdef tuple nonzero(self):
E         File "cupy/core/core.pyx", line 787, in cupy.core.core.ndarray.nonzero
E           return _indexing._ndarray_nonzero(self)
E         File "cupy/core/_routines_indexing.pyx", line 59, in cupy.core._routines_indexing._ndarray_nonzero
E           cdef ndarray dst = _ndarray_argwhere(self)
E         File "cupy/core/_routines_indexing.pyx", line 120, in cupy.core._routines_indexing._ndarray_argwhere
E           _nonzero_kernel(nonzero, scan_index, dst)
E         File "cupy/core/_kernel.pyx", line 840, in cupy.core._kernel.ElementwiseKernel.__call__
E           kern = self._get_elementwise_kernel(dev_id, arginfos, type_map)
E         File "cupy/core/_kernel.pyx", line 865, in cupy.core._kernel.ElementwiseKernel._get_elementwise_kernel
E           kern = _get_elementwise_kernel(
E         File "cupy/_util.pyx", line 59, in cupy._util.memoize.decorator.ret
E           result = f(*args, **kwargs)
E         File "cupy/core/_kernel.pyx", line 652, in cupy.core._kernel._get_elementwise_kernel
E           return _get_simple_elementwise_kernel(
E         File "cupy/core/_kernel.pyx", line 38, in cupy.core._kernel._get_simple_elementwise_kernel
E           cpdef function.Function _get_simple_elementwise_kernel(
E         File "cupy/core/_kernel.pyx", line 61, in cupy.core._kernel._get_simple_elementwise_kernel
E           module = compile_with_cache(module_code, options)
E         File "cupy/core/core.pyx", line 2021, in cupy.core.core.compile_with_cache
E           return cuda.compile_with_cache(
E         File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.t8hdvgF7FH/cupy/cupy/cuda/compiler.py", line 428, in compile_with_cache
E           return _compile_with_cache_hip(
E         File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.t8hdvgF7FH/cupy/cupy/cuda/compiler.py", line 829, in _compile_with_cache_hip
E           temp_path = tf.name
E         File "/home/kmaeh/.pyenv/versions/3.8.7/lib/python3.8/tempfile.py", line 491, in __exit__
E           result = self.file.__exit__(exc, value, tb)
E       OSError: [Errno 28] No space left on device

/home/kmaeh/.pyenv/versions/3.8.7/lib/python3.8/tempfile.py:491: AssertionError
----------------------------- Captured stdout call -----------------------------
dtype is <class 'numpy.float64'>
______ TestPlaceRaises_param_0_{shape=(7,)}.test_place_empty_value_error _______

self = <<cupy_tests.indexing_tests.test_insert.TestPlaceRaises_param_0_{shape=(7,)} testMethod=test_place_empty_value_error>  parameter: {'shape': (7,)}>
dtype = <class 'numpy.float64'>

    @testing.with_requires('numpy>=1.10')
    @testing.for_all_dtypes()
    def test_place_empty_value_error(self, dtype):
        for xp in (numpy, cupy):
            a = testing.shaped_arange(self.shape, xp, dtype)
            mask = testing.shaped_arange(self.shape, xp, int) % 2 == 0
            vals = testing.shaped_random((0,), xp, dtype)
            with pytest.raises(ValueError):
>               xp.place(a, mask, vals)

tests/cupy_tests/indexing_tests/test_insert.py:48: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
cupy/_indexing/insert.py:41: in place
    mask_indices = mask.ravel().nonzero()[0]  # may synchronize
cupy/core/core.pyx:770: in cupy.core.core.ndarray.nonzero
    cpdef tuple nonzero(self):
cupy/core/core.pyx:787: in cupy.core.core.ndarray.nonzero
    return _indexing._ndarray_nonzero(self)
cupy/core/_routines_indexing.pyx:59: in cupy.core._routines_indexing._ndarray_nonzero
    cdef ndarray dst = _ndarray_argwhere(self)
cupy/core/_routines_indexing.pyx:120: in cupy.core._routines_indexing._ndarray_argwhere
    _nonzero_kernel(nonzero, scan_index, dst)
cupy/core/_kernel.pyx:840: in cupy.core._kernel.ElementwiseKernel.__call__
    kern = self._get_elementwise_kernel(dev_id, arginfos, type_map)
cupy/core/_kernel.pyx:865: in cupy.core._kernel.ElementwiseKernel._get_elementwise_kernel
    kern = _get_elementwise_kernel(
cupy/_util.pyx:59: in cupy._util.memoize.decorator.ret
    result = f(*args, **kwargs)
cupy/core/_kernel.pyx:652: in cupy.core._kernel._get_elementwise_kernel
    return _get_simple_elementwise_kernel(
cupy/core/_kernel.pyx:38: in cupy.core._kernel._get_simple_elementwise_kernel
    cpdef function.Function _get_simple_elementwise_kernel(
cupy/core/_kernel.pyx:61: in cupy.core._kernel._get_simple_elementwise_kernel
    module = compile_with_cache(module_code, options)
cupy/core/core.pyx:2021: in cupy.core.core.compile_with_cache
    return cuda.compile_with_cache(
cupy/cuda/compiler.py:428: in compile_with_cache
    return _compile_with_cache_hip(
cupy/cuda/compiler.py:829: in _compile_with_cache_hip
    temp_path = tf.name
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <tempfile._TemporaryFileWrapper object at 0x7f50117cc1c0>, exc = None
value = None, tb = None

    def __exit__(self, exc, value, tb):
>       result = self.file.__exit__(exc, value, tb)
E       OSError: [Errno 28] No space left on device

/home/kmaeh/.pyenv/versions/3.8.7/lib/python3.8/tempfile.py:491: OSError
----------------------------- Captured stdout call -----------------------------
dtype is <class 'numpy.float64'>
_____ TestPlaceRaises_param_1_{shape=(2, 3)}.test_place_empty_value_error ______

self = <<cupy_tests.indexing_tests.test_insert.TestPlaceRaises_param_1_{shape=(2, 3)} testMethod=test_place_empty_value_error>  parameter: {'shape': (2, 3)}>
dtype = <class 'numpy.float64'>

    @testing.with_requires('numpy>=1.10')
    @testing.for_all_dtypes()
    def test_place_empty_value_error(self, dtype):
        for xp in (numpy, cupy):
            a = testing.shaped_arange(self.shape, xp, dtype)
            mask = testing.shaped_arange(self.shape, xp, int) % 2 == 0
            vals = testing.shaped_random((0,), xp, dtype)
            with pytest.raises(ValueError):
>               xp.place(a, mask, vals)

tests/cupy_tests/indexing_tests/test_insert.py:48: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
cupy/_indexing/insert.py:41: in place
    mask_indices = mask.ravel().nonzero()[0]  # may synchronize
cupy/core/core.pyx:770: in cupy.core.core.ndarray.nonzero
    cpdef tuple nonzero(self):
cupy/core/core.pyx:787: in cupy.core.core.ndarray.nonzero
    return _indexing._ndarray_nonzero(self)
cupy/core/_routines_indexing.pyx:59: in cupy.core._routines_indexing._ndarray_nonzero
    cdef ndarray dst = _ndarray_argwhere(self)
cupy/core/_routines_indexing.pyx:120: in cupy.core._routines_indexing._ndarray_argwhere
    _nonzero_kernel(nonzero, scan_index, dst)
cupy/core/_kernel.pyx:840: in cupy.core._kernel.ElementwiseKernel.__call__
    kern = self._get_elementwise_kernel(dev_id, arginfos, type_map)
cupy/core/_kernel.pyx:865: in cupy.core._kernel.ElementwiseKernel._get_elementwise_kernel
    kern = _get_elementwise_kernel(
cupy/_util.pyx:59: in cupy._util.memoize.decorator.ret
    result = f(*args, **kwargs)
cupy/core/_kernel.pyx:652: in cupy.core._kernel._get_elementwise_kernel
    return _get_simple_elementwise_kernel(
cupy/core/_kernel.pyx:38: in cupy.core._kernel._get_simple_elementwise_kernel
    cpdef function.Function _get_simple_elementwise_kernel(
cupy/core/_kernel.pyx:61: in cupy.core._kernel._get_simple_elementwise_kernel
    module = compile_with_cache(module_code, options)
cupy/core/core.pyx:2021: in cupy.core.core.compile_with_cache
    return cuda.compile_with_cache(
cupy/cuda/compiler.py:428: in compile_with_cache
    return _compile_with_cache_hip(
cupy/cuda/compiler.py:829: in _compile_with_cache_hip
    temp_path = tf.name
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <tempfile._TemporaryFileWrapper object at 0x7f5010e38e20>, exc = None
value = None, tb = None

    def __exit__(self, exc, value, tb):
>       result = self.file.__exit__(exc, value, tb)
E       OSError: [Errno 28] No space left on device

/home/kmaeh/.pyenv/versions/3.8.7/lib/python3.8/tempfile.py:491: OSError
----------------------------- Captured stdout call -----------------------------
dtype is <class 'numpy.float64'>
____ TestPlaceRaises_param_2_{shape=(4, 3, 2)}.test_place_empty_value_error ____

self = <<cupy_tests.indexing_tests.test_insert.TestPlaceRaises_param_2_{shape=(4, 3, 2)} testMethod=test_place_empty_value_error>  parameter: {'shape': (4, 3, 2)}>
dtype = <class 'numpy.float64'>

    @testing.with_requires('numpy>=1.10')
    @testing.for_all_dtypes()
    def test_place_empty_value_error(self, dtype):
        for xp in (numpy, cupy):
            a = testing.shaped_arange(self.shape, xp, dtype)
            mask = testing.shaped_arange(self.shape, xp, int) % 2 == 0
            vals = testing.shaped_random((0,), xp, dtype)
            with pytest.raises(ValueError):
>               xp.place(a, mask, vals)

tests/cupy_tests/indexing_tests/test_insert.py:48: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
cupy/_indexing/insert.py:41: in place
    mask_indices = mask.ravel().nonzero()[0]  # may synchronize
cupy/core/core.pyx:770: in cupy.core.core.ndarray.nonzero
    cpdef tuple nonzero(self):
cupy/core/core.pyx:787: in cupy.core.core.ndarray.nonzero
    return _indexing._ndarray_nonzero(self)
cupy/core/_routines_indexing.pyx:59: in cupy.core._routines_indexing._ndarray_nonzero
    cdef ndarray dst = _ndarray_argwhere(self)
cupy/core/_routines_indexing.pyx:120: in cupy.core._routines_indexing._ndarray_argwhere
    _nonzero_kernel(nonzero, scan_index, dst)
cupy/core/_kernel.pyx:840: in cupy.core._kernel.ElementwiseKernel.__call__
    kern = self._get_elementwise_kernel(dev_id, arginfos, type_map)
cupy/core/_kernel.pyx:865: in cupy.core._kernel.ElementwiseKernel._get_elementwise_kernel
    kern = _get_elementwise_kernel(
cupy/_util.pyx:59: in cupy._util.memoize.decorator.ret
    result = f(*args, **kwargs)
cupy/core/_kernel.pyx:652: in cupy.core._kernel._get_elementwise_kernel
    return _get_simple_elementwise_kernel(
cupy/core/_kernel.pyx:38: in cupy.core._kernel._get_simple_elementwise_kernel
    cpdef function.Function _get_simple_elementwise_kernel(
cupy/core/_kernel.pyx:61: in cupy.core._kernel._get_simple_elementwise_kernel
    module = compile_with_cache(module_code, options)
cupy/core/core.pyx:2021: in cupy.core.core.compile_with_cache
    return cuda.compile_with_cache(
cupy/cuda/compiler.py:428: in compile_with_cache
    return _compile_with_cache_hip(
cupy/cuda/compiler.py:829: in _compile_with_cache_hip
    temp_path = tf.name
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <tempfile._TemporaryFileWrapper object at 0x7f5010f71f40>, exc = None
value = None, tb = None

    def __exit__(self, exc, value, tb):
>       result = self.file.__exit__(exc, value, tb)
E       OSError: [Errno 28] No space left on device

/home/kmaeh/.pyenv/versions/3.8.7/lib/python3.8/tempfile.py:491: OSError
----------------------------- Captured stdout call -----------------------------
dtype is <class 'numpy.float64'>
________ TestPut_param_3_{mode='raise', n_vals=1, shape=(7,)}.test_put _________

self = <<cupy_tests.indexing_tests.test_insert.TestPut_param_3_{mode='raise', n_vals=1, shape=(7,)} testMethod=test_put>  parameter: {'mode': 'raise', 'n_vals': 1, 'shape': (7,)}>
xp = <module 'cupy' from '/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.t8hdvgF7FH/cupy/cupy/__init__.py'>
dtype = <class 'numpy.float64'>

    @testing.for_all_dtypes()
    @testing.numpy_cupy_array_equal()
    def test_put(self, xp, dtype):
        a = testing.shaped_arange(self.shape, xp, dtype)
        # Take care so that actual indices don't overlap.
        if self.mode == 'raise':
            inds = xp.array([2, -1, 3, 0])
        else:
            inds = xp.array([2, -8, 3, 7])
        vals = testing.shaped_random((self.n_vals,), xp, dtype)
>       xp.put(a, inds, vals, self.mode)

tests/cupy_tests/indexing_tests/test_insert.py:80: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
cupy/_indexing/insert.py:67: in put
    a.put(ind, v, mode=mode)
cupy/core/core.pyx:669: in cupy.core.core.ndarray.put
    cpdef put(self, indices, values, mode='wrap'):
cupy/core/core.pyx:676: in cupy.core.core.ndarray.put
    return _indexing._ndarray_put(self, indices, values, mode)
cupy/core/_routines_indexing.pyx:160: in cupy.core._routines_indexing._ndarray_put
    _put_raise_kernel(indices, values, values.size, n, self, err)
cupy/core/_kernel.pyx:840: in cupy.core._kernel.ElementwiseKernel.__call__
    kern = self._get_elementwise_kernel(dev_id, arginfos, type_map)
cupy/core/_kernel.pyx:865: in cupy.core._kernel.ElementwiseKernel._get_elementwise_kernel
    kern = _get_elementwise_kernel(
cupy/_util.pyx:59: in cupy._util.memoize.decorator.ret
    result = f(*args, **kwargs)
cupy/core/_kernel.pyx:652: in cupy.core._kernel._get_elementwise_kernel
    return _get_simple_elementwise_kernel(
cupy/core/_kernel.pyx:38: in cupy.core._kernel._get_simple_elementwise_kernel
    cpdef function.Function _get_simple_elementwise_kernel(
cupy/core/_kernel.pyx:61: in cupy.core._kernel._get_simple_elementwise_kernel
    module = compile_with_cache(module_code, options)
cupy/core/core.pyx:2021: in cupy.core.core.compile_with_cache
    return cuda.compile_with_cache(
cupy/cuda/compiler.py:428: in compile_with_cache
    return _compile_with_cache_hip(
cupy/cuda/compiler.py:829: in _compile_with_cache_hip
    temp_path = tf.name
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <tempfile._TemporaryFileWrapper object at 0x7f5010f5f8b0>, exc = None
value = None, tb = None

    def __exit__(self, exc, value, tb):
>       result = self.file.__exit__(exc, value, tb)
E       AssertionError: Only cupy raises error
E       
E       Traceback (most recent call last):
E         File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.t8hdvgF7FH/cupy/cupy/testing/_helper.py", line 47, in _call_func
E           result = impl(self, *args, **kw)
E         File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.t8hdvgF7FH/cupy/tests/cupy_tests/indexing_tests/test_insert.py", line 80, in test_put
E           xp.put(a, inds, vals, self.mode)
E         File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.t8hdvgF7FH/cupy/cupy/_indexing/insert.py", line 67, in put
E           a.put(ind, v, mode=mode)
E         File "cupy/core/core.pyx", line 669, in cupy.core.core.ndarray.put
E           cpdef put(self, indices, values, mode='wrap'):
E         File "cupy/core/core.pyx", line 676, in cupy.core.core.ndarray.put
E           return _indexing._ndarray_put(self, indices, values, mode)
E         File "cupy/core/_routines_indexing.pyx", line 160, in cupy.core._routines_indexing._ndarray_put
E           _put_raise_kernel(indices, values, values.size, n, self, err)
E         File "cupy/core/_kernel.pyx", line 840, in cupy.core._kernel.ElementwiseKernel.__call__
E           kern = self._get_elementwise_kernel(dev_id, arginfos, type_map)
E         File "cupy/core/_kernel.pyx", line 865, in cupy.core._kernel.ElementwiseKernel._get_elementwise_kernel
E           kern = _get_elementwise_kernel(
E         File "cupy/_util.pyx", line 59, in cupy._util.memoize.decorator.ret
E           result = f(*args, **kwargs)
E         File "cupy/core/_kernel.pyx", line 652, in cupy.core._kernel._get_elementwise_kernel
E           return _get_simple_elementwise_kernel(
E         File "cupy/core/_kernel.pyx", line 38, in cupy.core._kernel._get_simple_elementwise_kernel
E           cpdef function.Function _get_simple_elementwise_kernel(
E         File "cupy/core/_kernel.pyx", line 61, in cupy.core._kernel._get_simple_elementwise_kernel
E           module = compile_with_cache(module_code, options)
E         File "cupy/core/core.pyx", line 2021, in cupy.core.core.compile_with_cache
E           return cuda.compile_with_cache(
E         File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.t8hdvgF7FH/cupy/cupy/cuda/compiler.py", line 428, in compile_with_cache
E           return _compile_with_cache_hip(
E         File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.t8hdvgF7FH/cupy/cupy/cuda/compiler.py", line 829, in _compile_with_cache_hip
E           temp_path = tf.name
E         File "/home/kmaeh/.pyenv/versions/3.8.7/lib/python3.8/tempfile.py", line 491, in __exit__
E           result = self.file.__exit__(exc, value, tb)
E       OSError: [Errno 28] No space left on device

/home/kmaeh/.pyenv/versions/3.8.7/lib/python3.8/tempfile.py:491: AssertionError
----------------------------- Captured stdout call -----------------------------
dtype is <class 'numpy.float64'>
_______ TestPut_param_4_{mode='raise', n_vals=1, shape=(2, 3)}.test_put ________

self = <<cupy_tests.indexing_tests.test_insert.TestPut_param_4_{mode='raise', n_vals=1, shape=(2, 3)} testMethod=test_put>  parameter: {'mode': 'raise', 'n_vals': 1, 'shape': (2, 3)}>
xp = <module 'cupy' from '/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.t8hdvgF7FH/cupy/cupy/__init__.py'>
dtype = <class 'numpy.float64'>

    @testing.for_all_dtypes()
    @testing.numpy_cupy_array_equal()
    def test_put(self, xp, dtype):
        a = testing.shaped_arange(self.shape, xp, dtype)
        # Take care so that actual indices don't overlap.
        if self.mode == 'raise':
            inds = xp.array([2, -1, 3, 0])
        else:
            inds = xp.array([2, -8, 3, 7])
        vals = testing.shaped_random((self.n_vals,), xp, dtype)
>       xp.put(a, inds, vals, self.mode)

tests/cupy_tests/indexing_tests/test_insert.py:80: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
cupy/_indexing/insert.py:67: in put
    a.put(ind, v, mode=mode)
cupy/core/core.pyx:669: in cupy.core.core.ndarray.put
    cpdef put(self, indices, values, mode='wrap'):
cupy/core/core.pyx:676: in cupy.core.core.ndarray.put
    return _indexing._ndarray_put(self, indices, values, mode)
cupy/core/_routines_indexing.pyx:160: in cupy.core._routines_indexing._ndarray_put
    _put_raise_kernel(indices, values, values.size, n, self, err)
cupy/core/_kernel.pyx:840: in cupy.core._kernel.ElementwiseKernel.__call__
    kern = self._get_elementwise_kernel(dev_id, arginfos, type_map)
cupy/core/_kernel.pyx:865: in cupy.core._kernel.ElementwiseKernel._get_elementwise_kernel
    kern = _get_elementwise_kernel(
cupy/_util.pyx:59: in cupy._util.memoize.decorator.ret
    result = f(*args, **kwargs)
cupy/core/_kernel.pyx:652: in cupy.core._kernel._get_elementwise_kernel
    return _get_simple_elementwise_kernel(
cupy/core/_kernel.pyx:38: in cupy.core._kernel._get_simple_elementwise_kernel
    cpdef function.Function _get_simple_elementwise_kernel(
cupy/core/_kernel.pyx:61: in cupy.core._kernel._get_simple_elementwise_kernel
    module = compile_with_cache(module_code, options)
cupy/core/core.pyx:2021: in cupy.core.core.compile_with_cache
    return cuda.compile_with_cache(
cupy/cuda/compiler.py:428: in compile_with_cache
    return _compile_with_cache_hip(
cupy/cuda/compiler.py:829: in _compile_with_cache_hip
    temp_path = tf.name
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <tempfile._TemporaryFileWrapper object at 0x7f5010ea11f0>, exc = None
value = None, tb = None

    def __exit__(self, exc, value, tb):
>       result = self.file.__exit__(exc, value, tb)
E       AssertionError: Only cupy raises error
E       
E       Traceback (most recent call last):
E         File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.t8hdvgF7FH/cupy/cupy/testing/_helper.py", line 47, in _call_func
E           result = impl(self, *args, **kw)
E         File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.t8hdvgF7FH/cupy/tests/cupy_tests/indexing_tests/test_insert.py", line 80, in test_put
E           xp.put(a, inds, vals, self.mode)
E         File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.t8hdvgF7FH/cupy/cupy/_indexing/insert.py", line 67, in put
E           a.put(ind, v, mode=mode)
E         File "cupy/core/core.pyx", line 669, in cupy.core.core.ndarray.put
E           cpdef put(self, indices, values, mode='wrap'):
E         File "cupy/core/core.pyx", line 676, in cupy.core.core.ndarray.put
E           return _indexing._ndarray_put(self, indices, values, mode)
E         File "cupy/core/_routines_indexing.pyx", line 160, in cupy.core._routines_indexing._ndarray_put
E           _put_raise_kernel(indices, values, values.size, n, self, err)
E         File "cupy/core/_kernel.pyx", line 840, in cupy.core._kernel.ElementwiseKernel.__call__
E           kern = self._get_elementwise_kernel(dev_id, arginfos, type_map)
E         File "cupy/core/_kernel.pyx", line 865, in cupy.core._kernel.ElementwiseKernel._get_elementwise_kernel
E           kern = _get_elementwise_kernel(
E         File "cupy/_util.pyx", line 59, in cupy._util.memoize.decorator.ret
E           result = f(*args, **kwargs)
E         File "cupy/core/_kernel.pyx", line 652, in cupy.core._kernel._get_elementwise_kernel
E           return _get_simple_elementwise_kernel(
E         File "cupy/core/_kernel.pyx", line 38, in cupy.core._kernel._get_simple_elementwise_kernel
E           cpdef function.Function _get_simple_elementwise_kernel(
E         File "cupy/core/_kernel.pyx", line 61, in cupy.core._kernel._get_simple_elementwise_kernel
E           module = compile_with_cache(module_code, options)
E         File "cupy/core/core.pyx", line 2021, in cupy.core.core.compile_with_cache
E           return cuda.compile_with_cache(
E         File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.t8hdvgF7FH/cupy/cupy/cuda/compiler.py", line 428, in compile_with_cache
E           return _compile_with_cache_hip(
E         File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.t8hdvgF7FH/cupy/cupy/cuda/compiler.py", line 829, in _compile_with_cache_hip
E           temp_path = tf.name
E         File "/home/kmaeh/.pyenv/versions/3.8.7/lib/python3.8/tempfile.py", line 491, in __exit__
E           result = self.file.__exit__(exc, value, tb)
E       OSError: [Errno 28] No space left on device

/home/kmaeh/.pyenv/versions/3.8.7/lib/python3.8/tempfile.py:491: AssertionError
----------------------------- Captured stdout call -----------------------------
dtype is <class 'numpy.float64'>
______ TestPut_param_5_{mode='raise', n_vals=1, shape=(4, 3, 2)}.test_put ______

self = <<cupy_tests.indexing_tests.test_insert.TestPut_param_5_{mode='raise', n_vals=1, shape=(4, 3, 2)} testMethod=test_put>  parameter: {'mode': 'raise', 'n_vals': 1, 'shape': (4, 3, 2)}>
xp = <module 'cupy' from '/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.t8hdvgF7FH/cupy/cupy/__init__.py'>
dtype = <class 'numpy.float64'>

    @testing.for_all_dtypes()
    @testing.numpy_cupy_array_equal()
    def test_put(self, xp, dtype):
        a = testing.shaped_arange(self.shape, xp, dtype)
        # Take care so that actual indices don't overlap.
        if self.mode == 'raise':
            inds = xp.array([2, -1, 3, 0])
        else:
            inds = xp.array([2, -8, 3, 7])
        vals = testing.shaped_random((self.n_vals,), xp, dtype)
>       xp.put(a, inds, vals, self.mode)

tests/cupy_tests/indexing_tests/test_insert.py:80: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
cupy/_indexing/insert.py:67: in put
    a.put(ind, v, mode=mode)
cupy/core/core.pyx:669: in cupy.core.core.ndarray.put
    cpdef put(self, indices, values, mode='wrap'):
cupy/core/core.pyx:676: in cupy.core.core.ndarray.put
    return _indexing._ndarray_put(self, indices, values, mode)
cupy/core/_routines_indexing.pyx:160: in cupy.core._routines_indexing._ndarray_put
    _put_raise_kernel(indices, values, values.size, n, self, err)
cupy/core/_kernel.pyx:840: in cupy.core._kernel.ElementwiseKernel.__call__
    kern = self._get_elementwise_kernel(dev_id, arginfos, type_map)
cupy/core/_kernel.pyx:865: in cupy.core._kernel.ElementwiseKernel._get_elementwise_kernel
    kern = _get_elementwise_kernel(
cupy/_util.pyx:59: in cupy._util.memoize.decorator.ret
    result = f(*args, **kwargs)
cupy/core/_kernel.pyx:652: in cupy.core._kernel._get_elementwise_kernel
    return _get_simple_elementwise_kernel(
cupy/core/_kernel.pyx:38: in cupy.core._kernel._get_simple_elementwise_kernel
    cpdef function.Function _get_simple_elementwise_kernel(
cupy/core/_kernel.pyx:61: in cupy.core._kernel._get_simple_elementwise_kernel
    module = compile_with_cache(module_code, options)
cupy/core/core.pyx:2021: in cupy.core.core.compile_with_cache
    return cuda.compile_with_cache(
cupy/cuda/compiler.py:428: in compile_with_cache
    return _compile_with_cache_hip(
cupy/cuda/compiler.py:829: in _compile_with_cache_hip
    temp_path = tf.name
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <tempfile._TemporaryFileWrapper object at 0x7f50108c43d0>, exc = None
value = None, tb = None

    def __exit__(self, exc, value, tb):
>       result = self.file.__exit__(exc, value, tb)
E       AssertionError: Only cupy raises error
E       
E       Traceback (most recent call last):
E         File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.t8hdvgF7FH/cupy/cupy/testing/_helper.py", line 47, in _call_func
E           result = impl(self, *args, **kw)
E         File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.t8hdvgF7FH/cupy/tests/cupy_tests/indexing_tests/test_insert.py", line 80, in test_put
E           xp.put(a, inds, vals, self.mode)
E         File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.t8hdvgF7FH/cupy/cupy/_indexing/insert.py", line 67, in put
E           a.put(ind, v, mode=mode)
E         File "cupy/core/core.pyx", line 669, in cupy.core.core.ndarray.put
E           cpdef put(self, indices, values, mode='wrap'):
E         File "cupy/core/core.pyx", line 676, in cupy.core.core.ndarray.put
E           return _indexing._ndarray_put(self, indices, values, mode)
E         File "cupy/core/_routines_indexing.pyx", line 160, in cupy.core._routines_indexing._ndarray_put
E           _put_raise_kernel(indices, values, values.size, n, self, err)
E         File "cupy/core/_kernel.pyx", line 840, in cupy.core._kernel.ElementwiseKernel.__call__
E           kern = self._get_elementwise_kernel(dev_id, arginfos, type_map)
E         File "cupy/core/_kernel.pyx", line 865, in cupy.core._kernel.ElementwiseKernel._get_elementwise_kernel
E           kern = _get_elementwise_kernel(
E         File "cupy/_util.pyx", line 59, in cupy._util.memoize.decorator.ret
E           result = f(*args, **kwargs)
E         File "cupy/core/_kernel.pyx", line 652, in cupy.core._kernel._get_elementwise_kernel
E           return _get_simple_elementwise_kernel(
E         File "cupy/core/_kernel.pyx", line 38, in cupy.core._kernel._get_simple_elementwise_kernel
E           cpdef function.Function _get_simple_elementwise_kernel(
E         File "cupy/core/_kernel.pyx", line 61, in cupy.core._kernel._get_simple_elementwise_kernel
E           module = compile_with_cache(module_code, options)
E         File "cupy/core/core.pyx", line 2021, in cupy.core.core.compile_with_cache
E           return cuda.compile_with_cache(
E         File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.t8hdvgF7FH/cupy/cupy/cuda/compiler.py", line 428, in compile_with_cache
E           return _compile_with_cache_hip(
E         File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.t8hdvgF7FH/cupy/cupy/cuda/compiler.py", line 829, in _compile_with_cache_hip
E           temp_path = tf.name
E         File "/home/kmaeh/.pyenv/versions/3.8.7/lib/python3.8/tempfile.py", line 491, in __exit__
E           result = self.file.__exit__(exc, value, tb)
E       OSError: [Errno 28] No space left on device

/home/kmaeh/.pyenv/versions/3.8.7/lib/python3.8/tempfile.py:491: AssertionError
----------------------------- Captured stdout call -----------------------------
dtype is <class 'numpy.float64'>
________ TestPut_param_6_{mode='raise', n_vals=3, shape=(7,)}.test_put _________

self = <<cupy_tests.indexing_tests.test_insert.TestPut_param_6_{mode='raise', n_vals=3, shape=(7,)} testMethod=test_put>  parameter: {'mode': 'raise', 'n_vals': 3, 'shape': (7,)}>
xp = <module 'cupy' from '/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.t8hdvgF7FH/cupy/cupy/__init__.py'>
dtype = <class 'numpy.float64'>

    @testing.for_all_dtypes()
    @testing.numpy_cupy_array_equal()
    def test_put(self, xp, dtype):
        a = testing.shaped_arange(self.shape, xp, dtype)
        # Take care so that actual indices don't overlap.
        if self.mode == 'raise':
            inds = xp.array([2, -1, 3, 0])
        else:
            inds = xp.array([2, -8, 3, 7])
        vals = testing.shaped_random((self.n_vals,), xp, dtype)
>       xp.put(a, inds, vals, self.mode)

tests/cupy_tests/indexing_tests/test_insert.py:80: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
cupy/_indexing/insert.py:67: in put
    a.put(ind, v, mode=mode)
cupy/core/core.pyx:669: in cupy.core.core.ndarray.put
    cpdef put(self, indices, values, mode='wrap'):
cupy/core/core.pyx:676: in cupy.core.core.ndarray.put
    return _indexing._ndarray_put(self, indices, values, mode)
cupy/core/_routines_indexing.pyx:160: in cupy.core._routines_indexing._ndarray_put
    _put_raise_kernel(indices, values, values.size, n, self, err)
cupy/core/_kernel.pyx:840: in cupy.core._kernel.ElementwiseKernel.__call__
    kern = self._get_elementwise_kernel(dev_id, arginfos, type_map)
cupy/core/_kernel.pyx:865: in cupy.core._kernel.ElementwiseKernel._get_elementwise_kernel
    kern = _get_elementwise_kernel(
cupy/_util.pyx:59: in cupy._util.memoize.decorator.ret
    result = f(*args, **kwargs)
cupy/core/_kernel.pyx:652: in cupy.core._kernel._get_elementwise_kernel
    return _get_simple_elementwise_kernel(
cupy/core/_kernel.pyx:38: in cupy.core._kernel._get_simple_elementwise_kernel
    cpdef function.Function _get_simple_elementwise_kernel(
cupy/core/_kernel.pyx:61: in cupy.core._kernel._get_simple_elementwise_kernel
    module = compile_with_cache(module_code, options)
cupy/core/core.pyx:2021: in cupy.core.core.compile_with_cache
    return cuda.compile_with_cache(
cupy/cuda/compiler.py:428: in compile_with_cache
    return _compile_with_cache_hip(
cupy/cuda/compiler.py:829: in _compile_with_cache_hip
    temp_path = tf.name
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <tempfile._TemporaryFileWrapper object at 0x7f5010e19910>, exc = None
value = None, tb = None

    def __exit__(self, exc, value, tb):
>       result = self.file.__exit__(exc, value, tb)
E       AssertionError: Only cupy raises error
E       
E       Traceback (most recent call last):
E         File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.t8hdvgF7FH/cupy/cupy/testing/_helper.py", line 47, in _call_func
E           result = impl(self, *args, **kw)
E         File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.t8hdvgF7FH/cupy/tests/cupy_tests/indexing_tests/test_insert.py", line 80, in test_put
E           xp.put(a, inds, vals, self.mode)
E         File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.t8hdvgF7FH/cupy/cupy/_indexing/insert.py", line 67, in put
E           a.put(ind, v, mode=mode)
E         File "cupy/core/core.pyx", line 669, in cupy.core.core.ndarray.put
E           cpdef put(self, indices, values, mode='wrap'):
E         File "cupy/core/core.pyx", line 676, in cupy.core.core.ndarray.put
E           return _indexing._ndarray_put(self, indices, values, mode)
E         File "cupy/core/_routines_indexing.pyx", line 160, in cupy.core._routines_indexing._ndarray_put
E           _put_raise_kernel(indices, values, values.size, n, self, err)
E         File "cupy/core/_kernel.pyx", line 840, in cupy.core._kernel.ElementwiseKernel.__call__
E           kern = self._get_elementwise_kernel(dev_id, arginfos, type_map)
E         File "cupy/core/_kernel.pyx", line 865, in cupy.core._kernel.ElementwiseKernel._get_elementwise_kernel
E           kern = _get_elementwise_kernel(
E         File "cupy/_util.pyx", line 59, in cupy._util.memoize.decorator.ret
E           result = f(*args, **kwargs)
E         File "cupy/core/_kernel.pyx", line 652, in cupy.core._kernel._get_elementwise_kernel
E           return _get_simple_elementwise_kernel(
E         File "cupy/core/_kernel.pyx", line 38, in cupy.core._kernel._get_simple_elementwise_kernel
E           cpdef function.Function _get_simple_elementwise_kernel(
E         File "cupy/core/_kernel.pyx", line 61, in cupy.core._kernel._get_simple_elementwise_kernel
E           module = compile_with_cache(module_code, options)
E         File "cupy/core/core.pyx", line 2021, in cupy.core.core.compile_with_cache
E           return cuda.compile_with_cache(
E         File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.t8hdvgF7FH/cupy/cupy/cuda/compiler.py", line 428, in compile_with_cache
E           return _compile_with_cache_hip(
E         File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.t8hdvgF7FH/cupy/cupy/cuda/compiler.py", line 829, in _compile_with_cache_hip
E           temp_path = tf.name
E         File "/home/kmaeh/.pyenv/versions/3.8.7/lib/python3.8/tempfile.py", line 491, in __exit__
E           result = self.file.__exit__(exc, value, tb)
E       OSError: [Errno 28] No space left on device

/home/kmaeh/.pyenv/versions/3.8.7/lib/python3.8/tempfile.py:491: AssertionError
----------------------------- Captured stdout call -----------------------------
dtype is <class 'numpy.float64'>
_______ TestPut_param_7_{mode='raise', n_vals=3, shape=(2, 3)}.test_put ________

self = <<cupy_tests.indexing_tests.test_insert.TestPut_param_7_{mode='raise', n_vals=3, shape=(2, 3)} testMethod=test_put>  parameter: {'mode': 'raise', 'n_vals': 3, 'shape': (2, 3)}>
xp = <module 'cupy' from '/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.t8hdvgF7FH/cupy/cupy/__init__.py'>
dtype = <class 'numpy.float64'>

    @testing.for_all_dtypes()
    @testing.numpy_cupy_array_equal()
    def test_put(self, xp, dtype):
        a = testing.shaped_arange(self.shape, xp, dtype)
        # Take care so that actual indices don't overlap.
        if self.mode == 'raise':
            inds = xp.array([2, -1, 3, 0])
        else:
            inds = xp.array([2, -8, 3, 7])
        vals = testing.shaped_random((self.n_vals,), xp, dtype)
>       xp.put(a, inds, vals, self.mode)

tests/cupy_tests/indexing_tests/test_insert.py:80: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
cupy/_indexing/insert.py:67: in put
    a.put(ind, v, mode=mode)
cupy/core/core.pyx:669: in cupy.core.core.ndarray.put
    cpdef put(self, indices, values, mode='wrap'):
cupy/core/core.pyx:676: in cupy.core.core.ndarray.put
    return _indexing._ndarray_put(self, indices, values, mode)
cupy/core/_routines_indexing.pyx:160: in cupy.core._routines_indexing._ndarray_put
    _put_raise_kernel(indices, values, values.size, n, self, err)
cupy/core/_kernel.pyx:840: in cupy.core._kernel.ElementwiseKernel.__call__
    kern = self._get_elementwise_kernel(dev_id, arginfos, type_map)
cupy/core/_kernel.pyx:865: in cupy.core._kernel.ElementwiseKernel._get_elementwise_kernel
    kern = _get_elementwise_kernel(
cupy/_util.pyx:59: in cupy._util.memoize.decorator.ret
    result = f(*args, **kwargs)
cupy/core/_kernel.pyx:652: in cupy.core._kernel._get_elementwise_kernel
    return _get_simple_elementwise_kernel(
cupy/core/_kernel.pyx:38: in cupy.core._kernel._get_simple_elementwise_kernel
    cpdef function.Function _get_simple_elementwise_kernel(
cupy/core/_kernel.pyx:61: in cupy.core._kernel._get_simple_elementwise_kernel
    module = compile_with_cache(module_code, options)
cupy/core/core.pyx:2021: in cupy.core.core.compile_with_cache
    return cuda.compile_with_cache(
cupy/cuda/compiler.py:428: in compile_with_cache
    return _compile_with_cache_hip(
cupy/cuda/compiler.py:829: in _compile_with_cache_hip
    temp_path = tf.name
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <tempfile._TemporaryFileWrapper object at 0x7f5010ea58e0>, exc = None
value = None, tb = None

    def __exit__(self, exc, value, tb):
>       result = self.file.__exit__(exc, value, tb)
E       AssertionError: Only cupy raises error
E       
E       Traceback (most recent call last):
E         File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.t8hdvgF7FH/cupy/cupy/testing/_helper.py", line 47, in _call_func
E           result = impl(self, *args, **kw)
E         File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.t8hdvgF7FH/cupy/tests/cupy_tests/indexing_tests/test_insert.py", line 80, in test_put
E           xp.put(a, inds, vals, self.mode)
E         File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.t8hdvgF7FH/cupy/cupy/_indexing/insert.py", line 67, in put
E           a.put(ind, v, mode=mode)
E         File "cupy/core/core.pyx", line 669, in cupy.core.core.ndarray.put
E           cpdef put(self, indices, values, mode='wrap'):
E         File "cupy/core/core.pyx", line 676, in cupy.core.core.ndarray.put
E           return _indexing._ndarray_put(self, indices, values, mode)
E         File "cupy/core/_routines_indexing.pyx", line 160, in cupy.core._routines_indexing._ndarray_put
E           _put_raise_kernel(indices, values, values.size, n, self, err)
E         File "cupy/core/_kernel.pyx", line 840, in cupy.core._kernel.ElementwiseKernel.__call__
E           kern = self._get_elementwise_kernel(dev_id, arginfos, type_map)
E         File "cupy/core/_kernel.pyx", line 865, in cupy.core._kernel.ElementwiseKernel._get_elementwise_kernel
E           kern = _get_elementwise_kernel(
E         File "cupy/_util.pyx", line 59, in cupy._util.memoize.decorator.ret
E           result = f(*args, **kwargs)
E         File "cupy/core/_kernel.pyx", line 652, in cupy.core._kernel._get_elementwise_kernel
E           return _get_simple_elementwise_kernel(
E         File "cupy/core/_kernel.pyx", line 38, in cupy.core._kernel._get_simple_elementwise_kernel
E           cpdef function.Function _get_simple_elementwise_kernel(
E         File "cupy/core/_kernel.pyx", line 61, in cupy.core._kernel._get_simple_elementwise_kernel
E           module = compile_with_cache(module_code, options)
E         File "cupy/core/core.pyx", line 2021, in cupy.core.core.compile_with_cache
E           return cuda.compile_with_cache(
E         File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.t8hdvgF7FH/cupy/cupy/cuda/compiler.py", line 428, in compile_with_cache
E           return _compile_with_cache_hip(
E         File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.t8hdvgF7FH/cupy/cupy/cuda/compiler.py", line 829, in _compile_with_cache_hip
E           temp_path = tf.name
E         File "/home/kmaeh/.pyenv/versions/3.8.7/lib/python3.8/tempfile.py", line 491, in __exit__
E           result = self.file.__exit__(exc, value, tb)
E       OSError: [Errno 28] No space left on device

/home/kmaeh/.pyenv/versions/3.8.7/lib/python3.8/tempfile.py:491: AssertionError
----------------------------- Captured stdout call -----------------------------
dtype is <class 'numpy.float64'>
______ TestPut_param_8_{mode='raise', n_vals=3, shape=(4, 3, 2)}.test_put ______

self = <<cupy_tests.indexing_tests.test_insert.TestPut_param_8_{mode='raise', n_vals=3, shape=(4, 3, 2)} testMethod=test_put>  parameter: {'mode': 'raise', 'n_vals': 3, 'shape': (4, 3, 2)}>
xp = <module 'cupy' from '/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.t8hdvgF7FH/cupy/cupy/__init__.py'>
dtype = <class 'numpy.float64'>

    @testing.for_all_dtypes()
    @testing.numpy_cupy_array_equal()
    def test_put(self, xp, dtype):
        a = testing.shaped_arange(self.shape, xp, dtype)
        # Take care so that actual indices don't overlap.
        if self.mode == 'raise':
            inds = xp.array([2, -1, 3, 0])
        else:
            inds = xp.array([2, -8, 3, 7])
        vals = testing.shaped_random((self.n_vals,), xp, dtype)
>       xp.put(a, inds, vals, self.mode)

tests/cupy_tests/indexing_tests/test_insert.py:80: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
cupy/_indexing/insert.py:67: in put
    a.put(ind, v, mode=mode)
cupy/core/core.pyx:669: in cupy.core.core.ndarray.put
    cpdef put(self, indices, values, mode='wrap'):
cupy/core/core.pyx:676: in cupy.core.core.ndarray.put
    return _indexing._ndarray_put(self, indices, values, mode)
cupy/core/_routines_indexing.pyx:160: in cupy.core._routines_indexing._ndarray_put
    _put_raise_kernel(indices, values, values.size, n, self, err)
cupy/core/_kernel.pyx:840: in cupy.core._kernel.ElementwiseKernel.__call__
    kern = self._get_elementwise_kernel(dev_id, arginfos, type_map)
cupy/core/_kernel.pyx:865: in cupy.core._kernel.ElementwiseKernel._get_elementwise_kernel
    kern = _get_elementwise_kernel(
cupy/_util.pyx:59: in cupy._util.memoize.decorator.ret
    result = f(*args, **kwargs)
cupy/core/_kernel.pyx:652: in cupy.core._kernel._get_elementwise_kernel
    return _get_simple_elementwise_kernel(
cupy/core/_kernel.pyx:38: in cupy.core._kernel._get_simple_elementwise_kernel
    cpdef function.Function _get_simple_elementwise_kernel(
cupy/core/_kernel.pyx:61: in cupy.core._kernel._get_simple_elementwise_kernel
    module = compile_with_cache(module_code, options)
cupy/core/core.pyx:2021: in cupy.core.core.compile_with_cache
    return cuda.compile_with_cache(
cupy/cuda/compiler.py:428: in compile_with_cache
    return _compile_with_cache_hip(
cupy/cuda/compiler.py:829: in _compile_with_cache_hip
    temp_path = tf.name
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <tempfile._TemporaryFileWrapper object at 0x7f50108e1b50>, exc = None
value = None, tb = None

    def __exit__(self, exc, value, tb):
>       result = self.file.__exit__(exc, value, tb)
E       AssertionError: Only cupy raises error
E       
E       Traceback (most recent call last):
E         File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.t8hdvgF7FH/cupy/cupy/testing/_helper.py", line 47, in _call_func
E           result = impl(self, *args, **kw)
E         File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.t8hdvgF7FH/cupy/tests/cupy_tests/indexing_tests/test_insert.py", line 80, in test_put
E           xp.put(a, inds, vals, self.mode)
E         File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.t8hdvgF7FH/cupy/cupy/_indexing/insert.py", line 67, in put
E           a.put(ind, v, mode=mode)
E         File "cupy/core/core.pyx", line 669, in cupy.core.core.ndarray.put
E           cpdef put(self, indices, values, mode='wrap'):
E         File "cupy/core/core.pyx", line 676, in cupy.core.core.ndarray.put
E           return _indexing._ndarray_put(self, indices, values, mode)
E         File "cupy/core/_routines_indexing.pyx", line 160, in cupy.core._routines_indexing._ndarray_put
E           _put_raise_kernel(indices, values, values.size, n, self, err)
E         File "cupy/core/_kernel.pyx", line 840, in cupy.core._kernel.ElementwiseKernel.__call__
E           kern = self._get_elementwise_kernel(dev_id, arginfos, type_map)
E         File "cupy/core/_kernel.pyx", line 865, in cupy.core._kernel.ElementwiseKernel._get_elementwise_kernel
E           kern = _get_elementwise_kernel(
E         File "cupy/_util.pyx", line 59, in cupy._util.memoize.decorator.ret
E           result = f(*args, **kwargs)
E         File "cupy/core/_kernel.pyx", line 652, in cupy.core._kernel._get_elementwise_kernel
E           return _get_simple_elementwise_kernel(
E         File "cupy/core/_kernel.pyx", line 38, in cupy.core._kernel._get_simple_elementwise_kernel
E           cpdef function.Function _get_simple_elementwise_kernel(
E         File "cupy/core/_kernel.pyx", line 61, in cupy.core._kernel._get_simple_elementwise_kernel
E           module = compile_with_cache(module_code, options)
E         File "cupy/core/core.pyx", line 2021, in cupy.core.core.compile_with_cache
E           return cuda.compile_with_cache(
E         File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.t8hdvgF7FH/cupy/cupy/cuda/compiler.py", line 428, in compile_with_cache
E           return _compile_with_cache_hip(
E         File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.t8hdvgF7FH/cupy/cupy/cuda/compiler.py", line 829, in _compile_with_cache_hip
E           temp_path = tf.name
E         File "/home/kmaeh/.pyenv/versions/3.8.7/lib/python3.8/tempfile.py", line 491, in __exit__
E           result = self.file.__exit__(exc, value, tb)
E       OSError: [Errno 28] No space left on device

/home/kmaeh/.pyenv/versions/3.8.7/lib/python3.8/tempfile.py:491: AssertionError
----------------------------- Captured stdout call -----------------------------
dtype is <class 'numpy.float64'>
________ TestPut_param_9_{mode='raise', n_vals=4, shape=(7,)}.test_put _________

self = <<cupy_tests.indexing_tests.test_insert.TestPut_param_9_{mode='raise', n_vals=4, shape=(7,)} testMethod=test_put>  parameter: {'mode': 'raise', 'n_vals': 4, 'shape': (7,)}>
xp = <module 'cupy' from '/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.t8hdvgF7FH/cupy/cupy/__init__.py'>
dtype = <class 'numpy.float64'>

    @testing.for_all_dtypes()
    @testing.numpy_cupy_array_equal()
    def test_put(self, xp, dtype):
        a = testing.shaped_arange(self.shape, xp, dtype)
        # Take care so that actual indices don't overlap.
        if self.mode == 'raise':
            inds = xp.array([2, -1, 3, 0])
        else:
            inds = xp.array([2, -8, 3, 7])
        vals = testing.shaped_random((self.n_vals,), xp, dtype)
>       xp.put(a, inds, vals, self.mode)

tests/cupy_tests/indexing_tests/test_insert.py:80: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
cupy/_indexing/insert.py:67: in put
    a.put(ind, v, mode=mode)
cupy/core/core.pyx:669: in cupy.core.core.ndarray.put
    cpdef put(self, indices, values, mode='wrap'):
cupy/core/core.pyx:676: in cupy.core.core.ndarray.put
    return _indexing._ndarray_put(self, indices, values, mode)
cupy/core/_routines_indexing.pyx:160: in cupy.core._routines_indexing._ndarray_put
    _put_raise_kernel(indices, values, values.size, n, self, err)
cupy/core/_kernel.pyx:840: in cupy.core._kernel.ElementwiseKernel.__call__
    kern = self._get_elementwise_kernel(dev_id, arginfos, type_map)
cupy/core/_kernel.pyx:865: in cupy.core._kernel.ElementwiseKernel._get_elementwise_kernel
    kern = _get_elementwise_kernel(
cupy/_util.pyx:59: in cupy._util.memoize.decorator.ret
    result = f(*args, **kwargs)
cupy/core/_kernel.pyx:652: in cupy.core._kernel._get_elementwise_kernel
    return _get_simple_elementwise_kernel(
cupy/core/_kernel.pyx:38: in cupy.core._kernel._get_simple_elementwise_kernel
    cpdef function.Function _get_simple_elementwise_kernel(
cupy/core/_kernel.pyx:61: in cupy.core._kernel._get_simple_elementwise_kernel
    module = compile_with_cache(module_code, options)
cupy/core/core.pyx:2021: in cupy.core.core.compile_with_cache
    return cuda.compile_with_cache(
cupy/cuda/compiler.py:428: in compile_with_cache
    return _compile_with_cache_hip(
cupy/cuda/compiler.py:829: in _compile_with_cache_hip
    temp_path = tf.name
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <tempfile._TemporaryFileWrapper object at 0x7f50108397c0>, exc = None
value = None, tb = None

    def __exit__(self, exc, value, tb):
>       result = self.file.__exit__(exc, value, tb)
E       AssertionError: Only cupy raises error
E       
E       Traceback (most recent call last):
E         File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.t8hdvgF7FH/cupy/cupy/testing/_helper.py", line 47, in _call_func
E           result = impl(self, *args, **kw)
E         File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.t8hdvgF7FH/cupy/tests/cupy_tests/indexing_tests/test_insert.py", line 80, in test_put
E           xp.put(a, inds, vals, self.mode)
E         File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.t8hdvgF7FH/cupy/cupy/_indexing/insert.py", line 67, in put
E           a.put(ind, v, mode=mode)
E         File "cupy/core/core.pyx", line 669, in cupy.core.core.ndarray.put
E           cpdef put(self, indices, values, mode='wrap'):
E         File "cupy/core/core.pyx", line 676, in cupy.core.core.ndarray.put
E           return _indexing._ndarray_put(self, indices, values, mode)
E         File "cupy/core/_routines_indexing.pyx", line 160, in cupy.core._routines_indexing._ndarray_put
E           _put_raise_kernel(indices, values, values.size, n, self, err)
E         File "cupy/core/_kernel.pyx", line 840, in cupy.core._kernel.ElementwiseKernel.__call__
E           kern = self._get_elementwise_kernel(dev_id, arginfos, type_map)
E         File "cupy/core/_kernel.pyx", line 865, in cupy.core._kernel.ElementwiseKernel._get_elementwise_kernel
E           kern = _get_elementwise_kernel(
E         File "cupy/_util.pyx", line 59, in cupy._util.memoize.decorator.ret
E           result = f(*args, **kwargs)
E         File "cupy/core/_kernel.pyx", line 652, in cupy.core._kernel._get_elementwise_kernel
E           return _get_simple_elementwise_kernel(
E         File "cupy/core/_kernel.pyx", line 38, in cupy.core._kernel._get_simple_elementwise_kernel
E           cpdef function.Function _get_simple_elementwise_kernel(
E         File "cupy/core/_kernel.pyx", line 61, in cupy.core._kernel._get_simple_elementwise_kernel
E           module = compile_with_cache(module_code, options)
E         File "cupy/core/core.pyx", line 2021, in cupy.core.core.compile_with_cache
E           return cuda.compile_with_cache(
E         File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.t8hdvgF7FH/cupy/cupy/cuda/compiler.py", line 428, in compile_with_cache
E           return _compile_with_cache_hip(
E         File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.t8hdvgF7FH/cupy/cupy/cuda/compiler.py", line 829, in _compile_with_cache_hip
E           temp_path = tf.name
E         File "/home/kmaeh/.pyenv/versions/3.8.7/lib/python3.8/tempfile.py", line 491, in __exit__
E           result = self.file.__exit__(exc, value, tb)
E       OSError: [Errno 28] No space left on device

/home/kmaeh/.pyenv/versions/3.8.7/lib/python3.8/tempfile.py:491: AssertionError
----------------------------- Captured stdout call -----------------------------
dtype is <class 'numpy.float64'>
_______ TestPut_param_10_{mode='raise', n_vals=4, shape=(2, 3)}.test_put _______

self = <<cupy_tests.indexing_tests.test_insert.TestPut_param_10_{mode='raise', n_vals=4, shape=(2, 3)} testMethod=test_put>  parameter: {'mode': 'raise', 'n_vals': 4, 'shape': (2, 3)}>
xp = <module 'cupy' from '/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.t8hdvgF7FH/cupy/cupy/__init__.py'>
dtype = <class 'numpy.float64'>

    @testing.for_all_dtypes()
    @testing.numpy_cupy_array_equal()
    def test_put(self, xp, dtype):
        a = testing.shaped_arange(self.shape, xp, dtype)
        # Take care so that actual indices don't overlap.
        if self.mode == 'raise':
            inds = xp.array([2, -1, 3, 0])
        else:
            inds = xp.array([2, -8, 3, 7])
        vals = testing.shaped_random((self.n_vals,), xp, dtype)
>       xp.put(a, inds, vals, self.mode)

tests/cupy_tests/indexing_tests/test_insert.py:80: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
cupy/_indexing/insert.py:67: in put
    a.put(ind, v, mode=mode)
cupy/core/core.pyx:669: in cupy.core.core.ndarray.put
    cpdef put(self, indices, values, mode='wrap'):
cupy/core/core.pyx:676: in cupy.core.core.ndarray.put
    return _indexing._ndarray_put(self, indices, values, mode)
cupy/core/_routines_indexing.pyx:160: in cupy.core._routines_indexing._ndarray_put
    _put_raise_kernel(indices, values, values.size, n, self, err)
cupy/core/_kernel.pyx:840: in cupy.core._kernel.ElementwiseKernel.__call__
    kern = self._get_elementwise_kernel(dev_id, arginfos, type_map)
cupy/core/_kernel.pyx:865: in cupy.core._kernel.ElementwiseKernel._get_elementwise_kernel
    kern = _get_elementwise_kernel(
cupy/_util.pyx:59: in cupy._util.memoize.decorator.ret
    result = f(*args, **kwargs)
cupy/core/_kernel.pyx:652: in cupy.core._kernel._get_elementwise_kernel
    return _get_simple_elementwise_kernel(
cupy/core/_kernel.pyx:38: in cupy.core._kernel._get_simple_elementwise_kernel
    cpdef function.Function _get_simple_elementwise_kernel(
cupy/core/_kernel.pyx:61: in cupy.core._kernel._get_simple_elementwise_kernel
    module = compile_with_cache(module_code, options)
cupy/core/core.pyx:2021: in cupy.core.core.compile_with_cache
    return cuda.compile_with_cache(
cupy/cuda/compiler.py:428: in compile_with_cache
    return _compile_with_cache_hip(
cupy/cuda/compiler.py:829: in _compile_with_cache_hip
    temp_path = tf.name
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <tempfile._TemporaryFileWrapper object at 0x7f5010ed61f0>, exc = None
value = None, tb = None

    def __exit__(self, exc, value, tb):
>       result = self.file.__exit__(exc, value, tb)
E       AssertionError: Only cupy raises error
E       
E       Traceback (most recent call last):
E         File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.t8hdvgF7FH/cupy/cupy/testing/_helper.py", line 47, in _call_func
E           result = impl(self, *args, **kw)
E         File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.t8hdvgF7FH/cupy/tests/cupy_tests/indexing_tests/test_insert.py", line 80, in test_put
E           xp.put(a, inds, vals, self.mode)
E         File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.t8hdvgF7FH/cupy/cupy/_indexing/insert.py", line 67, in put
E           a.put(ind, v, mode=mode)
E         File "cupy/core/core.pyx", line 669, in cupy.core.core.ndarray.put
E           cpdef put(self, indices, values, mode='wrap'):
E         File "cupy/core/core.pyx", line 676, in cupy.core.core.ndarray.put
E           return _indexing._ndarray_put(self, indices, values, mode)
E         File "cupy/core/_routines_indexing.pyx", line 160, in cupy.core._routines_indexing._ndarray_put
E           _put_raise_kernel(indices, values, values.size, n, self, err)
E         File "cupy/core/_kernel.pyx", line 840, in cupy.core._kernel.ElementwiseKernel.__call__
E           kern = self._get_elementwise_kernel(dev_id, arginfos, type_map)
E         File "cupy/core/_kernel.pyx", line 865, in cupy.core._kernel.ElementwiseKernel._get_elementwise_kernel
E           kern = _get_elementwise_kernel(
E         File "cupy/_util.pyx", line 59, in cupy._util.memoize.decorator.ret
E           result = f(*args, **kwargs)
E         File "cupy/core/_kernel.pyx", line 652, in cupy.core._kernel._get_elementwise_kernel
E           return _get_simple_elementwise_kernel(
E         File "cupy/core/_kernel.pyx", line 38, in cupy.core._kernel._get_simple_elementwise_kernel
E           cpdef function.Function _get_simple_elementwise_kernel(
E         File "cupy/core/_kernel.pyx", line 61, in cupy.core._kernel._get_simple_elementwise_kernel
E           module = compile_with_cache(module_code, options)
E         File "cupy/core/core.pyx", line 2021, in cupy.core.core.compile_with_cache
E           return cuda.compile_with_cache(
E         File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.t8hdvgF7FH/cupy/cupy/cuda/compiler.py", line 428, in compile_with_cache
E           return _compile_with_cache_hip(
E         File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.t8hdvgF7FH/cupy/cupy/cuda/compiler.py", line 829, in _compile_with_cache_hip
E           temp_path = tf.name
E         File "/home/kmaeh/.pyenv/versions/3.8.7/lib/python3.8/tempfile.py", line 491, in __exit__
E           result = self.file.__exit__(exc, value, tb)
E       OSError: [Errno 28] No space left on device

/home/kmaeh/.pyenv/versions/3.8.7/lib/python3.8/tempfile.py:491: AssertionError
----------------------------- Captured stdout call -----------------------------
dtype is <class 'numpy.float64'>
_____ TestPut_param_11_{mode='raise', n_vals=4, shape=(4, 3, 2)}.test_put ______

self = <<cupy_tests.indexing_tests.test_insert.TestPut_param_11_{mode='raise', n_vals=4, shape=(4, 3, 2)} testMethod=test_put>  parameter: {'mode': 'raise', 'n_vals': 4, 'shape': (4, 3, 2)}>
xp = <module 'cupy' from '/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.t8hdvgF7FH/cupy/cupy/__init__.py'>
dtype = <class 'numpy.float64'>

    @testing.for_all_dtypes()
    @testing.numpy_cupy_array_equal()
    def test_put(self, xp, dtype):
        a = testing.shaped_arange(self.shape, xp, dtype)
        # Take care so that actual indices don't overlap.
        if self.mode == 'raise':
            inds = xp.array([2, -1, 3, 0])
        else:
            inds = xp.array([2, -8, 3, 7])
        vals = testing.shaped_random((self.n_vals,), xp, dtype)
>       xp.put(a, inds, vals, self.mode)

tests/cupy_tests/indexing_tests/test_insert.py:80: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
cupy/_indexing/insert.py:67: in put
    a.put(ind, v, mode=mode)
cupy/core/core.pyx:669: in cupy.core.core.ndarray.put
    cpdef put(self, indices, values, mode='wrap'):
cupy/core/core.pyx:676: in cupy.core.core.ndarray.put
    return _indexing._ndarray_put(self, indices, values, mode)
cupy/core/_routines_indexing.pyx:160: in cupy.core._routines_indexing._ndarray_put
    _put_raise_kernel(indices, values, values.size, n, self, err)
cupy/core/_kernel.pyx:840: in cupy.core._kernel.ElementwiseKernel.__call__
    kern = self._get_elementwise_kernel(dev_id, arginfos, type_map)
cupy/core/_kernel.pyx:865: in cupy.core._kernel.ElementwiseKernel._get_elementwise_kernel
    kern = _get_elementwise_kernel(
cupy/_util.pyx:59: in cupy._util.memoize.decorator.ret
    result = f(*args, **kwargs)
cupy/core/_kernel.pyx:652: in cupy.core._kernel._get_elementwise_kernel
    return _get_simple_elementwise_kernel(
cupy/core/_kernel.pyx:38: in cupy.core._kernel._get_simple_elementwise_kernel
    cpdef function.Function _get_simple_elementwise_kernel(
cupy/core/_kernel.pyx:61: in cupy.core._kernel._get_simple_elementwise_kernel
    module = compile_with_cache(module_code, options)
cupy/core/core.pyx:2021: in cupy.core.core.compile_with_cache
    return cuda.compile_with_cache(
cupy/cuda/compiler.py:428: in compile_with_cache
    return _compile_with_cache_hip(
cupy/cuda/compiler.py:829: in _compile_with_cache_hip
    temp_path = tf.name
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <tempfile._TemporaryFileWrapper object at 0x7f50109c45e0>, exc = None
value = None, tb = None

    def __exit__(self, exc, value, tb):
>       result = self.file.__exit__(exc, value, tb)
E       AssertionError: Only cupy raises error
E       
E       Traceback (most recent call last):
E         File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.t8hdvgF7FH/cupy/cupy/testing/_helper.py", line 47, in _call_func
E           result = impl(self, *args, **kw)
E         File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.t8hdvgF7FH/cupy/tests/cupy_tests/indexing_tests/test_insert.py", line 80, in test_put
E           xp.put(a, inds, vals, self.mode)
E         File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.t8hdvgF7FH/cupy/cupy/_indexing/insert.py", line 67, in put
E           a.put(ind, v, mode=mode)
E         File "cupy/core/core.pyx", line 669, in cupy.core.core.ndarray.put
E           cpdef put(self, indices, values, mode='wrap'):
E         File "cupy/core/core.pyx", line 676, in cupy.core.core.ndarray.put
E           return _indexing._ndarray_put(self, indices, values, mode)
E         File "cupy/core/_routines_indexing.pyx", line 160, in cupy.core._routines_indexing._ndarray_put
E           _put_raise_kernel(indices, values, values.size, n, self, err)
E         File "cupy/core/_kernel.pyx", line 840, in cupy.core._kernel.ElementwiseKernel.__call__
E           kern = self._get_elementwise_kernel(dev_id, arginfos, type_map)
E         File "cupy/core/_kernel.pyx", line 865, in cupy.core._kernel.ElementwiseKernel._get_elementwise_kernel
E           kern = _get_elementwise_kernel(
E         File "cupy/_util.pyx", line 59, in cupy._util.memoize.decorator.ret
E           result = f(*args, **kwargs)
E         File "cupy/core/_kernel.pyx", line 652, in cupy.core._kernel._get_elementwise_kernel
E           return _get_simple_elementwise_kernel(
E         File "cupy/core/_kernel.pyx", line 38, in cupy.core._kernel._get_simple_elementwise_kernel
E           cpdef function.Function _get_simple_elementwise_kernel(
E         File "cupy/core/_kernel.pyx", line 61, in cupy.core._kernel._get_simple_elementwise_kernel
E           module = compile_with_cache(module_code, options)
E         File "cupy/core/core.pyx", line 2021, in cupy.core.core.compile_with_cache
E           return cuda.compile_with_cache(
E         File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.t8hdvgF7FH/cupy/cupy/cuda/compiler.py", line 428, in compile_with_cache
E           return _compile_with_cache_hip(
E         File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.t8hdvgF7FH/cupy/cupy/cuda/compiler.py", line 829, in _compile_with_cache_hip
E           temp_path = tf.name
E         File "/home/kmaeh/.pyenv/versions/3.8.7/lib/python3.8/tempfile.py", line 491, in __exit__
E           result = self.file.__exit__(exc, value, tb)
E       OSError: [Errno 28] No space left on device

/home/kmaeh/.pyenv/versions/3.8.7/lib/python3.8/tempfile.py:491: AssertionError
----------------------------- Captured stdout call -----------------------------
dtype is <class 'numpy.float64'>
________ TestPut_param_12_{mode='raise', n_vals=5, shape=(7,)}.test_put ________

self = <<cupy_tests.indexing_tests.test_insert.TestPut_param_12_{mode='raise', n_vals=5, shape=(7,)} testMethod=test_put>  parameter: {'mode': 'raise', 'n_vals': 5, 'shape': (7,)}>
xp = <module 'cupy' from '/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.t8hdvgF7FH/cupy/cupy/__init__.py'>
dtype = <class 'numpy.float64'>

    @testing.for_all_dtypes()
    @testing.numpy_cupy_array_equal()
    def test_put(self, xp, dtype):
        a = testing.shaped_arange(self.shape, xp, dtype)
        # Take care so that actual indices don't overlap.
        if self.mode == 'raise':
            inds = xp.array([2, -1, 3, 0])
        else:
            inds = xp.array([2, -8, 3, 7])
        vals = testing.shaped_random((self.n_vals,), xp, dtype)
>       xp.put(a, inds, vals, self.mode)

tests/cupy_tests/indexing_tests/test_insert.py:80: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
cupy/_indexing/insert.py:67: in put
    a.put(ind, v, mode=mode)
cupy/core/core.pyx:669: in cupy.core.core.ndarray.put
    cpdef put(self, indices, values, mode='wrap'):
cupy/core/core.pyx:676: in cupy.core.core.ndarray.put
    return _indexing._ndarray_put(self, indices, values, mode)
cupy/core/_routines_indexing.pyx:160: in cupy.core._routines_indexing._ndarray_put
    _put_raise_kernel(indices, values, values.size, n, self, err)
cupy/core/_kernel.pyx:840: in cupy.core._kernel.ElementwiseKernel.__call__
    kern = self._get_elementwise_kernel(dev_id, arginfos, type_map)
cupy/core/_kernel.pyx:865: in cupy.core._kernel.ElementwiseKernel._get_elementwise_kernel
    kern = _get_elementwise_kernel(
cupy/_util.pyx:59: in cupy._util.memoize.decorator.ret
    result = f(*args, **kwargs)
cupy/core/_kernel.pyx:652: in cupy.core._kernel._get_elementwise_kernel
    return _get_simple_elementwise_kernel(
cupy/core/_kernel.pyx:38: in cupy.core._kernel._get_simple_elementwise_kernel
    cpdef function.Function _get_simple_elementwise_kernel(
cupy/core/_kernel.pyx:61: in cupy.core._kernel._get_simple_elementwise_kernel
    module = compile_with_cache(module_code, options)
cupy/core/core.pyx:2021: in cupy.core.core.compile_with_cache
    return cuda.compile_with_cache(
cupy/cuda/compiler.py:428: in compile_with_cache
    return _compile_with_cache_hip(
cupy/cuda/compiler.py:829: in _compile_with_cache_hip
    temp_path = tf.name
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <tempfile._TemporaryFileWrapper object at 0x7f50116e4160>, exc = None
value = None, tb = None

    def __exit__(self, exc, value, tb):
>       result = self.file.__exit__(exc, value, tb)
E       AssertionError: Only cupy raises error
E       
E       Traceback (most recent call last):
E         File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.t8hdvgF7FH/cupy/cupy/testing/_helper.py", line 47, in _call_func
E           result = impl(self, *args, **kw)
E         File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.t8hdvgF7FH/cupy/tests/cupy_tests/indexing_tests/test_insert.py", line 80, in test_put
E           xp.put(a, inds, vals, self.mode)
E         File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.t8hdvgF7FH/cupy/cupy/_indexing/insert.py", line 67, in put
E           a.put(ind, v, mode=mode)
E         File "cupy/core/core.pyx", line 669, in cupy.core.core.ndarray.put
E           cpdef put(self, indices, values, mode='wrap'):
E         File "cupy/core/core.pyx", line 676, in cupy.core.core.ndarray.put
E           return _indexing._ndarray_put(self, indices, values, mode)
E         File "cupy/core/_routines_indexing.pyx", line 160, in cupy.core._routines_indexing._ndarray_put
E           _put_raise_kernel(indices, values, values.size, n, self, err)
E         File "cupy/core/_kernel.pyx", line 840, in cupy.core._kernel.ElementwiseKernel.__call__
E           kern = self._get_elementwise_kernel(dev_id, arginfos, type_map)
E         File "cupy/core/_kernel.pyx", line 865, in cupy.core._kernel.ElementwiseKernel._get_elementwise_kernel
E           kern = _get_elementwise_kernel(
E         File "cupy/_util.pyx", line 59, in cupy._util.memoize.decorator.ret
E           result = f(*args, **kwargs)
E         File "cupy/core/_kernel.pyx", line 652, in cupy.core._kernel._get_elementwise_kernel
E           return _get_simple_elementwise_kernel(
E         File "cupy/core/_kernel.pyx", line 38, in cupy.core._kernel._get_simple_elementwise_kernel
E           cpdef function.Function _get_simple_elementwise_kernel(
E         File "cupy/core/_kernel.pyx", line 61, in cupy.core._kernel._get_simple_elementwise_kernel
E           module = compile_with_cache(module_code, options)
E         File "cupy/core/core.pyx", line 2021, in cupy.core.core.compile_with_cache
E           return cuda.compile_with_cache(
E         File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.t8hdvgF7FH/cupy/cupy/cuda/compiler.py", line 428, in compile_with_cache
E           return _compile_with_cache_hip(
E         File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.t8hdvgF7FH/cupy/cupy/cuda/compiler.py", line 829, in _compile_with_cache_hip
E           temp_path = tf.name
E         File "/home/kmaeh/.pyenv/versions/3.8.7/lib/python3.8/tempfile.py", line 491, in __exit__
E           result = self.file.__exit__(exc, value, tb)
E       OSError: [Errno 28] No space left on device

/home/kmaeh/.pyenv/versions/3.8.7/lib/python3.8/tempfile.py:491: AssertionError
----------------------------- Captured stdout call -----------------------------
dtype is <class 'numpy.float64'>
_______ TestPut_param_13_{mode='raise', n_vals=5, shape=(2, 3)}.test_put _______

self = <<cupy_tests.indexing_tests.test_insert.TestPut_param_13_{mode='raise', n_vals=5, shape=(2, 3)} testMethod=test_put>  parameter: {'mode': 'raise', 'n_vals': 5, 'shape': (2, 3)}>
xp = <module 'cupy' from '/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.t8hdvgF7FH/cupy/cupy/__init__.py'>
dtype = <class 'numpy.float64'>

    @testing.for_all_dtypes()
    @testing.numpy_cupy_array_equal()
    def test_put(self, xp, dtype):
        a = testing.shaped_arange(self.shape, xp, dtype)
        # Take care so that actual indices don't overlap.
        if self.mode == 'raise':
            inds = xp.array([2, -1, 3, 0])
        else:
            inds = xp.array([2, -8, 3, 7])
        vals = testing.shaped_random((self.n_vals,), xp, dtype)
>       xp.put(a, inds, vals, self.mode)

tests/cupy_tests/indexing_tests/test_insert.py:80: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
cupy/_indexing/insert.py:67: in put
    a.put(ind, v, mode=mode)
cupy/core/core.pyx:669: in cupy.core.core.ndarray.put
    cpdef put(self, indices, values, mode='wrap'):
cupy/core/core.pyx:676: in cupy.core.core.ndarray.put
    return _indexing._ndarray_put(self, indices, values, mode)
cupy/core/_routines_indexing.pyx:160: in cupy.core._routines_indexing._ndarray_put
    _put_raise_kernel(indices, values, values.size, n, self, err)
cupy/core/_kernel.pyx:840: in cupy.core._kernel.ElementwiseKernel.__call__
    kern = self._get_elementwise_kernel(dev_id, arginfos, type_map)
cupy/core/_kernel.pyx:865: in cupy.core._kernel.ElementwiseKernel._get_elementwise_kernel
    kern = _get_elementwise_kernel(
cupy/_util.pyx:59: in cupy._util.memoize.decorator.ret
    result = f(*args, **kwargs)
cupy/core/_kernel.pyx:652: in cupy.core._kernel._get_elementwise_kernel
    return _get_simple_elementwise_kernel(
cupy/core/_kernel.pyx:38: in cupy.core._kernel._get_simple_elementwise_kernel
    cpdef function.Function _get_simple_elementwise_kernel(
cupy/core/_kernel.pyx:61: in cupy.core._kernel._get_simple_elementwise_kernel
    module = compile_with_cache(module_code, options)
cupy/core/core.pyx:2021: in cupy.core.core.compile_with_cache
    return cuda.compile_with_cache(
cupy/cuda/compiler.py:428: in compile_with_cache
    return _compile_with_cache_hip(
cupy/cuda/compiler.py:829: in _compile_with_cache_hip
    temp_path = tf.name
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <tempfile._TemporaryFileWrapper object at 0x7f5044cf4eb0>, exc = None
value = None, tb = None

    def __exit__(self, exc, value, tb):
>       result = self.file.__exit__(exc, value, tb)
E       AssertionError: Only cupy raises error
E       
E       Traceback (most recent call last):
E         File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.t8hdvgF7FH/cupy/cupy/testing/_helper.py", line 47, in _call_func
E           result = impl(self, *args, **kw)
E         File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.t8hdvgF7FH/cupy/tests/cupy_tests/indexing_tests/test_insert.py", line 80, in test_put
E           xp.put(a, inds, vals, self.mode)
E         File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.t8hdvgF7FH/cupy/cupy/_indexing/insert.py", line 67, in put
E           a.put(ind, v, mode=mode)
E         File "cupy/core/core.pyx", line 669, in cupy.core.core.ndarray.put
E           cpdef put(self, indices, values, mode='wrap'):
E         File "cupy/core/core.pyx", line 676, in cupy.core.core.ndarray.put
E           return _indexing._ndarray_put(self, indices, values, mode)
E         File "cupy/core/_routines_indexing.pyx", line 160, in cupy.core._routines_indexing._ndarray_put
E           _put_raise_kernel(indices, values, values.size, n, self, err)
E         File "cupy/core/_kernel.pyx", line 840, in cupy.core._kernel.ElementwiseKernel.__call__
E           kern = self._get_elementwise_kernel(dev_id, arginfos, type_map)
E         File "cupy/core/_kernel.pyx", line 865, in cupy.core._kernel.ElementwiseKernel._get_elementwise_kernel
E           kern = _get_elementwise_kernel(
E         File "cupy/_util.pyx", line 59, in cupy._util.memoize.decorator.ret
E           result = f(*args, **kwargs)
E         File "cupy/core/_kernel.pyx", line 652, in cupy.core._kernel._get_elementwise_kernel
E           return _get_simple_elementwise_kernel(
E         File "cupy/core/_kernel.pyx", line 38, in cupy.core._kernel._get_simple_elementwise_kernel
E           cpdef function.Function _get_simple_elementwise_kernel(
E         File "cupy/core/_kernel.pyx", line 61, in cupy.core._kernel._get_simple_elementwise_kernel
E           module = compile_with_cache(module_code, options)
E         File "cupy/core/core.pyx", line 2021, in cupy.core.core.compile_with_cache
E           return cuda.compile_with_cache(
E         File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.t8hdvgF7FH/cupy/cupy/cuda/compiler.py", line 428, in compile_with_cache
E           return _compile_with_cache_hip(
E         File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.t8hdvgF7FH/cupy/cupy/cuda/compiler.py", line 829, in _compile_with_cache_hip
E           temp_path = tf.name
E         File "/home/kmaeh/.pyenv/versions/3.8.7/lib/python3.8/tempfile.py", line 491, in __exit__
E           result = self.file.__exit__(exc, value, tb)
E       OSError: [Errno 28] No space left on device

/home/kmaeh/.pyenv/versions/3.8.7/lib/python3.8/tempfile.py:491: AssertionError
----------------------------- Captured stdout call -----------------------------
dtype is <class 'numpy.float64'>
_____ TestPut_param_14_{mode='raise', n_vals=5, shape=(4, 3, 2)}.test_put ______

self = <<cupy_tests.indexing_tests.test_insert.TestPut_param_14_{mode='raise', n_vals=5, shape=(4, 3, 2)} testMethod=test_put>  parameter: {'mode': 'raise', 'n_vals': 5, 'shape': (4, 3, 2)}>
xp = <module 'cupy' from '/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.t8hdvgF7FH/cupy/cupy/__init__.py'>
dtype = <class 'numpy.float64'>

    @testing.for_all_dtypes()
    @testing.numpy_cupy_array_equal()
    def test_put(self, xp, dtype):
        a = testing.shaped_arange(self.shape, xp, dtype)
        # Take care so that actual indices don't overlap.
        if self.mode == 'raise':
            inds = xp.array([2, -1, 3, 0])
        else:
            inds = xp.array([2, -8, 3, 7])
        vals = testing.shaped_random((self.n_vals,), xp, dtype)
>       xp.put(a, inds, vals, self.mode)

tests/cupy_tests/indexing_tests/test_insert.py:80: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
cupy/_indexing/insert.py:67: in put
    a.put(ind, v, mode=mode)
cupy/core/core.pyx:669: in cupy.core.core.ndarray.put
    cpdef put(self, indices, values, mode='wrap'):
cupy/core/core.pyx:676: in cupy.core.core.ndarray.put
    return _indexing._ndarray_put(self, indices, values, mode)
cupy/core/_routines_indexing.pyx:160: in cupy.core._routines_indexing._ndarray_put
    _put_raise_kernel(indices, values, values.size, n, self, err)
cupy/core/_kernel.pyx:840: in cupy.core._kernel.ElementwiseKernel.__call__
    kern = self._get_elementwise_kernel(dev_id, arginfos, type_map)
cupy/core/_kernel.pyx:865: in cupy.core._kernel.ElementwiseKernel._get_elementwise_kernel
    kern = _get_elementwise_kernel(
cupy/_util.pyx:59: in cupy._util.memoize.decorator.ret
    result = f(*args, **kwargs)
cupy/core/_kernel.pyx:652: in cupy.core._kernel._get_elementwise_kernel
    return _get_simple_elementwise_kernel(
cupy/core/_kernel.pyx:38: in cupy.core._kernel._get_simple_elementwise_kernel
    cpdef function.Function _get_simple_elementwise_kernel(
cupy/core/_kernel.pyx:61: in cupy.core._kernel._get_simple_elementwise_kernel
    module = compile_with_cache(module_code, options)
cupy/core/core.pyx:2021: in cupy.core.core.compile_with_cache
    return cuda.compile_with_cache(
cupy/cuda/compiler.py:428: in compile_with_cache
    return _compile_with_cache_hip(
cupy/cuda/compiler.py:829: in _compile_with_cache_hip
    temp_path = tf.name
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <tempfile._TemporaryFileWrapper object at 0x7f50105c0c40>, exc = None
value = None, tb = None

    def __exit__(self, exc, value, tb):
>       result = self.file.__exit__(exc, value, tb)
E       AssertionError: Only cupy raises error
E       
E       Traceback (most recent call last):
E         File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.t8hdvgF7FH/cupy/cupy/testing/_helper.py", line 47, in _call_func
E           result = impl(self, *args, **kw)
E         File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.t8hdvgF7FH/cupy/tests/cupy_tests/indexing_tests/test_insert.py", line 80, in test_put
E           xp.put(a, inds, vals, self.mode)
E         File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.t8hdvgF7FH/cupy/cupy/_indexing/insert.py", line 67, in put
E           a.put(ind, v, mode=mode)
E         File "cupy/core/core.pyx", line 669, in cupy.core.core.ndarray.put
E           cpdef put(self, indices, values, mode='wrap'):
E         File "cupy/core/core.pyx", line 676, in cupy.core.core.ndarray.put
E           return _indexing._ndarray_put(self, indices, values, mode)
E         File "cupy/core/_routines_indexing.pyx", line 160, in cupy.core._routines_indexing._ndarray_put
E           _put_raise_kernel(indices, values, values.size, n, self, err)
E         File "cupy/core/_kernel.pyx", line 840, in cupy.core._kernel.ElementwiseKernel.__call__
E           kern = self._get_elementwise_kernel(dev_id, arginfos, type_map)
E         File "cupy/core/_kernel.pyx", line 865, in cupy.core._kernel.ElementwiseKernel._get_elementwise_kernel
E           kern = _get_elementwise_kernel(
E         File "cupy/_util.pyx", line 59, in cupy._util.memoize.decorator.ret
E           result = f(*args, **kwargs)
E         File "cupy/core/_kernel.pyx", line 652, in cupy.core._kernel._get_elementwise_kernel
E           return _get_simple_elementwise_kernel(
E         File "cupy/core/_kernel.pyx", line 38, in cupy.core._kernel._get_simple_elementwise_kernel
E           cpdef function.Function _get_simple_elementwise_kernel(
E         File "cupy/core/_kernel.pyx", line 61, in cupy.core._kernel._get_simple_elementwise_kernel
E           module = compile_with_cache(module_code, options)
E         File "cupy/core/core.pyx", line 2021, in cupy.core.core.compile_with_cache
E           return cuda.compile_with_cache(
E         File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.t8hdvgF7FH/cupy/cupy/cuda/compiler.py", line 428, in compile_with_cache
E           return _compile_with_cache_hip(
E         File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.t8hdvgF7FH/cupy/cupy/cuda/compiler.py", line 829, in _compile_with_cache_hip
E           temp_path = tf.name
E         File "/home/kmaeh/.pyenv/versions/3.8.7/lib/python3.8/tempfile.py", line 491, in __exit__
E           result = self.file.__exit__(exc, value, tb)
E       OSError: [Errno 28] No space left on device

/home/kmaeh/.pyenv/versions/3.8.7/lib/python3.8/tempfile.py:491: AssertionError
----------------------------- Captured stdout call -----------------------------
dtype is <class 'numpy.float64'>
________ TestPut_param_18_{mode='wrap', n_vals=1, shape=(7,)}.test_put _________

self = <<cupy_tests.indexing_tests.test_insert.TestPut_param_18_{mode='wrap', n_vals=1, shape=(7,)} testMethod=test_put>  parameter: {'mode': 'wrap', 'n_vals': 1, 'shape': (7,)}>
xp = <module 'cupy' from '/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.t8hdvgF7FH/cupy/cupy/__init__.py'>
dtype = <class 'numpy.float64'>

    @testing.for_all_dtypes()
    @testing.numpy_cupy_array_equal()
    def test_put(self, xp, dtype):
        a = testing.shaped_arange(self.shape, xp, dtype)
        # Take care so that actual indices don't overlap.
        if self.mode == 'raise':
            inds = xp.array([2, -1, 3, 0])
        else:
            inds = xp.array([2, -8, 3, 7])
        vals = testing.shaped_random((self.n_vals,), xp, dtype)
>       xp.put(a, inds, vals, self.mode)

tests/cupy_tests/indexing_tests/test_insert.py:80: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
cupy/_indexing/insert.py:67: in put
    a.put(ind, v, mode=mode)
cupy/core/core.pyx:669: in cupy.core.core.ndarray.put
    cpdef put(self, indices, values, mode='wrap'):
cupy/core/core.pyx:676: in cupy.core.core.ndarray.put
    return _indexing._ndarray_put(self, indices, values, mode)
cupy/core/_routines_indexing.pyx:164: in cupy.core._routines_indexing._ndarray_put
    _put_wrap_kernel(indices, values, values.size, n, self)
cupy/core/_kernel.pyx:840: in cupy.core._kernel.ElementwiseKernel.__call__
    kern = self._get_elementwise_kernel(dev_id, arginfos, type_map)
cupy/core/_kernel.pyx:865: in cupy.core._kernel.ElementwiseKernel._get_elementwise_kernel
    kern = _get_elementwise_kernel(
cupy/_util.pyx:59: in cupy._util.memoize.decorator.ret
    result = f(*args, **kwargs)
cupy/core/_kernel.pyx:652: in cupy.core._kernel._get_elementwise_kernel
    return _get_simple_elementwise_kernel(
cupy/core/_kernel.pyx:38: in cupy.core._kernel._get_simple_elementwise_kernel
    cpdef function.Function _get_simple_elementwise_kernel(
cupy/core/_kernel.pyx:61: in cupy.core._kernel._get_simple_elementwise_kernel
    module = compile_with_cache(module_code, options)
cupy/core/core.pyx:2021: in cupy.core.core.compile_with_cache
    return cuda.compile_with_cache(
cupy/cuda/compiler.py:428: in compile_with_cache
    return _compile_with_cache_hip(
cupy/cuda/compiler.py:829: in _compile_with_cache_hip
    temp_path = tf.name
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <tempfile._TemporaryFileWrapper object at 0x7f50108fbca0>, exc = None
value = None, tb = None

    def __exit__(self, exc, value, tb):
>       result = self.file.__exit__(exc, value, tb)
E       AssertionError: Only cupy raises error
E       
E       Traceback (most recent call last):
E         File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.t8hdvgF7FH/cupy/cupy/testing/_helper.py", line 47, in _call_func
E           result = impl(self, *args, **kw)
E         File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.t8hdvgF7FH/cupy/tests/cupy_tests/indexing_tests/test_insert.py", line 80, in test_put
E           xp.put(a, inds, vals, self.mode)
E         File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.t8hdvgF7FH/cupy/cupy/_indexing/insert.py", line 67, in put
E           a.put(ind, v, mode=mode)
E         File "cupy/core/core.pyx", line 669, in cupy.core.core.ndarray.put
E           cpdef put(self, indices, values, mode='wrap'):
E         File "cupy/core/core.pyx", line 676, in cupy.core.core.ndarray.put
E           return _indexing._ndarray_put(self, indices, values, mode)
E         File "cupy/core/_routines_indexing.pyx", line 164, in cupy.core._routines_indexing._ndarray_put
E           _put_wrap_kernel(indices, values, values.size, n, self)
E         File "cupy/core/_kernel.pyx", line 840, in cupy.core._kernel.ElementwiseKernel.__call__
E           kern = self._get_elementwise_kernel(dev_id, arginfos, type_map)
E         File "cupy/core/_kernel.pyx", line 865, in cupy.core._kernel.ElementwiseKernel._get_elementwise_kernel
E           kern = _get_elementwise_kernel(
E         File "cupy/_util.pyx", line 59, in cupy._util.memoize.decorator.ret
E           result = f(*args, **kwargs)
E         File "cupy/core/_kernel.pyx", line 652, in cupy.core._kernel._get_elementwise_kernel
E           return _get_simple_elementwise_kernel(
E         File "cupy/core/_kernel.pyx", line 38, in cupy.core._kernel._get_simple_elementwise_kernel
E           cpdef function.Function _get_simple_elementwise_kernel(
E         File "cupy/core/_kernel.pyx", line 61, in cupy.core._kernel._get_simple_elementwise_kernel
E           module = compile_with_cache(module_code, options)
E         File "cupy/core/core.pyx", line 2021, in cupy.core.core.compile_with_cache
E           return cuda.compile_with_cache(
E         File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.t8hdvgF7FH/cupy/cupy/cuda/compiler.py", line 428, in compile_with_cache
E           return _compile_with_cache_hip(
E         File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.t8hdvgF7FH/cupy/cupy/cuda/compiler.py", line 829, in _compile_with_cache_hip
E           temp_path = tf.name
E         File "/home/kmaeh/.pyenv/versions/3.8.7/lib/python3.8/tempfile.py", line 491, in __exit__
E           result = self.file.__exit__(exc, value, tb)
E       OSError: [Errno 28] No space left on device

/home/kmaeh/.pyenv/versions/3.8.7/lib/python3.8/tempfile.py:491: AssertionError
----------------------------- Captured stdout call -----------------------------
dtype is <class 'numpy.float64'>
_______ TestPut_param_19_{mode='wrap', n_vals=1, shape=(2, 3)}.test_put ________

self = <<cupy_tests.indexing_tests.test_insert.TestPut_param_19_{mode='wrap', n_vals=1, shape=(2, 3)} testMethod=test_put>  parameter: {'mode': 'wrap', 'n_vals': 1, 'shape': (2, 3)}>
xp = <module 'cupy' from '/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.t8hdvgF7FH/cupy/cupy/__init__.py'>
dtype = <class 'numpy.float64'>

    @testing.for_all_dtypes()
    @testing.numpy_cupy_array_equal()
    def test_put(self, xp, dtype):
        a = testing.shaped_arange(self.shape, xp, dtype)
        # Take care so that actual indices don't overlap.
        if self.mode == 'raise':
            inds = xp.array([2, -1, 3, 0])
        else:
            inds = xp.array([2, -8, 3, 7])
        vals = testing.shaped_random((self.n_vals,), xp, dtype)
>       xp.put(a, inds, vals, self.mode)

tests/cupy_tests/indexing_tests/test_insert.py:80: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
cupy/_indexing/insert.py:67: in put
    a.put(ind, v, mode=mode)
cupy/core/core.pyx:669: in cupy.core.core.ndarray.put
    cpdef put(self, indices, values, mode='wrap'):
cupy/core/core.pyx:676: in cupy.core.core.ndarray.put
    return _indexing._ndarray_put(self, indices, values, mode)
cupy/core/_routines_indexing.pyx:164: in cupy.core._routines_indexing._ndarray_put
    _put_wrap_kernel(indices, values, values.size, n, self)
cupy/core/_kernel.pyx:840: in cupy.core._kernel.ElementwiseKernel.__call__
    kern = self._get_elementwise_kernel(dev_id, arginfos, type_map)
cupy/core/_kernel.pyx:865: in cupy.core._kernel.ElementwiseKernel._get_elementwise_kernel
    kern = _get_elementwise_kernel(
cupy/_util.pyx:59: in cupy._util.memoize.decorator.ret
    result = f(*args, **kwargs)
cupy/core/_kernel.pyx:652: in cupy.core._kernel._get_elementwise_kernel
    return _get_simple_elementwise_kernel(
cupy/core/_kernel.pyx:38: in cupy.core._kernel._get_simple_elementwise_kernel
    cpdef function.Function _get_simple_elementwise_kernel(
cupy/core/_kernel.pyx:61: in cupy.core._kernel._get_simple_elementwise_kernel
    module = compile_with_cache(module_code, options)
cupy/core/core.pyx:2021: in cupy.core.core.compile_with_cache
    return cuda.compile_with_cache(
cupy/cuda/compiler.py:428: in compile_with_cache
    return _compile_with_cache_hip(
cupy/cuda/compiler.py:829: in _compile_with_cache_hip
    temp_path = tf.name
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <tempfile._TemporaryFileWrapper object at 0x7f501099d730>, exc = None
value = None, tb = None

    def __exit__(self, exc, value, tb):
>       result = self.file.__exit__(exc, value, tb)
E       AssertionError: Only cupy raises error
E       
E       Traceback (most recent call last):
E         File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.t8hdvgF7FH/cupy/cupy/testing/_helper.py", line 47, in _call_func
E           result = impl(self, *args, **kw)
E         File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.t8hdvgF7FH/cupy/tests/cupy_tests/indexing_tests/test_insert.py", line 80, in test_put
E           xp.put(a, inds, vals, self.mode)
E         File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.t8hdvgF7FH/cupy/cupy/_indexing/insert.py", line 67, in put
E           a.put(ind, v, mode=mode)
E         File "cupy/core/core.pyx", line 669, in cupy.core.core.ndarray.put
E           cpdef put(self, indices, values, mode='wrap'):
E         File "cupy/core/core.pyx", line 676, in cupy.core.core.ndarray.put
E           return _indexing._ndarray_put(self, indices, values, mode)
E         File "cupy/core/_routines_indexing.pyx", line 164, in cupy.core._routines_indexing._ndarray_put
E           _put_wrap_kernel(indices, values, values.size, n, self)
E         File "cupy/core/_kernel.pyx", line 840, in cupy.core._kernel.ElementwiseKernel.__call__
E           kern = self._get_elementwise_kernel(dev_id, arginfos, type_map)
E         File "cupy/core/_kernel.pyx", line 865, in cupy.core._kernel.ElementwiseKernel._get_elementwise_kernel
E           kern = _get_elementwise_kernel(
E         File "cupy/_util.pyx", line 59, in cupy._util.memoize.decorator.ret
E           result = f(*args, **kwargs)
E         File "cupy/core/_kernel.pyx", line 652, in cupy.core._kernel._get_elementwise_kernel
E           return _get_simple_elementwise_kernel(
E         File "cupy/core/_kernel.pyx", line 38, in cupy.core._kernel._get_simple_elementwise_kernel
E           cpdef function.Function _get_simple_elementwise_kernel(
E         File "cupy/core/_kernel.pyx", line 61, in cupy.core._kernel._get_simple_elementwise_kernel
E           module = compile_with_cache(module_code, options)
E         File "cupy/core/core.pyx", line 2021, in cupy.core.core.compile_with_cache
E           return cuda.compile_with_cache(
E         File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.t8hdvgF7FH/cupy/cupy/cuda/compiler.py", line 428, in compile_with_cache
E           return _compile_with_cache_hip(
E         File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.t8hdvgF7FH/cupy/cupy/cuda/compiler.py", line 829, in _compile_with_cache_hip
E           temp_path = tf.name
E         File "/home/kmaeh/.pyenv/versions/3.8.7/lib/python3.8/tempfile.py", line 491, in __exit__
E           result = self.file.__exit__(exc, value, tb)
E       OSError: [Errno 28] No space left on device

/home/kmaeh/.pyenv/versions/3.8.7/lib/python3.8/tempfile.py:491: AssertionError
----------------------------- Captured stdout call -----------------------------
dtype is <class 'numpy.float64'>
______ TestPut_param_20_{mode='wrap', n_vals=1, shape=(4, 3, 2)}.test_put ______

self = <<cupy_tests.indexing_tests.test_insert.TestPut_param_20_{mode='wrap', n_vals=1, shape=(4, 3, 2)} testMethod=test_put>  parameter: {'mode': 'wrap', 'n_vals': 1, 'shape': (4, 3, 2)}>
xp = <module 'cupy' from '/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.t8hdvgF7FH/cupy/cupy/__init__.py'>
dtype = <class 'numpy.float64'>

    @testing.for_all_dtypes()
    @testing.numpy_cupy_array_equal()
    def test_put(self, xp, dtype):
        a = testing.shaped_arange(self.shape, xp, dtype)
        # Take care so that actual indices don't overlap.
        if self.mode == 'raise':
            inds = xp.array([2, -1, 3, 0])
        else:
            inds = xp.array([2, -8, 3, 7])
        vals = testing.shaped_random((self.n_vals,), xp, dtype)
>       xp.put(a, inds, vals, self.mode)

tests/cupy_tests/indexing_tests/test_insert.py:80: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
cupy/_indexing/insert.py:67: in put
    a.put(ind, v, mode=mode)
cupy/core/core.pyx:669: in cupy.core.core.ndarray.put
    cpdef put(self, indices, values, mode='wrap'):
cupy/core/core.pyx:676: in cupy.core.core.ndarray.put
    return _indexing._ndarray_put(self, indices, values, mode)
cupy/core/_routines_indexing.pyx:164: in cupy.core._routines_indexing._ndarray_put
    _put_wrap_kernel(indices, values, values.size, n, self)
cupy/core/_kernel.pyx:840: in cupy.core._kernel.ElementwiseKernel.__call__
    kern = self._get_elementwise_kernel(dev_id, arginfos, type_map)
cupy/core/_kernel.pyx:865: in cupy.core._kernel.ElementwiseKernel._get_elementwise_kernel
    kern = _get_elementwise_kernel(
cupy/_util.pyx:59: in cupy._util.memoize.decorator.ret
    result = f(*args, **kwargs)
cupy/core/_kernel.pyx:652: in cupy.core._kernel._get_elementwise_kernel
    return _get_simple_elementwise_kernel(
cupy/core/_kernel.pyx:38: in cupy.core._kernel._get_simple_elementwise_kernel
    cpdef function.Function _get_simple_elementwise_kernel(
cupy/core/_kernel.pyx:61: in cupy.core._kernel._get_simple_elementwise_kernel
    module = compile_with_cache(module_code, options)
cupy/core/core.pyx:2021: in cupy.core.core.compile_with_cache
    return cuda.compile_with_cache(
cupy/cuda/compiler.py:428: in compile_with_cache
    return _compile_with_cache_hip(
cupy/cuda/compiler.py:829: in _compile_with_cache_hip
    temp_path = tf.name
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <tempfile._TemporaryFileWrapper object at 0x7f5010880280>, exc = None
value = None, tb = None

    def __exit__(self, exc, value, tb):
>       result = self.file.__exit__(exc, value, tb)
E       AssertionError: Only cupy raises error
E       
E       Traceback (most recent call last):
E         File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.t8hdvgF7FH/cupy/cupy/testing/_helper.py", line 47, in _call_func
E           result = impl(self, *args, **kw)
E         File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.t8hdvgF7FH/cupy/tests/cupy_tests/indexing_tests/test_insert.py", line 80, in test_put
E           xp.put(a, inds, vals, self.mode)
E         File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.t8hdvgF7FH/cupy/cupy/_indexing/insert.py", line 67, in put
E           a.put(ind, v, mode=mode)
E         File "cupy/core/core.pyx", line 669, in cupy.core.core.ndarray.put
E           cpdef put(self, indices, values, mode='wrap'):
E         File "cupy/core/core.pyx", line 676, in cupy.core.core.ndarray.put
E           return _indexing._ndarray_put(self, indices, values, mode)
E         File "cupy/core/_routines_indexing.pyx", line 164, in cupy.core._routines_indexing._ndarray_put
E           _put_wrap_kernel(indices, values, values.size, n, self)
E         File "cupy/core/_kernel.pyx", line 840, in cupy.core._kernel.ElementwiseKernel.__call__
E           kern = self._get_elementwise_kernel(dev_id, arginfos, type_map)
E         File "cupy/core/_kernel.pyx", line 865, in cupy.core._kernel.ElementwiseKernel._get_elementwise_kernel
E           kern = _get_elementwise_kernel(
E         File "cupy/_util.pyx", line 59, in cupy._util.memoize.decorator.ret
E           result = f(*args, **kwargs)
E         File "cupy/core/_kernel.pyx", line 652, in cupy.core._kernel._get_elementwise_kernel
E           return _get_simple_elementwise_kernel(
E         File "cupy/core/_kernel.pyx", line 38, in cupy.core._kernel._get_simple_elementwise_kernel
E           cpdef function.Function _get_simple_elementwise_kernel(
E         File "cupy/core/_kernel.pyx", line 61, in cupy.core._kernel._get_simple_elementwise_kernel
E           module = compile_with_cache(module_code, options)
E         File "cupy/core/core.pyx", line 2021, in cupy.core.core.compile_with_cache
E           return cuda.compile_with_cache(
E         File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.t8hdvgF7FH/cupy/cupy/cuda/compiler.py", line 428, in compile_with_cache
E           return _compile_with_cache_hip(
E         File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.t8hdvgF7FH/cupy/cupy/cuda/compiler.py", line 829, in _compile_with_cache_hip
E           temp_path = tf.name
E         File "/home/kmaeh/.pyenv/versions/3.8.7/lib/python3.8/tempfile.py", line 491, in __exit__
E           result = self.file.__exit__(exc, value, tb)
E       OSError: [Errno 28] No space left on device

/home/kmaeh/.pyenv/versions/3.8.7/lib/python3.8/tempfile.py:491: AssertionError
----------------------------- Captured stdout call -----------------------------
dtype is <class 'numpy.float64'>
________ TestPut_param_21_{mode='wrap', n_vals=3, shape=(7,)}.test_put _________

self = <<cupy_tests.indexing_tests.test_insert.TestPut_param_21_{mode='wrap', n_vals=3, shape=(7,)} testMethod=test_put>  parameter: {'mode': 'wrap', 'n_vals': 3, 'shape': (7,)}>
xp = <module 'cupy' from '/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.t8hdvgF7FH/cupy/cupy/__init__.py'>
dtype = <class 'numpy.float64'>

    @testing.for_all_dtypes()
    @testing.numpy_cupy_array_equal()
    def test_put(self, xp, dtype):
        a = testing.shaped_arange(self.shape, xp, dtype)
        # Take care so that actual indices don't overlap.
        if self.mode == 'raise':
            inds = xp.array([2, -1, 3, 0])
        else:
            inds = xp.array([2, -8, 3, 7])
        vals = testing.shaped_random((self.n_vals,), xp, dtype)
>       xp.put(a, inds, vals, self.mode)

tests/cupy_tests/indexing_tests/test_insert.py:80: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
cupy/_indexing/insert.py:67: in put
    a.put(ind, v, mode=mode)
cupy/core/core.pyx:669: in cupy.core.core.ndarray.put
    cpdef put(self, indices, values, mode='wrap'):
cupy/core/core.pyx:676: in cupy.core.core.ndarray.put
    return _indexing._ndarray_put(self, indices, values, mode)
cupy/core/_routines_indexing.pyx:164: in cupy.core._routines_indexing._ndarray_put
    _put_wrap_kernel(indices, values, values.size, n, self)
cupy/core/_kernel.pyx:840: in cupy.core._kernel.ElementwiseKernel.__call__
    kern = self._get_elementwise_kernel(dev_id, arginfos, type_map)
cupy/core/_kernel.pyx:865: in cupy.core._kernel.ElementwiseKernel._get_elementwise_kernel
    kern = _get_elementwise_kernel(
cupy/_util.pyx:59: in cupy._util.memoize.decorator.ret
    result = f(*args, **kwargs)
cupy/core/_kernel.pyx:652: in cupy.core._kernel._get_elementwise_kernel
    return _get_simple_elementwise_kernel(
cupy/core/_kernel.pyx:38: in cupy.core._kernel._get_simple_elementwise_kernel
    cpdef function.Function _get_simple_elementwise_kernel(
cupy/core/_kernel.pyx:61: in cupy.core._kernel._get_simple_elementwise_kernel
    module = compile_with_cache(module_code, options)
cupy/core/core.pyx:2021: in cupy.core.core.compile_with_cache
    return cuda.compile_with_cache(
cupy/cuda/compiler.py:428: in compile_with_cache
    return _compile_with_cache_hip(
cupy/cuda/compiler.py:829: in _compile_with_cache_hip
    temp_path = tf.name
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <tempfile._TemporaryFileWrapper object at 0x7f5010e69d00>, exc = None
value = None, tb = None

    def __exit__(self, exc, value, tb):
>       result = self.file.__exit__(exc, value, tb)
E       AssertionError: Only cupy raises error
E       
E       Traceback (most recent call last):
E         File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.t8hdvgF7FH/cupy/cupy/testing/_helper.py", line 47, in _call_func
E           result = impl(self, *args, **kw)
E         File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.t8hdvgF7FH/cupy/tests/cupy_tests/indexing_tests/test_insert.py", line 80, in test_put
E           xp.put(a, inds, vals, self.mode)
E         File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.t8hdvgF7FH/cupy/cupy/_indexing/insert.py", line 67, in put
E           a.put(ind, v, mode=mode)
E         File "cupy/core/core.pyx", line 669, in cupy.core.core.ndarray.put
E           cpdef put(self, indices, values, mode='wrap'):
E         File "cupy/core/core.pyx", line 676, in cupy.core.core.ndarray.put
E           return _indexing._ndarray_put(self, indices, values, mode)
E         File "cupy/core/_routines_indexing.pyx", line 164, in cupy.core._routines_indexing._ndarray_put
E           _put_wrap_kernel(indices, values, values.size, n, self)
E         File "cupy/core/_kernel.pyx", line 840, in cupy.core._kernel.ElementwiseKernel.__call__
E           kern = self._get_elementwise_kernel(dev_id, arginfos, type_map)
E         File "cupy/core/_kernel.pyx", line 865, in cupy.core._kernel.ElementwiseKernel._get_elementwise_kernel
E           kern = _get_elementwise_kernel(
E         File "cupy/_util.pyx", line 59, in cupy._util.memoize.decorator.ret
E           result = f(*args, **kwargs)
E         File "cupy/core/_kernel.pyx", line 652, in cupy.core._kernel._get_elementwise_kernel
E           return _get_simple_elementwise_kernel(
E         File "cupy/core/_kernel.pyx", line 38, in cupy.core._kernel._get_simple_elementwise_kernel
E           cpdef function.Function _get_simple_elementwise_kernel(
E         File "cupy/core/_kernel.pyx", line 61, in cupy.core._kernel._get_simple_elementwise_kernel
E           module = compile_with_cache(module_code, options)
E         File "cupy/core/core.pyx", line 2021, in cupy.core.core.compile_with_cache
E           return cuda.compile_with_cache(
E         File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.t8hdvgF7FH/cupy/cupy/cuda/compiler.py", line 428, in compile_with_cache
E           return _compile_with_cache_hip(
E         File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.t8hdvgF7FH/cupy/cupy/cuda/compiler.py", line 829, in _compile_with_cache_hip
E           temp_path = tf.name
E         File "/home/kmaeh/.pyenv/versions/3.8.7/lib/python3.8/tempfile.py", line 491, in __exit__
E           result = self.file.__exit__(exc, value, tb)
E       OSError: [Errno 28] No space left on device

/home/kmaeh/.pyenv/versions/3.8.7/lib/python3.8/tempfile.py:491: AssertionError
----------------------------- Captured stdout call -----------------------------
dtype is <class 'numpy.float64'>
_______ TestPut_param_22_{mode='wrap', n_vals=3, shape=(2, 3)}.test_put ________

self = <<cupy_tests.indexing_tests.test_insert.TestPut_param_22_{mode='wrap', n_vals=3, shape=(2, 3)} testMethod=test_put>  parameter: {'mode': 'wrap', 'n_vals': 3, 'shape': (2, 3)}>
xp = <module 'cupy' from '/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.t8hdvgF7FH/cupy/cupy/__init__.py'>
dtype = <class 'numpy.float64'>

    @testing.for_all_dtypes()
    @testing.numpy_cupy_array_equal()
    def test_put(self, xp, dtype):
        a = testing.shaped_arange(self.shape, xp, dtype)
        # Take care so that actual indices don't overlap.
        if self.mode == 'raise':
            inds = xp.array([2, -1, 3, 0])
        else:
            inds = xp.array([2, -8, 3, 7])
        vals = testing.shaped_random((self.n_vals,), xp, dtype)
>       xp.put(a, inds, vals, self.mode)

tests/cupy_tests/indexing_tests/test_insert.py:80: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
cupy/_indexing/insert.py:67: in put
    a.put(ind, v, mode=mode)
cupy/core/core.pyx:669: in cupy.core.core.ndarray.put
    cpdef put(self, indices, values, mode='wrap'):
cupy/core/core.pyx:676: in cupy.core.core.ndarray.put
    return _indexing._ndarray_put(self, indices, values, mode)
cupy/core/_routines_indexing.pyx:164: in cupy.core._routines_indexing._ndarray_put
    _put_wrap_kernel(indices, values, values.size, n, self)
cupy/core/_kernel.pyx:840: in cupy.core._kernel.ElementwiseKernel.__call__
    kern = self._get_elementwise_kernel(dev_id, arginfos, type_map)
cupy/core/_kernel.pyx:865: in cupy.core._kernel.ElementwiseKernel._get_elementwise_kernel
    kern = _get_elementwise_kernel(
cupy/_util.pyx:59: in cupy._util.memoize.decorator.ret
    result = f(*args, **kwargs)
cupy/core/_kernel.pyx:652: in cupy.core._kernel._get_elementwise_kernel
    return _get_simple_elementwise_kernel(
cupy/core/_kernel.pyx:38: in cupy.core._kernel._get_simple_elementwise_kernel
    cpdef function.Function _get_simple_elementwise_kernel(
cupy/core/_kernel.pyx:61: in cupy.core._kernel._get_simple_elementwise_kernel
    module = compile_with_cache(module_code, options)
cupy/core/core.pyx:2021: in cupy.core.core.compile_with_cache
    return cuda.compile_with_cache(
cupy/cuda/compiler.py:428: in compile_with_cache
    return _compile_with_cache_hip(
cupy/cuda/compiler.py:829: in _compile_with_cache_hip
    temp_path = tf.name
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <tempfile._TemporaryFileWrapper object at 0x7f5010f534c0>, exc = None
value = None, tb = None

    def __exit__(self, exc, value, tb):
>       result = self.file.__exit__(exc, value, tb)
E       AssertionError: Only cupy raises error
E       
E       Traceback (most recent call last):
E         File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.t8hdvgF7FH/cupy/cupy/testing/_helper.py", line 47, in _call_func
E           result = impl(self, *args, **kw)
E         File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.t8hdvgF7FH/cupy/tests/cupy_tests/indexing_tests/test_insert.py", line 80, in test_put
E           xp.put(a, inds, vals, self.mode)
E         File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.t8hdvgF7FH/cupy/cupy/_indexing/insert.py", line 67, in put
E           a.put(ind, v, mode=mode)
E         File "cupy/core/core.pyx", line 669, in cupy.core.core.ndarray.put
E           cpdef put(self, indices, values, mode='wrap'):
E         File "cupy/core/core.pyx", line 676, in cupy.core.core.ndarray.put
E           return _indexing._ndarray_put(self, indices, values, mode)
E         File "cupy/core/_routines_indexing.pyx", line 164, in cupy.core._routines_indexing._ndarray_put
E           _put_wrap_kernel(indices, values, values.size, n, self)
E         File "cupy/core/_kernel.pyx", line 840, in cupy.core._kernel.ElementwiseKernel.__call__
E           kern = self._get_elementwise_kernel(dev_id, arginfos, type_map)
E         File "cupy/core/_kernel.pyx", line 865, in cupy.core._kernel.ElementwiseKernel._get_elementwise_kernel
E           kern = _get_elementwise_kernel(
E         File "cupy/_util.pyx", line 59, in cupy._util.memoize.decorator.ret
E           result = f(*args, **kwargs)
E         File "cupy/core/_kernel.pyx", line 652, in cupy.core._kernel._get_elementwise_kernel
E           return _get_simple_elementwise_kernel(
E         File "cupy/core/_kernel.pyx", line 38, in cupy.core._kernel._get_simple_elementwise_kernel
E           cpdef function.Function _get_simple_elementwise_kernel(
E         File "cupy/core/_kernel.pyx", line 61, in cupy.core._kernel._get_simple_elementwise_kernel
E           module = compile_with_cache(module_code, options)
E         File "cupy/core/core.pyx", line 2021, in cupy.core.core.compile_with_cache
E           return cuda.compile_with_cache(
E         File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.t8hdvgF7FH/cupy/cupy/cuda/compiler.py", line 428, in compile_with_cache
E           return _compile_with_cache_hip(
E         File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.t8hdvgF7FH/cupy/cupy/cuda/compiler.py", line 829, in _compile_with_cache_hip
E           temp_path = tf.name
E         File "/home/kmaeh/.pyenv/versions/3.8.7/lib/python3.8/tempfile.py", line 491, in __exit__
E           result = self.file.__exit__(exc, value, tb)
E       OSError: [Errno 28] No space left on device

/home/kmaeh/.pyenv/versions/3.8.7/lib/python3.8/tempfile.py:491: AssertionError
----------------------------- Captured stdout call -----------------------------
dtype is <class 'numpy.float64'>
______ TestPut_param_23_{mode='wrap', n_vals=3, shape=(4, 3, 2)}.test_put ______

self = <<cupy_tests.indexing_tests.test_insert.TestPut_param_23_{mode='wrap', n_vals=3, shape=(4, 3, 2)} testMethod=test_put>  parameter: {'mode': 'wrap', 'n_vals': 3, 'shape': (4, 3, 2)}>
xp = <module 'cupy' from '/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.t8hdvgF7FH/cupy/cupy/__init__.py'>
dtype = <class 'numpy.float64'>

    @testing.for_all_dtypes()
    @testing.numpy_cupy_array_equal()
    def test_put(self, xp, dtype):
        a = testing.shaped_arange(self.shape, xp, dtype)
        # Take care so that actual indices don't overlap.
        if self.mode == 'raise':
            inds = xp.array([2, -1, 3, 0])
        else:
            inds = xp.array([2, -8, 3, 7])
        vals = testing.shaped_random((self.n_vals,), xp, dtype)
>       xp.put(a, inds, vals, self.mode)

tests/cupy_tests/indexing_tests/test_insert.py:80: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
cupy/_indexing/insert.py:67: in put
    a.put(ind, v, mode=mode)
cupy/core/core.pyx:669: in cupy.core.core.ndarray.put
    cpdef put(self, indices, values, mode='wrap'):
cupy/core/core.pyx:676: in cupy.core.core.ndarray.put
    return _indexing._ndarray_put(self, indices, values, mode)
cupy/core/_routines_indexing.pyx:164: in cupy.core._routines_indexing._ndarray_put
    _put_wrap_kernel(indices, values, values.size, n, self)
cupy/core/_kernel.pyx:840: in cupy.core._kernel.ElementwiseKernel.__call__
    kern = self._get_elementwise_kernel(dev_id, arginfos, type_map)
cupy/core/_kernel.pyx:865: in cupy.core._kernel.ElementwiseKernel._get_elementwise_kernel
    kern = _get_elementwise_kernel(
cupy/_util.pyx:59: in cupy._util.memoize.decorator.ret
    result = f(*args, **kwargs)
cupy/core/_kernel.pyx:652: in cupy.core._kernel._get_elementwise_kernel
    return _get_simple_elementwise_kernel(
cupy/core/_kernel.pyx:38: in cupy.core._kernel._get_simple_elementwise_kernel
    cpdef function.Function _get_simple_elementwise_kernel(
cupy/core/_kernel.pyx:61: in cupy.core._kernel._get_simple_elementwise_kernel
    module = compile_with_cache(module_code, options)
cupy/core/core.pyx:2021: in cupy.core.core.compile_with_cache
    return cuda.compile_with_cache(
cupy/cuda/compiler.py:428: in compile_with_cache
    return _compile_with_cache_hip(
cupy/cuda/compiler.py:829: in _compile_with_cache_hip
    temp_path = tf.name
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <tempfile._TemporaryFileWrapper object at 0x7f501092b190>, exc = None
value = None, tb = None

    def __exit__(self, exc, value, tb):
>       result = self.file.__exit__(exc, value, tb)
E       AssertionError: Only cupy raises error
E       
E       Traceback (most recent call last):
E         File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.t8hdvgF7FH/cupy/cupy/testing/_helper.py", line 47, in _call_func
E           result = impl(self, *args, **kw)
E         File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.t8hdvgF7FH/cupy/tests/cupy_tests/indexing_tests/test_insert.py", line 80, in test_put
E           xp.put(a, inds, vals, self.mode)
E         File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.t8hdvgF7FH/cupy/cupy/_indexing/insert.py", line 67, in put
E           a.put(ind, v, mode=mode)
E         File "cupy/core/core.pyx", line 669, in cupy.core.core.ndarray.put
E           cpdef put(self, indices, values, mode='wrap'):
E         File "cupy/core/core.pyx", line 676, in cupy.core.core.ndarray.put
E           return _indexing._ndarray_put(self, indices, values, mode)
E         File "cupy/core/_routines_indexing.pyx", line 164, in cupy.core._routines_indexing._ndarray_put
E           _put_wrap_kernel(indices, values, values.size, n, self)
E         File "cupy/core/_kernel.pyx", line 840, in cupy.core._kernel.ElementwiseKernel.__call__
E           kern = self._get_elementwise_kernel(dev_id, arginfos, type_map)
E         File "cupy/core/_kernel.pyx", line 865, in cupy.core._kernel.ElementwiseKernel._get_elementwise_kernel
E           kern = _get_elementwise_kernel(
E         File "cupy/_util.pyx", line 59, in cupy._util.memoize.decorator.ret
E           result = f(*args, **kwargs)
E         File "cupy/core/_kernel.pyx", line 652, in cupy.core._kernel._get_elementwise_kernel
E           return _get_simple_elementwise_kernel(
E         File "cupy/core/_kernel.pyx", line 38, in cupy.core._kernel._get_simple_elementwise_kernel
E           cpdef function.Function _get_simple_elementwise_kernel(
E         File "cupy/core/_kernel.pyx", line 61, in cupy.core._kernel._get_simple_elementwise_kernel
E           module = compile_with_cache(module_code, options)
E         File "cupy/core/core.pyx", line 2021, in cupy.core.core.compile_with_cache
E           return cuda.compile_with_cache(
E         File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.t8hdvgF7FH/cupy/cupy/cuda/compiler.py", line 428, in compile_with_cache
E           return _compile_with_cache_hip(
E         File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.t8hdvgF7FH/cupy/cupy/cuda/compiler.py", line 829, in _compile_with_cache_hip
E           temp_path = tf.name
E         File "/home/kmaeh/.pyenv/versions/3.8.7/lib/python3.8/tempfile.py", line 491, in __exit__
E           result = self.file.__exit__(exc, value, tb)
E       OSError: [Errno 28] No space left on device

/home/kmaeh/.pyenv/versions/3.8.7/lib/python3.8/tempfile.py:491: AssertionError
----------------------------- Captured stdout call -----------------------------
dtype is <class 'numpy.float64'>
________ TestPut_param_24_{mode='wrap', n_vals=4, shape=(7,)}.test_put _________

self = <<cupy_tests.indexing_tests.test_insert.TestPut_param_24_{mode='wrap', n_vals=4, shape=(7,)} testMethod=test_put>  parameter: {'mode': 'wrap', 'n_vals': 4, 'shape': (7,)}>
xp = <module 'cupy' from '/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.t8hdvgF7FH/cupy/cupy/__init__.py'>
dtype = <class 'numpy.float64'>

    @testing.for_all_dtypes()
    @testing.numpy_cupy_array_equal()
    def test_put(self, xp, dtype):
        a = testing.shaped_arange(self.shape, xp, dtype)
        # Take care so that actual indices don't overlap.
        if self.mode == 'raise':
            inds = xp.array([2, -1, 3, 0])
        else:
            inds = xp.array([2, -8, 3, 7])
        vals = testing.shaped_random((self.n_vals,), xp, dtype)
>       xp.put(a, inds, vals, self.mode)

tests/cupy_tests/indexing_tests/test_insert.py:80: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
cupy/_indexing/insert.py:67: in put
    a.put(ind, v, mode=mode)
cupy/core/core.pyx:669: in cupy.core.core.ndarray.put
    cpdef put(self, indices, values, mode='wrap'):
cupy/core/core.pyx:676: in cupy.core.core.ndarray.put
    return _indexing._ndarray_put(self, indices, values, mode)
cupy/core/_routines_indexing.pyx:164: in cupy.core._routines_indexing._ndarray_put
    _put_wrap_kernel(indices, values, values.size, n, self)
cupy/core/_kernel.pyx:840: in cupy.core._kernel.ElementwiseKernel.__call__
    kern = self._get_elementwise_kernel(dev_id, arginfos, type_map)
cupy/core/_kernel.pyx:865: in cupy.core._kernel.ElementwiseKernel._get_elementwise_kernel
    kern = _get_elementwise_kernel(
cupy/_util.pyx:59: in cupy._util.memoize.decorator.ret
    result = f(*args, **kwargs)
cupy/core/_kernel.pyx:652: in cupy.core._kernel._get_elementwise_kernel
    return _get_simple_elementwise_kernel(
cupy/core/_kernel.pyx:38: in cupy.core._kernel._get_simple_elementwise_kernel
    cpdef function.Function _get_simple_elementwise_kernel(
cupy/core/_kernel.pyx:61: in cupy.core._kernel._get_simple_elementwise_kernel
    module = compile_with_cache(module_code, options)
cupy/core/core.pyx:2021: in cupy.core.core.compile_with_cache
    return cuda.compile_with_cache(
cupy/cuda/compiler.py:428: in compile_with_cache
    return _compile_with_cache_hip(
cupy/cuda/compiler.py:829: in _compile_with_cache_hip
    temp_path = tf.name
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <tempfile._TemporaryFileWrapper object at 0x7f5010f8e880>, exc = None
value = None, tb = None

    def __exit__(self, exc, value, tb):
>       result = self.file.__exit__(exc, value, tb)
E       AssertionError: Only cupy raises error
E       
E       Traceback (most recent call last):
E         File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.t8hdvgF7FH/cupy/cupy/testing/_helper.py", line 47, in _call_func
E           result = impl(self, *args, **kw)
E         File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.t8hdvgF7FH/cupy/tests/cupy_tests/indexing_tests/test_insert.py", line 80, in test_put
E           xp.put(a, inds, vals, self.mode)
E         File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.t8hdvgF7FH/cupy/cupy/_indexing/insert.py", line 67, in put
E           a.put(ind, v, mode=mode)
E         File "cupy/core/core.pyx", line 669, in cupy.core.core.ndarray.put
E           cpdef put(self, indices, values, mode='wrap'):
E         File "cupy/core/core.pyx", line 676, in cupy.core.core.ndarray.put
E           return _indexing._ndarray_put(self, indices, values, mode)
E         File "cupy/core/_routines_indexing.pyx", line 164, in cupy.core._routines_indexing._ndarray_put
E           _put_wrap_kernel(indices, values, values.size, n, self)
E         File "cupy/core/_kernel.pyx", line 840, in cupy.core._kernel.ElementwiseKernel.__call__
E           kern = self._get_elementwise_kernel(dev_id, arginfos, type_map)
E         File "cupy/core/_kernel.pyx", line 865, in cupy.core._kernel.ElementwiseKernel._get_elementwise_kernel
E           kern = _get_elementwise_kernel(
E         File "cupy/_util.pyx", line 59, in cupy._util.memoize.decorator.ret
E           result = f(*args, **kwargs)
E         File "cupy/core/_kernel.pyx", line 652, in cupy.core._kernel._get_elementwise_kernel
E           return _get_simple_elementwise_kernel(
E         File "cupy/core/_kernel.pyx", line 38, in cupy.core._kernel._get_simple_elementwise_kernel
E           cpdef function.Function _get_simple_elementwise_kernel(
E         File "cupy/core/_kernel.pyx", line 61, in cupy.core._kernel._get_simple_elementwise_kernel
E           module = compile_with_cache(module_code, options)
E         File "cupy/core/core.pyx", line 2021, in cupy.core.core.compile_with_cache
E           return cuda.compile_with_cache(
E         File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.t8hdvgF7FH/cupy/cupy/cuda/compiler.py", line 428, in compile_with_cache
E           return _compile_with_cache_hip(
E         File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.t8hdvgF7FH/cupy/cupy/cuda/compiler.py", line 829, in _compile_with_cache_hip
E           temp_path = tf.name
E         File "/home/kmaeh/.pyenv/versions/3.8.7/lib/python3.8/tempfile.py", line 491, in __exit__
E           result = self.file.__exit__(exc, value, tb)
E       OSError: [Errno 28] No space left on device

/home/kmaeh/.pyenv/versions/3.8.7/lib/python3.8/tempfile.py:491: AssertionError
----------------------------- Captured stdout call -----------------------------
dtype is <class 'numpy.float64'>
_______ TestPut_param_25_{mode='wrap', n_vals=4, shape=(2, 3)}.test_put ________

self = <<cupy_tests.indexing_tests.test_insert.TestPut_param_25_{mode='wrap', n_vals=4, shape=(2, 3)} testMethod=test_put>  parameter: {'mode': 'wrap', 'n_vals': 4, 'shape': (2, 3)}>
xp = <module 'cupy' from '/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.t8hdvgF7FH/cupy/cupy/__init__.py'>
dtype = <class 'numpy.float64'>

    @testing.for_all_dtypes()
    @testing.numpy_cupy_array_equal()
    def test_put(self, xp, dtype):
        a = testing.shaped_arange(self.shape, xp, dtype)
        # Take care so that actual indices don't overlap.
        if self.mode == 'raise':
            inds = xp.array([2, -1, 3, 0])
        else:
            inds = xp.array([2, -8, 3, 7])
        vals = testing.shaped_random((self.n_vals,), xp, dtype)
>       xp.put(a, inds, vals, self.mode)

tests/cupy_tests/indexing_tests/test_insert.py:80: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
cupy/_indexing/insert.py:67: in put
    a.put(ind, v, mode=mode)
cupy/core/core.pyx:669: in cupy.core.core.ndarray.put
    cpdef put(self, indices, values, mode='wrap'):
cupy/core/core.pyx:676: in cupy.core.core.ndarray.put
    return _indexing._ndarray_put(self, indices, values, mode)
cupy/core/_routines_indexing.pyx:164: in cupy.core._routines_indexing._ndarray_put
    _put_wrap_kernel(indices, values, values.size, n, self)
cupy/core/_kernel.pyx:840: in cupy.core._kernel.ElementwiseKernel.__call__
    kern = self._get_elementwise_kernel(dev_id, arginfos, type_map)
cupy/core/_kernel.pyx:865: in cupy.core._kernel.ElementwiseKernel._get_elementwise_kernel
    kern = _get_elementwise_kernel(
cupy/_util.pyx:59: in cupy._util.memoize.decorator.ret
    result = f(*args, **kwargs)
cupy/core/_kernel.pyx:652: in cupy.core._kernel._get_elementwise_kernel
    return _get_simple_elementwise_kernel(
cupy/core/_kernel.pyx:38: in cupy.core._kernel._get_simple_elementwise_kernel
    cpdef function.Function _get_simple_elementwise_kernel(
cupy/core/_kernel.pyx:61: in cupy.core._kernel._get_simple_elementwise_kernel
    module = compile_with_cache(module_code, options)
cupy/core/core.pyx:2021: in cupy.core.core.compile_with_cache
    return cuda.compile_with_cache(
cupy/cuda/compiler.py:428: in compile_with_cache
    return _compile_with_cache_hip(
cupy/cuda/compiler.py:829: in _compile_with_cache_hip
    temp_path = tf.name
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <tempfile._TemporaryFileWrapper object at 0x7f50462cd0a0>, exc = None
value = None, tb = None

    def __exit__(self, exc, value, tb):
>       result = self.file.__exit__(exc, value, tb)
E       AssertionError: Only cupy raises error
E       
E       Traceback (most recent call last):
E         File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.t8hdvgF7FH/cupy/cupy/testing/_helper.py", line 47, in _call_func
E           result = impl(self, *args, **kw)
E         File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.t8hdvgF7FH/cupy/tests/cupy_tests/indexing_tests/test_insert.py", line 80, in test_put
E           xp.put(a, inds, vals, self.mode)
E         File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.t8hdvgF7FH/cupy/cupy/_indexing/insert.py", line 67, in put
E           a.put(ind, v, mode=mode)
E         File "cupy/core/core.pyx", line 669, in cupy.core.core.ndarray.put
E           cpdef put(self, indices, values, mode='wrap'):
E         File "cupy/core/core.pyx", line 676, in cupy.core.core.ndarray.put
E           return _indexing._ndarray_put(self, indices, values, mode)
E         File "cupy/core/_routines_indexing.pyx", line 164, in cupy.core._routines_indexing._ndarray_put
E           _put_wrap_kernel(indices, values, values.size, n, self)
E         File "cupy/core/_kernel.pyx", line 840, in cupy.core._kernel.ElementwiseKernel.__call__
E           kern = self._get_elementwise_kernel(dev_id, arginfos, type_map)
E         File "cupy/core/_kernel.pyx", line 865, in cupy.core._kernel.ElementwiseKernel._get_elementwise_kernel
E           kern = _get_elementwise_kernel(
E         File "cupy/_util.pyx", line 59, in cupy._util.memoize.decorator.ret
E           result = f(*args, **kwargs)
E         File "cupy/core/_kernel.pyx", line 652, in cupy.core._kernel._get_elementwise_kernel
E           return _get_simple_elementwise_kernel(
E         File "cupy/core/_kernel.pyx", line 38, in cupy.core._kernel._get_simple_elementwise_kernel
E           cpdef function.Function _get_simple_elementwise_kernel(
E         File "cupy/core/_kernel.pyx", line 61, in cupy.core._kernel._get_simple_elementwise_kernel
E           module = compile_with_cache(module_code, options)
E         File "cupy/core/core.pyx", line 2021, in cupy.core.core.compile_with_cache
E           return cuda.compile_with_cache(
E         File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.t8hdvgF7FH/cupy/cupy/cuda/compiler.py", line 428, in compile_with_cache
E           return _compile_with_cache_hip(
E         File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.t8hdvgF7FH/cupy/cupy/cuda/compiler.py", line 829, in _compile_with_cache_hip
E           temp_path = tf.name
E         File "/home/kmaeh/.pyenv/versions/3.8.7/lib/python3.8/tempfile.py", line 491, in __exit__
E           result = self.file.__exit__(exc, value, tb)
E       OSError: [Errno 28] No space left on device

/home/kmaeh/.pyenv/versions/3.8.7/lib/python3.8/tempfile.py:491: AssertionError
----------------------------- Captured stdout call -----------------------------
dtype is <class 'numpy.float64'>
______ TestPut_param_26_{mode='wrap', n_vals=4, shape=(4, 3, 2)}.test_put ______

self = <<cupy_tests.indexing_tests.test_insert.TestPut_param_26_{mode='wrap', n_vals=4, shape=(4, 3, 2)} testMethod=test_put>  parameter: {'mode': 'wrap', 'n_vals': 4, 'shape': (4, 3, 2)}>
xp = <module 'cupy' from '/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.t8hdvgF7FH/cupy/cupy/__init__.py'>
dtype = <class 'numpy.float64'>

    @testing.for_all_dtypes()
    @testing.numpy_cupy_array_equal()
    def test_put(self, xp, dtype):
        a = testing.shaped_arange(self.shape, xp, dtype)
        # Take care so that actual indices don't overlap.
        if self.mode == 'raise':
            inds = xp.array([2, -1, 3, 0])
        else:
            inds = xp.array([2, -8, 3, 7])
        vals = testing.shaped_random((self.n_vals,), xp, dtype)
>       xp.put(a, inds, vals, self.mode)

tests/cupy_tests/indexing_tests/test_insert.py:80: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
cupy/_indexing/insert.py:67: in put
    a.put(ind, v, mode=mode)
cupy/core/core.pyx:669: in cupy.core.core.ndarray.put
    cpdef put(self, indices, values, mode='wrap'):
cupy/core/core.pyx:676: in cupy.core.core.ndarray.put
    return _indexing._ndarray_put(self, indices, values, mode)
cupy/core/_routines_indexing.pyx:164: in cupy.core._routines_indexing._ndarray_put
    _put_wrap_kernel(indices, values, values.size, n, self)
cupy/core/_kernel.pyx:840: in cupy.core._kernel.ElementwiseKernel.__call__
    kern = self._get_elementwise_kernel(dev_id, arginfos, type_map)
cupy/core/_kernel.pyx:865: in cupy.core._kernel.ElementwiseKernel._get_elementwise_kernel
    kern = _get_elementwise_kernel(
cupy/_util.pyx:59: in cupy._util.memoize.decorator.ret
    result = f(*args, **kwargs)
cupy/core/_kernel.pyx:652: in cupy.core._kernel._get_elementwise_kernel
    return _get_simple_elementwise_kernel(
cupy/core/_kernel.pyx:38: in cupy.core._kernel._get_simple_elementwise_kernel
    cpdef function.Function _get_simple_elementwise_kernel(
cupy/core/_kernel.pyx:61: in cupy.core._kernel._get_simple_elementwise_kernel
    module = compile_with_cache(module_code, options)
cupy/core/core.pyx:2021: in cupy.core.core.compile_with_cache
    return cuda.compile_with_cache(
cupy/cuda/compiler.py:428: in compile_with_cache
    return _compile_with_cache_hip(
cupy/cuda/compiler.py:829: in _compile_with_cache_hip
    temp_path = tf.name
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <tempfile._TemporaryFileWrapper object at 0x7f50108399d0>, exc = None
value = None, tb = None

    def __exit__(self, exc, value, tb):
>       result = self.file.__exit__(exc, value, tb)
E       AssertionError: Only cupy raises error
E       
E       Traceback (most recent call last):
E         File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.t8hdvgF7FH/cupy/cupy/testing/_helper.py", line 47, in _call_func
E           result = impl(self, *args, **kw)
E         File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.t8hdvgF7FH/cupy/tests/cupy_tests/indexing_tests/test_insert.py", line 80, in test_put
E           xp.put(a, inds, vals, self.mode)
E         File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.t8hdvgF7FH/cupy/cupy/_indexing/insert.py", line 67, in put
E           a.put(ind, v, mode=mode)
E         File "cupy/core/core.pyx", line 669, in cupy.core.core.ndarray.put
E           cpdef put(self, indices, values, mode='wrap'):
E         File "cupy/core/core.pyx", line 676, in cupy.core.core.ndarray.put
E           return _indexing._ndarray_put(self, indices, values, mode)
E         File "cupy/core/_routines_indexing.pyx", line 164, in cupy.core._routines_indexing._ndarray_put
E           _put_wrap_kernel(indices, values, values.size, n, self)
E         File "cupy/core/_kernel.pyx", line 840, in cupy.core._kernel.ElementwiseKernel.__call__
E           kern = self._get_elementwise_kernel(dev_id, arginfos, type_map)
E         File "cupy/core/_kernel.pyx", line 865, in cupy.core._kernel.ElementwiseKernel._get_elementwise_kernel
E           kern = _get_elementwise_kernel(
E         File "cupy/_util.pyx", line 59, in cupy._util.memoize.decorator.ret
E           result = f(*args, **kwargs)
E         File "cupy/core/_kernel.pyx", line 652, in cupy.core._kernel._get_elementwise_kernel
E           return _get_simple_elementwise_kernel(
E         File "cupy/core/_kernel.pyx", line 38, in cupy.core._kernel._get_simple_elementwise_kernel
E           cpdef function.Function _get_simple_elementwise_kernel(
E         File "cupy/core/_kernel.pyx", line 61, in cupy.core._kernel._get_simple_elementwise_kernel
E           module = compile_with_cache(module_code, options)
E         File "cupy/core/core.pyx", line 2021, in cupy.core.core.compile_with_cache
E           return cuda.compile_with_cache(
E         File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.t8hdvgF7FH/cupy/cupy/cuda/compiler.py", line 428, in compile_with_cache
E           return _compile_with_cache_hip(
E         File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.t8hdvgF7FH/cupy/cupy/cuda/compiler.py", line 829, in _compile_with_cache_hip
E           temp_path = tf.name
E         File "/home/kmaeh/.pyenv/versions/3.8.7/lib/python3.8/tempfile.py", line 491, in __exit__
E           result = self.file.__exit__(exc, value, tb)
E       OSError: [Errno 28] No space left on device

/home/kmaeh/.pyenv/versions/3.8.7/lib/python3.8/tempfile.py:491: AssertionError
----------------------------- Captured stdout call -----------------------------
dtype is <class 'numpy.float64'>
________ TestPut_param_27_{mode='wrap', n_vals=5, shape=(7,)}.test_put _________

self = <<cupy_tests.indexing_tests.test_insert.TestPut_param_27_{mode='wrap', n_vals=5, shape=(7,)} testMethod=test_put>  parameter: {'mode': 'wrap', 'n_vals': 5, 'shape': (7,)}>
xp = <module 'cupy' from '/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.t8hdvgF7FH/cupy/cupy/__init__.py'>
dtype = <class 'numpy.float64'>

    @testing.for_all_dtypes()
    @testing.numpy_cupy_array_equal()
    def test_put(self, xp, dtype):
        a = testing.shaped_arange(self.shape, xp, dtype)
        # Take care so that actual indices don't overlap.
        if self.mode == 'raise':
            inds = xp.array([2, -1, 3, 0])
        else:
            inds = xp.array([2, -8, 3, 7])
        vals = testing.shaped_random((self.n_vals,), xp, dtype)
>       xp.put(a, inds, vals, self.mode)

tests/cupy_tests/indexing_tests/test_insert.py:80: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
cupy/_indexing/insert.py:67: in put
    a.put(ind, v, mode=mode)
cupy/core/core.pyx:669: in cupy.core.core.ndarray.put
    cpdef put(self, indices, values, mode='wrap'):
cupy/core/core.pyx:676: in cupy.core.core.ndarray.put
    return _indexing._ndarray_put(self, indices, values, mode)
cupy/core/_routines_indexing.pyx:164: in cupy.core._routines_indexing._ndarray_put
    _put_wrap_kernel(indices, values, values.size, n, self)
cupy/core/_kernel.pyx:840: in cupy.core._kernel.ElementwiseKernel.__call__
    kern = self._get_elementwise_kernel(dev_id, arginfos, type_map)
cupy/core/_kernel.pyx:865: in cupy.core._kernel.ElementwiseKernel._get_elementwise_kernel
    kern = _get_elementwise_kernel(
cupy/_util.pyx:59: in cupy._util.memoize.decorator.ret
    result = f(*args, **kwargs)
cupy/core/_kernel.pyx:652: in cupy.core._kernel._get_elementwise_kernel
    return _get_simple_elementwise_kernel(
cupy/core/_kernel.pyx:38: in cupy.core._kernel._get_simple_elementwise_kernel
    cpdef function.Function _get_simple_elementwise_kernel(
cupy/core/_kernel.pyx:61: in cupy.core._kernel._get_simple_elementwise_kernel
    module = compile_with_cache(module_code, options)
cupy/core/core.pyx:2021: in cupy.core.core.compile_with_cache
    return cuda.compile_with_cache(
cupy/cuda/compiler.py:428: in compile_with_cache
    return _compile_with_cache_hip(
cupy/cuda/compiler.py:829: in _compile_with_cache_hip
    temp_path = tf.name
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <tempfile._TemporaryFileWrapper object at 0x7f5010f7de50>, exc = None
value = None, tb = None

    def __exit__(self, exc, value, tb):
>       result = self.file.__exit__(exc, value, tb)
E       AssertionError: Only cupy raises error
E       
E       Traceback (most recent call last):
E         File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.t8hdvgF7FH/cupy/cupy/testing/_helper.py", line 47, in _call_func
E           result = impl(self, *args, **kw)
E         File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.t8hdvgF7FH/cupy/tests/cupy_tests/indexing_tests/test_insert.py", line 80, in test_put
E           xp.put(a, inds, vals, self.mode)
E         File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.t8hdvgF7FH/cupy/cupy/_indexing/insert.py", line 67, in put
E           a.put(ind, v, mode=mode)
E         File "cupy/core/core.pyx", line 669, in cupy.core.core.ndarray.put
E           cpdef put(self, indices, values, mode='wrap'):
E         File "cupy/core/core.pyx", line 676, in cupy.core.core.ndarray.put
E           return _indexing._ndarray_put(self, indices, values, mode)
E         File "cupy/core/_routines_indexing.pyx", line 164, in cupy.core._routines_indexing._ndarray_put
E           _put_wrap_kernel(indices, values, values.size, n, self)
E         File "cupy/core/_kernel.pyx", line 840, in cupy.core._kernel.ElementwiseKernel.__call__
E           kern = self._get_elementwise_kernel(dev_id, arginfos, type_map)
E         File "cupy/core/_kernel.pyx", line 865, in cupy.core._kernel.ElementwiseKernel._get_elementwise_kernel
E           kern = _get_elementwise_kernel(
E         File "cupy/_util.pyx", line 59, in cupy._util.memoize.decorator.ret
E           result = f(*args, **kwargs)
E         File "cupy/core/_kernel.pyx", line 652, in cupy.core._kernel._get_elementwise_kernel
E           return _get_simple_elementwise_kernel(
E         File "cupy/core/_kernel.pyx", line 38, in cupy.core._kernel._get_simple_elementwise_kernel
E           cpdef function.Function _get_simple_elementwise_kernel(
E         File "cupy/core/_kernel.pyx", line 61, in cupy.core._kernel._get_simple_elementwise_kernel
E           module = compile_with_cache(module_code, options)
E         File "cupy/core/core.pyx", line 2021, in cupy.core.core.compile_with_cache
E           return cuda.compile_with_cache(
E         File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.t8hdvgF7FH/cupy/cupy/cuda/compiler.py", line 428, in compile_with_cache
E           return _compile_with_cache_hip(
E         File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.t8hdvgF7FH/cupy/cupy/cuda/compiler.py", line 829, in _compile_with_cache_hip
E           temp_path = tf.name
E         File "/home/kmaeh/.pyenv/versions/3.8.7/lib/python3.8/tempfile.py", line 491, in __exit__
E           result = self.file.__exit__(exc, value, tb)
E       OSError: [Errno 28] No space left on device

/home/kmaeh/.pyenv/versions/3.8.7/lib/python3.8/tempfile.py:491: AssertionError
----------------------------- Captured stdout call -----------------------------
dtype is <class 'numpy.float64'>
_______ TestPut_param_28_{mode='wrap', n_vals=5, shape=(2, 3)}.test_put ________

self = <<cupy_tests.indexing_tests.test_insert.TestPut_param_28_{mode='wrap', n_vals=5, shape=(2, 3)} testMethod=test_put>  parameter: {'mode': 'wrap', 'n_vals': 5, 'shape': (2, 3)}>
xp = <module 'cupy' from '/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.t8hdvgF7FH/cupy/cupy/__init__.py'>
dtype = <class 'numpy.float64'>

    @testing.for_all_dtypes()
    @testing.numpy_cupy_array_equal()
    def test_put(self, xp, dtype):
        a = testing.shaped_arange(self.shape, xp, dtype)
        # Take care so that actual indices don't overlap.
        if self.mode == 'raise':
            inds = xp.array([2, -1, 3, 0])
        else:
            inds = xp.array([2, -8, 3, 7])
        vals = testing.shaped_random((self.n_vals,), xp, dtype)
>       xp.put(a, inds, vals, self.mode)

tests/cupy_tests/indexing_tests/test_insert.py:80: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
cupy/_indexing/insert.py:67: in put
    a.put(ind, v, mode=mode)
cupy/core/core.pyx:669: in cupy.core.core.ndarray.put
    cpdef put(self, indices, values, mode='wrap'):
cupy/core/core.pyx:676: in cupy.core.core.ndarray.put
    return _indexing._ndarray_put(self, indices, values, mode)
cupy/core/_routines_indexing.pyx:164: in cupy.core._routines_indexing._ndarray_put
    _put_wrap_kernel(indices, values, values.size, n, self)
cupy/core/_kernel.pyx:840: in cupy.core._kernel.ElementwiseKernel.__call__
    kern = self._get_elementwise_kernel(dev_id, arginfos, type_map)
cupy/core/_kernel.pyx:865: in cupy.core._kernel.ElementwiseKernel._get_elementwise_kernel
    kern = _get_elementwise_kernel(
cupy/_util.pyx:59: in cupy._util.memoize.decorator.ret
    result = f(*args, **kwargs)
cupy/core/_kernel.pyx:652: in cupy.core._kernel._get_elementwise_kernel
    return _get_simple_elementwise_kernel(
cupy/core/_kernel.pyx:38: in cupy.core._kernel._get_simple_elementwise_kernel
    cpdef function.Function _get_simple_elementwise_kernel(
cupy/core/_kernel.pyx:61: in cupy.core._kernel._get_simple_elementwise_kernel
    module = compile_with_cache(module_code, options)
cupy/core/core.pyx:2021: in cupy.core.core.compile_with_cache
    return cuda.compile_with_cache(
cupy/cuda/compiler.py:428: in compile_with_cache
    return _compile_with_cache_hip(
cupy/cuda/compiler.py:829: in _compile_with_cache_hip
    temp_path = tf.name
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <tempfile._TemporaryFileWrapper object at 0x7f50116c76d0>, exc = None
value = None, tb = None

    def __exit__(self, exc, value, tb):
>       result = self.file.__exit__(exc, value, tb)
E       AssertionError: Only cupy raises error
E       
E       Traceback (most recent call last):
E         File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.t8hdvgF7FH/cupy/cupy/testing/_helper.py", line 47, in _call_func
E           result = impl(self, *args, **kw)
E         File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.t8hdvgF7FH/cupy/tests/cupy_tests/indexing_tests/test_insert.py", line 80, in test_put
E           xp.put(a, inds, vals, self.mode)
E         File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.t8hdvgF7FH/cupy/cupy/_indexing/insert.py", line 67, in put
E           a.put(ind, v, mode=mode)
E         File "cupy/core/core.pyx", line 669, in cupy.core.core.ndarray.put
E           cpdef put(self, indices, values, mode='wrap'):
E         File "cupy/core/core.pyx", line 676, in cupy.core.core.ndarray.put
E           return _indexing._ndarray_put(self, indices, values, mode)
E         File "cupy/core/_routines_indexing.pyx", line 164, in cupy.core._routines_indexing._ndarray_put
E           _put_wrap_kernel(indices, values, values.size, n, self)
E         File "cupy/core/_kernel.pyx", line 840, in cupy.core._kernel.ElementwiseKernel.__call__
E           kern = self._get_elementwise_kernel(dev_id, arginfos, type_map)
E         File "cupy/core/_kernel.pyx", line 865, in cupy.core._kernel.ElementwiseKernel._get_elementwise_kernel
E           kern = _get_elementwise_kernel(
E         File "cupy/_util.pyx", line 59, in cupy._util.memoize.decorator.ret
E           result = f(*args, **kwargs)
E         File "cupy/core/_kernel.pyx", line 652, in cupy.core._kernel._get_elementwise_kernel
E           return _get_simple_elementwise_kernel(
E         File "cupy/core/_kernel.pyx", line 38, in cupy.core._kernel._get_simple_elementwise_kernel
E           cpdef function.Function _get_simple_elementwise_kernel(
E         File "cupy/core/_kernel.pyx", line 61, in cupy.core._kernel._get_simple_elementwise_kernel
E           module = compile_with_cache(module_code, options)
E         File "cupy/core/core.pyx", line 2021, in cupy.core.core.compile_with_cache
E           return cuda.compile_with_cache(
E         File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.t8hdvgF7FH/cupy/cupy/cuda/compiler.py", line 428, in compile_with_cache
E           return _compile_with_cache_hip(
E         File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.t8hdvgF7FH/cupy/cupy/cuda/compiler.py", line 829, in _compile_with_cache_hip
E           temp_path = tf.name
E         File "/home/kmaeh/.pyenv/versions/3.8.7/lib/python3.8/tempfile.py", line 491, in __exit__
E           result = self.file.__exit__(exc, value, tb)
E       OSError: [Errno 28] No space left on device

/home/kmaeh/.pyenv/versions/3.8.7/lib/python3.8/tempfile.py:491: AssertionError
----------------------------- Captured stdout call -----------------------------
dtype is <class 'numpy.float64'>
______ TestPut_param_29_{mode='wrap', n_vals=5, shape=(4, 3, 2)}.test_put ______

self = <<cupy_tests.indexing_tests.test_insert.TestPut_param_29_{mode='wrap', n_vals=5, shape=(4, 3, 2)} testMethod=test_put>  parameter: {'mode': 'wrap', 'n_vals': 5, 'shape': (4, 3, 2)}>
xp = <module 'cupy' from '/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.t8hdvgF7FH/cupy/cupy/__init__.py'>
dtype = <class 'numpy.float64'>

    @testing.for_all_dtypes()
    @testing.numpy_cupy_array_equal()
    def test_put(self, xp, dtype):
        a = testing.shaped_arange(self.shape, xp, dtype)
        # Take care so that actual indices don't overlap.
        if self.mode == 'raise':
            inds = xp.array([2, -1, 3, 0])
        else:
            inds = xp.array([2, -8, 3, 7])
        vals = testing.shaped_random((self.n_vals,), xp, dtype)
>       xp.put(a, inds, vals, self.mode)

tests/cupy_tests/indexing_tests/test_insert.py:80: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
cupy/_indexing/insert.py:67: in put
    a.put(ind, v, mode=mode)
cupy/core/core.pyx:669: in cupy.core.core.ndarray.put
    cpdef put(self, indices, values, mode='wrap'):
cupy/core/core.pyx:676: in cupy.core.core.ndarray.put
    return _indexing._ndarray_put(self, indices, values, mode)
cupy/core/_routines_indexing.pyx:164: in cupy.core._routines_indexing._ndarray_put
    _put_wrap_kernel(indices, values, values.size, n, self)
cupy/core/_kernel.pyx:840: in cupy.core._kernel.ElementwiseKernel.__call__
    kern = self._get_elementwise_kernel(dev_id, arginfos, type_map)
cupy/core/_kernel.pyx:865: in cupy.core._kernel.ElementwiseKernel._get_elementwise_kernel
    kern = _get_elementwise_kernel(
cupy/_util.pyx:59: in cupy._util.memoize.decorator.ret
    result = f(*args, **kwargs)
cupy/core/_kernel.pyx:652: in cupy.core._kernel._get_elementwise_kernel
    return _get_simple_elementwise_kernel(
cupy/core/_kernel.pyx:38: in cupy.core._kernel._get_simple_elementwise_kernel
    cpdef function.Function _get_simple_elementwise_kernel(
cupy/core/_kernel.pyx:61: in cupy.core._kernel._get_simple_elementwise_kernel
    module = compile_with_cache(module_code, options)
cupy/core/core.pyx:2021: in cupy.core.core.compile_with_cache
    return cuda.compile_with_cache(
cupy/cuda/compiler.py:428: in compile_with_cache
    return _compile_with_cache_hip(
cupy/cuda/compiler.py:829: in _compile_with_cache_hip
    temp_path = tf.name
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <tempfile._TemporaryFileWrapper object at 0x7f50108e5850>, exc = None
value = None, tb = None

    def __exit__(self, exc, value, tb):
>       result = self.file.__exit__(exc, value, tb)
E       AssertionError: Only cupy raises error
E       
E       Traceback (most recent call last):
E         File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.t8hdvgF7FH/cupy/cupy/testing/_helper.py", line 47, in _call_func
E           result = impl(self, *args, **kw)
E         File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.t8hdvgF7FH/cupy/tests/cupy_tests/indexing_tests/test_insert.py", line 80, in test_put
E           xp.put(a, inds, vals, self.mode)
E         File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.t8hdvgF7FH/cupy/cupy/_indexing/insert.py", line 67, in put
E           a.put(ind, v, mode=mode)
E         File "cupy/core/core.pyx", line 669, in cupy.core.core.ndarray.put
E           cpdef put(self, indices, values, mode='wrap'):
E         File "cupy/core/core.pyx", line 676, in cupy.core.core.ndarray.put
E           return _indexing._ndarray_put(self, indices, values, mode)
E         File "cupy/core/_routines_indexing.pyx", line 164, in cupy.core._routines_indexing._ndarray_put
E           _put_wrap_kernel(indices, values, values.size, n, self)
E         File "cupy/core/_kernel.pyx", line 840, in cupy.core._kernel.ElementwiseKernel.__call__
E           kern = self._get_elementwise_kernel(dev_id, arginfos, type_map)
E         File "cupy/core/_kernel.pyx", line 865, in cupy.core._kernel.ElementwiseKernel._get_elementwise_kernel
E           kern = _get_elementwise_kernel(
E         File "cupy/_util.pyx", line 59, in cupy._util.memoize.decorator.ret
E           result = f(*args, **kwargs)
E         File "cupy/core/_kernel.pyx", line 652, in cupy.core._kernel._get_elementwise_kernel
E           return _get_simple_elementwise_kernel(
E         File "cupy/core/_kernel.pyx", line 38, in cupy.core._kernel._get_simple_elementwise_kernel
E           cpdef function.Function _get_simple_elementwise_kernel(
E         File "cupy/core/_kernel.pyx", line 61, in cupy.core._kernel._get_simple_elementwise_kernel
E           module = compile_with_cache(module_code, options)
E         File "cupy/core/core.pyx", line 2021, in cupy.core.core.compile_with_cache
E           return cuda.compile_with_cache(
E         File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.t8hdvgF7FH/cupy/cupy/cuda/compiler.py", line 428, in compile_with_cache
E           return _compile_with_cache_hip(
E         File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.t8hdvgF7FH/cupy/cupy/cuda/compiler.py", line 829, in _compile_with_cache_hip
E           temp_path = tf.name
E         File "/home/kmaeh/.pyenv/versions/3.8.7/lib/python3.8/tempfile.py", line 491, in __exit__
E           result = self.file.__exit__(exc, value, tb)
E       OSError: [Errno 28] No space left on device

/home/kmaeh/.pyenv/versions/3.8.7/lib/python3.8/tempfile.py:491: AssertionError
----------------------------- Captured stdout call -----------------------------
dtype is <class 'numpy.float64'>
________ TestPut_param_33_{mode='clip', n_vals=1, shape=(7,)}.test_put _________

self = <<cupy_tests.indexing_tests.test_insert.TestPut_param_33_{mode='clip', n_vals=1, shape=(7,)} testMethod=test_put>  parameter: {'mode': 'clip', 'n_vals': 1, 'shape': (7,)}>
xp = <module 'cupy' from '/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.t8hdvgF7FH/cupy/cupy/__init__.py'>
dtype = <class 'numpy.float64'>

    @testing.for_all_dtypes()
    @testing.numpy_cupy_array_equal()
    def test_put(self, xp, dtype):
        a = testing.shaped_arange(self.shape, xp, dtype)
        # Take care so that actual indices don't overlap.
        if self.mode == 'raise':
            inds = xp.array([2, -1, 3, 0])
        else:
            inds = xp.array([2, -8, 3, 7])
        vals = testing.shaped_random((self.n_vals,), xp, dtype)
>       xp.put(a, inds, vals, self.mode)

tests/cupy_tests/indexing_tests/test_insert.py:80: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
cupy/_indexing/insert.py:67: in put
    a.put(ind, v, mode=mode)
cupy/core/core.pyx:669: in cupy.core.core.ndarray.put
    cpdef put(self, indices, values, mode='wrap'):
cupy/core/core.pyx:676: in cupy.core.core.ndarray.put
    return _indexing._ndarray_put(self, indices, values, mode)
cupy/core/_routines_indexing.pyx:166: in cupy.core._routines_indexing._ndarray_put
    _put_clip_kernel(indices, values, values.size, n, self)
cupy/core/_kernel.pyx:840: in cupy.core._kernel.ElementwiseKernel.__call__
    kern = self._get_elementwise_kernel(dev_id, arginfos, type_map)
cupy/core/_kernel.pyx:865: in cupy.core._kernel.ElementwiseKernel._get_elementwise_kernel
    kern = _get_elementwise_kernel(
cupy/_util.pyx:59: in cupy._util.memoize.decorator.ret
    result = f(*args, **kwargs)
cupy/core/_kernel.pyx:652: in cupy.core._kernel._get_elementwise_kernel
    return _get_simple_elementwise_kernel(
cupy/core/_kernel.pyx:38: in cupy.core._kernel._get_simple_elementwise_kernel
    cpdef function.Function _get_simple_elementwise_kernel(
cupy/core/_kernel.pyx:61: in cupy.core._kernel._get_simple_elementwise_kernel
    module = compile_with_cache(module_code, options)
cupy/core/core.pyx:2021: in cupy.core.core.compile_with_cache
    return cuda.compile_with_cache(
cupy/cuda/compiler.py:428: in compile_with_cache
    return _compile_with_cache_hip(
cupy/cuda/compiler.py:829: in _compile_with_cache_hip
    temp_path = tf.name
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <tempfile._TemporaryFileWrapper object at 0x7f50117392b0>, exc = None
value = None, tb = None

    def __exit__(self, exc, value, tb):
>       result = self.file.__exit__(exc, value, tb)
E       AssertionError: Only cupy raises error
E       
E       Traceback (most recent call last):
E         File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.t8hdvgF7FH/cupy/cupy/testing/_helper.py", line 47, in _call_func
E           result = impl(self, *args, **kw)
E         File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.t8hdvgF7FH/cupy/tests/cupy_tests/indexing_tests/test_insert.py", line 80, in test_put
E           xp.put(a, inds, vals, self.mode)
E         File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.t8hdvgF7FH/cupy/cupy/_indexing/insert.py", line 67, in put
E           a.put(ind, v, mode=mode)
E         File "cupy/core/core.pyx", line 669, in cupy.core.core.ndarray.put
E           cpdef put(self, indices, values, mode='wrap'):
E         File "cupy/core/core.pyx", line 676, in cupy.core.core.ndarray.put
E           return _indexing._ndarray_put(self, indices, values, mode)
E         File "cupy/core/_routines_indexing.pyx", line 166, in cupy.core._routines_indexing._ndarray_put
E           _put_clip_kernel(indices, values, values.size, n, self)
E         File "cupy/core/_kernel.pyx", line 840, in cupy.core._kernel.ElementwiseKernel.__call__
E           kern = self._get_elementwise_kernel(dev_id, arginfos, type_map)
E         File "cupy/core/_kernel.pyx", line 865, in cupy.core._kernel.ElementwiseKernel._get_elementwise_kernel
E           kern = _get_elementwise_kernel(
E         File "cupy/_util.pyx", line 59, in cupy._util.memoize.decorator.ret
E           result = f(*args, **kwargs)
E         File "cupy/core/_kernel.pyx", line 652, in cupy.core._kernel._get_elementwise_kernel
E           return _get_simple_elementwise_kernel(
E         File "cupy/core/_kernel.pyx", line 38, in cupy.core._kernel._get_simple_elementwise_kernel
E           cpdef function.Function _get_simple_elementwise_kernel(
E         File "cupy/core/_kernel.pyx", line 61, in cupy.core._kernel._get_simple_elementwise_kernel
E           module = compile_with_cache(module_code, options)
E         File "cupy/core/core.pyx", line 2021, in cupy.core.core.compile_with_cache
E           return cuda.compile_with_cache(
E         File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.t8hdvgF7FH/cupy/cupy/cuda/compiler.py", line 428, in compile_with_cache
E           return _compile_with_cache_hip(
E         File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.t8hdvgF7FH/cupy/cupy/cuda/compiler.py", line 829, in _compile_with_cache_hip
E           temp_path = tf.name
E         File "/home/kmaeh/.pyenv/versions/3.8.7/lib/python3.8/tempfile.py", line 491, in __exit__
E           result = self.file.__exit__(exc, value, tb)
E       OSError: [Errno 28] No space left on device

/home/kmaeh/.pyenv/versions/3.8.7/lib/python3.8/tempfile.py:491: AssertionError
----------------------------- Captured stdout call -----------------------------
dtype is <class 'numpy.float64'>
_______ TestPut_param_34_{mode='clip', n_vals=1, shape=(2, 3)}.test_put ________

self = <<cupy_tests.indexing_tests.test_insert.TestPut_param_34_{mode='clip', n_vals=1, shape=(2, 3)} testMethod=test_put>  parameter: {'mode': 'clip', 'n_vals': 1, 'shape': (2, 3)}>
xp = <module 'cupy' from '/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.t8hdvgF7FH/cupy/cupy/__init__.py'>
dtype = <class 'numpy.float64'>

    @testing.for_all_dtypes()
    @testing.numpy_cupy_array_equal()
    def test_put(self, xp, dtype):
        a = testing.shaped_arange(self.shape, xp, dtype)
        # Take care so that actual indices don't overlap.
        if self.mode == 'raise':
            inds = xp.array([2, -1, 3, 0])
        else:
            inds = xp.array([2, -8, 3, 7])
        vals = testing.shaped_random((self.n_vals,), xp, dtype)
>       xp.put(a, inds, vals, self.mode)

tests/cupy_tests/indexing_tests/test_insert.py:80: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
cupy/_indexing/insert.py:67: in put
    a.put(ind, v, mode=mode)
cupy/core/core.pyx:669: in cupy.core.core.ndarray.put
    cpdef put(self, indices, values, mode='wrap'):
cupy/core/core.pyx:676: in cupy.core.core.ndarray.put
    return _indexing._ndarray_put(self, indices, values, mode)
cupy/core/_routines_indexing.pyx:166: in cupy.core._routines_indexing._ndarray_put
    _put_clip_kernel(indices, values, values.size, n, self)
cupy/core/_kernel.pyx:840: in cupy.core._kernel.ElementwiseKernel.__call__
    kern = self._get_elementwise_kernel(dev_id, arginfos, type_map)
cupy/core/_kernel.pyx:865: in cupy.core._kernel.ElementwiseKernel._get_elementwise_kernel
    kern = _get_elementwise_kernel(
cupy/_util.pyx:59: in cupy._util.memoize.decorator.ret
    result = f(*args, **kwargs)
cupy/core/_kernel.pyx:652: in cupy.core._kernel._get_elementwise_kernel
    return _get_simple_elementwise_kernel(
cupy/core/_kernel.pyx:38: in cupy.core._kernel._get_simple_elementwise_kernel
    cpdef function.Function _get_simple_elementwise_kernel(
cupy/core/_kernel.pyx:61: in cupy.core._kernel._get_simple_elementwise_kernel
    module = compile_with_cache(module_code, options)
cupy/core/core.pyx:2021: in cupy.core.core.compile_with_cache
    return cuda.compile_with_cache(
cupy/cuda/compiler.py:428: in compile_with_cache
    return _compile_with_cache_hip(
cupy/cuda/compiler.py:829: in _compile_with_cache_hip
    temp_path = tf.name
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <tempfile._TemporaryFileWrapper object at 0x7f5010eeaf10>, exc = None
value = None, tb = None

    def __exit__(self, exc, value, tb):
>       result = self.file.__exit__(exc, value, tb)
E       AssertionError: Only cupy raises error
E       
E       Traceback (most recent call last):
E         File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.t8hdvgF7FH/cupy/cupy/testing/_helper.py", line 47, in _call_func
E           result = impl(self, *args, **kw)
E         File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.t8hdvgF7FH/cupy/tests/cupy_tests/indexing_tests/test_insert.py", line 80, in test_put
E           xp.put(a, inds, vals, self.mode)
E         File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.t8hdvgF7FH/cupy/cupy/_indexing/insert.py", line 67, in put
E           a.put(ind, v, mode=mode)
E         File "cupy/core/core.pyx", line 669, in cupy.core.core.ndarray.put
E           cpdef put(self, indices, values, mode='wrap'):
E         File "cupy/core/core.pyx", line 676, in cupy.core.core.ndarray.put
E           return _indexing._ndarray_put(self, indices, values, mode)
E         File "cupy/core/_routines_indexing.pyx", line 166, in cupy.core._routines_indexing._ndarray_put
E           _put_clip_kernel(indices, values, values.size, n, self)
E         File "cupy/core/_kernel.pyx", line 840, in cupy.core._kernel.ElementwiseKernel.__call__
E           kern = self._get_elementwise_kernel(dev_id, arginfos, type_map)
E         File "cupy/core/_kernel.pyx", line 865, in cupy.core._kernel.ElementwiseKernel._get_elementwise_kernel
E           kern = _get_elementwise_kernel(
E         File "cupy/_util.pyx", line 59, in cupy._util.memoize.decorator.ret
E           result = f(*args, **kwargs)
E         File "cupy/core/_kernel.pyx", line 652, in cupy.core._kernel._get_elementwise_kernel
E           return _get_simple_elementwise_kernel(
E         File "cupy/core/_kernel.pyx", line 38, in cupy.core._kernel._get_simple_elementwise_kernel
E           cpdef function.Function _get_simple_elementwise_kernel(
E         File "cupy/core/_kernel.pyx", line 61, in cupy.core._kernel._get_simple_elementwise_kernel
E           module = compile_with_cache(module_code, options)
E         File "cupy/core/core.pyx", line 2021, in cupy.core.core.compile_with_cache
E           return cuda.compile_with_cache(
E         File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.t8hdvgF7FH/cupy/cupy/cuda/compiler.py", line 428, in compile_with_cache
E           return _compile_with_cache_hip(
E         File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.t8hdvgF7FH/cupy/cupy/cuda/compiler.py", line 829, in _compile_with_cache_hip
E           temp_path = tf.name
E         File "/home/kmaeh/.pyenv/versions/3.8.7/lib/python3.8/tempfile.py", line 491, in __exit__
E           result = self.file.__exit__(exc, value, tb)
E       OSError: [Errno 28] No space left on device

/home/kmaeh/.pyenv/versions/3.8.7/lib/python3.8/tempfile.py:491: AssertionError
----------------------------- Captured stdout call -----------------------------
dtype is <class 'numpy.float64'>
______ TestPut_param_35_{mode='clip', n_vals=1, shape=(4, 3, 2)}.test_put ______

self = <<cupy_tests.indexing_tests.test_insert.TestPut_param_35_{mode='clip', n_vals=1, shape=(4, 3, 2)} testMethod=test_put>  parameter: {'mode': 'clip', 'n_vals': 1, 'shape': (4, 3, 2)}>
xp = <module 'cupy' from '/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.t8hdvgF7FH/cupy/cupy/__init__.py'>
dtype = <class 'numpy.float64'>

    @testing.for_all_dtypes()
    @testing.numpy_cupy_array_equal()
    def test_put(self, xp, dtype):
        a = testing.shaped_arange(self.shape, xp, dtype)
        # Take care so that actual indices don't overlap.
        if self.mode == 'raise':
            inds = xp.array([2, -1, 3, 0])
        else:
            inds = xp.array([2, -8, 3, 7])
        vals = testing.shaped_random((self.n_vals,), xp, dtype)
>       xp.put(a, inds, vals, self.mode)

tests/cupy_tests/indexing_tests/test_insert.py:80: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
cupy/_indexing/insert.py:67: in put
    a.put(ind, v, mode=mode)
cupy/core/core.pyx:669: in cupy.core.core.ndarray.put
    cpdef put(self, indices, values, mode='wrap'):
cupy/core/core.pyx:676: in cupy.core.core.ndarray.put
    return _indexing._ndarray_put(self, indices, values, mode)
cupy/core/_routines_indexing.pyx:166: in cupy.core._routines_indexing._ndarray_put
    _put_clip_kernel(indices, values, values.size, n, self)
cupy/core/_kernel.pyx:840: in cupy.core._kernel.ElementwiseKernel.__call__
    kern = self._get_elementwise_kernel(dev_id, arginfos, type_map)
cupy/core/_kernel.pyx:865: in cupy.core._kernel.ElementwiseKernel._get_elementwise_kernel
    kern = _get_elementwise_kernel(
cupy/_util.pyx:59: in cupy._util.memoize.decorator.ret
    result = f(*args, **kwargs)
cupy/core/_kernel.pyx:652: in cupy.core._kernel._get_elementwise_kernel
    return _get_simple_elementwise_kernel(
cupy/core/_kernel.pyx:38: in cupy.core._kernel._get_simple_elementwise_kernel
    cpdef function.Function _get_simple_elementwise_kernel(
cupy/core/_kernel.pyx:61: in cupy.core._kernel._get_simple_elementwise_kernel
    module = compile_with_cache(module_code, options)
cupy/core/core.pyx:2021: in cupy.core.core.compile_with_cache
    return cuda.compile_with_cache(
cupy/cuda/compiler.py:428: in compile_with_cache
    return _compile_with_cache_hip(
cupy/cuda/compiler.py:829: in _compile_with_cache_hip
    temp_path = tf.name
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <tempfile._TemporaryFileWrapper object at 0x7f5010842c40>, exc = None
value = None, tb = None

    def __exit__(self, exc, value, tb):
>       result = self.file.__exit__(exc, value, tb)
E       AssertionError: Only cupy raises error
E       
E       Traceback (most recent call last):
E         File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.t8hdvgF7FH/cupy/cupy/testing/_helper.py", line 47, in _call_func
E           result = impl(self, *args, **kw)
E         File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.t8hdvgF7FH/cupy/tests/cupy_tests/indexing_tests/test_insert.py", line 80, in test_put
E           xp.put(a, inds, vals, self.mode)
E         File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.t8hdvgF7FH/cupy/cupy/_indexing/insert.py", line 67, in put
E           a.put(ind, v, mode=mode)
E         File "cupy/core/core.pyx", line 669, in cupy.core.core.ndarray.put
E           cpdef put(self, indices, values, mode='wrap'):
E         File "cupy/core/core.pyx", line 676, in cupy.core.core.ndarray.put
E           return _indexing._ndarray_put(self, indices, values, mode)
E         File "cupy/core/_routines_indexing.pyx", line 166, in cupy.core._routines_indexing._ndarray_put
E           _put_clip_kernel(indices, values, values.size, n, self)
E         File "cupy/core/_kernel.pyx", line 840, in cupy.core._kernel.ElementwiseKernel.__call__
E           kern = self._get_elementwise_kernel(dev_id, arginfos, type_map)
E         File "cupy/core/_kernel.pyx", line 865, in cupy.core._kernel.ElementwiseKernel._get_elementwise_kernel
E           kern = _get_elementwise_kernel(
E         File "cupy/_util.pyx", line 59, in cupy._util.memoize.decorator.ret
E           result = f(*args, **kwargs)
E         File "cupy/core/_kernel.pyx", line 652, in cupy.core._kernel._get_elementwise_kernel
E           return _get_simple_elementwise_kernel(
E         File "cupy/core/_kernel.pyx", line 38, in cupy.core._kernel._get_simple_elementwise_kernel
E           cpdef function.Function _get_simple_elementwise_kernel(
E         File "cupy/core/_kernel.pyx", line 61, in cupy.core._kernel._get_simple_elementwise_kernel
E           module = compile_with_cache(module_code, options)
E         File "cupy/core/core.pyx", line 2021, in cupy.core.core.compile_with_cache
E           return cuda.compile_with_cache(
E         File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.t8hdvgF7FH/cupy/cupy/cuda/compiler.py", line 428, in compile_with_cache
E           return _compile_with_cache_hip(
E         File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.t8hdvgF7FH/cupy/cupy/cuda/compiler.py", line 829, in _compile_with_cache_hip
E           temp_path = tf.name
E         File "/home/kmaeh/.pyenv/versions/3.8.7/lib/python3.8/tempfile.py", line 491, in __exit__
E           result = self.file.__exit__(exc, value, tb)
E       OSError: [Errno 28] No space left on device

/home/kmaeh/.pyenv/versions/3.8.7/lib/python3.8/tempfile.py:491: AssertionError
----------------------------- Captured stdout call -----------------------------
dtype is <class 'numpy.float64'>
________ TestPut_param_36_{mode='clip', n_vals=3, shape=(7,)}.test_put _________

self = <<cupy_tests.indexing_tests.test_insert.TestPut_param_36_{mode='clip', n_vals=3, shape=(7,)} testMethod=test_put>  parameter: {'mode': 'clip', 'n_vals': 3, 'shape': (7,)}>
xp = <module 'cupy' from '/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.t8hdvgF7FH/cupy/cupy/__init__.py'>
dtype = <class 'numpy.float64'>

    @testing.for_all_dtypes()
    @testing.numpy_cupy_array_equal()
    def test_put(self, xp, dtype):
        a = testing.shaped_arange(self.shape, xp, dtype)
        # Take care so that actual indices don't overlap.
        if self.mode == 'raise':
            inds = xp.array([2, -1, 3, 0])
        else:
            inds = xp.array([2, -8, 3, 7])
        vals = testing.shaped_random((self.n_vals,), xp, dtype)
>       xp.put(a, inds, vals, self.mode)

tests/cupy_tests/indexing_tests/test_insert.py:80: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
cupy/_indexing/insert.py:67: in put
    a.put(ind, v, mode=mode)
cupy/core/core.pyx:669: in cupy.core.core.ndarray.put
    cpdef put(self, indices, values, mode='wrap'):
cupy/core/core.pyx:676: in cupy.core.core.ndarray.put
    return _indexing._ndarray_put(self, indices, values, mode)
cupy/core/_routines_indexing.pyx:166: in cupy.core._routines_indexing._ndarray_put
    _put_clip_kernel(indices, values, values.size, n, self)
cupy/core/_kernel.pyx:840: in cupy.core._kernel.ElementwiseKernel.__call__
    kern = self._get_elementwise_kernel(dev_id, arginfos, type_map)
cupy/core/_kernel.pyx:865: in cupy.core._kernel.ElementwiseKernel._get_elementwise_kernel
    kern = _get_elementwise_kernel(
cupy/_util.pyx:59: in cupy._util.memoize.decorator.ret
    result = f(*args, **kwargs)
cupy/core/_kernel.pyx:652: in cupy.core._kernel._get_elementwise_kernel
    return _get_simple_elementwise_kernel(
cupy/core/_kernel.pyx:38: in cupy.core._kernel._get_simple_elementwise_kernel
    cpdef function.Function _get_simple_elementwise_kernel(
cupy/core/_kernel.pyx:61: in cupy.core._kernel._get_simple_elementwise_kernel
    module = compile_with_cache(module_code, options)
cupy/core/core.pyx:2021: in cupy.core.core.compile_with_cache
    return cuda.compile_with_cache(
cupy/cuda/compiler.py:428: in compile_with_cache
    return _compile_with_cache_hip(
cupy/cuda/compiler.py:829: in _compile_with_cache_hip
    temp_path = tf.name
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <tempfile._TemporaryFileWrapper object at 0x7f50108589d0>, exc = None
value = None, tb = None

    def __exit__(self, exc, value, tb):
>       result = self.file.__exit__(exc, value, tb)
E       AssertionError: Only cupy raises error
E       
E       Traceback (most recent call last):
E         File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.t8hdvgF7FH/cupy/cupy/testing/_helper.py", line 47, in _call_func
E           result = impl(self, *args, **kw)
E         File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.t8hdvgF7FH/cupy/tests/cupy_tests/indexing_tests/test_insert.py", line 80, in test_put
E           xp.put(a, inds, vals, self.mode)
E         File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.t8hdvgF7FH/cupy/cupy/_indexing/insert.py", line 67, in put
E           a.put(ind, v, mode=mode)
E         File "cupy/core/core.pyx", line 669, in cupy.core.core.ndarray.put
E           cpdef put(self, indices, values, mode='wrap'):
E         File "cupy/core/core.pyx", line 676, in cupy.core.core.ndarray.put
E           return _indexing._ndarray_put(self, indices, values, mode)
E         File "cupy/core/_routines_indexing.pyx", line 166, in cupy.core._routines_indexing._ndarray_put
E           _put_clip_kernel(indices, values, values.size, n, self)
E         File "cupy/core/_kernel.pyx", line 840, in cupy.core._kernel.ElementwiseKernel.__call__
E           kern = self._get_elementwise_kernel(dev_id, arginfos, type_map)
E         File "cupy/core/_kernel.pyx", line 865, in cupy.core._kernel.ElementwiseKernel._get_elementwise_kernel
E           kern = _get_elementwise_kernel(
E         File "cupy/_util.pyx", line 59, in cupy._util.memoize.decorator.ret
E           result = f(*args, **kwargs)
E         File "cupy/core/_kernel.pyx", line 652, in cupy.core._kernel._get_elementwise_kernel
E           return _get_simple_elementwise_kernel(
E         File "cupy/core/_kernel.pyx", line 38, in cupy.core._kernel._get_simple_elementwise_kernel
E           cpdef function.Function _get_simple_elementwise_kernel(
E         File "cupy/core/_kernel.pyx", line 61, in cupy.core._kernel._get_simple_elementwise_kernel
E           module = compile_with_cache(module_code, options)
E         File "cupy/core/core.pyx", line 2021, in cupy.core.core.compile_with_cache
E           return cuda.compile_with_cache(
E         File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.t8hdvgF7FH/cupy/cupy/cuda/compiler.py", line 428, in compile_with_cache
E           return _compile_with_cache_hip(
E         File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.t8hdvgF7FH/cupy/cupy/cuda/compiler.py", line 829, in _compile_with_cache_hip
E           temp_path = tf.name
E         File "/home/kmaeh/.pyenv/versions/3.8.7/lib/python3.8/tempfile.py", line 491, in __exit__
E           result = self.file.__exit__(exc, value, tb)
E       OSError: [Errno 28] No space left on device

/home/kmaeh/.pyenv/versions/3.8.7/lib/python3.8/tempfile.py:491: AssertionError
----------------------------- Captured stdout call -----------------------------
dtype is <class 'numpy.float64'>
_______ TestPut_param_37_{mode='clip', n_vals=3, shape=(2, 3)}.test_put ________

self = <<cupy_tests.indexing_tests.test_insert.TestPut_param_37_{mode='clip', n_vals=3, shape=(2, 3)} testMethod=test_put>  parameter: {'mode': 'clip', 'n_vals': 3, 'shape': (2, 3)}>
xp = <module 'cupy' from '/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.t8hdvgF7FH/cupy/cupy/__init__.py'>
dtype = <class 'numpy.float64'>

    @testing.for_all_dtypes()
    @testing.numpy_cupy_array_equal()
    def test_put(self, xp, dtype):
        a = testing.shaped_arange(self.shape, xp, dtype)
        # Take care so that actual indices don't overlap.
        if self.mode == 'raise':
            inds = xp.array([2, -1, 3, 0])
        else:
            inds = xp.array([2, -8, 3, 7])
        vals = testing.shaped_random((self.n_vals,), xp, dtype)
>       xp.put(a, inds, vals, self.mode)

tests/cupy_tests/indexing_tests/test_insert.py:80: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
cupy/_indexing/insert.py:67: in put
    a.put(ind, v, mode=mode)
cupy/core/core.pyx:669: in cupy.core.core.ndarray.put
    cpdef put(self, indices, values, mode='wrap'):
cupy/core/core.pyx:676: in cupy.core.core.ndarray.put
    return _indexing._ndarray_put(self, indices, values, mode)
cupy/core/_routines_indexing.pyx:166: in cupy.core._routines_indexing._ndarray_put
    _put_clip_kernel(indices, values, values.size, n, self)
cupy/core/_kernel.pyx:840: in cupy.core._kernel.ElementwiseKernel.__call__
    kern = self._get_elementwise_kernel(dev_id, arginfos, type_map)
cupy/core/_kernel.pyx:865: in cupy.core._kernel.ElementwiseKernel._get_elementwise_kernel
    kern = _get_elementwise_kernel(
cupy/_util.pyx:59: in cupy._util.memoize.decorator.ret
    result = f(*args, **kwargs)
cupy/core/_kernel.pyx:652: in cupy.core._kernel._get_elementwise_kernel
    return _get_simple_elementwise_kernel(
cupy/core/_kernel.pyx:38: in cupy.core._kernel._get_simple_elementwise_kernel
    cpdef function.Function _get_simple_elementwise_kernel(
cupy/core/_kernel.pyx:61: in cupy.core._kernel._get_simple_elementwise_kernel
    module = compile_with_cache(module_code, options)
cupy/core/core.pyx:2021: in cupy.core.core.compile_with_cache
    return cuda.compile_with_cache(
cupy/cuda/compiler.py:428: in compile_with_cache
    return _compile_with_cache_hip(
cupy/cuda/compiler.py:829: in _compile_with_cache_hip
    temp_path = tf.name
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <tempfile._TemporaryFileWrapper object at 0x7f5011739760>, exc = None
value = None, tb = None

    def __exit__(self, exc, value, tb):
>       result = self.file.__exit__(exc, value, tb)
E       AssertionError: Only cupy raises error
E       
E       Traceback (most recent call last):
E         File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.t8hdvgF7FH/cupy/cupy/testing/_helper.py", line 47, in _call_func
E           result = impl(self, *args, **kw)
E         File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.t8hdvgF7FH/cupy/tests/cupy_tests/indexing_tests/test_insert.py", line 80, in test_put
E           xp.put(a, inds, vals, self.mode)
E         File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.t8hdvgF7FH/cupy/cupy/_indexing/insert.py", line 67, in put
E           a.put(ind, v, mode=mode)
E         File "cupy/core/core.pyx", line 669, in cupy.core.core.ndarray.put
E           cpdef put(self, indices, values, mode='wrap'):
E         File "cupy/core/core.pyx", line 676, in cupy.core.core.ndarray.put
E           return _indexing._ndarray_put(self, indices, values, mode)
E         File "cupy/core/_routines_indexing.pyx", line 166, in cupy.core._routines_indexing._ndarray_put
E           _put_clip_kernel(indices, values, values.size, n, self)
E         File "cupy/core/_kernel.pyx", line 840, in cupy.core._kernel.ElementwiseKernel.__call__
E           kern = self._get_elementwise_kernel(dev_id, arginfos, type_map)
E         File "cupy/core/_kernel.pyx", line 865, in cupy.core._kernel.ElementwiseKernel._get_elementwise_kernel
E           kern = _get_elementwise_kernel(
E         File "cupy/_util.pyx", line 59, in cupy._util.memoize.decorator.ret
E           result = f(*args, **kwargs)
E         File "cupy/core/_kernel.pyx", line 652, in cupy.core._kernel._get_elementwise_kernel
E           return _get_simple_elementwise_kernel(
E         File "cupy/core/_kernel.pyx", line 38, in cupy.core._kernel._get_simple_elementwise_kernel
E           cpdef function.Function _get_simple_elementwise_kernel(
E         File "cupy/core/_kernel.pyx", line 61, in cupy.core._kernel._get_simple_elementwise_kernel
E           module = compile_with_cache(module_code, options)
E         File "cupy/core/core.pyx", line 2021, in cupy.core.core.compile_with_cache
E           return cuda.compile_with_cache(
E         File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.t8hdvgF7FH/cupy/cupy/cuda/compiler.py", line 428, in compile_with_cache
E           return _compile_with_cache_hip(
E         File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.t8hdvgF7FH/cupy/cupy/cuda/compiler.py", line 829, in _compile_with_cache_hip
E           temp_path = tf.name
E         File "/home/kmaeh/.pyenv/versions/3.8.7/lib/python3.8/tempfile.py", line 491, in __exit__
E           result = self.file.__exit__(exc, value, tb)
E       OSError: [Errno 28] No space left on device

/home/kmaeh/.pyenv/versions/3.8.7/lib/python3.8/tempfile.py:491: AssertionError
----------------------------- Captured stdout call -----------------------------
dtype is <class 'numpy.float64'>
______ TestPut_param_38_{mode='clip', n_vals=3, shape=(4, 3, 2)}.test_put ______

self = <<cupy_tests.indexing_tests.test_insert.TestPut_param_38_{mode='clip', n_vals=3, shape=(4, 3, 2)} testMethod=test_put>  parameter: {'mode': 'clip', 'n_vals': 3, 'shape': (4, 3, 2)}>
xp = <module 'cupy' from '/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.t8hdvgF7FH/cupy/cupy/__init__.py'>
dtype = <class 'numpy.float64'>

    @testing.for_all_dtypes()
    @testing.numpy_cupy_array_equal()
    def test_put(self, xp, dtype):
        a = testing.shaped_arange(self.shape, xp, dtype)
        # Take care so that actual indices don't overlap.
        if self.mode == 'raise':
            inds = xp.array([2, -1, 3, 0])
        else:
            inds = xp.array([2, -8, 3, 7])
        vals = testing.shaped_random((self.n_vals,), xp, dtype)
>       xp.put(a, inds, vals, self.mode)

tests/cupy_tests/indexing_tests/test_insert.py:80: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
cupy/_indexing/insert.py:67: in put
    a.put(ind, v, mode=mode)
cupy/core/core.pyx:669: in cupy.core.core.ndarray.put
    cpdef put(self, indices, values, mode='wrap'):
cupy/core/core.pyx:676: in cupy.core.core.ndarray.put
    return _indexing._ndarray_put(self, indices, values, mode)
cupy/core/_routines_indexing.pyx:166: in cupy.core._routines_indexing._ndarray_put
    _put_clip_kernel(indices, values, values.size, n, self)
cupy/core/_kernel.pyx:840: in cupy.core._kernel.ElementwiseKernel.__call__
    kern = self._get_elementwise_kernel(dev_id, arginfos, type_map)
cupy/core/_kernel.pyx:865: in cupy.core._kernel.ElementwiseKernel._get_elementwise_kernel
    kern = _get_elementwise_kernel(
cupy/_util.pyx:59: in cupy._util.memoize.decorator.ret
    result = f(*args, **kwargs)
cupy/core/_kernel.pyx:652: in cupy.core._kernel._get_elementwise_kernel
    return _get_simple_elementwise_kernel(
cupy/core/_kernel.pyx:38: in cupy.core._kernel._get_simple_elementwise_kernel
    cpdef function.Function _get_simple_elementwise_kernel(
cupy/core/_kernel.pyx:61: in cupy.core._kernel._get_simple_elementwise_kernel
    module = compile_with_cache(module_code, options)
cupy/core/core.pyx:2021: in cupy.core.core.compile_with_cache
    return cuda.compile_with_cache(
cupy/cuda/compiler.py:428: in compile_with_cache
    return _compile_with_cache_hip(
cupy/cuda/compiler.py:829: in _compile_with_cache_hip
    temp_path = tf.name
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <tempfile._TemporaryFileWrapper object at 0x7f5010589520>, exc = None
value = None, tb = None

    def __exit__(self, exc, value, tb):
>       result = self.file.__exit__(exc, value, tb)
E       AssertionError: Only cupy raises error
E       
E       Traceback (most recent call last):
E         File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.t8hdvgF7FH/cupy/cupy/testing/_helper.py", line 47, in _call_func
E           result = impl(self, *args, **kw)
E         File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.t8hdvgF7FH/cupy/tests/cupy_tests/indexing_tests/test_insert.py", line 80, in test_put
E           xp.put(a, inds, vals, self.mode)
E         File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.t8hdvgF7FH/cupy/cupy/_indexing/insert.py", line 67, in put
E           a.put(ind, v, mode=mode)
E         File "cupy/core/core.pyx", line 669, in cupy.core.core.ndarray.put
E           cpdef put(self, indices, values, mode='wrap'):
E         File "cupy/core/core.pyx", line 676, in cupy.core.core.ndarray.put
E           return _indexing._ndarray_put(self, indices, values, mode)
E         File "cupy/core/_routines_indexing.pyx", line 166, in cupy.core._routines_indexing._ndarray_put
E           _put_clip_kernel(indices, values, values.size, n, self)
E         File "cupy/core/_kernel.pyx", line 840, in cupy.core._kernel.ElementwiseKernel.__call__
E           kern = self._get_elementwise_kernel(dev_id, arginfos, type_map)
E         File "cupy/core/_kernel.pyx", line 865, in cupy.core._kernel.ElementwiseKernel._get_elementwise_kernel
E           kern = _get_elementwise_kernel(
E         File "cupy/_util.pyx", line 59, in cupy._util.memoize.decorator.ret
E           result = f(*args, **kwargs)
E         File "cupy/core/_kernel.pyx", line 652, in cupy.core._kernel._get_elementwise_kernel
E           return _get_simple_elementwise_kernel(
E         File "cupy/core/_kernel.pyx", line 38, in cupy.core._kernel._get_simple_elementwise_kernel
E           cpdef function.Function _get_simple_elementwise_kernel(
E         File "cupy/core/_kernel.pyx", line 61, in cupy.core._kernel._get_simple_elementwise_kernel
E           module = compile_with_cache(module_code, options)
E         File "cupy/core/core.pyx", line 2021, in cupy.core.core.compile_with_cache
E           return cuda.compile_with_cache(
E         File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.t8hdvgF7FH/cupy/cupy/cuda/compiler.py", line 428, in compile_with_cache
E           return _compile_with_cache_hip(
E         File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.t8hdvgF7FH/cupy/cupy/cuda/compiler.py", line 829, in _compile_with_cache_hip
E           temp_path = tf.name
E         File "/home/kmaeh/.pyenv/versions/3.8.7/lib/python3.8/tempfile.py", line 491, in __exit__
E           result = self.file.__exit__(exc, value, tb)
E       OSError: [Errno 28] No space left on device

/home/kmaeh/.pyenv/versions/3.8.7/lib/python3.8/tempfile.py:491: AssertionError
----------------------------- Captured stdout call -----------------------------
dtype is <class 'numpy.float64'>
________ TestPut_param_39_{mode='clip', n_vals=4, shape=(7,)}.test_put _________

self = <<cupy_tests.indexing_tests.test_insert.TestPut_param_39_{mode='clip', n_vals=4, shape=(7,)} testMethod=test_put>  parameter: {'mode': 'clip', 'n_vals': 4, 'shape': (7,)}>
xp = <module 'cupy' from '/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.t8hdvgF7FH/cupy/cupy/__init__.py'>
dtype = <class 'numpy.float64'>

    @testing.for_all_dtypes()
    @testing.numpy_cupy_array_equal()
    def test_put(self, xp, dtype):
        a = testing.shaped_arange(self.shape, xp, dtype)
        # Take care so that actual indices don't overlap.
        if self.mode == 'raise':
            inds = xp.array([2, -1, 3, 0])
        else:
            inds = xp.array([2, -8, 3, 7])
        vals = testing.shaped_random((self.n_vals,), xp, dtype)
>       xp.put(a, inds, vals, self.mode)

tests/cupy_tests/indexing_tests/test_insert.py:80: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
cupy/_indexing/insert.py:67: in put
    a.put(ind, v, mode=mode)
cupy/core/core.pyx:669: in cupy.core.core.ndarray.put
    cpdef put(self, indices, values, mode='wrap'):
cupy/core/core.pyx:676: in cupy.core.core.ndarray.put
    return _indexing._ndarray_put(self, indices, values, mode)
cupy/core/_routines_indexing.pyx:166: in cupy.core._routines_indexing._ndarray_put
    _put_clip_kernel(indices, values, values.size, n, self)
cupy/core/_kernel.pyx:840: in cupy.core._kernel.ElementwiseKernel.__call__
    kern = self._get_elementwise_kernel(dev_id, arginfos, type_map)
cupy/core/_kernel.pyx:865: in cupy.core._kernel.ElementwiseKernel._get_elementwise_kernel
    kern = _get_elementwise_kernel(
cupy/_util.pyx:59: in cupy._util.memoize.decorator.ret
    result = f(*args, **kwargs)
cupy/core/_kernel.pyx:652: in cupy.core._kernel._get_elementwise_kernel
    return _get_simple_elementwise_kernel(
cupy/core/_kernel.pyx:38: in cupy.core._kernel._get_simple_elementwise_kernel
    cpdef function.Function _get_simple_elementwise_kernel(
cupy/core/_kernel.pyx:61: in cupy.core._kernel._get_simple_elementwise_kernel
    module = compile_with_cache(module_code, options)
cupy/core/core.pyx:2021: in cupy.core.core.compile_with_cache
    return cuda.compile_with_cache(
cupy/cuda/compiler.py:428: in compile_with_cache
    return _compile_with_cache_hip(
cupy/cuda/compiler.py:829: in _compile_with_cache_hip
    temp_path = tf.name
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <tempfile._TemporaryFileWrapper object at 0x7f5010896fa0>, exc = None
value = None, tb = None

    def __exit__(self, exc, value, tb):
>       result = self.file.__exit__(exc, value, tb)
E       AssertionError: Only cupy raises error
E       
E       Traceback (most recent call last):
E         File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.t8hdvgF7FH/cupy/cupy/testing/_helper.py", line 47, in _call_func
E           result = impl(self, *args, **kw)
E         File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.t8hdvgF7FH/cupy/tests/cupy_tests/indexing_tests/test_insert.py", line 80, in test_put
E           xp.put(a, inds, vals, self.mode)
E         File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.t8hdvgF7FH/cupy/cupy/_indexing/insert.py", line 67, in put
E           a.put(ind, v, mode=mode)
E         File "cupy/core/core.pyx", line 669, in cupy.core.core.ndarray.put
E           cpdef put(self, indices, values, mode='wrap'):
E         File "cupy/core/core.pyx", line 676, in cupy.core.core.ndarray.put
E           return _indexing._ndarray_put(self, indices, values, mode)
E         File "cupy/core/_routines_indexing.pyx", line 166, in cupy.core._routines_indexing._ndarray_put
E           _put_clip_kernel(indices, values, values.size, n, self)
E         File "cupy/core/_kernel.pyx", line 840, in cupy.core._kernel.ElementwiseKernel.__call__
E           kern = self._get_elementwise_kernel(dev_id, arginfos, type_map)
E         File "cupy/core/_kernel.pyx", line 865, in cupy.core._kernel.ElementwiseKernel._get_elementwise_kernel
E           kern = _get_elementwise_kernel(
E         File "cupy/_util.pyx", line 59, in cupy._util.memoize.decorator.ret
E           result = f(*args, **kwargs)
E         File "cupy/core/_kernel.pyx", line 652, in cupy.core._kernel._get_elementwise_kernel
E           return _get_simple_elementwise_kernel(
E         File "cupy/core/_kernel.pyx", line 38, in cupy.core._kernel._get_simple_elementwise_kernel
E           cpdef function.Function _get_simple_elementwise_kernel(
E         File "cupy/core/_kernel.pyx", line 61, in cupy.core._kernel._get_simple_elementwise_kernel
E           module = compile_with_cache(module_code, options)
E         File "cupy/core/core.pyx", line 2021, in cupy.core.core.compile_with_cache
E           return cuda.compile_with_cache(
E         File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.t8hdvgF7FH/cupy/cupy/cuda/compiler.py", line 428, in compile_with_cache
E           return _compile_with_cache_hip(
E         File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.t8hdvgF7FH/cupy/cupy/cuda/compiler.py", line 829, in _compile_with_cache_hip
E           temp_path = tf.name
E         File "/home/kmaeh/.pyenv/versions/3.8.7/lib/python3.8/tempfile.py", line 491, in __exit__
E           result = self.file.__exit__(exc, value, tb)
E       OSError: [Errno 28] No space left on device

/home/kmaeh/.pyenv/versions/3.8.7/lib/python3.8/tempfile.py:491: AssertionError
----------------------------- Captured stdout call -----------------------------
dtype is <class 'numpy.float64'>
_______ TestPut_param_40_{mode='clip', n_vals=4, shape=(2, 3)}.test_put ________

self = <<cupy_tests.indexing_tests.test_insert.TestPut_param_40_{mode='clip', n_vals=4, shape=(2, 3)} testMethod=test_put>  parameter: {'mode': 'clip', 'n_vals': 4, 'shape': (2, 3)}>
xp = <module 'cupy' from '/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.t8hdvgF7FH/cupy/cupy/__init__.py'>
dtype = <class 'numpy.float64'>

    @testing.for_all_dtypes()
    @testing.numpy_cupy_array_equal()
    def test_put(self, xp, dtype):
        a = testing.shaped_arange(self.shape, xp, dtype)
        # Take care so that actual indices don't overlap.
        if self.mode == 'raise':
            inds = xp.array([2, -1, 3, 0])
        else:
            inds = xp.array([2, -8, 3, 7])
        vals = testing.shaped_random((self.n_vals,), xp, dtype)
>       xp.put(a, inds, vals, self.mode)

tests/cupy_tests/indexing_tests/test_insert.py:80: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
cupy/_indexing/insert.py:67: in put
    a.put(ind, v, mode=mode)
cupy/core/core.pyx:669: in cupy.core.core.ndarray.put
    cpdef put(self, indices, values, mode='wrap'):
cupy/core/core.pyx:676: in cupy.core.core.ndarray.put
    return _indexing._ndarray_put(self, indices, values, mode)
cupy/core/_routines_indexing.pyx:166: in cupy.core._routines_indexing._ndarray_put
    _put_clip_kernel(indices, values, values.size, n, self)
cupy/core/_kernel.pyx:840: in cupy.core._kernel.ElementwiseKernel.__call__
    kern = self._get_elementwise_kernel(dev_id, arginfos, type_map)
cupy/core/_kernel.pyx:865: in cupy.core._kernel.ElementwiseKernel._get_elementwise_kernel
    kern = _get_elementwise_kernel(
cupy/_util.pyx:59: in cupy._util.memoize.decorator.ret
    result = f(*args, **kwargs)
cupy/core/_kernel.pyx:652: in cupy.core._kernel._get_elementwise_kernel
    return _get_simple_elementwise_kernel(
cupy/core/_kernel.pyx:38: in cupy.core._kernel._get_simple_elementwise_kernel
    cpdef function.Function _get_simple_elementwise_kernel(
cupy/core/_kernel.pyx:61: in cupy.core._kernel._get_simple_elementwise_kernel
    module = compile_with_cache(module_code, options)
cupy/core/core.pyx:2021: in cupy.core.core.compile_with_cache
    return cuda.compile_with_cache(
cupy/cuda/compiler.py:428: in compile_with_cache
    return _compile_with_cache_hip(
cupy/cuda/compiler.py:829: in _compile_with_cache_hip
    temp_path = tf.name
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <tempfile._TemporaryFileWrapper object at 0x7f50109bec70>, exc = None
value = None, tb = None

    def __exit__(self, exc, value, tb):
>       result = self.file.__exit__(exc, value, tb)
E       AssertionError: Only cupy raises error
E       
E       Traceback (most recent call last):
E         File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.t8hdvgF7FH/cupy/cupy/testing/_helper.py", line 47, in _call_func
E           result = impl(self, *args, **kw)
E         File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.t8hdvgF7FH/cupy/tests/cupy_tests/indexing_tests/test_insert.py", line 80, in test_put
E           xp.put(a, inds, vals, self.mode)
E         File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.t8hdvgF7FH/cupy/cupy/_indexing/insert.py", line 67, in put
E           a.put(ind, v, mode=mode)
E         File "cupy/core/core.pyx", line 669, in cupy.core.core.ndarray.put
E           cpdef put(self, indices, values, mode='wrap'):
E         File "cupy/core/core.pyx", line 676, in cupy.core.core.ndarray.put
E           return _indexing._ndarray_put(self, indices, values, mode)
E         File "cupy/core/_routines_indexing.pyx", line 166, in cupy.core._routines_indexing._ndarray_put
E           _put_clip_kernel(indices, values, values.size, n, self)
E         File "cupy/core/_kernel.pyx", line 840, in cupy.core._kernel.ElementwiseKernel.__call__
E           kern = self._get_elementwise_kernel(dev_id, arginfos, type_map)
E         File "cupy/core/_kernel.pyx", line 865, in cupy.core._kernel.ElementwiseKernel._get_elementwise_kernel
E           kern = _get_elementwise_kernel(
E         File "cupy/_util.pyx", line 59, in cupy._util.memoize.decorator.ret
E           result = f(*args, **kwargs)
E         File "cupy/core/_kernel.pyx", line 652, in cupy.core._kernel._get_elementwise_kernel
E           return _get_simple_elementwise_kernel(
E         File "cupy/core/_kernel.pyx", line 38, in cupy.core._kernel._get_simple_elementwise_kernel
E           cpdef function.Function _get_simple_elementwise_kernel(
E         File "cupy/core/_kernel.pyx", line 61, in cupy.core._kernel._get_simple_elementwise_kernel
E           module = compile_with_cache(module_code, options)
E         File "cupy/core/core.pyx", line 2021, in cupy.core.core.compile_with_cache
E           return cuda.compile_with_cache(
E         File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.t8hdvgF7FH/cupy/cupy/cuda/compiler.py", line 428, in compile_with_cache
E           return _compile_with_cache_hip(
E         File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.t8hdvgF7FH/cupy/cupy/cuda/compiler.py", line 829, in _compile_with_cache_hip
E           temp_path = tf.name
E         File "/home/kmaeh/.pyenv/versions/3.8.7/lib/python3.8/tempfile.py", line 491, in __exit__
E           result = self.file.__exit__(exc, value, tb)
E       OSError: [Errno 28] No space left on device

/home/kmaeh/.pyenv/versions/3.8.7/lib/python3.8/tempfile.py:491: AssertionError
----------------------------- Captured stdout call -----------------------------
dtype is <class 'numpy.float64'>
______ TestPut_param_41_{mode='clip', n_vals=4, shape=(4, 3, 2)}.test_put ______

self = <<cupy_tests.indexing_tests.test_insert.TestPut_param_41_{mode='clip', n_vals=4, shape=(4, 3, 2)} testMethod=test_put>  parameter: {'mode': 'clip', 'n_vals': 4, 'shape': (4, 3, 2)}>
xp = <module 'cupy' from '/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.t8hdvgF7FH/cupy/cupy/__init__.py'>
dtype = <class 'numpy.float64'>

    @testing.for_all_dtypes()
    @testing.numpy_cupy_array_equal()
    def test_put(self, xp, dtype):
        a = testing.shaped_arange(self.shape, xp, dtype)
        # Take care so that actual indices don't overlap.
        if self.mode == 'raise':
            inds = xp.array([2, -1, 3, 0])
        else:
            inds = xp.array([2, -8, 3, 7])
        vals = testing.shaped_random((self.n_vals,), xp, dtype)
>       xp.put(a, inds, vals, self.mode)

tests/cupy_tests/indexing_tests/test_insert.py:80: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
cupy/_indexing/insert.py:67: in put
    a.put(ind, v, mode=mode)
cupy/core/core.pyx:669: in cupy.core.core.ndarray.put
    cpdef put(self, indices, values, mode='wrap'):
cupy/core/core.pyx:676: in cupy.core.core.ndarray.put
    return _indexing._ndarray_put(self, indices, values, mode)
cupy/core/_routines_indexing.pyx:166: in cupy.core._routines_indexing._ndarray_put
    _put_clip_kernel(indices, values, values.size, n, self)
cupy/core/_kernel.pyx:840: in cupy.core._kernel.ElementwiseKernel.__call__
    kern = self._get_elementwise_kernel(dev_id, arginfos, type_map)
cupy/core/_kernel.pyx:865: in cupy.core._kernel.ElementwiseKernel._get_elementwise_kernel
    kern = _get_elementwise_kernel(
cupy/_util.pyx:59: in cupy._util.memoize.decorator.ret
    result = f(*args, **kwargs)
cupy/core/_kernel.pyx:652: in cupy.core._kernel._get_elementwise_kernel
    return _get_simple_elementwise_kernel(
cupy/core/_kernel.pyx:38: in cupy.core._kernel._get_simple_elementwise_kernel
    cpdef function.Function _get_simple_elementwise_kernel(
cupy/core/_kernel.pyx:61: in cupy.core._kernel._get_simple_elementwise_kernel
    module = compile_with_cache(module_code, options)
cupy/core/core.pyx:2021: in cupy.core.core.compile_with_cache
    return cuda.compile_with_cache(
cupy/cuda/compiler.py:428: in compile_with_cache
    return _compile_with_cache_hip(
cupy/cuda/compiler.py:829: in _compile_with_cache_hip
    temp_path = tf.name
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <tempfile._TemporaryFileWrapper object at 0x7f577c43c250>, exc = None
value = None, tb = None

    def __exit__(self, exc, value, tb):
>       result = self.file.__exit__(exc, value, tb)
E       AssertionError: Only cupy raises error
E       
E       Traceback (most recent call last):
E         File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.t8hdvgF7FH/cupy/cupy/testing/_helper.py", line 47, in _call_func
E           result = impl(self, *args, **kw)
E         File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.t8hdvgF7FH/cupy/tests/cupy_tests/indexing_tests/test_insert.py", line 80, in test_put
E           xp.put(a, inds, vals, self.mode)
E         File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.t8hdvgF7FH/cupy/cupy/_indexing/insert.py", line 67, in put
E           a.put(ind, v, mode=mode)
E         File "cupy/core/core.pyx", line 669, in cupy.core.core.ndarray.put
E           cpdef put(self, indices, values, mode='wrap'):
E         File "cupy/core/core.pyx", line 676, in cupy.core.core.ndarray.put
E           return _indexing._ndarray_put(self, indices, values, mode)
E         File "cupy/core/_routines_indexing.pyx", line 166, in cupy.core._routines_indexing._ndarray_put
E           _put_clip_kernel(indices, values, values.size, n, self)
E         File "cupy/core/_kernel.pyx", line 840, in cupy.core._kernel.ElementwiseKernel.__call__
E           kern = self._get_elementwise_kernel(dev_id, arginfos, type_map)
E         File "cupy/core/_kernel.pyx", line 865, in cupy.core._kernel.ElementwiseKernel._get_elementwise_kernel
E           kern = _get_elementwise_kernel(
E         File "cupy/_util.pyx", line 59, in cupy._util.memoize.decorator.ret
E           result = f(*args, **kwargs)
E         File "cupy/core/_kernel.pyx", line 652, in cupy.core._kernel._get_elementwise_kernel
E           return _get_simple_elementwise_kernel(
E         File "cupy/core/_kernel.pyx", line 38, in cupy.core._kernel._get_simple_elementwise_kernel
E           cpdef function.Function _get_simple_elementwise_kernel(
E         File "cupy/core/_kernel.pyx", line 61, in cupy.core._kernel._get_simple_elementwise_kernel
E           module = compile_with_cache(module_code, options)
E         File "cupy/core/core.pyx", line 2021, in cupy.core.core.compile_with_cache
E           return cuda.compile_with_cache(
E         File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.t8hdvgF7FH/cupy/cupy/cuda/compiler.py", line 428, in compile_with_cache
E           return _compile_with_cache_hip(
E         File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.t8hdvgF7FH/cupy/cupy/cuda/compiler.py", line 829, in _compile_with_cache_hip
E           temp_path = tf.name
E         File "/home/kmaeh/.pyenv/versions/3.8.7/lib/python3.8/tempfile.py", line 491, in __exit__
E           result = self.file.__exit__(exc, value, tb)
E       OSError: [Errno 28] No space left on device

/home/kmaeh/.pyenv/versions/3.8.7/lib/python3.8/tempfile.py:491: AssertionError
----------------------------- Captured stdout call -----------------------------
dtype is <class 'numpy.float64'>
________ TestPut_param_42_{mode='clip', n_vals=5, shape=(7,)}.test_put _________

self = <<cupy_tests.indexing_tests.test_insert.TestPut_param_42_{mode='clip', n_vals=5, shape=(7,)} testMethod=test_put>  parameter: {'mode': 'clip', 'n_vals': 5, 'shape': (7,)}>
xp = <module 'cupy' from '/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.t8hdvgF7FH/cupy/cupy/__init__.py'>
dtype = <class 'numpy.float64'>

    @testing.for_all_dtypes()
    @testing.numpy_cupy_array_equal()
    def test_put(self, xp, dtype):
        a = testing.shaped_arange(self.shape, xp, dtype)
        # Take care so that actual indices don't overlap.
        if self.mode == 'raise':
            inds = xp.array([2, -1, 3, 0])
        else:
            inds = xp.array([2, -8, 3, 7])
        vals = testing.shaped_random((self.n_vals,), xp, dtype)
>       xp.put(a, inds, vals, self.mode)

tests/cupy_tests/indexing_tests/test_insert.py:80: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
cupy/_indexing/insert.py:67: in put
    a.put(ind, v, mode=mode)
cupy/core/core.pyx:669: in cupy.core.core.ndarray.put
    cpdef put(self, indices, values, mode='wrap'):
cupy/core/core.pyx:676: in cupy.core.core.ndarray.put
    return _indexing._ndarray_put(self, indices, values, mode)
cupy/core/_routines_indexing.pyx:166: in cupy.core._routines_indexing._ndarray_put
    _put_clip_kernel(indices, values, values.size, n, self)
cupy/core/_kernel.pyx:840: in cupy.core._kernel.ElementwiseKernel.__call__
    kern = self._get_elementwise_kernel(dev_id, arginfos, type_map)
cupy/core/_kernel.pyx:865: in cupy.core._kernel.ElementwiseKernel._get_elementwise_kernel
    kern = _get_elementwise_kernel(
cupy/_util.pyx:59: in cupy._util.memoize.decorator.ret
    result = f(*args, **kwargs)
cupy/core/_kernel.pyx:652: in cupy.core._kernel._get_elementwise_kernel
    return _get_simple_elementwise_kernel(
cupy/core/_kernel.pyx:38: in cupy.core._kernel._get_simple_elementwise_kernel
    cpdef function.Function _get_simple_elementwise_kernel(
cupy/core/_kernel.pyx:61: in cupy.core._kernel._get_simple_elementwise_kernel
    module = compile_with_cache(module_code, options)
cupy/core/core.pyx:2021: in cupy.core.core.compile_with_cache
    return cuda.compile_with_cache(
cupy/cuda/compiler.py:428: in compile_with_cache
    return _compile_with_cache_hip(
cupy/cuda/compiler.py:829: in _compile_with_cache_hip
    temp_path = tf.name
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <tempfile._TemporaryFileWrapper object at 0x7f50101fd580>, exc = None
value = None, tb = None

    def __exit__(self, exc, value, tb):
>       result = self.file.__exit__(exc, value, tb)
E       AssertionError: Only cupy raises error
E       
E       Traceback (most recent call last):
E         File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.t8hdvgF7FH/cupy/cupy/testing/_helper.py", line 47, in _call_func
E           result = impl(self, *args, **kw)
E         File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.t8hdvgF7FH/cupy/tests/cupy_tests/indexing_tests/test_insert.py", line 80, in test_put
E           xp.put(a, inds, vals, self.mode)
E         File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.t8hdvgF7FH/cupy/cupy/_indexing/insert.py", line 67, in put
E           a.put(ind, v, mode=mode)
E         File "cupy/core/core.pyx", line 669, in cupy.core.core.ndarray.put
E           cpdef put(self, indices, values, mode='wrap'):
E         File "cupy/core/core.pyx", line 676, in cupy.core.core.ndarray.put
E           return _indexing._ndarray_put(self, indices, values, mode)
E         File "cupy/core/_routines_indexing.pyx", line 166, in cupy.core._routines_indexing._ndarray_put
E           _put_clip_kernel(indices, values, values.size, n, self)
E         File "cupy/core/_kernel.pyx", line 840, in cupy.core._kernel.ElementwiseKernel.__call__
E           kern = self._get_elementwise_kernel(dev_id, arginfos, type_map)
E         File "cupy/core/_kernel.pyx", line 865, in cupy.core._kernel.ElementwiseKernel._get_elementwise_kernel
E           kern = _get_elementwise_kernel(
E         File "cupy/_util.pyx", line 59, in cupy._util.memoize.decorator.ret
E           result = f(*args, **kwargs)
E         File "cupy/core/_kernel.pyx", line 652, in cupy.core._kernel._get_elementwise_kernel
E           return _get_simple_elementwise_kernel(
E         File "cupy/core/_kernel.pyx", line 38, in cupy.core._kernel._get_simple_elementwise_kernel
E           cpdef function.Function _get_simple_elementwise_kernel(
E         File "cupy/core/_kernel.pyx", line 61, in cupy.core._kernel._get_simple_elementwise_kernel
E           module = compile_with_cache(module_code, options)
E         File "cupy/core/core.pyx", line 2021, in cupy.core.core.compile_with_cache
E           return cuda.compile_with_cache(
E         File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.t8hdvgF7FH/cupy/cupy/cuda/compiler.py", line 428, in compile_with_cache
E           return _compile_with_cache_hip(
E         File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.t8hdvgF7FH/cupy/cupy/cuda/compiler.py", line 829, in _compile_with_cache_hip
E           temp_path = tf.name
E         File "/home/kmaeh/.pyenv/versions/3.8.7/lib/python3.8/tempfile.py", line 491, in __exit__
E           result = self.file.__exit__(exc, value, tb)
E       OSError: [Errno 28] No space left on device

/home/kmaeh/.pyenv/versions/3.8.7/lib/python3.8/tempfile.py:491: AssertionError
----------------------------- Captured stdout call -----------------------------
dtype is <class 'numpy.float64'>
_______ TestPut_param_43_{mode='clip', n_vals=5, shape=(2, 3)}.test_put ________

self = <<cupy_tests.indexing_tests.test_insert.TestPut_param_43_{mode='clip', n_vals=5, shape=(2, 3)} testMethod=test_put>  parameter: {'mode': 'clip', 'n_vals': 5, 'shape': (2, 3)}>
xp = <module 'cupy' from '/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.t8hdvgF7FH/cupy/cupy/__init__.py'>
dtype = <class 'numpy.float64'>

    @testing.for_all_dtypes()
    @testing.numpy_cupy_array_equal()
    def test_put(self, xp, dtype):
        a = testing.shaped_arange(self.shape, xp, dtype)
        # Take care so that actual indices don't overlap.
        if self.mode == 'raise':
            inds = xp.array([2, -1, 3, 0])
        else:
            inds = xp.array([2, -8, 3, 7])
        vals = testing.shaped_random((self.n_vals,), xp, dtype)
>       xp.put(a, inds, vals, self.mode)

tests/cupy_tests/indexing_tests/test_insert.py:80: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
cupy/_indexing/insert.py:67: in put
    a.put(ind, v, mode=mode)
cupy/core/core.pyx:669: in cupy.core.core.ndarray.put
    cpdef put(self, indices, values, mode='wrap'):
cupy/core/core.pyx:676: in cupy.core.core.ndarray.put
    return _indexing._ndarray_put(self, indices, values, mode)
cupy/core/_routines_indexing.pyx:166: in cupy.core._routines_indexing._ndarray_put
    _put_clip_kernel(indices, values, values.size, n, self)
cupy/core/_kernel.pyx:840: in cupy.core._kernel.ElementwiseKernel.__call__
    kern = self._get_elementwise_kernel(dev_id, arginfos, type_map)
cupy/core/_kernel.pyx:865: in cupy.core._kernel.ElementwiseKernel._get_elementwise_kernel
    kern = _get_elementwise_kernel(
cupy/_util.pyx:59: in cupy._util.memoize.decorator.ret
    result = f(*args, **kwargs)
cupy/core/_kernel.pyx:652: in cupy.core._kernel._get_elementwise_kernel
    return _get_simple_elementwise_kernel(
cupy/core/_kernel.pyx:38: in cupy.core._kernel._get_simple_elementwise_kernel
    cpdef function.Function _get_simple_elementwise_kernel(
cupy/core/_kernel.pyx:61: in cupy.core._kernel._get_simple_elementwise_kernel
    module = compile_with_cache(module_code, options)
cupy/core/core.pyx:2021: in cupy.core.core.compile_with_cache
    return cuda.compile_with_cache(
cupy/cuda/compiler.py:428: in compile_with_cache
    return _compile_with_cache_hip(
cupy/cuda/compiler.py:829: in _compile_with_cache_hip
    temp_path = tf.name
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <tempfile._TemporaryFileWrapper object at 0x7f5010f60040>, exc = None
value = None, tb = None

    def __exit__(self, exc, value, tb):
>       result = self.file.__exit__(exc, value, tb)
E       AssertionError: Only cupy raises error
E       
E       Traceback (most recent call last):
E         File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.t8hdvgF7FH/cupy/cupy/testing/_helper.py", line 47, in _call_func
E           result = impl(self, *args, **kw)
E         File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.t8hdvgF7FH/cupy/tests/cupy_tests/indexing_tests/test_insert.py", line 80, in test_put
E           xp.put(a, inds, vals, self.mode)
E         File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.t8hdvgF7FH/cupy/cupy/_indexing/insert.py", line 67, in put
E           a.put(ind, v, mode=mode)
E         File "cupy/core/core.pyx", line 669, in cupy.core.core.ndarray.put
E           cpdef put(self, indices, values, mode='wrap'):
E         File "cupy/core/core.pyx", line 676, in cupy.core.core.ndarray.put
E           return _indexing._ndarray_put(self, indices, values, mode)
E         File "cupy/core/_routines_indexing.pyx", line 166, in cupy.core._routines_indexing._ndarray_put
E           _put_clip_kernel(indices, values, values.size, n, self)
E         File "cupy/core/_kernel.pyx", line 840, in cupy.core._kernel.ElementwiseKernel.__call__
E           kern = self._get_elementwise_kernel(dev_id, arginfos, type_map)
E         File "cupy/core/_kernel.pyx", line 865, in cupy.core._kernel.ElementwiseKernel._get_elementwise_kernel
E           kern = _get_elementwise_kernel(
E         File "cupy/_util.pyx", line 59, in cupy._util.memoize.decorator.ret
E           result = f(*args, **kwargs)
E         File "cupy/core/_kernel.pyx", line 652, in cupy.core._kernel._get_elementwise_kernel
E           return _get_simple_elementwise_kernel(
E         File "cupy/core/_kernel.pyx", line 38, in cupy.core._kernel._get_simple_elementwise_kernel
E           cpdef function.Function _get_simple_elementwise_kernel(
E         File "cupy/core/_kernel.pyx", line 61, in cupy.core._kernel._get_simple_elementwise_kernel
E           module = compile_with_cache(module_code, options)
E         File "cupy/core/core.pyx", line 2021, in cupy.core.core.compile_with_cache
E           return cuda.compile_with_cache(
E         File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.t8hdvgF7FH/cupy/cupy/cuda/compiler.py", line 428, in compile_with_cache
E           return _compile_with_cache_hip(
E         File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.t8hdvgF7FH/cupy/cupy/cuda/compiler.py", line 829, in _compile_with_cache_hip
E           temp_path = tf.name
E         File "/home/kmaeh/.pyenv/versions/3.8.7/lib/python3.8/tempfile.py", line 491, in __exit__
E           result = self.file.__exit__(exc, value, tb)
E       OSError: [Errno 28] No space left on device

/home/kmaeh/.pyenv/versions/3.8.7/lib/python3.8/tempfile.py:491: AssertionError
----------------------------- Captured stdout call -----------------------------
dtype is <class 'numpy.float64'>
______ TestPut_param_44_{mode='clip', n_vals=5, shape=(4, 3, 2)}.test_put ______

self = <<cupy_tests.indexing_tests.test_insert.TestPut_param_44_{mode='clip', n_vals=5, shape=(4, 3, 2)} testMethod=test_put>  parameter: {'mode': 'clip', 'n_vals': 5, 'shape': (4, 3, 2)}>
xp = <module 'cupy' from '/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.t8hdvgF7FH/cupy/cupy/__init__.py'>
dtype = <class 'numpy.float64'>

    @testing.for_all_dtypes()
    @testing.numpy_cupy_array_equal()
    def test_put(self, xp, dtype):
        a = testing.shaped_arange(self.shape, xp, dtype)
        # Take care so that actual indices don't overlap.
        if self.mode == 'raise':
            inds = xp.array([2, -1, 3, 0])
        else:
            inds = xp.array([2, -8, 3, 7])
        vals = testing.shaped_random((self.n_vals,), xp, dtype)
>       xp.put(a, inds, vals, self.mode)

tests/cupy_tests/indexing_tests/test_insert.py:80: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
cupy/_indexing/insert.py:67: in put
    a.put(ind, v, mode=mode)
cupy/core/core.pyx:669: in cupy.core.core.ndarray.put
    cpdef put(self, indices, values, mode='wrap'):
cupy/core/core.pyx:676: in cupy.core.core.ndarray.put
    return _indexing._ndarray_put(self, indices, values, mode)
cupy/core/_routines_indexing.pyx:166: in cupy.core._routines_indexing._ndarray_put
    _put_clip_kernel(indices, values, values.size, n, self)
cupy/core/_kernel.pyx:840: in cupy.core._kernel.ElementwiseKernel.__call__
    kern = self._get_elementwise_kernel(dev_id, arginfos, type_map)
cupy/core/_kernel.pyx:865: in cupy.core._kernel.ElementwiseKernel._get_elementwise_kernel
    kern = _get_elementwise_kernel(
cupy/_util.pyx:59: in cupy._util.memoize.decorator.ret
    result = f(*args, **kwargs)
cupy/core/_kernel.pyx:652: in cupy.core._kernel._get_elementwise_kernel
    return _get_simple_elementwise_kernel(
cupy/core/_kernel.pyx:38: in cupy.core._kernel._get_simple_elementwise_kernel
    cpdef function.Function _get_simple_elementwise_kernel(
cupy/core/_kernel.pyx:61: in cupy.core._kernel._get_simple_elementwise_kernel
    module = compile_with_cache(module_code, options)
cupy/core/core.pyx:2021: in cupy.core.core.compile_with_cache
    return cuda.compile_with_cache(
cupy/cuda/compiler.py:428: in compile_with_cache
    return _compile_with_cache_hip(
cupy/cuda/compiler.py:829: in _compile_with_cache_hip
    temp_path = tf.name
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <tempfile._TemporaryFileWrapper object at 0x7f50108e7a30>, exc = None
value = None, tb = None

    def __exit__(self, exc, value, tb):
>       result = self.file.__exit__(exc, value, tb)
E       AssertionError: Only cupy raises error
E       
E       Traceback (most recent call last):
E         File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.t8hdvgF7FH/cupy/cupy/testing/_helper.py", line 47, in _call_func
E           result = impl(self, *args, **kw)
E         File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.t8hdvgF7FH/cupy/tests/cupy_tests/indexing_tests/test_insert.py", line 80, in test_put
E           xp.put(a, inds, vals, self.mode)
E         File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.t8hdvgF7FH/cupy/cupy/_indexing/insert.py", line 67, in put
E           a.put(ind, v, mode=mode)
E         File "cupy/core/core.pyx", line 669, in cupy.core.core.ndarray.put
E           cpdef put(self, indices, values, mode='wrap'):
E         File "cupy/core/core.pyx", line 676, in cupy.core.core.ndarray.put
E           return _indexing._ndarray_put(self, indices, values, mode)
E         File "cupy/core/_routines_indexing.pyx", line 166, in cupy.core._routines_indexing._ndarray_put
E           _put_clip_kernel(indices, values, values.size, n, self)
E         File "cupy/core/_kernel.pyx", line 840, in cupy.core._kernel.ElementwiseKernel.__call__
E           kern = self._get_elementwise_kernel(dev_id, arginfos, type_map)
E         File "cupy/core/_kernel.pyx", line 865, in cupy.core._kernel.ElementwiseKernel._get_elementwise_kernel
E           kern = _get_elementwise_kernel(
E         File "cupy/_util.pyx", line 59, in cupy._util.memoize.decorator.ret
E           result = f(*args, **kwargs)
E         File "cupy/core/_kernel.pyx", line 652, in cupy.core._kernel._get_elementwise_kernel
E           return _get_simple_elementwise_kernel(
E         File "cupy/core/_kernel.pyx", line 38, in cupy.core._kernel._get_simple_elementwise_kernel
E           cpdef function.Function _get_simple_elementwise_kernel(
E         File "cupy/core/_kernel.pyx", line 61, in cupy.core._kernel._get_simple_elementwise_kernel
E           module = compile_with_cache(module_code, options)
E         File "cupy/core/core.pyx", line 2021, in cupy.core.core.compile_with_cache
E           return cuda.compile_with_cache(
E         File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.t8hdvgF7FH/cupy/cupy/cuda/compiler.py", line 428, in compile_with_cache
E           return _compile_with_cache_hip(
E         File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.t8hdvgF7FH/cupy/cupy/cuda/compiler.py", line 829, in _compile_with_cache_hip
E           temp_path = tf.name
E         File "/home/kmaeh/.pyenv/versions/3.8.7/lib/python3.8/tempfile.py", line 491, in __exit__
E           result = self.file.__exit__(exc, value, tb)
E       OSError: [Errno 28] No space left on device

/home/kmaeh/.pyenv/versions/3.8.7/lib/python3.8/tempfile.py:491: AssertionError
----------------------------- Captured stdout call -----------------------------
dtype is <class 'numpy.float64'>
__________ TestPutScalars_param_0_{shape=(7,)}.test_put_index_scalar ___________

self = <<cupy_tests.indexing_tests.test_insert.TestPutScalars_param_0_{shape=(7,)} testMethod=test_put_index_scalar>  parameter: {'shape': (7,)}>
xp = <module 'cupy' from '/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.t8hdvgF7FH/cupy/cupy/__init__.py'>

    @testing.numpy_cupy_array_equal()
    def test_put_index_scalar(self, xp):
        dtype = cupy.float32
        a = testing.shaped_arange(self.shape, xp, dtype)
        inds = 4
        vals = testing.shaped_random((4,), xp, dtype)
>       xp.put(a, inds, vals)

tests/cupy_tests/indexing_tests/test_insert.py:96: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
cupy/_indexing/insert.py:67: in put
    a.put(ind, v, mode=mode)
cupy/core/core.pyx:669: in cupy.core.core.ndarray.put
    cpdef put(self, indices, values, mode='wrap'):
cupy/core/core.pyx:676: in cupy.core.core.ndarray.put
    return _indexing._ndarray_put(self, indices, values, mode)
cupy/core/_routines_indexing.pyx:164: in cupy.core._routines_indexing._ndarray_put
    _put_wrap_kernel(indices, values, values.size, n, self)
cupy/core/_kernel.pyx:840: in cupy.core._kernel.ElementwiseKernel.__call__
    kern = self._get_elementwise_kernel(dev_id, arginfos, type_map)
cupy/core/_kernel.pyx:865: in cupy.core._kernel.ElementwiseKernel._get_elementwise_kernel
    kern = _get_elementwise_kernel(
cupy/_util.pyx:59: in cupy._util.memoize.decorator.ret
    result = f(*args, **kwargs)
cupy/core/_kernel.pyx:652: in cupy.core._kernel._get_elementwise_kernel
    return _get_simple_elementwise_kernel(
cupy/core/_kernel.pyx:38: in cupy.core._kernel._get_simple_elementwise_kernel
    cpdef function.Function _get_simple_elementwise_kernel(
cupy/core/_kernel.pyx:61: in cupy.core._kernel._get_simple_elementwise_kernel
    module = compile_with_cache(module_code, options)
cupy/core/core.pyx:2021: in cupy.core.core.compile_with_cache
    return cuda.compile_with_cache(
cupy/cuda/compiler.py:428: in compile_with_cache
    return _compile_with_cache_hip(
cupy/cuda/compiler.py:829: in _compile_with_cache_hip
    temp_path = tf.name
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <tempfile._TemporaryFileWrapper object at 0x7f5010844c10>, exc = None
value = None, tb = None

    def __exit__(self, exc, value, tb):
>       result = self.file.__exit__(exc, value, tb)
E       AssertionError: Only cupy raises error
E       
E       Traceback (most recent call last):
E         File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.t8hdvgF7FH/cupy/cupy/testing/_helper.py", line 47, in _call_func
E           result = impl(self, *args, **kw)
E         File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.t8hdvgF7FH/cupy/tests/cupy_tests/indexing_tests/test_insert.py", line 96, in test_put_index_scalar
E           xp.put(a, inds, vals)
E         File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.t8hdvgF7FH/cupy/cupy/_indexing/insert.py", line 67, in put
E           a.put(ind, v, mode=mode)
E         File "cupy/core/core.pyx", line 669, in cupy.core.core.ndarray.put
E           cpdef put(self, indices, values, mode='wrap'):
E         File "cupy/core/core.pyx", line 676, in cupy.core.core.ndarray.put
E           return _indexing._ndarray_put(self, indices, values, mode)
E         File "cupy/core/_routines_indexing.pyx", line 164, in cupy.core._routines_indexing._ndarray_put
E           _put_wrap_kernel(indices, values, values.size, n, self)
E         File "cupy/core/_kernel.pyx", line 840, in cupy.core._kernel.ElementwiseKernel.__call__
E           kern = self._get_elementwise_kernel(dev_id, arginfos, type_map)
E         File "cupy/core/_kernel.pyx", line 865, in cupy.core._kernel.ElementwiseKernel._get_elementwise_kernel
E           kern = _get_elementwise_kernel(
E         File "cupy/_util.pyx", line 59, in cupy._util.memoize.decorator.ret
E           result = f(*args, **kwargs)
E         File "cupy/core/_kernel.pyx", line 652, in cupy.core._kernel._get_elementwise_kernel
E           return _get_simple_elementwise_kernel(
E         File "cupy/core/_kernel.pyx", line 38, in cupy.core._kernel._get_simple_elementwise_kernel
E           cpdef function.Function _get_simple_elementwise_kernel(
E         File "cupy/core/_kernel.pyx", line 61, in cupy.core._kernel._get_simple_elementwise_kernel
E           module = compile_with_cache(module_code, options)
E         File "cupy/core/core.pyx", line 2021, in cupy.core.core.compile_with_cache
E           return cuda.compile_with_cache(
E         File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.t8hdvgF7FH/cupy/cupy/cuda/compiler.py", line 428, in compile_with_cache
E           return _compile_with_cache_hip(
E         File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.t8hdvgF7FH/cupy/cupy/cuda/compiler.py", line 829, in _compile_with_cache_hip
E           temp_path = tf.name
E         File "/home/kmaeh/.pyenv/versions/3.8.7/lib/python3.8/tempfile.py", line 491, in __exit__
E           result = self.file.__exit__(exc, value, tb)
E       OSError: [Errno 28] No space left on device

/home/kmaeh/.pyenv/versions/3.8.7/lib/python3.8/tempfile.py:491: AssertionError
__________ TestPutScalars_param_0_{shape=(7,)}.test_put_values_scalar __________

self = <<cupy_tests.indexing_tests.test_insert.TestPutScalars_param_0_{shape=(7,)} testMethod=test_put_values_scalar>  parameter: {'shape': (7,)}>
xp = <module 'cupy' from '/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.t8hdvgF7FH/cupy/cupy/__init__.py'>

    @testing.numpy_cupy_array_equal()
    def test_put_values_scalar(self, xp):
        dtype = cupy.float32
        a = testing.shaped_arange(self.shape, xp, dtype)
        # Take care so that actual indices don't overlap.
        inds = xp.array([2, 3, 5])
        vals = 3.0
>       xp.put(a, inds, vals)

tests/cupy_tests/indexing_tests/test_insert.py:106: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
cupy/_indexing/insert.py:67: in put
    a.put(ind, v, mode=mode)
cupy/core/core.pyx:669: in cupy.core.core.ndarray.put
    cpdef put(self, indices, values, mode='wrap'):
cupy/core/core.pyx:676: in cupy.core.core.ndarray.put
    return _indexing._ndarray_put(self, indices, values, mode)
cupy/core/_routines_indexing.pyx:164: in cupy.core._routines_indexing._ndarray_put
    _put_wrap_kernel(indices, values, values.size, n, self)
cupy/core/_kernel.pyx:840: in cupy.core._kernel.ElementwiseKernel.__call__
    kern = self._get_elementwise_kernel(dev_id, arginfos, type_map)
cupy/core/_kernel.pyx:865: in cupy.core._kernel.ElementwiseKernel._get_elementwise_kernel
    kern = _get_elementwise_kernel(
cupy/_util.pyx:59: in cupy._util.memoize.decorator.ret
    result = f(*args, **kwargs)
cupy/core/_kernel.pyx:652: in cupy.core._kernel._get_elementwise_kernel
    return _get_simple_elementwise_kernel(
cupy/core/_kernel.pyx:38: in cupy.core._kernel._get_simple_elementwise_kernel
    cpdef function.Function _get_simple_elementwise_kernel(
cupy/core/_kernel.pyx:61: in cupy.core._kernel._get_simple_elementwise_kernel
    module = compile_with_cache(module_code, options)
cupy/core/core.pyx:2021: in cupy.core.core.compile_with_cache
    return cuda.compile_with_cache(
cupy/cuda/compiler.py:428: in compile_with_cache
    return _compile_with_cache_hip(
cupy/cuda/compiler.py:829: in _compile_with_cache_hip
    temp_path = tf.name
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <tempfile._TemporaryFileWrapper object at 0x7f50109d7f70>, exc = None
value = None, tb = None

    def __exit__(self, exc, value, tb):
>       result = self.file.__exit__(exc, value, tb)
E       AssertionError: Only cupy raises error
E       
E       Traceback (most recent call last):
E         File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.t8hdvgF7FH/cupy/cupy/testing/_helper.py", line 47, in _call_func
E           result = impl(self, *args, **kw)
E         File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.t8hdvgF7FH/cupy/tests/cupy_tests/indexing_tests/test_insert.py", line 106, in test_put_values_scalar
E           xp.put(a, inds, vals)
E         File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.t8hdvgF7FH/cupy/cupy/_indexing/insert.py", line 67, in put
E           a.put(ind, v, mode=mode)
E         File "cupy/core/core.pyx", line 669, in cupy.core.core.ndarray.put
E           cpdef put(self, indices, values, mode='wrap'):
E         File "cupy/core/core.pyx", line 676, in cupy.core.core.ndarray.put
E           return _indexing._ndarray_put(self, indices, values, mode)
E         File "cupy/core/_routines_indexing.pyx", line 164, in cupy.core._routines_indexing._ndarray_put
E           _put_wrap_kernel(indices, values, values.size, n, self)
E         File "cupy/core/_kernel.pyx", line 840, in cupy.core._kernel.ElementwiseKernel.__call__
E           kern = self._get_elementwise_kernel(dev_id, arginfos, type_map)
E         File "cupy/core/_kernel.pyx", line 865, in cupy.core._kernel.ElementwiseKernel._get_elementwise_kernel
E           kern = _get_elementwise_kernel(
E         File "cupy/_util.pyx", line 59, in cupy._util.memoize.decorator.ret
E           result = f(*args, **kwargs)
E         File "cupy/core/_kernel.pyx", line 652, in cupy.core._kernel._get_elementwise_kernel
E           return _get_simple_elementwise_kernel(
E         File "cupy/core/_kernel.pyx", line 38, in cupy.core._kernel._get_simple_elementwise_kernel
E           cpdef function.Function _get_simple_elementwise_kernel(
E         File "cupy/core/_kernel.pyx", line 61, in cupy.core._kernel._get_simple_elementwise_kernel
E           module = compile_with_cache(module_code, options)
E         File "cupy/core/core.pyx", line 2021, in cupy.core.core.compile_with_cache
E           return cuda.compile_with_cache(
E         File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.t8hdvgF7FH/cupy/cupy/cuda/compiler.py", line 428, in compile_with_cache
E           return _compile_with_cache_hip(
E         File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.t8hdvgF7FH/cupy/cupy/cuda/compiler.py", line 829, in _compile_with_cache_hip
E           temp_path = tf.name
E         File "/home/kmaeh/.pyenv/versions/3.8.7/lib/python3.8/tempfile.py", line 491, in __exit__
E           result = self.file.__exit__(exc, value, tb)
E       OSError: [Errno 28] No space left on device

/home/kmaeh/.pyenv/versions/3.8.7/lib/python3.8/tempfile.py:491: AssertionError
_________ TestPutScalars_param_1_{shape=(2, 3)}.test_put_index_scalar __________

self = <<cupy_tests.indexing_tests.test_insert.TestPutScalars_param_1_{shape=(2, 3)} testMethod=test_put_index_scalar>  parameter: {'shape': (2, 3)}>
xp = <module 'cupy' from '/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.t8hdvgF7FH/cupy/cupy/__init__.py'>

    @testing.numpy_cupy_array_equal()
    def test_put_index_scalar(self, xp):
        dtype = cupy.float32
        a = testing.shaped_arange(self.shape, xp, dtype)
        inds = 4
        vals = testing.shaped_random((4,), xp, dtype)
>       xp.put(a, inds, vals)

tests/cupy_tests/indexing_tests/test_insert.py:96: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
cupy/_indexing/insert.py:67: in put
    a.put(ind, v, mode=mode)
cupy/core/core.pyx:669: in cupy.core.core.ndarray.put
    cpdef put(self, indices, values, mode='wrap'):
cupy/core/core.pyx:676: in cupy.core.core.ndarray.put
    return _indexing._ndarray_put(self, indices, values, mode)
cupy/core/_routines_indexing.pyx:164: in cupy.core._routines_indexing._ndarray_put
    _put_wrap_kernel(indices, values, values.size, n, self)
cupy/core/_kernel.pyx:840: in cupy.core._kernel.ElementwiseKernel.__call__
    kern = self._get_elementwise_kernel(dev_id, arginfos, type_map)
cupy/core/_kernel.pyx:865: in cupy.core._kernel.ElementwiseKernel._get_elementwise_kernel
    kern = _get_elementwise_kernel(
cupy/_util.pyx:59: in cupy._util.memoize.decorator.ret
    result = f(*args, **kwargs)
cupy/core/_kernel.pyx:652: in cupy.core._kernel._get_elementwise_kernel
    return _get_simple_elementwise_kernel(
cupy/core/_kernel.pyx:38: in cupy.core._kernel._get_simple_elementwise_kernel
    cpdef function.Function _get_simple_elementwise_kernel(
cupy/core/_kernel.pyx:61: in cupy.core._kernel._get_simple_elementwise_kernel
    module = compile_with_cache(module_code, options)
cupy/core/core.pyx:2021: in cupy.core.core.compile_with_cache
    return cuda.compile_with_cache(
cupy/cuda/compiler.py:428: in compile_with_cache
    return _compile_with_cache_hip(
cupy/cuda/compiler.py:829: in _compile_with_cache_hip
    temp_path = tf.name
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <tempfile._TemporaryFileWrapper object at 0x7f5010912310>, exc = None
value = None, tb = None

    def __exit__(self, exc, value, tb):
>       result = self.file.__exit__(exc, value, tb)
E       AssertionError: Only cupy raises error
E       
E       Traceback (most recent call last):
E         File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.t8hdvgF7FH/cupy/cupy/testing/_helper.py", line 47, in _call_func
E           result = impl(self, *args, **kw)
E         File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.t8hdvgF7FH/cupy/tests/cupy_tests/indexing_tests/test_insert.py", line 96, in test_put_index_scalar
E           xp.put(a, inds, vals)
E         File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.t8hdvgF7FH/cupy/cupy/_indexing/insert.py", line 67, in put
E           a.put(ind, v, mode=mode)
E         File "cupy/core/core.pyx", line 669, in cupy.core.core.ndarray.put
E           cpdef put(self, indices, values, mode='wrap'):
E         File "cupy/core/core.pyx", line 676, in cupy.core.core.ndarray.put
E           return _indexing._ndarray_put(self, indices, values, mode)
E         File "cupy/core/_routines_indexing.pyx", line 164, in cupy.core._routines_indexing._ndarray_put
E           _put_wrap_kernel(indices, values, values.size, n, self)
E         File "cupy/core/_kernel.pyx", line 840, in cupy.core._kernel.ElementwiseKernel.__call__
E           kern = self._get_elementwise_kernel(dev_id, arginfos, type_map)
E         File "cupy/core/_kernel.pyx", line 865, in cupy.core._kernel.ElementwiseKernel._get_elementwise_kernel
E           kern = _get_elementwise_kernel(
E         File "cupy/_util.pyx", line 59, in cupy._util.memoize.decorator.ret
E           result = f(*args, **kwargs)
E         File "cupy/core/_kernel.pyx", line 652, in cupy.core._kernel._get_elementwise_kernel
E           return _get_simple_elementwise_kernel(
E         File "cupy/core/_kernel.pyx", line 38, in cupy.core._kernel._get_simple_elementwise_kernel
E           cpdef function.Function _get_simple_elementwise_kernel(
E         File "cupy/core/_kernel.pyx", line 61, in cupy.core._kernel._get_simple_elementwise_kernel
E           module = compile_with_cache(module_code, options)
E         File "cupy/core/core.pyx", line 2021, in cupy.core.core.compile_with_cache
E           return cuda.compile_with_cache(
E         File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.t8hdvgF7FH/cupy/cupy/cuda/compiler.py", line 428, in compile_with_cache
E           return _compile_with_cache_hip(
E         File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.t8hdvgF7FH/cupy/cupy/cuda/compiler.py", line 829, in _compile_with_cache_hip
E           temp_path = tf.name
E         File "/home/kmaeh/.pyenv/versions/3.8.7/lib/python3.8/tempfile.py", line 491, in __exit__
E           result = self.file.__exit__(exc, value, tb)
E       OSError: [Errno 28] No space left on device

/home/kmaeh/.pyenv/versions/3.8.7/lib/python3.8/tempfile.py:491: AssertionError
_________ TestPutScalars_param_1_{shape=(2, 3)}.test_put_values_scalar _________

self = <<cupy_tests.indexing_tests.test_insert.TestPutScalars_param_1_{shape=(2, 3)} testMethod=test_put_values_scalar>  parameter: {'shape': (2, 3)}>
xp = <module 'cupy' from '/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.t8hdvgF7FH/cupy/cupy/__init__.py'>

    @testing.numpy_cupy_array_equal()
    def test_put_values_scalar(self, xp):
        dtype = cupy.float32
        a = testing.shaped_arange(self.shape, xp, dtype)
        # Take care so that actual indices don't overlap.
        inds = xp.array([2, 3, 5])
        vals = 3.0
>       xp.put(a, inds, vals)

tests/cupy_tests/indexing_tests/test_insert.py:106: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
cupy/_indexing/insert.py:67: in put
    a.put(ind, v, mode=mode)
cupy/core/core.pyx:669: in cupy.core.core.ndarray.put
    cpdef put(self, indices, values, mode='wrap'):
cupy/core/core.pyx:676: in cupy.core.core.ndarray.put
    return _indexing._ndarray_put(self, indices, values, mode)
cupy/core/_routines_indexing.pyx:164: in cupy.core._routines_indexing._ndarray_put
    _put_wrap_kernel(indices, values, values.size, n, self)
cupy/core/_kernel.pyx:840: in cupy.core._kernel.ElementwiseKernel.__call__
    kern = self._get_elementwise_kernel(dev_id, arginfos, type_map)
cupy/core/_kernel.pyx:865: in cupy.core._kernel.ElementwiseKernel._get_elementwise_kernel
    kern = _get_elementwise_kernel(
cupy/_util.pyx:59: in cupy._util.memoize.decorator.ret
    result = f(*args, **kwargs)
cupy/core/_kernel.pyx:652: in cupy.core._kernel._get_elementwise_kernel
    return _get_simple_elementwise_kernel(
cupy/core/_kernel.pyx:38: in cupy.core._kernel._get_simple_elementwise_kernel
    cpdef function.Function _get_simple_elementwise_kernel(
cupy/core/_kernel.pyx:61: in cupy.core._kernel._get_simple_elementwise_kernel
    module = compile_with_cache(module_code, options)
cupy/core/core.pyx:2021: in cupy.core.core.compile_with_cache
    return cuda.compile_with_cache(
cupy/cuda/compiler.py:428: in compile_with_cache
    return _compile_with_cache_hip(
cupy/cuda/compiler.py:829: in _compile_with_cache_hip
    temp_path = tf.name
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <tempfile._TemporaryFileWrapper object at 0x7f5010e1c6d0>, exc = None
value = None, tb = None

    def __exit__(self, exc, value, tb):
>       result = self.file.__exit__(exc, value, tb)
E       AssertionError: Only cupy raises error
E       
E       Traceback (most recent call last):
E         File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.t8hdvgF7FH/cupy/cupy/testing/_helper.py", line 47, in _call_func
E           result = impl(self, *args, **kw)
E         File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.t8hdvgF7FH/cupy/tests/cupy_tests/indexing_tests/test_insert.py", line 106, in test_put_values_scalar
E           xp.put(a, inds, vals)
E         File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.t8hdvgF7FH/cupy/cupy/_indexing/insert.py", line 67, in put
E           a.put(ind, v, mode=mode)
E         File "cupy/core/core.pyx", line 669, in cupy.core.core.ndarray.put
E           cpdef put(self, indices, values, mode='wrap'):
E         File "cupy/core/core.pyx", line 676, in cupy.core.core.ndarray.put
E           return _indexing._ndarray_put(self, indices, values, mode)
E         File "cupy/core/_routines_indexing.pyx", line 164, in cupy.core._routines_indexing._ndarray_put
E           _put_wrap_kernel(indices, values, values.size, n, self)
E         File "cupy/core/_kernel.pyx", line 840, in cupy.core._kernel.ElementwiseKernel.__call__
E           kern = self._get_elementwise_kernel(dev_id, arginfos, type_map)
E         File "cupy/core/_kernel.pyx", line 865, in cupy.core._kernel.ElementwiseKernel._get_elementwise_kernel
E           kern = _get_elementwise_kernel(
E         File "cupy/_util.pyx", line 59, in cupy._util.memoize.decorator.ret
E           result = f(*args, **kwargs)
E         File "cupy/core/_kernel.pyx", line 652, in cupy.core._kernel._get_elementwise_kernel
E           return _get_simple_elementwise_kernel(
E         File "cupy/core/_kernel.pyx", line 38, in cupy.core._kernel._get_simple_elementwise_kernel
E           cpdef function.Function _get_simple_elementwise_kernel(
E         File "cupy/core/_kernel.pyx", line 61, in cupy.core._kernel._get_simple_elementwise_kernel
E           module = compile_with_cache(module_code, options)
E         File "cupy/core/core.pyx", line 2021, in cupy.core.core.compile_with_cache
E           return cuda.compile_with_cache(
E         File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.t8hdvgF7FH/cupy/cupy/cuda/compiler.py", line 428, in compile_with_cache
E           return _compile_with_cache_hip(
E         File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.t8hdvgF7FH/cupy/cupy/cuda/compiler.py", line 829, in _compile_with_cache_hip
E           temp_path = tf.name
E         File "/home/kmaeh/.pyenv/versions/3.8.7/lib/python3.8/tempfile.py", line 491, in __exit__
E           result = self.file.__exit__(exc, value, tb)
E       OSError: [Errno 28] No space left on device

/home/kmaeh/.pyenv/versions/3.8.7/lib/python3.8/tempfile.py:491: AssertionError
________ TestPutScalars_param_2_{shape=(4, 3, 2)}.test_put_index_scalar ________

self = <<cupy_tests.indexing_tests.test_insert.TestPutScalars_param_2_{shape=(4, 3, 2)} testMethod=test_put_index_scalar>  parameter: {'shape': (4, 3, 2)}>
xp = <module 'cupy' from '/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.t8hdvgF7FH/cupy/cupy/__init__.py'>

    @testing.numpy_cupy_array_equal()
    def test_put_index_scalar(self, xp):
        dtype = cupy.float32
        a = testing.shaped_arange(self.shape, xp, dtype)
        inds = 4
        vals = testing.shaped_random((4,), xp, dtype)
>       xp.put(a, inds, vals)

tests/cupy_tests/indexing_tests/test_insert.py:96: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
cupy/_indexing/insert.py:67: in put
    a.put(ind, v, mode=mode)
cupy/core/core.pyx:669: in cupy.core.core.ndarray.put
    cpdef put(self, indices, values, mode='wrap'):
cupy/core/core.pyx:676: in cupy.core.core.ndarray.put
    return _indexing._ndarray_put(self, indices, values, mode)
cupy/core/_routines_indexing.pyx:164: in cupy.core._routines_indexing._ndarray_put
    _put_wrap_kernel(indices, values, values.size, n, self)
cupy/core/_kernel.pyx:840: in cupy.core._kernel.ElementwiseKernel.__call__
    kern = self._get_elementwise_kernel(dev_id, arginfos, type_map)
cupy/core/_kernel.pyx:865: in cupy.core._kernel.ElementwiseKernel._get_elementwise_kernel
    kern = _get_elementwise_kernel(
cupy/_util.pyx:59: in cupy._util.memoize.decorator.ret
    result = f(*args, **kwargs)
cupy/core/_kernel.pyx:652: in cupy.core._kernel._get_elementwise_kernel
    return _get_simple_elementwise_kernel(
cupy/core/_kernel.pyx:38: in cupy.core._kernel._get_simple_elementwise_kernel
    cpdef function.Function _get_simple_elementwise_kernel(
cupy/core/_kernel.pyx:61: in cupy.core._kernel._get_simple_elementwise_kernel
    module = compile_with_cache(module_code, options)
cupy/core/core.pyx:2021: in cupy.core.core.compile_with_cache
    return cuda.compile_with_cache(
cupy/cuda/compiler.py:428: in compile_with_cache
    return _compile_with_cache_hip(
cupy/cuda/compiler.py:829: in _compile_with_cache_hip
    temp_path = tf.name
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <tempfile._TemporaryFileWrapper object at 0x7f5010e19ee0>, exc = None
value = None, tb = None

    def __exit__(self, exc, value, tb):
>       result = self.file.__exit__(exc, value, tb)
E       AssertionError: Only cupy raises error
E       
E       Traceback (most recent call last):
E         File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.t8hdvgF7FH/cupy/cupy/testing/_helper.py", line 47, in _call_func
E           result = impl(self, *args, **kw)
E         File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.t8hdvgF7FH/cupy/tests/cupy_tests/indexing_tests/test_insert.py", line 96, in test_put_index_scalar
E           xp.put(a, inds, vals)
E         File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.t8hdvgF7FH/cupy/cupy/_indexing/insert.py", line 67, in put
E           a.put(ind, v, mode=mode)
E         File "cupy/core/core.pyx", line 669, in cupy.core.core.ndarray.put
E           cpdef put(self, indices, values, mode='wrap'):
E         File "cupy/core/core.pyx", line 676, in cupy.core.core.ndarray.put
E           return _indexing._ndarray_put(self, indices, values, mode)
E         File "cupy/core/_routines_indexing.pyx", line 164, in cupy.core._routines_indexing._ndarray_put
E           _put_wrap_kernel(indices, values, values.size, n, self)
E         File "cupy/core/_kernel.pyx", line 840, in cupy.core._kernel.ElementwiseKernel.__call__
E           kern = self._get_elementwise_kernel(dev_id, arginfos, type_map)
E         File "cupy/core/_kernel.pyx", line 865, in cupy.core._kernel.ElementwiseKernel._get_elementwise_kernel
E           kern = _get_elementwise_kernel(
E         File "cupy/_util.pyx", line 59, in cupy._util.memoize.decorator.ret
E           result = f(*args, **kwargs)
E         File "cupy/core/_kernel.pyx", line 652, in cupy.core._kernel._get_elementwise_kernel
E           return _get_simple_elementwise_kernel(
E         File "cupy/core/_kernel.pyx", line 38, in cupy.core._kernel._get_simple_elementwise_kernel
E           cpdef function.Function _get_simple_elementwise_kernel(
E         File "cupy/core/_kernel.pyx", line 61, in cupy.core._kernel._get_simple_elementwise_kernel
E           module = compile_with_cache(module_code, options)
E         File "cupy/core/core.pyx", line 2021, in cupy.core.core.compile_with_cache
E           return cuda.compile_with_cache(
E         File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.t8hdvgF7FH/cupy/cupy/cuda/compiler.py", line 428, in compile_with_cache
E           return _compile_with_cache_hip(
E         File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.t8hdvgF7FH/cupy/cupy/cuda/compiler.py", line 829, in _compile_with_cache_hip
E           temp_path = tf.name
E         File "/home/kmaeh/.pyenv/versions/3.8.7/lib/python3.8/tempfile.py", line 491, in __exit__
E           result = self.file.__exit__(exc, value, tb)
E       OSError: [Errno 28] No space left on device

/home/kmaeh/.pyenv/versions/3.8.7/lib/python3.8/tempfile.py:491: AssertionError
_______ TestPutScalars_param_2_{shape=(4, 3, 2)}.test_put_values_scalar ________

self = <<cupy_tests.indexing_tests.test_insert.TestPutScalars_param_2_{shape=(4, 3, 2)} testMethod=test_put_values_scalar>  parameter: {'shape': (4, 3, 2)}>
xp = <module 'cupy' from '/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.t8hdvgF7FH/cupy/cupy/__init__.py'>

    @testing.numpy_cupy_array_equal()
    def test_put_values_scalar(self, xp):
        dtype = cupy.float32
        a = testing.shaped_arange(self.shape, xp, dtype)
        # Take care so that actual indices don't overlap.
        inds = xp.array([2, 3, 5])
        vals = 3.0
>       xp.put(a, inds, vals)

tests/cupy_tests/indexing_tests/test_insert.py:106: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
cupy/_indexing/insert.py:67: in put
    a.put(ind, v, mode=mode)
cupy/core/core.pyx:669: in cupy.core.core.ndarray.put
    cpdef put(self, indices, values, mode='wrap'):
cupy/core/core.pyx:676: in cupy.core.core.ndarray.put
    return _indexing._ndarray_put(self, indices, values, mode)
cupy/core/_routines_indexing.pyx:164: in cupy.core._routines_indexing._ndarray_put
    _put_wrap_kernel(indices, values, values.size, n, self)
cupy/core/_kernel.pyx:840: in cupy.core._kernel.ElementwiseKernel.__call__
    kern = self._get_elementwise_kernel(dev_id, arginfos, type_map)
cupy/core/_kernel.pyx:865: in cupy.core._kernel.ElementwiseKernel._get_elementwise_kernel
    kern = _get_elementwise_kernel(
cupy/_util.pyx:59: in cupy._util.memoize.decorator.ret
    result = f(*args, **kwargs)
cupy/core/_kernel.pyx:652: in cupy.core._kernel._get_elementwise_kernel
    return _get_simple_elementwise_kernel(
cupy/core/_kernel.pyx:38: in cupy.core._kernel._get_simple_elementwise_kernel
    cpdef function.Function _get_simple_elementwise_kernel(
cupy/core/_kernel.pyx:61: in cupy.core._kernel._get_simple_elementwise_kernel
    module = compile_with_cache(module_code, options)
cupy/core/core.pyx:2021: in cupy.core.core.compile_with_cache
    return cuda.compile_with_cache(
cupy/cuda/compiler.py:428: in compile_with_cache
    return _compile_with_cache_hip(
cupy/cuda/compiler.py:829: in _compile_with_cache_hip
    temp_path = tf.name
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <tempfile._TemporaryFileWrapper object at 0x7f5010ec64f0>, exc = None
value = None, tb = None

    def __exit__(self, exc, value, tb):
>       result = self.file.__exit__(exc, value, tb)
E       AssertionError: Only cupy raises error
E       
E       Traceback (most recent call last):
E         File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.t8hdvgF7FH/cupy/cupy/testing/_helper.py", line 47, in _call_func
E           result = impl(self, *args, **kw)
E         File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.t8hdvgF7FH/cupy/tests/cupy_tests/indexing_tests/test_insert.py", line 106, in test_put_values_scalar
E           xp.put(a, inds, vals)
E         File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.t8hdvgF7FH/cupy/cupy/_indexing/insert.py", line 67, in put
E           a.put(ind, v, mode=mode)
E         File "cupy/core/core.pyx", line 669, in cupy.core.core.ndarray.put
E           cpdef put(self, indices, values, mode='wrap'):
E         File "cupy/core/core.pyx", line 676, in cupy.core.core.ndarray.put
E           return _indexing._ndarray_put(self, indices, values, mode)
E         File "cupy/core/_routines_indexing.pyx", line 164, in cupy.core._routines_indexing._ndarray_put
E           _put_wrap_kernel(indices, values, values.size, n, self)
E         File "cupy/core/_kernel.pyx", line 840, in cupy.core._kernel.ElementwiseKernel.__call__
E           kern = self._get_elementwise_kernel(dev_id, arginfos, type_map)
E         File "cupy/core/_kernel.pyx", line 865, in cupy.core._kernel.ElementwiseKernel._get_elementwise_kernel
E           kern = _get_elementwise_kernel(
E         File "cupy/_util.pyx", line 59, in cupy._util.memoize.decorator.ret
E           result = f(*args, **kwargs)
E         File "cupy/core/_kernel.pyx", line 652, in cupy.core._kernel._get_elementwise_kernel
E           return _get_simple_elementwise_kernel(
E         File "cupy/core/_kernel.pyx", line 38, in cupy.core._kernel._get_simple_elementwise_kernel
E           cpdef function.Function _get_simple_elementwise_kernel(
E         File "cupy/core/_kernel.pyx", line 61, in cupy.core._kernel._get_simple_elementwise_kernel
E           module = compile_with_cache(module_code, options)
E         File "cupy/core/core.pyx", line 2021, in cupy.core.core.compile_with_cache
E           return cuda.compile_with_cache(
E         File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.t8hdvgF7FH/cupy/cupy/cuda/compiler.py", line 428, in compile_with_cache
E           return _compile_with_cache_hip(
E         File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.t8hdvgF7FH/cupy/cupy/cuda/compiler.py", line 829, in _compile_with_cache_hip
E           temp_path = tf.name
E         File "/home/kmaeh/.pyenv/versions/3.8.7/lib/python3.8/tempfile.py", line 491, in __exit__
E           result = self.file.__exit__(exc, value, tb)
E       OSError: [Errno 28] No space left on device

/home/kmaeh/.pyenv/versions/3.8.7/lib/python3.8/tempfile.py:491: AssertionError
_______ TestPutRaises_param_0_{shape=(7,)}.test_put_inds_overflow_error ________

self = <<cupy_tests.indexing_tests.test_insert.TestPutRaises_param_0_{shape=(7,)} testMethod=test_put_inds_overflow_error>  parameter: {'shape': (7,)}>
dtype = <class 'numpy.float64'>

    @testing.for_all_dtypes()
    def test_put_inds_overflow_error(self, dtype):
        for xp in (numpy, cupy):
            a = testing.shaped_arange(self.shape, xp, dtype)
            inds = xp.array([2, -1, 3, 7])
            vals = testing.shaped_random((4,), xp, dtype)
            with pytest.raises(IndexError):
>               xp.put(a, inds, vals, mode='raise')

tests/cupy_tests/indexing_tests/test_insert.py:132: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
cupy/_indexing/insert.py:67: in put
    a.put(ind, v, mode=mode)
cupy/core/core.pyx:669: in cupy.core.core.ndarray.put
    cpdef put(self, indices, values, mode='wrap'):
cupy/core/core.pyx:676: in cupy.core.core.ndarray.put
    return _indexing._ndarray_put(self, indices, values, mode)
cupy/core/_routines_indexing.pyx:160: in cupy.core._routines_indexing._ndarray_put
    _put_raise_kernel(indices, values, values.size, n, self, err)
cupy/core/_kernel.pyx:840: in cupy.core._kernel.ElementwiseKernel.__call__
    kern = self._get_elementwise_kernel(dev_id, arginfos, type_map)
cupy/core/_kernel.pyx:865: in cupy.core._kernel.ElementwiseKernel._get_elementwise_kernel
    kern = _get_elementwise_kernel(
cupy/_util.pyx:59: in cupy._util.memoize.decorator.ret
    result = f(*args, **kwargs)
cupy/core/_kernel.pyx:652: in cupy.core._kernel._get_elementwise_kernel
    return _get_simple_elementwise_kernel(
cupy/core/_kernel.pyx:38: in cupy.core._kernel._get_simple_elementwise_kernel
    cpdef function.Function _get_simple_elementwise_kernel(
cupy/core/_kernel.pyx:61: in cupy.core._kernel._get_simple_elementwise_kernel
    module = compile_with_cache(module_code, options)
cupy/core/core.pyx:2021: in cupy.core.core.compile_with_cache
    return cuda.compile_with_cache(
cupy/cuda/compiler.py:428: in compile_with_cache
    return _compile_with_cache_hip(
cupy/cuda/compiler.py:829: in _compile_with_cache_hip
    temp_path = tf.name
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <tempfile._TemporaryFileWrapper object at 0x7f5010839700>, exc = None
value = None, tb = None

    def __exit__(self, exc, value, tb):
>       result = self.file.__exit__(exc, value, tb)
E       OSError: [Errno 28] No space left on device

/home/kmaeh/.pyenv/versions/3.8.7/lib/python3.8/tempfile.py:491: OSError
----------------------------- Captured stdout call -----------------------------
dtype is <class 'numpy.float64'>
_______ TestPutRaises_param_0_{shape=(7,)}.test_put_inds_underflow_error _______

self = <<cupy_tests.indexing_tests.test_insert.TestPutRaises_param_0_{shape=(7,)} testMethod=test_put_inds_underflow_error>  parameter: {'shape': (7,)}>
dtype = <class 'numpy.float64'>

    @testing.for_all_dtypes()
    def test_put_inds_underflow_error(self, dtype):
        for xp in (numpy, cupy):
            a = testing.shaped_arange(self.shape, xp, dtype)
            inds = xp.array([2, -8, 3, 0])
            vals = testing.shaped_random((4,), xp, dtype)
            with pytest.raises(IndexError):
>               xp.put(a, inds, vals, mode='raise')

tests/cupy_tests/indexing_tests/test_insert.py:123: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
cupy/_indexing/insert.py:67: in put
    a.put(ind, v, mode=mode)
cupy/core/core.pyx:669: in cupy.core.core.ndarray.put
    cpdef put(self, indices, values, mode='wrap'):
cupy/core/core.pyx:676: in cupy.core.core.ndarray.put
    return _indexing._ndarray_put(self, indices, values, mode)
cupy/core/_routines_indexing.pyx:160: in cupy.core._routines_indexing._ndarray_put
    _put_raise_kernel(indices, values, values.size, n, self, err)
cupy/core/_kernel.pyx:840: in cupy.core._kernel.ElementwiseKernel.__call__
    kern = self._get_elementwise_kernel(dev_id, arginfos, type_map)
cupy/core/_kernel.pyx:865: in cupy.core._kernel.ElementwiseKernel._get_elementwise_kernel
    kern = _get_elementwise_kernel(
cupy/_util.pyx:59: in cupy._util.memoize.decorator.ret
    result = f(*args, **kwargs)
cupy/core/_kernel.pyx:652: in cupy.core._kernel._get_elementwise_kernel
    return _get_simple_elementwise_kernel(
cupy/core/_kernel.pyx:38: in cupy.core._kernel._get_simple_elementwise_kernel
    cpdef function.Function _get_simple_elementwise_kernel(
cupy/core/_kernel.pyx:61: in cupy.core._kernel._get_simple_elementwise_kernel
    module = compile_with_cache(module_code, options)
cupy/core/core.pyx:2021: in cupy.core.core.compile_with_cache
    return cuda.compile_with_cache(
cupy/cuda/compiler.py:428: in compile_with_cache
    return _compile_with_cache_hip(
cupy/cuda/compiler.py:829: in _compile_with_cache_hip
    temp_path = tf.name
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <tempfile._TemporaryFileWrapper object at 0x7f5010f7d370>, exc = None
value = None, tb = None

    def __exit__(self, exc, value, tb):
>       result = self.file.__exit__(exc, value, tb)
E       OSError: [Errno 28] No space left on device

/home/kmaeh/.pyenv/versions/3.8.7/lib/python3.8/tempfile.py:491: OSError
----------------------------- Captured stdout call -----------------------------
dtype is <class 'numpy.float64'>
______ TestPutRaises_param_1_{shape=(2, 3)}.test_put_inds_overflow_error _______

self = <<cupy_tests.indexing_tests.test_insert.TestPutRaises_param_1_{shape=(2, 3)} testMethod=test_put_inds_overflow_error>  parameter: {'shape': (2, 3)}>
dtype = <class 'numpy.float64'>

    @testing.for_all_dtypes()
    def test_put_inds_overflow_error(self, dtype):
        for xp in (numpy, cupy):
            a = testing.shaped_arange(self.shape, xp, dtype)
            inds = xp.array([2, -1, 3, 7])
            vals = testing.shaped_random((4,), xp, dtype)
            with pytest.raises(IndexError):
>               xp.put(a, inds, vals, mode='raise')

tests/cupy_tests/indexing_tests/test_insert.py:132: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
cupy/_indexing/insert.py:67: in put
    a.put(ind, v, mode=mode)
cupy/core/core.pyx:669: in cupy.core.core.ndarray.put
    cpdef put(self, indices, values, mode='wrap'):
cupy/core/core.pyx:676: in cupy.core.core.ndarray.put
    return _indexing._ndarray_put(self, indices, values, mode)
cupy/core/_routines_indexing.pyx:160: in cupy.core._routines_indexing._ndarray_put
    _put_raise_kernel(indices, values, values.size, n, self, err)
cupy/core/_kernel.pyx:840: in cupy.core._kernel.ElementwiseKernel.__call__
    kern = self._get_elementwise_kernel(dev_id, arginfos, type_map)
cupy/core/_kernel.pyx:865: in cupy.core._kernel.ElementwiseKernel._get_elementwise_kernel
    kern = _get_elementwise_kernel(
cupy/_util.pyx:59: in cupy._util.memoize.decorator.ret
    result = f(*args, **kwargs)
cupy/core/_kernel.pyx:652: in cupy.core._kernel._get_elementwise_kernel
    return _get_simple_elementwise_kernel(
cupy/core/_kernel.pyx:38: in cupy.core._kernel._get_simple_elementwise_kernel
    cpdef function.Function _get_simple_elementwise_kernel(
cupy/core/_kernel.pyx:61: in cupy.core._kernel._get_simple_elementwise_kernel
    module = compile_with_cache(module_code, options)
cupy/core/core.pyx:2021: in cupy.core.core.compile_with_cache
    return cuda.compile_with_cache(
cupy/cuda/compiler.py:428: in compile_with_cache
    return _compile_with_cache_hip(
cupy/cuda/compiler.py:829: in _compile_with_cache_hip
    temp_path = tf.name
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <tempfile._TemporaryFileWrapper object at 0x7f5010826730>, exc = None
value = None, tb = None

    def __exit__(self, exc, value, tb):
>       result = self.file.__exit__(exc, value, tb)
E       OSError: [Errno 28] No space left on device

/home/kmaeh/.pyenv/versions/3.8.7/lib/python3.8/tempfile.py:491: OSError
----------------------------- Captured stdout call -----------------------------
dtype is <class 'numpy.float64'>
______ TestPutRaises_param_1_{shape=(2, 3)}.test_put_inds_underflow_error ______

self = <<cupy_tests.indexing_tests.test_insert.TestPutRaises_param_1_{shape=(2, 3)} testMethod=test_put_inds_underflow_error>  parameter: {'shape': (2, 3)}>
dtype = <class 'numpy.float64'>

    @testing.for_all_dtypes()
    def test_put_inds_underflow_error(self, dtype):
        for xp in (numpy, cupy):
            a = testing.shaped_arange(self.shape, xp, dtype)
            inds = xp.array([2, -8, 3, 0])
            vals = testing.shaped_random((4,), xp, dtype)
            with pytest.raises(IndexError):
>               xp.put(a, inds, vals, mode='raise')

tests/cupy_tests/indexing_tests/test_insert.py:123: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
cupy/_indexing/insert.py:67: in put
    a.put(ind, v, mode=mode)
cupy/core/core.pyx:669: in cupy.core.core.ndarray.put
    cpdef put(self, indices, values, mode='wrap'):
cupy/core/core.pyx:676: in cupy.core.core.ndarray.put
    return _indexing._ndarray_put(self, indices, values, mode)
cupy/core/_routines_indexing.pyx:160: in cupy.core._routines_indexing._ndarray_put
    _put_raise_kernel(indices, values, values.size, n, self, err)
cupy/core/_kernel.pyx:840: in cupy.core._kernel.ElementwiseKernel.__call__
    kern = self._get_elementwise_kernel(dev_id, arginfos, type_map)
cupy/core/_kernel.pyx:865: in cupy.core._kernel.ElementwiseKernel._get_elementwise_kernel
    kern = _get_elementwise_kernel(
cupy/_util.pyx:59: in cupy._util.memoize.decorator.ret
    result = f(*args, **kwargs)
cupy/core/_kernel.pyx:652: in cupy.core._kernel._get_elementwise_kernel
    return _get_simple_elementwise_kernel(
cupy/core/_kernel.pyx:38: in cupy.core._kernel._get_simple_elementwise_kernel
    cpdef function.Function _get_simple_elementwise_kernel(
cupy/core/_kernel.pyx:61: in cupy.core._kernel._get_simple_elementwise_kernel
    module = compile_with_cache(module_code, options)
cupy/core/core.pyx:2021: in cupy.core.core.compile_with_cache
    return cuda.compile_with_cache(
cupy/cuda/compiler.py:428: in compile_with_cache
    return _compile_with_cache_hip(
cupy/cuda/compiler.py:829: in _compile_with_cache_hip
    temp_path = tf.name
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <tempfile._TemporaryFileWrapper object at 0x7f5010858b20>, exc = None
value = None, tb = None

    def __exit__(self, exc, value, tb):
>       result = self.file.__exit__(exc, value, tb)
E       OSError: [Errno 28] No space left on device

/home/kmaeh/.pyenv/versions/3.8.7/lib/python3.8/tempfile.py:491: OSError
----------------------------- Captured stdout call -----------------------------
dtype is <class 'numpy.float64'>
_ TestPutmaskDifferentShapes_param_3_{shape=(1,), values_shape=(2,)}.test_putmask _

self = <<cupy_tests.indexing_tests.test_insert.TestPutmaskDifferentShapes_param_3_{shape=(1,), values_shape=(2,)} testMethod=test_putmask>  parameter: {'shape': (1,), 'values_shape': (2,)}>
xp = <module 'cupy' from '/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.t8hdvgF7FH/cupy/cupy/__init__.py'>
dtype = <class 'numpy.float64'>

    @testing.for_all_dtypes()
    @testing.numpy_cupy_array_equal()
    def test_putmask(self, xp, dtype):
        a = testing.shaped_random(self.shape, xp, dtype=dtype, seed=3)
        mask = testing.shaped_random(self.shape, xp, dtype=numpy.bool_, seed=4)
        values = testing.shaped_random(self.values_shape,
                                       xp, dtype=dtype, seed=5)
>       ret = xp.putmask(a, mask, values)

tests/cupy_tests/indexing_tests/test_insert.py:176: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
cupy/_indexing/insert.py:139: in putmask
    _putmask_kernel(mask, values, len(values), a)
cupy/core/_kernel.pyx:840: in cupy.core._kernel.ElementwiseKernel.__call__
    kern = self._get_elementwise_kernel(dev_id, arginfos, type_map)
cupy/core/_kernel.pyx:865: in cupy.core._kernel.ElementwiseKernel._get_elementwise_kernel
    kern = _get_elementwise_kernel(
cupy/_util.pyx:59: in cupy._util.memoize.decorator.ret
    result = f(*args, **kwargs)
cupy/core/_kernel.pyx:652: in cupy.core._kernel._get_elementwise_kernel
    return _get_simple_elementwise_kernel(
cupy/core/_kernel.pyx:38: in cupy.core._kernel._get_simple_elementwise_kernel
    cpdef function.Function _get_simple_elementwise_kernel(
cupy/core/_kernel.pyx:61: in cupy.core._kernel._get_simple_elementwise_kernel
    module = compile_with_cache(module_code, options)
cupy/core/core.pyx:2021: in cupy.core.core.compile_with_cache
    return cuda.compile_with_cache(
cupy/cuda/compiler.py:428: in compile_with_cache
    return _compile_with_cache_hip(
cupy/cuda/compiler.py:829: in _compile_with_cache_hip
    temp_path = tf.name
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <tempfile._TemporaryFileWrapper object at 0x7f501085f4c0>, exc = None
value = None, tb = None

    def __exit__(self, exc, value, tb):
>       result = self.file.__exit__(exc, value, tb)
E       AssertionError: Only cupy raises error
E       
E       Traceback (most recent call last):
E         File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.t8hdvgF7FH/cupy/cupy/testing/_helper.py", line 47, in _call_func
E           result = impl(self, *args, **kw)
E         File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.t8hdvgF7FH/cupy/tests/cupy_tests/indexing_tests/test_insert.py", line 176, in test_putmask
E           ret = xp.putmask(a, mask, values)
E         File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.t8hdvgF7FH/cupy/cupy/_indexing/insert.py", line 139, in putmask
E           _putmask_kernel(mask, values, len(values), a)
E         File "cupy/core/_kernel.pyx", line 840, in cupy.core._kernel.ElementwiseKernel.__call__
E           kern = self._get_elementwise_kernel(dev_id, arginfos, type_map)
E         File "cupy/core/_kernel.pyx", line 865, in cupy.core._kernel.ElementwiseKernel._get_elementwise_kernel
E           kern = _get_elementwise_kernel(
E         File "cupy/_util.pyx", line 59, in cupy._util.memoize.decorator.ret
E           result = f(*args, **kwargs)
E         File "cupy/core/_kernel.pyx", line 652, in cupy.core._kernel._get_elementwise_kernel
E           return _get_simple_elementwise_kernel(
E         File "cupy/core/_kernel.pyx", line 38, in cupy.core._kernel._get_simple_elementwise_kernel
E           cpdef function.Function _get_simple_elementwise_kernel(
E         File "cupy/core/_kernel.pyx", line 61, in cupy.core._kernel._get_simple_elementwise_kernel
E           module = compile_with_cache(module_code, options)
E         File "cupy/core/core.pyx", line 2021, in cupy.core.core.compile_with_cache
E           return cuda.compile_with_cache(
E         File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.t8hdvgF7FH/cupy/cupy/cuda/compiler.py", line 428, in compile_with_cache
E           return _compile_with_cache_hip(
E         File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.t8hdvgF7FH/cupy/cupy/cuda/compiler.py", line 829, in _compile_with_cache_hip
E           temp_path = tf.name
E         File "/home/kmaeh/.pyenv/versions/3.8.7/lib/python3.8/tempfile.py", line 491, in __exit__
E           result = self.file.__exit__(exc, value, tb)
E       OSError: [Errno 28] No space left on device

/home/kmaeh/.pyenv/versions/3.8.7/lib/python3.8/tempfile.py:491: AssertionError
----------------------------- Captured stdout call -----------------------------
dtype is <class 'numpy.float64'>
_ TestPutmaskDifferentShapes_param_4_{shape=(1,), values_shape=(3, 1)}.test_putmask _

self = <<cupy_tests.indexing_tests.test_insert.TestPutmaskDifferentShapes_param_4_{shape=(1,), values_shape=(3, 1)} testMethod=test_putmask>  parameter: {'shape': (1,), 'values_shape': (3, 1)}>
xp = <module 'cupy' from '/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.t8hdvgF7FH/cupy/cupy/__init__.py'>
dtype = <class 'numpy.float64'>

    @testing.for_all_dtypes()
    @testing.numpy_cupy_array_equal()
    def test_putmask(self, xp, dtype):
        a = testing.shaped_random(self.shape, xp, dtype=dtype, seed=3)
        mask = testing.shaped_random(self.shape, xp, dtype=numpy.bool_, seed=4)
        values = testing.shaped_random(self.values_shape,
                                       xp, dtype=dtype, seed=5)
>       ret = xp.putmask(a, mask, values)

tests/cupy_tests/indexing_tests/test_insert.py:176: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
cupy/_indexing/insert.py:139: in putmask
    _putmask_kernel(mask, values, len(values), a)
cupy/core/_kernel.pyx:840: in cupy.core._kernel.ElementwiseKernel.__call__
    kern = self._get_elementwise_kernel(dev_id, arginfos, type_map)
cupy/core/_kernel.pyx:865: in cupy.core._kernel.ElementwiseKernel._get_elementwise_kernel
    kern = _get_elementwise_kernel(
cupy/_util.pyx:59: in cupy._util.memoize.decorator.ret
    result = f(*args, **kwargs)
cupy/core/_kernel.pyx:652: in cupy.core._kernel._get_elementwise_kernel
    return _get_simple_elementwise_kernel(
cupy/core/_kernel.pyx:38: in cupy.core._kernel._get_simple_elementwise_kernel
    cpdef function.Function _get_simple_elementwise_kernel(
cupy/core/_kernel.pyx:61: in cupy.core._kernel._get_simple_elementwise_kernel
    module = compile_with_cache(module_code, options)
cupy/core/core.pyx:2021: in cupy.core.core.compile_with_cache
    return cuda.compile_with_cache(
cupy/cuda/compiler.py:428: in compile_with_cache
    return _compile_with_cache_hip(
cupy/cuda/compiler.py:829: in _compile_with_cache_hip
    temp_path = tf.name
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <tempfile._TemporaryFileWrapper object at 0x7f50108f9be0>, exc = None
value = None, tb = None

    def __exit__(self, exc, value, tb):
>       result = self.file.__exit__(exc, value, tb)
E       AssertionError: Only cupy raises error
E       
E       Traceback (most recent call last):
E         File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.t8hdvgF7FH/cupy/cupy/testing/_helper.py", line 47, in _call_func
E           result = impl(self, *args, **kw)
E         File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.t8hdvgF7FH/cupy/tests/cupy_tests/indexing_tests/test_insert.py", line 176, in test_putmask
E           ret = xp.putmask(a, mask, values)
E         File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.t8hdvgF7FH/cupy/cupy/_indexing/insert.py", line 139, in putmask
E           _putmask_kernel(mask, values, len(values), a)
E         File "cupy/core/_kernel.pyx", line 840, in cupy.core._kernel.ElementwiseKernel.__call__
E           kern = self._get_elementwise_kernel(dev_id, arginfos, type_map)
E         File "cupy/core/_kernel.pyx", line 865, in cupy.core._kernel.ElementwiseKernel._get_elementwise_kernel
E           kern = _get_elementwise_kernel(
E         File "cupy/_util.pyx", line 59, in cupy._util.memoize.decorator.ret
E           result = f(*args, **kwargs)
E         File "cupy/core/_kernel.pyx", line 652, in cupy.core._kernel._get_elementwise_kernel
E           return _get_simple_elementwise_kernel(
E         File "cupy/core/_kernel.pyx", line 38, in cupy.core._kernel._get_simple_elementwise_kernel
E           cpdef function.Function _get_simple_elementwise_kernel(
E         File "cupy/core/_kernel.pyx", line 61, in cupy.core._kernel._get_simple_elementwise_kernel
E           module = compile_with_cache(module_code, options)
E         File "cupy/core/core.pyx", line 2021, in cupy.core.core.compile_with_cache
E           return cuda.compile_with_cache(
E         File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.t8hdvgF7FH/cupy/cupy/cuda/compiler.py", line 428, in compile_with_cache
E           return _compile_with_cache_hip(
E         File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.t8hdvgF7FH/cupy/cupy/cuda/compiler.py", line 829, in _compile_with_cache_hip
E           temp_path = tf.name
E         File "/home/kmaeh/.pyenv/versions/3.8.7/lib/python3.8/tempfile.py", line 491, in __exit__
E           result = self.file.__exit__(exc, value, tb)
E       OSError: [Errno 28] No space left on device

/home/kmaeh/.pyenv/versions/3.8.7/lib/python3.8/tempfile.py:491: AssertionError
----------------------------- Captured stdout call -----------------------------
dtype is <class 'numpy.float64'>
_ TestPutmaskDifferentShapes_param_5_{shape=(1,), values_shape=(5,)}.test_putmask _

self = <<cupy_tests.indexing_tests.test_insert.TestPutmaskDifferentShapes_param_5_{shape=(1,), values_shape=(5,)} testMethod=test_putmask>  parameter: {'shape': (1,), 'values_shape': (5,)}>
xp = <module 'cupy' from '/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.t8hdvgF7FH/cupy/cupy/__init__.py'>
dtype = <class 'numpy.float64'>

    @testing.for_all_dtypes()
    @testing.numpy_cupy_array_equal()
    def test_putmask(self, xp, dtype):
        a = testing.shaped_random(self.shape, xp, dtype=dtype, seed=3)
        mask = testing.shaped_random(self.shape, xp, dtype=numpy.bool_, seed=4)
        values = testing.shaped_random(self.values_shape,
                                       xp, dtype=dtype, seed=5)
>       ret = xp.putmask(a, mask, values)

tests/cupy_tests/indexing_tests/test_insert.py:176: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
cupy/_indexing/insert.py:139: in putmask
    _putmask_kernel(mask, values, len(values), a)
cupy/core/_kernel.pyx:840: in cupy.core._kernel.ElementwiseKernel.__call__
    kern = self._get_elementwise_kernel(dev_id, arginfos, type_map)
cupy/core/_kernel.pyx:865: in cupy.core._kernel.ElementwiseKernel._get_elementwise_kernel
    kern = _get_elementwise_kernel(
cupy/_util.pyx:59: in cupy._util.memoize.decorator.ret
    result = f(*args, **kwargs)
cupy/core/_kernel.pyx:652: in cupy.core._kernel._get_elementwise_kernel
    return _get_simple_elementwise_kernel(
cupy/core/_kernel.pyx:38: in cupy.core._kernel._get_simple_elementwise_kernel
    cpdef function.Function _get_simple_elementwise_kernel(
cupy/core/_kernel.pyx:61: in cupy.core._kernel._get_simple_elementwise_kernel
    module = compile_with_cache(module_code, options)
cupy/core/core.pyx:2021: in cupy.core.core.compile_with_cache
    return cuda.compile_with_cache(
cupy/cuda/compiler.py:428: in compile_with_cache
    return _compile_with_cache_hip(
cupy/cuda/compiler.py:829: in _compile_with_cache_hip
    temp_path = tf.name
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <tempfile._TemporaryFileWrapper object at 0x7f50105f1a00>, exc = None
value = None, tb = None

    def __exit__(self, exc, value, tb):
>       result = self.file.__exit__(exc, value, tb)
E       AssertionError: Only cupy raises error
E       
E       Traceback (most recent call last):
E         File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.t8hdvgF7FH/cupy/cupy/testing/_helper.py", line 47, in _call_func
E           result = impl(self, *args, **kw)
E         File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.t8hdvgF7FH/cupy/tests/cupy_tests/indexing_tests/test_insert.py", line 176, in test_putmask
E           ret = xp.putmask(a, mask, values)
E         File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.t8hdvgF7FH/cupy/cupy/_indexing/insert.py", line 139, in putmask
E           _putmask_kernel(mask, values, len(values), a)
E         File "cupy/core/_kernel.pyx", line 840, in cupy.core._kernel.ElementwiseKernel.__call__
E           kern = self._get_elementwise_kernel(dev_id, arginfos, type_map)
E         File "cupy/core/_kernel.pyx", line 865, in cupy.core._kernel.ElementwiseKernel._get_elementwise_kernel
E           kern = _get_elementwise_kernel(
E         File "cupy/_util.pyx", line 59, in cupy._util.memoize.decorator.ret
E           result = f(*args, **kwargs)
E         File "cupy/core/_kernel.pyx", line 652, in cupy.core._kernel._get_elementwise_kernel
E           return _get_simple_elementwise_kernel(
E         File "cupy/core/_kernel.pyx", line 38, in cupy.core._kernel._get_simple_elementwise_kernel
E           cpdef function.Function _get_simple_elementwise_kernel(
E         File "cupy/core/_kernel.pyx", line 61, in cupy.core._kernel._get_simple_elementwise_kernel
E           module = compile_with_cache(module_code, options)
E         File "cupy/core/core.pyx", line 2021, in cupy.core.core.compile_with_cache
E           return cuda.compile_with_cache(
E         File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.t8hdvgF7FH/cupy/cupy/cuda/compiler.py", line 428, in compile_with_cache
E           return _compile_with_cache_hip(
E         File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.t8hdvgF7FH/cupy/cupy/cuda/compiler.py", line 829, in _compile_with_cache_hip
E           temp_path = tf.name
E         File "/home/kmaeh/.pyenv/versions/3.8.7/lib/python3.8/tempfile.py", line 491, in __exit__
E           result = self.file.__exit__(exc, value, tb)
E       OSError: [Errno 28] No space left on device

/home/kmaeh/.pyenv/versions/3.8.7/lib/python3.8/tempfile.py:491: AssertionError
----------------------------- Captured stdout call -----------------------------
dtype is <class 'numpy.float64'>
_ TestPutmaskDifferentShapes_param_6_{shape=(2, 3), values_shape=(2,)}.test_putmask _

self = <<cupy_tests.indexing_tests.test_insert.TestPutmaskDifferentShapes_param_6_{shape=(2, 3), values_shape=(2,)} testMethod=test_putmask>  parameter: {'shape': (2, 3), 'values_shape': (2,)}>
xp = <module 'cupy' from '/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.t8hdvgF7FH/cupy/cupy/__init__.py'>
dtype = <class 'numpy.float64'>

    @testing.for_all_dtypes()
    @testing.numpy_cupy_array_equal()
    def test_putmask(self, xp, dtype):
        a = testing.shaped_random(self.shape, xp, dtype=dtype, seed=3)
        mask = testing.shaped_random(self.shape, xp, dtype=numpy.bool_, seed=4)
        values = testing.shaped_random(self.values_shape,
                                       xp, dtype=dtype, seed=5)
>       ret = xp.putmask(a, mask, values)

tests/cupy_tests/indexing_tests/test_insert.py:176: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
cupy/_indexing/insert.py:139: in putmask
    _putmask_kernel(mask, values, len(values), a)
cupy/core/_kernel.pyx:840: in cupy.core._kernel.ElementwiseKernel.__call__
    kern = self._get_elementwise_kernel(dev_id, arginfos, type_map)
cupy/core/_kernel.pyx:865: in cupy.core._kernel.ElementwiseKernel._get_elementwise_kernel
    kern = _get_elementwise_kernel(
cupy/_util.pyx:59: in cupy._util.memoize.decorator.ret
    result = f(*args, **kwargs)
cupy/core/_kernel.pyx:652: in cupy.core._kernel._get_elementwise_kernel
    return _get_simple_elementwise_kernel(
cupy/core/_kernel.pyx:38: in cupy.core._kernel._get_simple_elementwise_kernel
    cpdef function.Function _get_simple_elementwise_kernel(
cupy/core/_kernel.pyx:61: in cupy.core._kernel._get_simple_elementwise_kernel
    module = compile_with_cache(module_code, options)
cupy/core/core.pyx:2021: in cupy.core.core.compile_with_cache
    return cuda.compile_with_cache(
cupy/cuda/compiler.py:428: in compile_with_cache
    return _compile_with_cache_hip(
cupy/cuda/compiler.py:829: in _compile_with_cache_hip
    temp_path = tf.name
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <tempfile._TemporaryFileWrapper object at 0x7f5010e97730>, exc = None
value = None, tb = None

    def __exit__(self, exc, value, tb):
>       result = self.file.__exit__(exc, value, tb)
E       AssertionError: Only cupy raises error
E       
E       Traceback (most recent call last):
E         File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.t8hdvgF7FH/cupy/cupy/testing/_helper.py", line 47, in _call_func
E           result = impl(self, *args, **kw)
E         File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.t8hdvgF7FH/cupy/tests/cupy_tests/indexing_tests/test_insert.py", line 176, in test_putmask
E           ret = xp.putmask(a, mask, values)
E         File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.t8hdvgF7FH/cupy/cupy/_indexing/insert.py", line 139, in putmask
E           _putmask_kernel(mask, values, len(values), a)
E         File "cupy/core/_kernel.pyx", line 840, in cupy.core._kernel.ElementwiseKernel.__call__
E           kern = self._get_elementwise_kernel(dev_id, arginfos, type_map)
E         File "cupy/core/_kernel.pyx", line 865, in cupy.core._kernel.ElementwiseKernel._get_elementwise_kernel
E           kern = _get_elementwise_kernel(
E         File "cupy/_util.pyx", line 59, in cupy._util.memoize.decorator.ret
E           result = f(*args, **kwargs)
E         File "cupy/core/_kernel.pyx", line 652, in cupy.core._kernel._get_elementwise_kernel
E           return _get_simple_elementwise_kernel(
E         File "cupy/core/_kernel.pyx", line 38, in cupy.core._kernel._get_simple_elementwise_kernel
E           cpdef function.Function _get_simple_elementwise_kernel(
E         File "cupy/core/_kernel.pyx", line 61, in cupy.core._kernel._get_simple_elementwise_kernel
E           module = compile_with_cache(module_code, options)
E         File "cupy/core/core.pyx", line 2021, in cupy.core.core.compile_with_cache
E           return cuda.compile_with_cache(
E         File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.t8hdvgF7FH/cupy/cupy/cuda/compiler.py", line 428, in compile_with_cache
E           return _compile_with_cache_hip(
E         File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.t8hdvgF7FH/cupy/cupy/cuda/compiler.py", line 829, in _compile_with_cache_hip
E           temp_path = tf.name
E         File "/home/kmaeh/.pyenv/versions/3.8.7/lib/python3.8/tempfile.py", line 491, in __exit__
E           result = self.file.__exit__(exc, value, tb)
E       OSError: [Errno 28] No space left on device

/home/kmaeh/.pyenv/versions/3.8.7/lib/python3.8/tempfile.py:491: AssertionError
----------------------------- Captured stdout call -----------------------------
dtype is <class 'numpy.float64'>
_ TestPutmaskDifferentShapes_param_7_{shape=(2, 3), values_shape=(3, 1)}.test_putmask _

self = <<cupy_tests.indexing_tests.test_insert.TestPutmaskDifferentShapes_param_7_{shape=(2, 3), values_shape=(3, 1)} testMethod=test_putmask>  parameter: {'shape': (2, 3), 'values_shape': (3, 1)}>
xp = <module 'cupy' from '/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.t8hdvgF7FH/cupy/cupy/__init__.py'>
dtype = <class 'numpy.float64'>

    @testing.for_all_dtypes()
    @testing.numpy_cupy_array_equal()
    def test_putmask(self, xp, dtype):
        a = testing.shaped_random(self.shape, xp, dtype=dtype, seed=3)
        mask = testing.shaped_random(self.shape, xp, dtype=numpy.bool_, seed=4)
        values = testing.shaped_random(self.values_shape,
                                       xp, dtype=dtype, seed=5)
>       ret = xp.putmask(a, mask, values)

tests/cupy_tests/indexing_tests/test_insert.py:176: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
cupy/_indexing/insert.py:139: in putmask
    _putmask_kernel(mask, values, len(values), a)
cupy/core/_kernel.pyx:840: in cupy.core._kernel.ElementwiseKernel.__call__
    kern = self._get_elementwise_kernel(dev_id, arginfos, type_map)
cupy/core/_kernel.pyx:865: in cupy.core._kernel.ElementwiseKernel._get_elementwise_kernel
    kern = _get_elementwise_kernel(
cupy/_util.pyx:59: in cupy._util.memoize.decorator.ret
    result = f(*args, **kwargs)
cupy/core/_kernel.pyx:652: in cupy.core._kernel._get_elementwise_kernel
    return _get_simple_elementwise_kernel(
cupy/core/_kernel.pyx:38: in cupy.core._kernel._get_simple_elementwise_kernel
    cpdef function.Function _get_simple_elementwise_kernel(
cupy/core/_kernel.pyx:61: in cupy.core._kernel._get_simple_elementwise_kernel
    module = compile_with_cache(module_code, options)
cupy/core/core.pyx:2021: in cupy.core.core.compile_with_cache
    return cuda.compile_with_cache(
cupy/cuda/compiler.py:428: in compile_with_cache
    return _compile_with_cache_hip(
cupy/cuda/compiler.py:829: in _compile_with_cache_hip
    temp_path = tf.name
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <tempfile._TemporaryFileWrapper object at 0x7f5010e509a0>, exc = None
value = None, tb = None

    def __exit__(self, exc, value, tb):
>       result = self.file.__exit__(exc, value, tb)
E       AssertionError: Only cupy raises error
E       
E       Traceback (most recent call last):
E         File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.t8hdvgF7FH/cupy/cupy/testing/_helper.py", line 47, in _call_func
E           result = impl(self, *args, **kw)
E         File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.t8hdvgF7FH/cupy/tests/cupy_tests/indexing_tests/test_insert.py", line 176, in test_putmask
E           ret = xp.putmask(a, mask, values)
E         File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.t8hdvgF7FH/cupy/cupy/_indexing/insert.py", line 139, in putmask
E           _putmask_kernel(mask, values, len(values), a)
E         File "cupy/core/_kernel.pyx", line 840, in cupy.core._kernel.ElementwiseKernel.__call__
E           kern = self._get_elementwise_kernel(dev_id, arginfos, type_map)
E         File "cupy/core/_kernel.pyx", line 865, in cupy.core._kernel.ElementwiseKernel._get_elementwise_kernel
E           kern = _get_elementwise_kernel(
E         File "cupy/_util.pyx", line 59, in cupy._util.memoize.decorator.ret
E           result = f(*args, **kwargs)
E         File "cupy/core/_kernel.pyx", line 652, in cupy.core._kernel._get_elementwise_kernel
E           return _get_simple_elementwise_kernel(
E         File "cupy/core/_kernel.pyx", line 38, in cupy.core._kernel._get_simple_elementwise_kernel
E           cpdef function.Function _get_simple_elementwise_kernel(
E         File "cupy/core/_kernel.pyx", line 61, in cupy.core._kernel._get_simple_elementwise_kernel
E           module = compile_with_cache(module_code, options)
E         File "cupy/core/core.pyx", line 2021, in cupy.core.core.compile_with_cache
E           return cuda.compile_with_cache(
E         File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.t8hdvgF7FH/cupy/cupy/cuda/compiler.py", line 428, in compile_with_cache
E           return _compile_with_cache_hip(
E         File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.t8hdvgF7FH/cupy/cupy/cuda/compiler.py", line 829, in _compile_with_cache_hip
E           temp_path = tf.name
E         File "/home/kmaeh/.pyenv/versions/3.8.7/lib/python3.8/tempfile.py", line 491, in __exit__
E           result = self.file.__exit__(exc, value, tb)
E       OSError: [Errno 28] No space left on device

/home/kmaeh/.pyenv/versions/3.8.7/lib/python3.8/tempfile.py:491: AssertionError
----------------------------- Captured stdout call -----------------------------
dtype is <class 'numpy.float64'>
_ TestPutmaskDifferentShapes_param_8_{shape=(2, 3), values_shape=(5,)}.test_putmask _

self = <<cupy_tests.indexing_tests.test_insert.TestPutmaskDifferentShapes_param_8_{shape=(2, 3), values_shape=(5,)} testMethod=test_putmask>  parameter: {'shape': (2, 3), 'values_shape': (5,)}>
xp = <module 'cupy' from '/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.t8hdvgF7FH/cupy/cupy/__init__.py'>
dtype = <class 'numpy.float64'>

    @testing.for_all_dtypes()
    @testing.numpy_cupy_array_equal()
    def test_putmask(self, xp, dtype):
        a = testing.shaped_random(self.shape, xp, dtype=dtype, seed=3)
        mask = testing.shaped_random(self.shape, xp, dtype=numpy.bool_, seed=4)
        values = testing.shaped_random(self.values_shape,
                                       xp, dtype=dtype, seed=5)
>       ret = xp.putmask(a, mask, values)

tests/cupy_tests/indexing_tests/test_insert.py:176: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
cupy/_indexing/insert.py:139: in putmask
    _putmask_kernel(mask, values, len(values), a)
cupy/core/_kernel.pyx:840: in cupy.core._kernel.ElementwiseKernel.__call__
    kern = self._get_elementwise_kernel(dev_id, arginfos, type_map)
cupy/core/_kernel.pyx:865: in cupy.core._kernel.ElementwiseKernel._get_elementwise_kernel
    kern = _get_elementwise_kernel(
cupy/_util.pyx:59: in cupy._util.memoize.decorator.ret
    result = f(*args, **kwargs)
cupy/core/_kernel.pyx:652: in cupy.core._kernel._get_elementwise_kernel
    return _get_simple_elementwise_kernel(
cupy/core/_kernel.pyx:38: in cupy.core._kernel._get_simple_elementwise_kernel
    cpdef function.Function _get_simple_elementwise_kernel(
cupy/core/_kernel.pyx:61: in cupy.core._kernel._get_simple_elementwise_kernel
    module = compile_with_cache(module_code, options)
cupy/core/core.pyx:2021: in cupy.core.core.compile_with_cache
    return cuda.compile_with_cache(
cupy/cuda/compiler.py:428: in compile_with_cache
    return _compile_with_cache_hip(
cupy/cuda/compiler.py:829: in _compile_with_cache_hip
    temp_path = tf.name
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <tempfile._TemporaryFileWrapper object at 0x7f5010edc2e0>, exc = None
value = None, tb = None

    def __exit__(self, exc, value, tb):
>       result = self.file.__exit__(exc, value, tb)
E       AssertionError: Only cupy raises error
E       
E       Traceback (most recent call last):
E         File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.t8hdvgF7FH/cupy/cupy/testing/_helper.py", line 47, in _call_func
E           result = impl(self, *args, **kw)
E         File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.t8hdvgF7FH/cupy/tests/cupy_tests/indexing_tests/test_insert.py", line 176, in test_putmask
E           ret = xp.putmask(a, mask, values)
E         File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.t8hdvgF7FH/cupy/cupy/_indexing/insert.py", line 139, in putmask
E           _putmask_kernel(mask, values, len(values), a)
E         File "cupy/core/_kernel.pyx", line 840, in cupy.core._kernel.ElementwiseKernel.__call__
E           kern = self._get_elementwise_kernel(dev_id, arginfos, type_map)
E         File "cupy/core/_kernel.pyx", line 865, in cupy.core._kernel.ElementwiseKernel._get_elementwise_kernel
E           kern = _get_elementwise_kernel(
E         File "cupy/_util.pyx", line 59, in cupy._util.memoize.decorator.ret
E           result = f(*args, **kwargs)
E         File "cupy/core/_kernel.pyx", line 652, in cupy.core._kernel._get_elementwise_kernel
E           return _get_simple_elementwise_kernel(
E         File "cupy/core/_kernel.pyx", line 38, in cupy.core._kernel._get_simple_elementwise_kernel
E           cpdef function.Function _get_simple_elementwise_kernel(
E         File "cupy/core/_kernel.pyx", line 61, in cupy.core._kernel._get_simple_elementwise_kernel
E           module = compile_with_cache(module_code, options)
E         File "cupy/core/core.pyx", line 2021, in cupy.core.core.compile_with_cache
E           return cuda.compile_with_cache(
E         File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.t8hdvgF7FH/cupy/cupy/cuda/compiler.py", line 428, in compile_with_cache
E           return _compile_with_cache_hip(
E         File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.t8hdvgF7FH/cupy/cupy/cuda/compiler.py", line 829, in _compile_with_cache_hip
E           temp_path = tf.name
E         File "/home/kmaeh/.pyenv/versions/3.8.7/lib/python3.8/tempfile.py", line 491, in __exit__
E           result = self.file.__exit__(exc, value, tb)
E       OSError: [Errno 28] No space left on device

/home/kmaeh/.pyenv/versions/3.8.7/lib/python3.8/tempfile.py:491: AssertionError
----------------------------- Captured stdout call -----------------------------
dtype is <class 'numpy.float64'>
_ TestPutmaskDifferentShapes_param_9_{shape=(2, 3, 4), values_shape=(2,)}.test_putmask _

self = <<cupy_tests.indexing_tests.test_insert.TestPutmaskDifferentShapes_param_9_{shape=(2, 3, 4), values_shape=(2,)} testMethod=test_putmask>  parameter: {'shape': (2, 3, 4), 'values_shape': (2,)}>
xp = <module 'cupy' from '/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.t8hdvgF7FH/cupy/cupy/__init__.py'>
dtype = <class 'numpy.float64'>

    @testing.for_all_dtypes()
    @testing.numpy_cupy_array_equal()
    def test_putmask(self, xp, dtype):
        a = testing.shaped_random(self.shape, xp, dtype=dtype, seed=3)
        mask = testing.shaped_random(self.shape, xp, dtype=numpy.bool_, seed=4)
        values = testing.shaped_random(self.values_shape,
                                       xp, dtype=dtype, seed=5)
>       ret = xp.putmask(a, mask, values)

tests/cupy_tests/indexing_tests/test_insert.py:176: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
cupy/_indexing/insert.py:139: in putmask
    _putmask_kernel(mask, values, len(values), a)
cupy/core/_kernel.pyx:840: in cupy.core._kernel.ElementwiseKernel.__call__
    kern = self._get_elementwise_kernel(dev_id, arginfos, type_map)
cupy/core/_kernel.pyx:865: in cupy.core._kernel.ElementwiseKernel._get_elementwise_kernel
    kern = _get_elementwise_kernel(
cupy/_util.pyx:59: in cupy._util.memoize.decorator.ret
    result = f(*args, **kwargs)
cupy/core/_kernel.pyx:652: in cupy.core._kernel._get_elementwise_kernel
    return _get_simple_elementwise_kernel(
cupy/core/_kernel.pyx:38: in cupy.core._kernel._get_simple_elementwise_kernel
    cpdef function.Function _get_simple_elementwise_kernel(
cupy/core/_kernel.pyx:61: in cupy.core._kernel._get_simple_elementwise_kernel
    module = compile_with_cache(module_code, options)
cupy/core/core.pyx:2021: in cupy.core.core.compile_with_cache
    return cuda.compile_with_cache(
cupy/cuda/compiler.py:428: in compile_with_cache
    return _compile_with_cache_hip(
cupy/cuda/compiler.py:829: in _compile_with_cache_hip
    temp_path = tf.name
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <tempfile._TemporaryFileWrapper object at 0x7f50108390d0>, exc = None
value = None, tb = None

    def __exit__(self, exc, value, tb):
>       result = self.file.__exit__(exc, value, tb)
E       AssertionError: Only cupy raises error
E       
E       Traceback (most recent call last):
E         File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.t8hdvgF7FH/cupy/cupy/testing/_helper.py", line 47, in _call_func
E           result = impl(self, *args, **kw)
E         File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.t8hdvgF7FH/cupy/tests/cupy_tests/indexing_tests/test_insert.py", line 176, in test_putmask
E           ret = xp.putmask(a, mask, values)
E         File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.t8hdvgF7FH/cupy/cupy/_indexing/insert.py", line 139, in putmask
E           _putmask_kernel(mask, values, len(values), a)
E         File "cupy/core/_kernel.pyx", line 840, in cupy.core._kernel.ElementwiseKernel.__call__
E           kern = self._get_elementwise_kernel(dev_id, arginfos, type_map)
E         File "cupy/core/_kernel.pyx", line 865, in cupy.core._kernel.ElementwiseKernel._get_elementwise_kernel
E           kern = _get_elementwise_kernel(
E         File "cupy/_util.pyx", line 59, in cupy._util.memoize.decorator.ret
E           result = f(*args, **kwargs)
E         File "cupy/core/_kernel.pyx", line 652, in cupy.core._kernel._get_elementwise_kernel
E           return _get_simple_elementwise_kernel(
E         File "cupy/core/_kernel.pyx", line 38, in cupy.core._kernel._get_simple_elementwise_kernel
E           cpdef function.Function _get_simple_elementwise_kernel(
E         File "cupy/core/_kernel.pyx", line 61, in cupy.core._kernel._get_simple_elementwise_kernel
E           module = compile_with_cache(module_code, options)
E         File "cupy/core/core.pyx", line 2021, in cupy.core.core.compile_with_cache
E           return cuda.compile_with_cache(
E         File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.t8hdvgF7FH/cupy/cupy/cuda/compiler.py", line 428, in compile_with_cache
E           return _compile_with_cache_hip(
E         File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.t8hdvgF7FH/cupy/cupy/cuda/compiler.py", line 829, in _compile_with_cache_hip
E           temp_path = tf.name
E         File "/home/kmaeh/.pyenv/versions/3.8.7/lib/python3.8/tempfile.py", line 491, in __exit__
E           result = self.file.__exit__(exc, value, tb)
E       OSError: [Errno 28] No space left on device

/home/kmaeh/.pyenv/versions/3.8.7/lib/python3.8/tempfile.py:491: AssertionError
----------------------------- Captured stdout call -----------------------------
dtype is <class 'numpy.float64'>
_ TestPutmaskDifferentShapes_param_10_{shape=(2, 3, 4), values_shape=(3, 1)}.test_putmask _

self = <<cupy_tests.indexing_tests.test_insert.TestPutmaskDifferentShapes_param_10_{shape=(2, 3, 4), values_shape=(3, 1)} testMethod=test_putmask>  parameter: {'shape': (2, 3, 4), 'values_shape': (3, 1)}>
xp = <module 'cupy' from '/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.t8hdvgF7FH/cupy/cupy/__init__.py'>
dtype = <class 'numpy.float64'>

    @testing.for_all_dtypes()
    @testing.numpy_cupy_array_equal()
    def test_putmask(self, xp, dtype):
        a = testing.shaped_random(self.shape, xp, dtype=dtype, seed=3)
        mask = testing.shaped_random(self.shape, xp, dtype=numpy.bool_, seed=4)
        values = testing.shaped_random(self.values_shape,
                                       xp, dtype=dtype, seed=5)
>       ret = xp.putmask(a, mask, values)

tests/cupy_tests/indexing_tests/test_insert.py:176: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
cupy/_indexing/insert.py:139: in putmask
    _putmask_kernel(mask, values, len(values), a)
cupy/core/_kernel.pyx:840: in cupy.core._kernel.ElementwiseKernel.__call__
    kern = self._get_elementwise_kernel(dev_id, arginfos, type_map)
cupy/core/_kernel.pyx:865: in cupy.core._kernel.ElementwiseKernel._get_elementwise_kernel
    kern = _get_elementwise_kernel(
cupy/_util.pyx:59: in cupy._util.memoize.decorator.ret
    result = f(*args, **kwargs)
cupy/core/_kernel.pyx:652: in cupy.core._kernel._get_elementwise_kernel
    return _get_simple_elementwise_kernel(
cupy/core/_kernel.pyx:38: in cupy.core._kernel._get_simple_elementwise_kernel
    cpdef function.Function _get_simple_elementwise_kernel(
cupy/core/_kernel.pyx:61: in cupy.core._kernel._get_simple_elementwise_kernel
    module = compile_with_cache(module_code, options)
cupy/core/core.pyx:2021: in cupy.core.core.compile_with_cache
    return cuda.compile_with_cache(
cupy/cuda/compiler.py:428: in compile_with_cache
    return _compile_with_cache_hip(
cupy/cuda/compiler.py:829: in _compile_with_cache_hip
    temp_path = tf.name
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <tempfile._TemporaryFileWrapper object at 0x7f5011724100>, exc = None
value = None, tb = None

    def __exit__(self, exc, value, tb):
>       result = self.file.__exit__(exc, value, tb)
E       AssertionError: Only cupy raises error
E       
E       Traceback (most recent call last):
E         File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.t8hdvgF7FH/cupy/cupy/testing/_helper.py", line 47, in _call_func
E           result = impl(self, *args, **kw)
E         File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.t8hdvgF7FH/cupy/tests/cupy_tests/indexing_tests/test_insert.py", line 176, in test_putmask
E           ret = xp.putmask(a, mask, values)
E         File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.t8hdvgF7FH/cupy/cupy/_indexing/insert.py", line 139, in putmask
E           _putmask_kernel(mask, values, len(values), a)
E         File "cupy/core/_kernel.pyx", line 840, in cupy.core._kernel.ElementwiseKernel.__call__
E           kern = self._get_elementwise_kernel(dev_id, arginfos, type_map)
E         File "cupy/core/_kernel.pyx", line 865, in cupy.core._kernel.ElementwiseKernel._get_elementwise_kernel
E           kern = _get_elementwise_kernel(
E         File "cupy/_util.pyx", line 59, in cupy._util.memoize.decorator.ret
E           result = f(*args, **kwargs)
E         File "cupy/core/_kernel.pyx", line 652, in cupy.core._kernel._get_elementwise_kernel
E           return _get_simple_elementwise_kernel(
E         File "cupy/core/_kernel.pyx", line 38, in cupy.core._kernel._get_simple_elementwise_kernel
E           cpdef function.Function _get_simple_elementwise_kernel(
E         File "cupy/core/_kernel.pyx", line 61, in cupy.core._kernel._get_simple_elementwise_kernel
E           module = compile_with_cache(module_code, options)
E         File "cupy/core/core.pyx", line 2021, in cupy.core.core.compile_with_cache
E           return cuda.compile_with_cache(
E         File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.t8hdvgF7FH/cupy/cupy/cuda/compiler.py", line 428, in compile_with_cache
E           return _compile_with_cache_hip(
E         File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.t8hdvgF7FH/cupy/cupy/cuda/compiler.py", line 829, in _compile_with_cache_hip
E           temp_path = tf.name
E         File "/home/kmaeh/.pyenv/versions/3.8.7/lib/python3.8/tempfile.py", line 491, in __exit__
E           result = self.file.__exit__(exc, value, tb)
E       OSError: [Errno 28] No space left on device

/home/kmaeh/.pyenv/versions/3.8.7/lib/python3.8/tempfile.py:491: AssertionError
----------------------------- Captured stdout call -----------------------------
dtype is <class 'numpy.float64'>
_ TestPutmaskDifferentShapes_param_11_{shape=(2, 3, 4), values_shape=(5,)}.test_putmask _

self = <<cupy_tests.indexing_tests.test_insert.TestPutmaskDifferentShapes_param_11_{shape=(2, 3, 4), values_shape=(5,)} testMethod=test_putmask>  parameter: {'shape': (2, 3, 4), 'values_shape': (5,)}>
xp = <module 'cupy' from '/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.t8hdvgF7FH/cupy/cupy/__init__.py'>
dtype = <class 'numpy.float64'>

    @testing.for_all_dtypes()
    @testing.numpy_cupy_array_equal()
    def test_putmask(self, xp, dtype):
        a = testing.shaped_random(self.shape, xp, dtype=dtype, seed=3)
        mask = testing.shaped_random(self.shape, xp, dtype=numpy.bool_, seed=4)
        values = testing.shaped_random(self.values_shape,
                                       xp, dtype=dtype, seed=5)
>       ret = xp.putmask(a, mask, values)

tests/cupy_tests/indexing_tests/test_insert.py:176: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
cupy/_indexing/insert.py:139: in putmask
    _putmask_kernel(mask, values, len(values), a)
cupy/core/_kernel.pyx:840: in cupy.core._kernel.ElementwiseKernel.__call__
    kern = self._get_elementwise_kernel(dev_id, arginfos, type_map)
cupy/core/_kernel.pyx:865: in cupy.core._kernel.ElementwiseKernel._get_elementwise_kernel
    kern = _get_elementwise_kernel(
cupy/_util.pyx:59: in cupy._util.memoize.decorator.ret
    result = f(*args, **kwargs)
cupy/core/_kernel.pyx:652: in cupy.core._kernel._get_elementwise_kernel
    return _get_simple_elementwise_kernel(
cupy/core/_kernel.pyx:38: in cupy.core._kernel._get_simple_elementwise_kernel
    cpdef function.Function _get_simple_elementwise_kernel(
cupy/core/_kernel.pyx:61: in cupy.core._kernel._get_simple_elementwise_kernel
    module = compile_with_cache(module_code, options)
cupy/core/core.pyx:2021: in cupy.core.core.compile_with_cache
    return cuda.compile_with_cache(
cupy/cuda/compiler.py:428: in compile_with_cache
    return _compile_with_cache_hip(
cupy/cuda/compiler.py:829: in _compile_with_cache_hip
    temp_path = tf.name
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <tempfile._TemporaryFileWrapper object at 0x7f50108e1220>, exc = None
value = None, tb = None

    def __exit__(self, exc, value, tb):
>       result = self.file.__exit__(exc, value, tb)
E       AssertionError: Only cupy raises error
E       
E       Traceback (most recent call last):
E         File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.t8hdvgF7FH/cupy/cupy/testing/_helper.py", line 47, in _call_func
E           result = impl(self, *args, **kw)
E         File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.t8hdvgF7FH/cupy/tests/cupy_tests/indexing_tests/test_insert.py", line 176, in test_putmask
E           ret = xp.putmask(a, mask, values)
E         File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.t8hdvgF7FH/cupy/cupy/_indexing/insert.py", line 139, in putmask
E           _putmask_kernel(mask, values, len(values), a)
E         File "cupy/core/_kernel.pyx", line 840, in cupy.core._kernel.ElementwiseKernel.__call__
E           kern = self._get_elementwise_kernel(dev_id, arginfos, type_map)
E         File "cupy/core/_kernel.pyx", line 865, in cupy.core._kernel.ElementwiseKernel._get_elementwise_kernel
E           kern = _get_elementwise_kernel(
E         File "cupy/_util.pyx", line 59, in cupy._util.memoize.decorator.ret
E           result = f(*args, **kwargs)
E         File "cupy/core/_kernel.pyx", line 652, in cupy.core._kernel._get_elementwise_kernel
E           return _get_simple_elementwise_kernel(
E         File "cupy/core/_kernel.pyx", line 38, in cupy.core._kernel._get_simple_elementwise_kernel
E           cpdef function.Function _get_simple_elementwise_kernel(
E         File "cupy/core/_kernel.pyx", line 61, in cupy.core._kernel._get_simple_elementwise_kernel
E           module = compile_with_cache(module_code, options)
E         File "cupy/core/core.pyx", line 2021, in cupy.core.core.compile_with_cache
E           return cuda.compile_with_cache(
E         File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.t8hdvgF7FH/cupy/cupy/cuda/compiler.py", line 428, in compile_with_cache
E           return _compile_with_cache_hip(
E         File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.t8hdvgF7FH/cupy/cupy/cuda/compiler.py", line 829, in _compile_with_cache_hip
E           temp_path = tf.name
E         File "/home/kmaeh/.pyenv/versions/3.8.7/lib/python3.8/tempfile.py", line 491, in __exit__
E           result = self.file.__exit__(exc, value, tb)
E       OSError: [Errno 28] No space left on device

/home/kmaeh/.pyenv/versions/3.8.7/lib/python3.8/tempfile.py:491: AssertionError
----------------------------- Captured stdout call -----------------------------
dtype is <class 'numpy.float64'>
_ TestFillDiagonal_param_0_{shape=(3, 3), val=1, wrap=True}.test_columnar_slice _

self = <<cupy_tests.indexing_tests.test_insert.TestFillDiagonal_param_0_{shape=(3, 3), val=1, wrap=True} testMethod=test_columnar_slice>  parameter: {'shape': (3, 3), 'val': 1, 'wrap': True}>
xp = <module 'cupy' from '/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.t8hdvgF7FH/cupy/cupy/__init__.py'>
dtype = <class 'numpy.float64'>

    @testing.for_all_dtypes()
    @testing.numpy_cupy_array_equal()
    def test_columnar_slice(self, xp, dtype):  # see cupy#2970
        if self.shape == (2, 2, 2):
            pytest.skip(
                'The length of each dimension must be the same after slicing')
        a = testing.shaped_arange(self.shape, xp, dtype)
        val = self._compute_val(xp)
>       xp.fill_diagonal(a[:, 1:], val=val, wrap=self.wrap)

tests/cupy_tests/indexing_tests/test_insert.py:260: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
cupy/_indexing/insert.py:180: in fill_diagonal
    a.flat[:end:step] = val
cupy/_indexing/iterate.py:67: in __setitem__
    _flatiter_setitem_slice(value, s_start, s_step, base, size=size)
cupy/core/_kernel.pyx:840: in cupy.core._kernel.ElementwiseKernel.__call__
    kern = self._get_elementwise_kernel(dev_id, arginfos, type_map)
cupy/core/_kernel.pyx:865: in cupy.core._kernel.ElementwiseKernel._get_elementwise_kernel
    kern = _get_elementwise_kernel(
cupy/_util.pyx:59: in cupy._util.memoize.decorator.ret
    result = f(*args, **kwargs)
cupy/core/_kernel.pyx:652: in cupy.core._kernel._get_elementwise_kernel
    return _get_simple_elementwise_kernel(
cupy/core/_kernel.pyx:38: in cupy.core._kernel._get_simple_elementwise_kernel
    cpdef function.Function _get_simple_elementwise_kernel(
cupy/core/_kernel.pyx:61: in cupy.core._kernel._get_simple_elementwise_kernel
    module = compile_with_cache(module_code, options)
cupy/core/core.pyx:2021: in cupy.core.core.compile_with_cache
    return cuda.compile_with_cache(
cupy/cuda/compiler.py:428: in compile_with_cache
    return _compile_with_cache_hip(
cupy/cuda/compiler.py:829: in _compile_with_cache_hip
    temp_path = tf.name
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <tempfile._TemporaryFileWrapper object at 0x7f50101cd5b0>, exc = None
value = None, tb = None

    def __exit__(self, exc, value, tb):
>       result = self.file.__exit__(exc, value, tb)
E       AssertionError: Only cupy raises error
E       
E       Traceback (most recent call last):
E         File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.t8hdvgF7FH/cupy/cupy/testing/_helper.py", line 47, in _call_func
E           result = impl(self, *args, **kw)
E         File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.t8hdvgF7FH/cupy/tests/cupy_tests/indexing_tests/test_insert.py", line 260, in test_columnar_slice
E           xp.fill_diagonal(a[:, 1:], val=val, wrap=self.wrap)
E         File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.t8hdvgF7FH/cupy/cupy/_indexing/insert.py", line 180, in fill_diagonal
E           a.flat[:end:step] = val
E         File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.t8hdvgF7FH/cupy/cupy/_indexing/iterate.py", line 67, in __setitem__
E           _flatiter_setitem_slice(value, s_start, s_step, base, size=size)
E         File "cupy/core/_kernel.pyx", line 840, in cupy.core._kernel.ElementwiseKernel.__call__
E           kern = self._get_elementwise_kernel(dev_id, arginfos, type_map)
E         File "cupy/core/_kernel.pyx", line 865, in cupy.core._kernel.ElementwiseKernel._get_elementwise_kernel
E           kern = _get_elementwise_kernel(
E         File "cupy/_util.pyx", line 59, in cupy._util.memoize.decorator.ret
E           result = f(*args, **kwargs)
E         File "cupy/core/_kernel.pyx", line 652, in cupy.core._kernel._get_elementwise_kernel
E           return _get_simple_elementwise_kernel(
E         File "cupy/core/_kernel.pyx", line 38, in cupy.core._kernel._get_simple_elementwise_kernel
E           cpdef function.Function _get_simple_elementwise_kernel(
E         File "cupy/core/_kernel.pyx", line 61, in cupy.core._kernel._get_simple_elementwise_kernel
E           module = compile_with_cache(module_code, options)
E         File "cupy/core/core.pyx", line 2021, in cupy.core.core.compile_with_cache
E           return cuda.compile_with_cache(
E         File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.t8hdvgF7FH/cupy/cupy/cuda/compiler.py", line 428, in compile_with_cache
E           return _compile_with_cache_hip(
E         File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.t8hdvgF7FH/cupy/cupy/cuda/compiler.py", line 829, in _compile_with_cache_hip
E           temp_path = tf.name
E         File "/home/kmaeh/.pyenv/versions/3.8.7/lib/python3.8/tempfile.py", line 491, in __exit__
E           result = self.file.__exit__(exc, value, tb)
E       OSError: [Errno 28] No space left on device

/home/kmaeh/.pyenv/versions/3.8.7/lib/python3.8/tempfile.py:491: AssertionError
----------------------------- Captured stdout call -----------------------------
dtype is <class 'numpy.float64'>
_ TestFillDiagonal_param_0_{shape=(3, 3), val=1, wrap=True}.test_fill_diagonal _

self = <<cupy_tests.indexing_tests.test_insert.TestFillDiagonal_param_0_{shape=(3, 3), val=1, wrap=True} testMethod=test_fill_diagonal>  parameter: {'shape': (3, 3), 'val': 1, 'wrap': True}>
xp = <module 'cupy' from '/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.t8hdvgF7FH/cupy/cupy/__init__.py'>
dtype = <class 'numpy.float64'>

    @testing.for_all_dtypes()
    @testing.numpy_cupy_array_equal()
    def test_fill_diagonal(self, xp, dtype):
        a = testing.shaped_arange(self.shape, xp, dtype)
        val = self._compute_val(xp)
>       xp.fill_diagonal(a, val=val, wrap=self.wrap)

tests/cupy_tests/indexing_tests/test_insert.py:249: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
cupy/_indexing/insert.py:180: in fill_diagonal
    a.flat[:end:step] = val
cupy/_indexing/iterate.py:67: in __setitem__
    _flatiter_setitem_slice(value, s_start, s_step, base, size=size)
cupy/core/_kernel.pyx:840: in cupy.core._kernel.ElementwiseKernel.__call__
    kern = self._get_elementwise_kernel(dev_id, arginfos, type_map)
cupy/core/_kernel.pyx:865: in cupy.core._kernel.ElementwiseKernel._get_elementwise_kernel
    kern = _get_elementwise_kernel(
cupy/_util.pyx:59: in cupy._util.memoize.decorator.ret
    result = f(*args, **kwargs)
cupy/core/_kernel.pyx:652: in cupy.core._kernel._get_elementwise_kernel
    return _get_simple_elementwise_kernel(
cupy/core/_kernel.pyx:38: in cupy.core._kernel._get_simple_elementwise_kernel
    cpdef function.Function _get_simple_elementwise_kernel(
cupy/core/_kernel.pyx:61: in cupy.core._kernel._get_simple_elementwise_kernel
    module = compile_with_cache(module_code, options)
cupy/core/core.pyx:2021: in cupy.core.core.compile_with_cache
    return cuda.compile_with_cache(
cupy/cuda/compiler.py:428: in compile_with_cache
    return _compile_with_cache_hip(
cupy/cuda/compiler.py:829: in _compile_with_cache_hip
    temp_path = tf.name
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <tempfile._TemporaryFileWrapper object at 0x7f50116d2dc0>, exc = None
value = None, tb = None

    def __exit__(self, exc, value, tb):
>       result = self.file.__exit__(exc, value, tb)
E       AssertionError: Only cupy raises error
E       
E       Traceback (most recent call last):
E         File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.t8hdvgF7FH/cupy/cupy/testing/_helper.py", line 47, in _call_func
E           result = impl(self, *args, **kw)
E         File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.t8hdvgF7FH/cupy/tests/cupy_tests/indexing_tests/test_insert.py", line 249, in test_fill_diagonal
E           xp.fill_diagonal(a, val=val, wrap=self.wrap)
E         File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.t8hdvgF7FH/cupy/cupy/_indexing/insert.py", line 180, in fill_diagonal
E           a.flat[:end:step] = val
E         File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.t8hdvgF7FH/cupy/cupy/_indexing/iterate.py", line 67, in __setitem__
E           _flatiter_setitem_slice(value, s_start, s_step, base, size=size)
E         File "cupy/core/_kernel.pyx", line 840, in cupy.core._kernel.ElementwiseKernel.__call__
E           kern = self._get_elementwise_kernel(dev_id, arginfos, type_map)
E         File "cupy/core/_kernel.pyx", line 865, in cupy.core._kernel.ElementwiseKernel._get_elementwise_kernel
E           kern = _get_elementwise_kernel(
E         File "cupy/_util.pyx", line 59, in cupy._util.memoize.decorator.ret
E           result = f(*args, **kwargs)
E         File "cupy/core/_kernel.pyx", line 652, in cupy.core._kernel._get_elementwise_kernel
E           return _get_simple_elementwise_kernel(
E         File "cupy/core/_kernel.pyx", line 38, in cupy.core._kernel._get_simple_elementwise_kernel
E           cpdef function.Function _get_simple_elementwise_kernel(
E         File "cupy/core/_kernel.pyx", line 61, in cupy.core._kernel._get_simple_elementwise_kernel
E           module = compile_with_cache(module_code, options)
E         File "cupy/core/core.pyx", line 2021, in cupy.core.core.compile_with_cache
E           return cuda.compile_with_cache(
E         File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.t8hdvgF7FH/cupy/cupy/cuda/compiler.py", line 428, in compile_with_cache
E           return _compile_with_cache_hip(
E         File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.t8hdvgF7FH/cupy/cupy/cuda/compiler.py", line 829, in _compile_with_cache_hip
E           temp_path = tf.name
E         File "/home/kmaeh/.pyenv/versions/3.8.7/lib/python3.8/tempfile.py", line 491, in __exit__
E           result = self.file.__exit__(exc, value, tb)
E       OSError: [Errno 28] No space left on device

/home/kmaeh/.pyenv/versions/3.8.7/lib/python3.8/tempfile.py:491: AssertionError
----------------------------- Captured stdout call -----------------------------
dtype is <class 'numpy.float64'>
_ TestFillDiagonal_param_1_{shape=(3, 3), val=1, wrap=False}.test_columnar_slice _

self = <<cupy_tests.indexing_tests.test_insert.TestFillDiagonal_param_1_{shape=(3, 3), val=1, wrap=False} testMethod=test_columnar_slice>  parameter: {'shape': (3, 3), 'val': 1, 'wrap': False}>
xp = <module 'cupy' from '/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.t8hdvgF7FH/cupy/cupy/__init__.py'>
dtype = <class 'numpy.float64'>

    @testing.for_all_dtypes()
    @testing.numpy_cupy_array_equal()
    def test_columnar_slice(self, xp, dtype):  # see cupy#2970
        if self.shape == (2, 2, 2):
            pytest.skip(
                'The length of each dimension must be the same after slicing')
        a = testing.shaped_arange(self.shape, xp, dtype)
        val = self._compute_val(xp)
>       xp.fill_diagonal(a[:, 1:], val=val, wrap=self.wrap)

tests/cupy_tests/indexing_tests/test_insert.py:260: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
cupy/_indexing/insert.py:180: in fill_diagonal
    a.flat[:end:step] = val
cupy/_indexing/iterate.py:67: in __setitem__
    _flatiter_setitem_slice(value, s_start, s_step, base, size=size)
cupy/core/_kernel.pyx:840: in cupy.core._kernel.ElementwiseKernel.__call__
    kern = self._get_elementwise_kernel(dev_id, arginfos, type_map)
cupy/core/_kernel.pyx:865: in cupy.core._kernel.ElementwiseKernel._get_elementwise_kernel
    kern = _get_elementwise_kernel(
cupy/_util.pyx:59: in cupy._util.memoize.decorator.ret
    result = f(*args, **kwargs)
cupy/core/_kernel.pyx:652: in cupy.core._kernel._get_elementwise_kernel
    return _get_simple_elementwise_kernel(
cupy/core/_kernel.pyx:38: in cupy.core._kernel._get_simple_elementwise_kernel
    cpdef function.Function _get_simple_elementwise_kernel(
cupy/core/_kernel.pyx:61: in cupy.core._kernel._get_simple_elementwise_kernel
    module = compile_with_cache(module_code, options)
cupy/core/core.pyx:2021: in cupy.core.core.compile_with_cache
    return cuda.compile_with_cache(
cupy/cuda/compiler.py:428: in compile_with_cache
    return _compile_with_cache_hip(
cupy/cuda/compiler.py:829: in _compile_with_cache_hip
    temp_path = tf.name
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <tempfile._TemporaryFileWrapper object at 0x7f5010e975e0>, exc = None
value = None, tb = None

    def __exit__(self, exc, value, tb):
>       result = self.file.__exit__(exc, value, tb)
E       AssertionError: Only cupy raises error
E       
E       Traceback (most recent call last):
E         File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.t8hdvgF7FH/cupy/cupy/testing/_helper.py", line 47, in _call_func
E           result = impl(self, *args, **kw)
E         File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.t8hdvgF7FH/cupy/tests/cupy_tests/indexing_tests/test_insert.py", line 260, in test_columnar_slice
E           xp.fill_diagonal(a[:, 1:], val=val, wrap=self.wrap)
E         File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.t8hdvgF7FH/cupy/cupy/_indexing/insert.py", line 180, in fill_diagonal
E           a.flat[:end:step] = val
E         File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.t8hdvgF7FH/cupy/cupy/_indexing/iterate.py", line 67, in __setitem__
E           _flatiter_setitem_slice(value, s_start, s_step, base, size=size)
E         File "cupy/core/_kernel.pyx", line 840, in cupy.core._kernel.ElementwiseKernel.__call__
E           kern = self._get_elementwise_kernel(dev_id, arginfos, type_map)
E         File "cupy/core/_kernel.pyx", line 865, in cupy.core._kernel.ElementwiseKernel._get_elementwise_kernel
E           kern = _get_elementwise_kernel(
E         File "cupy/_util.pyx", line 59, in cupy._util.memoize.decorator.ret
E           result = f(*args, **kwargs)
E         File "cupy/core/_kernel.pyx", line 652, in cupy.core._kernel._get_elementwise_kernel
E           return _get_simple_elementwise_kernel(
E         File "cupy/core/_kernel.pyx", line 38, in cupy.core._kernel._get_simple_elementwise_kernel
E           cpdef function.Function _get_simple_elementwise_kernel(
E         File "cupy/core/_kernel.pyx", line 61, in cupy.core._kernel._get_simple_elementwise_kernel
E           module = compile_with_cache(module_code, options)
E         File "cupy/core/core.pyx", line 2021, in cupy.core.core.compile_with_cache
E           return cuda.compile_with_cache(
E         File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.t8hdvgF7FH/cupy/cupy/cuda/compiler.py", line 428, in compile_with_cache
E           return _compile_with_cache_hip(
E         File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.t8hdvgF7FH/cupy/cupy/cuda/compiler.py", line 829, in _compile_with_cache_hip
E           temp_path = tf.name
E         File "/home/kmaeh/.pyenv/versions/3.8.7/lib/python3.8/tempfile.py", line 491, in __exit__
E           result = self.file.__exit__(exc, value, tb)
E       OSError: [Errno 28] No space left on device

/home/kmaeh/.pyenv/versions/3.8.7/lib/python3.8/tempfile.py:491: AssertionError
----------------------------- Captured stdout call -----------------------------
dtype is <class 'numpy.float64'>
_ TestFillDiagonal_param_1_{shape=(3, 3), val=1, wrap=False}.test_fill_diagonal _

self = <<cupy_tests.indexing_tests.test_insert.TestFillDiagonal_param_1_{shape=(3, 3), val=1, wrap=False} testMethod=test_fill_diagonal>  parameter: {'shape': (3, 3), 'val': 1, 'wrap': False}>
xp = <module 'cupy' from '/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.t8hdvgF7FH/cupy/cupy/__init__.py'>
dtype = <class 'numpy.float64'>

    @testing.for_all_dtypes()
    @testing.numpy_cupy_array_equal()
    def test_fill_diagonal(self, xp, dtype):
        a = testing.shaped_arange(self.shape, xp, dtype)
        val = self._compute_val(xp)
>       xp.fill_diagonal(a, val=val, wrap=self.wrap)

tests/cupy_tests/indexing_tests/test_insert.py:249: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
cupy/_indexing/insert.py:180: in fill_diagonal
    a.flat[:end:step] = val
cupy/_indexing/iterate.py:67: in __setitem__
    _flatiter_setitem_slice(value, s_start, s_step, base, size=size)
cupy/core/_kernel.pyx:840: in cupy.core._kernel.ElementwiseKernel.__call__
    kern = self._get_elementwise_kernel(dev_id, arginfos, type_map)
cupy/core/_kernel.pyx:865: in cupy.core._kernel.ElementwiseKernel._get_elementwise_kernel
    kern = _get_elementwise_kernel(
cupy/_util.pyx:59: in cupy._util.memoize.decorator.ret
    result = f(*args, **kwargs)
cupy/core/_kernel.pyx:652: in cupy.core._kernel._get_elementwise_kernel
    return _get_simple_elementwise_kernel(
cupy/core/_kernel.pyx:38: in cupy.core._kernel._get_simple_elementwise_kernel
    cpdef function.Function _get_simple_elementwise_kernel(
cupy/core/_kernel.pyx:61: in cupy.core._kernel._get_simple_elementwise_kernel
    module = compile_with_cache(module_code, options)
cupy/core/core.pyx:2021: in cupy.core.core.compile_with_cache
    return cuda.compile_with_cache(
cupy/cuda/compiler.py:428: in compile_with_cache
    return _compile_with_cache_hip(
cupy/cuda/compiler.py:829: in _compile_with_cache_hip
    temp_path = tf.name
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <tempfile._TemporaryFileWrapper object at 0x7f5010e411c0>, exc = None
value = None, tb = None

    def __exit__(self, exc, value, tb):
>       result = self.file.__exit__(exc, value, tb)
E       AssertionError: Only cupy raises error
E       
E       Traceback (most recent call last):
E         File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.t8hdvgF7FH/cupy/cupy/testing/_helper.py", line 47, in _call_func
E           result = impl(self, *args, **kw)
E         File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.t8hdvgF7FH/cupy/tests/cupy_tests/indexing_tests/test_insert.py", line 249, in test_fill_diagonal
E           xp.fill_diagonal(a, val=val, wrap=self.wrap)
E         File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.t8hdvgF7FH/cupy/cupy/_indexing/insert.py", line 180, in fill_diagonal
E           a.flat[:end:step] = val
E         File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.t8hdvgF7FH/cupy/cupy/_indexing/iterate.py", line 67, in __setitem__
E           _flatiter_setitem_slice(value, s_start, s_step, base, size=size)
E         File "cupy/core/_kernel.pyx", line 840, in cupy.core._kernel.ElementwiseKernel.__call__
E           kern = self._get_elementwise_kernel(dev_id, arginfos, type_map)
E         File "cupy/core/_kernel.pyx", line 865, in cupy.core._kernel.ElementwiseKernel._get_elementwise_kernel
E           kern = _get_elementwise_kernel(
E         File "cupy/_util.pyx", line 59, in cupy._util.memoize.decorator.ret
E           result = f(*args, **kwargs)
E         File "cupy/core/_kernel.pyx", line 652, in cupy.core._kernel._get_elementwise_kernel
E           return _get_simple_elementwise_kernel(
E         File "cupy/core/_kernel.pyx", line 38, in cupy.core._kernel._get_simple_elementwise_kernel
E           cpdef function.Function _get_simple_elementwise_kernel(
E         File "cupy/core/_kernel.pyx", line 61, in cupy.core._kernel._get_simple_elementwise_kernel
E           module = compile_with_cache(module_code, options)
E         File "cupy/core/core.pyx", line 2021, in cupy.core.core.compile_with_cache
E           return cuda.compile_with_cache(
E         File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.t8hdvgF7FH/cupy/cupy/cuda/compiler.py", line 428, in compile_with_cache
E           return _compile_with_cache_hip(
E         File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.t8hdvgF7FH/cupy/cupy/cuda/compiler.py", line 829, in _compile_with_cache_hip
E           temp_path = tf.name
E         File "/home/kmaeh/.pyenv/versions/3.8.7/lib/python3.8/tempfile.py", line 491, in __exit__
E           result = self.file.__exit__(exc, value, tb)
E       OSError: [Errno 28] No space left on device

/home/kmaeh/.pyenv/versions/3.8.7/lib/python3.8/tempfile.py:491: AssertionError
----------------------------- Captured stdout call -----------------------------
dtype is <class 'numpy.float64'>
_ TestFillDiagonal_param_2_{shape=(3, 3), val=0, wrap=True}.test_columnar_slice _

self = <<cupy_tests.indexing_tests.test_insert.TestFillDiagonal_param_2_{shape=(3, 3), val=0, wrap=True} testMethod=test_columnar_slice>  parameter: {'shape': (3, 3), 'val': 0, 'wrap': True}>
xp = <module 'cupy' from '/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.t8hdvgF7FH/cupy/cupy/__init__.py'>
dtype = <class 'numpy.float64'>

    @testing.for_all_dtypes()
    @testing.numpy_cupy_array_equal()
    def test_columnar_slice(self, xp, dtype):  # see cupy#2970
        if self.shape == (2, 2, 2):
            pytest.skip(
                'The length of each dimension must be the same after slicing')
        a = testing.shaped_arange(self.shape, xp, dtype)
        val = self._compute_val(xp)
>       xp.fill_diagonal(a[:, 1:], val=val, wrap=self.wrap)

tests/cupy_tests/indexing_tests/test_insert.py:260: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
cupy/_indexing/insert.py:180: in fill_diagonal
    a.flat[:end:step] = val
cupy/_indexing/iterate.py:67: in __setitem__
    _flatiter_setitem_slice(value, s_start, s_step, base, size=size)
cupy/core/_kernel.pyx:840: in cupy.core._kernel.ElementwiseKernel.__call__
    kern = self._get_elementwise_kernel(dev_id, arginfos, type_map)
cupy/core/_kernel.pyx:865: in cupy.core._kernel.ElementwiseKernel._get_elementwise_kernel
    kern = _get_elementwise_kernel(
cupy/_util.pyx:59: in cupy._util.memoize.decorator.ret
    result = f(*args, **kwargs)
cupy/core/_kernel.pyx:652: in cupy.core._kernel._get_elementwise_kernel
    return _get_simple_elementwise_kernel(
cupy/core/_kernel.pyx:38: in cupy.core._kernel._get_simple_elementwise_kernel
    cpdef function.Function _get_simple_elementwise_kernel(
cupy/core/_kernel.pyx:61: in cupy.core._kernel._get_simple_elementwise_kernel
    module = compile_with_cache(module_code, options)
cupy/core/core.pyx:2021: in cupy.core.core.compile_with_cache
    return cuda.compile_with_cache(
cupy/cuda/compiler.py:428: in compile_with_cache
    return _compile_with_cache_hip(
cupy/cuda/compiler.py:829: in _compile_with_cache_hip
    temp_path = tf.name
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <tempfile._TemporaryFileWrapper object at 0x7f50108ab820>, exc = None
value = None, tb = None

    def __exit__(self, exc, value, tb):
>       result = self.file.__exit__(exc, value, tb)
E       AssertionError: Only cupy raises error
E       
E       Traceback (most recent call last):
E         File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.t8hdvgF7FH/cupy/cupy/testing/_helper.py", line 47, in _call_func
E           result = impl(self, *args, **kw)
E         File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.t8hdvgF7FH/cupy/tests/cupy_tests/indexing_tests/test_insert.py", line 260, in test_columnar_slice
E           xp.fill_diagonal(a[:, 1:], val=val, wrap=self.wrap)
E         File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.t8hdvgF7FH/cupy/cupy/_indexing/insert.py", line 180, in fill_diagonal
E           a.flat[:end:step] = val
E         File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.t8hdvgF7FH/cupy/cupy/_indexing/iterate.py", line 67, in __setitem__
E           _flatiter_setitem_slice(value, s_start, s_step, base, size=size)
E         File "cupy/core/_kernel.pyx", line 840, in cupy.core._kernel.ElementwiseKernel.__call__
E           kern = self._get_elementwise_kernel(dev_id, arginfos, type_map)
E         File "cupy/core/_kernel.pyx", line 865, in cupy.core._kernel.ElementwiseKernel._get_elementwise_kernel
E           kern = _get_elementwise_kernel(
E         File "cupy/_util.pyx", line 59, in cupy._util.memoize.decorator.ret
E           result = f(*args, **kwargs)
E         File "cupy/core/_kernel.pyx", line 652, in cupy.core._kernel._get_elementwise_kernel
E           return _get_simple_elementwise_kernel(
E         File "cupy/core/_kernel.pyx", line 38, in cupy.core._kernel._get_simple_elementwise_kernel
E           cpdef function.Function _get_simple_elementwise_kernel(
E         File "cupy/core/_kernel.pyx", line 61, in cupy.core._kernel._get_simple_elementwise_kernel
E           module = compile_with_cache(module_code, options)
E         File "cupy/core/core.pyx", line 2021, in cupy.core.core.compile_with_cache
E           return cuda.compile_with_cache(
E         File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.t8hdvgF7FH/cupy/cupy/cuda/compiler.py", line 428, in compile_with_cache
E           return _compile_with_cache_hip(
E         File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.t8hdvgF7FH/cupy/cupy/cuda/compiler.py", line 829, in _compile_with_cache_hip
E           temp_path = tf.name
E         File "/home/kmaeh/.pyenv/versions/3.8.7/lib/python3.8/tempfile.py", line 491, in __exit__
E           result = self.file.__exit__(exc, value, tb)
E       OSError: [Errno 28] No space left on device

/home/kmaeh/.pyenv/versions/3.8.7/lib/python3.8/tempfile.py:491: AssertionError
----------------------------- Captured stdout call -----------------------------
dtype is <class 'numpy.float64'>
_ TestFillDiagonal_param_2_{shape=(3, 3), val=0, wrap=True}.test_fill_diagonal _

self = <<cupy_tests.indexing_tests.test_insert.TestFillDiagonal_param_2_{shape=(3, 3), val=0, wrap=True} testMethod=test_fill_diagonal>  parameter: {'shape': (3, 3), 'val': 0, 'wrap': True}>
xp = <module 'cupy' from '/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.t8hdvgF7FH/cupy/cupy/__init__.py'>
dtype = <class 'numpy.float64'>

    @testing.for_all_dtypes()
    @testing.numpy_cupy_array_equal()
    def test_fill_diagonal(self, xp, dtype):
        a = testing.shaped_arange(self.shape, xp, dtype)
        val = self._compute_val(xp)
>       xp.fill_diagonal(a, val=val, wrap=self.wrap)

tests/cupy_tests/indexing_tests/test_insert.py:249: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
cupy/_indexing/insert.py:180: in fill_diagonal
    a.flat[:end:step] = val
cupy/_indexing/iterate.py:67: in __setitem__
    _flatiter_setitem_slice(value, s_start, s_step, base, size=size)
cupy/core/_kernel.pyx:840: in cupy.core._kernel.ElementwiseKernel.__call__
    kern = self._get_elementwise_kernel(dev_id, arginfos, type_map)
cupy/core/_kernel.pyx:865: in cupy.core._kernel.ElementwiseKernel._get_elementwise_kernel
    kern = _get_elementwise_kernel(
cupy/_util.pyx:59: in cupy._util.memoize.decorator.ret
    result = f(*args, **kwargs)
cupy/core/_kernel.pyx:652: in cupy.core._kernel._get_elementwise_kernel
    return _get_simple_elementwise_kernel(
cupy/core/_kernel.pyx:38: in cupy.core._kernel._get_simple_elementwise_kernel
    cpdef function.Function _get_simple_elementwise_kernel(
cupy/core/_kernel.pyx:61: in cupy.core._kernel._get_simple_elementwise_kernel
    module = compile_with_cache(module_code, options)
cupy/core/core.pyx:2021: in cupy.core.core.compile_with_cache
    return cuda.compile_with_cache(
cupy/cuda/compiler.py:428: in compile_with_cache
    return _compile_with_cache_hip(
cupy/cuda/compiler.py:829: in _compile_with_cache_hip
    temp_path = tf.name
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <tempfile._TemporaryFileWrapper object at 0x7f5010826250>, exc = None
value = None, tb = None

    def __exit__(self, exc, value, tb):
>       result = self.file.__exit__(exc, value, tb)
E       AssertionError: Only cupy raises error
E       
E       Traceback (most recent call last):
E         File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.t8hdvgF7FH/cupy/cupy/testing/_helper.py", line 47, in _call_func
E           result = impl(self, *args, **kw)
E         File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.t8hdvgF7FH/cupy/tests/cupy_tests/indexing_tests/test_insert.py", line 249, in test_fill_diagonal
E           xp.fill_diagonal(a, val=val, wrap=self.wrap)
E         File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.t8hdvgF7FH/cupy/cupy/_indexing/insert.py", line 180, in fill_diagonal
E           a.flat[:end:step] = val
E         File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.t8hdvgF7FH/cupy/cupy/_indexing/iterate.py", line 67, in __setitem__
E           _flatiter_setitem_slice(value, s_start, s_step, base, size=size)
E         File "cupy/core/_kernel.pyx", line 840, in cupy.core._kernel.ElementwiseKernel.__call__
E           kern = self._get_elementwise_kernel(dev_id, arginfos, type_map)
E         File "cupy/core/_kernel.pyx", line 865, in cupy.core._kernel.ElementwiseKernel._get_elementwise_kernel
E           kern = _get_elementwise_kernel(
E         File "cupy/_util.pyx", line 59, in cupy._util.memoize.decorator.ret
E           result = f(*args, **kwargs)
E         File "cupy/core/_kernel.pyx", line 652, in cupy.core._kernel._get_elementwise_kernel
E           return _get_simple_elementwise_kernel(
E         File "cupy/core/_kernel.pyx", line 38, in cupy.core._kernel._get_simple_elementwise_kernel
E           cpdef function.Function _get_simple_elementwise_kernel(
E         File "cupy/core/_kernel.pyx", line 61, in cupy.core._kernel._get_simple_elementwise_kernel
E           module = compile_with_cache(module_code, options)
E         File "cupy/core/core.pyx", line 2021, in cupy.core.core.compile_with_cache
E           return cuda.compile_with_cache(
E         File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.t8hdvgF7FH/cupy/cupy/cuda/compiler.py", line 428, in compile_with_cache
E           return _compile_with_cache_hip(
E         File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.t8hdvgF7FH/cupy/cupy/cuda/compiler.py", line 829, in _compile_with_cache_hip
E           temp_path = tf.name
E         File "/home/kmaeh/.pyenv/versions/3.8.7/lib/python3.8/tempfile.py", line 491, in __exit__
E           result = self.file.__exit__(exc, value, tb)
E       OSError: [Errno 28] No space left on device

/home/kmaeh/.pyenv/versions/3.8.7/lib/python3.8/tempfile.py:491: AssertionError
----------------------------- Captured stdout call -----------------------------
dtype is <class 'numpy.float64'>
_ TestFillDiagonal_param_3_{shape=(3, 3), val=0, wrap=False}.test_columnar_slice _

self = <<cupy_tests.indexing_tests.test_insert.TestFillDiagonal_param_3_{shape=(3, 3), val=0, wrap=False} testMethod=test_columnar_slice>  parameter: {'shape': (3, 3), 'val': 0, 'wrap': False}>
xp = <module 'cupy' from '/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.t8hdvgF7FH/cupy/cupy/__init__.py'>
dtype = <class 'numpy.float64'>

    @testing.for_all_dtypes()
    @testing.numpy_cupy_array_equal()
    def test_columnar_slice(self, xp, dtype):  # see cupy#2970
        if self.shape == (2, 2, 2):
            pytest.skip(
                'The length of each dimension must be the same after slicing')
        a = testing.shaped_arange(self.shape, xp, dtype)
        val = self._compute_val(xp)
>       xp.fill_diagonal(a[:, 1:], val=val, wrap=self.wrap)

tests/cupy_tests/indexing_tests/test_insert.py:260: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
cupy/_indexing/insert.py:180: in fill_diagonal
    a.flat[:end:step] = val
cupy/_indexing/iterate.py:67: in __setitem__
    _flatiter_setitem_slice(value, s_start, s_step, base, size=size)
cupy/core/_kernel.pyx:840: in cupy.core._kernel.ElementwiseKernel.__call__
    kern = self._get_elementwise_kernel(dev_id, arginfos, type_map)
cupy/core/_kernel.pyx:865: in cupy.core._kernel.ElementwiseKernel._get_elementwise_kernel
    kern = _get_elementwise_kernel(
cupy/_util.pyx:59: in cupy._util.memoize.decorator.ret
    result = f(*args, **kwargs)
cupy/core/_kernel.pyx:652: in cupy.core._kernel._get_elementwise_kernel
    return _get_simple_elementwise_kernel(
cupy/core/_kernel.pyx:38: in cupy.core._kernel._get_simple_elementwise_kernel
    cpdef function.Function _get_simple_elementwise_kernel(
cupy/core/_kernel.pyx:61: in cupy.core._kernel._get_simple_elementwise_kernel
    module = compile_with_cache(module_code, options)
cupy/core/core.pyx:2021: in cupy.core.core.compile_with_cache
    return cuda.compile_with_cache(
cupy/cuda/compiler.py:428: in compile_with_cache
    return _compile_with_cache_hip(
cupy/cuda/compiler.py:829: in _compile_with_cache_hip
    temp_path = tf.name
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <tempfile._TemporaryFileWrapper object at 0x7f50101fe490>, exc = None
value = None, tb = None

    def __exit__(self, exc, value, tb):
>       result = self.file.__exit__(exc, value, tb)
E       AssertionError: Only cupy raises error
E       
E       Traceback (most recent call last):
E         File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.t8hdvgF7FH/cupy/cupy/testing/_helper.py", line 47, in _call_func
E           result = impl(self, *args, **kw)
E         File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.t8hdvgF7FH/cupy/tests/cupy_tests/indexing_tests/test_insert.py", line 260, in test_columnar_slice
E           xp.fill_diagonal(a[:, 1:], val=val, wrap=self.wrap)
E         File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.t8hdvgF7FH/cupy/cupy/_indexing/insert.py", line 180, in fill_diagonal
E           a.flat[:end:step] = val
E         File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.t8hdvgF7FH/cupy/cupy/_indexing/iterate.py", line 67, in __setitem__
E           _flatiter_setitem_slice(value, s_start, s_step, base, size=size)
E         File "cupy/core/_kernel.pyx", line 840, in cupy.core._kernel.ElementwiseKernel.__call__
E           kern = self._get_elementwise_kernel(dev_id, arginfos, type_map)
E         File "cupy/core/_kernel.pyx", line 865, in cupy.core._kernel.ElementwiseKernel._get_elementwise_kernel
E           kern = _get_elementwise_kernel(
E         File "cupy/_util.pyx", line 59, in cupy._util.memoize.decorator.ret
E           result = f(*args, **kwargs)
E         File "cupy/core/_kernel.pyx", line 652, in cupy.core._kernel._get_elementwise_kernel
E           return _get_simple_elementwise_kernel(
E         File "cupy/core/_kernel.pyx", line 38, in cupy.core._kernel._get_simple_elementwise_kernel
E           cpdef function.Function _get_simple_elementwise_kernel(
E         File "cupy/core/_kernel.pyx", line 61, in cupy.core._kernel._get_simple_elementwise_kernel
E           module = compile_with_cache(module_code, options)
E         File "cupy/core/core.pyx", line 2021, in cupy.core.core.compile_with_cache
E           return cuda.compile_with_cache(
E         File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.t8hdvgF7FH/cupy/cupy/cuda/compiler.py", line 428, in compile_with_cache
E           return _compile_with_cache_hip(
E         File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.t8hdvgF7FH/cupy/cupy/cuda/compiler.py", line 829, in _compile_with_cache_hip
E           temp_path = tf.name
E         File "/home/kmaeh/.pyenv/versions/3.8.7/lib/python3.8/tempfile.py", line 491, in __exit__
E           result = self.file.__exit__(exc, value, tb)
E       OSError: [Errno 28] No space left on device

/home/kmaeh/.pyenv/versions/3.8.7/lib/python3.8/tempfile.py:491: AssertionError
----------------------------- Captured stdout call -----------------------------
dtype is <class 'numpy.float64'>
_ TestFillDiagonal_param_3_{shape=(3, 3), val=0, wrap=False}.test_fill_diagonal _

self = <<cupy_tests.indexing_tests.test_insert.TestFillDiagonal_param_3_{shape=(3, 3), val=0, wrap=False} testMethod=test_fill_diagonal>  parameter: {'shape': (3, 3), 'val': 0, 'wrap': False}>
xp = <module 'cupy' from '/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.t8hdvgF7FH/cupy/cupy/__init__.py'>
dtype = <class 'numpy.float64'>

    @testing.for_all_dtypes()
    @testing.numpy_cupy_array_equal()
    def test_fill_diagonal(self, xp, dtype):
        a = testing.shaped_arange(self.shape, xp, dtype)
        val = self._compute_val(xp)
>       xp.fill_diagonal(a, val=val, wrap=self.wrap)

tests/cupy_tests/indexing_tests/test_insert.py:249: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
cupy/_indexing/insert.py:180: in fill_diagonal
    a.flat[:end:step] = val
cupy/_indexing/iterate.py:67: in __setitem__
    _flatiter_setitem_slice(value, s_start, s_step, base, size=size)
cupy/core/_kernel.pyx:840: in cupy.core._kernel.ElementwiseKernel.__call__
    kern = self._get_elementwise_kernel(dev_id, arginfos, type_map)
cupy/core/_kernel.pyx:865: in cupy.core._kernel.ElementwiseKernel._get_elementwise_kernel
    kern = _get_elementwise_kernel(
cupy/_util.pyx:59: in cupy._util.memoize.decorator.ret
    result = f(*args, **kwargs)
cupy/core/_kernel.pyx:652: in cupy.core._kernel._get_elementwise_kernel
    return _get_simple_elementwise_kernel(
cupy/core/_kernel.pyx:38: in cupy.core._kernel._get_simple_elementwise_kernel
    cpdef function.Function _get_simple_elementwise_kernel(
cupy/core/_kernel.pyx:61: in cupy.core._kernel._get_simple_elementwise_kernel
    module = compile_with_cache(module_code, options)
cupy/core/core.pyx:2021: in cupy.core.core.compile_with_cache
    return cuda.compile_with_cache(
cupy/cuda/compiler.py:428: in compile_with_cache
    return _compile_with_cache_hip(
cupy/cuda/compiler.py:829: in _compile_with_cache_hip
    temp_path = tf.name
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <tempfile._TemporaryFileWrapper object at 0x7f50108fbc40>, exc = None
value = None, tb = None

    def __exit__(self, exc, value, tb):
>       result = self.file.__exit__(exc, value, tb)
E       AssertionError: Only cupy raises error
E       
E       Traceback (most recent call last):
E         File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.t8hdvgF7FH/cupy/cupy/testing/_helper.py", line 47, in _call_func
E           result = impl(self, *args, **kw)
E         File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.t8hdvgF7FH/cupy/tests/cupy_tests/indexing_tests/test_insert.py", line 249, in test_fill_diagonal
E           xp.fill_diagonal(a, val=val, wrap=self.wrap)
E         File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.t8hdvgF7FH/cupy/cupy/_indexing/insert.py", line 180, in fill_diagonal
E           a.flat[:end:step] = val
E         File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.t8hdvgF7FH/cupy/cupy/_indexing/iterate.py", line 67, in __setitem__
E           _flatiter_setitem_slice(value, s_start, s_step, base, size=size)
E         File "cupy/core/_kernel.pyx", line 840, in cupy.core._kernel.ElementwiseKernel.__call__
E           kern = self._get_elementwise_kernel(dev_id, arginfos, type_map)
E         File "cupy/core/_kernel.pyx", line 865, in cupy.core._kernel.ElementwiseKernel._get_elementwise_kernel
E           kern = _get_elementwise_kernel(
E         File "cupy/_util.pyx", line 59, in cupy._util.memoize.decorator.ret
E           result = f(*args, **kwargs)
E         File "cupy/core/_kernel.pyx", line 652, in cupy.core._kernel._get_elementwise_kernel
E           return _get_simple_elementwise_kernel(
E         File "cupy/core/_kernel.pyx", line 38, in cupy.core._kernel._get_simple_elementwise_kernel
E           cpdef function.Function _get_simple_elementwise_kernel(
E         File "cupy/core/_kernel.pyx", line 61, in cupy.core._kernel._get_simple_elementwise_kernel
E           module = compile_with_cache(module_code, options)
E         File "cupy/core/core.pyx", line 2021, in cupy.core.core.compile_with_cache
E           return cuda.compile_with_cache(
E         File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.t8hdvgF7FH/cupy/cupy/cuda/compiler.py", line 428, in compile_with_cache
E           return _compile_with_cache_hip(
E         File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.t8hdvgF7FH/cupy/cupy/cuda/compiler.py", line 829, in _compile_with_cache_hip
E           temp_path = tf.name
E         File "/home/kmaeh/.pyenv/versions/3.8.7/lib/python3.8/tempfile.py", line 491, in __exit__
E           result = self.file.__exit__(exc, value, tb)
E       OSError: [Errno 28] No space left on device

/home/kmaeh/.pyenv/versions/3.8.7/lib/python3.8/tempfile.py:491: AssertionError
----------------------------- Captured stdout call -----------------------------
dtype is <class 'numpy.float64'>
_ TestFillDiagonal_param_4_{shape=(3, 3), val=(2,), wrap=True}.test_columnar_slice _

self = <<cupy_tests.indexing_tests.test_insert.TestFillDiagonal_param_4_{shape=(3, 3), val=(2,), wrap=True} testMethod=test_columnar_slice>  parameter: {'shape': (3, 3), 'val': (2,), 'wrap': True}>
xp = <module 'cupy' from '/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.t8hdvgF7FH/cupy/cupy/__init__.py'>
dtype = <class 'numpy.float64'>

    @testing.for_all_dtypes()
    @testing.numpy_cupy_array_equal()
    def test_columnar_slice(self, xp, dtype):  # see cupy#2970
        if self.shape == (2, 2, 2):
            pytest.skip(
                'The length of each dimension must be the same after slicing')
        a = testing.shaped_arange(self.shape, xp, dtype)
        val = self._compute_val(xp)
>       xp.fill_diagonal(a[:, 1:], val=val, wrap=self.wrap)

tests/cupy_tests/indexing_tests/test_insert.py:260: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
cupy/_indexing/insert.py:180: in fill_diagonal
    a.flat[:end:step] = val
cupy/_indexing/iterate.py:67: in __setitem__
    _flatiter_setitem_slice(value, s_start, s_step, base, size=size)
cupy/core/_kernel.pyx:840: in cupy.core._kernel.ElementwiseKernel.__call__
    kern = self._get_elementwise_kernel(dev_id, arginfos, type_map)
cupy/core/_kernel.pyx:865: in cupy.core._kernel.ElementwiseKernel._get_elementwise_kernel
    kern = _get_elementwise_kernel(
cupy/_util.pyx:59: in cupy._util.memoize.decorator.ret
    result = f(*args, **kwargs)
cupy/core/_kernel.pyx:652: in cupy.core._kernel._get_elementwise_kernel
    return _get_simple_elementwise_kernel(
cupy/core/_kernel.pyx:38: in cupy.core._kernel._get_simple_elementwise_kernel
    cpdef function.Function _get_simple_elementwise_kernel(
cupy/core/_kernel.pyx:61: in cupy.core._kernel._get_simple_elementwise_kernel
    module = compile_with_cache(module_code, options)
cupy/core/core.pyx:2021: in cupy.core.core.compile_with_cache
    return cuda.compile_with_cache(
cupy/cuda/compiler.py:428: in compile_with_cache
    return _compile_with_cache_hip(
cupy/cuda/compiler.py:829: in _compile_with_cache_hip
    temp_path = tf.name
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <tempfile._TemporaryFileWrapper object at 0x7f5010f20070>, exc = None
value = None, tb = None

    def __exit__(self, exc, value, tb):
>       result = self.file.__exit__(exc, value, tb)
E       AssertionError: Only cupy raises error
E       
E       Traceback (most recent call last):
E         File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.t8hdvgF7FH/cupy/cupy/testing/_helper.py", line 47, in _call_func
E           result = impl(self, *args, **kw)
E         File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.t8hdvgF7FH/cupy/tests/cupy_tests/indexing_tests/test_insert.py", line 260, in test_columnar_slice
E           xp.fill_diagonal(a[:, 1:], val=val, wrap=self.wrap)
E         File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.t8hdvgF7FH/cupy/cupy/_indexing/insert.py", line 180, in fill_diagonal
E           a.flat[:end:step] = val
E         File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.t8hdvgF7FH/cupy/cupy/_indexing/iterate.py", line 67, in __setitem__
E           _flatiter_setitem_slice(value, s_start, s_step, base, size=size)
E         File "cupy/core/_kernel.pyx", line 840, in cupy.core._kernel.ElementwiseKernel.__call__
E           kern = self._get_elementwise_kernel(dev_id, arginfos, type_map)
E         File "cupy/core/_kernel.pyx", line 865, in cupy.core._kernel.ElementwiseKernel._get_elementwise_kernel
E           kern = _get_elementwise_kernel(
E         File "cupy/_util.pyx", line 59, in cupy._util.memoize.decorator.ret
E           result = f(*args, **kwargs)
E         File "cupy/core/_kernel.pyx", line 652, in cupy.core._kernel._get_elementwise_kernel
E           return _get_simple_elementwise_kernel(
E         File "cupy/core/_kernel.pyx", line 38, in cupy.core._kernel._get_simple_elementwise_kernel
E           cpdef function.Function _get_simple_elementwise_kernel(
E         File "cupy/core/_kernel.pyx", line 61, in cupy.core._kernel._get_simple_elementwise_kernel
E           module = compile_with_cache(module_code, options)
E         File "cupy/core/core.pyx", line 2021, in cupy.core.core.compile_with_cache
E           return cuda.compile_with_cache(
E         File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.t8hdvgF7FH/cupy/cupy/cuda/compiler.py", line 428, in compile_with_cache
E           return _compile_with_cache_hip(
E         File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.t8hdvgF7FH/cupy/cupy/cuda/compiler.py", line 829, in _compile_with_cache_hip
E           temp_path = tf.name
E         File "/home/kmaeh/.pyenv/versions/3.8.7/lib/python3.8/tempfile.py", line 491, in __exit__
E           result = self.file.__exit__(exc, value, tb)
E       OSError: [Errno 28] No space left on device

/home/kmaeh/.pyenv/versions/3.8.7/lib/python3.8/tempfile.py:491: AssertionError
----------------------------- Captured stdout call -----------------------------
dtype is <class 'numpy.float64'>
_ TestFillDiagonal_param_4_{shape=(3, 3), val=(2,), wrap=True}.test_fill_diagonal _

self = <<cupy_tests.indexing_tests.test_insert.TestFillDiagonal_param_4_{shape=(3, 3), val=(2,), wrap=True} testMethod=test_fill_diagonal>  parameter: {'shape': (3, 3), 'val': (2,), 'wrap': True}>
xp = <module 'cupy' from '/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.t8hdvgF7FH/cupy/cupy/__init__.py'>
dtype = <class 'numpy.float64'>

    @testing.for_all_dtypes()
    @testing.numpy_cupy_array_equal()
    def test_fill_diagonal(self, xp, dtype):
        a = testing.shaped_arange(self.shape, xp, dtype)
        val = self._compute_val(xp)
>       xp.fill_diagonal(a, val=val, wrap=self.wrap)

tests/cupy_tests/indexing_tests/test_insert.py:249: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
cupy/_indexing/insert.py:180: in fill_diagonal
    a.flat[:end:step] = val
cupy/_indexing/iterate.py:67: in __setitem__
    _flatiter_setitem_slice(value, s_start, s_step, base, size=size)
cupy/core/_kernel.pyx:840: in cupy.core._kernel.ElementwiseKernel.__call__
    kern = self._get_elementwise_kernel(dev_id, arginfos, type_map)
cupy/core/_kernel.pyx:865: in cupy.core._kernel.ElementwiseKernel._get_elementwise_kernel
    kern = _get_elementwise_kernel(
cupy/_util.pyx:59: in cupy._util.memoize.decorator.ret
    result = f(*args, **kwargs)
cupy/core/_kernel.pyx:652: in cupy.core._kernel._get_elementwise_kernel
    return _get_simple_elementwise_kernel(
cupy/core/_kernel.pyx:38: in cupy.core._kernel._get_simple_elementwise_kernel
    cpdef function.Function _get_simple_elementwise_kernel(
cupy/core/_kernel.pyx:61: in cupy.core._kernel._get_simple_elementwise_kernel
    module = compile_with_cache(module_code, options)
cupy/core/core.pyx:2021: in cupy.core.core.compile_with_cache
    return cuda.compile_with_cache(
cupy/cuda/compiler.py:428: in compile_with_cache
    return _compile_with_cache_hip(
cupy/cuda/compiler.py:829: in _compile_with_cache_hip
    temp_path = tf.name
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <tempfile._TemporaryFileWrapper object at 0x7f50117399a0>, exc = None
value = None, tb = None

    def __exit__(self, exc, value, tb):
>       result = self.file.__exit__(exc, value, tb)
E       AssertionError: Only cupy raises error
E       
E       Traceback (most recent call last):
E         File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.t8hdvgF7FH/cupy/cupy/testing/_helper.py", line 47, in _call_func
E           result = impl(self, *args, **kw)
E         File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.t8hdvgF7FH/cupy/tests/cupy_tests/indexing_tests/test_insert.py", line 249, in test_fill_diagonal
E           xp.fill_diagonal(a, val=val, wrap=self.wrap)
E         File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.t8hdvgF7FH/cupy/cupy/_indexing/insert.py", line 180, in fill_diagonal
E           a.flat[:end:step] = val
E         File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.t8hdvgF7FH/cupy/cupy/_indexing/iterate.py", line 67, in __setitem__
E           _flatiter_setitem_slice(value, s_start, s_step, base, size=size)
E         File "cupy/core/_kernel.pyx", line 840, in cupy.core._kernel.ElementwiseKernel.__call__
E           kern = self._get_elementwise_kernel(dev_id, arginfos, type_map)
E         File "cupy/core/_kernel.pyx", line 865, in cupy.core._kernel.ElementwiseKernel._get_elementwise_kernel
E           kern = _get_elementwise_kernel(
E         File "cupy/_util.pyx", line 59, in cupy._util.memoize.decorator.ret
E           result = f(*args, **kwargs)
E         File "cupy/core/_kernel.pyx", line 652, in cupy.core._kernel._get_elementwise_kernel
E           return _get_simple_elementwise_kernel(
E         File "cupy/core/_kernel.pyx", line 38, in cupy.core._kernel._get_simple_elementwise_kernel
E           cpdef function.Function _get_simple_elementwise_kernel(
E         File "cupy/core/_kernel.pyx", line 61, in cupy.core._kernel._get_simple_elementwise_kernel
E           module = compile_with_cache(module_code, options)
E         File "cupy/core/core.pyx", line 2021, in cupy.core.core.compile_with_cache
E           return cuda.compile_with_cache(
E         File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.t8hdvgF7FH/cupy/cupy/cuda/compiler.py", line 428, in compile_with_cache
E           return _compile_with_cache_hip(
E         File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.t8hdvgF7FH/cupy/cupy/cuda/compiler.py", line 829, in _compile_with_cache_hip
E           temp_path = tf.name
E         File "/home/kmaeh/.pyenv/versions/3.8.7/lib/python3.8/tempfile.py", line 491, in __exit__
E           result = self.file.__exit__(exc, value, tb)
E       OSError: [Errno 28] No space left on device

/home/kmaeh/.pyenv/versions/3.8.7/lib/python3.8/tempfile.py:491: AssertionError
----------------------------- Captured stdout call -----------------------------
dtype is <class 'numpy.float64'>
_ TestFillDiagonal_param_5_{shape=(3, 3), val=(2,), wrap=False}.test_columnar_slice _

self = <<cupy_tests.indexing_tests.test_insert.TestFillDiagonal_param_5_{shape=(3, 3), val=(2,), wrap=False} testMethod=test_columnar_slice>  parameter: {'shape': (3, 3), 'val': (2,), 'wrap': False}>
xp = <module 'cupy' from '/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.t8hdvgF7FH/cupy/cupy/__init__.py'>
dtype = <class 'numpy.float64'>

    @testing.for_all_dtypes()
    @testing.numpy_cupy_array_equal()
    def test_columnar_slice(self, xp, dtype):  # see cupy#2970
        if self.shape == (2, 2, 2):
            pytest.skip(
                'The length of each dimension must be the same after slicing')
        a = testing.shaped_arange(self.shape, xp, dtype)
        val = self._compute_val(xp)
>       xp.fill_diagonal(a[:, 1:], val=val, wrap=self.wrap)

tests/cupy_tests/indexing_tests/test_insert.py:260: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
cupy/_indexing/insert.py:180: in fill_diagonal
    a.flat[:end:step] = val
cupy/_indexing/iterate.py:67: in __setitem__
    _flatiter_setitem_slice(value, s_start, s_step, base, size=size)
cupy/core/_kernel.pyx:840: in cupy.core._kernel.ElementwiseKernel.__call__
    kern = self._get_elementwise_kernel(dev_id, arginfos, type_map)
cupy/core/_kernel.pyx:865: in cupy.core._kernel.ElementwiseKernel._get_elementwise_kernel
    kern = _get_elementwise_kernel(
cupy/_util.pyx:59: in cupy._util.memoize.decorator.ret
    result = f(*args, **kwargs)
cupy/core/_kernel.pyx:652: in cupy.core._kernel._get_elementwise_kernel
    return _get_simple_elementwise_kernel(
cupy/core/_kernel.pyx:38: in cupy.core._kernel._get_simple_elementwise_kernel
    cpdef function.Function _get_simple_elementwise_kernel(
cupy/core/_kernel.pyx:61: in cupy.core._kernel._get_simple_elementwise_kernel
    module = compile_with_cache(module_code, options)
cupy/core/core.pyx:2021: in cupy.core.core.compile_with_cache
    return cuda.compile_with_cache(
cupy/cuda/compiler.py:428: in compile_with_cache
    return _compile_with_cache_hip(
cupy/cuda/compiler.py:829: in _compile_with_cache_hip
    temp_path = tf.name
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <tempfile._TemporaryFileWrapper object at 0x7f5010e1c220>, exc = None
value = None, tb = None

    def __exit__(self, exc, value, tb):
>       result = self.file.__exit__(exc, value, tb)
E       AssertionError: Only cupy raises error
E       
E       Traceback (most recent call last):
E         File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.t8hdvgF7FH/cupy/cupy/testing/_helper.py", line 47, in _call_func
E           result = impl(self, *args, **kw)
E         File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.t8hdvgF7FH/cupy/tests/cupy_tests/indexing_tests/test_insert.py", line 260, in test_columnar_slice
E           xp.fill_diagonal(a[:, 1:], val=val, wrap=self.wrap)
E         File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.t8hdvgF7FH/cupy/cupy/_indexing/insert.py", line 180, in fill_diagonal
E           a.flat[:end:step] = val
E         File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.t8hdvgF7FH/cupy/cupy/_indexing/iterate.py", line 67, in __setitem__
E           _flatiter_setitem_slice(value, s_start, s_step, base, size=size)
E         File "cupy/core/_kernel.pyx", line 840, in cupy.core._kernel.ElementwiseKernel.__call__
E           kern = self._get_elementwise_kernel(dev_id, arginfos, type_map)
E         File "cupy/core/_kernel.pyx", line 865, in cupy.core._kernel.ElementwiseKernel._get_elementwise_kernel
E           kern = _get_elementwise_kernel(
E         File "cupy/_util.pyx", line 59, in cupy._util.memoize.decorator.ret
E           result = f(*args, **kwargs)
E         File "cupy/core/_kernel.pyx", line 652, in cupy.core._kernel._get_elementwise_kernel
E           return _get_simple_elementwise_kernel(
E         File "cupy/core/_kernel.pyx", line 38, in cupy.core._kernel._get_simple_elementwise_kernel
E           cpdef function.Function _get_simple_elementwise_kernel(
E         File "cupy/core/_kernel.pyx", line 61, in cupy.core._kernel._get_simple_elementwise_kernel
E           module = compile_with_cache(module_code, options)
E         File "cupy/core/core.pyx", line 2021, in cupy.core.core.compile_with_cache
E           return cuda.compile_with_cache(
E         File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.t8hdvgF7FH/cupy/cupy/cuda/compiler.py", line 428, in compile_with_cache
E           return _compile_with_cache_hip(
E         File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.t8hdvgF7FH/cupy/cupy/cuda/compiler.py", line 829, in _compile_with_cache_hip
E           temp_path = tf.name
E         File "/home/kmaeh/.pyenv/versions/3.8.7/lib/python3.8/tempfile.py", line 491, in __exit__
E           result = self.file.__exit__(exc, value, tb)
E       OSError: [Errno 28] No space left on device

/home/kmaeh/.pyenv/versions/3.8.7/lib/python3.8/tempfile.py:491: AssertionError
----------------------------- Captured stdout call -----------------------------
dtype is <class 'numpy.float64'>
_ TestFillDiagonal_param_5_{shape=(3, 3), val=(2,), wrap=False}.test_fill_diagonal _

self = <<cupy_tests.indexing_tests.test_insert.TestFillDiagonal_param_5_{shape=(3, 3), val=(2,), wrap=False} testMethod=test_fill_diagonal>  parameter: {'shape': (3, 3), 'val': (2,), 'wrap': False}>
xp = <module 'cupy' from '/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.t8hdvgF7FH/cupy/cupy/__init__.py'>
dtype = <class 'numpy.float64'>

    @testing.for_all_dtypes()
    @testing.numpy_cupy_array_equal()
    def test_fill_diagonal(self, xp, dtype):
        a = testing.shaped_arange(self.shape, xp, dtype)
        val = self._compute_val(xp)
>       xp.fill_diagonal(a, val=val, wrap=self.wrap)

tests/cupy_tests/indexing_tests/test_insert.py:249: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
cupy/_indexing/insert.py:180: in fill_diagonal
    a.flat[:end:step] = val
cupy/_indexing/iterate.py:67: in __setitem__
    _flatiter_setitem_slice(value, s_start, s_step, base, size=size)
cupy/core/_kernel.pyx:840: in cupy.core._kernel.ElementwiseKernel.__call__
    kern = self._get_elementwise_kernel(dev_id, arginfos, type_map)
cupy/core/_kernel.pyx:865: in cupy.core._kernel.ElementwiseKernel._get_elementwise_kernel
    kern = _get_elementwise_kernel(
cupy/_util.pyx:59: in cupy._util.memoize.decorator.ret
    result = f(*args, **kwargs)
cupy/core/_kernel.pyx:652: in cupy.core._kernel._get_elementwise_kernel
    return _get_simple_elementwise_kernel(
cupy/core/_kernel.pyx:38: in cupy.core._kernel._get_simple_elementwise_kernel
    cpdef function.Function _get_simple_elementwise_kernel(
cupy/core/_kernel.pyx:61: in cupy.core._kernel._get_simple_elementwise_kernel
    module = compile_with_cache(module_code, options)
cupy/core/core.pyx:2021: in cupy.core.core.compile_with_cache
    return cuda.compile_with_cache(
cupy/cuda/compiler.py:428: in compile_with_cache
    return _compile_with_cache_hip(
cupy/cuda/compiler.py:829: in _compile_with_cache_hip
    temp_path = tf.name
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <tempfile._TemporaryFileWrapper object at 0x7f501093f190>, exc = None
value = None, tb = None

    def __exit__(self, exc, value, tb):
>       result = self.file.__exit__(exc, value, tb)
E       AssertionError: Only cupy raises error
E       
E       Traceback (most recent call last):
E         File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.t8hdvgF7FH/cupy/cupy/testing/_helper.py", line 47, in _call_func
E           result = impl(self, *args, **kw)
E         File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.t8hdvgF7FH/cupy/tests/cupy_tests/indexing_tests/test_insert.py", line 249, in test_fill_diagonal
E           xp.fill_diagonal(a, val=val, wrap=self.wrap)
E         File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.t8hdvgF7FH/cupy/cupy/_indexing/insert.py", line 180, in fill_diagonal
E           a.flat[:end:step] = val
E         File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.t8hdvgF7FH/cupy/cupy/_indexing/iterate.py", line 67, in __setitem__
E           _flatiter_setitem_slice(value, s_start, s_step, base, size=size)
E         File "cupy/core/_kernel.pyx", line 840, in cupy.core._kernel.ElementwiseKernel.__call__
E           kern = self._get_elementwise_kernel(dev_id, arginfos, type_map)
E         File "cupy/core/_kernel.pyx", line 865, in cupy.core._kernel.ElementwiseKernel._get_elementwise_kernel
E           kern = _get_elementwise_kernel(
E         File "cupy/_util.pyx", line 59, in cupy._util.memoize.decorator.ret
E           result = f(*args, **kwargs)
E         File "cupy/core/_kernel.pyx", line 652, in cupy.core._kernel._get_elementwise_kernel
E           return _get_simple_elementwise_kernel(
E         File "cupy/core/_kernel.pyx", line 38, in cupy.core._kernel._get_simple_elementwise_kernel
E           cpdef function.Function _get_simple_elementwise_kernel(
E         File "cupy/core/_kernel.pyx", line 61, in cupy.core._kernel._get_simple_elementwise_kernel
E           module = compile_with_cache(module_code, options)
E         File "cupy/core/core.pyx", line 2021, in cupy.core.core.compile_with_cache
E           return cuda.compile_with_cache(
E         File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.t8hdvgF7FH/cupy/cupy/cuda/compiler.py", line 428, in compile_with_cache
E           return _compile_with_cache_hip(
E         File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.t8hdvgF7FH/cupy/cupy/cuda/compiler.py", line 829, in _compile_with_cache_hip
E           temp_path = tf.name
E         File "/home/kmaeh/.pyenv/versions/3.8.7/lib/python3.8/tempfile.py", line 491, in __exit__
E           result = self.file.__exit__(exc, value, tb)
E       OSError: [Errno 28] No space left on device

/home/kmaeh/.pyenv/versions/3.8.7/lib/python3.8/tempfile.py:491: AssertionError
----------------------------- Captured stdout call -----------------------------
dtype is <class 'numpy.float64'>
_ TestFillDiagonal_param_6_{shape=(3, 3), val=(2, 2), wrap=True}.test_columnar_slice _

self = <<cupy_tests.indexing_tests.test_insert.TestFillDiagonal_param_6_{shape=(3, 3), val=(2, 2), wrap=True} testMethod=test_columnar_slice>  parameter: {'shape': (3, 3), 'val': (2, 2), 'wrap': True}>
xp = <module 'cupy' from '/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.t8hdvgF7FH/cupy/cupy/__init__.py'>
dtype = <class 'numpy.float64'>

    @testing.for_all_dtypes()
    @testing.numpy_cupy_array_equal()
    def test_columnar_slice(self, xp, dtype):  # see cupy#2970
        if self.shape == (2, 2, 2):
            pytest.skip(
                'The length of each dimension must be the same after slicing')
        a = testing.shaped_arange(self.shape, xp, dtype)
        val = self._compute_val(xp)
>       xp.fill_diagonal(a[:, 1:], val=val, wrap=self.wrap)

tests/cupy_tests/indexing_tests/test_insert.py:260: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
cupy/_indexing/insert.py:180: in fill_diagonal
    a.flat[:end:step] = val
cupy/_indexing/iterate.py:67: in __setitem__
    _flatiter_setitem_slice(value, s_start, s_step, base, size=size)
cupy/core/_kernel.pyx:840: in cupy.core._kernel.ElementwiseKernel.__call__
    kern = self._get_elementwise_kernel(dev_id, arginfos, type_map)
cupy/core/_kernel.pyx:865: in cupy.core._kernel.ElementwiseKernel._get_elementwise_kernel
    kern = _get_elementwise_kernel(
cupy/_util.pyx:59: in cupy._util.memoize.decorator.ret
    result = f(*args, **kwargs)
cupy/core/_kernel.pyx:652: in cupy.core._kernel._get_elementwise_kernel
    return _get_simple_elementwise_kernel(
cupy/core/_kernel.pyx:38: in cupy.core._kernel._get_simple_elementwise_kernel
    cpdef function.Function _get_simple_elementwise_kernel(
cupy/core/_kernel.pyx:61: in cupy.core._kernel._get_simple_elementwise_kernel
    module = compile_with_cache(module_code, options)
cupy/core/core.pyx:2021: in cupy.core.core.compile_with_cache
    return cuda.compile_with_cache(
cupy/cuda/compiler.py:428: in compile_with_cache
    return _compile_with_cache_hip(
cupy/cuda/compiler.py:829: in _compile_with_cache_hip
    temp_path = tf.name
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <tempfile._TemporaryFileWrapper object at 0x7f501018fdf0>, exc = None
value = None, tb = None

    def __exit__(self, exc, value, tb):
>       result = self.file.__exit__(exc, value, tb)
E       AssertionError: Only cupy raises error
E       
E       Traceback (most recent call last):
E         File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.t8hdvgF7FH/cupy/cupy/testing/_helper.py", line 47, in _call_func
E           result = impl(self, *args, **kw)
E         File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.t8hdvgF7FH/cupy/tests/cupy_tests/indexing_tests/test_insert.py", line 260, in test_columnar_slice
E           xp.fill_diagonal(a[:, 1:], val=val, wrap=self.wrap)
E         File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.t8hdvgF7FH/cupy/cupy/_indexing/insert.py", line 180, in fill_diagonal
E           a.flat[:end:step] = val
E         File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.t8hdvgF7FH/cupy/cupy/_indexing/iterate.py", line 67, in __setitem__
E           _flatiter_setitem_slice(value, s_start, s_step, base, size=size)
E         File "cupy/core/_kernel.pyx", line 840, in cupy.core._kernel.ElementwiseKernel.__call__
E           kern = self._get_elementwise_kernel(dev_id, arginfos, type_map)
E         File "cupy/core/_kernel.pyx", line 865, in cupy.core._kernel.ElementwiseKernel._get_elementwise_kernel
E           kern = _get_elementwise_kernel(
E         File "cupy/_util.pyx", line 59, in cupy._util.memoize.decorator.ret
E           result = f(*args, **kwargs)
E         File "cupy/core/_kernel.pyx", line 652, in cupy.core._kernel._get_elementwise_kernel
E           return _get_simple_elementwise_kernel(
E         File "cupy/core/_kernel.pyx", line 38, in cupy.core._kernel._get_simple_elementwise_kernel
E           cpdef function.Function _get_simple_elementwise_kernel(
E         File "cupy/core/_kernel.pyx", line 61, in cupy.core._kernel._get_simple_elementwise_kernel
E           module = compile_with_cache(module_code, options)
E         File "cupy/core/core.pyx", line 2021, in cupy.core.core.compile_with_cache
E           return cuda.compile_with_cache(
E         File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.t8hdvgF7FH/cupy/cupy/cuda/compiler.py", line 428, in compile_with_cache
E           return _compile_with_cache_hip(
E         File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.t8hdvgF7FH/cupy/cupy/cuda/compiler.py", line 829, in _compile_with_cache_hip
E           temp_path = tf.name
E         File "/home/kmaeh/.pyenv/versions/3.8.7/lib/python3.8/tempfile.py", line 491, in __exit__
E           result = self.file.__exit__(exc, value, tb)
E       OSError: [Errno 28] No space left on device

/home/kmaeh/.pyenv/versions/3.8.7/lib/python3.8/tempfile.py:491: AssertionError
----------------------------- Captured stdout call -----------------------------
dtype is <class 'numpy.float64'>
_ TestFillDiagonal_param_6_{shape=(3, 3), val=(2, 2), wrap=True}.test_fill_diagonal _

self = <<cupy_tests.indexing_tests.test_insert.TestFillDiagonal_param_6_{shape=(3, 3), val=(2, 2), wrap=True} testMethod=test_fill_diagonal>  parameter: {'shape': (3, 3), 'val': (2, 2), 'wrap': True}>
xp = <module 'cupy' from '/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.t8hdvgF7FH/cupy/cupy/__init__.py'>
dtype = <class 'numpy.float64'>

    @testing.for_all_dtypes()
    @testing.numpy_cupy_array_equal()
    def test_fill_diagonal(self, xp, dtype):
        a = testing.shaped_arange(self.shape, xp, dtype)
        val = self._compute_val(xp)
>       xp.fill_diagonal(a, val=val, wrap=self.wrap)

tests/cupy_tests/indexing_tests/test_insert.py:249: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
cupy/_indexing/insert.py:180: in fill_diagonal
    a.flat[:end:step] = val
cupy/_indexing/iterate.py:67: in __setitem__
    _flatiter_setitem_slice(value, s_start, s_step, base, size=size)
cupy/core/_kernel.pyx:840: in cupy.core._kernel.ElementwiseKernel.__call__
    kern = self._get_elementwise_kernel(dev_id, arginfos, type_map)
cupy/core/_kernel.pyx:865: in cupy.core._kernel.ElementwiseKernel._get_elementwise_kernel
    kern = _get_elementwise_kernel(
cupy/_util.pyx:59: in cupy._util.memoize.decorator.ret
    result = f(*args, **kwargs)
cupy/core/_kernel.pyx:652: in cupy.core._kernel._get_elementwise_kernel
    return _get_simple_elementwise_kernel(
cupy/core/_kernel.pyx:38: in cupy.core._kernel._get_simple_elementwise_kernel
    cpdef function.Function _get_simple_elementwise_kernel(
cupy/core/_kernel.pyx:61: in cupy.core._kernel._get_simple_elementwise_kernel
    module = compile_with_cache(module_code, options)
cupy/core/core.pyx:2021: in cupy.core.core.compile_with_cache
    return cuda.compile_with_cache(
cupy/cuda/compiler.py:428: in compile_with_cache
    return _compile_with_cache_hip(
cupy/cuda/compiler.py:829: in _compile_with_cache_hip
    temp_path = tf.name
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <tempfile._TemporaryFileWrapper object at 0x7f5010876a60>, exc = None
value = None, tb = None

    def __exit__(self, exc, value, tb):
>       result = self.file.__exit__(exc, value, tb)
E       AssertionError: Only cupy raises error
E       
E       Traceback (most recent call last):
E         File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.t8hdvgF7FH/cupy/cupy/testing/_helper.py", line 47, in _call_func
E           result = impl(self, *args, **kw)
E         File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.t8hdvgF7FH/cupy/tests/cupy_tests/indexing_tests/test_insert.py", line 249, in test_fill_diagonal
E           xp.fill_diagonal(a, val=val, wrap=self.wrap)
E         File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.t8hdvgF7FH/cupy/cupy/_indexing/insert.py", line 180, in fill_diagonal
E           a.flat[:end:step] = val
E         File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.t8hdvgF7FH/cupy/cupy/_indexing/iterate.py", line 67, in __setitem__
E           _flatiter_setitem_slice(value, s_start, s_step, base, size=size)
E         File "cupy/core/_kernel.pyx", line 840, in cupy.core._kernel.ElementwiseKernel.__call__
E           kern = self._get_elementwise_kernel(dev_id, arginfos, type_map)
E         File "cupy/core/_kernel.pyx", line 865, in cupy.core._kernel.ElementwiseKernel._get_elementwise_kernel
E           kern = _get_elementwise_kernel(
E         File "cupy/_util.pyx", line 59, in cupy._util.memoize.decorator.ret
E           result = f(*args, **kwargs)
E         File "cupy/core/_kernel.pyx", line 652, in cupy.core._kernel._get_elementwise_kernel
E           return _get_simple_elementwise_kernel(
E         File "cupy/core/_kernel.pyx", line 38, in cupy.core._kernel._get_simple_elementwise_kernel
E           cpdef function.Function _get_simple_elementwise_kernel(
E         File "cupy/core/_kernel.pyx", line 61, in cupy.core._kernel._get_simple_elementwise_kernel
E           module = compile_with_cache(module_code, options)
E         File "cupy/core/core.pyx", line 2021, in cupy.core.core.compile_with_cache
E           return cuda.compile_with_cache(
E         File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.t8hdvgF7FH/cupy/cupy/cuda/compiler.py", line 428, in compile_with_cache
E           return _compile_with_cache_hip(
E         File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.t8hdvgF7FH/cupy/cupy/cuda/compiler.py", line 829, in _compile_with_cache_hip
E           temp_path = tf.name
E         File "/home/kmaeh/.pyenv/versions/3.8.7/lib/python3.8/tempfile.py", line 491, in __exit__
E           result = self.file.__exit__(exc, value, tb)
E       OSError: [Errno 28] No space left on device

/home/kmaeh/.pyenv/versions/3.8.7/lib/python3.8/tempfile.py:491: AssertionError
----------------------------- Captured stdout call -----------------------------
dtype is <class 'numpy.float64'>
_ TestFillDiagonal_param_7_{shape=(3, 3), val=(2, 2), wrap=False}.test_columnar_slice _

self = <<cupy_tests.indexing_tests.test_insert.TestFillDiagonal_param_7_{shape=(3, 3), val=(2, 2), wrap=False} testMethod=test_columnar_slice>  parameter: {'shape': (3, 3), 'val': (2, 2), 'wrap': False}>
xp = <module 'cupy' from '/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.t8hdvgF7FH/cupy/cupy/__init__.py'>
dtype = <class 'numpy.float64'>

    @testing.for_all_dtypes()
    @testing.numpy_cupy_array_equal()
    def test_columnar_slice(self, xp, dtype):  # see cupy#2970
        if self.shape == (2, 2, 2):
            pytest.skip(
                'The length of each dimension must be the same after slicing')
        a = testing.shaped_arange(self.shape, xp, dtype)
        val = self._compute_val(xp)
>       xp.fill_diagonal(a[:, 1:], val=val, wrap=self.wrap)

tests/cupy_tests/indexing_tests/test_insert.py:260: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
cupy/_indexing/insert.py:180: in fill_diagonal
    a.flat[:end:step] = val
cupy/_indexing/iterate.py:67: in __setitem__
    _flatiter_setitem_slice(value, s_start, s_step, base, size=size)
cupy/core/_kernel.pyx:840: in cupy.core._kernel.ElementwiseKernel.__call__
    kern = self._get_elementwise_kernel(dev_id, arginfos, type_map)
cupy/core/_kernel.pyx:865: in cupy.core._kernel.ElementwiseKernel._get_elementwise_kernel
    kern = _get_elementwise_kernel(
cupy/_util.pyx:59: in cupy._util.memoize.decorator.ret
    result = f(*args, **kwargs)
cupy/core/_kernel.pyx:652: in cupy.core._kernel._get_elementwise_kernel
    return _get_simple_elementwise_kernel(
cupy/core/_kernel.pyx:38: in cupy.core._kernel._get_simple_elementwise_kernel
    cpdef function.Function _get_simple_elementwise_kernel(
cupy/core/_kernel.pyx:61: in cupy.core._kernel._get_simple_elementwise_kernel
    module = compile_with_cache(module_code, options)
cupy/core/core.pyx:2021: in cupy.core.core.compile_with_cache
    return cuda.compile_with_cache(
cupy/cuda/compiler.py:428: in compile_with_cache
    return _compile_with_cache_hip(
cupy/cuda/compiler.py:829: in _compile_with_cache_hip
    temp_path = tf.name
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <tempfile._TemporaryFileWrapper object at 0x7f501014f340>, exc = None
value = None, tb = None

    def __exit__(self, exc, value, tb):
>       result = self.file.__exit__(exc, value, tb)
E       AssertionError: Only cupy raises error
E       
E       Traceback (most recent call last):
E         File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.t8hdvgF7FH/cupy/cupy/testing/_helper.py", line 47, in _call_func
E           result = impl(self, *args, **kw)
E         File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.t8hdvgF7FH/cupy/tests/cupy_tests/indexing_tests/test_insert.py", line 260, in test_columnar_slice
E           xp.fill_diagonal(a[:, 1:], val=val, wrap=self.wrap)
E         File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.t8hdvgF7FH/cupy/cupy/_indexing/insert.py", line 180, in fill_diagonal
E           a.flat[:end:step] = val
E         File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.t8hdvgF7FH/cupy/cupy/_indexing/iterate.py", line 67, in __setitem__
E           _flatiter_setitem_slice(value, s_start, s_step, base, size=size)
E         File "cupy/core/_kernel.pyx", line 840, in cupy.core._kernel.ElementwiseKernel.__call__
E           kern = self._get_elementwise_kernel(dev_id, arginfos, type_map)
E         File "cupy/core/_kernel.pyx", line 865, in cupy.core._kernel.ElementwiseKernel._get_elementwise_kernel
E           kern = _get_elementwise_kernel(
E         File "cupy/_util.pyx", line 59, in cupy._util.memoize.decorator.ret
E           result = f(*args, **kwargs)
E         File "cupy/core/_kernel.pyx", line 652, in cupy.core._kernel._get_elementwise_kernel
E           return _get_simple_elementwise_kernel(
E         File "cupy/core/_kernel.pyx", line 38, in cupy.core._kernel._get_simple_elementwise_kernel
E           cpdef function.Function _get_simple_elementwise_kernel(
E         File "cupy/core/_kernel.pyx", line 61, in cupy.core._kernel._get_simple_elementwise_kernel
E           module = compile_with_cache(module_code, options)
E         File "cupy/core/core.pyx", line 2021, in cupy.core.core.compile_with_cache
E           return cuda.compile_with_cache(
E         File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.t8hdvgF7FH/cupy/cupy/cuda/compiler.py", line 428, in compile_with_cache
E           return _compile_with_cache_hip(
E         File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.t8hdvgF7FH/cupy/cupy/cuda/compiler.py", line 829, in _compile_with_cache_hip
E           temp_path = tf.name
E         File "/home/kmaeh/.pyenv/versions/3.8.7/lib/python3.8/tempfile.py", line 491, in __exit__
E           result = self.file.__exit__(exc, value, tb)
E       OSError: [Errno 28] No space left on device

/home/kmaeh/.pyenv/versions/3.8.7/lib/python3.8/tempfile.py:491: AssertionError
----------------------------- Captured stdout call -----------------------------
dtype is <class 'numpy.float64'>
_ TestFillDiagonal_param_7_{shape=(3, 3), val=(2, 2), wrap=False}.test_fill_diagonal _

self = <<cupy_tests.indexing_tests.test_insert.TestFillDiagonal_param_7_{shape=(3, 3), val=(2, 2), wrap=False} testMethod=test_fill_diagonal>  parameter: {'shape': (3, 3), 'val': (2, 2), 'wrap': False}>
xp = <module 'cupy' from '/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.t8hdvgF7FH/cupy/cupy/__init__.py'>
dtype = <class 'numpy.float64'>

    @testing.for_all_dtypes()
    @testing.numpy_cupy_array_equal()
    def test_fill_diagonal(self, xp, dtype):
        a = testing.shaped_arange(self.shape, xp, dtype)
        val = self._compute_val(xp)
>       xp.fill_diagonal(a, val=val, wrap=self.wrap)

tests/cupy_tests/indexing_tests/test_insert.py:249: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
cupy/_indexing/insert.py:180: in fill_diagonal
    a.flat[:end:step] = val
cupy/_indexing/iterate.py:67: in __setitem__
    _flatiter_setitem_slice(value, s_start, s_step, base, size=size)
cupy/core/_kernel.pyx:840: in cupy.core._kernel.ElementwiseKernel.__call__
    kern = self._get_elementwise_kernel(dev_id, arginfos, type_map)
cupy/core/_kernel.pyx:865: in cupy.core._kernel.ElementwiseKernel._get_elementwise_kernel
    kern = _get_elementwise_kernel(
cupy/_util.pyx:59: in cupy._util.memoize.decorator.ret
    result = f(*args, **kwargs)
cupy/core/_kernel.pyx:652: in cupy.core._kernel._get_elementwise_kernel
    return _get_simple_elementwise_kernel(
cupy/core/_kernel.pyx:38: in cupy.core._kernel._get_simple_elementwise_kernel
    cpdef function.Function _get_simple_elementwise_kernel(
cupy/core/_kernel.pyx:61: in cupy.core._kernel._get_simple_elementwise_kernel
    module = compile_with_cache(module_code, options)
cupy/core/core.pyx:2021: in cupy.core.core.compile_with_cache
    return cuda.compile_with_cache(
cupy/cuda/compiler.py:428: in compile_with_cache
    return _compile_with_cache_hip(
cupy/cuda/compiler.py:829: in _compile_with_cache_hip
    temp_path = tf.name
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <tempfile._TemporaryFileWrapper object at 0x7f5010826eb0>, exc = None
value = None, tb = None

    def __exit__(self, exc, value, tb):
>       result = self.file.__exit__(exc, value, tb)
E       AssertionError: Only cupy raises error
E       
E       Traceback (most recent call last):
E         File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.t8hdvgF7FH/cupy/cupy/testing/_helper.py", line 47, in _call_func
E           result = impl(self, *args, **kw)
E         File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.t8hdvgF7FH/cupy/tests/cupy_tests/indexing_tests/test_insert.py", line 249, in test_fill_diagonal
E           xp.fill_diagonal(a, val=val, wrap=self.wrap)
E         File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.t8hdvgF7FH/cupy/cupy/_indexing/insert.py", line 180, in fill_diagonal
E           a.flat[:end:step] = val
E         File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.t8hdvgF7FH/cupy/cupy/_indexing/iterate.py", line 67, in __setitem__
E           _flatiter_setitem_slice(value, s_start, s_step, base, size=size)
E         File "cupy/core/_kernel.pyx", line 840, in cupy.core._kernel.ElementwiseKernel.__call__
E           kern = self._get_elementwise_kernel(dev_id, arginfos, type_map)
E         File "cupy/core/_kernel.pyx", line 865, in cupy.core._kernel.ElementwiseKernel._get_elementwise_kernel
E           kern = _get_elementwise_kernel(
E         File "cupy/_util.pyx", line 59, in cupy._util.memoize.decorator.ret
E           result = f(*args, **kwargs)
E         File "cupy/core/_kernel.pyx", line 652, in cupy.core._kernel._get_elementwise_kernel
E           return _get_simple_elementwise_kernel(
E         File "cupy/core/_kernel.pyx", line 38, in cupy.core._kernel._get_simple_elementwise_kernel
E           cpdef function.Function _get_simple_elementwise_kernel(
E         File "cupy/core/_kernel.pyx", line 61, in cupy.core._kernel._get_simple_elementwise_kernel
E           module = compile_with_cache(module_code, options)
E         File "cupy/core/core.pyx", line 2021, in cupy.core.core.compile_with_cache
E           return cuda.compile_with_cache(
E         File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.t8hdvgF7FH/cupy/cupy/cuda/compiler.py", line 428, in compile_with_cache
E           return _compile_with_cache_hip(
E         File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.t8hdvgF7FH/cupy/cupy/cuda/compiler.py", line 829, in _compile_with_cache_hip
E           temp_path = tf.name
E         File "/home/kmaeh/.pyenv/versions/3.8.7/lib/python3.8/tempfile.py", line 491, in __exit__
E           result = self.file.__exit__(exc, value, tb)
E       OSError: [Errno 28] No space left on device

/home/kmaeh/.pyenv/versions/3.8.7/lib/python3.8/tempfile.py:491: AssertionError
----------------------------- Captured stdout call -----------------------------
dtype is <class 'numpy.float64'>
_ TestFillDiagonal_param_8_{shape=(2, 2, 2), val=1, wrap=True}.test_fill_diagonal _

self = <<cupy_tests.indexing_tests.test_insert.TestFillDiagonal_param_8_{shape=(2, 2, 2), val=1, wrap=True} testMethod=test_fill_diagonal>  parameter: {'shape': (2, 2, 2), 'val': 1, 'wrap': True}>
xp = <module 'cupy' from '/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.t8hdvgF7FH/cupy/cupy/__init__.py'>
dtype = <class 'numpy.float64'>

    @testing.for_all_dtypes()
    @testing.numpy_cupy_array_equal()
    def test_fill_diagonal(self, xp, dtype):
        a = testing.shaped_arange(self.shape, xp, dtype)
        val = self._compute_val(xp)
>       xp.fill_diagonal(a, val=val, wrap=self.wrap)

tests/cupy_tests/indexing_tests/test_insert.py:249: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
cupy/_indexing/insert.py:180: in fill_diagonal
    a.flat[:end:step] = val
cupy/_indexing/iterate.py:67: in __setitem__
    _flatiter_setitem_slice(value, s_start, s_step, base, size=size)
cupy/core/_kernel.pyx:840: in cupy.core._kernel.ElementwiseKernel.__call__
    kern = self._get_elementwise_kernel(dev_id, arginfos, type_map)
cupy/core/_kernel.pyx:865: in cupy.core._kernel.ElementwiseKernel._get_elementwise_kernel
    kern = _get_elementwise_kernel(
cupy/_util.pyx:59: in cupy._util.memoize.decorator.ret
    result = f(*args, **kwargs)
cupy/core/_kernel.pyx:652: in cupy.core._kernel._get_elementwise_kernel
    return _get_simple_elementwise_kernel(
cupy/core/_kernel.pyx:38: in cupy.core._kernel._get_simple_elementwise_kernel
    cpdef function.Function _get_simple_elementwise_kernel(
cupy/core/_kernel.pyx:61: in cupy.core._kernel._get_simple_elementwise_kernel
    module = compile_with_cache(module_code, options)
cupy/core/core.pyx:2021: in cupy.core.core.compile_with_cache
    return cuda.compile_with_cache(
cupy/cuda/compiler.py:428: in compile_with_cache
    return _compile_with_cache_hip(
cupy/cuda/compiler.py:829: in _compile_with_cache_hip
    temp_path = tf.name
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <tempfile._TemporaryFileWrapper object at 0x7f50101a4d90>, exc = None
value = None, tb = None

    def __exit__(self, exc, value, tb):
>       result = self.file.__exit__(exc, value, tb)
E       AssertionError: Only cupy raises error
E       
E       Traceback (most recent call last):
E         File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.t8hdvgF7FH/cupy/cupy/testing/_helper.py", line 47, in _call_func
E           result = impl(self, *args, **kw)
E         File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.t8hdvgF7FH/cupy/tests/cupy_tests/indexing_tests/test_insert.py", line 249, in test_fill_diagonal
E           xp.fill_diagonal(a, val=val, wrap=self.wrap)
E         File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.t8hdvgF7FH/cupy/cupy/_indexing/insert.py", line 180, in fill_diagonal
E           a.flat[:end:step] = val
E         File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.t8hdvgF7FH/cupy/cupy/_indexing/iterate.py", line 67, in __setitem__
E           _flatiter_setitem_slice(value, s_start, s_step, base, size=size)
E         File "cupy/core/_kernel.pyx", line 840, in cupy.core._kernel.ElementwiseKernel.__call__
E           kern = self._get_elementwise_kernel(dev_id, arginfos, type_map)
E         File "cupy/core/_kernel.pyx", line 865, in cupy.core._kernel.ElementwiseKernel._get_elementwise_kernel
E           kern = _get_elementwise_kernel(
E         File "cupy/_util.pyx", line 59, in cupy._util.memoize.decorator.ret
E           result = f(*args, **kwargs)
E         File "cupy/core/_kernel.pyx", line 652, in cupy.core._kernel._get_elementwise_kernel
E           return _get_simple_elementwise_kernel(
E         File "cupy/core/_kernel.pyx", line 38, in cupy.core._kernel._get_simple_elementwise_kernel
E           cpdef function.Function _get_simple_elementwise_kernel(
E         File "cupy/core/_kernel.pyx", line 61, in cupy.core._kernel._get_simple_elementwise_kernel
E           module = compile_with_cache(module_code, options)
E         File "cupy/core/core.pyx", line 2021, in cupy.core.core.compile_with_cache
E           return cuda.compile_with_cache(
E         File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.t8hdvgF7FH/cupy/cupy/cuda/compiler.py", line 428, in compile_with_cache
E           return _compile_with_cache_hip(
E         File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.t8hdvgF7FH/cupy/cupy/cuda/compiler.py", line 829, in _compile_with_cache_hip
E           temp_path = tf.name
E         File "/home/kmaeh/.pyenv/versions/3.8.7/lib/python3.8/tempfile.py", line 491, in __exit__
E           result = self.file.__exit__(exc, value, tb)
E       OSError: [Errno 28] No space left on device

/home/kmaeh/.pyenv/versions/3.8.7/lib/python3.8/tempfile.py:491: AssertionError
----------------------------- Captured stdout call -----------------------------
dtype is <class 'numpy.float64'>
_ TestFillDiagonal_param_9_{shape=(2, 2, 2), val=1, wrap=False}.test_fill_diagonal _

self = <<cupy_tests.indexing_tests.test_insert.TestFillDiagonal_param_9_{shape=(2, 2, 2), val=1, wrap=False} testMethod=test_fill_diagonal>  parameter: {'shape': (2, 2, 2), 'val': 1, 'wrap': False}>
xp = <module 'cupy' from '/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.t8hdvgF7FH/cupy/cupy/__init__.py'>
dtype = <class 'numpy.float64'>

    @testing.for_all_dtypes()
    @testing.numpy_cupy_array_equal()
    def test_fill_diagonal(self, xp, dtype):
        a = testing.shaped_arange(self.shape, xp, dtype)
        val = self._compute_val(xp)
>       xp.fill_diagonal(a, val=val, wrap=self.wrap)

tests/cupy_tests/indexing_tests/test_insert.py:249: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
cupy/_indexing/insert.py:180: in fill_diagonal
    a.flat[:end:step] = val
cupy/_indexing/iterate.py:67: in __setitem__
    _flatiter_setitem_slice(value, s_start, s_step, base, size=size)
cupy/core/_kernel.pyx:840: in cupy.core._kernel.ElementwiseKernel.__call__
    kern = self._get_elementwise_kernel(dev_id, arginfos, type_map)
cupy/core/_kernel.pyx:865: in cupy.core._kernel.ElementwiseKernel._get_elementwise_kernel
    kern = _get_elementwise_kernel(
cupy/_util.pyx:59: in cupy._util.memoize.decorator.ret
    result = f(*args, **kwargs)
cupy/core/_kernel.pyx:652: in cupy.core._kernel._get_elementwise_kernel
    return _get_simple_elementwise_kernel(
cupy/core/_kernel.pyx:38: in cupy.core._kernel._get_simple_elementwise_kernel
    cpdef function.Function _get_simple_elementwise_kernel(
cupy/core/_kernel.pyx:61: in cupy.core._kernel._get_simple_elementwise_kernel
    module = compile_with_cache(module_code, options)
cupy/core/core.pyx:2021: in cupy.core.core.compile_with_cache
    return cuda.compile_with_cache(
cupy/cuda/compiler.py:428: in compile_with_cache
    return _compile_with_cache_hip(
cupy/cuda/compiler.py:829: in _compile_with_cache_hip
    temp_path = tf.name
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <tempfile._TemporaryFileWrapper object at 0x7f50108fc490>, exc = None
value = None, tb = None

    def __exit__(self, exc, value, tb):
>       result = self.file.__exit__(exc, value, tb)
E       AssertionError: Only cupy raises error
E       
E       Traceback (most recent call last):
E         File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.t8hdvgF7FH/cupy/cupy/testing/_helper.py", line 47, in _call_func
E           result = impl(self, *args, **kw)
E         File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.t8hdvgF7FH/cupy/tests/cupy_tests/indexing_tests/test_insert.py", line 249, in test_fill_diagonal
E           xp.fill_diagonal(a, val=val, wrap=self.wrap)
E         File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.t8hdvgF7FH/cupy/cupy/_indexing/insert.py", line 180, in fill_diagonal
E           a.flat[:end:step] = val
E         File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.t8hdvgF7FH/cupy/cupy/_indexing/iterate.py", line 67, in __setitem__
E           _flatiter_setitem_slice(value, s_start, s_step, base, size=size)
E         File "cupy/core/_kernel.pyx", line 840, in cupy.core._kernel.ElementwiseKernel.__call__
E           kern = self._get_elementwise_kernel(dev_id, arginfos, type_map)
E         File "cupy/core/_kernel.pyx", line 865, in cupy.core._kernel.ElementwiseKernel._get_elementwise_kernel
E           kern = _get_elementwise_kernel(
E         File "cupy/_util.pyx", line 59, in cupy._util.memoize.decorator.ret
E           result = f(*args, **kwargs)
E         File "cupy/core/_kernel.pyx", line 652, in cupy.core._kernel._get_elementwise_kernel
E           return _get_simple_elementwise_kernel(
E         File "cupy/core/_kernel.pyx", line 38, in cupy.core._kernel._get_simple_elementwise_kernel
E           cpdef function.Function _get_simple_elementwise_kernel(
E         File "cupy/core/_kernel.pyx", line 61, in cupy.core._kernel._get_simple_elementwise_kernel
E           module = compile_with_cache(module_code, options)
E         File "cupy/core/core.pyx", line 2021, in cupy.core.core.compile_with_cache
E           return cuda.compile_with_cache(
E         File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.t8hdvgF7FH/cupy/cupy/cuda/compiler.py", line 428, in compile_with_cache
E           return _compile_with_cache_hip(
E         File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.t8hdvgF7FH/cupy/cupy/cuda/compiler.py", line 829, in _compile_with_cache_hip
E           temp_path = tf.name
E         File "/home/kmaeh/.pyenv/versions/3.8.7/lib/python3.8/tempfile.py", line 491, in __exit__
E           result = self.file.__exit__(exc, value, tb)
E       OSError: [Errno 28] No space left on device

/home/kmaeh/.pyenv/versions/3.8.7/lib/python3.8/tempfile.py:491: AssertionError
----------------------------- Captured stdout call -----------------------------
dtype is <class 'numpy.float64'>
_ TestFillDiagonal_param_10_{shape=(2, 2, 2), val=0, wrap=True}.test_fill_diagonal _

self = <<cupy_tests.indexing_tests.test_insert.TestFillDiagonal_param_10_{shape=(2, 2, 2), val=0, wrap=True} testMethod=test_fill_diagonal>  parameter: {'shape': (2, 2, 2), 'val': 0, 'wrap': True}>
xp = <module 'cupy' from '/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.t8hdvgF7FH/cupy/cupy/__init__.py'>
dtype = <class 'numpy.float64'>

    @testing.for_all_dtypes()
    @testing.numpy_cupy_array_equal()
    def test_fill_diagonal(self, xp, dtype):
        a = testing.shaped_arange(self.shape, xp, dtype)
        val = self._compute_val(xp)
>       xp.fill_diagonal(a, val=val, wrap=self.wrap)

tests/cupy_tests/indexing_tests/test_insert.py:249: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
cupy/_indexing/insert.py:180: in fill_diagonal
    a.flat[:end:step] = val
cupy/_indexing/iterate.py:67: in __setitem__
    _flatiter_setitem_slice(value, s_start, s_step, base, size=size)
cupy/core/_kernel.pyx:840: in cupy.core._kernel.ElementwiseKernel.__call__
    kern = self._get_elementwise_kernel(dev_id, arginfos, type_map)
cupy/core/_kernel.pyx:865: in cupy.core._kernel.ElementwiseKernel._get_elementwise_kernel
    kern = _get_elementwise_kernel(
cupy/_util.pyx:59: in cupy._util.memoize.decorator.ret
    result = f(*args, **kwargs)
cupy/core/_kernel.pyx:652: in cupy.core._kernel._get_elementwise_kernel
    return _get_simple_elementwise_kernel(
cupy/core/_kernel.pyx:38: in cupy.core._kernel._get_simple_elementwise_kernel
    cpdef function.Function _get_simple_elementwise_kernel(
cupy/core/_kernel.pyx:61: in cupy.core._kernel._get_simple_elementwise_kernel
    module = compile_with_cache(module_code, options)
cupy/core/core.pyx:2021: in cupy.core.core.compile_with_cache
    return cuda.compile_with_cache(
cupy/cuda/compiler.py:428: in compile_with_cache
    return _compile_with_cache_hip(
cupy/cuda/compiler.py:829: in _compile_with_cache_hip
    temp_path = tf.name
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <tempfile._TemporaryFileWrapper object at 0x7f50108cd490>, exc = None
value = None, tb = None

    def __exit__(self, exc, value, tb):
>       result = self.file.__exit__(exc, value, tb)
E       AssertionError: Only cupy raises error
E       
E       Traceback (most recent call last):
E         File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.t8hdvgF7FH/cupy/cupy/testing/_helper.py", line 47, in _call_func
E           result = impl(self, *args, **kw)
E         File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.t8hdvgF7FH/cupy/tests/cupy_tests/indexing_tests/test_insert.py", line 249, in test_fill_diagonal
E           xp.fill_diagonal(a, val=val, wrap=self.wrap)
E         File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.t8hdvgF7FH/cupy/cupy/_indexing/insert.py", line 180, in fill_diagonal
E           a.flat[:end:step] = val
E         File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.t8hdvgF7FH/cupy/cupy/_indexing/iterate.py", line 67, in __setitem__
E           _flatiter_setitem_slice(value, s_start, s_step, base, size=size)
E         File "cupy/core/_kernel.pyx", line 840, in cupy.core._kernel.ElementwiseKernel.__call__
E           kern = self._get_elementwise_kernel(dev_id, arginfos, type_map)
E         File "cupy/core/_kernel.pyx", line 865, in cupy.core._kernel.ElementwiseKernel._get_elementwise_kernel
E           kern = _get_elementwise_kernel(
E         File "cupy/_util.pyx", line 59, in cupy._util.memoize.decorator.ret
E           result = f(*args, **kwargs)
E         File "cupy/core/_kernel.pyx", line 652, in cupy.core._kernel._get_elementwise_kernel
E           return _get_simple_elementwise_kernel(
E         File "cupy/core/_kernel.pyx", line 38, in cupy.core._kernel._get_simple_elementwise_kernel
E           cpdef function.Function _get_simple_elementwise_kernel(
E         File "cupy/core/_kernel.pyx", line 61, in cupy.core._kernel._get_simple_elementwise_kernel
E           module = compile_with_cache(module_code, options)
E         File "cupy/core/core.pyx", line 2021, in cupy.core.core.compile_with_cache
E           return cuda.compile_with_cache(
E         File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.t8hdvgF7FH/cupy/cupy/cuda/compiler.py", line 428, in compile_with_cache
E           return _compile_with_cache_hip(
E         File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.t8hdvgF7FH/cupy/cupy/cuda/compiler.py", line 829, in _compile_with_cache_hip
E           temp_path = tf.name
E         File "/home/kmaeh/.pyenv/versions/3.8.7/lib/python3.8/tempfile.py", line 491, in __exit__
E           result = self.file.__exit__(exc, value, tb)
E       OSError: [Errno 28] No space left on device

/home/kmaeh/.pyenv/versions/3.8.7/lib/python3.8/tempfile.py:491: AssertionError
----------------------------- Captured stdout call -----------------------------
dtype is <class 'numpy.float64'>
_ TestFillDiagonal_param_11_{shape=(2, 2, 2), val=0, wrap=False}.test_fill_diagonal _

self = <<cupy_tests.indexing_tests.test_insert.TestFillDiagonal_param_11_{shape=(2, 2, 2), val=0, wrap=False} testMethod=test_fill_diagonal>  parameter: {'shape': (2, 2, 2), 'val': 0, 'wrap': False}>
xp = <module 'cupy' from '/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.t8hdvgF7FH/cupy/cupy/__init__.py'>
dtype = <class 'numpy.float64'>

    @testing.for_all_dtypes()
    @testing.numpy_cupy_array_equal()
    def test_fill_diagonal(self, xp, dtype):
        a = testing.shaped_arange(self.shape, xp, dtype)
        val = self._compute_val(xp)
>       xp.fill_diagonal(a, val=val, wrap=self.wrap)

tests/cupy_tests/indexing_tests/test_insert.py:249: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
cupy/_indexing/insert.py:180: in fill_diagonal
    a.flat[:end:step] = val
cupy/_indexing/iterate.py:67: in __setitem__
    _flatiter_setitem_slice(value, s_start, s_step, base, size=size)
cupy/core/_kernel.pyx:840: in cupy.core._kernel.ElementwiseKernel.__call__
    kern = self._get_elementwise_kernel(dev_id, arginfos, type_map)
cupy/core/_kernel.pyx:865: in cupy.core._kernel.ElementwiseKernel._get_elementwise_kernel
    kern = _get_elementwise_kernel(
cupy/_util.pyx:59: in cupy._util.memoize.decorator.ret
    result = f(*args, **kwargs)
cupy/core/_kernel.pyx:652: in cupy.core._kernel._get_elementwise_kernel
    return _get_simple_elementwise_kernel(
cupy/core/_kernel.pyx:38: in cupy.core._kernel._get_simple_elementwise_kernel
    cpdef function.Function _get_simple_elementwise_kernel(
cupy/core/_kernel.pyx:61: in cupy.core._kernel._get_simple_elementwise_kernel
    module = compile_with_cache(module_code, options)
cupy/core/core.pyx:2021: in cupy.core.core.compile_with_cache
    return cuda.compile_with_cache(
cupy/cuda/compiler.py:428: in compile_with_cache
    return _compile_with_cache_hip(
cupy/cuda/compiler.py:829: in _compile_with_cache_hip
    temp_path = tf.name
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <tempfile._TemporaryFileWrapper object at 0x7f5010158df0>, exc = None
value = None, tb = None

    def __exit__(self, exc, value, tb):
>       result = self.file.__exit__(exc, value, tb)
E       AssertionError: Only cupy raises error
E       
E       Traceback (most recent call last):
E         File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.t8hdvgF7FH/cupy/cupy/testing/_helper.py", line 47, in _call_func
E           result = impl(self, *args, **kw)
E         File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.t8hdvgF7FH/cupy/tests/cupy_tests/indexing_tests/test_insert.py", line 249, in test_fill_diagonal
E           xp.fill_diagonal(a, val=val, wrap=self.wrap)
E         File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.t8hdvgF7FH/cupy/cupy/_indexing/insert.py", line 180, in fill_diagonal
E           a.flat[:end:step] = val
E         File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.t8hdvgF7FH/cupy/cupy/_indexing/iterate.py", line 67, in __setitem__
E           _flatiter_setitem_slice(value, s_start, s_step, base, size=size)
E         File "cupy/core/_kernel.pyx", line 840, in cupy.core._kernel.ElementwiseKernel.__call__
E           kern = self._get_elementwise_kernel(dev_id, arginfos, type_map)
E         File "cupy/core/_kernel.pyx", line 865, in cupy.core._kernel.ElementwiseKernel._get_elementwise_kernel
E           kern = _get_elementwise_kernel(
E         File "cupy/_util.pyx", line 59, in cupy._util.memoize.decorator.ret
E           result = f(*args, **kwargs)
E         File "cupy/core/_kernel.pyx", line 652, in cupy.core._kernel._get_elementwise_kernel
E           return _get_simple_elementwise_kernel(
E         File "cupy/core/_kernel.pyx", line 38, in cupy.core._kernel._get_simple_elementwise_kernel
E           cpdef function.Function _get_simple_elementwise_kernel(
E         File "cupy/core/_kernel.pyx", line 61, in cupy.core._kernel._get_simple_elementwise_kernel
E           module = compile_with_cache(module_code, options)
E         File "cupy/core/core.pyx", line 2021, in cupy.core.core.compile_with_cache
E           return cuda.compile_with_cache(
E         File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.t8hdvgF7FH/cupy/cupy/cuda/compiler.py", line 428, in compile_with_cache
E           return _compile_with_cache_hip(
E         File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.t8hdvgF7FH/cupy/cupy/cuda/compiler.py", line 829, in _compile_with_cache_hip
E           temp_path = tf.name
E         File "/home/kmaeh/.pyenv/versions/3.8.7/lib/python3.8/tempfile.py", line 491, in __exit__
E           result = self.file.__exit__(exc, value, tb)
E       OSError: [Errno 28] No space left on device

/home/kmaeh/.pyenv/versions/3.8.7/lib/python3.8/tempfile.py:491: AssertionError
----------------------------- Captured stdout call -----------------------------
dtype is <class 'numpy.float64'>
_ TestFillDiagonal_param_12_{shape=(2, 2, 2), val=(2,), wrap=True}.test_fill_diagonal _

self = <<cupy_tests.indexing_tests.test_insert.TestFillDiagonal_param_12_{shape=(2, 2, 2), val=(2,), wrap=True} testMethod=test_fill_diagonal>  parameter: {'shape': (2, 2, 2), 'val': (2,), 'wrap': True}>
xp = <module 'cupy' from '/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.t8hdvgF7FH/cupy/cupy/__init__.py'>
dtype = <class 'numpy.float64'>

    @testing.for_all_dtypes()
    @testing.numpy_cupy_array_equal()
    def test_fill_diagonal(self, xp, dtype):
        a = testing.shaped_arange(self.shape, xp, dtype)
        val = self._compute_val(xp)
>       xp.fill_diagonal(a, val=val, wrap=self.wrap)

tests/cupy_tests/indexing_tests/test_insert.py:249: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
cupy/_indexing/insert.py:180: in fill_diagonal
    a.flat[:end:step] = val
cupy/_indexing/iterate.py:67: in __setitem__
    _flatiter_setitem_slice(value, s_start, s_step, base, size=size)
cupy/core/_kernel.pyx:840: in cupy.core._kernel.ElementwiseKernel.__call__
    kern = self._get_elementwise_kernel(dev_id, arginfos, type_map)
cupy/core/_kernel.pyx:865: in cupy.core._kernel.ElementwiseKernel._get_elementwise_kernel
    kern = _get_elementwise_kernel(
cupy/_util.pyx:59: in cupy._util.memoize.decorator.ret
    result = f(*args, **kwargs)
cupy/core/_kernel.pyx:652: in cupy.core._kernel._get_elementwise_kernel
    return _get_simple_elementwise_kernel(
cupy/core/_kernel.pyx:38: in cupy.core._kernel._get_simple_elementwise_kernel
    cpdef function.Function _get_simple_elementwise_kernel(
cupy/core/_kernel.pyx:61: in cupy.core._kernel._get_simple_elementwise_kernel
    module = compile_with_cache(module_code, options)
cupy/core/core.pyx:2021: in cupy.core.core.compile_with_cache
    return cuda.compile_with_cache(
cupy/cuda/compiler.py:428: in compile_with_cache
    return _compile_with_cache_hip(
cupy/cuda/compiler.py:829: in _compile_with_cache_hip
    temp_path = tf.name
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <tempfile._TemporaryFileWrapper object at 0x7f5010e5dee0>, exc = None
value = None, tb = None

    def __exit__(self, exc, value, tb):
>       result = self.file.__exit__(exc, value, tb)
E       AssertionError: Only cupy raises error
E       
E       Traceback (most recent call last):
E         File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.t8hdvgF7FH/cupy/cupy/testing/_helper.py", line 47, in _call_func
E           result = impl(self, *args, **kw)
E         File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.t8hdvgF7FH/cupy/tests/cupy_tests/indexing_tests/test_insert.py", line 249, in test_fill_diagonal
E           xp.fill_diagonal(a, val=val, wrap=self.wrap)
E         File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.t8hdvgF7FH/cupy/cupy/_indexing/insert.py", line 180, in fill_diagonal
E           a.flat[:end:step] = val
E         File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.t8hdvgF7FH/cupy/cupy/_indexing/iterate.py", line 67, in __setitem__
E           _flatiter_setitem_slice(value, s_start, s_step, base, size=size)
E         File "cupy/core/_kernel.pyx", line 840, in cupy.core._kernel.ElementwiseKernel.__call__
E           kern = self._get_elementwise_kernel(dev_id, arginfos, type_map)
E         File "cupy/core/_kernel.pyx", line 865, in cupy.core._kernel.ElementwiseKernel._get_elementwise_kernel
E           kern = _get_elementwise_kernel(
E         File "cupy/_util.pyx", line 59, in cupy._util.memoize.decorator.ret
E           result = f(*args, **kwargs)
E         File "cupy/core/_kernel.pyx", line 652, in cupy.core._kernel._get_elementwise_kernel
E           return _get_simple_elementwise_kernel(
E         File "cupy/core/_kernel.pyx", line 38, in cupy.core._kernel._get_simple_elementwise_kernel
E           cpdef function.Function _get_simple_elementwise_kernel(
E         File "cupy/core/_kernel.pyx", line 61, in cupy.core._kernel._get_simple_elementwise_kernel
E           module = compile_with_cache(module_code, options)
E         File "cupy/core/core.pyx", line 2021, in cupy.core.core.compile_with_cache
E           return cuda.compile_with_cache(
E         File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.t8hdvgF7FH/cupy/cupy/cuda/compiler.py", line 428, in compile_with_cache
E           return _compile_with_cache_hip(
E         File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.t8hdvgF7FH/cupy/cupy/cuda/compiler.py", line 829, in _compile_with_cache_hip
E           temp_path = tf.name
E         File "/home/kmaeh/.pyenv/versions/3.8.7/lib/python3.8/tempfile.py", line 491, in __exit__
E           result = self.file.__exit__(exc, value, tb)
E       OSError: [Errno 28] No space left on device

/home/kmaeh/.pyenv/versions/3.8.7/lib/python3.8/tempfile.py:491: AssertionError
----------------------------- Captured stdout call -----------------------------
dtype is <class 'numpy.float64'>
_ TestFillDiagonal_param_13_{shape=(2, 2, 2), val=(2,), wrap=False}.test_fill_diagonal _

self = <<cupy_tests.indexing_tests.test_insert.TestFillDiagonal_param_13_{shape=(2, 2, 2), val=(2,), wrap=False} testMethod=test_fill_diagonal>  parameter: {'shape': (2, 2, 2), 'val': (2,), 'wrap': False}>
xp = <module 'cupy' from '/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.t8hdvgF7FH/cupy/cupy/__init__.py'>
dtype = <class 'numpy.float64'>

    @testing.for_all_dtypes()
    @testing.numpy_cupy_array_equal()
    def test_fill_diagonal(self, xp, dtype):
        a = testing.shaped_arange(self.shape, xp, dtype)
        val = self._compute_val(xp)
>       xp.fill_diagonal(a, val=val, wrap=self.wrap)

tests/cupy_tests/indexing_tests/test_insert.py:249: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
cupy/_indexing/insert.py:180: in fill_diagonal
    a.flat[:end:step] = val
cupy/_indexing/iterate.py:67: in __setitem__
    _flatiter_setitem_slice(value, s_start, s_step, base, size=size)
cupy/core/_kernel.pyx:840: in cupy.core._kernel.ElementwiseKernel.__call__
    kern = self._get_elementwise_kernel(dev_id, arginfos, type_map)
cupy/core/_kernel.pyx:865: in cupy.core._kernel.ElementwiseKernel._get_elementwise_kernel
    kern = _get_elementwise_kernel(
cupy/_util.pyx:59: in cupy._util.memoize.decorator.ret
    result = f(*args, **kwargs)
cupy/core/_kernel.pyx:652: in cupy.core._kernel._get_elementwise_kernel
    return _get_simple_elementwise_kernel(
cupy/core/_kernel.pyx:38: in cupy.core._kernel._get_simple_elementwise_kernel
    cpdef function.Function _get_simple_elementwise_kernel(
cupy/core/_kernel.pyx:61: in cupy.core._kernel._get_simple_elementwise_kernel
    module = compile_with_cache(module_code, options)
cupy/core/core.pyx:2021: in cupy.core.core.compile_with_cache
    return cuda.compile_with_cache(
cupy/cuda/compiler.py:428: in compile_with_cache
    return _compile_with_cache_hip(
cupy/cuda/compiler.py:829: in _compile_with_cache_hip
    temp_path = tf.name
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <tempfile._TemporaryFileWrapper object at 0x7f50105d2be0>, exc = None
value = None, tb = None

    def __exit__(self, exc, value, tb):
>       result = self.file.__exit__(exc, value, tb)
E       AssertionError: Only cupy raises error
E       
E       Traceback (most recent call last):
E         File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.t8hdvgF7FH/cupy/cupy/testing/_helper.py", line 47, in _call_func
E           result = impl(self, *args, **kw)
E         File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.t8hdvgF7FH/cupy/tests/cupy_tests/indexing_tests/test_insert.py", line 249, in test_fill_diagonal
E           xp.fill_diagonal(a, val=val, wrap=self.wrap)
E         File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.t8hdvgF7FH/cupy/cupy/_indexing/insert.py", line 180, in fill_diagonal
E           a.flat[:end:step] = val
E         File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.t8hdvgF7FH/cupy/cupy/_indexing/iterate.py", line 67, in __setitem__
E           _flatiter_setitem_slice(value, s_start, s_step, base, size=size)
E         File "cupy/core/_kernel.pyx", line 840, in cupy.core._kernel.ElementwiseKernel.__call__
E           kern = self._get_elementwise_kernel(dev_id, arginfos, type_map)
E         File "cupy/core/_kernel.pyx", line 865, in cupy.core._kernel.ElementwiseKernel._get_elementwise_kernel
E           kern = _get_elementwise_kernel(
E         File "cupy/_util.pyx", line 59, in cupy._util.memoize.decorator.ret
E           result = f(*args, **kwargs)
E         File "cupy/core/_kernel.pyx", line 652, in cupy.core._kernel._get_elementwise_kernel
E           return _get_simple_elementwise_kernel(
E         File "cupy/core/_kernel.pyx", line 38, in cupy.core._kernel._get_simple_elementwise_kernel
E           cpdef function.Function _get_simple_elementwise_kernel(
E         File "cupy/core/_kernel.pyx", line 61, in cupy.core._kernel._get_simple_elementwise_kernel
E           module = compile_with_cache(module_code, options)
E         File "cupy/core/core.pyx", line 2021, in cupy.core.core.compile_with_cache
E           return cuda.compile_with_cache(
E         File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.t8hdvgF7FH/cupy/cupy/cuda/compiler.py", line 428, in compile_with_cache
E           return _compile_with_cache_hip(
E         File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.t8hdvgF7FH/cupy/cupy/cuda/compiler.py", line 829, in _compile_with_cache_hip
E           temp_path = tf.name
E         File "/home/kmaeh/.pyenv/versions/3.8.7/lib/python3.8/tempfile.py", line 491, in __exit__
E           result = self.file.__exit__(exc, value, tb)
E       OSError: [Errno 28] No space left on device

/home/kmaeh/.pyenv/versions/3.8.7/lib/python3.8/tempfile.py:491: AssertionError
----------------------------- Captured stdout call -----------------------------
dtype is <class 'numpy.float64'>
_______ TestPoly1dInit_param_0_{variable=None}.test_poly1d_numpy_poly1d ________
cupy/testing/_helper.py:825: in test_func
    impl(self, *args, **kw)
cupy/testing/_helper.py:343: in test_func
    check_func(cupy_r, numpy_r)
cupy/testing/_helper.py:648: in check_func
    _array.assert_array_equal(x, y, err_msg, verbose, strides_check)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

x = array([1., 2., 3., 4., 5.], dtype=float32)
y = array([1., 2., 3., 4., 5.], dtype=float32), err_msg = '', verbose = True
strides_check = False

    def assert_array_equal(x, y, err_msg='', verbose=True, strides_check=False):
        """Raises an AssertionError if two array_like objects are not equal.
    
        Args:
             x(numpy.ndarray or cupy.ndarray): The actual object to check.
             y(numpy.ndarray or cupy.ndarray): The desired, expected object.
             strides_check(bool): If ``True``, consistency of strides is also
                 checked.
             err_msg(str): The error message to be printed in case of failure.
             verbose(bool): If ``True``, the conflicting values
                 are appended to the error message.
    
        .. seealso:: :func:`numpy.testing.assert_array_equal`
        """
>       numpy.testing.assert_array_equal(
            cupy.asnumpy(x), cupy.asnumpy(y), err_msg=err_msg,
            verbose=verbose)
E       AssertionError: 
E       Arrays are not equal
E       
E       Mismatched elements: 2 / 5 (40%)
E       Max absolute difference: 1.
E       Max relative difference: 1.
E        x: array([0.   , 1.875, 3.   , 4.   , 5.   ], dtype=float32)
E        y: array([1., 2., 3., 4., 5.], dtype=float32)

cupy/testing/_array.py:91: AssertionError
----------------------------- Captured stdout call -----------------------------
dtype is <class 'numpy.float32'>
___ TestPoly1dInit_param_0_{variable=None}.test_poly1d_numpy_poly1d_variable ___
cupy/testing/_helper.py:825: in test_func
    impl(self, *args, **kw)
cupy/testing/_helper.py:343: in test_func
    check_func(cupy_r, numpy_r)
cupy/testing/_helper.py:648: in check_func
    _array.assert_array_equal(x, y, err_msg, verbose, strides_check)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

x = array([1., 2., 3., 4., 5.], dtype=float32)
y = array([1., 2., 3., 4., 5.], dtype=float32), err_msg = '', verbose = True
strides_check = False

    def assert_array_equal(x, y, err_msg='', verbose=True, strides_check=False):
        """Raises an AssertionError if two array_like objects are not equal.
    
        Args:
             x(numpy.ndarray or cupy.ndarray): The actual object to check.
             y(numpy.ndarray or cupy.ndarray): The desired, expected object.
             strides_check(bool): If ``True``, consistency of strides is also
                 checked.
             err_msg(str): The error message to be printed in case of failure.
             verbose(bool): If ``True``, the conflicting values
                 are appended to the error message.
    
        .. seealso:: :func:`numpy.testing.assert_array_equal`
        """
>       numpy.testing.assert_array_equal(
            cupy.asnumpy(x), cupy.asnumpy(y), err_msg=err_msg,
            verbose=verbose)
E       AssertionError: 
E       Arrays are not equal
E       
E       Mismatched elements: 2 / 5 (40%)
E       Max absolute difference: 1.
E       Max relative difference: 1.
E        x: array([0.   , 1.875, 3.   , 4.   , 5.   ], dtype=float32)
E        y: array([1., 2., 3., 4., 5.], dtype=float32)

cupy/testing/_array.py:91: AssertionError
----------------------------- Captured stdout call -----------------------------
dtype is <class 'numpy.float32'>
________ TestPoly1dInit_param_1_{variable='y'}.test_poly1d_numpy_poly1d ________
cupy/testing/_helper.py:825: in test_func
    impl(self, *args, **kw)
cupy/testing/_helper.py:343: in test_func
    check_func(cupy_r, numpy_r)
cupy/testing/_helper.py:648: in check_func
    _array.assert_array_equal(x, y, err_msg, verbose, strides_check)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

x = array([1., 2., 3., 4., 5.], dtype=float32)
y = array([1., 2., 3., 4., 5.], dtype=float32), err_msg = '', verbose = True
strides_check = False

    def assert_array_equal(x, y, err_msg='', verbose=True, strides_check=False):
        """Raises an AssertionError if two array_like objects are not equal.
    
        Args:
             x(numpy.ndarray or cupy.ndarray): The actual object to check.
             y(numpy.ndarray or cupy.ndarray): The desired, expected object.
             strides_check(bool): If ``True``, consistency of strides is also
                 checked.
             err_msg(str): The error message to be printed in case of failure.
             verbose(bool): If ``True``, the conflicting values
                 are appended to the error message.
    
        .. seealso:: :func:`numpy.testing.assert_array_equal`
        """
>       numpy.testing.assert_array_equal(
            cupy.asnumpy(x), cupy.asnumpy(y), err_msg=err_msg,
            verbose=verbose)
E       AssertionError: 
E       Arrays are not equal
E       
E       Mismatched elements: 2 / 5 (40%)
E       Max absolute difference: 1.
E       Max relative difference: 1.
E        x: array([0.   , 1.875, 3.   , 4.   , 5.   ], dtype=float32)
E        y: array([1., 2., 3., 4., 5.], dtype=float32)

cupy/testing/_array.py:91: AssertionError
----------------------------- Captured stdout call -----------------------------
dtype is <class 'numpy.float32'>
___ TestPoly1dInit_param_1_{variable='y'}.test_poly1d_numpy_poly1d_variable ____
cupy/testing/_helper.py:825: in test_func
    impl(self, *args, **kw)
cupy/testing/_helper.py:343: in test_func
    check_func(cupy_r, numpy_r)
cupy/testing/_helper.py:648: in check_func
    _array.assert_array_equal(x, y, err_msg, verbose, strides_check)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

x = array([1., 2., 3., 4., 5.], dtype=float32)
y = array([1., 2., 3., 4., 5.], dtype=float32), err_msg = '', verbose = True
strides_check = False

    def assert_array_equal(x, y, err_msg='', verbose=True, strides_check=False):
        """Raises an AssertionError if two array_like objects are not equal.
    
        Args:
             x(numpy.ndarray or cupy.ndarray): The actual object to check.
             y(numpy.ndarray or cupy.ndarray): The desired, expected object.
             strides_check(bool): If ``True``, consistency of strides is also
                 checked.
             err_msg(str): The error message to be printed in case of failure.
             verbose(bool): If ``True``, the conflicting values
                 are appended to the error message.
    
        .. seealso:: :func:`numpy.testing.assert_array_equal`
        """
>       numpy.testing.assert_array_equal(
            cupy.asnumpy(x), cupy.asnumpy(y), err_msg=err_msg,
            verbose=verbose)
E       AssertionError: 
E       Arrays are not equal
E       
E       Mismatched elements: 2 / 5 (40%)
E       Max absolute difference: 1.
E       Max relative difference: 1.
E        x: array([0.   , 1.875, 3.   , 4.   , 5.   ], dtype=float32)
E        y: array([1., 2., 3., 4., 5.], dtype=float32)

cupy/testing/_array.py:91: AssertionError
----------------------------- Captured stdout call -----------------------------
dtype is <class 'numpy.float32'>
___________________ TestRaw.test_raw_multidimensional_array ____________________

self = <cupy.cuda.compiler._NVRTCProgram object at 0x7f4f1da2a1f0>
options = ('-D CUPY_JIT_MODE', '-I/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.t8hdvgF7FH/cupy/cupy/core/include', '-I/opt/rocm/include')
log_stream = None

    def compile(self, options=(), log_stream=None):
        try:
            if self.name_expressions:
                for ker in self.name_expressions:
                    nvrtc.addAddNameExpression(self.ptr, ker)
>           nvrtc.compileProgram(self.ptr, options)

cupy/cuda/compiler.py:623: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

>   cpdef compileProgram(intptr_t prog, options):

cupy_backends/cuda/libs/nvrtc.pyx:133: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

>   check_status(status)

cupy_backends/cuda/libs/nvrtc.pyx:145: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

>   raise NVRTCError(status)
E   cupy_backends.cuda.libs.nvrtc.NVRTCError: HIPRTC_ERROR_COMPILATION (6)

cupy_backends/cuda/libs/nvrtc.pyx:64: NVRTCError

During handling of the above exception, another exception occurred:

self = <cupyx_tests.jit_tests.test_raw.TestRaw testMethod=test_raw_multidimensional_array>

    def test_raw_multidimensional_array(self):
        @jit.rawkernel()
        def f(x, y, n_row, n_col):
            tid = jit.threadIdx.x + jit.blockDim.x * jit.blockIdx.x
            ntid = jit.blockDim.x * jit.gridDim.x
            size = n_row * n_col
            for i in range(tid, size, ntid):
                i_row = i // n_col
                i_col = i % n_col
                y[i_row, i_col] = x[i_row, i_col]
    
        n, m = numpy.uint32(12), numpy.uint32(13)
        x = testing.shaped_random((n, m), dtype=numpy.int32, seed=0)
        y = testing.shaped_random((n, m), dtype=numpy.int32, seed=1)
>       f((5,), (6,), (x, y, n, m))

tests/cupyx_tests/jit_tests/test_raw.py:59: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
cupyx/jit/_interface.py:67: in __call__
    module = cupy.core.core.compile_with_cache(
cupy/core/core.pyx:1956: in cupy.core.core.compile_with_cache
    cpdef function.Module compile_with_cache(
cupy/core/core.pyx:2021: in cupy.core.core.compile_with_cache
    return cuda.compile_with_cache(
cupy/cuda/compiler.py:428: in compile_with_cache
    return _compile_with_cache_hip(
cupy/cuda/compiler.py:811: in _compile_with_cache_hip
    binary, mapping = compile_using_nvrtc(
cupy/cuda/compiler.py:271: in compile_using_nvrtc
    return _compile(source, options, cu_path,
cupy/cuda/compiler.py:255: in _compile
    ptx, mapping = prog.compile(options, log_stream)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <cupy.cuda.compiler._NVRTCProgram object at 0x7f4f1da2a1f0>
options = ('-D CUPY_JIT_MODE', '-I/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.t8hdvgF7FH/cupy/cupy/core/include', '-I/opt/rocm/include')
log_stream = None

    def compile(self, options=(), log_stream=None):
        try:
            if self.name_expressions:
                for ker in self.name_expressions:
                    nvrtc.addAddNameExpression(self.ptr, ker)
            nvrtc.compileProgram(self.ptr, options)
            mapping = None
            if self.name_expressions:
                mapping = {}
                for ker in self.name_expressions:
                    mapping[ker] = nvrtc.getLoweredName(self.ptr, ker)
            if log_stream is not None:
                log_stream.write(nvrtc.getProgramLog(self.ptr))
            # TODO(leofang): use getCUBIN() for _cuda_version >= 11010?
            return nvrtc.getPTX(self.ptr), mapping
        except nvrtc.NVRTCError:
            log = nvrtc.getProgramLog(self.ptr)
>           raise CompileException(log, self.src, self.name, options,
                                   'nvrtc' if not runtime.is_hip else 'hiprtc')
E           cupy.cuda.compiler.CompileException: /tmp/comgr-f603ca/input/CompileSource:5417:7: error: no member named '_indexing' in 'CArray<int, 2, true, true>'
E               y._indexing(thrust::make_tuple(i_row, i_col)) = x._indexing(thrust::make_tuple(i_row, i_col));
E               ~ ^
E           /tmp/comgr-f603ca/input/CompileSource:5417:55: error: no member named '_indexing' in 'CArray<int, 2, true, true>'
E               y._indexing(thrust::make_tuple(i_row, i_col)) = x._indexing(thrust::make_tuple(i_row, i_col));
E                                                               ~ ^
E           /tmp/comgr-f603ca/input/CompileSource:5417:17: error: no member named 'make_tuple' in namespace 'thrust'; did you mean 'std::make_tuple'?
E               y._indexing(thrust::make_tuple(i_row, i_col)) = x._indexing(thrust::make_tuple(i_row, i_col));
E                           ^~~~~~~~~~~~~~~~~~
E                           std::make_tuple
E           /usr/lib/gcc/x86_64-linux-gnu/7.5.0/../../../../include/c++/7.5.0/tuple:1448:5: note: 'std::make_tuple' declared here
E               make_tuple(_Elements&&... __args)
E               ^
E           /tmp/comgr-f603ca/input/CompileSource:5417:65: error: no member named 'make_tuple' in namespace 'thrust'; did you mean 'std::make_tuple'?
E               y._indexing(thrust::make_tuple(i_row, i_col)) = x._indexing(thrust::make_tuple(i_row, i_col));
E                                                                           ^~~~~~~~~~~~~~~~~~
E                                                                           std::make_tuple
E           /usr/lib/gcc/x86_64-linux-gnu/7.5.0/../../../../include/c++/7.5.0/tuple:1448:5: note: 'std::make_tuple' declared here
E               make_tuple(_Elements&&... __args)
E               ^
E           4 errors generated when compiling for gfx906.
E           Error: Failed to compile opencl source (from CL or HIP source to LLVM IR).

cupy/cuda/compiler.py:635: CompileException
______ TestLUSolve_param_2_{shapes=((4, 4), (4,)), trans=2}.test_lu_solve ______

self = <<cupyx_tests.scipy_tests.linalg_tests.test_decomp_lu.TestLUSolve_param_2_{shapes=((4, 4), (4,)), trans=2} testMethod=test_lu_solve>  parameter: {'shapes': ((4, 4), (4,)), 'trans': 2}>
xp = <module 'cupy' from '/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.t8hdvgF7FH/cupy/cupy/__init__.py'>
scp = <module 'cupyx.scipy' from '/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.t8hdvgF7FH/cupy/cupyx/scipy/__init__.py'>
dtype = <class 'numpy.float32'>

    @testing.for_dtypes('fdFD')
    @testing.numpy_cupy_allclose(atol=1e-5, scipy_name='scp')
    def test_lu_solve(self, xp, scp, dtype):
        a_shape, b_shape = self.shapes
        A = testing.shaped_random(a_shape, xp, dtype=dtype)
        b = testing.shaped_random(b_shape, xp, dtype=dtype)
        lu = scp.linalg.lu_factor(A)
>       return scp.linalg.lu_solve(lu, b, trans=self.trans)

tests/cupyx_tests/scipy_tests/linalg_tests/test_decomp_lu.py:133: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

lu_and_piv = (array([[ 9.636627  ,  3.8344152 ,  7.91725   ,  5.288949  ],
       [ 0.58946407,  6.995716  , -3.956574  , -2.246352...,
       [ 0.43962973,  0.6823059 ,  0.83048815,  4.776696  ]],
      dtype=float32), array([2, 3, 2, 3], dtype=int32))
b = array([ 1.0000000e+00,  0.0000000e+00, -3.5134796e-08,  5.9604645e-08],
      dtype=float32)
trans = 2, overwrite_b = False, check_finite = True

    def lu_solve(lu_and_piv, b, trans=0, overwrite_b=False, check_finite=True):
        """Solve an equation system, ``a * x = b``, given the LU factorization of ``a``
    
        Args:
            lu_and_piv (tuple): LU factorization of matrix ``a`` (``(M, M)``)
                together with pivot indices.
            b (cupy.ndarray): The matrix with dimension ``(M,)`` or
                ``(M, N)``.
            trans ({0, 1, 2}): Type of system to solve:
    
                ========  =========
                trans     system
                ========  =========
                0         a x  = b
                1         a^T x = b
                2         a^H x = b
                ========  =========
            overwrite_b (bool): Allow overwriting data in b (may enhance
                performance)
            check_finite (bool): Whether to check that the input matrices contain
                only finite numbers. Disabling may give a performance gain, but may
                result in problems (crashes, non-termination) if the inputs do
                contain infinities or NaNs.
    
        Returns:
            cupy.ndarray:
                The matrix with dimension ``(M,)`` or ``(M, N)``.
    
        .. seealso:: :func:`scipy.linalg.lu_solve`
        """
    
        (lu, ipiv) = lu_and_piv
    
        _util._assert_cupy_array(lu)
        _util._assert_rank2(lu)
        _util._assert_nd_squareness(lu)
    
        m = lu.shape[0]
        if m != b.shape[0]:
            raise ValueError('incompatible dimensions.')
    
        dtype = lu.dtype
        if dtype.char == 'f':
            getrs = cusolver.sgetrs
        elif dtype.char == 'd':
            getrs = cusolver.dgetrs
        elif dtype.char == 'F':
            getrs = cusolver.cgetrs
        elif dtype.char == 'D':
            getrs = cusolver.zgetrs
        else:
            msg = 'Only float32, float64, complex64 and complex128 are supported.'
            raise NotImplementedError(msg)
    
        if trans == 0:
            trans = cublas.CUBLAS_OP_N
        elif trans == 1:
            trans = cublas.CUBLAS_OP_T
        elif trans == 2:
            trans = cublas.CUBLAS_OP_C
        else:
            raise ValueError('unknown trans')
    
        lu = lu.astype(dtype, order='F', copy=False)
        ipiv = ipiv.astype(ipiv.dtype, order='F', copy=True)
        # cuSolver uses 1-origin while SciPy uses 0-origin
        ipiv += 1
        b = b.astype(dtype, order='F', copy=(not overwrite_b))
    
        if check_finite:
            if lu.dtype.kind == 'f' and not cupy.isfinite(lu).all():
                raise ValueError(
                    'array must not contain infs or NaNs.\n'
                    'Note that when a singular matrix is given, unlike '
                    'scipy.linalg.lu_factor, cupyx.scipy.linalg.lu_factor '
                    'returns an array containing NaN.')
            if b.dtype.kind == 'f' and not cupy.isfinite(b).all():
                raise ValueError(
                    'array must not contain infs or NaNs')
    
        n = 1 if b.ndim == 1 else b.shape[1]
        cusolver_handle = device.get_cusolver_handle()
        dev_info = cupy.empty(1, dtype=numpy.int32)
    
        # solve for the inverse
        getrs(cusolver_handle,
              trans,
              m, n, lu.data.ptr, m, ipiv.data.ptr, b.data.ptr,
              m, dev_info.data.ptr)
    
        if dev_info[0] < 0:
>           raise ValueError('illegal value in %d-th argument of '
                             'internal getrs (lu_solve)' % -dev_info[0])
E           AssertionError: Only cupy raises error
E           
E           Traceback (most recent call last):
E             File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.t8hdvgF7FH/cupy/cupy/testing/_helper.py", line 47, in _call_func
E               result = impl(self, *args, **kw)
E             File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.t8hdvgF7FH/cupy/tests/cupyx_tests/scipy_tests/linalg_tests/test_decomp_lu.py", line 133, in test_lu_solve
E               return scp.linalg.lu_solve(lu, b, trans=self.trans)
E             File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.t8hdvgF7FH/cupy/cupyx/scipy/linalg/decomp_lu.py", line 344, in lu_solve
E               raise ValueError('illegal value in %d-th argument of '
E           ValueError: illegal value in 1558304511-th argument of internal getrs (lu_solve)

cupyx/scipy/linalg/decomp_lu.py:344: AssertionError
----------------------------- Captured stdout call -----------------------------
dtype is f
_ TestGenericFilter.test_filter[_param_156_{dtype=uint8, filter='generic_filter', footprint=False, func_or_kernel=(<cupy.core.raw.RawKernel object at 0x7f4fc7b82c40>, <function rms_pyfunc at 0x7f4fc8e43820>), ksize=3, mode='mirror', shape=(4, 5)}] _

self = <<cupyx_tests.scipy_tests.ndimage_tests.test_filters.TestGenericFilter object at 0x7f4ebff9c040>  parameter: {'filter'...ss 'numpy.uint8'>, 'ksize': 3, 'mode': 'mirror', 'shape': (4, 5), 'function': <function rms_pyfunc at 0x7f4fc8e43820>}>
args = (), kw = {}
cupy_result = (array([[21, 31, 40, 31, 33],
       [27, 29, 28, 20, 27],
       [14, 25, 35, 34, 32],
       [27, 26, 33, 25, 31]], dtype=uint8),)
cupy_error = None
numpy_result = (array([[28, 38, 48, 42, 45],
       [32, 36, 44, 37, 44],
       [18, 31, 45, 48, 55],
       [22, 29, 41, 43, 54]], dtype=uint8),)
numpy_error = None
cupy_numpy_result_ndarrays = [(array([[21, 31, 40, 31, 33],
       [27, 29, 28, 20, 27],
       [14, 25, 35, 34, 32],
       [27, 26, 33, 25, 31]],...38, 48, 42, 45],
       [32, 36, 44, 37, 44],
       [18, 31, 45, 48, 55],
       [22, 29, 41, 43, 54]], dtype=uint8))]
cupy_r = array([[21, 31, 40, 31, 33],
       [27, 29, 28, 20, 27],
       [14, 25, 35, 34, 32],
       [27, 26, 33, 25, 31]], dtype=uint8)
numpy_r = array([[28, 38, 48, 42, 45],
       [32, 36, 44, 37, 44],
       [18, 31, 45, 48, 55],
       [22, 29, 41, 43, 54]], dtype=uint8)
skip = False

            @_wraps_partial_xp(impl, name, sp_name, scipy_name)
            def test_func(self, *args, **kw):
                # Run cupy and numpy
                (
                    cupy_result, cupy_error,
                    numpy_result, numpy_error) = (
                        _call_func_numpy_cupy(
                            self, impl, args, kw, name, sp_name, scipy_name))
                assert cupy_result is not None or cupy_error is not None
                assert numpy_result is not None or numpy_error is not None
    
                # Check errors raised
                if cupy_error or numpy_error:
                    _check_cupy_numpy_error(cupy_error,
                                            numpy_error,
                                            accept_error=accept_error)
                    return
    
                # Check returned arrays
    
                if not isinstance(cupy_result, (tuple, list)):
                    cupy_result = cupy_result,
                if not isinstance(numpy_result, (tuple, list)):
                    numpy_result = numpy_result,
    
                assert len(cupy_result) == len(numpy_result)
    
                # Check types
                cupy_numpy_result_ndarrays = [
                    _convert_output_to_ndarray(
                        cupy_r, numpy_r, sp_name, check_sparse_format)
                    for cupy_r, numpy_r in zip(cupy_result, numpy_result)]
    
                # Check dtypes
                if type_check:
                    for cupy_r, numpy_r in cupy_numpy_result_ndarrays:
                        if cupy_r.dtype != numpy_r.dtype:
                            raise AssertionError(
                                '''ndarrays of different dtypes are returned.
    cupy: {}
    numpy: {}'''.format(cupy_r.dtype, numpy_r.dtype))
    
                # Check contiguities
                if contiguous_check:
                    for cupy_r, numpy_r in zip(cupy_result, numpy_result):
                        if isinstance(numpy_r, numpy.ndarray):
                            if (numpy_r.flags.c_contiguous
                                    and not cupy_r.flags.c_contiguous):
                                raise AssertionError(
                                    'The state of c_contiguous flag is false. '
                                    '(cupy_result:{} numpy_result:{})'.format(
                                        cupy_r.flags.c_contiguous,
                                        numpy_r.flags.c_contiguous))
                            if (numpy_r.flags.f_contiguous
                                    and not cupy_r.flags.f_contiguous):
                                raise AssertionError(
                                    'The state of f_contiguous flag is false. '
                                    '(cupy_result:{} numpy_result:{})'.format(
                                        cupy_r.flags.f_contiguous,
                                        numpy_r.flags.f_contiguous))
    
                # Check shapes
                for cupy_r, numpy_r in cupy_numpy_result_ndarrays:
                    assert cupy_r.shape == numpy_r.shape
    
                # Check item values
                for cupy_r, numpy_r in cupy_numpy_result_ndarrays:
                    # Behavior of assigning a negative value to an unsigned integer
                    # variable is undefined.
                    # nVidia GPUs and Intel CPUs behave differently.
                    # To avoid this difference, we need to ignore dimensions whose
                    # values are negative.
    
                    skip = False
                    if (_contains_signed_and_unsigned(kw)
                            and cupy_r.dtype in _unsigned_dtypes):
                        mask = _make_positive_mask(
                            self, impl, args, kw, name, sp_name, scipy_name)
                        if cupy_r.shape == ():
                            skip = (mask == 0).all()
                        else:
                            cupy_r = cupy_r[mask].get()
                            numpy_r = numpy_r[mask]
    
                    if not skip:
>                       check_func(cupy_r, numpy_r)

cupy/testing/_helper.py:343: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
cupy/testing/_helper.py:495: in check_func
    _array.assert_allclose(c, n, rtol1, atol1, err_msg, verbose)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

actual = array([[21, 31, 40, 31, 33],
       [27, 29, 28, 20, 27],
       [14, 25, 35, 34, 32],
       [27, 26, 33, 25, 31]], dtype=uint8)
desired = array([[28, 38, 48, 42, 45],
       [32, 36, 44, 37, 44],
       [18, 31, 45, 48, 55],
       [22, 29, 41, 43, 54]], dtype=uint8)
rtol = 1e-05, atol = 1e-05, err_msg = '', verbose = True

    def assert_allclose(actual, desired, rtol=1e-7, atol=0, err_msg='',
                        verbose=True):
        """Raises an AssertionError if objects are not equal up to desired tolerance.
    
        Args:
             actual(numpy.ndarray or cupy.ndarray): The actual object to check.
             desired(numpy.ndarray or cupy.ndarray): The desired, expected object.
             rtol(float): Relative tolerance.
             atol(float): Absolute tolerance.
             err_msg(str): The error message to be printed in case of failure.
             verbose(bool): If ``True``, the conflicting
                 values are appended to the error message.
    
        .. seealso:: :func:`numpy.testing.assert_allclose`
    
        """  # NOQA
>       numpy.testing.assert_allclose(
            cupy.asnumpy(actual), cupy.asnumpy(desired),
            rtol=rtol, atol=atol, err_msg=err_msg, verbose=verbose)
E       AssertionError: 
E       Not equal to tolerance rtol=1e-05, atol=1e-05
E       
E       Mismatched elements: 20 / 20 (100%)
E       Max absolute difference: 253
E       Max relative difference: 14.
E        x: array([[21, 31, 40, 31, 33],
E              [27, 29, 28, 20, 27],
E              [14, 25, 35, 34, 32],
E              [27, 26, 33, 25, 31]], dtype=uint8)
E        y: array([[28, 38, 48, 42, 45],
E              [32, 36, 44, 37, 44],
E              [18, 31, 45, 48, 55],
E              [22, 29, 41, 43, 54]], dtype=uint8)

cupy/testing/_array.py:24: AssertionError
_ TestGenericFilter.test_filter[_param_158_{dtype=uint8, filter='generic_filter', footprint=False, func_or_kernel=(<cupy.core.raw.RawKernel object at 0x7f4fc7b82c40>, <function rms_pyfunc at 0x7f4fc8e43820>), ksize=4, mode='mirror', shape=(4, 5)}] _

self = <<cupyx_tests.scipy_tests.ndimage_tests.test_filters.TestGenericFilter object at 0x7f4ebff1cf70>  parameter: {'filter'...ss 'numpy.uint8'>, 'ksize': 4, 'mode': 'mirror', 'shape': (4, 5), 'function': <function rms_pyfunc at 0x7f4fc8e43820>}>
args = (), kw = {}
cupy_result = (array([[28, 24, 32, 32, 39],
       [ 0,  0,  0,  0,  0],
       [ 0,  0,  0,  0,  0],
       [ 0,  0,  0,  0,  0]], dtype=uint8),)
cupy_error = None
numpy_result = (array([[34, 34, 44, 37, 47],
       [34, 34, 44, 37, 47],
       [29, 29, 39, 37, 46],
       [27, 27, 41, 38, 52]], dtype=uint8),)
numpy_error = None
cupy_numpy_result_ndarrays = [(array([[28, 24, 32, 32, 39],
       [ 0,  0,  0,  0,  0],
       [ 0,  0,  0,  0,  0],
       [ 0,  0,  0,  0,  0]],...34, 44, 37, 47],
       [34, 34, 44, 37, 47],
       [29, 29, 39, 37, 46],
       [27, 27, 41, 38, 52]], dtype=uint8))]
cupy_r = array([[28, 24, 32, 32, 39],
       [ 0,  0,  0,  0,  0],
       [ 0,  0,  0,  0,  0],
       [ 0,  0,  0,  0,  0]], dtype=uint8)
numpy_r = array([[34, 34, 44, 37, 47],
       [34, 34, 44, 37, 47],
       [29, 29, 39, 37, 46],
       [27, 27, 41, 38, 52]], dtype=uint8)
skip = False

            @_wraps_partial_xp(impl, name, sp_name, scipy_name)
            def test_func(self, *args, **kw):
                # Run cupy and numpy
                (
                    cupy_result, cupy_error,
                    numpy_result, numpy_error) = (
                        _call_func_numpy_cupy(
                            self, impl, args, kw, name, sp_name, scipy_name))
                assert cupy_result is not None or cupy_error is not None
                assert numpy_result is not None or numpy_error is not None
    
                # Check errors raised
                if cupy_error or numpy_error:
                    _check_cupy_numpy_error(cupy_error,
                                            numpy_error,
                                            accept_error=accept_error)
                    return
    
                # Check returned arrays
    
                if not isinstance(cupy_result, (tuple, list)):
                    cupy_result = cupy_result,
                if not isinstance(numpy_result, (tuple, list)):
                    numpy_result = numpy_result,
    
                assert len(cupy_result) == len(numpy_result)
    
                # Check types
                cupy_numpy_result_ndarrays = [
                    _convert_output_to_ndarray(
                        cupy_r, numpy_r, sp_name, check_sparse_format)
                    for cupy_r, numpy_r in zip(cupy_result, numpy_result)]
    
                # Check dtypes
                if type_check:
                    for cupy_r, numpy_r in cupy_numpy_result_ndarrays:
                        if cupy_r.dtype != numpy_r.dtype:
                            raise AssertionError(
                                '''ndarrays of different dtypes are returned.
    cupy: {}
    numpy: {}'''.format(cupy_r.dtype, numpy_r.dtype))
    
                # Check contiguities
                if contiguous_check:
                    for cupy_r, numpy_r in zip(cupy_result, numpy_result):
                        if isinstance(numpy_r, numpy.ndarray):
                            if (numpy_r.flags.c_contiguous
                                    and not cupy_r.flags.c_contiguous):
                                raise AssertionError(
                                    'The state of c_contiguous flag is false. '
                                    '(cupy_result:{} numpy_result:{})'.format(
                                        cupy_r.flags.c_contiguous,
                                        numpy_r.flags.c_contiguous))
                            if (numpy_r.flags.f_contiguous
                                    and not cupy_r.flags.f_contiguous):
                                raise AssertionError(
                                    'The state of f_contiguous flag is false. '
                                    '(cupy_result:{} numpy_result:{})'.format(
                                        cupy_r.flags.f_contiguous,
                                        numpy_r.flags.f_contiguous))
    
                # Check shapes
                for cupy_r, numpy_r in cupy_numpy_result_ndarrays:
                    assert cupy_r.shape == numpy_r.shape
    
                # Check item values
                for cupy_r, numpy_r in cupy_numpy_result_ndarrays:
                    # Behavior of assigning a negative value to an unsigned integer
                    # variable is undefined.
                    # nVidia GPUs and Intel CPUs behave differently.
                    # To avoid this difference, we need to ignore dimensions whose
                    # values are negative.
    
                    skip = False
                    if (_contains_signed_and_unsigned(kw)
                            and cupy_r.dtype in _unsigned_dtypes):
                        mask = _make_positive_mask(
                            self, impl, args, kw, name, sp_name, scipy_name)
                        if cupy_r.shape == ():
                            skip = (mask == 0).all()
                        else:
                            cupy_r = cupy_r[mask].get()
                            numpy_r = numpy_r[mask]
    
                    if not skip:
>                       check_func(cupy_r, numpy_r)

cupy/testing/_helper.py:343: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
cupy/testing/_helper.py:495: in check_func
    _array.assert_allclose(c, n, rtol1, atol1, err_msg, verbose)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

actual = array([[28, 24, 32, 32, 39],
       [ 0,  0,  0,  0,  0],
       [ 0,  0,  0,  0,  0],
       [ 0,  0,  0,  0,  0]], dtype=uint8)
desired = array([[34, 34, 44, 37, 47],
       [34, 34, 44, 37, 47],
       [29, 29, 39, 37, 46],
       [27, 27, 41, 38, 52]], dtype=uint8)
rtol = 1e-05, atol = 1e-05, err_msg = '', verbose = True

    def assert_allclose(actual, desired, rtol=1e-7, atol=0, err_msg='',
                        verbose=True):
        """Raises an AssertionError if objects are not equal up to desired tolerance.
    
        Args:
             actual(numpy.ndarray or cupy.ndarray): The actual object to check.
             desired(numpy.ndarray or cupy.ndarray): The desired, expected object.
             rtol(float): Relative tolerance.
             atol(float): Absolute tolerance.
             err_msg(str): The error message to be printed in case of failure.
             verbose(bool): If ``True``, the conflicting
                 values are appended to the error message.
    
        .. seealso:: :func:`numpy.testing.assert_allclose`
    
        """  # NOQA
>       numpy.testing.assert_allclose(
            cupy.asnumpy(actual), cupy.asnumpy(desired),
            rtol=rtol, atol=atol, err_msg=err_msg, verbose=verbose)
E       AssertionError: 
E       Not equal to tolerance rtol=1e-05, atol=1e-05
E       
E       Mismatched elements: 20 / 20 (100%)
E       Max absolute difference: 251
E       Max relative difference: 8.48148148
E        x: array([[28, 24, 32, 32, 39],
E              [ 0,  0,  0,  0,  0],
E              [ 0,  0,  0,  0,  0],
E              [ 0,  0,  0,  0,  0]], dtype=uint8)
E        y: array([[34, 34, 44, 37, 47],
E              [34, 34, 44, 37, 47],
E              [29, 29, 39, 37, 46],
E              [27, 27, 41, 38, 52]], dtype=uint8)

cupy/testing/_array.py:24: AssertionError
_ TestGenericFilter.test_filter[_param_160_{dtype=float64, filter='generic_filter', footprint=False, func_or_kernel=(<cupy.core.raw.RawKernel object at 0x7f4fc7b82c40>, <function rms_pyfunc at 0x7f4fc8e43820>), ksize=3, mode='mirror', shape=(4, 5)}] _

self = <<cupyx_tests.scipy_tests.ndimage_tests.test_filters.TestGenericFilter object at 0x7f4ebff9ceb0>  parameter: {'filter'... 'numpy.float64'>, 'ksize': 3, 'mode': 'mirror', 'shape': (4, 5), 'function': <function rms_pyfunc at 0x7f4fc8e43820>}>
args = (), kw = {}
cupy_result = (array([[30.36659675, 39.62975648, 53.45565341, 42.0701155 , 42.81412414],
       [33.36838531, 37.73390254, 33.011765...2, 44.03386405, 43.67148673, 48.63067102],
       [32.28830047, 30.15609296, 36.65741325, 35.73179981, 40.69098504]]),)
cupy_error = None
numpy_result = (array([[32.49418447, 44.26508328, 55.58324819, 50.90632842, 53.13241351],
       [36.78467189, 42.32410703, 50.513759...4, 51.93015205, 56.78985728, 63.23111802],
       [26.45539443, 35.1080233 , 46.86066347, 49.16227375, 60.05539763]]),)
numpy_error = None
cupy_numpy_result_ndarrays = [(array([[30.36659675, 39.62975648, 53.45565341, 42.0701155 , 42.81412414],
       [33.36838531, 37.73390254, 33.01176...4, 51.93015205, 56.78985728, 63.23111802],
       [26.45539443, 35.1080233 , 46.86066347, 49.16227375, 60.05539763]]))]
cupy_r = array([[30.36659675, 39.62975648, 53.45565341, 42.0701155 , 42.81412414],
       [33.36838531, 37.73390254, 33.0117654...672, 44.03386405, 43.67148673, 48.63067102],
       [32.28830047, 30.15609296, 36.65741325, 35.73179981, 40.69098504]])
numpy_r = array([[32.49418447, 44.26508328, 55.58324819, 50.90632842, 53.13241351],
       [36.78467189, 42.32410703, 50.5137596...954, 51.93015205, 56.78985728, 63.23111802],
       [26.45539443, 35.1080233 , 46.86066347, 49.16227375, 60.05539763]])
skip = False

            @_wraps_partial_xp(impl, name, sp_name, scipy_name)
            def test_func(self, *args, **kw):
                # Run cupy and numpy
                (
                    cupy_result, cupy_error,
                    numpy_result, numpy_error) = (
                        _call_func_numpy_cupy(
                            self, impl, args, kw, name, sp_name, scipy_name))
                assert cupy_result is not None or cupy_error is not None
                assert numpy_result is not None or numpy_error is not None
    
                # Check errors raised
                if cupy_error or numpy_error:
                    _check_cupy_numpy_error(cupy_error,
                                            numpy_error,
                                            accept_error=accept_error)
                    return
    
                # Check returned arrays
    
                if not isinstance(cupy_result, (tuple, list)):
                    cupy_result = cupy_result,
                if not isinstance(numpy_result, (tuple, list)):
                    numpy_result = numpy_result,
    
                assert len(cupy_result) == len(numpy_result)
    
                # Check types
                cupy_numpy_result_ndarrays = [
                    _convert_output_to_ndarray(
                        cupy_r, numpy_r, sp_name, check_sparse_format)
                    for cupy_r, numpy_r in zip(cupy_result, numpy_result)]
    
                # Check dtypes
                if type_check:
                    for cupy_r, numpy_r in cupy_numpy_result_ndarrays:
                        if cupy_r.dtype != numpy_r.dtype:
                            raise AssertionError(
                                '''ndarrays of different dtypes are returned.
    cupy: {}
    numpy: {}'''.format(cupy_r.dtype, numpy_r.dtype))
    
                # Check contiguities
                if contiguous_check:
                    for cupy_r, numpy_r in zip(cupy_result, numpy_result):
                        if isinstance(numpy_r, numpy.ndarray):
                            if (numpy_r.flags.c_contiguous
                                    and not cupy_r.flags.c_contiguous):
                                raise AssertionError(
                                    'The state of c_contiguous flag is false. '
                                    '(cupy_result:{} numpy_result:{})'.format(
                                        cupy_r.flags.c_contiguous,
                                        numpy_r.flags.c_contiguous))
                            if (numpy_r.flags.f_contiguous
                                    and not cupy_r.flags.f_contiguous):
                                raise AssertionError(
                                    'The state of f_contiguous flag is false. '
                                    '(cupy_result:{} numpy_result:{})'.format(
                                        cupy_r.flags.f_contiguous,
                                        numpy_r.flags.f_contiguous))
    
                # Check shapes
                for cupy_r, numpy_r in cupy_numpy_result_ndarrays:
                    assert cupy_r.shape == numpy_r.shape
    
                # Check item values
                for cupy_r, numpy_r in cupy_numpy_result_ndarrays:
                    # Behavior of assigning a negative value to an unsigned integer
                    # variable is undefined.
                    # nVidia GPUs and Intel CPUs behave differently.
                    # To avoid this difference, we need to ignore dimensions whose
                    # values are negative.
    
                    skip = False
                    if (_contains_signed_and_unsigned(kw)
                            and cupy_r.dtype in _unsigned_dtypes):
                        mask = _make_positive_mask(
                            self, impl, args, kw, name, sp_name, scipy_name)
                        if cupy_r.shape == ():
                            skip = (mask == 0).all()
                        else:
                            cupy_r = cupy_r[mask].get()
                            numpy_r = numpy_r[mask]
    
                    if not skip:
>                       check_func(cupy_r, numpy_r)

cupy/testing/_helper.py:343: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
cupy/testing/_helper.py:495: in check_func
    _array.assert_allclose(c, n, rtol1, atol1, err_msg, verbose)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

actual = array([[30.36659675, 39.62975648, 53.45565341, 42.0701155 , 42.81412414],
       [33.36838531, 37.73390254, 33.0117654...672, 44.03386405, 43.67148673, 48.63067102],
       [32.28830047, 30.15609296, 36.65741325, 35.73179981, 40.69098504]])
desired = array([[32.49418447, 44.26508328, 55.58324819, 50.90632842, 53.13241351],
       [36.78467189, 42.32410703, 50.5137596...954, 51.93015205, 56.78985728, 63.23111802],
       [26.45539443, 35.1080233 , 46.86066347, 49.16227375, 60.05539763]])
rtol = 1e-05, atol = 1e-05, err_msg = '', verbose = True

    def assert_allclose(actual, desired, rtol=1e-7, atol=0, err_msg='',
                        verbose=True):
        """Raises an AssertionError if objects are not equal up to desired tolerance.
    
        Args:
             actual(numpy.ndarray or cupy.ndarray): The actual object to check.
             desired(numpy.ndarray or cupy.ndarray): The desired, expected object.
             rtol(float): Relative tolerance.
             atol(float): Absolute tolerance.
             err_msg(str): The error message to be printed in case of failure.
             verbose(bool): If ``True``, the conflicting
                 values are appended to the error message.
    
        .. seealso:: :func:`numpy.testing.assert_allclose`
    
        """  # NOQA
>       numpy.testing.assert_allclose(
            cupy.asnumpy(actual), cupy.asnumpy(desired),
            rtol=rtol, atol=atol, err_msg=err_msg, verbose=verbose)
E       AssertionError: 
E       Not equal to tolerance rtol=1e-05, atol=1e-05
E       
E       Mismatched elements: 20 / 20 (100%)
E       Max absolute difference: 19.36441258
E       Max relative difference: 0.34647974
E        x: array([[30.366597, 39.629756, 53.455653, 42.070115, 42.814124],
E              [33.368385, 37.733903, 33.011765, 32.58301 , 39.999025],
E              [18.994361, 35.440507, 44.033864, 43.671487, 48.630671],
E              [32.2883  , 30.156093, 36.657413, 35.7318  , 40.690985]])
E        y: array([[32.494184, 44.265083, 55.583248, 50.906328, 53.132414],
E              [36.784672, 42.324107, 50.51376 , 43.278745, 49.956693],
E              [22.164907, 37.049   , 51.930152, 56.789857, 63.231118],
E              [26.455394, 35.108023, 46.860663, 49.162274, 60.055398]])

cupy/testing/_array.py:24: AssertionError
_ TestGenericFilter.test_filter[_param_162_{dtype=float64, filter='generic_filter', footprint=False, func_or_kernel=(<cupy.core.raw.RawKernel object at 0x7f4fc7b82c40>, <function rms_pyfunc at 0x7f4fc8e43820>), ksize=4, mode='mirror', shape=(4, 5)}] _

self = <<cupyx_tests.scipy_tests.ndimage_tests.test_filters.TestGenericFilter object at 0x7f4ebfeaacd0>  parameter: {'filter'... 'numpy.float64'>, 'ksize': 4, 'mode': 'mirror', 'shape': (4, 5), 'function': <function rms_pyfunc at 0x7f4fc8e43820>}>
args = (), kw = {}
cupy_result = (array([[29.110215  , 29.71338479, 36.03298484, 26.91203744, 40.39344407],
       [ 0.        ,  0.        ,  0.      ... ,  0.        ,  0.        ,  0.        ],
       [ 0.        ,  0.        ,  0.        ,  0.        ,  0.        ]]),)
cupy_error = None
numpy_result = (array([[39.92050807, 39.92050807, 51.40005714, 43.376314  , 54.85586307],
       [39.92050807, 39.92050807, 51.400057...2, 44.98891502, 43.33693082, 53.99120362],
       [33.21871236, 33.21871236, 48.82046921, 44.04305038, 59.64480722]]),)
numpy_error = None
cupy_numpy_result_ndarrays = [(array([[29.110215  , 29.71338479, 36.03298484, 26.91203744, 40.39344407],
       [ 0.        ,  0.        ,  0.     ...2, 44.98891502, 43.33693082, 53.99120362],
       [33.21871236, 33.21871236, 48.82046921, 44.04305038, 59.64480722]]))]
cupy_r = array([[29.110215  , 29.71338479, 36.03298484, 26.91203744, 40.39344407],
       [ 0.        ,  0.        ,  0.       ...   ,  0.        ,  0.        ,  0.        ],
       [ 0.        ,  0.        ,  0.        ,  0.        ,  0.        ]])
numpy_r = array([[39.92050807, 39.92050807, 51.40005714, 43.376314  , 54.85586307],
       [39.92050807, 39.92050807, 51.4000571...222, 44.98891502, 43.33693082, 53.99120362],
       [33.21871236, 33.21871236, 48.82046921, 44.04305038, 59.64480722]])
skip = False

            @_wraps_partial_xp(impl, name, sp_name, scipy_name)
            def test_func(self, *args, **kw):
                # Run cupy and numpy
                (
                    cupy_result, cupy_error,
                    numpy_result, numpy_error) = (
                        _call_func_numpy_cupy(
                            self, impl, args, kw, name, sp_name, scipy_name))
                assert cupy_result is not None or cupy_error is not None
                assert numpy_result is not None or numpy_error is not None
    
                # Check errors raised
                if cupy_error or numpy_error:
                    _check_cupy_numpy_error(cupy_error,
                                            numpy_error,
                                            accept_error=accept_error)
                    return
    
                # Check returned arrays
    
                if not isinstance(cupy_result, (tuple, list)):
                    cupy_result = cupy_result,
                if not isinstance(numpy_result, (tuple, list)):
                    numpy_result = numpy_result,
    
                assert len(cupy_result) == len(numpy_result)
    
                # Check types
                cupy_numpy_result_ndarrays = [
                    _convert_output_to_ndarray(
                        cupy_r, numpy_r, sp_name, check_sparse_format)
                    for cupy_r, numpy_r in zip(cupy_result, numpy_result)]
    
                # Check dtypes
                if type_check:
                    for cupy_r, numpy_r in cupy_numpy_result_ndarrays:
                        if cupy_r.dtype != numpy_r.dtype:
                            raise AssertionError(
                                '''ndarrays of different dtypes are returned.
    cupy: {}
    numpy: {}'''.format(cupy_r.dtype, numpy_r.dtype))
    
                # Check contiguities
                if contiguous_check:
                    for cupy_r, numpy_r in zip(cupy_result, numpy_result):
                        if isinstance(numpy_r, numpy.ndarray):
                            if (numpy_r.flags.c_contiguous
                                    and not cupy_r.flags.c_contiguous):
                                raise AssertionError(
                                    'The state of c_contiguous flag is false. '
                                    '(cupy_result:{} numpy_result:{})'.format(
                                        cupy_r.flags.c_contiguous,
                                        numpy_r.flags.c_contiguous))
                            if (numpy_r.flags.f_contiguous
                                    and not cupy_r.flags.f_contiguous):
                                raise AssertionError(
                                    'The state of f_contiguous flag is false. '
                                    '(cupy_result:{} numpy_result:{})'.format(
                                        cupy_r.flags.f_contiguous,
                                        numpy_r.flags.f_contiguous))
    
                # Check shapes
                for cupy_r, numpy_r in cupy_numpy_result_ndarrays:
                    assert cupy_r.shape == numpy_r.shape
    
                # Check item values
                for cupy_r, numpy_r in cupy_numpy_result_ndarrays:
                    # Behavior of assigning a negative value to an unsigned integer
                    # variable is undefined.
                    # nVidia GPUs and Intel CPUs behave differently.
                    # To avoid this difference, we need to ignore dimensions whose
                    # values are negative.
    
                    skip = False
                    if (_contains_signed_and_unsigned(kw)
                            and cupy_r.dtype in _unsigned_dtypes):
                        mask = _make_positive_mask(
                            self, impl, args, kw, name, sp_name, scipy_name)
                        if cupy_r.shape == ():
                            skip = (mask == 0).all()
                        else:
                            cupy_r = cupy_r[mask].get()
                            numpy_r = numpy_r[mask]
    
                    if not skip:
>                       check_func(cupy_r, numpy_r)

cupy/testing/_helper.py:343: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
cupy/testing/_helper.py:495: in check_func
    _array.assert_allclose(c, n, rtol1, atol1, err_msg, verbose)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

actual = array([[29.110215  , 29.71338479, 36.03298484, 26.91203744, 40.39344407],
       [ 0.        ,  0.        ,  0.       ...   ,  0.        ,  0.        ,  0.        ],
       [ 0.        ,  0.        ,  0.        ,  0.        ,  0.        ]])
desired = array([[39.92050807, 39.92050807, 51.40005714, 43.376314  , 54.85586307],
       [39.92050807, 39.92050807, 51.4000571...222, 44.98891502, 43.33693082, 53.99120362],
       [33.21871236, 33.21871236, 48.82046921, 44.04305038, 59.64480722]])
rtol = 1e-05, atol = 1e-05, err_msg = '', verbose = True

    def assert_allclose(actual, desired, rtol=1e-7, atol=0, err_msg='',
                        verbose=True):
        """Raises an AssertionError if objects are not equal up to desired tolerance.
    
        Args:
             actual(numpy.ndarray or cupy.ndarray): The actual object to check.
             desired(numpy.ndarray or cupy.ndarray): The desired, expected object.
             rtol(float): Relative tolerance.
             atol(float): Absolute tolerance.
             err_msg(str): The error message to be printed in case of failure.
             verbose(bool): If ``True``, the conflicting
                 values are appended to the error message.
    
        .. seealso:: :func:`numpy.testing.assert_allclose`
    
        """  # NOQA
>       numpy.testing.assert_allclose(
            cupy.asnumpy(actual), cupy.asnumpy(desired),
            rtol=rtol, atol=atol, err_msg=err_msg, verbose=verbose)
E       AssertionError: 
E       Not equal to tolerance rtol=1e-05, atol=1e-05
E       
E       Mismatched elements: 20 / 20 (100%)
E       Max absolute difference: 59.64480722
E       Max relative difference: 1.
E        x: array([[29.110215, 29.713385, 36.032985, 26.912037, 40.393444],
E              [ 0.      ,  0.      ,  0.      ,  0.      ,  0.      ],
E              [ 0.      ,  0.      ,  0.      ,  0.      ,  0.      ],
E              [ 0.      ,  0.      ,  0.      ,  0.      ,  0.      ]])
E        y: array([[39.920508, 39.920508, 51.400057, 43.376314, 54.855863],
E              [39.920508, 39.920508, 51.400057, 43.376314, 54.855863],
E              [34.334642, 34.334642, 44.988915, 43.336931, 53.991204],
E              [33.218712, 33.218712, 48.820469, 44.04305 , 59.644807]])

cupy/testing/_array.py:24: AssertionError
_ TestGenericFilter.test_filter[_param_324_{dtype=float64, filter='generic_filter', footprint=False, func_or_kernel=(<cupy.core._reduction.ReductionKernel object at...7b407d0>, <function lt_pyfunc at 0x7f4fc7b76160>), ksize=3, mode='mirror', shape=(4, 5)}] _

self = <<cupyx_tests.scipy_tests.ndimage_tests.test_filters.TestGenericFilter object at 0x7f4ebfbd11c0>  parameter: {'filter'...s 'numpy.float64'>, 'ksize': 3, 'mode': 'mirror', 'shape': (4, 5), 'function': <function lt_pyfunc at 0x7f4fc7b76160>}>
args = (), kw = {}
cupy_result = (array([[4., 6., 3., 4., 3.],
       [5., 7., 7., 5., 3.],
       [6., 5., 4., 3., 2.],
       [5., 7., 6., 4., 3.]]),)
cupy_error = None
numpy_result = (array([[4., 6., 3., 3., 2.],
       [5., 0., 6., 8., 1.],
       [8., 3., 3., 7., 0.],
       [2., 0., 6., 4., 4.]]),)
numpy_error = None
cupy_numpy_result_ndarrays = [(array([[4., 6., 3., 4., 3.],
       [5., 7., 7., 5., 3.],
       [6., 5., 4., 3., 2.],
       [5., 7., 6., 4., 3.]]), array([[4., 6., 3., 3., 2.],
       [5., 0., 6., 8., 1.],
       [8., 3., 3., 7., 0.],
       [2., 0., 6., 4., 4.]]))]
cupy_r = array([[4., 6., 3., 4., 3.],
       [5., 7., 7., 5., 3.],
       [6., 5., 4., 3., 2.],
       [5., 7., 6., 4., 3.]])
numpy_r = array([[4., 6., 3., 3., 2.],
       [5., 0., 6., 8., 1.],
       [8., 3., 3., 7., 0.],
       [2., 0., 6., 4., 4.]])
skip = False

            @_wraps_partial_xp(impl, name, sp_name, scipy_name)
            def test_func(self, *args, **kw):
                # Run cupy and numpy
                (
                    cupy_result, cupy_error,
                    numpy_result, numpy_error) = (
                        _call_func_numpy_cupy(
                            self, impl, args, kw, name, sp_name, scipy_name))
                assert cupy_result is not None or cupy_error is not None
                assert numpy_result is not None or numpy_error is not None
    
                # Check errors raised
                if cupy_error or numpy_error:
                    _check_cupy_numpy_error(cupy_error,
                                            numpy_error,
                                            accept_error=accept_error)
                    return
    
                # Check returned arrays
    
                if not isinstance(cupy_result, (tuple, list)):
                    cupy_result = cupy_result,
                if not isinstance(numpy_result, (tuple, list)):
                    numpy_result = numpy_result,
    
                assert len(cupy_result) == len(numpy_result)
    
                # Check types
                cupy_numpy_result_ndarrays = [
                    _convert_output_to_ndarray(
                        cupy_r, numpy_r, sp_name, check_sparse_format)
                    for cupy_r, numpy_r in zip(cupy_result, numpy_result)]
    
                # Check dtypes
                if type_check:
                    for cupy_r, numpy_r in cupy_numpy_result_ndarrays:
                        if cupy_r.dtype != numpy_r.dtype:
                            raise AssertionError(
                                '''ndarrays of different dtypes are returned.
    cupy: {}
    numpy: {}'''.format(cupy_r.dtype, numpy_r.dtype))
    
                # Check contiguities
                if contiguous_check:
                    for cupy_r, numpy_r in zip(cupy_result, numpy_result):
                        if isinstance(numpy_r, numpy.ndarray):
                            if (numpy_r.flags.c_contiguous
                                    and not cupy_r.flags.c_contiguous):
                                raise AssertionError(
                                    'The state of c_contiguous flag is false. '
                                    '(cupy_result:{} numpy_result:{})'.format(
                                        cupy_r.flags.c_contiguous,
                                        numpy_r.flags.c_contiguous))
                            if (numpy_r.flags.f_contiguous
                                    and not cupy_r.flags.f_contiguous):
                                raise AssertionError(
                                    'The state of f_contiguous flag is false. '
                                    '(cupy_result:{} numpy_result:{})'.format(
                                        cupy_r.flags.f_contiguous,
                                        numpy_r.flags.f_contiguous))
    
                # Check shapes
                for cupy_r, numpy_r in cupy_numpy_result_ndarrays:
                    assert cupy_r.shape == numpy_r.shape
    
                # Check item values
                for cupy_r, numpy_r in cupy_numpy_result_ndarrays:
                    # Behavior of assigning a negative value to an unsigned integer
                    # variable is undefined.
                    # nVidia GPUs and Intel CPUs behave differently.
                    # To avoid this difference, we need to ignore dimensions whose
                    # values are negative.
    
                    skip = False
                    if (_contains_signed_and_unsigned(kw)
                            and cupy_r.dtype in _unsigned_dtypes):
                        mask = _make_positive_mask(
                            self, impl, args, kw, name, sp_name, scipy_name)
                        if cupy_r.shape == ():
                            skip = (mask == 0).all()
                        else:
                            cupy_r = cupy_r[mask].get()
                            numpy_r = numpy_r[mask]
    
                    if not skip:
>                       check_func(cupy_r, numpy_r)

cupy/testing/_helper.py:343: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
cupy/testing/_helper.py:495: in check_func
    _array.assert_allclose(c, n, rtol1, atol1, err_msg, verbose)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

actual = array([[4., 6., 3., 4., 3.],
       [5., 7., 7., 5., 3.],
       [6., 5., 4., 3., 2.],
       [5., 7., 6., 4., 3.]])
desired = array([[4., 6., 3., 3., 2.],
       [5., 0., 6., 8., 1.],
       [8., 3., 3., 7., 0.],
       [2., 0., 6., 4., 4.]])
rtol = 1e-05, atol = 1e-05, err_msg = '', verbose = True

    def assert_allclose(actual, desired, rtol=1e-7, atol=0, err_msg='',
                        verbose=True):
        """Raises an AssertionError if objects are not equal up to desired tolerance.
    
        Args:
             actual(numpy.ndarray or cupy.ndarray): The actual object to check.
             desired(numpy.ndarray or cupy.ndarray): The desired, expected object.
             rtol(float): Relative tolerance.
             atol(float): Absolute tolerance.
             err_msg(str): The error message to be printed in case of failure.
             verbose(bool): If ``True``, the conflicting
                 values are appended to the error message.
    
        .. seealso:: :func:`numpy.testing.assert_allclose`
    
        """  # NOQA
>       numpy.testing.assert_allclose(
            cupy.asnumpy(actual), cupy.asnumpy(desired),
            rtol=rtol, atol=atol, err_msg=err_msg, verbose=verbose)
E       AssertionError: 
E       Not equal to tolerance rtol=1e-05, atol=1e-05
E       
E       Mismatched elements: 14 / 20 (70%)
E       Max absolute difference: 7.
E       Max relative difference: 2.
E        x: array([[4., 6., 3., 4., 3.],
E              [5., 7., 7., 5., 3.],
E              [6., 5., 4., 3., 2.],
E              [5., 7., 6., 4., 3.]])
E        y: array([[4., 6., 3., 3., 2.],
E              [5., 0., 6., 8., 1.],
E              [8., 3., 3., 7., 0.],
E              [2., 0., 6., 4., 4.]])

cupy/testing/_array.py:24: AssertionError
_ TestGenericFilter.test_filter[_param_326_{dtype=float64, filter='generic_filter', footprint=False, func_or_kernel=(<cupy.core._reduction.ReductionKernel object at...7b407d0>, <function lt_pyfunc at 0x7f4fc7b76160>), ksize=4, mode='mirror', shape=(4, 5)}] _

self = <<cupyx_tests.scipy_tests.ndimage_tests.test_filters.TestGenericFilter object at 0x7f4ebf6679a0>  parameter: {'filter'...s 'numpy.float64'>, 'ksize': 4, 'mode': 'mirror', 'shape': (4, 5), 'function': <function lt_pyfunc at 0x7f4fc7b76160>}>
args = (), kw = {}
cupy_result = (array([[15.,  5., 13.,  6.,  9.],
       [ 0.,  0.,  0.,  0.,  0.],
       [ 0.,  0.,  0.,  0.,  0.],
       [ 0.,  0.,  0.,  0.,  0.]]),)
cupy_error = None
numpy_result = (array([[ 8., 11.,  4., 10.,  7.],
       [14.,  0.,  7.,  4.,  8.],
       [ 8.,  5., 11.,  5.,  5.],
       [14.,  0.,  1.,  0.,  7.]]),)
numpy_error = None
cupy_numpy_result_ndarrays = [(array([[15.,  5., 13.,  6.,  9.],
       [ 0.,  0.,  0.,  0.,  0.],
       [ 0.,  0.,  0.,  0.,  0.],
       [ 0.,  ...4., 10.,  7.],
       [14.,  0.,  7.,  4.,  8.],
       [ 8.,  5., 11.,  5.,  5.],
       [14.,  0.,  1.,  0.,  7.]]))]
cupy_r = array([[15.,  5., 13.,  6.,  9.],
       [ 0.,  0.,  0.,  0.,  0.],
       [ 0.,  0.,  0.,  0.,  0.],
       [ 0.,  0.,  0.,  0.,  0.]])
numpy_r = array([[ 8., 11.,  4., 10.,  7.],
       [14.,  0.,  7.,  4.,  8.],
       [ 8.,  5., 11.,  5.,  5.],
       [14.,  0.,  1.,  0.,  7.]])
skip = False

            @_wraps_partial_xp(impl, name, sp_name, scipy_name)
            def test_func(self, *args, **kw):
                # Run cupy and numpy
                (
                    cupy_result, cupy_error,
                    numpy_result, numpy_error) = (
                        _call_func_numpy_cupy(
                            self, impl, args, kw, name, sp_name, scipy_name))
                assert cupy_result is not None or cupy_error is not None
                assert numpy_result is not None or numpy_error is not None
    
                # Check errors raised
                if cupy_error or numpy_error:
                    _check_cupy_numpy_error(cupy_error,
                                            numpy_error,
                                            accept_error=accept_error)
                    return
    
                # Check returned arrays
    
                if not isinstance(cupy_result, (tuple, list)):
                    cupy_result = cupy_result,
                if not isinstance(numpy_result, (tuple, list)):
                    numpy_result = numpy_result,
    
                assert len(cupy_result) == len(numpy_result)
    
                # Check types
                cupy_numpy_result_ndarrays = [
                    _convert_output_to_ndarray(
                        cupy_r, numpy_r, sp_name, check_sparse_format)
                    for cupy_r, numpy_r in zip(cupy_result, numpy_result)]
    
                # Check dtypes
                if type_check:
                    for cupy_r, numpy_r in cupy_numpy_result_ndarrays:
                        if cupy_r.dtype != numpy_r.dtype:
                            raise AssertionError(
                                '''ndarrays of different dtypes are returned.
    cupy: {}
    numpy: {}'''.format(cupy_r.dtype, numpy_r.dtype))
    
                # Check contiguities
                if contiguous_check:
                    for cupy_r, numpy_r in zip(cupy_result, numpy_result):
                        if isinstance(numpy_r, numpy.ndarray):
                            if (numpy_r.flags.c_contiguous
                                    and not cupy_r.flags.c_contiguous):
                                raise AssertionError(
                                    'The state of c_contiguous flag is false. '
                                    '(cupy_result:{} numpy_result:{})'.format(
                                        cupy_r.flags.c_contiguous,
                                        numpy_r.flags.c_contiguous))
                            if (numpy_r.flags.f_contiguous
                                    and not cupy_r.flags.f_contiguous):
                                raise AssertionError(
                                    'The state of f_contiguous flag is false. '
                                    '(cupy_result:{} numpy_result:{})'.format(
                                        cupy_r.flags.f_contiguous,
                                        numpy_r.flags.f_contiguous))
    
                # Check shapes
                for cupy_r, numpy_r in cupy_numpy_result_ndarrays:
                    assert cupy_r.shape == numpy_r.shape
    
                # Check item values
                for cupy_r, numpy_r in cupy_numpy_result_ndarrays:
                    # Behavior of assigning a negative value to an unsigned integer
                    # variable is undefined.
                    # nVidia GPUs and Intel CPUs behave differently.
                    # To avoid this difference, we need to ignore dimensions whose
                    # values are negative.
    
                    skip = False
                    if (_contains_signed_and_unsigned(kw)
                            and cupy_r.dtype in _unsigned_dtypes):
                        mask = _make_positive_mask(
                            self, impl, args, kw, name, sp_name, scipy_name)
                        if cupy_r.shape == ():
                            skip = (mask == 0).all()
                        else:
                            cupy_r = cupy_r[mask].get()
                            numpy_r = numpy_r[mask]
    
                    if not skip:
>                       check_func(cupy_r, numpy_r)

cupy/testing/_helper.py:343: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
cupy/testing/_helper.py:495: in check_func
    _array.assert_allclose(c, n, rtol1, atol1, err_msg, verbose)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

actual = array([[15.,  5., 13.,  6.,  9.],
       [ 0.,  0.,  0.,  0.,  0.],
       [ 0.,  0.,  0.,  0.,  0.],
       [ 0.,  0.,  0.,  0.,  0.]])
desired = array([[ 8., 11.,  4., 10.,  7.],
       [14.,  0.,  7.,  4.,  8.],
       [ 8.,  5., 11.,  5.,  5.],
       [14.,  0.,  1.,  0.,  7.]])
rtol = 1e-05, atol = 1e-05, err_msg = '', verbose = True

    def assert_allclose(actual, desired, rtol=1e-7, atol=0, err_msg='',
                        verbose=True):
        """Raises an AssertionError if objects are not equal up to desired tolerance.
    
        Args:
             actual(numpy.ndarray or cupy.ndarray): The actual object to check.
             desired(numpy.ndarray or cupy.ndarray): The desired, expected object.
             rtol(float): Relative tolerance.
             atol(float): Absolute tolerance.
             err_msg(str): The error message to be printed in case of failure.
             verbose(bool): If ``True``, the conflicting
                 values are appended to the error message.
    
        .. seealso:: :func:`numpy.testing.assert_allclose`
    
        """  # NOQA
>       numpy.testing.assert_allclose(
            cupy.asnumpy(actual), cupy.asnumpy(desired),
            rtol=rtol, atol=atol, err_msg=err_msg, verbose=verbose)
E       AssertionError: 
E       Not equal to tolerance rtol=1e-05, atol=1e-05
E       
E       Mismatched elements: 17 / 20 (85%)
E       Max absolute difference: 14.
E       Max relative difference: 2.25
E        x: array([[15.,  5., 13.,  6.,  9.],
E              [ 0.,  0.,  0.,  0.,  0.],
E              [ 0.,  0.,  0.,  0.,  0.],
E              [ 0.,  0.,  0.,  0.,  0.]])
E        y: array([[ 8., 11.,  4., 10.,  7.],
E              [14.,  0.,  7.,  4.,  8.],
E              [ 8.,  5., 11.,  5.,  5.],
E              [14.,  0.,  1.,  0.,  7.]])

cupy/testing/_array.py:24: AssertionError
_ TestGenericFilter.test_filter[_param_484_{dtype=uint8, filter='generic_filter', footprint=True, func_or_kernel=(<cupy.core.raw.RawKernel object at 0x7f4fc7b82c40>, <function rms_pyfunc at 0x7f4fc8e43820>), ksize=3, mode='mirror', shape=(4, 5)}] _

self = <<cupyx_tests.scipy_tests.ndimage_tests.test_filters.TestGenericFilter object at 0x7f4ebf693400>  parameter: {'filter'...ss 'numpy.uint8'>, 'ksize': 3, 'mode': 'mirror', 'shape': (4, 5), 'function': <function rms_pyfunc at 0x7f4fc8e43820>}>
args = (), kw = {}
cupy_result = (array([[21, 28, 45, 28, 29],
       [28, 24, 27, 19, 21],
       [14, 25, 40, 31, 32],
       [28, 19, 33, 25, 26]], dtype=uint8),)
cupy_error = None
numpy_result = (array([[31, 36, 54, 42, 44],
       [32, 37, 44, 33, 44],
       [16, 36, 54, 41, 63],
       [24, 30, 40, 45, 48]], dtype=uint8),)
numpy_error = None
cupy_numpy_result_ndarrays = [(array([[21, 28, 45, 28, 29],
       [28, 24, 27, 19, 21],
       [14, 25, 40, 31, 32],
       [28, 19, 33, 25, 26]],...36, 54, 42, 44],
       [32, 37, 44, 33, 44],
       [16, 36, 54, 41, 63],
       [24, 30, 40, 45, 48]], dtype=uint8))]
cupy_r = array([[21, 28, 45, 28, 29],
       [28, 24, 27, 19, 21],
       [14, 25, 40, 31, 32],
       [28, 19, 33, 25, 26]], dtype=uint8)
numpy_r = array([[31, 36, 54, 42, 44],
       [32, 37, 44, 33, 44],
       [16, 36, 54, 41, 63],
       [24, 30, 40, 45, 48]], dtype=uint8)
skip = False

            @_wraps_partial_xp(impl, name, sp_name, scipy_name)
            def test_func(self, *args, **kw):
                # Run cupy and numpy
                (
                    cupy_result, cupy_error,
                    numpy_result, numpy_error) = (
                        _call_func_numpy_cupy(
                            self, impl, args, kw, name, sp_name, scipy_name))
                assert cupy_result is not None or cupy_error is not None
                assert numpy_result is not None or numpy_error is not None
    
                # Check errors raised
                if cupy_error or numpy_error:
                    _check_cupy_numpy_error(cupy_error,
                                            numpy_error,
                                            accept_error=accept_error)
                    return
    
                # Check returned arrays
    
                if not isinstance(cupy_result, (tuple, list)):
                    cupy_result = cupy_result,
                if not isinstance(numpy_result, (tuple, list)):
                    numpy_result = numpy_result,
    
                assert len(cupy_result) == len(numpy_result)
    
                # Check types
                cupy_numpy_result_ndarrays = [
                    _convert_output_to_ndarray(
                        cupy_r, numpy_r, sp_name, check_sparse_format)
                    for cupy_r, numpy_r in zip(cupy_result, numpy_result)]
    
                # Check dtypes
                if type_check:
                    for cupy_r, numpy_r in cupy_numpy_result_ndarrays:
                        if cupy_r.dtype != numpy_r.dtype:
                            raise AssertionError(
                                '''ndarrays of different dtypes are returned.
    cupy: {}
    numpy: {}'''.format(cupy_r.dtype, numpy_r.dtype))
    
                # Check contiguities
                if contiguous_check:
                    for cupy_r, numpy_r in zip(cupy_result, numpy_result):
                        if isinstance(numpy_r, numpy.ndarray):
                            if (numpy_r.flags.c_contiguous
                                    and not cupy_r.flags.c_contiguous):
                                raise AssertionError(
                                    'The state of c_contiguous flag is false. '
                                    '(cupy_result:{} numpy_result:{})'.format(
                                        cupy_r.flags.c_contiguous,
                                        numpy_r.flags.c_contiguous))
                            if (numpy_r.flags.f_contiguous
                                    and not cupy_r.flags.f_contiguous):
                                raise AssertionError(
                                    'The state of f_contiguous flag is false. '
                                    '(cupy_result:{} numpy_result:{})'.format(
                                        cupy_r.flags.f_contiguous,
                                        numpy_r.flags.f_contiguous))
    
                # Check shapes
                for cupy_r, numpy_r in cupy_numpy_result_ndarrays:
                    assert cupy_r.shape == numpy_r.shape
    
                # Check item values
                for cupy_r, numpy_r in cupy_numpy_result_ndarrays:
                    # Behavior of assigning a negative value to an unsigned integer
                    # variable is undefined.
                    # nVidia GPUs and Intel CPUs behave differently.
                    # To avoid this difference, we need to ignore dimensions whose
                    # values are negative.
    
                    skip = False
                    if (_contains_signed_and_unsigned(kw)
                            and cupy_r.dtype in _unsigned_dtypes):
                        mask = _make_positive_mask(
                            self, impl, args, kw, name, sp_name, scipy_name)
                        if cupy_r.shape == ():
                            skip = (mask == 0).all()
                        else:
                            cupy_r = cupy_r[mask].get()
                            numpy_r = numpy_r[mask]
    
                    if not skip:
>                       check_func(cupy_r, numpy_r)

cupy/testing/_helper.py:343: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
cupy/testing/_helper.py:495: in check_func
    _array.assert_allclose(c, n, rtol1, atol1, err_msg, verbose)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

actual = array([[21, 28, 45, 28, 29],
       [28, 24, 27, 19, 21],
       [14, 25, 40, 31, 32],
       [28, 19, 33, 25, 26]], dtype=uint8)
desired = array([[31, 36, 54, 42, 44],
       [32, 37, 44, 33, 44],
       [16, 36, 54, 41, 63],
       [24, 30, 40, 45, 48]], dtype=uint8)
rtol = 1e-05, atol = 1e-05, err_msg = '', verbose = True

    def assert_allclose(actual, desired, rtol=1e-7, atol=0, err_msg='',
                        verbose=True):
        """Raises an AssertionError if objects are not equal up to desired tolerance.
    
        Args:
             actual(numpy.ndarray or cupy.ndarray): The actual object to check.
             desired(numpy.ndarray or cupy.ndarray): The desired, expected object.
             rtol(float): Relative tolerance.
             atol(float): Absolute tolerance.
             err_msg(str): The error message to be printed in case of failure.
             verbose(bool): If ``True``, the conflicting
                 values are appended to the error message.
    
        .. seealso:: :func:`numpy.testing.assert_allclose`
    
        """  # NOQA
>       numpy.testing.assert_allclose(
            cupy.asnumpy(actual), cupy.asnumpy(desired),
            rtol=rtol, atol=atol, err_msg=err_msg, verbose=verbose)
E       AssertionError: 
E       Not equal to tolerance rtol=1e-05, atol=1e-05
E       
E       Mismatched elements: 20 / 20 (100%)
E       Max absolute difference: 254
E       Max relative difference: 15.875
E        x: array([[21, 28, 45, 28, 29],
E              [28, 24, 27, 19, 21],
E              [14, 25, 40, 31, 32],
E              [28, 19, 33, 25, 26]], dtype=uint8)
E        y: array([[31, 36, 54, 42, 44],
E              [32, 37, 44, 33, 44],
E              [16, 36, 54, 41, 63],
E              [24, 30, 40, 45, 48]], dtype=uint8)

cupy/testing/_array.py:24: AssertionError
_ TestGenericFilter.test_filter[_param_486_{dtype=uint8, filter='generic_filter', footprint=True, func_or_kernel=(<cupy.core.raw.RawKernel object at 0x7f4fc7b82c40>, <function rms_pyfunc at 0x7f4fc8e43820>), ksize=4, mode='mirror', shape=(4, 5)}] _

self = <<cupyx_tests.scipy_tests.ndimage_tests.test_filters.TestGenericFilter object at 0x7f4ebeb94d30>  parameter: {'filter'...ss 'numpy.uint8'>, 'ksize': 4, 'mode': 'mirror', 'shape': (4, 5), 'function': <function rms_pyfunc at 0x7f4fc8e43820>}>
args = (), kw = {}
cupy_result = (array([[23, 27, 36, 28, 53],
       [ 0,  0,  0,  0,  0],
       [ 0,  0,  0,  0,  0],
       [ 0,  0,  0,  0,  0]], dtype=uint8),)
cupy_error = None
numpy_result = (array([[31, 37, 37, 34, 51],
       [36, 33, 47, 34, 49],
       [32, 30, 35, 33, 43],
       [26, 31, 44, 32, 61]], dtype=uint8),)
numpy_error = None
cupy_numpy_result_ndarrays = [(array([[23, 27, 36, 28, 53],
       [ 0,  0,  0,  0,  0],
       [ 0,  0,  0,  0,  0],
       [ 0,  0,  0,  0,  0]],...37, 37, 34, 51],
       [36, 33, 47, 34, 49],
       [32, 30, 35, 33, 43],
       [26, 31, 44, 32, 61]], dtype=uint8))]
cupy_r = array([[23, 27, 36, 28, 53],
       [ 0,  0,  0,  0,  0],
       [ 0,  0,  0,  0,  0],
       [ 0,  0,  0,  0,  0]], dtype=uint8)
numpy_r = array([[31, 37, 37, 34, 51],
       [36, 33, 47, 34, 49],
       [32, 30, 35, 33, 43],
       [26, 31, 44, 32, 61]], dtype=uint8)
skip = False

            @_wraps_partial_xp(impl, name, sp_name, scipy_name)
            def test_func(self, *args, **kw):
                # Run cupy and numpy
                (
                    cupy_result, cupy_error,
                    numpy_result, numpy_error) = (
                        _call_func_numpy_cupy(
                            self, impl, args, kw, name, sp_name, scipy_name))
                assert cupy_result is not None or cupy_error is not None
                assert numpy_result is not None or numpy_error is not None
    
                # Check errors raised
                if cupy_error or numpy_error:
                    _check_cupy_numpy_error(cupy_error,
                                            numpy_error,
                                            accept_error=accept_error)
                    return
    
                # Check returned arrays
    
                if not isinstance(cupy_result, (tuple, list)):
                    cupy_result = cupy_result,
                if not isinstance(numpy_result, (tuple, list)):
                    numpy_result = numpy_result,
    
                assert len(cupy_result) == len(numpy_result)
    
                # Check types
                cupy_numpy_result_ndarrays = [
                    _convert_output_to_ndarray(
                        cupy_r, numpy_r, sp_name, check_sparse_format)
                    for cupy_r, numpy_r in zip(cupy_result, numpy_result)]
    
                # Check dtypes
                if type_check:
                    for cupy_r, numpy_r in cupy_numpy_result_ndarrays:
                        if cupy_r.dtype != numpy_r.dtype:
                            raise AssertionError(
                                '''ndarrays of different dtypes are returned.
    cupy: {}
    numpy: {}'''.format(cupy_r.dtype, numpy_r.dtype))
    
                # Check contiguities
                if contiguous_check:
                    for cupy_r, numpy_r in zip(cupy_result, numpy_result):
                        if isinstance(numpy_r, numpy.ndarray):
                            if (numpy_r.flags.c_contiguous
                                    and not cupy_r.flags.c_contiguous):
                                raise AssertionError(
                                    'The state of c_contiguous flag is false. '
                                    '(cupy_result:{} numpy_result:{})'.format(
                                        cupy_r.flags.c_contiguous,
                                        numpy_r.flags.c_contiguous))
                            if (numpy_r.flags.f_contiguous
                                    and not cupy_r.flags.f_contiguous):
                                raise AssertionError(
                                    'The state of f_contiguous flag is false. '
                                    '(cupy_result:{} numpy_result:{})'.format(
                                        cupy_r.flags.f_contiguous,
                                        numpy_r.flags.f_contiguous))
    
                # Check shapes
                for cupy_r, numpy_r in cupy_numpy_result_ndarrays:
                    assert cupy_r.shape == numpy_r.shape
    
                # Check item values
                for cupy_r, numpy_r in cupy_numpy_result_ndarrays:
                    # Behavior of assigning a negative value to an unsigned integer
                    # variable is undefined.
                    # nVidia GPUs and Intel CPUs behave differently.
                    # To avoid this difference, we need to ignore dimensions whose
                    # values are negative.
    
                    skip = False
                    if (_contains_signed_and_unsigned(kw)
                            and cupy_r.dtype in _unsigned_dtypes):
                        mask = _make_positive_mask(
                            self, impl, args, kw, name, sp_name, scipy_name)
                        if cupy_r.shape == ():
                            skip = (mask == 0).all()
                        else:
                            cupy_r = cupy_r[mask].get()
                            numpy_r = numpy_r[mask]
    
                    if not skip:
>                       check_func(cupy_r, numpy_r)

cupy/testing/_helper.py:343: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
cupy/testing/_helper.py:495: in check_func
    _array.assert_allclose(c, n, rtol1, atol1, err_msg, verbose)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

actual = array([[23, 27, 36, 28, 53],
       [ 0,  0,  0,  0,  0],
       [ 0,  0,  0,  0,  0],
       [ 0,  0,  0,  0,  0]], dtype=uint8)
desired = array([[31, 37, 37, 34, 51],
       [36, 33, 47, 34, 49],
       [32, 30, 35, 33, 43],
       [26, 31, 44, 32, 61]], dtype=uint8)
rtol = 1e-05, atol = 1e-05, err_msg = '', verbose = True

    def assert_allclose(actual, desired, rtol=1e-7, atol=0, err_msg='',
                        verbose=True):
        """Raises an AssertionError if objects are not equal up to desired tolerance.
    
        Args:
             actual(numpy.ndarray or cupy.ndarray): The actual object to check.
             desired(numpy.ndarray or cupy.ndarray): The desired, expected object.
             rtol(float): Relative tolerance.
             atol(float): Absolute tolerance.
             err_msg(str): The error message to be printed in case of failure.
             verbose(bool): If ``True``, the conflicting
                 values are appended to the error message.
    
        .. seealso:: :func:`numpy.testing.assert_allclose`
    
        """  # NOQA
>       numpy.testing.assert_allclose(
            cupy.asnumpy(actual), cupy.asnumpy(desired),
            rtol=rtol, atol=atol, err_msg=err_msg, verbose=verbose)
E       AssertionError: 
E       Not equal to tolerance rtol=1e-05, atol=1e-05
E       
E       Mismatched elements: 20 / 20 (100%)
E       Max absolute difference: 255
E       Max relative difference: 8.84615385
E        x: array([[23, 27, 36, 28, 53],
E              [ 0,  0,  0,  0,  0],
E              [ 0,  0,  0,  0,  0],
E              [ 0,  0,  0,  0,  0]], dtype=uint8)
E        y: array([[31, 37, 37, 34, 51],
E              [36, 33, 47, 34, 49],
E              [32, 30, 35, 33, 43],
E              [26, 31, 44, 32, 61]], dtype=uint8)

cupy/testing/_array.py:24: AssertionError
_ TestGenericFilter.test_filter[_param_488_{dtype=float64, filter='generic_filter', footprint=True, func_or_kernel=(<cupy.core.raw.RawKernel object at 0x7f4fc7b82c40>, <function rms_pyfunc at 0x7f4fc8e43820>), ksize=3, mode='mirror', shape=(4, 5)}] _

self = <<cupyx_tests.scipy_tests.ndimage_tests.test_filters.TestGenericFilter object at 0x7f4ebf693dc0>  parameter: {'filter'... 'numpy.float64'>, 'ksize': 3, 'mode': 'mirror', 'shape': (4, 5), 'function': <function rms_pyfunc at 0x7f4fc8e43820>}>
args = (), kw = {}
cupy_result = (array([[32.00449826, 37.68575782, 60.8028936 , 38.48790895, 39.21631239],
       [34.60326543, 32.2532409 , 33.257219...9, 51.41878991, 42.0040045 , 51.31070106],
       [33.21458492, 22.51034287, 37.94448098, 37.08985252, 37.51394469]]),)
cupy_error = None
numpy_result = (array([[34.73996818, 43.64546371, 63.5383726 , 49.84875414, 52.48268444],
       [37.33873469, 42.72655042, 49.589277...5, 62.15186111, 50.87288873, 72.5746653 ],
       [29.90948782, 36.17835396, 46.34962956, 49.94860122, 54.16193588]]),)
numpy_error = None
cupy_numpy_result_ndarrays = [(array([[32.00449826, 37.68575782, 60.8028936 , 38.48790895, 39.21631239],
       [34.60326543, 32.2532409 , 33.25721...5, 62.15186111, 50.87288873, 72.5746653 ],
       [29.90948782, 36.17835396, 46.34962956, 49.94860122, 54.16193588]]))]
cupy_r = array([[32.00449826, 37.68575782, 60.8028936 , 38.48790895, 39.21631239],
       [34.60326543, 32.2532409 , 33.2572195...229, 51.41878991, 42.0040045 , 51.31070106],
       [33.21458492, 22.51034287, 37.94448098, 37.08985252, 37.51394469]])
numpy_r = array([[34.73996818, 43.64546371, 63.5383726 , 49.84875414, 52.48268444],
       [37.33873469, 42.72655042, 49.5892777...725, 62.15186111, 50.87288873, 72.5746653 ],
       [29.90948782, 36.17835396, 46.34962956, 49.94860122, 54.16193588]])
skip = False

            @_wraps_partial_xp(impl, name, sp_name, scipy_name)
            def test_func(self, *args, **kw):
                # Run cupy and numpy
                (
                    cupy_result, cupy_error,
                    numpy_result, numpy_error) = (
                        _call_func_numpy_cupy(
                            self, impl, args, kw, name, sp_name, scipy_name))
                assert cupy_result is not None or cupy_error is not None
                assert numpy_result is not None or numpy_error is not None
    
                # Check errors raised
                if cupy_error or numpy_error:
                    _check_cupy_numpy_error(cupy_error,
                                            numpy_error,
                                            accept_error=accept_error)
                    return
    
                # Check returned arrays
    
                if not isinstance(cupy_result, (tuple, list)):
                    cupy_result = cupy_result,
                if not isinstance(numpy_result, (tuple, list)):
                    numpy_result = numpy_result,
    
                assert len(cupy_result) == len(numpy_result)
    
                # Check types
                cupy_numpy_result_ndarrays = [
                    _convert_output_to_ndarray(
                        cupy_r, numpy_r, sp_name, check_sparse_format)
                    for cupy_r, numpy_r in zip(cupy_result, numpy_result)]
    
                # Check dtypes
                if type_check:
                    for cupy_r, numpy_r in cupy_numpy_result_ndarrays:
                        if cupy_r.dtype != numpy_r.dtype:
                            raise AssertionError(
                                '''ndarrays of different dtypes are returned.
    cupy: {}
    numpy: {}'''.format(cupy_r.dtype, numpy_r.dtype))
    
                # Check contiguities
                if contiguous_check:
                    for cupy_r, numpy_r in zip(cupy_result, numpy_result):
                        if isinstance(numpy_r, numpy.ndarray):
                            if (numpy_r.flags.c_contiguous
                                    and not cupy_r.flags.c_contiguous):
                                raise AssertionError(
                                    'The state of c_contiguous flag is false. '
                                    '(cupy_result:{} numpy_result:{})'.format(
                                        cupy_r.flags.c_contiguous,
                                        numpy_r.flags.c_contiguous))
                            if (numpy_r.flags.f_contiguous
                                    and not cupy_r.flags.f_contiguous):
                                raise AssertionError(
                                    'The state of f_contiguous flag is false. '
                                    '(cupy_result:{} numpy_result:{})'.format(
                                        cupy_r.flags.f_contiguous,
                                        numpy_r.flags.f_contiguous))
    
                # Check shapes
                for cupy_r, numpy_r in cupy_numpy_result_ndarrays:
                    assert cupy_r.shape == numpy_r.shape
    
                # Check item values
                for cupy_r, numpy_r in cupy_numpy_result_ndarrays:
                    # Behavior of assigning a negative value to an unsigned integer
                    # variable is undefined.
                    # nVidia GPUs and Intel CPUs behave differently.
                    # To avoid this difference, we need to ignore dimensions whose
                    # values are negative.
    
                    skip = False
                    if (_contains_signed_and_unsigned(kw)
                            and cupy_r.dtype in _unsigned_dtypes):
                        mask = _make_positive_mask(
                            self, impl, args, kw, name, sp_name, scipy_name)
                        if cupy_r.shape == ():
                            skip = (mask == 0).all()
                        else:
                            cupy_r = cupy_r[mask].get()
                            numpy_r = numpy_r[mask]
    
                    if not skip:
>                       check_func(cupy_r, numpy_r)

cupy/testing/_helper.py:343: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
cupy/testing/_helper.py:495: in check_func
    _array.assert_allclose(c, n, rtol1, atol1, err_msg, verbose)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

actual = array([[32.00449826, 37.68575782, 60.8028936 , 38.48790895, 39.21631239],
       [34.60326543, 32.2532409 , 33.2572195...229, 51.41878991, 42.0040045 , 51.31070106],
       [33.21458492, 22.51034287, 37.94448098, 37.08985252, 37.51394469]])
desired = array([[34.73996818, 43.64546371, 63.5383726 , 49.84875414, 52.48268444],
       [37.33873469, 42.72655042, 49.5892777...725, 62.15186111, 50.87288873, 72.5746653 ],
       [29.90948782, 36.17835396, 46.34962956, 49.94860122, 54.16193588]])
rtol = 1e-05, atol = 1e-05, err_msg = '', verbose = True

    def assert_allclose(actual, desired, rtol=1e-7, atol=0, err_msg='',
                        verbose=True):
        """Raises an AssertionError if objects are not equal up to desired tolerance.
    
        Args:
             actual(numpy.ndarray or cupy.ndarray): The actual object to check.
             desired(numpy.ndarray or cupy.ndarray): The desired, expected object.
             rtol(float): Relative tolerance.
             atol(float): Absolute tolerance.
             err_msg(str): The error message to be printed in case of failure.
             verbose(bool): If ``True``, the conflicting
                 values are appended to the error message.
    
        .. seealso:: :func:`numpy.testing.assert_allclose`
    
        """  # NOQA
>       numpy.testing.assert_allclose(
            cupy.asnumpy(actual), cupy.asnumpy(desired),
            rtol=rtol, atol=atol, err_msg=err_msg, verbose=verbose)
E       AssertionError: 
E       Not equal to tolerance rtol=1e-05, atol=1e-05
E       
E       Mismatched elements: 20 / 20 (100%)
E       Max absolute difference: 21.26396424
E       Max relative difference: 0.37779527
E        x: array([[32.004498, 37.685758, 60.802894, 38.487909, 39.216312],
E              [34.603265, 32.253241, 33.25722 , 33.041408, 36.624282],
E              [20.112677, 38.150832, 51.41879 , 42.004005, 51.310701],
E              [33.214585, 22.510343, 37.944481, 37.089853, 37.513945]])
E        y: array([[34.739968, 43.645464, 63.538373, 49.848754, 52.482684],
E              [37.338735, 42.72655 , 49.589278, 37.768093, 49.890655],
E              [19.537204, 43.529837, 62.151861, 50.872889, 72.574665],
E              [29.909488, 36.178354, 46.34963 , 49.948601, 54.161936]])

cupy/testing/_array.py:24: AssertionError
_ TestGenericFilter.test_filter[_param_490_{dtype=float64, filter='generic_filter', footprint=True, func_or_kernel=(<cupy.core.raw.RawKernel object at 0x7f4fc7b82c40>, <function rms_pyfunc at 0x7f4fc8e43820>), ksize=4, mode='mirror', shape=(4, 5)}] _

self = <<cupyx_tests.scipy_tests.ndimage_tests.test_filters.TestGenericFilter object at 0x7f4ebee38a60>  parameter: {'filter'... 'numpy.float64'>, 'ksize': 4, 'mode': 'mirror', 'shape': (4, 5), 'function': <function rms_pyfunc at 0x7f4fc8e43820>}>
args = (), kw = {}
cupy_result = (array([[24.21149428, 29.80534893, 37.32798429, 32.88328106, 46.48912698],
       [ 0.        ,  0.        ,  0.      ... ,  0.        ,  0.        ,  0.        ],
       [ 0.        ,  0.        ,  0.        ,  0.        ,  0.        ]]),)
cupy_error = None
numpy_result = (array([[36.86077635, 42.87616583, 43.41972747, 39.82804323, 58.74618737],
       [42.04291274, 39.49732697, 56.260026...8, 40.06613219, 37.53324325, 49.79207175],
       [31.44112421, 37.6867121 , 51.65417609, 39.59452747, 70.43768385]]),)
numpy_error = None
cupy_numpy_result_ndarrays = [(array([[24.21149428, 29.80534893, 37.32798429, 32.88328106, 46.48912698],
       [ 0.        ,  0.        ,  0.     ...8, 40.06613219, 37.53324325, 49.79207175],
       [31.44112421, 37.6867121 , 51.65417609, 39.59452747, 70.43768385]]))]
cupy_r = array([[24.21149428, 29.80534893, 37.32798429, 32.88328106, 46.48912698],
       [ 0.        ,  0.        ,  0.       ...   ,  0.        ,  0.        ,  0.        ],
       [ 0.        ,  0.        ,  0.        ,  0.        ,  0.        ]])
numpy_r = array([[36.86077635, 42.87616583, 43.41972747, 39.82804323, 58.74618737],
       [42.04291274, 39.49732697, 56.2600260...358, 40.06613219, 37.53324325, 49.79207175],
       [31.44112421, 37.6867121 , 51.65417609, 39.59452747, 70.43768385]])
skip = False

            @_wraps_partial_xp(impl, name, sp_name, scipy_name)
            def test_func(self, *args, **kw):
                # Run cupy and numpy
                (
                    cupy_result, cupy_error,
                    numpy_result, numpy_error) = (
                        _call_func_numpy_cupy(
                            self, impl, args, kw, name, sp_name, scipy_name))
                assert cupy_result is not None or cupy_error is not None
                assert numpy_result is not None or numpy_error is not None
    
                # Check errors raised
                if cupy_error or numpy_error:
                    _check_cupy_numpy_error(cupy_error,
                                            numpy_error,
                                            accept_error=accept_error)
                    return
    
                # Check returned arrays
    
                if not isinstance(cupy_result, (tuple, list)):
                    cupy_result = cupy_result,
                if not isinstance(numpy_result, (tuple, list)):
                    numpy_result = numpy_result,
    
                assert len(cupy_result) == len(numpy_result)
    
                # Check types
                cupy_numpy_result_ndarrays = [
                    _convert_output_to_ndarray(
                        cupy_r, numpy_r, sp_name, check_sparse_format)
                    for cupy_r, numpy_r in zip(cupy_result, numpy_result)]
    
                # Check dtypes
                if type_check:
                    for cupy_r, numpy_r in cupy_numpy_result_ndarrays:
                        if cupy_r.dtype != numpy_r.dtype:
                            raise AssertionError(
                                '''ndarrays of different dtypes are returned.
    cupy: {}
    numpy: {}'''.format(cupy_r.dtype, numpy_r.dtype))
    
                # Check contiguities
                if contiguous_check:
                    for cupy_r, numpy_r in zip(cupy_result, numpy_result):
                        if isinstance(numpy_r, numpy.ndarray):
                            if (numpy_r.flags.c_contiguous
                                    and not cupy_r.flags.c_contiguous):
                                raise AssertionError(
                                    'The state of c_contiguous flag is false. '
                                    '(cupy_result:{} numpy_result:{})'.format(
                                        cupy_r.flags.c_contiguous,
                                        numpy_r.flags.c_contiguous))
                            if (numpy_r.flags.f_contiguous
                                    and not cupy_r.flags.f_contiguous):
                                raise AssertionError(
                                    'The state of f_contiguous flag is false. '
                                    '(cupy_result:{} numpy_result:{})'.format(
                                        cupy_r.flags.f_contiguous,
                                        numpy_r.flags.f_contiguous))
    
                # Check shapes
                for cupy_r, numpy_r in cupy_numpy_result_ndarrays:
                    assert cupy_r.shape == numpy_r.shape
    
                # Check item values
                for cupy_r, numpy_r in cupy_numpy_result_ndarrays:
                    # Behavior of assigning a negative value to an unsigned integer
                    # variable is undefined.
                    # nVidia GPUs and Intel CPUs behave differently.
                    # To avoid this difference, we need to ignore dimensions whose
                    # values are negative.
    
                    skip = False
                    if (_contains_signed_and_unsigned(kw)
                            and cupy_r.dtype in _unsigned_dtypes):
                        mask = _make_positive_mask(
                            self, impl, args, kw, name, sp_name, scipy_name)
                        if cupy_r.shape == ():
                            skip = (mask == 0).all()
                        else:
                            cupy_r = cupy_r[mask].get()
                            numpy_r = numpy_r[mask]
    
                    if not skip:
>                       check_func(cupy_r, numpy_r)

cupy/testing/_helper.py:343: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
cupy/testing/_helper.py:495: in check_func
    _array.assert_allclose(c, n, rtol1, atol1, err_msg, verbose)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

actual = array([[24.21149428, 29.80534893, 37.32798429, 32.88328106, 46.48912698],
       [ 0.        ,  0.        ,  0.       ...   ,  0.        ,  0.        ,  0.        ],
       [ 0.        ,  0.        ,  0.        ,  0.        ,  0.        ]])
desired = array([[36.86077635, 42.87616583, 43.41972747, 39.82804323, 58.74618737],
       [42.04291274, 39.49732697, 56.2600260...358, 40.06613219, 37.53324325, 49.79207175],
       [31.44112421, 37.6867121 , 51.65417609, 39.59452747, 70.43768385]])
rtol = 1e-05, atol = 1e-05, err_msg = '', verbose = True

    def assert_allclose(actual, desired, rtol=1e-7, atol=0, err_msg='',
                        verbose=True):
        """Raises an AssertionError if objects are not equal up to desired tolerance.
    
        Args:
             actual(numpy.ndarray or cupy.ndarray): The actual object to check.
             desired(numpy.ndarray or cupy.ndarray): The desired, expected object.
             rtol(float): Relative tolerance.
             atol(float): Absolute tolerance.
             err_msg(str): The error message to be printed in case of failure.
             verbose(bool): If ``True``, the conflicting
                 values are appended to the error message.
    
        .. seealso:: :func:`numpy.testing.assert_allclose`
    
        """  # NOQA
>       numpy.testing.assert_allclose(
            cupy.asnumpy(actual), cupy.asnumpy(desired),
            rtol=rtol, atol=atol, err_msg=err_msg, verbose=verbose)
E       AssertionError: 
E       Not equal to tolerance rtol=1e-05, atol=1e-05
E       
E       Mismatched elements: 20 / 20 (100%)
E       Max absolute difference: 70.43768385
E       Max relative difference: 1.
E        x: array([[24.211494, 29.805349, 37.327984, 32.883281, 46.489127],
E              [ 0.      ,  0.      ,  0.      ,  0.      ,  0.      ],
E              [ 0.      ,  0.      ,  0.      ,  0.      ,  0.      ],
E              [ 0.      ,  0.      ,  0.      ,  0.      ,  0.      ]])
E        y: array([[36.860776, 42.876166, 43.419727, 39.828043, 58.746187],
E              [42.042913, 39.497327, 56.260026, 40.67984 , 58.57918 ],
E              [36.303403, 34.455314, 40.066132, 37.533243, 49.792072],
E              [31.441124, 37.686712, 51.654176, 39.594527, 70.437684]])

cupy/testing/_array.py:24: AssertionError
_ TestGenericFilter.test_filter[_param_652_{dtype=float64, filter='generic_filter', footprint=True, func_or_kernel=(<cupy.core._reduction.ReductionKernel object at...7b407d0>, <function lt_pyfunc at 0x7f4fc7b76160>), ksize=3, mode='mirror', shape=(4, 5)}] _

self = <<cupyx_tests.scipy_tests.ndimage_tests.test_filters.TestGenericFilter object at 0x7f4ebead00a0>  parameter: {'filter'...s 'numpy.float64'>, 'ksize': 3, 'mode': 'mirror', 'shape': (4, 5), 'function': <function lt_pyfunc at 0x7f4fc7b76160>}>
args = (), kw = {}
cupy_result = (array([[5., 3., 2., 4., 3.],
       [1., 5., 1., 5., 6.],
       [4., 4., 1., 3., 5.],
       [1., 1., 1., 4., 4.]]),)
cupy_error = None
numpy_result = (array([[5., 2., 2., 3., 2.],
       [0., 4., 0., 5., 5.],
       [4., 4., 1., 2., 3.],
       [0., 0., 0., 3., 2.]]),)
numpy_error = None
cupy_numpy_result_ndarrays = [(array([[5., 3., 2., 4., 3.],
       [1., 5., 1., 5., 6.],
       [4., 4., 1., 3., 5.],
       [1., 1., 1., 4., 4.]]), array([[5., 2., 2., 3., 2.],
       [0., 4., 0., 5., 5.],
       [4., 4., 1., 2., 3.],
       [0., 0., 0., 3., 2.]]))]
cupy_r = array([[5., 3., 2., 4., 3.],
       [1., 5., 1., 5., 6.],
       [4., 4., 1., 3., 5.],
       [1., 1., 1., 4., 4.]])
numpy_r = array([[5., 2., 2., 3., 2.],
       [0., 4., 0., 5., 5.],
       [4., 4., 1., 2., 3.],
       [0., 0., 0., 3., 2.]])
skip = False

            @_wraps_partial_xp(impl, name, sp_name, scipy_name)
            def test_func(self, *args, **kw):
                # Run cupy and numpy
                (
                    cupy_result, cupy_error,
                    numpy_result, numpy_error) = (
                        _call_func_numpy_cupy(
                            self, impl, args, kw, name, sp_name, scipy_name))
                assert cupy_result is not None or cupy_error is not None
                assert numpy_result is not None or numpy_error is not None
    
                # Check errors raised
                if cupy_error or numpy_error:
                    _check_cupy_numpy_error(cupy_error,
                                            numpy_error,
                                            accept_error=accept_error)
                    return
    
                # Check returned arrays
    
                if not isinstance(cupy_result, (tuple, list)):
                    cupy_result = cupy_result,
                if not isinstance(numpy_result, (tuple, list)):
                    numpy_result = numpy_result,
    
                assert len(cupy_result) == len(numpy_result)
    
                # Check types
                cupy_numpy_result_ndarrays = [
                    _convert_output_to_ndarray(
                        cupy_r, numpy_r, sp_name, check_sparse_format)
                    for cupy_r, numpy_r in zip(cupy_result, numpy_result)]
    
                # Check dtypes
                if type_check:
                    for cupy_r, numpy_r in cupy_numpy_result_ndarrays:
                        if cupy_r.dtype != numpy_r.dtype:
                            raise AssertionError(
                                '''ndarrays of different dtypes are returned.
    cupy: {}
    numpy: {}'''.format(cupy_r.dtype, numpy_r.dtype))
    
                # Check contiguities
                if contiguous_check:
                    for cupy_r, numpy_r in zip(cupy_result, numpy_result):
                        if isinstance(numpy_r, numpy.ndarray):
                            if (numpy_r.flags.c_contiguous
                                    and not cupy_r.flags.c_contiguous):
                                raise AssertionError(
                                    'The state of c_contiguous flag is false. '
                                    '(cupy_result:{} numpy_result:{})'.format(
                                        cupy_r.flags.c_contiguous,
                                        numpy_r.flags.c_contiguous))
                            if (numpy_r.flags.f_contiguous
                                    and not cupy_r.flags.f_contiguous):
                                raise AssertionError(
                                    'The state of f_contiguous flag is false. '
                                    '(cupy_result:{} numpy_result:{})'.format(
                                        cupy_r.flags.f_contiguous,
                                        numpy_r.flags.f_contiguous))
    
                # Check shapes
                for cupy_r, numpy_r in cupy_numpy_result_ndarrays:
                    assert cupy_r.shape == numpy_r.shape
    
                # Check item values
                for cupy_r, numpy_r in cupy_numpy_result_ndarrays:
                    # Behavior of assigning a negative value to an unsigned integer
                    # variable is undefined.
                    # nVidia GPUs and Intel CPUs behave differently.
                    # To avoid this difference, we need to ignore dimensions whose
                    # values are negative.
    
                    skip = False
                    if (_contains_signed_and_unsigned(kw)
                            and cupy_r.dtype in _unsigned_dtypes):
                        mask = _make_positive_mask(
                            self, impl, args, kw, name, sp_name, scipy_name)
                        if cupy_r.shape == ():
                            skip = (mask == 0).all()
                        else:
                            cupy_r = cupy_r[mask].get()
                            numpy_r = numpy_r[mask]
    
                    if not skip:
>                       check_func(cupy_r, numpy_r)

cupy/testing/_helper.py:343: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
cupy/testing/_helper.py:495: in check_func
    _array.assert_allclose(c, n, rtol1, atol1, err_msg, verbose)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

actual = array([[5., 3., 2., 4., 3.],
       [1., 5., 1., 5., 6.],
       [4., 4., 1., 3., 5.],
       [1., 1., 1., 4., 4.]])
desired = array([[5., 2., 2., 3., 2.],
       [0., 4., 0., 5., 5.],
       [4., 4., 1., 2., 3.],
       [0., 0., 0., 3., 2.]])
rtol = 1e-05, atol = 1e-05, err_msg = '', verbose = True

    def assert_allclose(actual, desired, rtol=1e-7, atol=0, err_msg='',
                        verbose=True):
        """Raises an AssertionError if objects are not equal up to desired tolerance.
    
        Args:
             actual(numpy.ndarray or cupy.ndarray): The actual object to check.
             desired(numpy.ndarray or cupy.ndarray): The desired, expected object.
             rtol(float): Relative tolerance.
             atol(float): Absolute tolerance.
             err_msg(str): The error message to be printed in case of failure.
             verbose(bool): If ``True``, the conflicting
                 values are appended to the error message.
    
        .. seealso:: :func:`numpy.testing.assert_allclose`
    
        """  # NOQA
>       numpy.testing.assert_allclose(
            cupy.asnumpy(actual), cupy.asnumpy(desired),
            rtol=rtol, atol=atol, err_msg=err_msg, verbose=verbose)
E       AssertionError: 
E       Not equal to tolerance rtol=1e-05, atol=1e-05
E       
E       Mismatched elements: 14 / 20 (70%)
E       Max absolute difference: 2.
E       Max relative difference: 1.
E        x: array([[5., 3., 2., 4., 3.],
E              [1., 5., 1., 5., 6.],
E              [4., 4., 1., 3., 5.],
E              [1., 1., 1., 4., 4.]])
E        y: array([[5., 2., 2., 3., 2.],
E              [0., 4., 0., 5., 5.],
E              [4., 4., 1., 2., 3.],
E              [0., 0., 0., 3., 2.]])

cupy/testing/_array.py:24: AssertionError
_ TestGenericFilter.test_filter[_param_654_{dtype=float64, filter='generic_filter', footprint=True, func_or_kernel=(<cupy.core._reduction.ReductionKernel object at...7b407d0>, <function lt_pyfunc at 0x7f4fc7b76160>), ksize=4, mode='mirror', shape=(4, 5)}] _

self = <<cupyx_tests.scipy_tests.ndimage_tests.test_filters.TestGenericFilter object at 0x7f4ebe2773d0>  parameter: {'filter'...s 'numpy.float64'>, 'ksize': 4, 'mode': 'mirror', 'shape': (4, 5), 'function': <function lt_pyfunc at 0x7f4fc7b76160>}>
args = (), kw = {}
cupy_result = (array([[ 5., 10., 10.,  3.,  9.],
       [ 0.,  0.,  0.,  0.,  0.],
       [ 0.,  0.,  0.,  0.,  0.],
       [ 0.,  0.,  0.,  0.,  0.]]),)
cupy_error = None
numpy_result = (array([[ 0., 10., 10.,  1.,  8.],
       [ 7.,  6.,  2.,  2.,  2.],
       [ 1., 10., 10.,  2.,  9.],
       [ 4.,  5.,  9.,  1.,  6.]]),)
numpy_error = None
cupy_numpy_result_ndarrays = [(array([[ 5., 10., 10.,  3.,  9.],
       [ 0.,  0.,  0.,  0.,  0.],
       [ 0.,  0.,  0.,  0.,  0.],
       [ 0.,  ...0.,  1.,  8.],
       [ 7.,  6.,  2.,  2.,  2.],
       [ 1., 10., 10.,  2.,  9.],
       [ 4.,  5.,  9.,  1.,  6.]]))]
cupy_r = array([[ 5., 10., 10.,  3.,  9.],
       [ 0.,  0.,  0.,  0.,  0.],
       [ 0.,  0.,  0.,  0.,  0.],
       [ 0.,  0.,  0.,  0.,  0.]])
numpy_r = array([[ 0., 10., 10.,  1.,  8.],
       [ 7.,  6.,  2.,  2.,  2.],
       [ 1., 10., 10.,  2.,  9.],
       [ 4.,  5.,  9.,  1.,  6.]])
skip = False

            @_wraps_partial_xp(impl, name, sp_name, scipy_name)
            def test_func(self, *args, **kw):
                # Run cupy and numpy
                (
                    cupy_result, cupy_error,
                    numpy_result, numpy_error) = (
                        _call_func_numpy_cupy(
                            self, impl, args, kw, name, sp_name, scipy_name))
                assert cupy_result is not None or cupy_error is not None
                assert numpy_result is not None or numpy_error is not None
    
                # Check errors raised
                if cupy_error or numpy_error:
                    _check_cupy_numpy_error(cupy_error,
                                            numpy_error,
                                            accept_error=accept_error)
                    return
    
                # Check returned arrays
    
                if not isinstance(cupy_result, (tuple, list)):
                    cupy_result = cupy_result,
                if not isinstance(numpy_result, (tuple, list)):
                    numpy_result = numpy_result,
    
                assert len(cupy_result) == len(numpy_result)
    
                # Check types
                cupy_numpy_result_ndarrays = [
                    _convert_output_to_ndarray(
                        cupy_r, numpy_r, sp_name, check_sparse_format)
                    for cupy_r, numpy_r in zip(cupy_result, numpy_result)]
    
                # Check dtypes
                if type_check:
                    for cupy_r, numpy_r in cupy_numpy_result_ndarrays:
                        if cupy_r.dtype != numpy_r.dtype:
                            raise AssertionError(
                                '''ndarrays of different dtypes are returned.
    cupy: {}
    numpy: {}'''.format(cupy_r.dtype, numpy_r.dtype))
    
                # Check contiguities
                if contiguous_check:
                    for cupy_r, numpy_r in zip(cupy_result, numpy_result):
                        if isinstance(numpy_r, numpy.ndarray):
                            if (numpy_r.flags.c_contiguous
                                    and not cupy_r.flags.c_contiguous):
                                raise AssertionError(
                                    'The state of c_contiguous flag is false. '
                                    '(cupy_result:{} numpy_result:{})'.format(
                                        cupy_r.flags.c_contiguous,
                                        numpy_r.flags.c_contiguous))
                            if (numpy_r.flags.f_contiguous
                                    and not cupy_r.flags.f_contiguous):
                                raise AssertionError(
                                    'The state of f_contiguous flag is false. '
                                    '(cupy_result:{} numpy_result:{})'.format(
                                        cupy_r.flags.f_contiguous,
                                        numpy_r.flags.f_contiguous))
    
                # Check shapes
                for cupy_r, numpy_r in cupy_numpy_result_ndarrays:
                    assert cupy_r.shape == numpy_r.shape
    
                # Check item values
                for cupy_r, numpy_r in cupy_numpy_result_ndarrays:
                    # Behavior of assigning a negative value to an unsigned integer
                    # variable is undefined.
                    # nVidia GPUs and Intel CPUs behave differently.
                    # To avoid this difference, we need to ignore dimensions whose
                    # values are negative.
    
                    skip = False
                    if (_contains_signed_and_unsigned(kw)
                            and cupy_r.dtype in _unsigned_dtypes):
                        mask = _make_positive_mask(
                            self, impl, args, kw, name, sp_name, scipy_name)
                        if cupy_r.shape == ():
                            skip = (mask == 0).all()
                        else:
                            cupy_r = cupy_r[mask].get()
                            numpy_r = numpy_r[mask]
    
                    if not skip:
>                       check_func(cupy_r, numpy_r)

cupy/testing/_helper.py:343: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
cupy/testing/_helper.py:495: in check_func
    _array.assert_allclose(c, n, rtol1, atol1, err_msg, verbose)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

actual = array([[ 5., 10., 10.,  3.,  9.],
       [ 0.,  0.,  0.,  0.,  0.],
       [ 0.,  0.,  0.,  0.,  0.],
       [ 0.,  0.,  0.,  0.,  0.]])
desired = array([[ 0., 10., 10.,  1.,  8.],
       [ 7.,  6.,  2.,  2.,  2.],
       [ 1., 10., 10.,  2.,  9.],
       [ 4.,  5.,  9.,  1.,  6.]])
rtol = 1e-05, atol = 1e-05, err_msg = '', verbose = True

    def assert_allclose(actual, desired, rtol=1e-7, atol=0, err_msg='',
                        verbose=True):
        """Raises an AssertionError if objects are not equal up to desired tolerance.
    
        Args:
             actual(numpy.ndarray or cupy.ndarray): The actual object to check.
             desired(numpy.ndarray or cupy.ndarray): The desired, expected object.
             rtol(float): Relative tolerance.
             atol(float): Absolute tolerance.
             err_msg(str): The error message to be printed in case of failure.
             verbose(bool): If ``True``, the conflicting
                 values are appended to the error message.
    
        .. seealso:: :func:`numpy.testing.assert_allclose`
    
        """  # NOQA
>       numpy.testing.assert_allclose(
            cupy.asnumpy(actual), cupy.asnumpy(desired),
            rtol=rtol, atol=atol, err_msg=err_msg, verbose=verbose)
E       AssertionError: 
E       Not equal to tolerance rtol=1e-05, atol=1e-05
E       
E       Mismatched elements: 18 / 20 (90%)
E       Max absolute difference: 10.
E       Max relative difference: 2.
E        x: array([[ 5., 10., 10.,  3.,  9.],
E              [ 0.,  0.,  0.,  0.,  0.],
E              [ 0.,  0.,  0.,  0.,  0.],
E              [ 0.,  0.,  0.,  0.,  0.]])
E        y: array([[ 0., 10., 10.,  1.,  8.],
E              [ 7.,  6.,  2.,  2.,  2.],
E              [ 1., 10., 10.,  2.,  9.],
E              [ 4.,  5.,  9.,  1.,  6.]])

cupy/testing/_array.py:24: AssertionError
_ TestMeasurementsSelect.test_measurements_select[_param_70_{enable_cub=True, index=1, labels=50, op='extrema', shape=(512,)}] _

self = <<cupyx_tests.scipy_tests.ndimage_tests.test_measurements.TestMeasurementsSelect object at 0x7f4eac3a50a0>  parameter: {'enable_cub': True, 'index': 1, 'labels': 50, 'op': 'extrema', 'shape': (512,)}>
args = (), kw = {'dtype': <class 'numpy.float64'>}
dtype = <class 'numpy.float64'>

    @_wraps_partial(impl, name)
    def test_func(self, *args, **kw):
        for dtype in dtypes:
            try:
                kw[name] = numpy.dtype(dtype).type
>               impl(self, *args, **kw)

cupy/testing/_helper.py:825: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
cupy/testing/_helper.py:343: in test_func
    check_func(cupy_r, numpy_r)
cupy/testing/_helper.py:495: in check_func
    _array.assert_allclose(c, n, rtol1, atol1, err_msg, verbose)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

actual = array([75]), desired = array([75]), rtol = 1e-07, atol = 0
err_msg = '', verbose = True

    def assert_allclose(actual, desired, rtol=1e-7, atol=0, err_msg='',
                        verbose=True):
        """Raises an AssertionError if objects are not equal up to desired tolerance.
    
        Args:
             actual(numpy.ndarray or cupy.ndarray): The actual object to check.
             desired(numpy.ndarray or cupy.ndarray): The desired, expected object.
             rtol(float): Relative tolerance.
             atol(float): Absolute tolerance.
             err_msg(str): The error message to be printed in case of failure.
             verbose(bool): If ``True``, the conflicting
                 values are appended to the error message.
    
        .. seealso:: :func:`numpy.testing.assert_allclose`
    
        """  # NOQA
>       numpy.testing.assert_allclose(
            cupy.asnumpy(actual), cupy.asnumpy(desired),
            rtol=rtol, atol=atol, err_msg=err_msg, verbose=verbose)
E       AssertionError: 
E       Not equal to tolerance rtol=1e-07, atol=0
E       
E       Mismatched elements: 1 / 1 (100%)
E       Max absolute difference: 28
E       Max relative difference: 0.37333333
E        x: array([103])
E        y: array([75])

cupy/testing/_array.py:24: AssertionError
----------------------------- Captured stdout call -----------------------------
dtype is <class 'numpy.float64'>
_ TestFFTConvolve_param_44_{mode='valid', size1=(3, 4, 10), size2=3}.test_convolve_fft _
cupy/testing/_helper.py:825: in test_func
    impl(self, *args, **kw)
cupy/testing/_helper.py:343: in test_func
    check_func(cupy_r, numpy_r)
cupy/testing/_helper.py:495: in check_func
    _array.assert_allclose(c, n, rtol1, atol1, err_msg, verbose)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

actual = array([[[-9223372036683595776, -9223372032717438976,
         -9223372035725918208, -9223372034591522816,
         -92...463205888,
         -9223372033802764288, -9223372036012720128,
         -9223372034171469824, -9223372034640183296]]])
desired = array([[[648, 719, 544, 505, 439, 576, 586, 661],
        [710, 755, 643, 555, 464, 581, 669, 710]]])
rtol = 1e-08, atol = 1e-08, err_msg = '', verbose = True

    def assert_allclose(actual, desired, rtol=1e-7, atol=0, err_msg='',
                        verbose=True):
        """Raises an AssertionError if objects are not equal up to desired tolerance.
    
        Args:
             actual(numpy.ndarray or cupy.ndarray): The actual object to check.
             desired(numpy.ndarray or cupy.ndarray): The desired, expected object.
             rtol(float): Relative tolerance.
             atol(float): Absolute tolerance.
             err_msg(str): The error message to be printed in case of failure.
             verbose(bool): If ``True``, the conflicting
                 values are appended to the error message.
    
        .. seealso:: :func:`numpy.testing.assert_allclose`
    
        """  # NOQA
>       numpy.testing.assert_allclose(
            cupy.asnumpy(actual), cupy.asnumpy(desired),
            rtol=rtol, atol=atol, err_msg=err_msg, verbose=verbose)
E       AssertionError: 
E       Not equal to tolerance rtol=1e-08, atol=1e-08
E       
E       Mismatched elements: 16 / 16 (100%)
E       Max absolute difference: 9223372036683596424
E       Max relative difference: 2.10099591e+16
E        x: array([[[-9223372036683595776, -9223372032717438976,
E                -9223372035725918208, -9223372034591522816,
E                -9223372035954638848, -9223372033158709248,...
E        y: array([[[648, 719, 544, 505, 439, 576, 586, 661],
E               [710, 755, 643, 555, 464, 581, 669, 710]]])

cupy/testing/_array.py:24: AssertionError
----------------------------- Captured stdout call -----------------------------
dtype is <class 'numpy.int64'>
=============================== warnings summary ===============================
tests/cupy_tests/core_tests/fusion_tests/test_array.py: 1 warning
tests/cupy_tests/math_tests/test_sumprod.py: 19 warnings
  /home/kmaeh/.pyenv/versions/rocm-ci/lib/python3.8/site-packages/numpy/core/_methods.py:51: RuntimeWarning: overflow encountered in reduce
    return umr_prod(a, axis, dtype, out, keepdims, initial, where)

tests/cupy_tests/core_tests/fusion_tests/test_routines.py::TestFusionNumericalReduction_param_1_{func='prod'}::test_reduction
tests/cupy_tests/math_tests/test_sumprod.py::TestNansumNanprodLong_param_11_{axis=0, func='nanprod', keepdims=True, shape=(20, 30, 40), transpose_axes=False}::test_nansum_all
tests/cupy_tests/math_tests/test_sumprod.py::TestNansumNanprodLong_param_11_{axis=0, func='nanprod', keepdims=True, shape=(20, 30, 40), transpose_axes=False}::test_nansum_axis_transposed
tests/cupy_tests/math_tests/test_sumprod.py::TestNansumNanprodLong_param_15_{axis=0, func='nanprod', keepdims=False, shape=(20, 30, 40), transpose_axes=False}::test_nansum_all
tests/cupy_tests/math_tests/test_sumprod.py::TestNansumNanprodLong_param_15_{axis=0, func='nanprod', keepdims=False, shape=(20, 30, 40), transpose_axes=False}::test_nansum_axis_transposed
  /home/kmaeh/.pyenv/versions/rocm-ci/lib/python3.8/site-packages/numpy/core/fromnumeric.py:87: RuntimeWarning: overflow encountered in reduce
    return ufunc.reduce(obj, axis, dtype, out, **passkwargs)

tests/cupy_tests/lib_tests/test_polynomial.py::TestPolyval_param_0_{type_l='poly1d', type_r='ndarray'}::test_polyval
tests/cupy_tests/lib_tests/test_polynomial.py::TestPolyval_param_3_{type_l='ndarray', type_r='ndarray'}::test_polyval
tests/cupy_tests/lib_tests/test_polynomial.py::TestPolyvalDtypesCombination::test_polyval_diff_types_array_array
  /home/kmaeh/.pyenv/versions/rocm-ci/lib/python3.8/site-packages/numpy/lib/polynomial.py:734: RuntimeWarning: overflow encountered in multiply
    y = y * x + p[i]

tests/cupy_tests/lib_tests/test_polynomial.py::TestPolyval_param_1_{type_l='poly1d', type_r='numpy_scalar'}::test_polyval
tests/cupy_tests/lib_tests/test_polynomial.py::TestPolyval_param_4_{type_l='ndarray', type_r='numpy_scalar'}::test_polyval
tests/cupy_tests/lib_tests/test_polynomial.py::TestPolyvalDtypesCombination::test_polyval_diff_types_array_scalar
  /home/kmaeh/.pyenv/versions/rocm-ci/lib/python3.8/site-packages/numpy/lib/polynomial.py:734: RuntimeWarning: overflow encountered in half_scalars
    y = y * x + p[i]

tests/cupy_tests/lib_tests/test_polynomial.py::TestPolyval_param_1_{type_l='poly1d', type_r='numpy_scalar'}::test_polyval
tests/cupy_tests/lib_tests/test_polynomial.py::TestPolyval_param_4_{type_l='ndarray', type_r='numpy_scalar'}::test_polyval
tests/cupy_tests/lib_tests/test_polynomial.py::TestPolyvalDtypesCombination::test_polyval_diff_types_array_scalar
  /home/kmaeh/.pyenv/versions/rocm-ci/lib/python3.8/site-packages/numpy/lib/polynomial.py:734: RuntimeWarning: overflow encountered in byte_scalars
    y = y * x + p[i]

tests/cupy_tests/lib_tests/test_polynomial.py::TestPolyval_param_1_{type_l='poly1d', type_r='numpy_scalar'}::test_polyval
tests/cupy_tests/lib_tests/test_polynomial.py::TestPolyval_param_4_{type_l='ndarray', type_r='numpy_scalar'}::test_polyval
tests/cupy_tests/lib_tests/test_polynomial.py::TestPolyvalDtypesCombination::test_polyval_diff_types_array_scalar
  /home/kmaeh/.pyenv/versions/rocm-ci/lib/python3.8/site-packages/numpy/lib/polynomial.py:734: RuntimeWarning: overflow encountered in short_scalars
    y = y * x + p[i]

tests/cupy_tests/lib_tests/test_polynomial.py::TestPolyval_param_1_{type_l='poly1d', type_r='numpy_scalar'}::test_polyval
tests/cupy_tests/lib_tests/test_polynomial.py::TestPolyval_param_4_{type_l='ndarray', type_r='numpy_scalar'}::test_polyval
tests/cupy_tests/lib_tests/test_polynomial.py::TestPolyvalDtypesCombination::test_polyval_diff_types_array_scalar
  /home/kmaeh/.pyenv/versions/rocm-ci/lib/python3.8/site-packages/numpy/lib/polynomial.py:734: RuntimeWarning: overflow encountered in ubyte_scalars
    y = y * x + p[i]

tests/cupy_tests/lib_tests/test_polynomial.py::TestPolyval_param_1_{type_l='poly1d', type_r='numpy_scalar'}::test_polyval
tests/cupy_tests/lib_tests/test_polynomial.py::TestPolyval_param_4_{type_l='ndarray', type_r='numpy_scalar'}::test_polyval
tests/cupy_tests/lib_tests/test_polynomial.py::TestPolyvalDtypesCombination::test_polyval_diff_types_array_scalar
  /home/kmaeh/.pyenv/versions/rocm-ci/lib/python3.8/site-packages/numpy/lib/polynomial.py:734: RuntimeWarning: overflow encountered in ushort_scalars
    y = y * x + p[i]

tests/cupy_tests/linalg_tests/test_norms.py: 14 warnings
  /home/kmaeh/.pyenv/versions/rocm-ci/lib/python3.8/site-packages/numpy/linalg/linalg.py:2568: RuntimeWarning: divide by zero encountered in power
    absx **= ord

tests/cupy_tests/linalg_tests/test_norms.py: 14 warnings
  /home/kmaeh/.pyenv/versions/rocm-ci/lib/python3.8/site-packages/numpy/linalg/linalg.py:2568: RuntimeWarning: divide by zero encountered in reciprocal
    absx **= ord

tests/cupy_tests/math_tests/test_misc.py::TestMisc::test_nan_to_num_inf
tests/cupy_tests/math_tests/test_misc.py::TestMisc::test_nan_to_num_inf_nan
  /home/kmaeh/.pyenv/versions/rocm-ci/lib/python3.8/site-packages/numpy/core/numeric.py:2276: RuntimeWarning: overflow encountered in absolute
    return less_equal(abs(x-y), atol + rtol * abs(y))

tests/cupy_tests/math_tests/test_sumprod.py: 15 warnings
  /home/kmaeh/.pyenv/versions/rocm-ci/lib/python3.8/site-packages/numpy/core/_methods.py:51: RuntimeWarning: invalid value encountered in reduce
    return umr_prod(a, axis, dtype, out, keepdims, initial, where)

tests/cupy_tests/math_tests/test_sumprod.py::TestNansumNanprodLong_param_11_{axis=0, func='nanprod', keepdims=True, shape=(20, 30, 40), transpose_axes=False}::test_nansum_all
tests/cupy_tests/math_tests/test_sumprod.py::TestNansumNanprodLong_param_11_{axis=0, func='nanprod', keepdims=True, shape=(20, 30, 40), transpose_axes=False}::test_nansum_axis_transposed
tests/cupy_tests/math_tests/test_sumprod.py::TestNansumNanprodLong_param_15_{axis=0, func='nanprod', keepdims=False, shape=(20, 30, 40), transpose_axes=False}::test_nansum_all
tests/cupy_tests/math_tests/test_sumprod.py::TestNansumNanprodLong_param_15_{axis=0, func='nanprod', keepdims=False, shape=(20, 30, 40), transpose_axes=False}::test_nansum_axis_transposed
  /home/kmaeh/.pyenv/versions/rocm-ci/lib/python3.8/site-packages/numpy/core/fromnumeric.py:87: RuntimeWarning: invalid value encountered in reduce
    return ufunc.reduce(obj, axis, dtype, out, **passkwargs)

tests/cupy_tests/math_tests/test_sumprod.py: 32 warnings
  /home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.t8hdvgF7FH/cupy/tests/cupy_tests/math_tests/test_sumprod.py:799: RuntimeWarning: invalid value encountered in true_divide
    a = a / a

tests/cupy_tests/math_tests/test_sumprod.py::TestSumprod::test_sum_all2
tests/cupy_tests/math_tests/test_sumprod.py::TestSumprod::test_sum_all_transposed2
tests/cupy_tests/math_tests/test_sumprod.py::TestSumprod::test_sum_axes2
tests/cupy_tests/math_tests/test_sumprod.py::TestSumprod::test_sum_axes4
tests/cupy_tests/math_tests/test_sumprod.py::TestSumprod::test_sum_axis_transposed2
tests/cupyx_tests/scipy_tests/ndimage_tests/test_measurements.py::TestStats::test_only_input[_param_2_{op='variance'}]
tests/cupyx_tests/scipy_tests/ndimage_tests/test_measurements.py::TestStats::test_only_input[_param_3_{op='standard_deviation'}]
  /home/kmaeh/.pyenv/versions/rocm-ci/lib/python3.8/site-packages/numpy/core/_methods.py:47: RuntimeWarning: overflow encountered in reduce
    return umr_sum(a, axis, dtype, out, keepdims, initial, where)

tests/cupy_tests/statistics_tests/test_meanvar.py: 28 warnings
  /home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.t8hdvgF7FH/cupy/tests/cupy_tests/statistics_tests/test_meanvar.py:114: RuntimeWarning: invalid value encountered in true_divide
    a = a / a

tests/cupy_tests/statistics_tests/test_meanvar.py::TestNanMedian_param_4_{axis=0, keepdims=True, overwrite_input=True, shape=(3, 4, 5)}::test_nanmedian
tests/cupy_tests/statistics_tests/test_meanvar.py::TestNanMedian_param_5_{axis=0, keepdims=True, overwrite_input=False, shape=(3, 4, 5)}::test_nanmedian
tests/cupy_tests/statistics_tests/test_meanvar.py::TestNanMedian_param_6_{axis=0, keepdims=False, overwrite_input=True, shape=(3, 4, 5)}::test_nanmedian
tests/cupy_tests/statistics_tests/test_meanvar.py::TestNanMedian_param_7_{axis=0, keepdims=False, overwrite_input=False, shape=(3, 4, 5)}::test_nanmedian
tests/cupy_tests/statistics_tests/test_meanvar.py::TestNanMedian_param_8_{axis=1, keepdims=True, overwrite_input=True, shape=(3, 4, 5)}::test_nanmedian
tests/cupy_tests/statistics_tests/test_meanvar.py::TestNanMedian_param_9_{axis=1, keepdims=True, overwrite_input=False, shape=(3, 4, 5)}::test_nanmedian
tests/cupy_tests/statistics_tests/test_meanvar.py::TestNanMedian_param_10_{axis=1, keepdims=False, overwrite_input=True, shape=(3, 4, 5)}::test_nanmedian
tests/cupy_tests/statistics_tests/test_meanvar.py::TestNanMedian_param_11_{axis=1, keepdims=False, overwrite_input=False, shape=(3, 4, 5)}::test_nanmedian
  /home/kmaeh/.pyenv/versions/rocm-ci/lib/python3.8/site-packages/numpy/lib/nanfunctions.py:1113: RuntimeWarning: All-NaN slice encountered
    r, k = function_base._ureduce(a, func=_nanmedian, axis=axis, out=out,

tests/cupy_tests/statistics_tests/test_meanvar.py::TestProductZeroLength_param_1_{func='mean', params=((0,), None)}::test_external_mean_zero_len
tests/cupy_tests/statistics_tests/test_meanvar.py::TestProductZeroLength_param_2_{func='mean', params=((0, 0), None)}::test_external_mean_zero_len
tests/cupy_tests/statistics_tests/test_meanvar.py::TestProductZeroLength_param_3_{func='mean', params=((0, 0), 1)}::test_external_mean_zero_len
tests/cupy_tests/statistics_tests/test_meanvar.py::TestProductZeroLength_param_4_{func='mean', params=((0, 0, 0), None)}::test_external_mean_zero_len
tests/cupy_tests/statistics_tests/test_meanvar.py::TestProductZeroLength_param_5_{func='mean', params=((0, 0, 0), (0, 2))}::test_external_mean_zero_len
  /home/kmaeh/.pyenv/versions/rocm-ci/lib/python3.8/site-packages/numpy/core/fromnumeric.py:3372: RuntimeWarning: Mean of empty slice.
    return _methods._mean(a, axis=axis, dtype=dtype,

tests/cupy_tests/statistics_tests/test_meanvar.py::TestProductZeroLength_param_1_{func='mean', params=((0,), None)}::test_external_mean_zero_len
tests/cupy_tests/statistics_tests/test_meanvar.py::TestProductZeroLength_param_2_{func='mean', params=((0, 0), None)}::test_external_mean_zero_len
tests/cupy_tests/statistics_tests/test_meanvar.py::TestProductZeroLength_param_4_{func='mean', params=((0, 0, 0), None)}::test_external_mean_zero_len
  /home/kmaeh/.pyenv/versions/rocm-ci/lib/python3.8/site-packages/numpy/core/_methods.py:170: RuntimeWarning: invalid value encountered in double_scalars
    ret = ret.dtype.type(ret / rcount)

tests/cupy_tests/statistics_tests/test_meanvar.py::TestProductZeroLength_param_1_{func='mean', params=((0,), None)}::test_external_mean_zero_len
tests/cupy_tests/statistics_tests/test_meanvar.py::TestProductZeroLength_param_2_{func='mean', params=((0, 0), None)}::test_external_mean_zero_len
tests/cupy_tests/statistics_tests/test_meanvar.py::TestProductZeroLength_param_4_{func='mean', params=((0, 0, 0), None)}::test_external_mean_zero_len
  /home/kmaeh/.pyenv/versions/rocm-ci/lib/python3.8/site-packages/numpy/core/_methods.py:170: RuntimeWarning: invalid value encountered in true_divide
    ret = ret.dtype.type(ret / rcount)

tests/cupy_tests/statistics_tests/test_meanvar.py::TestProductZeroLength_param_1_{func='mean', params=((0,), None)}::test_external_mean_zero_len
tests/cupy_tests/statistics_tests/test_meanvar.py::TestProductZeroLength_param_2_{func='mean', params=((0, 0), None)}::test_external_mean_zero_len
tests/cupy_tests/statistics_tests/test_meanvar.py::TestProductZeroLength_param_4_{func='mean', params=((0, 0, 0), None)}::test_external_mean_zero_len
  /home/kmaeh/.pyenv/versions/rocm-ci/lib/python3.8/site-packages/numpy/core/_methods.py:168: RuntimeWarning: invalid value encountered in true_divide
    ret = arr.dtype.type(ret / rcount)

tests/cupy_tests/statistics_tests/test_meanvar.py::TestProductZeroLength_param_7_{func='std', params=((0,), None)}::test_external_mean_zero_len
tests/cupy_tests/statistics_tests/test_meanvar.py::TestProductZeroLength_param_8_{func='std', params=((0, 0), None)}::test_external_mean_zero_len
tests/cupy_tests/statistics_tests/test_meanvar.py::TestProductZeroLength_param_9_{func='std', params=((0, 0), 1)}::test_external_mean_zero_len
tests/cupy_tests/statistics_tests/test_meanvar.py::TestProductZeroLength_param_10_{func='std', params=((0, 0, 0), None)}::test_external_mean_zero_len
tests/cupy_tests/statistics_tests/test_meanvar.py::TestProductZeroLength_param_11_{func='std', params=((0, 0, 0), (0, 2))}::test_external_mean_zero_len
  /home/kmaeh/.pyenv/versions/rocm-ci/lib/python3.8/site-packages/numpy/core/_methods.py:233: RuntimeWarning: Degrees of freedom <= 0 for slice
    ret = _var(a, axis=axis, dtype=dtype, out=out, ddof=ddof,

tests/cupy_tests/statistics_tests/test_meanvar.py::TestProductZeroLength_param_7_{func='std', params=((0,), None)}::test_external_mean_zero_len
tests/cupy_tests/statistics_tests/test_meanvar.py::TestProductZeroLength_param_8_{func='std', params=((0, 0), None)}::test_external_mean_zero_len
tests/cupy_tests/statistics_tests/test_meanvar.py::TestProductZeroLength_param_10_{func='std', params=((0, 0, 0), None)}::test_external_mean_zero_len
tests/cupy_tests/statistics_tests/test_meanvar.py::TestProductZeroLength_param_13_{func='var', params=((0,), None)}::test_external_mean_zero_len
tests/cupy_tests/statistics_tests/test_meanvar.py::TestProductZeroLength_param_14_{func='var', params=((0, 0), None)}::test_external_mean_zero_len
tests/cupy_tests/statistics_tests/test_meanvar.py::TestProductZeroLength_param_16_{func='var', params=((0, 0, 0), None)}::test_external_mean_zero_len
  /home/kmaeh/.pyenv/versions/rocm-ci/lib/python3.8/site-packages/numpy/core/_methods.py:194: RuntimeWarning: invalid value encountered in true_divide
    arrmean = um.true_divide(

tests/cupy_tests/statistics_tests/test_meanvar.py::TestProductZeroLength_param_7_{func='std', params=((0,), None)}::test_external_mean_zero_len
tests/cupy_tests/statistics_tests/test_meanvar.py::TestProductZeroLength_param_8_{func='std', params=((0, 0), None)}::test_external_mean_zero_len
tests/cupy_tests/statistics_tests/test_meanvar.py::TestProductZeroLength_param_10_{func='std', params=((0, 0, 0), None)}::test_external_mean_zero_len
tests/cupy_tests/statistics_tests/test_meanvar.py::TestProductZeroLength_param_13_{func='var', params=((0,), None)}::test_external_mean_zero_len
tests/cupy_tests/statistics_tests/test_meanvar.py::TestProductZeroLength_param_14_{func='var', params=((0, 0), None)}::test_external_mean_zero_len
tests/cupy_tests/statistics_tests/test_meanvar.py::TestProductZeroLength_param_16_{func='var', params=((0, 0, 0), None)}::test_external_mean_zero_len
  /home/kmaeh/.pyenv/versions/rocm-ci/lib/python3.8/site-packages/numpy/core/_methods.py:226: RuntimeWarning: invalid value encountered in double_scalars
    ret = ret.dtype.type(ret / rcount)

tests/cupy_tests/statistics_tests/test_meanvar.py::TestProductZeroLength_param_7_{func='std', params=((0,), None)}::test_external_mean_zero_len
tests/cupy_tests/statistics_tests/test_meanvar.py::TestProductZeroLength_param_8_{func='std', params=((0, 0), None)}::test_external_mean_zero_len
tests/cupy_tests/statistics_tests/test_meanvar.py::TestProductZeroLength_param_10_{func='std', params=((0, 0, 0), None)}::test_external_mean_zero_len
tests/cupy_tests/statistics_tests/test_meanvar.py::TestProductZeroLength_param_13_{func='var', params=((0,), None)}::test_external_mean_zero_len
tests/cupy_tests/statistics_tests/test_meanvar.py::TestProductZeroLength_param_14_{func='var', params=((0, 0), None)}::test_external_mean_zero_len
tests/cupy_tests/statistics_tests/test_meanvar.py::TestProductZeroLength_param_16_{func='var', params=((0, 0, 0), None)}::test_external_mean_zero_len
  /home/kmaeh/.pyenv/versions/rocm-ci/lib/python3.8/site-packages/numpy/core/_methods.py:226: RuntimeWarning: invalid value encountered in true_divide
    ret = ret.dtype.type(ret / rcount)

tests/cupy_tests/statistics_tests/test_meanvar.py::TestProductZeroLength_param_13_{func='var', params=((0,), None)}::test_external_mean_zero_len
tests/cupy_tests/statistics_tests/test_meanvar.py::TestProductZeroLength_param_14_{func='var', params=((0, 0), None)}::test_external_mean_zero_len
tests/cupy_tests/statistics_tests/test_meanvar.py::TestProductZeroLength_param_15_{func='var', params=((0, 0), 1)}::test_external_mean_zero_len
tests/cupy_tests/statistics_tests/test_meanvar.py::TestProductZeroLength_param_16_{func='var', params=((0, 0, 0), None)}::test_external_mean_zero_len
tests/cupy_tests/statistics_tests/test_meanvar.py::TestProductZeroLength_param_17_{func='var', params=((0, 0, 0), (0, 2))}::test_external_mean_zero_len
  /home/kmaeh/.pyenv/versions/rocm-ci/lib/python3.8/site-packages/numpy/core/fromnumeric.py:3621: RuntimeWarning: Degrees of freedom <= 0 for slice
    return _methods._var(a, axis=axis, dtype=dtype, out=out, ddof=ddof,

tests/cupyx_tests/scipy_tests/ndimage_tests/test_interpolation.py::TestShift::test_shift_int[_param_217_{cval=nan, mode='constant', order=0, output=float64, prefilter=True, shift=0.1}]
tests/cupyx_tests/scipy_tests/ndimage_tests/test_interpolation.py::TestShift::test_shift_int[_param_220_{cval=nan, mode='constant', order=1, output=float64, prefilter=True, shift=0.1}]
tests/cupyx_tests/scipy_tests/ndimage_tests/test_interpolation.py::TestShift::test_shift_int[_param_223_{cval=nan, mode='constant', order=3, output=float64, prefilter=True, shift=0.1}]
tests/cupyx_tests/scipy_tests/ndimage_tests/test_interpolation.py::TestShift::test_shift_int[_param_226_{cval=inf, mode='constant', order=0, output=float64, prefilter=True, shift=0.1}]
tests/cupyx_tests/scipy_tests/ndimage_tests/test_interpolation.py::TestShift::test_shift_int[_param_229_{cval=inf, mode='constant', order=1, output=float64, prefilter=True, shift=0.1}]
tests/cupyx_tests/scipy_tests/ndimage_tests/test_interpolation.py::TestShift::test_shift_int[_param_232_{cval=inf, mode='constant', order=3, output=float64, prefilter=True, shift=0.1}]
tests/cupyx_tests/scipy_tests/ndimage_tests/test_interpolation.py::TestShift::test_shift_int[_param_235_{cval=-inf, mode='constant', order=0, output=float64, prefilter=True, shift=0.1}]
tests/cupyx_tests/scipy_tests/ndimage_tests/test_interpolation.py::TestShift::test_shift_int[_param_238_{cval=-inf, mode='constant', order=1, output=float64, prefilter=True, shift=0.1}]
tests/cupyx_tests/scipy_tests/ndimage_tests/test_interpolation.py::TestShift::test_shift_int[_param_241_{cval=-inf, mode='constant', order=3, output=float64, prefilter=True, shift=0.1}]
  /home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.t8hdvgF7FH/cupy/tests/cupyx_tests/scipy_tests/ndimage_tests/test_interpolation.py:533: RuntimeWarning: invalid value encountered in remainder
    float_out = self._shift(xp, scp, a.astype(xp.float64)) % 1

tests/cupyx_tests/scipy_tests/ndimage_tests/test_measurements.py: 14 warnings
  /home/kmaeh/.pyenv/versions/rocm-ci/lib/python3.8/site-packages/scipy/ndimage/measurements.py:684: RuntimeWarning: invalid value encountered in true_divide
    return sum / numpy.asanyarray(count).astype(numpy.float64)

tests/cupyx_tests/scipy_tests/ndimage_tests/test_measurements.py: 28 warnings
  /home/kmaeh/.pyenv/versions/rocm-ci/lib/python3.8/site-packages/scipy/ndimage/measurements.py:736: RuntimeWarning: invalid value encountered in true_divide
    return sum_c_sq / np.asanyarray(count).astype(float)

tests/cupyx_tests/scipy_tests/signal_tests/test_signaltools.py::TestWiener_param_0_{im=(10,), mysize=3, noise=False}::test_wiener
tests/cupyx_tests/scipy_tests/signal_tests/test_signaltools.py::TestWiener_param_1_{im=(10,), mysize=3, noise=True}::test_wiener
tests/cupyx_tests/scipy_tests/signal_tests/test_signaltools.py::TestWiener_param_2_{im=(10,), mysize=4, noise=False}::test_wiener
tests/cupyx_tests/scipy_tests/signal_tests/test_signaltools.py::TestWiener_param_3_{im=(10,), mysize=4, noise=True}::test_wiener
tests/cupyx_tests/scipy_tests/signal_tests/test_signaltools.py::TestWiener_param_4_{im=(10,), mysize=(3, 4, 5), noise=False}::test_wiener
tests/cupyx_tests/scipy_tests/signal_tests/test_signaltools.py::TestWiener_param_5_{im=(10,), mysize=(3, 4, 5), noise=True}::test_wiener
  /home/kmaeh/.pyenv/versions/rocm-ci/lib/python3.8/site-packages/scipy/signal/signaltools.py:1598: RuntimeWarning: divide by zero encountered in true_divide
    res *= (1 - noise / lVar)

tests/cupyx_tests/scipy_tests/signal_tests/test_signaltools.py::TestWiener_param_0_{im=(10,), mysize=3, noise=False}::test_wiener
tests/cupyx_tests/scipy_tests/signal_tests/test_signaltools.py::TestWiener_param_1_{im=(10,), mysize=3, noise=True}::test_wiener
tests/cupyx_tests/scipy_tests/signal_tests/test_signaltools.py::TestWiener_param_2_{im=(10,), mysize=4, noise=False}::test_wiener
tests/cupyx_tests/scipy_tests/signal_tests/test_signaltools.py::TestWiener_param_3_{im=(10,), mysize=4, noise=True}::test_wiener
tests/cupyx_tests/scipy_tests/signal_tests/test_signaltools.py::TestWiener_param_4_{im=(10,), mysize=(3, 4, 5), noise=False}::test_wiener
tests/cupyx_tests/scipy_tests/signal_tests/test_signaltools.py::TestWiener_param_5_{im=(10,), mysize=(3, 4, 5), noise=True}::test_wiener
  /home/kmaeh/.pyenv/versions/rocm-ci/lib/python3.8/site-packages/scipy/signal/signaltools.py:1598: RuntimeWarning: invalid value encountered in multiply
    res *= (1 - noise / lVar)

-- Docs: https://docs.pytest.org/en/stable/warnings.html
- generated html file: file:///home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.t8hdvgF7FH/cupy/_output/report.html -
=========================== short test summary info ============================
FAILED tests/cupy_tests/functional_tests/test_vectorize.py::TestVectorizeOps::test_vectorize_bit_or
FAILED tests/cupy_tests/functional_tests/test_vectorize.py::TestVectorizeOps::test_vectorize_bit_xor
FAILED tests/cupy_tests/functional_tests/test_vectorize.py::TestVectorizeOps::test_vectorize_div
FAILED tests/cupy_tests/functional_tests/test_vectorize.py::TestVectorizeOps::test_vectorize_eq
FAILED tests/cupy_tests/functional_tests/test_vectorize.py::TestVectorizeOps::test_vectorize_floor_div
FAILED tests/cupy_tests/functional_tests/test_vectorize.py::TestVectorizeOps::test_vectorize_ge
FAILED tests/cupy_tests/functional_tests/test_vectorize.py::TestVectorizeOps::test_vectorize_gt
FAILED tests/cupy_tests/functional_tests/test_vectorize.py::TestVectorizeOps::test_vectorize_le
FAILED tests/cupy_tests/functional_tests/test_vectorize.py::TestVectorizeOps::test_vectorize_logical_not
FAILED tests/cupy_tests/functional_tests/test_vectorize.py::TestVectorizeOps::test_vectorize_lshift
FAILED tests/cupy_tests/functional_tests/test_vectorize.py::TestVectorizeOps::test_vectorize_lt
FAILED tests/cupy_tests/functional_tests/test_vectorize.py::TestVectorizeOps::test_vectorize_mod
FAILED tests/cupy_tests/functional_tests/test_vectorize.py::TestVectorizeOps::test_vectorize_mul
FAILED tests/cupy_tests/functional_tests/test_vectorize.py::TestVectorizeOps::test_vectorize_neq
FAILED tests/cupy_tests/functional_tests/test_vectorize.py::TestVectorizeOps::test_vectorize_pow
FAILED tests/cupy_tests/functional_tests/test_vectorize.py::TestVectorizeOps::test_vectorize_rshift
FAILED tests/cupy_tests/functional_tests/test_vectorize.py::TestVectorizeOps::test_vectorize_sub
FAILED tests/cupy_tests/functional_tests/test_vectorize.py::TestVectorizeOps::test_vectorize_usub
FAILED tests/cupy_tests/functional_tests/test_vectorize.py::TestVectorizeExprs::test_vectorize_ifexp
FAILED tests/cupy_tests/functional_tests/test_vectorize.py::TestVectorizeExprs::test_vectorize_incr
FAILED tests/cupy_tests/functional_tests/test_vectorize.py::TestVectorizeExprs::test_vectorize_typecast
FAILED tests/cupy_tests/functional_tests/test_vectorize.py::TestVectorizeExprs::test_vectorize_ufunc_call
FAILED tests/cupy_tests/functional_tests/test_vectorize.py::TestVectorizeExprs::test_vectorize_ufunc_call_dtype
FAILED tests/cupy_tests/functional_tests/test_vectorize.py::TestVectorizeInstructions::test_vectorize_assign_new
FAILED tests/cupy_tests/functional_tests/test_vectorize.py::TestVectorizeInstructions::test_vectorize_assign_update
FAILED tests/cupy_tests/functional_tests/test_vectorize.py::TestVectorizeInstructions::test_vectorize_augassign
FAILED tests/cupy_tests/functional_tests/test_vectorize.py::TestVectorizeInstructions::test_vectorize_const_assign
FAILED tests/cupy_tests/functional_tests/test_vectorize.py::TestVectorizeInstructions::test_vectorize_nonconst_for_value
FAILED tests/cupy_tests/functional_tests/test_vectorize.py::TestVectorizeStmts::test_elif
FAILED tests/cupy_tests/functional_tests/test_vectorize.py::TestVectorizeStmts::test_for
FAILED tests/cupy_tests/functional_tests/test_vectorize.py::TestVectorizeStmts::test_for_compound_expression_param
FAILED tests/cupy_tests/functional_tests/test_vectorize.py::TestVectorizeStmts::test_for_const_range
FAILED tests/cupy_tests/functional_tests/test_vectorize.py::TestVectorizeStmts::test_for_counter_after_loop
FAILED tests/cupy_tests/functional_tests/test_vectorize.py::TestVectorizeStmts::test_for_range_step
FAILED tests/cupy_tests/functional_tests/test_vectorize.py::TestVectorizeStmts::test_for_update_counter
FAILED tests/cupy_tests/functional_tests/test_vectorize.py::TestVectorizeStmts::test_for_update_loop_condition
FAILED tests/cupy_tests/functional_tests/test_vectorize.py::TestVectorizeStmts::test_if
FAILED tests/cupy_tests/functional_tests/test_vectorize.py::TestVectorizeStmts::test_if_no_orlese
FAILED tests/cupy_tests/functional_tests/test_vectorize.py::TestVectorizeStmts::test_return_tuple
FAILED tests/cupy_tests/functional_tests/test_vectorize.py::TestVectorizeStmts::test_tuple
FAILED tests/cupy_tests/functional_tests/test_vectorize.py::TestVectorizeStmts::test_while
FAILED tests/cupy_tests/functional_tests/test_vectorize.py::TestVectorizeConstants::test_vectorize_const_attr
FAILED tests/cupy_tests/functional_tests/test_vectorize.py::TestVectorizeConstants::test_vectorize_const_value
FAILED tests/cupy_tests/functional_tests/test_vectorize.py::TestVectorizeBroadcast::test_vectorize_broadcast
FAILED tests/cupy_tests/functional_tests/test_vectorize.py::TestVectorizeBroadcast::test_vectorize_numpy_scalar_input
FAILED tests/cupy_tests/functional_tests/test_vectorize.py::TestVectorizeBroadcast::test_vectorize_python_scalar_input
FAILED tests/cupy_tests/functional_tests/test_vectorize.py::TestVectorize::test_vectorize_arithmetic_ops
FAILED tests/cupy_tests/indexing_tests/test_generate.py::TestIX_::test_ix_bool_ndarray
FAILED tests/cupy_tests/indexing_tests/test_generate.py::TestUnravelIndex::test
FAILED tests/cupy_tests/indexing_tests/test_generate.py::TestRavelMultiIndex::test_multi_index_broadcasting
FAILED tests/cupy_tests/indexing_tests/test_indexing.py::TestIndexing::test_compress
FAILED tests/cupy_tests/indexing_tests/test_indexing.py::TestIndexing::test_compress_no_axis
FAILED tests/cupy_tests/indexing_tests/test_indexing.py::TestIndexing::test_compress_no_bool
FAILED tests/cupy_tests/indexing_tests/test_indexing.py::TestIndexing::test_extract
FAILED tests/cupy_tests/indexing_tests/test_indexing.py::TestIndexing::test_extract_no_bool
FAILED tests/cupy_tests/indexing_tests/test_indexing.py::TestIndexing::test_extract_shape_mismatch
FAILED tests/cupy_tests/indexing_tests/test_indexing.py::TestIndexing::test_extract_size_mismatch
FAILED tests/cupy_tests/indexing_tests/test_indexing.py::TestIndexing::test_extract_size_mismatch2
FAILED tests/cupy_tests/indexing_tests/test_indexing.py::TestChoose::test_choose
FAILED tests/cupy_tests/indexing_tests/test_indexing.py::TestChoose::test_choose_broadcast
FAILED tests/cupy_tests/indexing_tests/test_indexing.py::TestChoose::test_choose_broadcast2
FAILED tests/cupy_tests/indexing_tests/test_indexing.py::TestChoose::test_choose_clip
FAILED tests/cupy_tests/indexing_tests/test_indexing.py::TestChoose::test_choose_wrap
FAILED tests/cupy_tests/indexing_tests/test_indexing.py::TestSelect::test_select
FAILED tests/cupy_tests/indexing_tests/test_indexing.py::TestSelect::test_select_1D_choicelist
FAILED tests/cupy_tests/indexing_tests/test_indexing.py::TestSelect::test_select_choicelist_condlist_broadcast
FAILED tests/cupy_tests/indexing_tests/test_indexing.py::TestSelect::test_select_complex
FAILED tests/cupy_tests/indexing_tests/test_indexing.py::TestSelect::test_select_default
FAILED tests/cupy_tests/indexing_tests/test_indexing.py::TestSelect::test_select_default_complex
FAILED tests/cupy_tests/indexing_tests/test_indexing.py::TestSelect::test_select_odd_shaped_broadcastable
FAILED tests/cupy_tests/indexing_tests/test_indexing.py::TestSelect::test_select_odd_shaped_broadcastable_complex
FAILED tests/cupy_tests/indexing_tests/test_insert.py::TestPlace_param_3_{n_vals=1, shape=(7,)}::test_place
FAILED tests/cupy_tests/indexing_tests/test_insert.py::TestPlace_param_4_{n_vals=1, shape=(2, 3)}::test_place
FAILED tests/cupy_tests/indexing_tests/test_insert.py::TestPlace_param_5_{n_vals=1, shape=(4, 3, 2)}::test_place
FAILED tests/cupy_tests/indexing_tests/test_insert.py::TestPlace_param_6_{n_vals=3, shape=(7,)}::test_place
FAILED tests/cupy_tests/indexing_tests/test_insert.py::TestPlace_param_7_{n_vals=3, shape=(2, 3)}::test_place
FAILED tests/cupy_tests/indexing_tests/test_insert.py::TestPlace_param_8_{n_vals=3, shape=(4, 3, 2)}::test_place
FAILED tests/cupy_tests/indexing_tests/test_insert.py::TestPlace_param_9_{n_vals=15, shape=(7,)}::test_place
FAILED tests/cupy_tests/indexing_tests/test_insert.py::TestPlace_param_10_{n_vals=15, shape=(2, 3)}::test_place
FAILED tests/cupy_tests/indexing_tests/test_insert.py::TestPlace_param_11_{n_vals=15, shape=(4, 3, 2)}::test_place
FAILED tests/cupy_tests/indexing_tests/test_insert.py::TestPlaceRaises_param_0_{shape=(7,)}::test_place_empty_value_error
FAILED tests/cupy_tests/indexing_tests/test_insert.py::TestPlaceRaises_param_1_{shape=(2, 3)}::test_place_empty_value_error
FAILED tests/cupy_tests/indexing_tests/test_insert.py::TestPlaceRaises_param_2_{shape=(4, 3, 2)}::test_place_empty_value_error
FAILED tests/cupy_tests/indexing_tests/test_insert.py::TestPut_param_3_{mode='raise', n_vals=1, shape=(7,)}::test_put
FAILED tests/cupy_tests/indexing_tests/test_insert.py::TestPut_param_4_{mode='raise', n_vals=1, shape=(2, 3)}::test_put
FAILED tests/cupy_tests/indexing_tests/test_insert.py::TestPut_param_5_{mode='raise', n_vals=1, shape=(4, 3, 2)}::test_put
FAILED tests/cupy_tests/indexing_tests/test_insert.py::TestPut_param_6_{mode='raise', n_vals=3, shape=(7,)}::test_put
FAILED tests/cupy_tests/indexing_tests/test_insert.py::TestPut_param_7_{mode='raise', n_vals=3, shape=(2, 3)}::test_put
FAILED tests/cupy_tests/indexing_tests/test_insert.py::TestPut_param_8_{mode='raise', n_vals=3, shape=(4, 3, 2)}::test_put
FAILED tests/cupy_tests/indexing_tests/test_insert.py::TestPut_param_9_{mode='raise', n_vals=4, shape=(7,)}::test_put
FAILED tests/cupy_tests/indexing_tests/test_insert.py::TestPut_param_10_{mode='raise', n_vals=4, shape=(2, 3)}::test_put
FAILED tests/cupy_tests/indexing_tests/test_insert.py::TestPut_param_11_{mode='raise', n_vals=4, shape=(4, 3, 2)}::test_put
FAILED tests/cupy_tests/indexing_tests/test_insert.py::TestPut_param_12_{mode='raise', n_vals=5, shape=(7,)}::test_put
FAILED tests/cupy_tests/indexing_tests/test_insert.py::TestPut_param_13_{mode='raise', n_vals=5, shape=(2, 3)}::test_put
FAILED tests/cupy_tests/indexing_tests/test_insert.py::TestPut_param_14_{mode='raise', n_vals=5, shape=(4, 3, 2)}::test_put
FAILED tests/cupy_tests/indexing_tests/test_insert.py::TestPut_param_18_{mode='wrap', n_vals=1, shape=(7,)}::test_put
FAILED tests/cupy_tests/indexing_tests/test_insert.py::TestPut_param_19_{mode='wrap', n_vals=1, shape=(2, 3)}::test_put
FAILED tests/cupy_tests/indexing_tests/test_insert.py::TestPut_param_20_{mode='wrap', n_vals=1, shape=(4, 3, 2)}::test_put
FAILED tests/cupy_tests/indexing_tests/test_insert.py::TestPut_param_21_{mode='wrap', n_vals=3, shape=(7,)}::test_put
FAILED tests/cupy_tests/indexing_tests/test_insert.py::TestPut_param_22_{mode='wrap', n_vals=3, shape=(2, 3)}::test_put
FAILED tests/cupy_tests/indexing_tests/test_insert.py::TestPut_param_23_{mode='wrap', n_vals=3, shape=(4, 3, 2)}::test_put
FAILED tests/cupy_tests/indexing_tests/test_insert.py::TestPut_param_24_{mode='wrap', n_vals=4, shape=(7,)}::test_put
FAILED tests/cupy_tests/indexing_tests/test_insert.py::TestPut_param_25_{mode='wrap', n_vals=4, shape=(2, 3)}::test_put
FAILED tests/cupy_tests/indexing_tests/test_insert.py::TestPut_param_26_{mode='wrap', n_vals=4, shape=(4, 3, 2)}::test_put
FAILED tests/cupy_tests/indexing_tests/test_insert.py::TestPut_param_27_{mode='wrap', n_vals=5, shape=(7,)}::test_put
FAILED tests/cupy_tests/indexing_tests/test_insert.py::TestPut_param_28_{mode='wrap', n_vals=5, shape=(2, 3)}::test_put
FAILED tests/cupy_tests/indexing_tests/test_insert.py::TestPut_param_29_{mode='wrap', n_vals=5, shape=(4, 3, 2)}::test_put
FAILED tests/cupy_tests/indexing_tests/test_insert.py::TestPut_param_33_{mode='clip', n_vals=1, shape=(7,)}::test_put
FAILED tests/cupy_tests/indexing_tests/test_insert.py::TestPut_param_34_{mode='clip', n_vals=1, shape=(2, 3)}::test_put
FAILED tests/cupy_tests/indexing_tests/test_insert.py::TestPut_param_35_{mode='clip', n_vals=1, shape=(4, 3, 2)}::test_put
FAILED tests/cupy_tests/indexing_tests/test_insert.py::TestPut_param_36_{mode='clip', n_vals=3, shape=(7,)}::test_put
FAILED tests/cupy_tests/indexing_tests/test_insert.py::TestPut_param_37_{mode='clip', n_vals=3, shape=(2, 3)}::test_put
FAILED tests/cupy_tests/indexing_tests/test_insert.py::TestPut_param_38_{mode='clip', n_vals=3, shape=(4, 3, 2)}::test_put
FAILED tests/cupy_tests/indexing_tests/test_insert.py::TestPut_param_39_{mode='clip', n_vals=4, shape=(7,)}::test_put
FAILED tests/cupy_tests/indexing_tests/test_insert.py::TestPut_param_40_{mode='clip', n_vals=4, shape=(2, 3)}::test_put
FAILED tests/cupy_tests/indexing_tests/test_insert.py::TestPut_param_41_{mode='clip', n_vals=4, shape=(4, 3, 2)}::test_put
FAILED tests/cupy_tests/indexing_tests/test_insert.py::TestPut_param_42_{mode='clip', n_vals=5, shape=(7,)}::test_put
FAILED tests/cupy_tests/indexing_tests/test_insert.py::TestPut_param_43_{mode='clip', n_vals=5, shape=(2, 3)}::test_put
FAILED tests/cupy_tests/indexing_tests/test_insert.py::TestPut_param_44_{mode='clip', n_vals=5, shape=(4, 3, 2)}::test_put
FAILED tests/cupy_tests/indexing_tests/test_insert.py::TestPutScalars_param_0_{shape=(7,)}::test_put_index_scalar
FAILED tests/cupy_tests/indexing_tests/test_insert.py::TestPutScalars_param_0_{shape=(7,)}::test_put_values_scalar
FAILED tests/cupy_tests/indexing_tests/test_insert.py::TestPutScalars_param_1_{shape=(2, 3)}::test_put_index_scalar
FAILED tests/cupy_tests/indexing_tests/test_insert.py::TestPutScalars_param_1_{shape=(2, 3)}::test_put_values_scalar
FAILED tests/cupy_tests/indexing_tests/test_insert.py::TestPutScalars_param_2_{shape=(4, 3, 2)}::test_put_index_scalar
FAILED tests/cupy_tests/indexing_tests/test_insert.py::TestPutScalars_param_2_{shape=(4, 3, 2)}::test_put_values_scalar
FAILED tests/cupy_tests/indexing_tests/test_insert.py::TestPutRaises_param_0_{shape=(7,)}::test_put_inds_overflow_error
FAILED tests/cupy_tests/indexing_tests/test_insert.py::TestPutRaises_param_0_{shape=(7,)}::test_put_inds_underflow_error
FAILED tests/cupy_tests/indexing_tests/test_insert.py::TestPutRaises_param_1_{shape=(2, 3)}::test_put_inds_overflow_error
FAILED tests/cupy_tests/indexing_tests/test_insert.py::TestPutRaises_param_1_{shape=(2, 3)}::test_put_inds_underflow_error
FAILED tests/cupy_tests/indexing_tests/test_insert.py::TestPutmaskDifferentShapes_param_3_{shape=(1,), values_shape=(2,)}::test_putmask
FAILED tests/cupy_tests/indexing_tests/test_insert.py::TestPutmaskDifferentShapes_param_4_{shape=(1,), values_shape=(3, 1)}::test_putmask
FAILED tests/cupy_tests/indexing_tests/test_insert.py::TestPutmaskDifferentShapes_param_5_{shape=(1,), values_shape=(5,)}::test_putmask
FAILED tests/cupy_tests/indexing_tests/test_insert.py::TestPutmaskDifferentShapes_param_6_{shape=(2, 3), values_shape=(2,)}::test_putmask
FAILED tests/cupy_tests/indexing_tests/test_insert.py::TestPutmaskDifferentShapes_param_7_{shape=(2, 3), values_shape=(3, 1)}::test_putmask
FAILED tests/cupy_tests/indexing_tests/test_insert.py::TestPutmaskDifferentShapes_param_8_{shape=(2, 3), values_shape=(5,)}::test_putmask
FAILED tests/cupy_tests/indexing_tests/test_insert.py::TestPutmaskDifferentShapes_param_9_{shape=(2, 3, 4), values_shape=(2,)}::test_putmask
FAILED tests/cupy_tests/indexing_tests/test_insert.py::TestPutmaskDifferentShapes_param_10_{shape=(2, 3, 4), values_shape=(3, 1)}::test_putmask
FAILED tests/cupy_tests/indexing_tests/test_insert.py::TestPutmaskDifferentShapes_param_11_{shape=(2, 3, 4), values_shape=(5,)}::test_putmask
FAILED tests/cupy_tests/indexing_tests/test_insert.py::TestFillDiagonal_param_0_{shape=(3, 3), val=1, wrap=True}::test_columnar_slice
FAILED tests/cupy_tests/indexing_tests/test_insert.py::TestFillDiagonal_param_0_{shape=(3, 3), val=1, wrap=True}::test_fill_diagonal
FAILED tests/cupy_tests/indexing_tests/test_insert.py::TestFillDiagonal_param_1_{shape=(3, 3), val=1, wrap=False}::test_columnar_slice
FAILED tests/cupy_tests/indexing_tests/test_insert.py::TestFillDiagonal_param_1_{shape=(3, 3), val=1, wrap=False}::test_fill_diagonal
FAILED tests/cupy_tests/indexing_tests/test_insert.py::TestFillDiagonal_param_2_{shape=(3, 3), val=0, wrap=True}::test_columnar_slice
FAILED tests/cupy_tests/indexing_tests/test_insert.py::TestFillDiagonal_param_2_{shape=(3, 3), val=0, wrap=True}::test_fill_diagonal
FAILED tests/cupy_tests/indexing_tests/test_insert.py::TestFillDiagonal_param_3_{shape=(3, 3), val=0, wrap=False}::test_columnar_slice
FAILED tests/cupy_tests/indexing_tests/test_insert.py::TestFillDiagonal_param_3_{shape=(3, 3), val=0, wrap=False}::test_fill_diagonal
FAILED tests/cupy_tests/indexing_tests/test_insert.py::TestFillDiagonal_param_4_{shape=(3, 3), val=(2,), wrap=True}::test_columnar_slice
FAILED tests/cupy_tests/indexing_tests/test_insert.py::TestFillDiagonal_param_4_{shape=(3, 3), val=(2,), wrap=True}::test_fill_diagonal
FAILED tests/cupy_tests/indexing_tests/test_insert.py::TestFillDiagonal_param_5_{shape=(3, 3), val=(2,), wrap=False}::test_columnar_slice
FAILED tests/cupy_tests/indexing_tests/test_insert.py::TestFillDiagonal_param_5_{shape=(3, 3), val=(2,), wrap=False}::test_fill_diagonal
FAILED tests/cupy_tests/indexing_tests/test_insert.py::TestFillDiagonal_param_6_{shape=(3, 3), val=(2, 2), wrap=True}::test_columnar_slice
FAILED tests/cupy_tests/indexing_tests/test_insert.py::TestFillDiagonal_param_6_{shape=(3, 3), val=(2, 2), wrap=True}::test_fill_diagonal
FAILED tests/cupy_tests/indexing_tests/test_insert.py::TestFillDiagonal_param_7_{shape=(3, 3), val=(2, 2), wrap=False}::test_columnar_slice
FAILED tests/cupy_tests/indexing_tests/test_insert.py::TestFillDiagonal_param_7_{shape=(3, 3), val=(2, 2), wrap=False}::test_fill_diagonal
FAILED tests/cupy_tests/indexing_tests/test_insert.py::TestFillDiagonal_param_8_{shape=(2, 2, 2), val=1, wrap=True}::test_fill_diagonal
FAILED tests/cupy_tests/indexing_tests/test_insert.py::TestFillDiagonal_param_9_{shape=(2, 2, 2), val=1, wrap=False}::test_fill_diagonal
FAILED tests/cupy_tests/indexing_tests/test_insert.py::TestFillDiagonal_param_10_{shape=(2, 2, 2), val=0, wrap=True}::test_fill_diagonal
FAILED tests/cupy_tests/indexing_tests/test_insert.py::TestFillDiagonal_param_11_{shape=(2, 2, 2), val=0, wrap=False}::test_fill_diagonal
FAILED tests/cupy_tests/indexing_tests/test_insert.py::TestFillDiagonal_param_12_{shape=(2, 2, 2), val=(2,), wrap=True}::test_fill_diagonal
FAILED tests/cupy_tests/indexing_tests/test_insert.py::TestFillDiagonal_param_13_{shape=(2, 2, 2), val=(2,), wrap=False}::test_fill_diagonal
FAILED tests/cupy_tests/lib_tests/test_polynomial.py::TestPoly1dInit_param_0_{variable=None}::test_poly1d_numpy_poly1d
FAILED tests/cupy_tests/lib_tests/test_polynomial.py::TestPoly1dInit_param_0_{variable=None}::test_poly1d_numpy_poly1d_variable
FAILED tests/cupy_tests/lib_tests/test_polynomial.py::TestPoly1dInit_param_1_{variable='y'}::test_poly1d_numpy_poly1d
FAILED tests/cupy_tests/lib_tests/test_polynomial.py::TestPoly1dInit_param_1_{variable='y'}::test_poly1d_numpy_poly1d_variable
FAILED tests/cupyx_tests/jit_tests/test_raw.py::TestRaw::test_raw_multidimensional_array
FAILED tests/cupyx_tests/scipy_tests/linalg_tests/test_decomp_lu.py::TestLUSolve_param_2_{shapes=((4, 4), (4,)), trans=2}::test_lu_solve
FAILED tests/cupyx_tests/scipy_tests/ndimage_tests/test_filters.py::TestGenericFilter::test_filter[_param_156_{dtype=uint8, filter='generic_filter', footprint=False, func_or_kernel=(<cupy.core.raw.RawKernel object at 0x7f4fc7b82c40>, <function rms_pyfunc at 0x7f4fc8e43820>), ksize=3, mode='mirror', shape=(4, 5)}]
FAILED tests/cupyx_tests/scipy_tests/ndimage_tests/test_filters.py::TestGenericFilter::test_filter[_param_158_{dtype=uint8, filter='generic_filter', footprint=False, func_or_kernel=(<cupy.core.raw.RawKernel object at 0x7f4fc7b82c40>, <function rms_pyfunc at 0x7f4fc8e43820>), ksize=4, mode='mirror', shape=(4, 5)}]
FAILED tests/cupyx_tests/scipy_tests/ndimage_tests/test_filters.py::TestGenericFilter::test_filter[_param_160_{dtype=float64, filter='generic_filter', footprint=False, func_or_kernel=(<cupy.core.raw.RawKernel object at 0x7f4fc7b82c40>, <function rms_pyfunc at 0x7f4fc8e43820>), ksize=3, mode='mirror', shape=(4, 5)}]
FAILED tests/cupyx_tests/scipy_tests/ndimage_tests/test_filters.py::TestGenericFilter::test_filter[_param_162_{dtype=float64, filter='generic_filter', footprint=False, func_or_kernel=(<cupy.core.raw.RawKernel object at 0x7f4fc7b82c40>, <function rms_pyfunc at 0x7f4fc8e43820>), ksize=4, mode='mirror', shape=(4, 5)}]
FAILED tests/cupyx_tests/scipy_tests/ndimage_tests/test_filters.py::TestGenericFilter::test_filter[_param_324_{dtype=float64, filter='generic_filter', footprint=False, func_or_kernel=(<cupy.core._reduction.ReductionKernel object at...7b407d0>, <function lt_pyfunc at 0x7f4fc7b76160>), ksize=3, mode='mirror', shape=(4, 5)}]
FAILED tests/cupyx_tests/scipy_tests/ndimage_tests/test_filters.py::TestGenericFilter::test_filter[_param_326_{dtype=float64, filter='generic_filter', footprint=False, func_or_kernel=(<cupy.core._reduction.ReductionKernel object at...7b407d0>, <function lt_pyfunc at 0x7f4fc7b76160>), ksize=4, mode='mirror', shape=(4, 5)}]
FAILED tests/cupyx_tests/scipy_tests/ndimage_tests/test_filters.py::TestGenericFilter::test_filter[_param_484_{dtype=uint8, filter='generic_filter', footprint=True, func_or_kernel=(<cupy.core.raw.RawKernel object at 0x7f4fc7b82c40>, <function rms_pyfunc at 0x7f4fc8e43820>), ksize=3, mode='mirror', shape=(4, 5)}]
FAILED tests/cupyx_tests/scipy_tests/ndimage_tests/test_filters.py::TestGenericFilter::test_filter[_param_486_{dtype=uint8, filter='generic_filter', footprint=True, func_or_kernel=(<cupy.core.raw.RawKernel object at 0x7f4fc7b82c40>, <function rms_pyfunc at 0x7f4fc8e43820>), ksize=4, mode='mirror', shape=(4, 5)}]
FAILED tests/cupyx_tests/scipy_tests/ndimage_tests/test_filters.py::TestGenericFilter::test_filter[_param_488_{dtype=float64, filter='generic_filter', footprint=True, func_or_kernel=(<cupy.core.raw.RawKernel object at 0x7f4fc7b82c40>, <function rms_pyfunc at 0x7f4fc8e43820>), ksize=3, mode='mirror', shape=(4, 5)}]
FAILED tests/cupyx_tests/scipy_tests/ndimage_tests/test_filters.py::TestGenericFilter::test_filter[_param_490_{dtype=float64, filter='generic_filter', footprint=True, func_or_kernel=(<cupy.core.raw.RawKernel object at 0x7f4fc7b82c40>, <function rms_pyfunc at 0x7f4fc8e43820>), ksize=4, mode='mirror', shape=(4, 5)}]
FAILED tests/cupyx_tests/scipy_tests/ndimage_tests/test_filters.py::TestGenericFilter::test_filter[_param_652_{dtype=float64, filter='generic_filter', footprint=True, func_or_kernel=(<cupy.core._reduction.ReductionKernel object at...7b407d0>, <function lt_pyfunc at 0x7f4fc7b76160>), ksize=3, mode='mirror', shape=(4, 5)}]
FAILED tests/cupyx_tests/scipy_tests/ndimage_tests/test_filters.py::TestGenericFilter::test_filter[_param_654_{dtype=float64, filter='generic_filter', footprint=True, func_or_kernel=(<cupy.core._reduction.ReductionKernel object at...7b407d0>, <function lt_pyfunc at 0x7f4fc7b76160>), ksize=4, mode='mirror', shape=(4, 5)}]
FAILED tests/cupyx_tests/scipy_tests/ndimage_tests/test_measurements.py::TestMeasurementsSelect::test_measurements_select[_param_70_{enable_cub=True, index=1, labels=50, op='extrema', shape=(512,)}]
FAILED tests/cupyx_tests/scipy_tests/signal_tests/test_signaltools.py::TestFFTConvolve_param_44_{mode='valid', size1=(3, 4, 10), size2=3}::test_convolve_fft
= 180 failed, 63505 passed, 7182 skipped, 58 deselected, 517 xfailed, 272 warnings in 24997.11s (6:56:37) =
