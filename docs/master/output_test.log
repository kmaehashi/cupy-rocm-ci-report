master: 5296326 Merge pull request #5444 from asi1024/fix-jit-win
============================= test session starts ==============================
platform linux -- Python 3.8.7, pytest-6.2.2, py-1.10.0, pluggy-0.13.1
rootdir: /home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.hXnTrEAC7u/cupy, configfile: setup.cfg
plugins: html-3.1.1, metadata-1.11.0
collected 72666 items / 71 deselected / 12 skipped / 72583 selected

tests/cupy_tests/test_cublas.py ........................................ [  0%]
........................................................................ [  0%]
........................................................................ [  0%]
........................................................................ [  0%]
........................................................................ [  0%]
........................................................................ [  0%]
........................................................................ [  0%]
........................................................................ [  0%]
........................................................................ [  0%]
........................................................................ [  0%]
........................................................................ [  1%]
........................................................................ [  1%]
........................................................................ [  1%]
........................................................................ [  1%]
........................................................................ [  1%]
........................................................................ [  1%]
........................................................................ [  1%]
........................................................................ [  1%]
........................................................................ [  1%]
........................................................................ [  1%]
........................................................................ [  2%]
........................................................................ [  2%]
........................................................................ [  2%]
........................................................................ [  2%]
........................................................................ [  2%]
........................................................................ [  2%]
........................................................................ [  2%]
........................................................................ [  2%]
........................................................................ [  2%]
........................................................................ [  2%]
........................................................................ [  3%]
........................................................................ [  3%]
........................................................................ [  3%]
...........................x...........x.............................x.. [  3%]
.........x..........                                                     [  3%]
tests/cupy_tests/test_cudnn.py sssssssssssssssssssssssssssssssssssssssss [  3%]
ssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssss [  3%]
ssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssss [  3%]
ssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssss [  3%]
ssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssss [  3%]
ssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssss [  3%]
ssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssss [  4%]
ssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssss [  4%]
ssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssss [  4%]
ssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssss [  4%]
ssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssss [  4%]
ssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssss [  4%]
ssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssss [  4%]
ssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssss [  4%]
ssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssss [  4%]
ssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssss [  4%]
ssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssss [  4%]
ssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssss [  5%]
ssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssss [  5%]
ssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssss [  5%]
ssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssss [  5%]
ssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssss [  5%]
ssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssss [  5%]
ssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssss [  5%]
ssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssss [  5%]
sssssssssssssssssssssssssssssssssssssssssssssssssssssss                  [  5%]
tests/cupy_tests/test_cusolver.py ssssssssssssssssssssssssssssssssssssss [  5%]
ssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssss [  6%]
ssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssss [  6%]
ssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssss [  6%]
ssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssss [  6%]
ssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssss [  6%]
ssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssss [  6%]
ssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssss [  6%]
ssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssss [  6%]
ssssssssssssssssssssssssssssssssss                                       [  6%]
tests/cupy_tests/test_cutensor.py ssssssssssssssssssssssssssssssssssssss [  6%]
sssssssssssssssssssssssssssssssssssss                                    [  6%]
tests/cupy_tests/test_init.py ..s........                                [  6%]
tests/cupy_tests/test_ndim.py ............                               [  6%]
tests/cupy_tests/test_numpy_interop.py ..x......                         [  6%]
tests/cupy_tests/test_type_routines.py ................................. [  6%]
.                                                                        [  6%]
tests/cupy_tests/binary_tests/test_elementwise.py ......                 [  6%]
tests/cupy_tests/binary_tests/test_packing.py ...                        [  6%]
tests/cupy_tests/core_tests/test_array_function.py .....                 [  6%]
tests/cupy_tests/core_tests/test_carray.py .....                         [  6%]
tests/cupy_tests/core_tests/test_core.py ......                          [  6%]
tests/cupy_tests/core_tests/test_cub_reduction.py ...................... [  7%]
...                                                                      [  7%]
tests/cupy_tests/core_tests/test_dlpack.py .F...                         [  7%]
tests/cupy_tests/core_tests/test_elementwise.py ...............          [  7%]
tests/cupy_tests/core_tests/test_flags.py .............................  [  7%]
tests/cupy_tests/core_tests/test_function.py .....                       [  7%]
tests/cupy_tests/core_tests/test_gufuncs.py ............................ [  7%]
................................                                         [  7%]
tests/cupy_tests/core_tests/test_internal.py ........................... [  7%]
...............................................................          [  7%]
tests/cupy_tests/core_tests/test_iter.py ............                    [  7%]
tests/cupy_tests/core_tests/test_ndarray.py ..........................ss [  7%]
ssss.................................................................... [  7%]
......................F...sss...............                             [  7%]
tests/cupy_tests/core_tests/test_ndarray_adv_indexing.py ............... [  7%]
........................................................................ [  7%]
........................................................................ [  7%]
........................................................................ [  7%]
.............................................                            [  7%]
tests/cupy_tests/core_tests/test_ndarray_complex_ops.py ................ [  7%]
.....                                                                    [  7%]
tests/cupy_tests/core_tests/test_ndarray_contiguity.py .                 [  7%]
tests/cupy_tests/core_tests/test_ndarray_conversion.py .......xx..       [  7%]
tests/cupy_tests/core_tests/test_ndarray_copy_and_view.py .............. [  7%]
........................sssssss                                          [  8%]
tests/cupy_tests/core_tests/test_ndarray_cuda_array_interface.py sssssss [  8%]
sssssssssssssssssssssssssssssssssssssssssssssssss                        [  8%]
tests/cupy_tests/core_tests/test_ndarray_elementwise_op.py ............. [  8%]
........................................................................ [  8%]
.................................................................        [  8%]
tests/cupy_tests/core_tests/test_ndarray_get.py ............             [  8%]
tests/cupy_tests/core_tests/test_ndarray_indexing.py xxxx..........x...x [  8%]
........x..........x.............................                        [  8%]
tests/cupy_tests/core_tests/test_ndarray_math.py ......................s [  8%]
sssssssssss                                                              [  8%]
tests/cupy_tests/core_tests/test_ndarray_owndata.py ...                  [  8%]
tests/cupy_tests/core_tests/test_ndarray_reduction.py .................. [  8%]
........................................................................ [  8%]
........................................................................ [  8%]
................................                                         [  8%]
tests/cupy_tests/core_tests/test_ndarray_scatter.py .................... [  8%]
........................................................................ [  8%]
...............................................................          [  8%]
tests/cupy_tests/core_tests/test_ndarray_ufunc.py .......                [  8%]
tests/cupy_tests/core_tests/test_ndarray_unary_op.py .......F..........s [  8%]
...                                                                      [  8%]
tests/cupy_tests/core_tests/test_raw.py .ss.........sss..s.s.s........ss [  9%]
.........sss..s.s.s........ss.........sss..s.s.s......ssssssssssssssssss [  9%]
ssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssss.s [  9%]
s.......sssss....s.s......sssssssssssssssssssssssssssss                  [  9%]
tests/cupy_tests/core_tests/test_reduction.py .......................    [  9%]
tests/cupy_tests/core_tests/test_scan.py ....                            [  9%]
tests/cupy_tests/core_tests/test_syncdetect.py ....                      [  9%]
tests/cupy_tests/core_tests/test_userkernel.py ....sss.............      [  9%]
tests/cupy_tests/core_tests/fusion_tests/test_array.py ................. [  9%]
........................................................................ [  9%]
....................................................                     [  9%]
tests/cupy_tests/core_tests/fusion_tests/test_indexing.py .............. [  9%]
.................s                                                       [  9%]
tests/cupy_tests/core_tests/fusion_tests/test_kernel_cache.py ....       [  9%]
tests/cupy_tests/core_tests/fusion_tests/test_misc.py .......s.......... [  9%]
........                                                                 [  9%]
tests/cupy_tests/core_tests/fusion_tests/test_optimization.py .......... [  9%]
....                                                                     [  9%]
tests/cupy_tests/core_tests/fusion_tests/test_reduction.py ............. [  9%]
........................................................................ [  9%]
.........................................................s.s.s.s.s.s.s.s [  9%]
.s.ssssssssssssssssss.sss                                                [  9%]
tests/cupy_tests/core_tests/fusion_tests/test_routines.py .............. [  9%]
........................................................................ [ 10%]
..............                                                           [ 10%]
tests/cupy_tests/core_tests/fusion_tests/test_ufunc.py ................. [ 10%]
......................................................                   [ 10%]
tests/cupy_tests/creation_tests/test_basic.py .......................... [ 10%]
...........................................................s............ [ 10%]
....s.                                                                   [ 10%]
tests/cupy_tests/creation_tests/test_from_data.py ssssssssssssssssssssss [ 10%]
sssssssssssssssssssssssssssssssssssssssssssssssssssssssssss............. [ 10%]
...................................................................      [ 10%]
tests/cupy_tests/creation_tests/test_matrix.py ......................... [ 10%]
.................................                                        [ 10%]
tests/cupy_tests/creation_tests/test_ranges.py ......................... [ 10%]
..............................................................           [ 10%]
tests/cupy_tests/cuda_tests/test_compiler.py sssssss........             [ 10%]
tests/cupy_tests/cuda_tests/test_cublas.py .                             [ 10%]
tests/cupy_tests/cuda_tests/test_cudnn.py s                              [ 10%]
tests/cupy_tests/cuda_tests/test_cufft.py ssssssssssssssss.              [ 10%]
tests/cupy_tests/cuda_tests/test_curand.py .....                         [ 10%]
tests/cupy_tests/cuda_tests/test_cusolver.py .                           [ 10%]
tests/cupy_tests/cuda_tests/test_cusparse.py .                           [ 10%]
tests/cupy_tests/cuda_tests/test_cutensor.py s                           [ 10%]
tests/cupy_tests/cuda_tests/test_device.py .............x..              [ 10%]
tests/cupy_tests/cuda_tests/test_driver.py ss.                           [ 10%]
tests/cupy_tests/cuda_tests/test_memory.py ....ssssssss................. [ 10%]
.ssssssssss......s.............................................sssssssss [ 10%]
ssssssssssss                                                             [ 10%]
tests/cupy_tests/cuda_tests/test_memory_hook.py .                        [ 10%]
tests/cupy_tests/cuda_tests/test_nccl.py ........                        [ 10%]
tests/cupy_tests/cuda_tests/test_nvrtc.py .                              [ 10%]
tests/cupy_tests/cuda_tests/test_nvtx.py ....                            [ 10%]
tests/cupy_tests/cuda_tests/test_pinned_memory.py ............           [ 10%]
tests/cupy_tests/cuda_tests/test_profile.py ..                           [ 10%]
tests/cupy_tests/cuda_tests/test_runtime.py .                            [ 10%]
tests/cupy_tests/cuda_tests/test_stream.py ..s..s......ssssssssssss.s    [ 11%]
tests/cupy_tests/cuda_tests/memory_hooks_tests/test_debug_print.py .     [ 11%]
tests/cupy_tests/cuda_tests/memory_hooks_tests/test_line_profile.py ..   [ 11%]
tests/cupy_tests/fft_tests/test_cache.py ..sss.....s..                   [ 11%]
tests/cupy_tests/fft_tests/test_callback.py ssssssssssssssssssssssssssss [ 11%]
ssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssss [ 11%]
ssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssss [ 11%]
ssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssss [ 11%]
ssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssss [ 11%]
ssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssss [ 11%]
ssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssss [ 11%]
ssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssss [ 11%]
ssssssssssssssssssssssssssssssssssssssssssssssssssss                     [ 11%]
tests/cupy_tests/fft_tests/test_fft.py ....ssss....ssss........ssss....s [ 11%]
sss........ssss....ssss........ssss....ssss........ssss....ssss........s [ 11%]
sss....ssss........ssss....ssss........ssss....ssss........ssss....ssss. [ 12%]
.......ssss....ssss....................................................s [ 12%]
ssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssss [ 12%]
sssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssss. [ 12%]
.s.s..s.s..s.s..s.s..s.s..s.s..s.s..s.s..s.s..s.s..s.s..s.s..s.s..s.s..s [ 12%]
.s..s.s..s.s..s.s..s.s..s.s..s.s..s.s..s.s..s.s..s.s..s.s..s.s..s.s..s.s [ 12%]
..s.s..s.s..s.s..s.s..s.s..s.s..s.s..s.s..s.s..s.s..s.s..s.s..s.s..s.s.. [ 12%]
s.s..s.s..s.s..s.s..s.s..s.s..s.s..s.s..s.s..s.s..s.s..s.s..s.s..s.s..s. [ 12%]
s..s.s..s.s..s.s..s.s..s.s..s.s..s.s..s.s..s.s..s.s..s.s..s.s..s.s..s.s. [ 12%]
.s.s..s.s..s.s..s.s..s.s..s.s..s.s..s.s..s.s..s.s..s.s..s.s..s.s..s.s..s [ 12%]
.s..s.s..s.s..s.s..s.s..s.s..s.s..s.s..s.s.s.s.s.s.s.s.s.s.s.s.s.s.s.s.s [ 13%]
.s.s.sssss.s.s.s.s.s.s.s.s.s.s.s.s.s.s.s.s.s.s.s.s.s.s.s.s.s.s.s.s.s.s.s [ 13%]
.sssss.s.s.s.s.s.s.s.s.s.s.s.s.s.s.s.s.s.s.s.s.s.s.s.s.s.s.s.s.s.s.s.sss [ 13%]
ss.s.s.s.s.s.s.s.s.s.s.s.s.s.s.s.s.s.s.s.s.s.s.s.s.s.s.s.s.s.s.s.s.s.s.s [ 13%]
.sssssssssssssssssssssssssssssssssssssssssssssssssssssssssssss.s.s..s.s. [ 13%]
.s.s..s.s..s.s..s.s..s.s..s.s..s.s..s.s..s.s..s.s..s.s..s.s..s.s..s.s..s [ 13%]
.s..s.s..s.s..s.s..s.s..s.s..s.s..s.s...ss..ss....ss..ss....ss..ss....ss [ 13%]
..ss....ss..ss....ss..ss....ss..ss....ss..ss...s.s.s.s.s.s.s.s.s.s.s.s.s [ 13%]
.s.s.s.s.s.s.s.s.s.s.s.s.s..s.s..s.s..s.s..s.s..s.s..s.s..s.s..s.s..s.s. [ 13%]
.s.s..s.s..s.s..s.s..s.s..s.s..s.s..s.s..s.s..s.s..s.s..s.s..s.s..s.s..s [ 13%]
.s..s.s..s.s..s.s..s.s..s.s..s.s..s.s......s.s..s.s..s.s..s.s..s.s..s.s. [ 14%]
.s.s..s.s..s.s..s.s..s.s..s.s..s.s..s.s..s.s..s.s..s.s..s.s..s.s..s.s..s [ 14%]
.s..s.s..s.s..s.s..s.s..s.s..s.s..s.s..s.s..s.s..s.s..s.s..s.s..s.s..s.s [ 14%]
..s.s..s.s..s.s..s.s..s.s..s.s..s.s.sssss.s.s..s.s.sssssssssssssssssssss [ 14%]
ssssssssssssssssssssssssssssssssssssssssssss.s.s..s.s..s.s..s.s..s.s..s. [ 14%]
s..s.s..s.s..s.s..s.s..s.s..s.s..s.s..s.s..s.s..s.s..s.s..s.s..s.s..s.s. [ 14%]
.s.s..s.s..s.s..s.s..s.s..s.s.......ss..ss....ss..ss....ss..ss....ss..ss [ 14%]
....ss..ss....ss..ss....ss..ss....ss..ss........................         [ 14%]
tests/cupy_tests/functional_tests/test_piecewise.py .............        [ 14%]
tests/cupy_tests/functional_tests/test_vectorize.py .................... [ 14%]
.................................F                                       [ 14%]
tests/cupy_tests/indexing_tests/test_generate.py .......F............... [ 14%]
...............                                                          [ 14%]
tests/cupy_tests/indexing_tests/test_indexing.py ....................... [ 14%]
.........................                                                [ 14%]
tests/cupy_tests/indexing_tests/test_insert.py ......................... [ 15%]
........................................................................ [ 15%]
........................................................................ [ 15%]
.........................................................                [ 15%]
tests/cupy_tests/indexing_tests/test_iterate.py ........................ [ 15%]
...............................................                          [ 15%]
tests/cupy_tests/io_tests/test_base_n.py ............................    [ 15%]
tests/cupy_tests/io_tests/test_formatting.py ..                          [ 15%]
tests/cupy_tests/io_tests/test_npz.py .......                            [ 15%]
tests/cupy_tests/lib_tests/test_polynomial.py .......ss.......ssssssssss [ 15%]
sssssss........ssssssssssssssssssssssssssssssssssssxxxxxxxxxxxxxxxxxxxx. [ 15%]
..ssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssss [ 15%]
ssssssssssssssssssssssssss......xxxxxxxxxxxxxxxxxxxxxxxx................ [ 15%]
........................................................................ [ 15%]
........xxxxxxxx........xxxxxxxx........................................ [ 15%]
...........xxxxxx............................x.......................... [ 16%]
..                                                                       [ 16%]
tests/cupy_tests/lib_tests/test_shape_base.py ......................     [ 16%]
tests/cupy_tests/lib_tests/test_strided_tricks.py ..                     [ 16%]
tests/cupy_tests/linalg_tests/test_decomposition.py .................... [ 16%]
.......................                                                  [ 16%]
tests/cupy_tests/linalg_tests/test_eigenvalue.py xxxxxxxx                [ 16%]
tests/cupy_tests/linalg_tests/test_einsum.py ........................... [ 16%]
........................................................................ [ 16%]
........................................................................ [ 16%]
........................................................................ [ 16%]
........................................................................ [ 16%]
........................................................................ [ 16%]
........................................................................ [ 16%]
........................................................................ [ 16%]
........................................................................ [ 17%]
........................................................................ [ 17%]
........................................................................ [ 17%]
..........                                                               [ 17%]
tests/cupy_tests/linalg_tests/test_norms.py ............................ [ 17%]
........................................................................ [ 17%]
........................................................................ [ 17%]
.................................................................        [ 17%]
tests/cupy_tests/linalg_tests/test_product.py .......................... [ 17%]
........................................................................ [ 17%]
........................................................................ [ 17%]
..........................................                               [ 17%]
tests/cupy_tests/linalg_tests/test_solve.py ............................ [ 17%]
                                                                         [ 17%]
tests/cupy_tests/logic_tests/test_comparison.py ........................ [ 17%]
.....                                                                    [ 17%]
tests/cupy_tests/logic_tests/test_content.py ...                         [ 17%]
tests/cupy_tests/logic_tests/test_ops.py ....                            [ 17%]
tests/cupy_tests/logic_tests/test_truth.py ............................. [ 17%]
........................................................................ [ 18%]
........................................................................ [ 18%]
........................................................................ [ 18%]
........................................................................ [ 18%]
........................................................................ [ 18%]
........................................................................ [ 18%]
........................................................................ [ 18%]
........................................................................ [ 18%]
........................................................................ [ 18%]
...........................................                              [ 18%]
tests/cupy_tests/logic_tests/test_type_test.py ......................... [ 18%]
.......                                                                  [ 18%]
tests/cupy_tests/manipulation_tests/test_add_remove.py ................. [ 18%]
.........................                                                [ 19%]
tests/cupy_tests/manipulation_tests/test_basic.py ...................... [ 19%]
.......................................................                  [ 19%]
tests/cupy_tests/manipulation_tests/test_dims.py .....x.x............... [ 19%]
................................................                         [ 19%]
tests/cupy_tests/manipulation_tests/test_join.py ....................... [ 19%]
...........................                                              [ 19%]
tests/cupy_tests/manipulation_tests/test_kind.py ...........             [ 19%]
tests/cupy_tests/manipulation_tests/test_rearrange.py .................. [ 19%]
.......................................................                  [ 19%]
tests/cupy_tests/manipulation_tests/test_shape.py ...................... [ 19%]
....................................                                     [ 19%]
tests/cupy_tests/manipulation_tests/test_split.py ..................     [ 19%]
tests/cupy_tests/manipulation_tests/test_tiling.py ..................... [ 19%]
...........                                                              [ 19%]
tests/cupy_tests/manipulation_tests/test_transpose.py .................. [ 19%]
..........                                                               [ 19%]
tests/cupy_tests/math_tests/test_arithmetic.py ......................... [ 19%]
........................................................................ [ 19%]
........................................................................ [ 19%]
........................................................................ [ 19%]
........................................................................ [ 20%]
........................................................................ [ 20%]
........................................................................ [ 20%]
........................................................................ [ 20%]
........................................................................ [ 20%]
........................................................................ [ 20%]
........................................................................ [ 20%]
........................................................................ [ 20%]
........................................................................ [ 20%]
........................................................................ [ 20%]
........................................................................ [ 21%]
........................................................................ [ 21%]
........................................................................ [ 21%]
........................................................................ [ 21%]
........................................................................ [ 21%]
........................................................................ [ 21%]
........................................................................ [ 21%]
........................................................................ [ 21%]
........................................................................ [ 21%]
........................................................................ [ 21%]
........................................................................ [ 22%]
........................................................................ [ 22%]
........................................................................ [ 22%]
........................................................................ [ 22%]
........................................................................ [ 22%]
........................................................................ [ 22%]
........................................................................ [ 22%]
........................................................................ [ 22%]
........................................................................ [ 22%]
........................................................................ [ 22%]
........................................................................ [ 22%]
........................................................................ [ 23%]
........................................................................ [ 23%]
........................................................................ [ 23%]
........................................................................ [ 23%]
........................................................................ [ 23%]
........................................................................ [ 23%]
........................................................................ [ 23%]
........................................................................ [ 23%]
........................................................................ [ 23%]
........................................................................ [ 23%]
........................................................................ [ 24%]
........................................................................ [ 24%]
........................................................................ [ 24%]
........................................................................ [ 24%]
........................................................................ [ 24%]
........................................................................ [ 24%]
........................................................................ [ 24%]
........................................................................ [ 24%]
........................................................................ [ 24%]
........................................................................ [ 24%]
........................................................................ [ 25%]
........................................................................ [ 25%]
........................................................................ [ 25%]
........................................................................ [ 25%]
........................................................................ [ 25%]
........................................................................ [ 25%]
........................................................................ [ 25%]
........................................................................ [ 25%]
........................................................................ [ 25%]
........................................................................ [ 25%]
........................................................................ [ 26%]
........................................................................ [ 26%]
........................................................................ [ 26%]
........................................................................ [ 26%]
........................................................................ [ 26%]
........................................................................ [ 26%]
........................................................................ [ 26%]
........................................................................ [ 26%]
........................................................................ [ 26%]
........................................................................ [ 26%]
........................................................................ [ 27%]
........................................................................ [ 27%]
........................................................................ [ 27%]
........................................................................ [ 27%]
........................................................................ [ 27%]
........................................................................ [ 27%]
........................................................................ [ 27%]
........................................................................ [ 27%]
........................................................................ [ 27%]
........................................................................ [ 27%]
........................................................................ [ 28%]
........................................................................ [ 28%]
........................................................................ [ 28%]
........................................................................ [ 28%]
........................................................................ [ 28%]
........................................................................ [ 28%]
........................................................................ [ 28%]
........................................................................ [ 28%]
........................................................................ [ 28%]
........................................................................ [ 28%]
........................................................................ [ 29%]
........................................................................ [ 29%]
........................................................................ [ 29%]
........................................................................ [ 29%]
........................................................................ [ 29%]
........................................................................ [ 29%]
........................................................................ [ 29%]
........................................................................ [ 29%]
........................................................................ [ 29%]
........................................................................ [ 29%]
........................................................................ [ 30%]
........................................................................ [ 30%]
........................................................................ [ 30%]
........................................................................ [ 30%]
........................................................................ [ 30%]
........................................................................ [ 30%]
........................................................................ [ 30%]
........................................................................ [ 30%]
...........................                                              [ 30%]
tests/cupy_tests/math_tests/test_explog.py .........                     [ 30%]
tests/cupy_tests/math_tests/test_floating.py .......                     [ 30%]
tests/cupy_tests/math_tests/test_hyperbolic.py ......                    [ 30%]
tests/cupy_tests/math_tests/test_matmul.py ............................. [ 30%]
........................................................................ [ 30%]
........................................................................ [ 31%]
........................................................................ [ 31%]
................................................                         [ 31%]
tests/cupy_tests/math_tests/test_misc.py ............................... [ 31%]
............................................F..F..F..................... [ 31%]
..............................                                           [ 31%]
tests/cupy_tests/math_tests/test_rational.py ....                        [ 31%]
tests/cupy_tests/math_tests/test_rounding.py ........................... [ 31%]
..........................................                               [ 31%]
tests/cupy_tests/math_tests/test_special.py ...                          [ 31%]
tests/cupy_tests/math_tests/test_sumprod.py ............................ [ 31%]
....................................................ssssssssssssssss.... [ 31%]
........................................................................ [ 31%]
........................................................................ [ 31%]
........................................................................ [ 31%]
........................................................................ [ 32%]
........................................................................ [ 32%]
........................................................................ [ 32%]
........................................................................ [ 32%]
........................................................................ [ 32%]
..............................................................           [ 32%]
tests/cupy_tests/math_tests/test_trigonometric.py ..........sssssssss    [ 32%]
tests/cupy_tests/math_tests/test_window.py ............................. [ 32%]
.....                                                                    [ 32%]
tests/cupy_tests/misc_tests/test_memory_ranges.py ................       [ 32%]
tests/cupy_tests/misc_tests/test_who.py ......                           [ 32%]
tests/cupy_tests/padding_tests/test_pad.py ............................. [ 32%]
..............................................                           [ 32%]
tests/cupy_tests/polynomial_tests/test_polynomial.py ................... [ 32%]
                                                                         [ 32%]
tests/cupy_tests/polynomial_tests/test_polyutils.py .................... [ 32%]
................                                                         [ 32%]
tests/cupy_tests/prof_tests/test_range.py ........                       [ 32%]
tests/cupy_tests/random_tests/test_bit_generator.py ssssssssssss         [ 32%]
tests/cupy_tests/random_tests/test_distributions.py .................... [ 32%]
........................................................................ [ 32%]
................................................x.x.x.x.x.x.x.x.x.x.x.x. [ 33%]
x.x.x.x.x.x.x.x.x.x.x.x.x.x.x.x.x.x.x.x.x.x.x.x......................... [ 33%]
........................................................................ [ 33%]
........................................................................ [ 33%]
........................................................................ [ 33%]
........................................................................ [ 33%]
........................................................................ [ 33%]
........................................................................ [ 33%]
........................................................................ [ 33%]
........................................................................ [ 33%]
........................................................................ [ 34%]
........................................................................ [ 34%]
......................................................................x. [ 34%]
x.x.x.x.x............................x.x.x.x.x.x........................ [ 34%]
........................................................................ [ 34%]
.........................................F.F.                            [ 34%]
tests/cupy_tests/random_tests/test_generator.py ........................ [ 34%]
........................................................................ [ 34%]
........................................................................ [ 34%]
.........................s.s............................................ [ 34%]
...............................x...............................          [ 34%]
tests/cupy_tests/random_tests/test_generator_api.py ssssssssssssssssssss [ 34%]
ssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssss       [ 35%]
tests/cupy_tests/random_tests/test_init.py .                             [ 35%]
tests/cupy_tests/random_tests/test_permutations.py ...x...x............. [ 35%]
........................................................................ [ 35%]
........................................................................ [ 35%]
.............                                                            [ 35%]
tests/cupy_tests/random_tests/test_random.py .                           [ 35%]
tests/cupy_tests/random_tests/test_sample.py ...............x........x.. [ 35%]
............                                                             [ 35%]
tests/cupy_tests/sorting_tests/test_count.py ....                        [ 35%]
tests/cupy_tests/sorting_tests/test_search.py ssssssss........ssssssss.. [ 35%]
........................................................................ [ 35%]
........................................................................ [ 35%]
....................................................................     [ 35%]
tests/cupy_tests/sorting_tests/test_sort.py ............................ [ 35%]
........................................................................ [ 35%]
..........................................................x...........   [ 35%]
tests/cupy_tests/statistics_tests/test_correlation.py .................. [ 35%]
..............................F..F.xF...................                 [ 36%]
tests/cupy_tests/statistics_tests/test_histogram.py .................... [ 36%]
........................................................................ [ 36%]
........................................................................ [ 36%]
........................................................................ [ 36%]
........................................................................ [ 36%]
........................................................                 [ 36%]
tests/cupy_tests/statistics_tests/test_meanvar.py ...................... [ 36%]
........................................................................ [ 36%]
........................................................................ [ 36%]
......                                                                   [ 36%]
tests/cupy_tests/statistics_tests/test_order.py sssss................... [ 36%]
.........................                                                [ 36%]
tests/cupy_tests/testing_tests/test_array.py ........................... [ 36%]
...............................................                          [ 36%]
tests/cupy_tests/testing_tests/test_condition.py ................        [ 36%]
tests/cupy_tests/testing_tests/test_helper.py .......................... [ 36%]
........................................................................ [ 37%]
.....sssss..sssssss..ssxxxxxxxx................x..x.................     [ 37%]
tests/cupy_tests/testing_tests/test_parameterized.py ............s.s.s.s [ 37%]
....ssss......                                                           [ 37%]
tests/cupyx_tests/test_cupyx.py ..                                       [ 37%]
tests/cupyx_tests/test_lapack.py .s.s.s.s.....s.s.s.s.....s.s.s.s.....s. [ 37%]
s.s.s.............sssssssssssss                                          [ 37%]
tests/cupyx_tests/test_optimize.py sssssssss                             [ 37%]
tests/cupyx_tests/test_pinned_array.py ................................. [ 37%]
.......................................                                  [ 37%]
tests/cupyx_tests/test_rsqrt.py .                                        [ 37%]
tests/cupyx_tests/test_runtime.py s.                                     [ 37%]
tests/cupyx_tests/test_scatter.py F..                                    [ 37%]
tests/cupyx_tests/test_time.py .........                                 [ 37%]
tests/cupyx_tests/fallback_mode_tests/test_fallback.py ................. [ 37%]
........................................................................ [ 37%]
.........                                                                [ 37%]
tests/cupyx_tests/fallback_mode_tests/test_notifications.py .........    [ 37%]
tests/cupyx_tests/jit_tests/test_raw.py ................................ [ 37%]
......                                                                   [ 37%]
tests/cupyx_tests/linalg_tests/test_solve.py xxxxxxxxxxxxxxxx....ssss    [ 37%]
tests/cupyx_tests/scipy_tests/test_get_array_module.py ..                [ 37%]
tests/cupyx_tests/scipy_tests/fft_tests/test_fft.py .................... [ 37%]
........................................................................ [ 37%]
........................................................................ [ 37%]
........................................................................ [ 37%]
........................................................................ [ 38%]
........................................................................ [ 38%]
........................................................................ [ 38%]
........................................................................ [ 38%]
........................................................................ [ 38%]
........................................................................ [ 38%]
........................................................................ [ 38%]
........................................................................ [ 38%]
........................................................................ [ 38%]
........................................................................ [ 38%]
........................................................................ [ 39%]
........................................................................ [ 39%]
........................................................................ [ 39%]
........................................................................ [ 39%]
........................................................................ [ 39%]
........................................................................ [ 39%]
........................................................................ [ 39%]
........................................................................ [ 39%]
........................................................................ [ 39%]
........................................................................ [ 39%]
........................................................................ [ 40%]
........................................................................ [ 40%]
........................................................................ [ 40%]
........................................................................ [ 40%]
........................................................................ [ 40%]
........................................................................ [ 40%]
........................................................................ [ 40%]
........................................................................ [ 40%]
........................................................................ [ 40%]
........................................................................ [ 40%]
........................................................................ [ 41%]
........................................................................ [ 41%]
........................................................................ [ 41%]
........................................................................ [ 41%]
........................................................................ [ 41%]
........................................................................ [ 41%]
........................................................................ [ 41%]
........................................................................ [ 41%]
........................................................................ [ 41%]
........................................................................ [ 41%]
........................................................................ [ 42%]
........................................................................ [ 42%]
........................................................................ [ 42%]
........................................................................ [ 42%]
........................................................................ [ 42%]
........................................................................ [ 42%]
........................................................................ [ 42%]
........................................................................ [ 42%]
........................................................................ [ 42%]
........................................................................ [ 42%]
........................................................................ [ 43%]
........................................................................ [ 43%]
........................................................................ [ 43%]
........................................................................ [ 43%]
........................................................................ [ 43%]
........................................................................ [ 43%]
........................................................................ [ 43%]
........................................................................ [ 43%]
........................................................................ [ 43%]
........................................................................ [ 43%]
........................................................................ [ 44%]
........................................................................ [ 44%]
........................................................................ [ 44%]
........................................................................ [ 44%]
........................................................................ [ 44%]
........................................................................ [ 44%]
........................................................................ [ 44%]
........................................................................ [ 44%]
........................................................................ [ 44%]
........................................................................ [ 44%]
........................................................................ [ 45%]
........................................................................ [ 45%]
........................................................................ [ 45%]
........................................................................ [ 45%]
........................................................................ [ 45%]
........................................................................ [ 45%]
........................................................................ [ 45%]
........................................................................ [ 45%]
........................................................................ [ 45%]
........................................................................ [ 45%]
........................................................................ [ 46%]
........................................................................ [ 46%]
........................................................................ [ 46%]
........................................................................ [ 46%]
........................................................................ [ 46%]
........................................................................ [ 46%]
........................................................................ [ 46%]
........................................................................ [ 46%]
........................................................................ [ 46%]
........................................................................ [ 46%]
........................................................................ [ 47%]
........................................................................ [ 47%]
........................................................................ [ 47%]
........................................................................ [ 47%]
........................................................................ [ 47%]
........................................................................ [ 47%]
........................................................................ [ 47%]
........................................................................ [ 47%]
........................................................................ [ 47%]
........................................................................ [ 47%]
.................sss.........sss.........sss.........sss.........sss.... [ 48%]
.....sss.........sss.........sss.........sss.........sss.........sss.... [ 48%]
.....sss.........sss.........sss.........sss.........sss.........sss.... [ 48%]
.....sss.........sss.........sss.........sss.........sss.........sss.... [ 48%]
.....sss.........sss.........sss.........sss.........sss.........sss.... [ 48%]
.....sss.........sss.........sss.........sss.........sss.........sss.... [ 48%]
.....sss.........sss.........sss.........sss.........sss.........sss.... [ 48%]
.....sss.........sss.........sss.........sss.........sss.........sss.... [ 48%]
.....sss.........sss.........sss.........sss.........sss.........sss.... [ 48%]
.....sss.........sss.........sss.........sss.........sss.........sss.... [ 48%]
.....sss.........sss.........sss.........sss.........sss.........sss.... [ 49%]
.....sss.........sss.........sss.........sss.........sss.........sss.... [ 49%]
.....sss.........sss.........sss.........sss.........sss.........sss.... [ 49%]
.....sss.........sss.........sss.........sss.........sss.........sss.... [ 49%]
.....sss.........sss.........sss.........sss.........sss.........sss.... [ 49%]
.....sss.........sss.........sss.........sss.........sss.........sss.... [ 49%]
.....sss.........sss.........sss.........sss.........sss.........sss.... [ 49%]
.....sss.........sss.........sss.........sss.........sss.........sss.... [ 49%]
.....sss.........sss.........sss.........sss.........sss.........sss.... [ 49%]
.....sss.........sss.........sss.........sss.........sss.........sss.... [ 49%]
.....sss.........sss.........sss.........sss.........sss.........sss.... [ 49%]
.....sss.........sss.........sss.........sss.........sss.........sss.... [ 50%]
.....sss.........sss.........sss.........sss.........sss.........sss.... [ 50%]
.....sss.........sss.........sss........................................ [ 50%]
........................................................................ [ 50%]
........................................................................ [ 50%]
........................................................................ [ 50%]
........................................................................ [ 50%]
........................................................................ [ 50%]
........................................................................ [ 50%]
........................................................................ [ 50%]
........................................................................ [ 51%]
........................................................................ [ 51%]
........................................................................ [ 51%]
........................................................................ [ 51%]
........................................................................ [ 51%]
......................................................................   [ 51%]
tests/cupyx_tests/scipy_tests/fft_tests/test_helper.py .                 [ 51%]
tests/cupyx_tests/scipy_tests/fftpack_tests/test_fftpack.py ............ [ 51%]
........................................................................ [ 51%]
........................................................................ [ 51%]
........................................................................ [ 51%]
........................................................................ [ 51%]
........................................................................ [ 52%]
........................................................................ [ 52%]
........................................................................ [ 52%]
........................................................................ [ 52%]
........................................................................ [ 52%]
........................................................................ [ 52%]
........................................................................ [ 52%]
........................................................................ [ 52%]
.........................                                                [ 52%]
tests/cupyx_tests/scipy_tests/linalg_tests/test_decomp_lu.py ........... [ 52%]
.................................................FF                      [ 52%]
tests/cupyx_tests/scipy_tests/linalg_tests/test_solve_triangular.py .... [ 52%]
........................................................................ [ 53%]
........................................................................ [ 53%]
........................................................................ [ 53%]
....................................................................     [ 53%]
tests/cupyx_tests/scipy_tests/linalg_tests/test_special_matrices.py .... [ 53%]
........................................................................ [ 53%]
.................................................                        [ 53%]
tests/cupyx_tests/scipy_tests/ndimage_tests/test_filters.py ...sss...... [ 53%]
sss......sss......sss......sss......sss.........sss......sss......sss... [ 53%]
...sss......sss......sss................................................ [ 53%]
...........................................................sss......sss. [ 53%]
.....sss......sss......sss......sss.........sss......sss......sss......s [ 53%]
ss......sss......sss.................................................... [ 53%]
.......................................................sss......sss..... [ 54%]
.sss......sss......sss......sss.........sss......sss......sss......sss.. [ 54%]
....sss......sss........................................................ [ 54%]
...................................................sss......sss......sss [ 54%]
......sss......sss......sss.........sss......sss......sss......sss...... [ 54%]
sss......sss............................................................ [ 54%]
...............................................sss......sss......sss.... [ 54%]
..sss......sss......sss.........sss......sss......sss......sss......sss. [ 54%]
.....sss................................................................ [ 54%]
...........................................sss......sss......sss......ss [ 54%]
s......sss......sss.........sss......sss......sss......sss......sss..... [ 55%]
.sss.................................................................... [ 55%]
.......................................sss......sss......sss......sss... [ 55%]
...sss......sss.........sss......sss......sss......sss......sss......sss [ 55%]
........................................................................ [ 55%]
...................................sss......sss......sss......sss......s [ 55%]
ss......sss.........sss......sss......sss......sss......sss......sss.... [ 55%]
........................................................................ [ 55%]
...............................sss......sss......sss......sss......sss.. [ 55%]
....sss.........sss......sss......sss......sss......sss......sss........ [ 55%]
........................................................................ [ 56%]
...........................sss......sss......sss......sss......sss...... [ 56%]
sss.........sss......sss......sss......sss......sss......sss............ [ 56%]
........................................................................ [ 56%]
.......................sss......sss......sss......sss......sss......sss. [ 56%]
........sss......sss......sss......sss......sss......sss................ [ 56%]
........................................................................ [ 56%]
...................sss......sss......sss......sss......sss......sss..... [ 56%]
....sss......sss......sss......sss......sss......sss.................... [ 56%]
........................................................................ [ 56%]
...............sss......sss......sss......sss......sss......sss......... [ 57%]
sss......sss......sss......sss......sss......sss........................ [ 57%]
........................................................................ [ 57%]
...........sss......sss......sss......sss......sss......sss.........sss. [ 57%]
.....sss......sss......sss......sss......sss............................ [ 57%]
........................................................................ [ 57%]
xxx....sss......sss......sss......sss......sss......sss....x..x.sss.x..x [ 57%]
.sss.x..x.sss......sss......sss......sss................................ [ 57%]
.....................................................x..x.............x. [ 57%]
......................................x.....x....x.....x......x.....x... [ 57%]
........................................................................ [ 58%]
........................................................................ [ 58%]
........................................................................ [ 58%]
........................................................................ [ 58%]
........................................................................ [ 58%]
........................................................................ [ 58%]
........................................................................ [ 58%]
........................................................................ [ 58%]
........................................................................ [ 58%]
........................................................................ [ 58%]
........................................................................ [ 59%]
........................................................................ [ 59%]
........................................................................ [ 59%]
........................................................................ [ 59%]
........................................................................ [ 59%]
........................................................................ [ 59%]
........................................................................ [ 59%]
........................................................................ [ 59%]
........................................................................ [ 59%]
........................................................................ [ 59%]
........................................................................ [ 60%]
........................................................................ [ 60%]
........................................................................ [ 60%]
........................................................................ [ 60%]
........................................................................ [ 60%]
........................................................................ [ 60%]
........................s.s.s.s.s.s.s.s.s.s.s.s.s.s.s.s.s.s............. [ 60%]
........................................................................ [ 60%]
.........................s.s.s.s.s.s.s.s.s.s.s.s.s.s.s.s.s.ss.s.s.s.s.s. [ 60%]
s.s.s.s.s.s.s.s.s.s.s.s................................................. [ 60%]
.............................................................s.s.s.s.s.s [ 61%]
.s.s.s.s.s.s.s.s.s.s.s.ss.s.s.s.s.s.s.s.s.s.s.s.s.s.s.s.s.s............. [ 61%]
........................................................................ [ 61%]
.........................s.s.s.s.s.s.s.s.s.s.s.s.s.s.s.s.s.ss.s.s.s.s.s. [ 61%]
s.s.s.s.s.s.s.s.s.s.s.s................................................. [ 61%]
.............................................................s.s.s.s.s.s [ 61%]
.s.s.s.s.s.s.s.s.s.s.s.ss.s.s.s.s.s.s.s.s.s.s.s.s.s.s.s.s.s............. [ 61%]
........................................................................ [ 61%]
.........................s.s.s.s.s.s.s.s.s.s.s.s.s.s.s.s.s.ss.s.s.s.s.s. [ 61%]
s.s.s.s.s.s.s.s.s.s.s.s................................................. [ 61%]
.............................................................s.s.s.s.s.s [ 62%]
.s.s.s.s.s.s.s.s.s.s.s.ss.s.s.s.s.s.s.s.s.s.s.s.s.s.s.s.s.s............. [ 62%]
........................................................................ [ 62%]
.........................s.s.s.s.s.s.s.s.s.s.s.s.s.s.s.s.s.ss.s.s.s.s.s. [ 62%]
s.s.s.s.s.s.s.s.s.s.s.s................................................. [ 62%]
.............................................................s.s.s.s.s.s [ 62%]
.s.s.s.s.s.s.s.s.s.s.s.ssss..sss..sss............sss..sss..sss.......... [ 62%]
..sss..sss..sss............sss..sss..sss............sss..sss..sss....... [ 62%]
.....sss..sss..sss............sss..sss..sss............sss..sss..sss.... [ 62%]
........sss..sss..sss............sss..sss..sss............sss..sss..sss. [ 62%]
...........sss..sss..sss................................................ [ 63%]
........................................................................ [ 63%]
....................................                                     [ 63%]
tests/cupyx_tests/scipy_tests/ndimage_tests/test_fourier.py ............ [ 63%]
........................................................................ [ 63%]
........................................................................ [ 63%]
........................................................................ [ 63%]
........................................................................ [ 63%]
........................................................................ [ 63%]
........................................................................ [ 63%]
........................................................................ [ 63%]
........................................                                 [ 63%]
tests/cupyx_tests/scipy_tests/ndimage_tests/test_interpolation.py ...... [ 63%]
........................................................................ [ 64%]
........................................................................ [ 64%]
........................................................................ [ 64%]
........................................................................ [ 64%]
........................................................................ [ 64%]
........................................................................ [ 64%]
........................................................................ [ 64%]
........................................................................ [ 64%]
........................................................................ [ 64%]
........................................................................ [ 64%]
........................................................................ [ 65%]
........................................................................ [ 65%]
........................................................................ [ 65%]
........................................................................ [ 65%]
........................................................................ [ 65%]
........................................................................ [ 65%]
........................................................................ [ 65%]
................FF...................................................... [ 65%]
........................................................................ [ 65%]
........................................................................ [ 65%]
........................................................................ [ 66%]
........................................................................ [ 66%]
........................................................................ [ 66%]
........................................................................ [ 66%]
........................................................................ [ 66%]
........................................................................ [ 66%]
........................................................................ [ 66%]
........................................................................ [ 66%]
........................................................................ [ 66%]
........................................................................ [ 66%]
........................................................................ [ 67%]
........................................................................ [ 67%]
........................................................................ [ 67%]
........................................................................ [ 67%]
........................................................................ [ 67%]
........................................................................ [ 67%]
........................................................................ [ 67%]
........................................................................ [ 67%]
........................................................................ [ 67%]
........................................................................ [ 67%]
........................................................................ [ 68%]
........................................................................ [ 68%]
........................................................................ [ 68%]
........................................................................ [ 68%]
........................................................................ [ 68%]
........................................................................ [ 68%]
........................................................................ [ 68%]
........................................................................ [ 68%]
........................................................................ [ 68%]
........................................................................ [ 68%]
........................................................................ [ 68%]
........................................................................ [ 69%]
........................................................................ [ 69%]
........................................................................ [ 69%]
........................................................................ [ 69%]
........................................................................ [ 69%]
........................................................................ [ 69%]
........................................................................ [ 69%]
........................................................................ [ 69%]
........................................................................ [ 69%]
........................................................................ [ 69%]
........................................................................ [ 70%]
........................................................................ [ 70%]
........................................................................ [ 70%]
........................................................................ [ 70%]
........................................................................ [ 70%]
........................................................................ [ 70%]
........................................................................ [ 70%]
........................................................................ [ 70%]
........................................................................ [ 70%]
........................................................................ [ 70%]
........................................................................ [ 71%]
........................................................................ [ 71%]
........................................................................ [ 71%]
........................................................................ [ 71%]
........................................................................ [ 71%]
........................................................................ [ 71%]
........................................................................ [ 71%]
........................................................................ [ 71%]
........................................................................ [ 71%]
........................................................................ [ 71%]
........................................................................ [ 72%]
........................................................................ [ 72%]
........................................................................ [ 72%]
........................................................................ [ 72%]
........................................................................ [ 72%]
........................................................................ [ 72%]
........................................................................ [ 72%]
........................................................................ [ 72%]
........................................................................ [ 72%]
........................................................................ [ 72%]
........................................................................ [ 73%]
........................................................................ [ 73%]
........................................................................ [ 73%]
........................................................................ [ 73%]
........................................................................ [ 73%]
........................................................................ [ 73%]
........................................................................ [ 73%]
........................................................................ [ 73%]
........................................................................ [ 73%]
........................................................................ [ 73%]
........................................................................ [ 74%]
........................................................................ [ 74%]
........................................................................ [ 74%]
........................................................................ [ 74%]
........................................................................ [ 74%]
........................................................................ [ 74%]
........................................................................ [ 74%]
........................................................................ [ 74%]
........................................................................ [ 74%]
........................................................................ [ 74%]
........................................................................ [ 75%]
........................................................................ [ 75%]
...............................x...x.x...x.x...x.x...x.............x...x [ 75%]
.x...x.x...x.x...x.............x...x.x...x.x...x.x...x.............x...x [ 75%]
.x...x.x...x.x...x.............x...x.x...x.x...x.x...x.............x...x [ 75%]
.x...x.x...x.x...x.............x...x.x...x.x...x.x...x.............x...x [ 75%]
.x...x.x...x.x...x.............x...x.x...x.x...x.x...x.............x...x [ 75%]
.x...x.x...x.x...x.............x...x.x...x.x...x.x...x.............x...x [ 75%]
.x...x.x...x.x...x.............x...x.x...x.x...x.x...x.............x...x [ 75%]
.x...x.x...x.x...x.............x...x.x...x.x...x.x...x.............x...x [ 75%]
.x...x.x...x.x...x.............x...x.x...x.x...x.x...x.............x...x [ 76%]
.x...x.x...x.x...x.............x...x.x...x.x...x.x...x.............x...x [ 76%]
.x...x.x...x.x...x.............x...x.x...x.x...x.x...x.............x...x [ 76%]
.x...x.x...x.x...x.............x...x.x...x.x...x.x...x.............x...x [ 76%]
.x...x.x...x.x...x.............x...x.x...x.x...x.x...x.............x...x [ 76%]
.x...x.x...x.x...x.............x...x.x...x.x...x.x...x.............x...x [ 76%]
.x...x.x...x.x...x.............x...x.x...x.x...x.x...x.............x...x [ 76%]
.x...x.x...x.x...x.............x...x.x...x.x...x.x...x.............x...x [ 76%]
.x...x.x...x.x...x...................................................... [ 76%]
........................................................................ [ 76%]
........................................................................ [ 77%]
........................................................................ [ 77%]
........................................................................ [ 77%]
........................................................................ [ 77%]
........................................................................ [ 77%]
........................................................................ [ 77%]
........................................................................ [ 77%]
........................................................................ [ 77%]
........................................................................ [ 77%]
........................................................................ [ 77%]
........................................................................ [ 78%]
........................................................................ [ 78%]
........................................................................ [ 78%]
........................................................................ [ 78%]
......................FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF [ 78%]
FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFssssssssssssssssFFFFFFFFFFFFFFFFFFFFFFFFFF [ 78%]
FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFssssssssssssssssFF [ 78%]
FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF [ 78%]
FFFFFFssssssssssssssssFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF [ 78%]
FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFsssssssssssssssss......................... [ 78%]
........................................................................ [ 79%]
........................................................................ [ 79%]
........................................................................ [ 79%]
..................................................x.....x.....x.....x... [ 79%]
..x.....x.....x.....x.....x.....x.....x.....x.......x........x..x..x.... [ 79%]
....s................................................................... [ 79%]
........................................................................ [ 79%]
........................................................................ [ 79%]
........................................................................ [ 79%]
........................................................................ [ 79%]
........................................................................ [ 80%]
........................................................................ [ 80%]
........................................................................ [ 80%]
........................................................................ [ 80%]
........................................................................ [ 80%]
................................x.....x....................x.....x...... [ 80%]
..............x.....x....................x.....x....................x... [ 80%]
..x....................x.....x....................x.....x............... [ 80%]
.....x.....x............................................................ [ 80%]
........................................................................ [ 80%]
........................................................................ [ 81%]
.................................................................s...... [ 81%]
........................................................................ [ 81%]
........................................................................ [ 81%]
........................................................................ [ 81%]
......................................FF..........FF....FF.............. [ 81%]
........FF....FF..........FF....FF......................FFss............ [ 81%]
........................................................................ [ 81%]
........................................................................ [ 81%]
........................................................................ [ 81%]
........................................................................ [ 81%]
........................................................................ [ 82%]
........................................................................ [ 82%]
........................................................................ [ 82%]
........................................................................ [ 82%]
........................................................................ [ 82%]
........................................................................ [ 82%]
....................................ssssssssssssssssssssssssssssssssssss [ 82%]
ssssssssssss                                                             [ 82%]
tests/cupyx_tests/scipy_tests/ndimage_tests/test_measurements.py ....... [ 82%]
........................................................................ [ 82%]
........................................................................ [ 82%]
........................................................................ [ 83%]
........................................................................ [ 83%]
........................................................................ [ 83%]
........................................................................ [ 83%]
........................................................................ [ 83%]
........................................................................ [ 83%]
........................................................................ [ 83%]
........................................................................ [ 83%]
........................................................................ [ 83%]
........................................................................ [ 83%]
........................................................................ [ 84%]
........................................................................ [ 84%]
........................................................................ [ 84%]
........................................................................ [ 84%]
........................................................................ [ 84%]
........................................................................ [ 84%]
........................................................................ [ 84%]
........................................................................ [ 84%]
........................................................................ [ 84%]
........................................................................ [ 84%]
........................................................................ [ 84%]
........................................................................ [ 85%]
........................................................................ [ 85%]
........................................................................ [ 85%]
........................................................................ [ 85%]
........................................................................ [ 85%]
........................................................................ [ 85%]
........................................................................ [ 85%]
........................................................................ [ 85%]
........................................................................ [ 85%]
........................................................................ [ 85%]
........................................................................ [ 86%]
........................................................................ [ 86%]
........................................................................ [ 86%]
........................................................................ [ 86%]
...................xx..........xx..........xx..........xx..........xx... [ 86%]
...................xx..................................xx............... [ 86%]
...................xx..........xx..........xx..........xx..........xx... [ 86%]
...................xx..................................xx............... [ 86%]
........................................................................ [ 86%]
........................................................................ [ 86%]
.................                                                        [ 87%]
tests/cupyx_tests/scipy_tests/ndimage_tests/test_morphology.py ......... [ 87%]
......................s....s....s..s....s....s.......................... [ 87%]
..........s....s....s..s....s....s....................................s. [ 87%]
...s....s..s....s....s....................................s....s....s..s [ 87%]
....s....s....................................s....s....s..s....s....s.. [ 87%]
..................................s....s....s..s....s....s.............. [ 87%]
......................s....s....s..s....s....s.......................... [ 87%]
..........s....s....s..s....s....s....................................s. [ 87%]
...s....s..s....s....s....................................s....s....s..s [ 87%]
....s....s....................................s....s....s..s....s....s.. [ 87%]
..................................s....s....s..s....s....s.............. [ 88%]
......................s....s....s..s....s....s.......................... [ 88%]
..........s....s....s..s....s....s....................................s. [ 88%]
...s....s..s....s....s....................................s....s....s..s [ 88%]
....s....s....................................s....s....s..s....s....s.. [ 88%]
..................................s....s....s..s....s....s.............. [ 88%]
......................s....s....s..s....s....s.......................... [ 88%]
..........s....s....s..s....s....s....................................s. [ 88%]
...s....s..s....s....s....................................s....s....s..s [ 88%]
....s....s....................................s....s....s..s....s....s.. [ 88%]
..................................s....s....s..s....s....s.............. [ 88%]
........................................................................ [ 89%]
........................................................................ [ 89%]
........................................................................ [ 89%]
........................................................................ [ 89%]
........................................................................ [ 89%]
........................................................................ [ 89%]
........................................................................ [ 89%]
.......................................................................s [ 89%]
.s.s.............s.s.s.............s.s.s.............s.s.s.............s [ 89%]
.s.s.............s.s.s.............s.s.s.............s.s.s.............s [ 89%]
.s.s.............s.s.s.............s.s.s.............s.s.s.............s [ 90%]
.s.s.............s.s.s.............s.s.s.............s.s.s.............s [ 90%]
.s.s.............s.s.s.............s.s.s.............s.s.s.............s [ 90%]
.s.s.............s.s.s.............s.s.s.............s.s.s.............s [ 90%]
.s.s.............s.s.s.............s.s.s.............s.s.s.............s [ 90%]
.s.s.............s.s.s.............s.s.s.............s.s.s.............s [ 90%]
.s.s.............s.s.s.............s.s.s.............s.s.s.............s [ 90%]
.s.s.............s.s.s.............s.s.s.............s.s.s.............s [ 90%]
.s.s.............s.s.s.............s.s.s.............s.s.s.............s [ 90%]
.s.s.............s.s.s.............s.s.s.............s.s.s.............s [ 90%]
.s.s.............s.s.s.............s.s.s.............s.s.s.............s [ 91%]
.s.s.............s.s.s.............s.s.s.............s.s.s.............s [ 91%]
.s.s.............s.s.s.............s.s.s.............s.s.s.............s [ 91%]
.s.s.............s.s.s.............s.s.s.............s.s.s.............s [ 91%]
.s.s.............s.s.s.............s.s.s.............s.s.s.............s [ 91%]
.s.s.............s.s.s.............s.s.s.............s.s.s.............s [ 91%]
.s.s.............s.s.s.............s.s.s.............s.s.s.............s [ 91%]
.s.s.............s.s.s.............s.s.s.............s.s.s.............s [ 91%]
.s.s.............s.s.s.............s.s.s.............s.s.s.............s [ 91%]
.s.s.............s.s.s.............s.s.s.............s.s.s.............s [ 91%]
.s.s.............s.s.s.............s.s.s.............s.s.s.............s [ 92%]
.s.s.............s.s.s.............s.s.s.............s.s.s.............s [ 92%]
.s.s.............s.s.s.............s.s.s.............s.s.s.............s [ 92%]
.s.s.............s.s.s.............s.s.s.............s.s.s.............s [ 92%]
.s.s.............s.s.s.............s.s.s.............s.s.s.............s [ 92%]
.s.s.............s.s.s.............s.s.s.............s.s.s.............s [ 92%]
.s.s.............s.s.s.............s.s.s.............s.s.s.............s [ 92%]
.s.s.............s.s.s.............s.s.s.............s.s.s.............s [ 92%]
.s.s.............s.s.s.............s.s.s.............s.s.s.............s [ 92%]
.s.s.............s.s.s.............s.s.s.............s.s.s.............s [ 92%]
.s.s.............s.s.s.............s.s.s.............s.s.s.............s [ 93%]
.s.s.............s.s.s.............s.s.s.............s.s.s.............s [ 93%]
.s.s.............s.s.s.............s.s.s.............s.s.s.............s [ 93%]
.s.s.............s.s.s.............s.s.s.............s.s.s.............. [ 93%]
........................................................................ [ 93%]
......s....s....s....s....s....s....s....s....s....s....s....s......s... [ 93%]
.s....s....s....s....s....s....s....s....s....s....s.................... [ 93%]
..........................................s....s....s....s....s....s.... [ 93%]
s....s....s....s....s....s......s....s....s....s....s....s....s....s.... [ 93%]
s....s....s....s........................................................ [ 93%]
......s....s....s....s....s....s....s....s....s....s....s....s......s... [ 94%]
.s....s....s....s....s....s....s....s....s....s....s.................... [ 94%]
..........................................s....s....s....s....s....s.... [ 94%]
s....s....s....s....s....s......s....s....s....s....s....s....s....s.... [ 94%]
s....s....s....s........................................................ [ 94%]
......s....s....s....s....s....s....s....s....s....s....s....s......s... [ 94%]
.s....s....s....s....s....s....s....s....s....s....s.................... [ 94%]
..........................................s....s....s....s....s....s.... [ 94%]
s....s....s....s....s....s......s....s....s....s....s....s....s....s.... [ 94%]
s....s....s....s........................................................ [ 94%]
......s....s....s....s....s....s....s....s....s....s....s....s......s... [ 95%]
.s....s....s....s....s....s....s....s....s....s....s.................... [ 95%]
..........................................s....s....s....s....s....s.... [ 95%]
s....s....s....s....s....s......s....s....s....s....s....s....s....s.... [ 95%]
s....s....s....s........................................................ [ 95%]
......s....s....s....s....s....s....s....s....s....s....s....s......s... [ 95%]
.s....s....s....s....s....s....s....s....s....s....s.................... [ 95%]
..........................................s....s....s....s....s....s.... [ 95%]
s....s....s....s....s....s......s....s....s....s....s....s....s....s.... [ 95%]
s....s....s....s........................................................ [ 95%]
......s....s....s....s....s....s....s....s....s....s....s....s......s... [ 96%]
.s....s....s....s....s....s....s....s....s....s....s.................... [ 96%]
..........................................s....s....s....s....s....s.... [ 96%]
s....s....s....s....s....s......s....s....s....s....s....s....s....s.... [ 96%]
s....s....s....s........................................................ [ 96%]
........................................................................ [ 96%]
........................................................................ [ 96%]
........................................................................ [ 96%]
........................................................ssssssss........ [ 96%]
........................................................ssssssss........ [ 96%]
........................................................ssssssss........ [ 97%]
........................................................ssssssss........ [ 97%]
........................................................................ [ 97%]
........................................................................ [ 97%]
........................................................................ [ 97%]
........................................................................ [ 97%]
........................................................................ [ 97%]
........................................................................ [ 97%]
........................................................................ [ 97%]
........................................................................ [ 97%]
........................................................................ [ 98%]
........................................................................ [ 98%]
........................................................................ [ 98%]
........................................................................ [ 98%]
........................................................................ [ 98%]
........................................................................ [ 98%]
                                                                         [ 98%]
tests/cupyx_tests/scipy_tests/signal_tests/test_bsplines.py ............ [ 98%]
                                                                         [ 98%]
tests/cupyx_tests/scipy_tests/signal_tests/test_signaltools.py ......... [ 98%]
........................................................................ [ 98%]
......................................................xxxxxxxxx......... [ 98%]
...........................xxxxxxxxxxxx................................. [ 98%]
...FFF......xxx..x.x..x.x..x.x..x.x..x.x..x.x..x.x..x.x..x.x..x.x..x.x.. [ 98%]
x.x..................................................................... [ 99%]
........................................................................ [ 99%]
........................................................................ [ 99%]
........................................................................ [ 99%]
........................................................................ [ 99%]
..................ssssssssssssssssss                                     [ 99%]
tests/cupyx_tests/scipy_tests/sparse_tests/csgraph_tests/test_traversal.py s [ 99%]
ssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssss [ 99%]
sssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssss  [ 99%]
tests/cupyx_tests/scipy_tests/special_tests/test_bessel.py ............  [ 99%]
tests/cupyx_tests/scipy_tests/special_tests/test_convex_analysis.py .... [ 99%]
.                                                                        [ 99%]
tests/cupyx_tests/scipy_tests/special_tests/test_digamma.py .....        [ 99%]
tests/cupyx_tests/scipy_tests/special_tests/test_erf.py ............     [ 99%]
tests/cupyx_tests/scipy_tests/special_tests/test_gamma.py ....           [ 99%]
tests/cupyx_tests/scipy_tests/special_tests/test_gammaln.py ....         [ 99%]
tests/cupyx_tests/scipy_tests/special_tests/test_polygamma.py ....       [ 99%]
tests/cupyx_tests/scipy_tests/special_tests/test_statistics.py ..        [ 99%]
tests/cupyx_tests/scipy_tests/special_tests/test_zeta.py ....            [ 99%]
tests/cupyx_tests/scipy_tests/stats_tests/test_distributions.py ........ [ 99%]
........................................................................ [ 99%]
........................................................................ [ 99%]
                                                                         [ 99%]
tests/cupyx_tests/tools_tests/test_install_library.py ......             [ 99%]
tests/example_tests/test_custom_struct.py FFF                            [ 99%]
tests/example_tests/test_finance.py ...                                  [ 99%]
tests/example_tests/test_gemm.py .                                       [ 99%]
tests/example_tests/test_gmm.py ss                                       [ 99%]
tests/example_tests/test_kmeans.py sss                                   [ 99%]
tests/install_tests/test_build.py sx.                                    [ 99%]
tests/install_tests/test_utils.py ..                                     [100%]

=================================== FAILURES ===================================
___________________ TestNewDLPackConversion.test_conversion ____________________

self = <cupy_tests.core_tests.test_dlpack.TestNewDLPackConversion testMethod=test_conversion>
dtype = <class 'numpy.float64'>

    @testing.for_all_dtypes(no_bool=True)
    def test_conversion(self, dtype):
        allowed_streams = ['null', True]
        if not cuda.runtime.is_hip:
            allowed_streams.append('ptds')
    
        # stream order is automatically established via DLPack protocol
        for src in allowed_streams:
            src_s = self._get_stream(src)
            for dst in allowed_streams:
                dst_s = self._get_stream(dst)
                with src_s:
                    orig_array = _gen_array(dtype)
                with dst_s:
                    out_array = cupy.from_dlpack(orig_array)
>                   testing.assert_array_equal(orig_array, out_array)

tests/cupy_tests/core_tests/test_dlpack.py:64: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

x = array([[0.30962023, 0.28425717, 0.98626963],
       [0.26941604, 0.33554279, 0.94245242]])
y = array([[0.30962023, 0.28425717, 0.98626963],
       [0.26941604, 0.33554279, 0.94245242]])
err_msg = '', verbose = True, strides_check = False

    def assert_array_equal(x, y, err_msg='', verbose=True, strides_check=False):
        """Raises an AssertionError if two array_like objects are not equal.
    
        Args:
             x(numpy.ndarray or cupy.ndarray): The actual object to check.
             y(numpy.ndarray or cupy.ndarray): The desired, expected object.
             strides_check(bool): If ``True``, consistency of strides is also
                 checked.
             err_msg(str): The error message to be printed in case of failure.
             verbose(bool): If ``True``, the conflicting values
                 are appended to the error message.
    
        .. seealso:: :func:`numpy.testing.assert_array_equal`
        """
>       numpy.testing.assert_array_equal(
            cupy.asnumpy(x), cupy.asnumpy(y), err_msg=err_msg,
            verbose=verbose)
E       AssertionError: 
E       Arrays are not equal
E       
E       Mismatched elements: 6 / 6 (100%)
E       Max absolute difference: 0.98627146
E       Max relative difference: 1.0000068
E        x: array([[-1.832551e-06, -1.832551e-06, -1.832551e-06],
E              [-1.832551e-06, -1.832551e-06, -1.832551e-06]])
E        y: array([[0.30962 , 0.284257, 0.98627 ],
E              [0.269416, 0.335543, 0.942452]])

cupy/testing/_array.py:91: AssertionError
----------------------------- Captured stdout call -----------------------------
dtype is <class 'numpy.float64'>
______________ TestNdarrayCopy.test_copy_multi_device_with_stream ______________

self = <cupy_tests.core_tests.test_ndarray.TestNdarrayCopy testMethod=test_copy_multi_device_with_stream>

    @testing.multi_gpu(2)
    def test_copy_multi_device_with_stream(self):
        # Kernel that takes long enough then finally writes values.
        kern = cupy.RawKernel(
            _test_copy_multi_device_with_stream_src, 'wait_and_write')
    
        # Allocates a memory and launches the kernel on a device with its
        # stream.
        with cuda.Device(0):
            # Keep this stream alive over the D2D copy below for HIP
            with cuda.Stream() as s1:  # NOQA
                a = cupy.zeros((2,), dtype=numpy.uint64)
                kern((1,), (1,), a)
    
        # D2D copy to another device with another stream should get the
        # original values of the memory before the kernel on the first device
        # finally makes the write.
        with cuda.Device(1):
            with cuda.Stream():
                b = a.copy()
>               testing.assert_array_equal(
                    b, numpy.array([0, 0], dtype=numpy.uint64))

tests/cupy_tests/core_tests/test_ndarray.py:218: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

x = array([13744632839234567870, 13744632839234567870], dtype=uint64)
y = array([0, 0], dtype=uint64), err_msg = '', verbose = True
strides_check = False

    def assert_array_equal(x, y, err_msg='', verbose=True, strides_check=False):
        """Raises an AssertionError if two array_like objects are not equal.
    
        Args:
             x(numpy.ndarray or cupy.ndarray): The actual object to check.
             y(numpy.ndarray or cupy.ndarray): The desired, expected object.
             strides_check(bool): If ``True``, consistency of strides is also
                 checked.
             err_msg(str): The error message to be printed in case of failure.
             verbose(bool): If ``True``, the conflicting values
                 are appended to the error message.
    
        .. seealso:: :func:`numpy.testing.assert_array_equal`
        """
>       numpy.testing.assert_array_equal(
            cupy.asnumpy(x), cupy.asnumpy(y), err_msg=err_msg,
            verbose=verbose)
E       AssertionError: 
E       Arrays are not equal
E       
E       Mismatched elements: 2 / 2 (100%)
E       Max absolute difference: 13744632839234567870
E       Max relative difference: inf
E        x: array([13744632839234567870, 13744632839234567870], dtype=uint64)
E        y: array([0, 0], dtype=uint64)

cupy/testing/_array.py:91: AssertionError
____________________ TestArrayBoolOp.test_bool_one_element _____________________
[XPASS(strict)] ROCm/HIP may have a bug
_________________ TestVectorize.test_vectorize_arithmetic_ops __________________
cupy/testing/_helper.py:825: in test_func
    impl(self, *args, **kw)
cupy/testing/_helper.py:343: in test_func
    check_func(cupy_r, numpy_r)
cupy/testing/_helper.py:495: in check_func
    _array.assert_allclose(c, n, rtol1, atol1, err_msg, verbose)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

actual = array([[1.7425e+02, 3.3875e+02, 8.4141e+00, 6.7062e+01, 3.7906e+01,
        2.3109e+01, 6.8164e+00, 3.0906e+01, 6.3047...+02, 2.8734e+01, 4.3031e+01,
        3.3750e+00, 3.6906e+01, 1.7362e+02, 1.3227e+01, 3.0547e+00]],
      dtype=float16)
desired = array([[1.7425e+02, 3.3875e+02, 8.4141e+00, 6.7062e+01, 3.7906e+01,
        2.3109e+01, 6.8164e+00, 3.0906e+01, 6.3047...+02, 2.8734e+01, 4.3031e+01,
        3.3750e+00, 3.6906e+01, 1.7362e+02, 1.3227e+01, 3.0547e+00]],
      dtype=float16)
rtol = 1e-05, atol = 0, err_msg = '', verbose = True

    def assert_allclose(actual, desired, rtol=1e-7, atol=0, err_msg='',
                        verbose=True):
        """Raises an AssertionError if objects are not equal up to desired tolerance.
    
        Args:
             actual(numpy.ndarray or cupy.ndarray): The actual object to check.
             desired(numpy.ndarray or cupy.ndarray): The desired, expected object.
             rtol(float): Relative tolerance.
             atol(float): Absolute tolerance.
             err_msg(str): The error message to be printed in case of failure.
             verbose(bool): If ``True``, the conflicting
                 values are appended to the error message.
    
        .. seealso:: :func:`numpy.testing.assert_allclose`
    
        """  # NOQA
>       numpy.testing.assert_allclose(
            cupy.asnumpy(actual), cupy.asnumpy(desired),
            rtol=rtol, atol=atol, err_msg=err_msg, verbose=verbose)
E       AssertionError: 
E       Not equal to tolerance rtol=1e-05, atol=0
E       
E       Mismatched elements: 1 / 600 (0.167%)
E       Max absolute difference: 0.5
E       Max relative difference: 0.000664
E        x: array([[1.7425e+02, 3.3875e+02, 8.4141e+00, 6.7062e+01, 3.7906e+01,
E               2.3109e+01, 6.8164e+00, 3.0906e+01, 6.3047e+00, 1.6650e+02,
E               5.6094e+00, 9.8900e+02, 2.4281e+01, 4.8500e+02, 1.0359e+01,...
E        y: array([[1.7425e+02, 3.3875e+02, 8.4141e+00, 6.7062e+01, 3.7906e+01,
E               2.3109e+01, 6.8164e+00, 3.0906e+01, 6.3047e+00, 1.6650e+02,
E               5.6094e+00, 9.8900e+02, 2.4281e+01, 4.8500e+02, 1.0359e+01,...

cupy/testing/_array.py:24: AssertionError
----------------------------- Captured stdout call -----------------------------
dtype is <class 'numpy.float16'>
___________________________ TestIX_.test_ix_ndarray ____________________________
[XPASS(strict)] HIP may have a bug
_________ TestConvolve_param_0_{mode='valid'}.test_convolve_diff_types _________
[XPASS(strict)] HIP/ROCm may have a bug with larger `b`
_________ TestConvolve_param_1_{mode='same'}.test_convolve_diff_types __________
[XPASS(strict)] HIP/ROCm may have a bug with larger `b`
_________ TestConvolve_param_2_{mode='full'}.test_convolve_diff_types __________
[XPASS(strict)] HIP/ROCm may have a bug with larger `b`
___________ TestDistributionsPoissonInvalid.test_none_lam_generator ____________

self = <cupy_tests.random_tests.test_distributions.TestDistributionsPoissonInvalid testMethod=test_none_lam_generator>

    def test_none_lam_generator(self):
        with self.assertRaises(TypeError):
>           cupy.random.default_rng(0).poisson(None)

tests/cupy_tests/random_tests/test_distributions.py:565: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

    def default_rng(seed=None):  # NOQA  avoid redefinition of seed
        """Construct a new Generator with the default BitGenerator (XORWOW).
    
        Args:
            seed (None, int, array_like[ints], numpy.random.SeedSequence, cupy.random.BitGenerator, cupy.random.Generator, optional):
                A seed to initialize the :class:`cupy.random.BitGenerator`. If an
                ``int`` or ``array_like[ints]`` or None is passed, then it will be
                passed to :class:`numpy.random.SeedSequence` to detive the initial
                :class:`BitGenerator` state. One may also pass in a `SeedSequence
                instance. Adiditionally, when passed :class:`BitGenerator`, it will
                be wrapped by :class:`Generator`. If passed a :class:`Generator`,
                it will be returned unaltered.
    
        Returns:
            Generator: The initialized generator object.
        """  # NOQA, list of types need to be in one line for sphinx
        if runtime.is_hip:
>           raise RuntimeError('Generator API not supported in HIP,'
                               ' please use the legacy one.')
E           RuntimeError: Generator API not supported in HIP, please use the legacy one.

cupy/random/__init__.py:36: RuntimeError
_______ TestDistributionsStandardGammaInvalid.test_none_shape_generator ________

self = <cupy_tests.random_tests.test_distributions.TestDistributionsStandardGammaInvalid testMethod=test_none_shape_generator>

    def test_none_shape_generator(self):
        with self.assertRaises(TypeError):
>           cupy.random.default_rng(0).standard_gamma(None)

tests/cupy_tests/random_tests/test_distributions.py:682: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

    def default_rng(seed=None):  # NOQA  avoid redefinition of seed
        """Construct a new Generator with the default BitGenerator (XORWOW).
    
        Args:
            seed (None, int, array_like[ints], numpy.random.SeedSequence, cupy.random.BitGenerator, cupy.random.Generator, optional):
                A seed to initialize the :class:`cupy.random.BitGenerator`. If an
                ``int`` or ``array_like[ints]`` or None is passed, then it will be
                passed to :class:`numpy.random.SeedSequence` to detive the initial
                :class:`BitGenerator` state. One may also pass in a `SeedSequence
                instance. Adiditionally, when passed :class:`BitGenerator`, it will
                be wrapped by :class:`Generator`. If passed a :class:`Generator`,
                it will be returned unaltered.
    
        Returns:
            Generator: The initialized generator object.
        """  # NOQA, list of types need to be in one line for sphinx
        if runtime.is_hip:
>           raise RuntimeError('Generator API not supported in HIP,'
                               ' please use the legacy one.')
E           RuntimeError: Generator API not supported in HIP, please use the legacy one.

cupy/random/__init__.py:36: RuntimeError
________ TestCorrelate_param_0_{mode='valid'}.test_correlate_diff_types ________
[XPASS(strict)] ROCm/HIP may have a bug
________ TestCorrelate_param_1_{mode='full'}.test_correlate_diff_types _________
[XPASS(strict)] ROCm/HIP may have a bug
________ TestCorrelate_param_2_{mode='same'}.test_correlate_diff_types _________
[XPASS(strict)] ROCm/HIP may have a bug
_________________________ TestScatter.test_scatter_add _________________________

self = <cupyx_tests.test_scatter.TestScatter testMethod=test_scatter_add>
dtype = <class 'numpy.float16'>

    @testing.for_dtypes('iILQefd')
    def test_scatter_add(self, dtype):
        a = cupy.zeros((3,), dtype=dtype)
        i = cupy.array([1, 1], numpy.int32)
        v = cupy.array([2., 1.], dtype=dtype)
        cupyx.scatter_add(a, i, v)
>       testing.assert_array_equal(a, cupy.array([0, 3, 0], dtype=dtype))

tests/cupyx_tests/test_scatter.py:19: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

x = array([0.e+00, 2.e-07, 0.e+00], dtype=float16)
y = array([0., 3., 0.], dtype=float16), err_msg = '', verbose = True
strides_check = False

    def assert_array_equal(x, y, err_msg='', verbose=True, strides_check=False):
        """Raises an AssertionError if two array_like objects are not equal.
    
        Args:
             x(numpy.ndarray or cupy.ndarray): The actual object to check.
             y(numpy.ndarray or cupy.ndarray): The desired, expected object.
             strides_check(bool): If ``True``, consistency of strides is also
                 checked.
             err_msg(str): The error message to be printed in case of failure.
             verbose(bool): If ``True``, the conflicting values
                 are appended to the error message.
    
        .. seealso:: :func:`numpy.testing.assert_array_equal`
        """
>       numpy.testing.assert_array_equal(
            cupy.asnumpy(x), cupy.asnumpy(y), err_msg=err_msg,
            verbose=verbose)
E       AssertionError: 
E       Arrays are not equal
E       
E       Mismatched elements: 1 / 3 (33.3%)
E       Max absolute difference: 3.
E       Max relative difference: 1.
E        x: array([0.e+00, 2.e-07, 0.e+00], dtype=float16)
E        y: array([0., 3., 0.], dtype=float16)

cupy/testing/_array.py:91: AssertionError
----------------------------- Captured stdout call -----------------------------
dtype is e
_____ TestLUSolve_param_4_{shapes=((5, 5), (5, 2)), trans=1}.test_lu_solve _____

self = <<cupyx_tests.scipy_tests.linalg_tests.test_decomp_lu.TestLUSolve_param_4_{shapes=((5, 5), (5, 2)), trans=1} testMethod=test_lu_solve>  parameter: {'shapes': ((5, 5), (5, 2)), 'trans': 1}>
xp = <module 'cupy' from '/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.hXnTrEAC7u/cupy/cupy/__init__.py'>
scp = <module 'cupyx.scipy' from '/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.hXnTrEAC7u/cupy/cupyx/scipy/__init__.py'>
dtype = <class 'numpy.float64'>

    @testing.for_dtypes('fdFD')
    @testing.numpy_cupy_allclose(atol=1e-5, scipy_name='scp')
    def test_lu_solve(self, xp, scp, dtype):
        a_shape, b_shape = self.shapes
        A = testing.shaped_random(a_shape, xp, dtype=dtype)
        b = testing.shaped_random(b_shape, xp, dtype=dtype)
        lu = scp.linalg.lu_factor(A)
>       return scp.linalg.lu_solve(lu, b, trans=self.trans)

tests/cupyx_tests/scipy_tests/linalg_tests/test_decomp_lu.py:133: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

lu_and_piv = (array([[ 9.78618342,  7.99158564,  4.61479362,  7.80529176,  1.18274426],
       [ 0.56080443,  2.67017701,  3.439637...3006],
       [ 0.8090233 , -0.44058119,  0.40394755, -0.4129952 , -3.80346237]]), array([4, 4, 3, 4, 4], dtype=int32))
b = array([[-0.32626642,  0.03580948],
       [-0.60478711, -0.13487398],
       [-2.16947542,  0.34888049],
       [ 1.33234695,  0.38860276],
       [ 2.77947264,  0.48290004]])
trans = 1, overwrite_b = False, check_finite = True

    def lu_solve(lu_and_piv, b, trans=0, overwrite_b=False, check_finite=True):
        """Solve an equation system, ``a * x = b``, given the LU factorization of ``a``
    
        Args:
            lu_and_piv (tuple): LU factorization of matrix ``a`` (``(M, M)``)
                together with pivot indices.
            b (cupy.ndarray): The matrix with dimension ``(M,)`` or
                ``(M, N)``.
            trans ({0, 1, 2}): Type of system to solve:
    
                ========  =========
                trans     system
                ========  =========
                0         a x  = b
                1         a^T x = b
                2         a^H x = b
                ========  =========
            overwrite_b (bool): Allow overwriting data in b (may enhance
                performance)
            check_finite (bool): Whether to check that the input matrices contain
                only finite numbers. Disabling may give a performance gain, but may
                result in problems (crashes, non-termination) if the inputs do
                contain infinities or NaNs.
    
        Returns:
            cupy.ndarray:
                The matrix with dimension ``(M,)`` or ``(M, N)``.
    
        .. seealso:: :func:`scipy.linalg.lu_solve`
        """
    
        (lu, ipiv) = lu_and_piv
    
        _util._assert_cupy_array(lu)
        _util._assert_rank2(lu)
        _util._assert_nd_squareness(lu)
    
        m = lu.shape[0]
        if m != b.shape[0]:
            raise ValueError('incompatible dimensions.')
    
        dtype = lu.dtype
        if dtype.char == 'f':
            getrs = cusolver.sgetrs
        elif dtype.char == 'd':
            getrs = cusolver.dgetrs
        elif dtype.char == 'F':
            getrs = cusolver.cgetrs
        elif dtype.char == 'D':
            getrs = cusolver.zgetrs
        else:
            msg = 'Only float32, float64, complex64 and complex128 are supported.'
            raise NotImplementedError(msg)
    
        if trans == 0:
            trans = cublas.CUBLAS_OP_N
        elif trans == 1:
            trans = cublas.CUBLAS_OP_T
        elif trans == 2:
            trans = cublas.CUBLAS_OP_C
        else:
            raise ValueError('unknown trans')
    
        lu = lu.astype(dtype, order='F', copy=False)
        ipiv = ipiv.astype(ipiv.dtype, order='F', copy=True)
        # cuSolver uses 1-origin while SciPy uses 0-origin
        ipiv += 1
        b = b.astype(dtype, order='F', copy=(not overwrite_b))
    
        if check_finite:
            if lu.dtype.kind == 'f' and not cupy.isfinite(lu).all():
                raise ValueError(
                    'array must not contain infs or NaNs.\n'
                    'Note that when a singular matrix is given, unlike '
                    'scipy.linalg.lu_factor, cupyx.scipy.linalg.lu_factor '
                    'returns an array containing NaN.')
            if b.dtype.kind == 'f' and not cupy.isfinite(b).all():
                raise ValueError(
                    'array must not contain infs or NaNs')
    
        n = 1 if b.ndim == 1 else b.shape[1]
        cusolver_handle = device.get_cusolver_handle()
        dev_info = cupy.empty(1, dtype=numpy.int32)
    
        # solve for the inverse
        getrs(cusolver_handle,
              trans,
              m, n, lu.data.ptr, m, ipiv.data.ptr, b.data.ptr,
              m, dev_info.data.ptr)
    
        if dev_info[0] < 0:
>           raise ValueError('illegal value in %d-th argument of '
                             'internal getrs (lu_solve)' % -dev_info[0])
E           AssertionError: Only cupy raises error
E           
E           Traceback (most recent call last):
E             File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.hXnTrEAC7u/cupy/cupy/testing/_helper.py", line 47, in _call_func
E               result = impl(self, *args, **kw)
E             File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.hXnTrEAC7u/cupy/tests/cupyx_tests/scipy_tests/linalg_tests/test_decomp_lu.py", line 133, in test_lu_solve
E               return scp.linalg.lu_solve(lu, b, trans=self.trans)
E             File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.hXnTrEAC7u/cupy/cupyx/scipy/linalg/decomp_lu.py", line 344, in lu_solve
E               raise ValueError('illegal value in %d-th argument of '
E           ValueError: illegal value in 1096348577-th argument of internal getrs (lu_solve)

cupyx/scipy/linalg/decomp_lu.py:344: AssertionError
----------------------------- Captured stdout call -----------------------------
dtype is d
_____ TestLUSolve_param_5_{shapes=((5, 5), (5, 2)), trans=2}.test_lu_solve _____

self = <<cupyx_tests.scipy_tests.linalg_tests.test_decomp_lu.TestLUSolve_param_5_{shapes=((5, 5), (5, 2)), trans=2} testMethod=test_lu_solve>  parameter: {'shapes': ((5, 5), (5, 2)), 'trans': 2}>
xp = <module 'cupy' from '/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.hXnTrEAC7u/cupy/cupy/__init__.py'>
scp = <module 'cupyx.scipy' from '/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.hXnTrEAC7u/cupy/cupyx/scipy/__init__.py'>
dtype = <class 'numpy.float32'>

    @testing.for_dtypes('fdFD')
    @testing.numpy_cupy_allclose(atol=1e-5, scipy_name='scp')
    def test_lu_solve(self, xp, scp, dtype):
        a_shape, b_shape = self.shapes
        A = testing.shaped_random(a_shape, xp, dtype=dtype)
        b = testing.shaped_random(b_shape, xp, dtype=dtype)
        lu = scp.linalg.lu_factor(A)
>       return scp.linalg.lu_solve(lu, b, trans=self.trans)

tests/cupyx_tests/scipy_tests/linalg_tests/test_decomp_lu.py:133: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

lu_and_piv = (array([[ 9.786183  ,  7.9915857 ,  4.614794  ,  7.8052917 ,  1.1827443 ],
       [ 0.5608044 ,  2.670177  ,  3.439637...02326, -0.44058117,  0.40394756, -0.41299516, -3.803463  ]],
      dtype=float32), array([4, 4, 3, 4, 4], dtype=int32))
b = array([[-0.32626626,  0.0358096 ],
       [-0.604787  , -0.13487428],
       [-2.169475  ,  0.3488809 ],
       [ 1.3323468 ,  0.3886028 ],
       [ 2.779472  ,  0.48289984]], dtype=float32)
trans = 2, overwrite_b = False, check_finite = True

    def lu_solve(lu_and_piv, b, trans=0, overwrite_b=False, check_finite=True):
        """Solve an equation system, ``a * x = b``, given the LU factorization of ``a``
    
        Args:
            lu_and_piv (tuple): LU factorization of matrix ``a`` (``(M, M)``)
                together with pivot indices.
            b (cupy.ndarray): The matrix with dimension ``(M,)`` or
                ``(M, N)``.
            trans ({0, 1, 2}): Type of system to solve:
    
                ========  =========
                trans     system
                ========  =========
                0         a x  = b
                1         a^T x = b
                2         a^H x = b
                ========  =========
            overwrite_b (bool): Allow overwriting data in b (may enhance
                performance)
            check_finite (bool): Whether to check that the input matrices contain
                only finite numbers. Disabling may give a performance gain, but may
                result in problems (crashes, non-termination) if the inputs do
                contain infinities or NaNs.
    
        Returns:
            cupy.ndarray:
                The matrix with dimension ``(M,)`` or ``(M, N)``.
    
        .. seealso:: :func:`scipy.linalg.lu_solve`
        """
    
        (lu, ipiv) = lu_and_piv
    
        _util._assert_cupy_array(lu)
        _util._assert_rank2(lu)
        _util._assert_nd_squareness(lu)
    
        m = lu.shape[0]
        if m != b.shape[0]:
            raise ValueError('incompatible dimensions.')
    
        dtype = lu.dtype
        if dtype.char == 'f':
            getrs = cusolver.sgetrs
        elif dtype.char == 'd':
            getrs = cusolver.dgetrs
        elif dtype.char == 'F':
            getrs = cusolver.cgetrs
        elif dtype.char == 'D':
            getrs = cusolver.zgetrs
        else:
            msg = 'Only float32, float64, complex64 and complex128 are supported.'
            raise NotImplementedError(msg)
    
        if trans == 0:
            trans = cublas.CUBLAS_OP_N
        elif trans == 1:
            trans = cublas.CUBLAS_OP_T
        elif trans == 2:
            trans = cublas.CUBLAS_OP_C
        else:
            raise ValueError('unknown trans')
    
        lu = lu.astype(dtype, order='F', copy=False)
        ipiv = ipiv.astype(ipiv.dtype, order='F', copy=True)
        # cuSolver uses 1-origin while SciPy uses 0-origin
        ipiv += 1
        b = b.astype(dtype, order='F', copy=(not overwrite_b))
    
        if check_finite:
            if lu.dtype.kind == 'f' and not cupy.isfinite(lu).all():
                raise ValueError(
                    'array must not contain infs or NaNs.\n'
                    'Note that when a singular matrix is given, unlike '
                    'scipy.linalg.lu_factor, cupyx.scipy.linalg.lu_factor '
                    'returns an array containing NaN.')
            if b.dtype.kind == 'f' and not cupy.isfinite(b).all():
                raise ValueError(
                    'array must not contain infs or NaNs')
    
        n = 1 if b.ndim == 1 else b.shape[1]
        cusolver_handle = device.get_cusolver_handle()
        dev_info = cupy.empty(1, dtype=numpy.int32)
    
        # solve for the inverse
        getrs(cusolver_handle,
              trans,
              m, n, lu.data.ptr, m, ipiv.data.ptr, b.data.ptr,
              m, dev_info.data.ptr)
    
        if dev_info[0] < 0:
>           raise ValueError('illegal value in %d-th argument of '
                             'internal getrs (lu_solve)' % -dev_info[0])
E           AssertionError: Only cupy raises error
E           
E           Traceback (most recent call last):
E             File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.hXnTrEAC7u/cupy/cupy/testing/_helper.py", line 47, in _call_func
E               result = impl(self, *args, **kw)
E             File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.hXnTrEAC7u/cupy/tests/cupyx_tests/scipy_tests/linalg_tests/test_decomp_lu.py", line 133, in test_lu_solve
E               return scp.linalg.lu_solve(lu, b, trans=self.trans)
E             File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.hXnTrEAC7u/cupy/cupyx/scipy/linalg/decomp_lu.py", line 344, in lu_solve
E               raise ValueError('illegal value in %d-th argument of '
E           ValueError: illegal value in 1857101197-th argument of internal getrs (lu_solve)

cupyx/scipy/linalg/decomp_lu.py:344: AssertionError
----------------------------- Captured stdout call -----------------------------
dtype is f
_ TestMapCoordinatesHalfInteger.test_map_coordinates_float[_param_46_{mode='grid-constant', order=4}] _

self = <<cupyx_tests.scipy_tests.ndimage_tests.test_interpolation.TestMapCoordinatesHalfInteger object at 0x7fab3d5313a0>  parameter: {'mode': 'grid-constant', 'order': 4}>
args = (), kw = {'dtype': <class 'numpy.float64'>}
dtype = <class 'numpy.float64'>

    @_wraps_partial(impl, name)
    def test_func(self, *args, **kw):
        for dtype in dtypes:
            try:
                kw[name] = numpy.dtype(dtype).type
>               impl(self, *args, **kw)

cupy/testing/_helper.py:825: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
cupy/testing/_helper.py:343: in test_func
    check_func(cupy_r, numpy_r)
cupy/testing/_helper.py:495: in check_func
    _array.assert_allclose(c, n, rtol1, atol1, err_msg, verbose)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

actual = array([229.76997843, 598.96953239])
desired = array([3.06993892, 8.        ]), rtol = 1e-07, atol = 0.0001
err_msg = '', verbose = True

    def assert_allclose(actual, desired, rtol=1e-7, atol=0, err_msg='',
                        verbose=True):
        """Raises an AssertionError if objects are not equal up to desired tolerance.
    
        Args:
             actual(numpy.ndarray or cupy.ndarray): The actual object to check.
             desired(numpy.ndarray or cupy.ndarray): The desired, expected object.
             rtol(float): Relative tolerance.
             atol(float): Absolute tolerance.
             err_msg(str): The error message to be printed in case of failure.
             verbose(bool): If ``True``, the conflicting
                 values are appended to the error message.
    
        .. seealso:: :func:`numpy.testing.assert_allclose`
    
        """  # NOQA
>       numpy.testing.assert_allclose(
            cupy.asnumpy(actual), cupy.asnumpy(desired),
            rtol=rtol, atol=atol, err_msg=err_msg, verbose=verbose)
E       AssertionError: 
E       Not equal to tolerance rtol=1e-07, atol=0.0001
E       
E       Mismatched elements: 2 / 2 (100%)
E       Max absolute difference: 590.96953239
E       Max relative difference: 73.87119155
E        x: array([229.769978, 598.969532])
E        y: array([3.069939, 8.      ])

cupy/testing/_array.py:24: AssertionError
----------------------------- Captured stdout call -----------------------------
dtype is <class 'numpy.float64'>
_ TestMapCoordinatesHalfInteger.test_map_coordinates_float[_param_47_{mode='grid-constant', order=5}] _

self = <<cupyx_tests.scipy_tests.ndimage_tests.test_interpolation.TestMapCoordinatesHalfInteger object at 0x7fab3d23d820>  parameter: {'mode': 'grid-constant', 'order': 5}>
args = (), kw = {'dtype': <class 'numpy.float64'>}
dtype = <class 'numpy.float64'>

    @_wraps_partial(impl, name)
    def test_func(self, *args, **kw):
        for dtype in dtypes:
            try:
                kw[name] = numpy.dtype(dtype).type
>               impl(self, *args, **kw)

cupy/testing/_helper.py:825: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
cupy/testing/_helper.py:343: in test_func
    check_func(cupy_r, numpy_r)
cupy/testing/_helper.py:495: in check_func
    _array.assert_allclose(c, n, rtol1, atol1, err_msg, verbose)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

actual = array([ 78.42728447, 201.97560613])
desired = array([3.12122783, 8.        ]), rtol = 1e-07, atol = 0.0001
err_msg = '', verbose = True

    def assert_allclose(actual, desired, rtol=1e-7, atol=0, err_msg='',
                        verbose=True):
        """Raises an AssertionError if objects are not equal up to desired tolerance.
    
        Args:
             actual(numpy.ndarray or cupy.ndarray): The actual object to check.
             desired(numpy.ndarray or cupy.ndarray): The desired, expected object.
             rtol(float): Relative tolerance.
             atol(float): Absolute tolerance.
             err_msg(str): The error message to be printed in case of failure.
             verbose(bool): If ``True``, the conflicting
                 values are appended to the error message.
    
        .. seealso:: :func:`numpy.testing.assert_allclose`
    
        """  # NOQA
>       numpy.testing.assert_allclose(
            cupy.asnumpy(actual), cupy.asnumpy(desired),
            rtol=rtol, atol=atol, err_msg=err_msg, verbose=verbose)
E       AssertionError: 
E       Not equal to tolerance rtol=1e-07, atol=0.0001
E       
E       Mismatched elements: 2 / 2 (100%)
E       Max absolute difference: 193.97560613
E       Max relative difference: 24.24695077
E        x: array([ 78.427284, 201.975606])
E        y: array([3.121228, 8.      ])

cupy/testing/_array.py:24: AssertionError
----------------------------- Captured stdout call -----------------------------
dtype is <class 'numpy.float64'>
_ TestAffineTransformTextureMemory.test_affine_transform_texture_memory[_param_0_{mode='constant', order=0, output=None, output_shape=None, shape=(100, 100), theta=0}] _

self = <<cupyx_tests.scipy_tests.ndimage_tests.test_interpolation.TestAffineTransformTextureMemory object at 0x7fab37d67760>  parameter: {'mode': 'constant', 'order': 0, 'output': None, 'output_shape': None, 'shape': (100, 100), 'theta': 0}>
xp = <module 'cupy' from '/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.hXnTrEAC7u/cupy/cupy/__init__.py'>
scp = <module 'cupyx.scipy' from '/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.hXnTrEAC7u/cupy/cupyx/scipy/__init__.py'>

    @testing.numpy_cupy_allclose(atol=0.1, scipy_name='scp')
    def test_affine_transform_texture_memory(self, xp, scp):
        a = xp.ones(self.shape, dtype=xp.float32)
        center = numpy.divide(numpy.subtract(self.shape, 1), 2)
    
        if len(self.shape) == 2:
            matrix = self._2d_rotation_matrix(self.theta, center)
        elif len(self.shape) == 3:
            matrix = self._3d_rotation_matrix(self.theta, center)
        else:
            return pytest.xfail('Unsupported shape')
    
        if self.output == 'empty':
            output = xp.empty(self.shape, dtype=xp.float32)
            if self.output_shape:
                return pytest.skip('This combination is tested in '
                                   'test_invalid_texture_arguments')
        else:
            output = self.output
    
        if self.output_shape:
            output_shape = (self.output_shape, ) * len(self.shape)
        else:
            output_shape = self.output_shape
    
        if xp == cupy:
            m = cupyx.scipy.ndimage.affine_transform
            matrix = cupy.array(matrix)
>           return m(a, matrix, output_shape=output_shape,
                     output=output, order=self.order,
                     mode=self.mode, texture_memory=True)

tests/cupyx_tests/scipy_tests/ndimage_tests/test_interpolation.py:398: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
cupyx/scipy/ndimage/interpolation.py:376: in affine_transform
    return _texture.affine_transformation(data=input,
cupyx/_texture.py:168: in affine_transformation
    texture_object = _create_texture_object(data,
cupyx/_texture.py:98: in _create_texture_object
    array = texture.CUDAarray(texture_fmt, *data.shape[::-1])
cupy/cuda/texture.pyx:296: in cupy.cuda.texture.CUDAarray.__init__
    self.ptr = runtime.malloc3DArray(desc.ptr, width, height, depth,
cupy_backends/cuda/api/runtime.pyx:593: in cupy_backends.cuda.api.runtime.malloc3DArray
    check_status(status)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

>   raise CUDARuntimeError(status)
E   AssertionError: Only cupy raises error
E   
E   Traceback (most recent call last):
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.hXnTrEAC7u/cupy/cupy/testing/_helper.py", line 47, in _call_func
E       result = impl(self, *args, **kw)
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.hXnTrEAC7u/cupy/tests/cupyx_tests/scipy_tests/ndimage_tests/test_interpolation.py", line 398, in test_affine_transform_texture_memory
E       return m(a, matrix, output_shape=output_shape,
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.hXnTrEAC7u/cupy/cupyx/scipy/ndimage/interpolation.py", line 376, in affine_transform
E       return _texture.affine_transformation(data=input,
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.hXnTrEAC7u/cupy/cupyx/_texture.py", line 168, in affine_transformation
E       texture_object = _create_texture_object(data,
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.hXnTrEAC7u/cupy/cupyx/_texture.py", line 98, in _create_texture_object
E       array = texture.CUDAarray(texture_fmt, *data.shape[::-1])
E     File "cupy/cuda/texture.pyx", line 296, in cupy.cuda.texture.CUDAarray.__init__
E       self.ptr = runtime.malloc3DArray(desc.ptr, width, height, depth,
E     File "cupy_backends/cuda/api/runtime.pyx", line 593, in cupy_backends.cuda.api.runtime.malloc3DArray
E       check_status(status)
E     File "cupy_backends/cuda/api/runtime.pyx", line 265, in cupy_backends.cuda.api.runtime.check_status
E       raise CUDARuntimeError(status)
E   cupy_backends.cuda.api.runtime.CUDARuntimeError: hipErrorUnknown: hipErrorUnknown

cupy_backends/cuda/api/runtime.pyx:265: AssertionError
----------------------------- Captured stderr call -----------------------------
Traceback (most recent call last):
  File "cupy_backends/cuda/api/runtime.pyx", line 644, in cupy_backends.cuda.api.runtime.freeArray
    check_status(status)
  File "cupy_backends/cuda/api/runtime.pyx", line 265, in cupy_backends.cuda.api.runtime.check_status
    raise CUDARuntimeError(status)
cupy_backends.cuda.api.runtime.CUDARuntimeError: hipErrorUnknown: hipErrorUnknown
_ TestAffineTransformTextureMemory.test_affine_transform_texture_memory[_param_1_{mode='constant', order=0, output=None, output_shape=None, shape=(100, 100), theta=90}] _

self = <<cupyx_tests.scipy_tests.ndimage_tests.test_interpolation.TestAffineTransformTextureMemory object at 0x7fab3717fd60>  parameter: {'mode': 'constant', 'order': 0, 'output': None, 'output_shape': None, 'shape': (100, 100), 'theta': 90}>
xp = <module 'cupy' from '/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.hXnTrEAC7u/cupy/cupy/__init__.py'>
scp = <module 'cupyx.scipy' from '/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.hXnTrEAC7u/cupy/cupyx/scipy/__init__.py'>

    @testing.numpy_cupy_allclose(atol=0.1, scipy_name='scp')
    def test_affine_transform_texture_memory(self, xp, scp):
        a = xp.ones(self.shape, dtype=xp.float32)
        center = numpy.divide(numpy.subtract(self.shape, 1), 2)
    
        if len(self.shape) == 2:
            matrix = self._2d_rotation_matrix(self.theta, center)
        elif len(self.shape) == 3:
            matrix = self._3d_rotation_matrix(self.theta, center)
        else:
            return pytest.xfail('Unsupported shape')
    
        if self.output == 'empty':
            output = xp.empty(self.shape, dtype=xp.float32)
            if self.output_shape:
                return pytest.skip('This combination is tested in '
                                   'test_invalid_texture_arguments')
        else:
            output = self.output
    
        if self.output_shape:
            output_shape = (self.output_shape, ) * len(self.shape)
        else:
            output_shape = self.output_shape
    
        if xp == cupy:
            m = cupyx.scipy.ndimage.affine_transform
            matrix = cupy.array(matrix)
>           return m(a, matrix, output_shape=output_shape,
                     output=output, order=self.order,
                     mode=self.mode, texture_memory=True)

tests/cupyx_tests/scipy_tests/ndimage_tests/test_interpolation.py:398: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
cupyx/scipy/ndimage/interpolation.py:376: in affine_transform
    return _texture.affine_transformation(data=input,
cupyx/_texture.py:168: in affine_transformation
    texture_object = _create_texture_object(data,
cupyx/_texture.py:98: in _create_texture_object
    array = texture.CUDAarray(texture_fmt, *data.shape[::-1])
cupy/cuda/texture.pyx:296: in cupy.cuda.texture.CUDAarray.__init__
    self.ptr = runtime.malloc3DArray(desc.ptr, width, height, depth,
cupy_backends/cuda/api/runtime.pyx:593: in cupy_backends.cuda.api.runtime.malloc3DArray
    check_status(status)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

>   raise CUDARuntimeError(status)
E   AssertionError: Only cupy raises error
E   
E   Traceback (most recent call last):
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.hXnTrEAC7u/cupy/cupy/testing/_helper.py", line 47, in _call_func
E       result = impl(self, *args, **kw)
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.hXnTrEAC7u/cupy/tests/cupyx_tests/scipy_tests/ndimage_tests/test_interpolation.py", line 398, in test_affine_transform_texture_memory
E       return m(a, matrix, output_shape=output_shape,
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.hXnTrEAC7u/cupy/cupyx/scipy/ndimage/interpolation.py", line 376, in affine_transform
E       return _texture.affine_transformation(data=input,
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.hXnTrEAC7u/cupy/cupyx/_texture.py", line 168, in affine_transformation
E       texture_object = _create_texture_object(data,
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.hXnTrEAC7u/cupy/cupyx/_texture.py", line 98, in _create_texture_object
E       array = texture.CUDAarray(texture_fmt, *data.shape[::-1])
E     File "cupy/cuda/texture.pyx", line 296, in cupy.cuda.texture.CUDAarray.__init__
E       self.ptr = runtime.malloc3DArray(desc.ptr, width, height, depth,
E     File "cupy_backends/cuda/api/runtime.pyx", line 593, in cupy_backends.cuda.api.runtime.malloc3DArray
E       check_status(status)
E     File "cupy_backends/cuda/api/runtime.pyx", line 265, in cupy_backends.cuda.api.runtime.check_status
E       raise CUDARuntimeError(status)
E   cupy_backends.cuda.api.runtime.CUDARuntimeError: hipErrorUnknown: hipErrorUnknown

cupy_backends/cuda/api/runtime.pyx:265: AssertionError
----------------------------- Captured stderr call -----------------------------
Traceback (most recent call last):
  File "cupy_backends/cuda/api/runtime.pyx", line 644, in cupy_backends.cuda.api.runtime.freeArray
    check_status(status)
  File "cupy_backends/cuda/api/runtime.pyx", line 265, in cupy_backends.cuda.api.runtime.check_status
    raise CUDARuntimeError(status)
cupy_backends.cuda.api.runtime.CUDARuntimeError: hipErrorUnknown: hipErrorUnknown
_ TestAffineTransformTextureMemory.test_affine_transform_texture_memory[_param_2_{mode='constant', order=0, output=None, output_shape=None, shape=(100, 100), theta=180}] _

self = <<cupyx_tests.scipy_tests.ndimage_tests.test_interpolation.TestAffineTransformTextureMemory object at 0x7fab370d7610>  parameter: {'mode': 'constant', 'order': 0, 'output': None, 'output_shape': None, 'shape': (100, 100), 'theta': 180}>
xp = <module 'cupy' from '/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.hXnTrEAC7u/cupy/cupy/__init__.py'>
scp = <module 'cupyx.scipy' from '/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.hXnTrEAC7u/cupy/cupyx/scipy/__init__.py'>

    @testing.numpy_cupy_allclose(atol=0.1, scipy_name='scp')
    def test_affine_transform_texture_memory(self, xp, scp):
        a = xp.ones(self.shape, dtype=xp.float32)
        center = numpy.divide(numpy.subtract(self.shape, 1), 2)
    
        if len(self.shape) == 2:
            matrix = self._2d_rotation_matrix(self.theta, center)
        elif len(self.shape) == 3:
            matrix = self._3d_rotation_matrix(self.theta, center)
        else:
            return pytest.xfail('Unsupported shape')
    
        if self.output == 'empty':
            output = xp.empty(self.shape, dtype=xp.float32)
            if self.output_shape:
                return pytest.skip('This combination is tested in '
                                   'test_invalid_texture_arguments')
        else:
            output = self.output
    
        if self.output_shape:
            output_shape = (self.output_shape, ) * len(self.shape)
        else:
            output_shape = self.output_shape
    
        if xp == cupy:
            m = cupyx.scipy.ndimage.affine_transform
            matrix = cupy.array(matrix)
>           return m(a, matrix, output_shape=output_shape,
                     output=output, order=self.order,
                     mode=self.mode, texture_memory=True)

tests/cupyx_tests/scipy_tests/ndimage_tests/test_interpolation.py:398: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
cupyx/scipy/ndimage/interpolation.py:376: in affine_transform
    return _texture.affine_transformation(data=input,
cupyx/_texture.py:168: in affine_transformation
    texture_object = _create_texture_object(data,
cupyx/_texture.py:98: in _create_texture_object
    array = texture.CUDAarray(texture_fmt, *data.shape[::-1])
cupy/cuda/texture.pyx:296: in cupy.cuda.texture.CUDAarray.__init__
    self.ptr = runtime.malloc3DArray(desc.ptr, width, height, depth,
cupy_backends/cuda/api/runtime.pyx:593: in cupy_backends.cuda.api.runtime.malloc3DArray
    check_status(status)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

>   raise CUDARuntimeError(status)
E   AssertionError: Only cupy raises error
E   
E   Traceback (most recent call last):
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.hXnTrEAC7u/cupy/cupy/testing/_helper.py", line 47, in _call_func
E       result = impl(self, *args, **kw)
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.hXnTrEAC7u/cupy/tests/cupyx_tests/scipy_tests/ndimage_tests/test_interpolation.py", line 398, in test_affine_transform_texture_memory
E       return m(a, matrix, output_shape=output_shape,
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.hXnTrEAC7u/cupy/cupyx/scipy/ndimage/interpolation.py", line 376, in affine_transform
E       return _texture.affine_transformation(data=input,
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.hXnTrEAC7u/cupy/cupyx/_texture.py", line 168, in affine_transformation
E       texture_object = _create_texture_object(data,
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.hXnTrEAC7u/cupy/cupyx/_texture.py", line 98, in _create_texture_object
E       array = texture.CUDAarray(texture_fmt, *data.shape[::-1])
E     File "cupy/cuda/texture.pyx", line 296, in cupy.cuda.texture.CUDAarray.__init__
E       self.ptr = runtime.malloc3DArray(desc.ptr, width, height, depth,
E     File "cupy_backends/cuda/api/runtime.pyx", line 593, in cupy_backends.cuda.api.runtime.malloc3DArray
E       check_status(status)
E     File "cupy_backends/cuda/api/runtime.pyx", line 265, in cupy_backends.cuda.api.runtime.check_status
E       raise CUDARuntimeError(status)
E   cupy_backends.cuda.api.runtime.CUDARuntimeError: hipErrorUnknown: hipErrorUnknown

cupy_backends/cuda/api/runtime.pyx:265: AssertionError
----------------------------- Captured stderr call -----------------------------
Traceback (most recent call last):
  File "cupy_backends/cuda/api/runtime.pyx", line 644, in cupy_backends.cuda.api.runtime.freeArray
    check_status(status)
  File "cupy_backends/cuda/api/runtime.pyx", line 265, in cupy_backends.cuda.api.runtime.check_status
    raise CUDARuntimeError(status)
cupy_backends.cuda.api.runtime.CUDARuntimeError: hipErrorUnknown: hipErrorUnknown
_ TestAffineTransformTextureMemory.test_affine_transform_texture_memory[_param_3_{mode='constant', order=0, output=None, output_shape=None, shape=(100, 100), theta=270}] _

self = <<cupyx_tests.scipy_tests.ndimage_tests.test_interpolation.TestAffineTransformTextureMemory object at 0x7fab3724f520>  parameter: {'mode': 'constant', 'order': 0, 'output': None, 'output_shape': None, 'shape': (100, 100), 'theta': 270}>
xp = <module 'cupy' from '/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.hXnTrEAC7u/cupy/cupy/__init__.py'>
scp = <module 'cupyx.scipy' from '/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.hXnTrEAC7u/cupy/cupyx/scipy/__init__.py'>

    @testing.numpy_cupy_allclose(atol=0.1, scipy_name='scp')
    def test_affine_transform_texture_memory(self, xp, scp):
        a = xp.ones(self.shape, dtype=xp.float32)
        center = numpy.divide(numpy.subtract(self.shape, 1), 2)
    
        if len(self.shape) == 2:
            matrix = self._2d_rotation_matrix(self.theta, center)
        elif len(self.shape) == 3:
            matrix = self._3d_rotation_matrix(self.theta, center)
        else:
            return pytest.xfail('Unsupported shape')
    
        if self.output == 'empty':
            output = xp.empty(self.shape, dtype=xp.float32)
            if self.output_shape:
                return pytest.skip('This combination is tested in '
                                   'test_invalid_texture_arguments')
        else:
            output = self.output
    
        if self.output_shape:
            output_shape = (self.output_shape, ) * len(self.shape)
        else:
            output_shape = self.output_shape
    
        if xp == cupy:
            m = cupyx.scipy.ndimage.affine_transform
            matrix = cupy.array(matrix)
>           return m(a, matrix, output_shape=output_shape,
                     output=output, order=self.order,
                     mode=self.mode, texture_memory=True)

tests/cupyx_tests/scipy_tests/ndimage_tests/test_interpolation.py:398: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
cupyx/scipy/ndimage/interpolation.py:376: in affine_transform
    return _texture.affine_transformation(data=input,
cupyx/_texture.py:168: in affine_transformation
    texture_object = _create_texture_object(data,
cupyx/_texture.py:98: in _create_texture_object
    array = texture.CUDAarray(texture_fmt, *data.shape[::-1])
cupy/cuda/texture.pyx:296: in cupy.cuda.texture.CUDAarray.__init__
    self.ptr = runtime.malloc3DArray(desc.ptr, width, height, depth,
cupy_backends/cuda/api/runtime.pyx:593: in cupy_backends.cuda.api.runtime.malloc3DArray
    check_status(status)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

>   raise CUDARuntimeError(status)
E   AssertionError: Only cupy raises error
E   
E   Traceback (most recent call last):
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.hXnTrEAC7u/cupy/cupy/testing/_helper.py", line 47, in _call_func
E       result = impl(self, *args, **kw)
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.hXnTrEAC7u/cupy/tests/cupyx_tests/scipy_tests/ndimage_tests/test_interpolation.py", line 398, in test_affine_transform_texture_memory
E       return m(a, matrix, output_shape=output_shape,
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.hXnTrEAC7u/cupy/cupyx/scipy/ndimage/interpolation.py", line 376, in affine_transform
E       return _texture.affine_transformation(data=input,
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.hXnTrEAC7u/cupy/cupyx/_texture.py", line 168, in affine_transformation
E       texture_object = _create_texture_object(data,
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.hXnTrEAC7u/cupy/cupyx/_texture.py", line 98, in _create_texture_object
E       array = texture.CUDAarray(texture_fmt, *data.shape[::-1])
E     File "cupy/cuda/texture.pyx", line 296, in cupy.cuda.texture.CUDAarray.__init__
E       self.ptr = runtime.malloc3DArray(desc.ptr, width, height, depth,
E     File "cupy_backends/cuda/api/runtime.pyx", line 593, in cupy_backends.cuda.api.runtime.malloc3DArray
E       check_status(status)
E     File "cupy_backends/cuda/api/runtime.pyx", line 265, in cupy_backends.cuda.api.runtime.check_status
E       raise CUDARuntimeError(status)
E   cupy_backends.cuda.api.runtime.CUDARuntimeError: hipErrorUnknown: hipErrorUnknown

cupy_backends/cuda/api/runtime.pyx:265: AssertionError
----------------------------- Captured stderr call -----------------------------
Traceback (most recent call last):
  File "cupy_backends/cuda/api/runtime.pyx", line 644, in cupy_backends.cuda.api.runtime.freeArray
    check_status(status)
  File "cupy_backends/cuda/api/runtime.pyx", line 265, in cupy_backends.cuda.api.runtime.check_status
    raise CUDARuntimeError(status)
cupy_backends.cuda.api.runtime.CUDARuntimeError: hipErrorUnknown: hipErrorUnknown
_ TestAffineTransformTextureMemory.test_affine_transform_texture_memory[_param_4_{mode='constant', order=0, output=None, output_shape=None, shape=(10, 20), theta=0}] _

self = <<cupyx_tests.scipy_tests.ndimage_tests.test_interpolation.TestAffineTransformTextureMemory object at 0x7fab38e8f5e0>  parameter: {'mode': 'constant', 'order': 0, 'output': None, 'output_shape': None, 'shape': (10, 20), 'theta': 0}>
xp = <module 'cupy' from '/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.hXnTrEAC7u/cupy/cupy/__init__.py'>
scp = <module 'cupyx.scipy' from '/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.hXnTrEAC7u/cupy/cupyx/scipy/__init__.py'>

    @testing.numpy_cupy_allclose(atol=0.1, scipy_name='scp')
    def test_affine_transform_texture_memory(self, xp, scp):
        a = xp.ones(self.shape, dtype=xp.float32)
        center = numpy.divide(numpy.subtract(self.shape, 1), 2)
    
        if len(self.shape) == 2:
            matrix = self._2d_rotation_matrix(self.theta, center)
        elif len(self.shape) == 3:
            matrix = self._3d_rotation_matrix(self.theta, center)
        else:
            return pytest.xfail('Unsupported shape')
    
        if self.output == 'empty':
            output = xp.empty(self.shape, dtype=xp.float32)
            if self.output_shape:
                return pytest.skip('This combination is tested in '
                                   'test_invalid_texture_arguments')
        else:
            output = self.output
    
        if self.output_shape:
            output_shape = (self.output_shape, ) * len(self.shape)
        else:
            output_shape = self.output_shape
    
        if xp == cupy:
            m = cupyx.scipy.ndimage.affine_transform
            matrix = cupy.array(matrix)
>           return m(a, matrix, output_shape=output_shape,
                     output=output, order=self.order,
                     mode=self.mode, texture_memory=True)

tests/cupyx_tests/scipy_tests/ndimage_tests/test_interpolation.py:398: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
cupyx/scipy/ndimage/interpolation.py:376: in affine_transform
    return _texture.affine_transformation(data=input,
cupyx/_texture.py:168: in affine_transformation
    texture_object = _create_texture_object(data,
cupyx/_texture.py:98: in _create_texture_object
    array = texture.CUDAarray(texture_fmt, *data.shape[::-1])
cupy/cuda/texture.pyx:296: in cupy.cuda.texture.CUDAarray.__init__
    self.ptr = runtime.malloc3DArray(desc.ptr, width, height, depth,
cupy_backends/cuda/api/runtime.pyx:593: in cupy_backends.cuda.api.runtime.malloc3DArray
    check_status(status)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

>   raise CUDARuntimeError(status)
E   AssertionError: Only cupy raises error
E   
E   Traceback (most recent call last):
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.hXnTrEAC7u/cupy/cupy/testing/_helper.py", line 47, in _call_func
E       result = impl(self, *args, **kw)
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.hXnTrEAC7u/cupy/tests/cupyx_tests/scipy_tests/ndimage_tests/test_interpolation.py", line 398, in test_affine_transform_texture_memory
E       return m(a, matrix, output_shape=output_shape,
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.hXnTrEAC7u/cupy/cupyx/scipy/ndimage/interpolation.py", line 376, in affine_transform
E       return _texture.affine_transformation(data=input,
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.hXnTrEAC7u/cupy/cupyx/_texture.py", line 168, in affine_transformation
E       texture_object = _create_texture_object(data,
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.hXnTrEAC7u/cupy/cupyx/_texture.py", line 98, in _create_texture_object
E       array = texture.CUDAarray(texture_fmt, *data.shape[::-1])
E     File "cupy/cuda/texture.pyx", line 296, in cupy.cuda.texture.CUDAarray.__init__
E       self.ptr = runtime.malloc3DArray(desc.ptr, width, height, depth,
E     File "cupy_backends/cuda/api/runtime.pyx", line 593, in cupy_backends.cuda.api.runtime.malloc3DArray
E       check_status(status)
E     File "cupy_backends/cuda/api/runtime.pyx", line 265, in cupy_backends.cuda.api.runtime.check_status
E       raise CUDARuntimeError(status)
E   cupy_backends.cuda.api.runtime.CUDARuntimeError: hipErrorUnknown: hipErrorUnknown

cupy_backends/cuda/api/runtime.pyx:265: AssertionError
----------------------------- Captured stderr call -----------------------------
Traceback (most recent call last):
  File "cupy_backends/cuda/api/runtime.pyx", line 644, in cupy_backends.cuda.api.runtime.freeArray
    check_status(status)
  File "cupy_backends/cuda/api/runtime.pyx", line 265, in cupy_backends.cuda.api.runtime.check_status
    raise CUDARuntimeError(status)
cupy_backends.cuda.api.runtime.CUDARuntimeError: hipErrorUnknown: hipErrorUnknown
_ TestAffineTransformTextureMemory.test_affine_transform_texture_memory[_param_5_{mode='constant', order=0, output=None, output_shape=None, shape=(10, 20), theta=90}] _

self = <<cupyx_tests.scipy_tests.ndimage_tests.test_interpolation.TestAffineTransformTextureMemory object at 0x7fab37197a30>  parameter: {'mode': 'constant', 'order': 0, 'output': None, 'output_shape': None, 'shape': (10, 20), 'theta': 90}>
xp = <module 'cupy' from '/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.hXnTrEAC7u/cupy/cupy/__init__.py'>
scp = <module 'cupyx.scipy' from '/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.hXnTrEAC7u/cupy/cupyx/scipy/__init__.py'>

    @testing.numpy_cupy_allclose(atol=0.1, scipy_name='scp')
    def test_affine_transform_texture_memory(self, xp, scp):
        a = xp.ones(self.shape, dtype=xp.float32)
        center = numpy.divide(numpy.subtract(self.shape, 1), 2)
    
        if len(self.shape) == 2:
            matrix = self._2d_rotation_matrix(self.theta, center)
        elif len(self.shape) == 3:
            matrix = self._3d_rotation_matrix(self.theta, center)
        else:
            return pytest.xfail('Unsupported shape')
    
        if self.output == 'empty':
            output = xp.empty(self.shape, dtype=xp.float32)
            if self.output_shape:
                return pytest.skip('This combination is tested in '
                                   'test_invalid_texture_arguments')
        else:
            output = self.output
    
        if self.output_shape:
            output_shape = (self.output_shape, ) * len(self.shape)
        else:
            output_shape = self.output_shape
    
        if xp == cupy:
            m = cupyx.scipy.ndimage.affine_transform
            matrix = cupy.array(matrix)
>           return m(a, matrix, output_shape=output_shape,
                     output=output, order=self.order,
                     mode=self.mode, texture_memory=True)

tests/cupyx_tests/scipy_tests/ndimage_tests/test_interpolation.py:398: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
cupyx/scipy/ndimage/interpolation.py:376: in affine_transform
    return _texture.affine_transformation(data=input,
cupyx/_texture.py:168: in affine_transformation
    texture_object = _create_texture_object(data,
cupyx/_texture.py:98: in _create_texture_object
    array = texture.CUDAarray(texture_fmt, *data.shape[::-1])
cupy/cuda/texture.pyx:296: in cupy.cuda.texture.CUDAarray.__init__
    self.ptr = runtime.malloc3DArray(desc.ptr, width, height, depth,
cupy_backends/cuda/api/runtime.pyx:593: in cupy_backends.cuda.api.runtime.malloc3DArray
    check_status(status)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

>   raise CUDARuntimeError(status)
E   AssertionError: Only cupy raises error
E   
E   Traceback (most recent call last):
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.hXnTrEAC7u/cupy/cupy/testing/_helper.py", line 47, in _call_func
E       result = impl(self, *args, **kw)
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.hXnTrEAC7u/cupy/tests/cupyx_tests/scipy_tests/ndimage_tests/test_interpolation.py", line 398, in test_affine_transform_texture_memory
E       return m(a, matrix, output_shape=output_shape,
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.hXnTrEAC7u/cupy/cupyx/scipy/ndimage/interpolation.py", line 376, in affine_transform
E       return _texture.affine_transformation(data=input,
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.hXnTrEAC7u/cupy/cupyx/_texture.py", line 168, in affine_transformation
E       texture_object = _create_texture_object(data,
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.hXnTrEAC7u/cupy/cupyx/_texture.py", line 98, in _create_texture_object
E       array = texture.CUDAarray(texture_fmt, *data.shape[::-1])
E     File "cupy/cuda/texture.pyx", line 296, in cupy.cuda.texture.CUDAarray.__init__
E       self.ptr = runtime.malloc3DArray(desc.ptr, width, height, depth,
E     File "cupy_backends/cuda/api/runtime.pyx", line 593, in cupy_backends.cuda.api.runtime.malloc3DArray
E       check_status(status)
E     File "cupy_backends/cuda/api/runtime.pyx", line 265, in cupy_backends.cuda.api.runtime.check_status
E       raise CUDARuntimeError(status)
E   cupy_backends.cuda.api.runtime.CUDARuntimeError: hipErrorUnknown: hipErrorUnknown

cupy_backends/cuda/api/runtime.pyx:265: AssertionError
----------------------------- Captured stderr call -----------------------------
Traceback (most recent call last):
  File "cupy_backends/cuda/api/runtime.pyx", line 644, in cupy_backends.cuda.api.runtime.freeArray
    check_status(status)
  File "cupy_backends/cuda/api/runtime.pyx", line 265, in cupy_backends.cuda.api.runtime.check_status
    raise CUDARuntimeError(status)
cupy_backends.cuda.api.runtime.CUDARuntimeError: hipErrorUnknown: hipErrorUnknown
_ TestAffineTransformTextureMemory.test_affine_transform_texture_memory[_param_6_{mode='constant', order=0, output=None, output_shape=None, shape=(10, 20), theta=180}] _

self = <<cupyx_tests.scipy_tests.ndimage_tests.test_interpolation.TestAffineTransformTextureMemory object at 0x7fab3723c880>  parameter: {'mode': 'constant', 'order': 0, 'output': None, 'output_shape': None, 'shape': (10, 20), 'theta': 180}>
xp = <module 'cupy' from '/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.hXnTrEAC7u/cupy/cupy/__init__.py'>
scp = <module 'cupyx.scipy' from '/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.hXnTrEAC7u/cupy/cupyx/scipy/__init__.py'>

    @testing.numpy_cupy_allclose(atol=0.1, scipy_name='scp')
    def test_affine_transform_texture_memory(self, xp, scp):
        a = xp.ones(self.shape, dtype=xp.float32)
        center = numpy.divide(numpy.subtract(self.shape, 1), 2)
    
        if len(self.shape) == 2:
            matrix = self._2d_rotation_matrix(self.theta, center)
        elif len(self.shape) == 3:
            matrix = self._3d_rotation_matrix(self.theta, center)
        else:
            return pytest.xfail('Unsupported shape')
    
        if self.output == 'empty':
            output = xp.empty(self.shape, dtype=xp.float32)
            if self.output_shape:
                return pytest.skip('This combination is tested in '
                                   'test_invalid_texture_arguments')
        else:
            output = self.output
    
        if self.output_shape:
            output_shape = (self.output_shape, ) * len(self.shape)
        else:
            output_shape = self.output_shape
    
        if xp == cupy:
            m = cupyx.scipy.ndimage.affine_transform
            matrix = cupy.array(matrix)
>           return m(a, matrix, output_shape=output_shape,
                     output=output, order=self.order,
                     mode=self.mode, texture_memory=True)

tests/cupyx_tests/scipy_tests/ndimage_tests/test_interpolation.py:398: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
cupyx/scipy/ndimage/interpolation.py:376: in affine_transform
    return _texture.affine_transformation(data=input,
cupyx/_texture.py:168: in affine_transformation
    texture_object = _create_texture_object(data,
cupyx/_texture.py:98: in _create_texture_object
    array = texture.CUDAarray(texture_fmt, *data.shape[::-1])
cupy/cuda/texture.pyx:296: in cupy.cuda.texture.CUDAarray.__init__
    self.ptr = runtime.malloc3DArray(desc.ptr, width, height, depth,
cupy_backends/cuda/api/runtime.pyx:593: in cupy_backends.cuda.api.runtime.malloc3DArray
    check_status(status)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

>   raise CUDARuntimeError(status)
E   AssertionError: Only cupy raises error
E   
E   Traceback (most recent call last):
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.hXnTrEAC7u/cupy/cupy/testing/_helper.py", line 47, in _call_func
E       result = impl(self, *args, **kw)
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.hXnTrEAC7u/cupy/tests/cupyx_tests/scipy_tests/ndimage_tests/test_interpolation.py", line 398, in test_affine_transform_texture_memory
E       return m(a, matrix, output_shape=output_shape,
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.hXnTrEAC7u/cupy/cupyx/scipy/ndimage/interpolation.py", line 376, in affine_transform
E       return _texture.affine_transformation(data=input,
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.hXnTrEAC7u/cupy/cupyx/_texture.py", line 168, in affine_transformation
E       texture_object = _create_texture_object(data,
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.hXnTrEAC7u/cupy/cupyx/_texture.py", line 98, in _create_texture_object
E       array = texture.CUDAarray(texture_fmt, *data.shape[::-1])
E     File "cupy/cuda/texture.pyx", line 296, in cupy.cuda.texture.CUDAarray.__init__
E       self.ptr = runtime.malloc3DArray(desc.ptr, width, height, depth,
E     File "cupy_backends/cuda/api/runtime.pyx", line 593, in cupy_backends.cuda.api.runtime.malloc3DArray
E       check_status(status)
E     File "cupy_backends/cuda/api/runtime.pyx", line 265, in cupy_backends.cuda.api.runtime.check_status
E       raise CUDARuntimeError(status)
E   cupy_backends.cuda.api.runtime.CUDARuntimeError: hipErrorUnknown: hipErrorUnknown

cupy_backends/cuda/api/runtime.pyx:265: AssertionError
----------------------------- Captured stderr call -----------------------------
Traceback (most recent call last):
  File "cupy_backends/cuda/api/runtime.pyx", line 644, in cupy_backends.cuda.api.runtime.freeArray
    check_status(status)
  File "cupy_backends/cuda/api/runtime.pyx", line 265, in cupy_backends.cuda.api.runtime.check_status
    raise CUDARuntimeError(status)
cupy_backends.cuda.api.runtime.CUDARuntimeError: hipErrorUnknown: hipErrorUnknown
_ TestAffineTransformTextureMemory.test_affine_transform_texture_memory[_param_7_{mode='constant', order=0, output=None, output_shape=None, shape=(10, 20), theta=270}] _

self = <<cupyx_tests.scipy_tests.ndimage_tests.test_interpolation.TestAffineTransformTextureMemory object at 0x7fab37292520>  parameter: {'mode': 'constant', 'order': 0, 'output': None, 'output_shape': None, 'shape': (10, 20), 'theta': 270}>
xp = <module 'cupy' from '/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.hXnTrEAC7u/cupy/cupy/__init__.py'>
scp = <module 'cupyx.scipy' from '/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.hXnTrEAC7u/cupy/cupyx/scipy/__init__.py'>

    @testing.numpy_cupy_allclose(atol=0.1, scipy_name='scp')
    def test_affine_transform_texture_memory(self, xp, scp):
        a = xp.ones(self.shape, dtype=xp.float32)
        center = numpy.divide(numpy.subtract(self.shape, 1), 2)
    
        if len(self.shape) == 2:
            matrix = self._2d_rotation_matrix(self.theta, center)
        elif len(self.shape) == 3:
            matrix = self._3d_rotation_matrix(self.theta, center)
        else:
            return pytest.xfail('Unsupported shape')
    
        if self.output == 'empty':
            output = xp.empty(self.shape, dtype=xp.float32)
            if self.output_shape:
                return pytest.skip('This combination is tested in '
                                   'test_invalid_texture_arguments')
        else:
            output = self.output
    
        if self.output_shape:
            output_shape = (self.output_shape, ) * len(self.shape)
        else:
            output_shape = self.output_shape
    
        if xp == cupy:
            m = cupyx.scipy.ndimage.affine_transform
            matrix = cupy.array(matrix)
>           return m(a, matrix, output_shape=output_shape,
                     output=output, order=self.order,
                     mode=self.mode, texture_memory=True)

tests/cupyx_tests/scipy_tests/ndimage_tests/test_interpolation.py:398: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
cupyx/scipy/ndimage/interpolation.py:376: in affine_transform
    return _texture.affine_transformation(data=input,
cupyx/_texture.py:168: in affine_transformation
    texture_object = _create_texture_object(data,
cupyx/_texture.py:98: in _create_texture_object
    array = texture.CUDAarray(texture_fmt, *data.shape[::-1])
cupy/cuda/texture.pyx:296: in cupy.cuda.texture.CUDAarray.__init__
    self.ptr = runtime.malloc3DArray(desc.ptr, width, height, depth,
cupy_backends/cuda/api/runtime.pyx:593: in cupy_backends.cuda.api.runtime.malloc3DArray
    check_status(status)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

>   raise CUDARuntimeError(status)
E   AssertionError: Only cupy raises error
E   
E   Traceback (most recent call last):
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.hXnTrEAC7u/cupy/cupy/testing/_helper.py", line 47, in _call_func
E       result = impl(self, *args, **kw)
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.hXnTrEAC7u/cupy/tests/cupyx_tests/scipy_tests/ndimage_tests/test_interpolation.py", line 398, in test_affine_transform_texture_memory
E       return m(a, matrix, output_shape=output_shape,
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.hXnTrEAC7u/cupy/cupyx/scipy/ndimage/interpolation.py", line 376, in affine_transform
E       return _texture.affine_transformation(data=input,
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.hXnTrEAC7u/cupy/cupyx/_texture.py", line 168, in affine_transformation
E       texture_object = _create_texture_object(data,
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.hXnTrEAC7u/cupy/cupyx/_texture.py", line 98, in _create_texture_object
E       array = texture.CUDAarray(texture_fmt, *data.shape[::-1])
E     File "cupy/cuda/texture.pyx", line 296, in cupy.cuda.texture.CUDAarray.__init__
E       self.ptr = runtime.malloc3DArray(desc.ptr, width, height, depth,
E     File "cupy_backends/cuda/api/runtime.pyx", line 593, in cupy_backends.cuda.api.runtime.malloc3DArray
E       check_status(status)
E     File "cupy_backends/cuda/api/runtime.pyx", line 265, in cupy_backends.cuda.api.runtime.check_status
E       raise CUDARuntimeError(status)
E   cupy_backends.cuda.api.runtime.CUDARuntimeError: hipErrorUnknown: hipErrorUnknown

cupy_backends/cuda/api/runtime.pyx:265: AssertionError
----------------------------- Captured stderr call -----------------------------
Traceback (most recent call last):
  File "cupy_backends/cuda/api/runtime.pyx", line 644, in cupy_backends.cuda.api.runtime.freeArray
    check_status(status)
  File "cupy_backends/cuda/api/runtime.pyx", line 265, in cupy_backends.cuda.api.runtime.check_status
    raise CUDARuntimeError(status)
cupy_backends.cuda.api.runtime.CUDARuntimeError: hipErrorUnknown: hipErrorUnknown
_ TestAffineTransformTextureMemory.test_affine_transform_texture_memory[_param_8_{mode='constant', order=0, output=None, output_shape=None, shape=(10, 10, 10), theta=0}] _

self = <<cupyx_tests.scipy_tests.ndimage_tests.test_interpolation.TestAffineTransformTextureMemory object at 0x7fab370c73a0>  parameter: {'mode': 'constant', 'order': 0, 'output': None, 'output_shape': None, 'shape': (10, 10, 10), 'theta': 0}>
xp = <module 'cupy' from '/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.hXnTrEAC7u/cupy/cupy/__init__.py'>
scp = <module 'cupyx.scipy' from '/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.hXnTrEAC7u/cupy/cupyx/scipy/__init__.py'>

    @testing.numpy_cupy_allclose(atol=0.1, scipy_name='scp')
    def test_affine_transform_texture_memory(self, xp, scp):
        a = xp.ones(self.shape, dtype=xp.float32)
        center = numpy.divide(numpy.subtract(self.shape, 1), 2)
    
        if len(self.shape) == 2:
            matrix = self._2d_rotation_matrix(self.theta, center)
        elif len(self.shape) == 3:
            matrix = self._3d_rotation_matrix(self.theta, center)
        else:
            return pytest.xfail('Unsupported shape')
    
        if self.output == 'empty':
            output = xp.empty(self.shape, dtype=xp.float32)
            if self.output_shape:
                return pytest.skip('This combination is tested in '
                                   'test_invalid_texture_arguments')
        else:
            output = self.output
    
        if self.output_shape:
            output_shape = (self.output_shape, ) * len(self.shape)
        else:
            output_shape = self.output_shape
    
        if xp == cupy:
            m = cupyx.scipy.ndimage.affine_transform
            matrix = cupy.array(matrix)
>           return m(a, matrix, output_shape=output_shape,
                     output=output, order=self.order,
                     mode=self.mode, texture_memory=True)

tests/cupyx_tests/scipy_tests/ndimage_tests/test_interpolation.py:398: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
cupyx/scipy/ndimage/interpolation.py:376: in affine_transform
    return _texture.affine_transformation(data=input,
cupyx/_texture.py:168: in affine_transformation
    texture_object = _create_texture_object(data,
cupyx/_texture.py:98: in _create_texture_object
    array = texture.CUDAarray(texture_fmt, *data.shape[::-1])
cupy/cuda/texture.pyx:296: in cupy.cuda.texture.CUDAarray.__init__
    self.ptr = runtime.malloc3DArray(desc.ptr, width, height, depth,
cupy_backends/cuda/api/runtime.pyx:593: in cupy_backends.cuda.api.runtime.malloc3DArray
    check_status(status)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

>   raise CUDARuntimeError(status)
E   AssertionError: Only cupy raises error
E   
E   Traceback (most recent call last):
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.hXnTrEAC7u/cupy/cupy/testing/_helper.py", line 47, in _call_func
E       result = impl(self, *args, **kw)
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.hXnTrEAC7u/cupy/tests/cupyx_tests/scipy_tests/ndimage_tests/test_interpolation.py", line 398, in test_affine_transform_texture_memory
E       return m(a, matrix, output_shape=output_shape,
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.hXnTrEAC7u/cupy/cupyx/scipy/ndimage/interpolation.py", line 376, in affine_transform
E       return _texture.affine_transformation(data=input,
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.hXnTrEAC7u/cupy/cupyx/_texture.py", line 168, in affine_transformation
E       texture_object = _create_texture_object(data,
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.hXnTrEAC7u/cupy/cupyx/_texture.py", line 98, in _create_texture_object
E       array = texture.CUDAarray(texture_fmt, *data.shape[::-1])
E     File "cupy/cuda/texture.pyx", line 296, in cupy.cuda.texture.CUDAarray.__init__
E       self.ptr = runtime.malloc3DArray(desc.ptr, width, height, depth,
E     File "cupy_backends/cuda/api/runtime.pyx", line 593, in cupy_backends.cuda.api.runtime.malloc3DArray
E       check_status(status)
E     File "cupy_backends/cuda/api/runtime.pyx", line 265, in cupy_backends.cuda.api.runtime.check_status
E       raise CUDARuntimeError(status)
E   cupy_backends.cuda.api.runtime.CUDARuntimeError: hipErrorUnknown: hipErrorUnknown

cupy_backends/cuda/api/runtime.pyx:265: AssertionError
----------------------------- Captured stderr call -----------------------------
Traceback (most recent call last):
  File "cupy_backends/cuda/api/runtime.pyx", line 644, in cupy_backends.cuda.api.runtime.freeArray
    check_status(status)
  File "cupy_backends/cuda/api/runtime.pyx", line 265, in cupy_backends.cuda.api.runtime.check_status
    raise CUDARuntimeError(status)
cupy_backends.cuda.api.runtime.CUDARuntimeError: hipErrorUnknown: hipErrorUnknown
_ TestAffineTransformTextureMemory.test_affine_transform_texture_memory[_param_9_{mode='constant', order=0, output=None, output_shape=None, shape=(10, 10, 10), theta=90}] _

self = <<cupyx_tests.scipy_tests.ndimage_tests.test_interpolation.TestAffineTransformTextureMemory object at 0x7fab37126910>  parameter: {'mode': 'constant', 'order': 0, 'output': None, 'output_shape': None, 'shape': (10, 10, 10), 'theta': 90}>
xp = <module 'cupy' from '/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.hXnTrEAC7u/cupy/cupy/__init__.py'>
scp = <module 'cupyx.scipy' from '/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.hXnTrEAC7u/cupy/cupyx/scipy/__init__.py'>

    @testing.numpy_cupy_allclose(atol=0.1, scipy_name='scp')
    def test_affine_transform_texture_memory(self, xp, scp):
        a = xp.ones(self.shape, dtype=xp.float32)
        center = numpy.divide(numpy.subtract(self.shape, 1), 2)
    
        if len(self.shape) == 2:
            matrix = self._2d_rotation_matrix(self.theta, center)
        elif len(self.shape) == 3:
            matrix = self._3d_rotation_matrix(self.theta, center)
        else:
            return pytest.xfail('Unsupported shape')
    
        if self.output == 'empty':
            output = xp.empty(self.shape, dtype=xp.float32)
            if self.output_shape:
                return pytest.skip('This combination is tested in '
                                   'test_invalid_texture_arguments')
        else:
            output = self.output
    
        if self.output_shape:
            output_shape = (self.output_shape, ) * len(self.shape)
        else:
            output_shape = self.output_shape
    
        if xp == cupy:
            m = cupyx.scipy.ndimage.affine_transform
            matrix = cupy.array(matrix)
>           return m(a, matrix, output_shape=output_shape,
                     output=output, order=self.order,
                     mode=self.mode, texture_memory=True)

tests/cupyx_tests/scipy_tests/ndimage_tests/test_interpolation.py:398: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
cupyx/scipy/ndimage/interpolation.py:376: in affine_transform
    return _texture.affine_transformation(data=input,
cupyx/_texture.py:168: in affine_transformation
    texture_object = _create_texture_object(data,
cupyx/_texture.py:98: in _create_texture_object
    array = texture.CUDAarray(texture_fmt, *data.shape[::-1])
cupy/cuda/texture.pyx:296: in cupy.cuda.texture.CUDAarray.__init__
    self.ptr = runtime.malloc3DArray(desc.ptr, width, height, depth,
cupy_backends/cuda/api/runtime.pyx:593: in cupy_backends.cuda.api.runtime.malloc3DArray
    check_status(status)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

>   raise CUDARuntimeError(status)
E   AssertionError: Only cupy raises error
E   
E   Traceback (most recent call last):
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.hXnTrEAC7u/cupy/cupy/testing/_helper.py", line 47, in _call_func
E       result = impl(self, *args, **kw)
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.hXnTrEAC7u/cupy/tests/cupyx_tests/scipy_tests/ndimage_tests/test_interpolation.py", line 398, in test_affine_transform_texture_memory
E       return m(a, matrix, output_shape=output_shape,
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.hXnTrEAC7u/cupy/cupyx/scipy/ndimage/interpolation.py", line 376, in affine_transform
E       return _texture.affine_transformation(data=input,
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.hXnTrEAC7u/cupy/cupyx/_texture.py", line 168, in affine_transformation
E       texture_object = _create_texture_object(data,
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.hXnTrEAC7u/cupy/cupyx/_texture.py", line 98, in _create_texture_object
E       array = texture.CUDAarray(texture_fmt, *data.shape[::-1])
E     File "cupy/cuda/texture.pyx", line 296, in cupy.cuda.texture.CUDAarray.__init__
E       self.ptr = runtime.malloc3DArray(desc.ptr, width, height, depth,
E     File "cupy_backends/cuda/api/runtime.pyx", line 593, in cupy_backends.cuda.api.runtime.malloc3DArray
E       check_status(status)
E     File "cupy_backends/cuda/api/runtime.pyx", line 265, in cupy_backends.cuda.api.runtime.check_status
E       raise CUDARuntimeError(status)
E   cupy_backends.cuda.api.runtime.CUDARuntimeError: hipErrorUnknown: hipErrorUnknown

cupy_backends/cuda/api/runtime.pyx:265: AssertionError
----------------------------- Captured stderr call -----------------------------
Traceback (most recent call last):
  File "cupy_backends/cuda/api/runtime.pyx", line 644, in cupy_backends.cuda.api.runtime.freeArray
    check_status(status)
  File "cupy_backends/cuda/api/runtime.pyx", line 265, in cupy_backends.cuda.api.runtime.check_status
    raise CUDARuntimeError(status)
cupy_backends.cuda.api.runtime.CUDARuntimeError: hipErrorUnknown: hipErrorUnknown
_ TestAffineTransformTextureMemory.test_affine_transform_texture_memory[_param_10_{mode='constant', order=0, output=None, output_shape=None, shape=(10, 10, 10), theta=180}] _

self = <<cupyx_tests.scipy_tests.ndimage_tests.test_interpolation.TestAffineTransformTextureMemory object at 0x7fab37234250>  parameter: {'mode': 'constant', 'order': 0, 'output': None, 'output_shape': None, 'shape': (10, 10, 10), 'theta': 180}>
xp = <module 'cupy' from '/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.hXnTrEAC7u/cupy/cupy/__init__.py'>
scp = <module 'cupyx.scipy' from '/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.hXnTrEAC7u/cupy/cupyx/scipy/__init__.py'>

    @testing.numpy_cupy_allclose(atol=0.1, scipy_name='scp')
    def test_affine_transform_texture_memory(self, xp, scp):
        a = xp.ones(self.shape, dtype=xp.float32)
        center = numpy.divide(numpy.subtract(self.shape, 1), 2)
    
        if len(self.shape) == 2:
            matrix = self._2d_rotation_matrix(self.theta, center)
        elif len(self.shape) == 3:
            matrix = self._3d_rotation_matrix(self.theta, center)
        else:
            return pytest.xfail('Unsupported shape')
    
        if self.output == 'empty':
            output = xp.empty(self.shape, dtype=xp.float32)
            if self.output_shape:
                return pytest.skip('This combination is tested in '
                                   'test_invalid_texture_arguments')
        else:
            output = self.output
    
        if self.output_shape:
            output_shape = (self.output_shape, ) * len(self.shape)
        else:
            output_shape = self.output_shape
    
        if xp == cupy:
            m = cupyx.scipy.ndimage.affine_transform
            matrix = cupy.array(matrix)
>           return m(a, matrix, output_shape=output_shape,
                     output=output, order=self.order,
                     mode=self.mode, texture_memory=True)

tests/cupyx_tests/scipy_tests/ndimage_tests/test_interpolation.py:398: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
cupyx/scipy/ndimage/interpolation.py:376: in affine_transform
    return _texture.affine_transformation(data=input,
cupyx/_texture.py:168: in affine_transformation
    texture_object = _create_texture_object(data,
cupyx/_texture.py:98: in _create_texture_object
    array = texture.CUDAarray(texture_fmt, *data.shape[::-1])
cupy/cuda/texture.pyx:296: in cupy.cuda.texture.CUDAarray.__init__
    self.ptr = runtime.malloc3DArray(desc.ptr, width, height, depth,
cupy_backends/cuda/api/runtime.pyx:593: in cupy_backends.cuda.api.runtime.malloc3DArray
    check_status(status)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

>   raise CUDARuntimeError(status)
E   AssertionError: Only cupy raises error
E   
E   Traceback (most recent call last):
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.hXnTrEAC7u/cupy/cupy/testing/_helper.py", line 47, in _call_func
E       result = impl(self, *args, **kw)
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.hXnTrEAC7u/cupy/tests/cupyx_tests/scipy_tests/ndimage_tests/test_interpolation.py", line 398, in test_affine_transform_texture_memory
E       return m(a, matrix, output_shape=output_shape,
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.hXnTrEAC7u/cupy/cupyx/scipy/ndimage/interpolation.py", line 376, in affine_transform
E       return _texture.affine_transformation(data=input,
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.hXnTrEAC7u/cupy/cupyx/_texture.py", line 168, in affine_transformation
E       texture_object = _create_texture_object(data,
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.hXnTrEAC7u/cupy/cupyx/_texture.py", line 98, in _create_texture_object
E       array = texture.CUDAarray(texture_fmt, *data.shape[::-1])
E     File "cupy/cuda/texture.pyx", line 296, in cupy.cuda.texture.CUDAarray.__init__
E       self.ptr = runtime.malloc3DArray(desc.ptr, width, height, depth,
E     File "cupy_backends/cuda/api/runtime.pyx", line 593, in cupy_backends.cuda.api.runtime.malloc3DArray
E       check_status(status)
E     File "cupy_backends/cuda/api/runtime.pyx", line 265, in cupy_backends.cuda.api.runtime.check_status
E       raise CUDARuntimeError(status)
E   cupy_backends.cuda.api.runtime.CUDARuntimeError: hipErrorUnknown: hipErrorUnknown

cupy_backends/cuda/api/runtime.pyx:265: AssertionError
----------------------------- Captured stderr call -----------------------------
Traceback (most recent call last):
  File "cupy_backends/cuda/api/runtime.pyx", line 644, in cupy_backends.cuda.api.runtime.freeArray
    check_status(status)
  File "cupy_backends/cuda/api/runtime.pyx", line 265, in cupy_backends.cuda.api.runtime.check_status
    raise CUDARuntimeError(status)
cupy_backends.cuda.api.runtime.CUDARuntimeError: hipErrorUnknown: hipErrorUnknown
_ TestAffineTransformTextureMemory.test_affine_transform_texture_memory[_param_11_{mode='constant', order=0, output=None, output_shape=None, shape=(10, 10, 10), theta=270}] _

self = <<cupyx_tests.scipy_tests.ndimage_tests.test_interpolation.TestAffineTransformTextureMemory object at 0x7fab37126b50>  parameter: {'mode': 'constant', 'order': 0, 'output': None, 'output_shape': None, 'shape': (10, 10, 10), 'theta': 270}>
xp = <module 'cupy' from '/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.hXnTrEAC7u/cupy/cupy/__init__.py'>
scp = <module 'cupyx.scipy' from '/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.hXnTrEAC7u/cupy/cupyx/scipy/__init__.py'>

    @testing.numpy_cupy_allclose(atol=0.1, scipy_name='scp')
    def test_affine_transform_texture_memory(self, xp, scp):
        a = xp.ones(self.shape, dtype=xp.float32)
        center = numpy.divide(numpy.subtract(self.shape, 1), 2)
    
        if len(self.shape) == 2:
            matrix = self._2d_rotation_matrix(self.theta, center)
        elif len(self.shape) == 3:
            matrix = self._3d_rotation_matrix(self.theta, center)
        else:
            return pytest.xfail('Unsupported shape')
    
        if self.output == 'empty':
            output = xp.empty(self.shape, dtype=xp.float32)
            if self.output_shape:
                return pytest.skip('This combination is tested in '
                                   'test_invalid_texture_arguments')
        else:
            output = self.output
    
        if self.output_shape:
            output_shape = (self.output_shape, ) * len(self.shape)
        else:
            output_shape = self.output_shape
    
        if xp == cupy:
            m = cupyx.scipy.ndimage.affine_transform
            matrix = cupy.array(matrix)
>           return m(a, matrix, output_shape=output_shape,
                     output=output, order=self.order,
                     mode=self.mode, texture_memory=True)

tests/cupyx_tests/scipy_tests/ndimage_tests/test_interpolation.py:398: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
cupyx/scipy/ndimage/interpolation.py:376: in affine_transform
    return _texture.affine_transformation(data=input,
cupyx/_texture.py:168: in affine_transformation
    texture_object = _create_texture_object(data,
cupyx/_texture.py:98: in _create_texture_object
    array = texture.CUDAarray(texture_fmt, *data.shape[::-1])
cupy/cuda/texture.pyx:296: in cupy.cuda.texture.CUDAarray.__init__
    self.ptr = runtime.malloc3DArray(desc.ptr, width, height, depth,
cupy_backends/cuda/api/runtime.pyx:593: in cupy_backends.cuda.api.runtime.malloc3DArray
    check_status(status)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

>   raise CUDARuntimeError(status)
E   AssertionError: Only cupy raises error
E   
E   Traceback (most recent call last):
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.hXnTrEAC7u/cupy/cupy/testing/_helper.py", line 47, in _call_func
E       result = impl(self, *args, **kw)
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.hXnTrEAC7u/cupy/tests/cupyx_tests/scipy_tests/ndimage_tests/test_interpolation.py", line 398, in test_affine_transform_texture_memory
E       return m(a, matrix, output_shape=output_shape,
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.hXnTrEAC7u/cupy/cupyx/scipy/ndimage/interpolation.py", line 376, in affine_transform
E       return _texture.affine_transformation(data=input,
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.hXnTrEAC7u/cupy/cupyx/_texture.py", line 168, in affine_transformation
E       texture_object = _create_texture_object(data,
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.hXnTrEAC7u/cupy/cupyx/_texture.py", line 98, in _create_texture_object
E       array = texture.CUDAarray(texture_fmt, *data.shape[::-1])
E     File "cupy/cuda/texture.pyx", line 296, in cupy.cuda.texture.CUDAarray.__init__
E       self.ptr = runtime.malloc3DArray(desc.ptr, width, height, depth,
E     File "cupy_backends/cuda/api/runtime.pyx", line 593, in cupy_backends.cuda.api.runtime.malloc3DArray
E       check_status(status)
E     File "cupy_backends/cuda/api/runtime.pyx", line 265, in cupy_backends.cuda.api.runtime.check_status
E       raise CUDARuntimeError(status)
E   cupy_backends.cuda.api.runtime.CUDARuntimeError: hipErrorUnknown: hipErrorUnknown

cupy_backends/cuda/api/runtime.pyx:265: AssertionError
----------------------------- Captured stderr call -----------------------------
Traceback (most recent call last):
  File "cupy_backends/cuda/api/runtime.pyx", line 644, in cupy_backends.cuda.api.runtime.freeArray
    check_status(status)
  File "cupy_backends/cuda/api/runtime.pyx", line 265, in cupy_backends.cuda.api.runtime.check_status
    raise CUDARuntimeError(status)
cupy_backends.cuda.api.runtime.CUDARuntimeError: hipErrorUnknown: hipErrorUnknown
_ TestAffineTransformTextureMemory.test_affine_transform_texture_memory[_param_12_{mode='constant', order=0, output=None, output_shape=None, shape=(10, 20, 30), theta=0}] _

self = <<cupyx_tests.scipy_tests.ndimage_tests.test_interpolation.TestAffineTransformTextureMemory object at 0x7fab386294f0>  parameter: {'mode': 'constant', 'order': 0, 'output': None, 'output_shape': None, 'shape': (10, 20, 30), 'theta': 0}>
xp = <module 'cupy' from '/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.hXnTrEAC7u/cupy/cupy/__init__.py'>
scp = <module 'cupyx.scipy' from '/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.hXnTrEAC7u/cupy/cupyx/scipy/__init__.py'>

    @testing.numpy_cupy_allclose(atol=0.1, scipy_name='scp')
    def test_affine_transform_texture_memory(self, xp, scp):
        a = xp.ones(self.shape, dtype=xp.float32)
        center = numpy.divide(numpy.subtract(self.shape, 1), 2)
    
        if len(self.shape) == 2:
            matrix = self._2d_rotation_matrix(self.theta, center)
        elif len(self.shape) == 3:
            matrix = self._3d_rotation_matrix(self.theta, center)
        else:
            return pytest.xfail('Unsupported shape')
    
        if self.output == 'empty':
            output = xp.empty(self.shape, dtype=xp.float32)
            if self.output_shape:
                return pytest.skip('This combination is tested in '
                                   'test_invalid_texture_arguments')
        else:
            output = self.output
    
        if self.output_shape:
            output_shape = (self.output_shape, ) * len(self.shape)
        else:
            output_shape = self.output_shape
    
        if xp == cupy:
            m = cupyx.scipy.ndimage.affine_transform
            matrix = cupy.array(matrix)
>           return m(a, matrix, output_shape=output_shape,
                     output=output, order=self.order,
                     mode=self.mode, texture_memory=True)

tests/cupyx_tests/scipy_tests/ndimage_tests/test_interpolation.py:398: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
cupyx/scipy/ndimage/interpolation.py:376: in affine_transform
    return _texture.affine_transformation(data=input,
cupyx/_texture.py:168: in affine_transformation
    texture_object = _create_texture_object(data,
cupyx/_texture.py:98: in _create_texture_object
    array = texture.CUDAarray(texture_fmt, *data.shape[::-1])
cupy/cuda/texture.pyx:296: in cupy.cuda.texture.CUDAarray.__init__
    self.ptr = runtime.malloc3DArray(desc.ptr, width, height, depth,
cupy_backends/cuda/api/runtime.pyx:593: in cupy_backends.cuda.api.runtime.malloc3DArray
    check_status(status)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

>   raise CUDARuntimeError(status)
E   AssertionError: Only cupy raises error
E   
E   Traceback (most recent call last):
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.hXnTrEAC7u/cupy/cupy/testing/_helper.py", line 47, in _call_func
E       result = impl(self, *args, **kw)
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.hXnTrEAC7u/cupy/tests/cupyx_tests/scipy_tests/ndimage_tests/test_interpolation.py", line 398, in test_affine_transform_texture_memory
E       return m(a, matrix, output_shape=output_shape,
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.hXnTrEAC7u/cupy/cupyx/scipy/ndimage/interpolation.py", line 376, in affine_transform
E       return _texture.affine_transformation(data=input,
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.hXnTrEAC7u/cupy/cupyx/_texture.py", line 168, in affine_transformation
E       texture_object = _create_texture_object(data,
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.hXnTrEAC7u/cupy/cupyx/_texture.py", line 98, in _create_texture_object
E       array = texture.CUDAarray(texture_fmt, *data.shape[::-1])
E     File "cupy/cuda/texture.pyx", line 296, in cupy.cuda.texture.CUDAarray.__init__
E       self.ptr = runtime.malloc3DArray(desc.ptr, width, height, depth,
E     File "cupy_backends/cuda/api/runtime.pyx", line 593, in cupy_backends.cuda.api.runtime.malloc3DArray
E       check_status(status)
E     File "cupy_backends/cuda/api/runtime.pyx", line 265, in cupy_backends.cuda.api.runtime.check_status
E       raise CUDARuntimeError(status)
E   cupy_backends.cuda.api.runtime.CUDARuntimeError: hipErrorUnknown: hipErrorUnknown

cupy_backends/cuda/api/runtime.pyx:265: AssertionError
----------------------------- Captured stderr call -----------------------------
Traceback (most recent call last):
  File "cupy_backends/cuda/api/runtime.pyx", line 644, in cupy_backends.cuda.api.runtime.freeArray
    check_status(status)
  File "cupy_backends/cuda/api/runtime.pyx", line 265, in cupy_backends.cuda.api.runtime.check_status
    raise CUDARuntimeError(status)
cupy_backends.cuda.api.runtime.CUDARuntimeError: hipErrorUnknown: hipErrorUnknown
_ TestAffineTransformTextureMemory.test_affine_transform_texture_memory[_param_13_{mode='constant', order=0, output=None, output_shape=None, shape=(10, 20, 30), theta=90}] _

self = <<cupyx_tests.scipy_tests.ndimage_tests.test_interpolation.TestAffineTransformTextureMemory object at 0x7fab38ea2550>  parameter: {'mode': 'constant', 'order': 0, 'output': None, 'output_shape': None, 'shape': (10, 20, 30), 'theta': 90}>
xp = <module 'cupy' from '/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.hXnTrEAC7u/cupy/cupy/__init__.py'>
scp = <module 'cupyx.scipy' from '/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.hXnTrEAC7u/cupy/cupyx/scipy/__init__.py'>

    @testing.numpy_cupy_allclose(atol=0.1, scipy_name='scp')
    def test_affine_transform_texture_memory(self, xp, scp):
        a = xp.ones(self.shape, dtype=xp.float32)
        center = numpy.divide(numpy.subtract(self.shape, 1), 2)
    
        if len(self.shape) == 2:
            matrix = self._2d_rotation_matrix(self.theta, center)
        elif len(self.shape) == 3:
            matrix = self._3d_rotation_matrix(self.theta, center)
        else:
            return pytest.xfail('Unsupported shape')
    
        if self.output == 'empty':
            output = xp.empty(self.shape, dtype=xp.float32)
            if self.output_shape:
                return pytest.skip('This combination is tested in '
                                   'test_invalid_texture_arguments')
        else:
            output = self.output
    
        if self.output_shape:
            output_shape = (self.output_shape, ) * len(self.shape)
        else:
            output_shape = self.output_shape
    
        if xp == cupy:
            m = cupyx.scipy.ndimage.affine_transform
            matrix = cupy.array(matrix)
>           return m(a, matrix, output_shape=output_shape,
                     output=output, order=self.order,
                     mode=self.mode, texture_memory=True)

tests/cupyx_tests/scipy_tests/ndimage_tests/test_interpolation.py:398: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
cupyx/scipy/ndimage/interpolation.py:376: in affine_transform
    return _texture.affine_transformation(data=input,
cupyx/_texture.py:168: in affine_transformation
    texture_object = _create_texture_object(data,
cupyx/_texture.py:98: in _create_texture_object
    array = texture.CUDAarray(texture_fmt, *data.shape[::-1])
cupy/cuda/texture.pyx:296: in cupy.cuda.texture.CUDAarray.__init__
    self.ptr = runtime.malloc3DArray(desc.ptr, width, height, depth,
cupy_backends/cuda/api/runtime.pyx:593: in cupy_backends.cuda.api.runtime.malloc3DArray
    check_status(status)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

>   raise CUDARuntimeError(status)
E   AssertionError: Only cupy raises error
E   
E   Traceback (most recent call last):
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.hXnTrEAC7u/cupy/cupy/testing/_helper.py", line 47, in _call_func
E       result = impl(self, *args, **kw)
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.hXnTrEAC7u/cupy/tests/cupyx_tests/scipy_tests/ndimage_tests/test_interpolation.py", line 398, in test_affine_transform_texture_memory
E       return m(a, matrix, output_shape=output_shape,
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.hXnTrEAC7u/cupy/cupyx/scipy/ndimage/interpolation.py", line 376, in affine_transform
E       return _texture.affine_transformation(data=input,
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.hXnTrEAC7u/cupy/cupyx/_texture.py", line 168, in affine_transformation
E       texture_object = _create_texture_object(data,
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.hXnTrEAC7u/cupy/cupyx/_texture.py", line 98, in _create_texture_object
E       array = texture.CUDAarray(texture_fmt, *data.shape[::-1])
E     File "cupy/cuda/texture.pyx", line 296, in cupy.cuda.texture.CUDAarray.__init__
E       self.ptr = runtime.malloc3DArray(desc.ptr, width, height, depth,
E     File "cupy_backends/cuda/api/runtime.pyx", line 593, in cupy_backends.cuda.api.runtime.malloc3DArray
E       check_status(status)
E     File "cupy_backends/cuda/api/runtime.pyx", line 265, in cupy_backends.cuda.api.runtime.check_status
E       raise CUDARuntimeError(status)
E   cupy_backends.cuda.api.runtime.CUDARuntimeError: hipErrorUnknown: hipErrorUnknown

cupy_backends/cuda/api/runtime.pyx:265: AssertionError
----------------------------- Captured stderr call -----------------------------
Traceback (most recent call last):
  File "cupy_backends/cuda/api/runtime.pyx", line 644, in cupy_backends.cuda.api.runtime.freeArray
    check_status(status)
  File "cupy_backends/cuda/api/runtime.pyx", line 265, in cupy_backends.cuda.api.runtime.check_status
    raise CUDARuntimeError(status)
cupy_backends.cuda.api.runtime.CUDARuntimeError: hipErrorUnknown: hipErrorUnknown
_ TestAffineTransformTextureMemory.test_affine_transform_texture_memory[_param_14_{mode='constant', order=0, output=None, output_shape=None, shape=(10, 20, 30), theta=180}] _

self = <<cupyx_tests.scipy_tests.ndimage_tests.test_interpolation.TestAffineTransformTextureMemory object at 0x7fab3726f790>  parameter: {'mode': 'constant', 'order': 0, 'output': None, 'output_shape': None, 'shape': (10, 20, 30), 'theta': 180}>
xp = <module 'cupy' from '/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.hXnTrEAC7u/cupy/cupy/__init__.py'>
scp = <module 'cupyx.scipy' from '/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.hXnTrEAC7u/cupy/cupyx/scipy/__init__.py'>

    @testing.numpy_cupy_allclose(atol=0.1, scipy_name='scp')
    def test_affine_transform_texture_memory(self, xp, scp):
        a = xp.ones(self.shape, dtype=xp.float32)
        center = numpy.divide(numpy.subtract(self.shape, 1), 2)
    
        if len(self.shape) == 2:
            matrix = self._2d_rotation_matrix(self.theta, center)
        elif len(self.shape) == 3:
            matrix = self._3d_rotation_matrix(self.theta, center)
        else:
            return pytest.xfail('Unsupported shape')
    
        if self.output == 'empty':
            output = xp.empty(self.shape, dtype=xp.float32)
            if self.output_shape:
                return pytest.skip('This combination is tested in '
                                   'test_invalid_texture_arguments')
        else:
            output = self.output
    
        if self.output_shape:
            output_shape = (self.output_shape, ) * len(self.shape)
        else:
            output_shape = self.output_shape
    
        if xp == cupy:
            m = cupyx.scipy.ndimage.affine_transform
            matrix = cupy.array(matrix)
>           return m(a, matrix, output_shape=output_shape,
                     output=output, order=self.order,
                     mode=self.mode, texture_memory=True)

tests/cupyx_tests/scipy_tests/ndimage_tests/test_interpolation.py:398: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
cupyx/scipy/ndimage/interpolation.py:376: in affine_transform
    return _texture.affine_transformation(data=input,
cupyx/_texture.py:168: in affine_transformation
    texture_object = _create_texture_object(data,
cupyx/_texture.py:98: in _create_texture_object
    array = texture.CUDAarray(texture_fmt, *data.shape[::-1])
cupy/cuda/texture.pyx:296: in cupy.cuda.texture.CUDAarray.__init__
    self.ptr = runtime.malloc3DArray(desc.ptr, width, height, depth,
cupy_backends/cuda/api/runtime.pyx:593: in cupy_backends.cuda.api.runtime.malloc3DArray
    check_status(status)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

>   raise CUDARuntimeError(status)
E   AssertionError: Only cupy raises error
E   
E   Traceback (most recent call last):
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.hXnTrEAC7u/cupy/cupy/testing/_helper.py", line 47, in _call_func
E       result = impl(self, *args, **kw)
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.hXnTrEAC7u/cupy/tests/cupyx_tests/scipy_tests/ndimage_tests/test_interpolation.py", line 398, in test_affine_transform_texture_memory
E       return m(a, matrix, output_shape=output_shape,
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.hXnTrEAC7u/cupy/cupyx/scipy/ndimage/interpolation.py", line 376, in affine_transform
E       return _texture.affine_transformation(data=input,
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.hXnTrEAC7u/cupy/cupyx/_texture.py", line 168, in affine_transformation
E       texture_object = _create_texture_object(data,
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.hXnTrEAC7u/cupy/cupyx/_texture.py", line 98, in _create_texture_object
E       array = texture.CUDAarray(texture_fmt, *data.shape[::-1])
E     File "cupy/cuda/texture.pyx", line 296, in cupy.cuda.texture.CUDAarray.__init__
E       self.ptr = runtime.malloc3DArray(desc.ptr, width, height, depth,
E     File "cupy_backends/cuda/api/runtime.pyx", line 593, in cupy_backends.cuda.api.runtime.malloc3DArray
E       check_status(status)
E     File "cupy_backends/cuda/api/runtime.pyx", line 265, in cupy_backends.cuda.api.runtime.check_status
E       raise CUDARuntimeError(status)
E   cupy_backends.cuda.api.runtime.CUDARuntimeError: hipErrorUnknown: hipErrorUnknown

cupy_backends/cuda/api/runtime.pyx:265: AssertionError
----------------------------- Captured stderr call -----------------------------
Traceback (most recent call last):
  File "cupy_backends/cuda/api/runtime.pyx", line 644, in cupy_backends.cuda.api.runtime.freeArray
    check_status(status)
  File "cupy_backends/cuda/api/runtime.pyx", line 265, in cupy_backends.cuda.api.runtime.check_status
    raise CUDARuntimeError(status)
cupy_backends.cuda.api.runtime.CUDARuntimeError: hipErrorUnknown: hipErrorUnknown
_ TestAffineTransformTextureMemory.test_affine_transform_texture_memory[_param_15_{mode='constant', order=0, output=None, output_shape=None, shape=(10, 20, 30), theta=270}] _

self = <<cupyx_tests.scipy_tests.ndimage_tests.test_interpolation.TestAffineTransformTextureMemory object at 0x7fab378d98e0>  parameter: {'mode': 'constant', 'order': 0, 'output': None, 'output_shape': None, 'shape': (10, 20, 30), 'theta': 270}>
xp = <module 'cupy' from '/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.hXnTrEAC7u/cupy/cupy/__init__.py'>
scp = <module 'cupyx.scipy' from '/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.hXnTrEAC7u/cupy/cupyx/scipy/__init__.py'>

    @testing.numpy_cupy_allclose(atol=0.1, scipy_name='scp')
    def test_affine_transform_texture_memory(self, xp, scp):
        a = xp.ones(self.shape, dtype=xp.float32)
        center = numpy.divide(numpy.subtract(self.shape, 1), 2)
    
        if len(self.shape) == 2:
            matrix = self._2d_rotation_matrix(self.theta, center)
        elif len(self.shape) == 3:
            matrix = self._3d_rotation_matrix(self.theta, center)
        else:
            return pytest.xfail('Unsupported shape')
    
        if self.output == 'empty':
            output = xp.empty(self.shape, dtype=xp.float32)
            if self.output_shape:
                return pytest.skip('This combination is tested in '
                                   'test_invalid_texture_arguments')
        else:
            output = self.output
    
        if self.output_shape:
            output_shape = (self.output_shape, ) * len(self.shape)
        else:
            output_shape = self.output_shape
    
        if xp == cupy:
            m = cupyx.scipy.ndimage.affine_transform
            matrix = cupy.array(matrix)
>           return m(a, matrix, output_shape=output_shape,
                     output=output, order=self.order,
                     mode=self.mode, texture_memory=True)

tests/cupyx_tests/scipy_tests/ndimage_tests/test_interpolation.py:398: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
cupyx/scipy/ndimage/interpolation.py:376: in affine_transform
    return _texture.affine_transformation(data=input,
cupyx/_texture.py:168: in affine_transformation
    texture_object = _create_texture_object(data,
cupyx/_texture.py:98: in _create_texture_object
    array = texture.CUDAarray(texture_fmt, *data.shape[::-1])
cupy/cuda/texture.pyx:296: in cupy.cuda.texture.CUDAarray.__init__
    self.ptr = runtime.malloc3DArray(desc.ptr, width, height, depth,
cupy_backends/cuda/api/runtime.pyx:593: in cupy_backends.cuda.api.runtime.malloc3DArray
    check_status(status)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

>   raise CUDARuntimeError(status)
E   AssertionError: Only cupy raises error
E   
E   Traceback (most recent call last):
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.hXnTrEAC7u/cupy/cupy/testing/_helper.py", line 47, in _call_func
E       result = impl(self, *args, **kw)
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.hXnTrEAC7u/cupy/tests/cupyx_tests/scipy_tests/ndimage_tests/test_interpolation.py", line 398, in test_affine_transform_texture_memory
E       return m(a, matrix, output_shape=output_shape,
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.hXnTrEAC7u/cupy/cupyx/scipy/ndimage/interpolation.py", line 376, in affine_transform
E       return _texture.affine_transformation(data=input,
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.hXnTrEAC7u/cupy/cupyx/_texture.py", line 168, in affine_transformation
E       texture_object = _create_texture_object(data,
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.hXnTrEAC7u/cupy/cupyx/_texture.py", line 98, in _create_texture_object
E       array = texture.CUDAarray(texture_fmt, *data.shape[::-1])
E     File "cupy/cuda/texture.pyx", line 296, in cupy.cuda.texture.CUDAarray.__init__
E       self.ptr = runtime.malloc3DArray(desc.ptr, width, height, depth,
E     File "cupy_backends/cuda/api/runtime.pyx", line 593, in cupy_backends.cuda.api.runtime.malloc3DArray
E       check_status(status)
E     File "cupy_backends/cuda/api/runtime.pyx", line 265, in cupy_backends.cuda.api.runtime.check_status
E       raise CUDARuntimeError(status)
E   cupy_backends.cuda.api.runtime.CUDARuntimeError: hipErrorUnknown: hipErrorUnknown

cupy_backends/cuda/api/runtime.pyx:265: AssertionError
----------------------------- Captured stderr call -----------------------------
Traceback (most recent call last):
  File "cupy_backends/cuda/api/runtime.pyx", line 644, in cupy_backends.cuda.api.runtime.freeArray
    check_status(status)
  File "cupy_backends/cuda/api/runtime.pyx", line 265, in cupy_backends.cuda.api.runtime.check_status
    raise CUDARuntimeError(status)
cupy_backends.cuda.api.runtime.CUDARuntimeError: hipErrorUnknown: hipErrorUnknown
_ TestAffineTransformTextureMemory.test_affine_transform_texture_memory[_param_16_{mode='constant', order=0, output=None, output_shape=10, shape=(100, 100), theta=0}] _

self = <<cupyx_tests.scipy_tests.ndimage_tests.test_interpolation.TestAffineTransformTextureMemory object at 0x7fab38795310>  parameter: {'mode': 'constant', 'order': 0, 'output': None, 'output_shape': 10, 'shape': (100, 100), 'theta': 0}>
xp = <module 'cupy' from '/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.hXnTrEAC7u/cupy/cupy/__init__.py'>
scp = <module 'cupyx.scipy' from '/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.hXnTrEAC7u/cupy/cupyx/scipy/__init__.py'>

    @testing.numpy_cupy_allclose(atol=0.1, scipy_name='scp')
    def test_affine_transform_texture_memory(self, xp, scp):
        a = xp.ones(self.shape, dtype=xp.float32)
        center = numpy.divide(numpy.subtract(self.shape, 1), 2)
    
        if len(self.shape) == 2:
            matrix = self._2d_rotation_matrix(self.theta, center)
        elif len(self.shape) == 3:
            matrix = self._3d_rotation_matrix(self.theta, center)
        else:
            return pytest.xfail('Unsupported shape')
    
        if self.output == 'empty':
            output = xp.empty(self.shape, dtype=xp.float32)
            if self.output_shape:
                return pytest.skip('This combination is tested in '
                                   'test_invalid_texture_arguments')
        else:
            output = self.output
    
        if self.output_shape:
            output_shape = (self.output_shape, ) * len(self.shape)
        else:
            output_shape = self.output_shape
    
        if xp == cupy:
            m = cupyx.scipy.ndimage.affine_transform
            matrix = cupy.array(matrix)
>           return m(a, matrix, output_shape=output_shape,
                     output=output, order=self.order,
                     mode=self.mode, texture_memory=True)

tests/cupyx_tests/scipy_tests/ndimage_tests/test_interpolation.py:398: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
cupyx/scipy/ndimage/interpolation.py:376: in affine_transform
    return _texture.affine_transformation(data=input,
cupyx/_texture.py:168: in affine_transformation
    texture_object = _create_texture_object(data,
cupyx/_texture.py:98: in _create_texture_object
    array = texture.CUDAarray(texture_fmt, *data.shape[::-1])
cupy/cuda/texture.pyx:296: in cupy.cuda.texture.CUDAarray.__init__
    self.ptr = runtime.malloc3DArray(desc.ptr, width, height, depth,
cupy_backends/cuda/api/runtime.pyx:593: in cupy_backends.cuda.api.runtime.malloc3DArray
    check_status(status)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

>   raise CUDARuntimeError(status)
E   AssertionError: Only cupy raises error
E   
E   Traceback (most recent call last):
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.hXnTrEAC7u/cupy/cupy/testing/_helper.py", line 47, in _call_func
E       result = impl(self, *args, **kw)
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.hXnTrEAC7u/cupy/tests/cupyx_tests/scipy_tests/ndimage_tests/test_interpolation.py", line 398, in test_affine_transform_texture_memory
E       return m(a, matrix, output_shape=output_shape,
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.hXnTrEAC7u/cupy/cupyx/scipy/ndimage/interpolation.py", line 376, in affine_transform
E       return _texture.affine_transformation(data=input,
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.hXnTrEAC7u/cupy/cupyx/_texture.py", line 168, in affine_transformation
E       texture_object = _create_texture_object(data,
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.hXnTrEAC7u/cupy/cupyx/_texture.py", line 98, in _create_texture_object
E       array = texture.CUDAarray(texture_fmt, *data.shape[::-1])
E     File "cupy/cuda/texture.pyx", line 296, in cupy.cuda.texture.CUDAarray.__init__
E       self.ptr = runtime.malloc3DArray(desc.ptr, width, height, depth,
E     File "cupy_backends/cuda/api/runtime.pyx", line 593, in cupy_backends.cuda.api.runtime.malloc3DArray
E       check_status(status)
E     File "cupy_backends/cuda/api/runtime.pyx", line 265, in cupy_backends.cuda.api.runtime.check_status
E       raise CUDARuntimeError(status)
E   cupy_backends.cuda.api.runtime.CUDARuntimeError: hipErrorUnknown: hipErrorUnknown

cupy_backends/cuda/api/runtime.pyx:265: AssertionError
----------------------------- Captured stderr call -----------------------------
Traceback (most recent call last):
  File "cupy_backends/cuda/api/runtime.pyx", line 644, in cupy_backends.cuda.api.runtime.freeArray
    check_status(status)
  File "cupy_backends/cuda/api/runtime.pyx", line 265, in cupy_backends.cuda.api.runtime.check_status
    raise CUDARuntimeError(status)
cupy_backends.cuda.api.runtime.CUDARuntimeError: hipErrorUnknown: hipErrorUnknown
_ TestAffineTransformTextureMemory.test_affine_transform_texture_memory[_param_17_{mode='constant', order=0, output=None, output_shape=10, shape=(100, 100), theta=90}] _

self = <<cupyx_tests.scipy_tests.ndimage_tests.test_interpolation.TestAffineTransformTextureMemory object at 0x7fab39c97ee0>  parameter: {'mode': 'constant', 'order': 0, 'output': None, 'output_shape': 10, 'shape': (100, 100), 'theta': 90}>
xp = <module 'cupy' from '/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.hXnTrEAC7u/cupy/cupy/__init__.py'>
scp = <module 'cupyx.scipy' from '/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.hXnTrEAC7u/cupy/cupyx/scipy/__init__.py'>

    @testing.numpy_cupy_allclose(atol=0.1, scipy_name='scp')
    def test_affine_transform_texture_memory(self, xp, scp):
        a = xp.ones(self.shape, dtype=xp.float32)
        center = numpy.divide(numpy.subtract(self.shape, 1), 2)
    
        if len(self.shape) == 2:
            matrix = self._2d_rotation_matrix(self.theta, center)
        elif len(self.shape) == 3:
            matrix = self._3d_rotation_matrix(self.theta, center)
        else:
            return pytest.xfail('Unsupported shape')
    
        if self.output == 'empty':
            output = xp.empty(self.shape, dtype=xp.float32)
            if self.output_shape:
                return pytest.skip('This combination is tested in '
                                   'test_invalid_texture_arguments')
        else:
            output = self.output
    
        if self.output_shape:
            output_shape = (self.output_shape, ) * len(self.shape)
        else:
            output_shape = self.output_shape
    
        if xp == cupy:
            m = cupyx.scipy.ndimage.affine_transform
            matrix = cupy.array(matrix)
>           return m(a, matrix, output_shape=output_shape,
                     output=output, order=self.order,
                     mode=self.mode, texture_memory=True)

tests/cupyx_tests/scipy_tests/ndimage_tests/test_interpolation.py:398: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
cupyx/scipy/ndimage/interpolation.py:376: in affine_transform
    return _texture.affine_transformation(data=input,
cupyx/_texture.py:168: in affine_transformation
    texture_object = _create_texture_object(data,
cupyx/_texture.py:98: in _create_texture_object
    array = texture.CUDAarray(texture_fmt, *data.shape[::-1])
cupy/cuda/texture.pyx:296: in cupy.cuda.texture.CUDAarray.__init__
    self.ptr = runtime.malloc3DArray(desc.ptr, width, height, depth,
cupy_backends/cuda/api/runtime.pyx:593: in cupy_backends.cuda.api.runtime.malloc3DArray
    check_status(status)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

>   raise CUDARuntimeError(status)
E   AssertionError: Only cupy raises error
E   
E   Traceback (most recent call last):
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.hXnTrEAC7u/cupy/cupy/testing/_helper.py", line 47, in _call_func
E       result = impl(self, *args, **kw)
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.hXnTrEAC7u/cupy/tests/cupyx_tests/scipy_tests/ndimage_tests/test_interpolation.py", line 398, in test_affine_transform_texture_memory
E       return m(a, matrix, output_shape=output_shape,
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.hXnTrEAC7u/cupy/cupyx/scipy/ndimage/interpolation.py", line 376, in affine_transform
E       return _texture.affine_transformation(data=input,
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.hXnTrEAC7u/cupy/cupyx/_texture.py", line 168, in affine_transformation
E       texture_object = _create_texture_object(data,
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.hXnTrEAC7u/cupy/cupyx/_texture.py", line 98, in _create_texture_object
E       array = texture.CUDAarray(texture_fmt, *data.shape[::-1])
E     File "cupy/cuda/texture.pyx", line 296, in cupy.cuda.texture.CUDAarray.__init__
E       self.ptr = runtime.malloc3DArray(desc.ptr, width, height, depth,
E     File "cupy_backends/cuda/api/runtime.pyx", line 593, in cupy_backends.cuda.api.runtime.malloc3DArray
E       check_status(status)
E     File "cupy_backends/cuda/api/runtime.pyx", line 265, in cupy_backends.cuda.api.runtime.check_status
E       raise CUDARuntimeError(status)
E   cupy_backends.cuda.api.runtime.CUDARuntimeError: hipErrorUnknown: hipErrorUnknown

cupy_backends/cuda/api/runtime.pyx:265: AssertionError
----------------------------- Captured stderr call -----------------------------
Traceback (most recent call last):
  File "cupy_backends/cuda/api/runtime.pyx", line 644, in cupy_backends.cuda.api.runtime.freeArray
    check_status(status)
  File "cupy_backends/cuda/api/runtime.pyx", line 265, in cupy_backends.cuda.api.runtime.check_status
    raise CUDARuntimeError(status)
cupy_backends.cuda.api.runtime.CUDARuntimeError: hipErrorUnknown: hipErrorUnknown
_ TestAffineTransformTextureMemory.test_affine_transform_texture_memory[_param_18_{mode='constant', order=0, output=None, output_shape=10, shape=(100, 100), theta=180}] _

self = <<cupyx_tests.scipy_tests.ndimage_tests.test_interpolation.TestAffineTransformTextureMemory object at 0x7fab370597c0>  parameter: {'mode': 'constant', 'order': 0, 'output': None, 'output_shape': 10, 'shape': (100, 100), 'theta': 180}>
xp = <module 'cupy' from '/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.hXnTrEAC7u/cupy/cupy/__init__.py'>
scp = <module 'cupyx.scipy' from '/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.hXnTrEAC7u/cupy/cupyx/scipy/__init__.py'>

    @testing.numpy_cupy_allclose(atol=0.1, scipy_name='scp')
    def test_affine_transform_texture_memory(self, xp, scp):
        a = xp.ones(self.shape, dtype=xp.float32)
        center = numpy.divide(numpy.subtract(self.shape, 1), 2)
    
        if len(self.shape) == 2:
            matrix = self._2d_rotation_matrix(self.theta, center)
        elif len(self.shape) == 3:
            matrix = self._3d_rotation_matrix(self.theta, center)
        else:
            return pytest.xfail('Unsupported shape')
    
        if self.output == 'empty':
            output = xp.empty(self.shape, dtype=xp.float32)
            if self.output_shape:
                return pytest.skip('This combination is tested in '
                                   'test_invalid_texture_arguments')
        else:
            output = self.output
    
        if self.output_shape:
            output_shape = (self.output_shape, ) * len(self.shape)
        else:
            output_shape = self.output_shape
    
        if xp == cupy:
            m = cupyx.scipy.ndimage.affine_transform
            matrix = cupy.array(matrix)
>           return m(a, matrix, output_shape=output_shape,
                     output=output, order=self.order,
                     mode=self.mode, texture_memory=True)

tests/cupyx_tests/scipy_tests/ndimage_tests/test_interpolation.py:398: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
cupyx/scipy/ndimage/interpolation.py:376: in affine_transform
    return _texture.affine_transformation(data=input,
cupyx/_texture.py:168: in affine_transformation
    texture_object = _create_texture_object(data,
cupyx/_texture.py:98: in _create_texture_object
    array = texture.CUDAarray(texture_fmt, *data.shape[::-1])
cupy/cuda/texture.pyx:296: in cupy.cuda.texture.CUDAarray.__init__
    self.ptr = runtime.malloc3DArray(desc.ptr, width, height, depth,
cupy_backends/cuda/api/runtime.pyx:593: in cupy_backends.cuda.api.runtime.malloc3DArray
    check_status(status)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

>   raise CUDARuntimeError(status)
E   AssertionError: Only cupy raises error
E   
E   Traceback (most recent call last):
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.hXnTrEAC7u/cupy/cupy/testing/_helper.py", line 47, in _call_func
E       result = impl(self, *args, **kw)
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.hXnTrEAC7u/cupy/tests/cupyx_tests/scipy_tests/ndimage_tests/test_interpolation.py", line 398, in test_affine_transform_texture_memory
E       return m(a, matrix, output_shape=output_shape,
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.hXnTrEAC7u/cupy/cupyx/scipy/ndimage/interpolation.py", line 376, in affine_transform
E       return _texture.affine_transformation(data=input,
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.hXnTrEAC7u/cupy/cupyx/_texture.py", line 168, in affine_transformation
E       texture_object = _create_texture_object(data,
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.hXnTrEAC7u/cupy/cupyx/_texture.py", line 98, in _create_texture_object
E       array = texture.CUDAarray(texture_fmt, *data.shape[::-1])
E     File "cupy/cuda/texture.pyx", line 296, in cupy.cuda.texture.CUDAarray.__init__
E       self.ptr = runtime.malloc3DArray(desc.ptr, width, height, depth,
E     File "cupy_backends/cuda/api/runtime.pyx", line 593, in cupy_backends.cuda.api.runtime.malloc3DArray
E       check_status(status)
E     File "cupy_backends/cuda/api/runtime.pyx", line 265, in cupy_backends.cuda.api.runtime.check_status
E       raise CUDARuntimeError(status)
E   cupy_backends.cuda.api.runtime.CUDARuntimeError: hipErrorUnknown: hipErrorUnknown

cupy_backends/cuda/api/runtime.pyx:265: AssertionError
----------------------------- Captured stderr call -----------------------------
Traceback (most recent call last):
  File "cupy_backends/cuda/api/runtime.pyx", line 644, in cupy_backends.cuda.api.runtime.freeArray
    check_status(status)
  File "cupy_backends/cuda/api/runtime.pyx", line 265, in cupy_backends.cuda.api.runtime.check_status
    raise CUDARuntimeError(status)
cupy_backends.cuda.api.runtime.CUDARuntimeError: hipErrorUnknown: hipErrorUnknown
_ TestAffineTransformTextureMemory.test_affine_transform_texture_memory[_param_19_{mode='constant', order=0, output=None, output_shape=10, shape=(100, 100), theta=270}] _

self = <<cupyx_tests.scipy_tests.ndimage_tests.test_interpolation.TestAffineTransformTextureMemory object at 0x7fac51643a90>  parameter: {'mode': 'constant', 'order': 0, 'output': None, 'output_shape': 10, 'shape': (100, 100), 'theta': 270}>
xp = <module 'cupy' from '/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.hXnTrEAC7u/cupy/cupy/__init__.py'>
scp = <module 'cupyx.scipy' from '/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.hXnTrEAC7u/cupy/cupyx/scipy/__init__.py'>

    @testing.numpy_cupy_allclose(atol=0.1, scipy_name='scp')
    def test_affine_transform_texture_memory(self, xp, scp):
        a = xp.ones(self.shape, dtype=xp.float32)
        center = numpy.divide(numpy.subtract(self.shape, 1), 2)
    
        if len(self.shape) == 2:
            matrix = self._2d_rotation_matrix(self.theta, center)
        elif len(self.shape) == 3:
            matrix = self._3d_rotation_matrix(self.theta, center)
        else:
            return pytest.xfail('Unsupported shape')
    
        if self.output == 'empty':
            output = xp.empty(self.shape, dtype=xp.float32)
            if self.output_shape:
                return pytest.skip('This combination is tested in '
                                   'test_invalid_texture_arguments')
        else:
            output = self.output
    
        if self.output_shape:
            output_shape = (self.output_shape, ) * len(self.shape)
        else:
            output_shape = self.output_shape
    
        if xp == cupy:
            m = cupyx.scipy.ndimage.affine_transform
            matrix = cupy.array(matrix)
>           return m(a, matrix, output_shape=output_shape,
                     output=output, order=self.order,
                     mode=self.mode, texture_memory=True)

tests/cupyx_tests/scipy_tests/ndimage_tests/test_interpolation.py:398: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
cupyx/scipy/ndimage/interpolation.py:376: in affine_transform
    return _texture.affine_transformation(data=input,
cupyx/_texture.py:168: in affine_transformation
    texture_object = _create_texture_object(data,
cupyx/_texture.py:98: in _create_texture_object
    array = texture.CUDAarray(texture_fmt, *data.shape[::-1])
cupy/cuda/texture.pyx:296: in cupy.cuda.texture.CUDAarray.__init__
    self.ptr = runtime.malloc3DArray(desc.ptr, width, height, depth,
cupy_backends/cuda/api/runtime.pyx:593: in cupy_backends.cuda.api.runtime.malloc3DArray
    check_status(status)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

>   raise CUDARuntimeError(status)
E   AssertionError: Only cupy raises error
E   
E   Traceback (most recent call last):
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.hXnTrEAC7u/cupy/cupy/testing/_helper.py", line 47, in _call_func
E       result = impl(self, *args, **kw)
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.hXnTrEAC7u/cupy/tests/cupyx_tests/scipy_tests/ndimage_tests/test_interpolation.py", line 398, in test_affine_transform_texture_memory
E       return m(a, matrix, output_shape=output_shape,
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.hXnTrEAC7u/cupy/cupyx/scipy/ndimage/interpolation.py", line 376, in affine_transform
E       return _texture.affine_transformation(data=input,
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.hXnTrEAC7u/cupy/cupyx/_texture.py", line 168, in affine_transformation
E       texture_object = _create_texture_object(data,
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.hXnTrEAC7u/cupy/cupyx/_texture.py", line 98, in _create_texture_object
E       array = texture.CUDAarray(texture_fmt, *data.shape[::-1])
E     File "cupy/cuda/texture.pyx", line 296, in cupy.cuda.texture.CUDAarray.__init__
E       self.ptr = runtime.malloc3DArray(desc.ptr, width, height, depth,
E     File "cupy_backends/cuda/api/runtime.pyx", line 593, in cupy_backends.cuda.api.runtime.malloc3DArray
E       check_status(status)
E     File "cupy_backends/cuda/api/runtime.pyx", line 265, in cupy_backends.cuda.api.runtime.check_status
E       raise CUDARuntimeError(status)
E   cupy_backends.cuda.api.runtime.CUDARuntimeError: hipErrorUnknown: hipErrorUnknown

cupy_backends/cuda/api/runtime.pyx:265: AssertionError
----------------------------- Captured stderr call -----------------------------
Traceback (most recent call last):
  File "cupy_backends/cuda/api/runtime.pyx", line 644, in cupy_backends.cuda.api.runtime.freeArray
    check_status(status)
  File "cupy_backends/cuda/api/runtime.pyx", line 265, in cupy_backends.cuda.api.runtime.check_status
    raise CUDARuntimeError(status)
cupy_backends.cuda.api.runtime.CUDARuntimeError: hipErrorUnknown: hipErrorUnknown
_ TestAffineTransformTextureMemory.test_affine_transform_texture_memory[_param_20_{mode='constant', order=0, output=None, output_shape=10, shape=(10, 20), theta=0}] _

self = <<cupyx_tests.scipy_tests.ndimage_tests.test_interpolation.TestAffineTransformTextureMemory object at 0x7fab37185c70>  parameter: {'mode': 'constant', 'order': 0, 'output': None, 'output_shape': 10, 'shape': (10, 20), 'theta': 0}>
xp = <module 'cupy' from '/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.hXnTrEAC7u/cupy/cupy/__init__.py'>
scp = <module 'cupyx.scipy' from '/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.hXnTrEAC7u/cupy/cupyx/scipy/__init__.py'>

    @testing.numpy_cupy_allclose(atol=0.1, scipy_name='scp')
    def test_affine_transform_texture_memory(self, xp, scp):
        a = xp.ones(self.shape, dtype=xp.float32)
        center = numpy.divide(numpy.subtract(self.shape, 1), 2)
    
        if len(self.shape) == 2:
            matrix = self._2d_rotation_matrix(self.theta, center)
        elif len(self.shape) == 3:
            matrix = self._3d_rotation_matrix(self.theta, center)
        else:
            return pytest.xfail('Unsupported shape')
    
        if self.output == 'empty':
            output = xp.empty(self.shape, dtype=xp.float32)
            if self.output_shape:
                return pytest.skip('This combination is tested in '
                                   'test_invalid_texture_arguments')
        else:
            output = self.output
    
        if self.output_shape:
            output_shape = (self.output_shape, ) * len(self.shape)
        else:
            output_shape = self.output_shape
    
        if xp == cupy:
            m = cupyx.scipy.ndimage.affine_transform
            matrix = cupy.array(matrix)
>           return m(a, matrix, output_shape=output_shape,
                     output=output, order=self.order,
                     mode=self.mode, texture_memory=True)

tests/cupyx_tests/scipy_tests/ndimage_tests/test_interpolation.py:398: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
cupyx/scipy/ndimage/interpolation.py:376: in affine_transform
    return _texture.affine_transformation(data=input,
cupyx/_texture.py:168: in affine_transformation
    texture_object = _create_texture_object(data,
cupyx/_texture.py:98: in _create_texture_object
    array = texture.CUDAarray(texture_fmt, *data.shape[::-1])
cupy/cuda/texture.pyx:296: in cupy.cuda.texture.CUDAarray.__init__
    self.ptr = runtime.malloc3DArray(desc.ptr, width, height, depth,
cupy_backends/cuda/api/runtime.pyx:593: in cupy_backends.cuda.api.runtime.malloc3DArray
    check_status(status)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

>   raise CUDARuntimeError(status)
E   AssertionError: Only cupy raises error
E   
E   Traceback (most recent call last):
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.hXnTrEAC7u/cupy/cupy/testing/_helper.py", line 47, in _call_func
E       result = impl(self, *args, **kw)
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.hXnTrEAC7u/cupy/tests/cupyx_tests/scipy_tests/ndimage_tests/test_interpolation.py", line 398, in test_affine_transform_texture_memory
E       return m(a, matrix, output_shape=output_shape,
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.hXnTrEAC7u/cupy/cupyx/scipy/ndimage/interpolation.py", line 376, in affine_transform
E       return _texture.affine_transformation(data=input,
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.hXnTrEAC7u/cupy/cupyx/_texture.py", line 168, in affine_transformation
E       texture_object = _create_texture_object(data,
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.hXnTrEAC7u/cupy/cupyx/_texture.py", line 98, in _create_texture_object
E       array = texture.CUDAarray(texture_fmt, *data.shape[::-1])
E     File "cupy/cuda/texture.pyx", line 296, in cupy.cuda.texture.CUDAarray.__init__
E       self.ptr = runtime.malloc3DArray(desc.ptr, width, height, depth,
E     File "cupy_backends/cuda/api/runtime.pyx", line 593, in cupy_backends.cuda.api.runtime.malloc3DArray
E       check_status(status)
E     File "cupy_backends/cuda/api/runtime.pyx", line 265, in cupy_backends.cuda.api.runtime.check_status
E       raise CUDARuntimeError(status)
E   cupy_backends.cuda.api.runtime.CUDARuntimeError: hipErrorUnknown: hipErrorUnknown

cupy_backends/cuda/api/runtime.pyx:265: AssertionError
----------------------------- Captured stderr call -----------------------------
Traceback (most recent call last):
  File "cupy_backends/cuda/api/runtime.pyx", line 644, in cupy_backends.cuda.api.runtime.freeArray
    check_status(status)
  File "cupy_backends/cuda/api/runtime.pyx", line 265, in cupy_backends.cuda.api.runtime.check_status
    raise CUDARuntimeError(status)
cupy_backends.cuda.api.runtime.CUDARuntimeError: hipErrorUnknown: hipErrorUnknown
_ TestAffineTransformTextureMemory.test_affine_transform_texture_memory[_param_21_{mode='constant', order=0, output=None, output_shape=10, shape=(10, 20), theta=90}] _

self = <<cupyx_tests.scipy_tests.ndimage_tests.test_interpolation.TestAffineTransformTextureMemory object at 0x7fab38b98e50>  parameter: {'mode': 'constant', 'order': 0, 'output': None, 'output_shape': 10, 'shape': (10, 20), 'theta': 90}>
xp = <module 'cupy' from '/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.hXnTrEAC7u/cupy/cupy/__init__.py'>
scp = <module 'cupyx.scipy' from '/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.hXnTrEAC7u/cupy/cupyx/scipy/__init__.py'>

    @testing.numpy_cupy_allclose(atol=0.1, scipy_name='scp')
    def test_affine_transform_texture_memory(self, xp, scp):
        a = xp.ones(self.shape, dtype=xp.float32)
        center = numpy.divide(numpy.subtract(self.shape, 1), 2)
    
        if len(self.shape) == 2:
            matrix = self._2d_rotation_matrix(self.theta, center)
        elif len(self.shape) == 3:
            matrix = self._3d_rotation_matrix(self.theta, center)
        else:
            return pytest.xfail('Unsupported shape')
    
        if self.output == 'empty':
            output = xp.empty(self.shape, dtype=xp.float32)
            if self.output_shape:
                return pytest.skip('This combination is tested in '
                                   'test_invalid_texture_arguments')
        else:
            output = self.output
    
        if self.output_shape:
            output_shape = (self.output_shape, ) * len(self.shape)
        else:
            output_shape = self.output_shape
    
        if xp == cupy:
            m = cupyx.scipy.ndimage.affine_transform
            matrix = cupy.array(matrix)
>           return m(a, matrix, output_shape=output_shape,
                     output=output, order=self.order,
                     mode=self.mode, texture_memory=True)

tests/cupyx_tests/scipy_tests/ndimage_tests/test_interpolation.py:398: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
cupyx/scipy/ndimage/interpolation.py:376: in affine_transform
    return _texture.affine_transformation(data=input,
cupyx/_texture.py:168: in affine_transformation
    texture_object = _create_texture_object(data,
cupyx/_texture.py:98: in _create_texture_object
    array = texture.CUDAarray(texture_fmt, *data.shape[::-1])
cupy/cuda/texture.pyx:296: in cupy.cuda.texture.CUDAarray.__init__
    self.ptr = runtime.malloc3DArray(desc.ptr, width, height, depth,
cupy_backends/cuda/api/runtime.pyx:593: in cupy_backends.cuda.api.runtime.malloc3DArray
    check_status(status)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

>   raise CUDARuntimeError(status)
E   AssertionError: Only cupy raises error
E   
E   Traceback (most recent call last):
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.hXnTrEAC7u/cupy/cupy/testing/_helper.py", line 47, in _call_func
E       result = impl(self, *args, **kw)
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.hXnTrEAC7u/cupy/tests/cupyx_tests/scipy_tests/ndimage_tests/test_interpolation.py", line 398, in test_affine_transform_texture_memory
E       return m(a, matrix, output_shape=output_shape,
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.hXnTrEAC7u/cupy/cupyx/scipy/ndimage/interpolation.py", line 376, in affine_transform
E       return _texture.affine_transformation(data=input,
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.hXnTrEAC7u/cupy/cupyx/_texture.py", line 168, in affine_transformation
E       texture_object = _create_texture_object(data,
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.hXnTrEAC7u/cupy/cupyx/_texture.py", line 98, in _create_texture_object
E       array = texture.CUDAarray(texture_fmt, *data.shape[::-1])
E     File "cupy/cuda/texture.pyx", line 296, in cupy.cuda.texture.CUDAarray.__init__
E       self.ptr = runtime.malloc3DArray(desc.ptr, width, height, depth,
E     File "cupy_backends/cuda/api/runtime.pyx", line 593, in cupy_backends.cuda.api.runtime.malloc3DArray
E       check_status(status)
E     File "cupy_backends/cuda/api/runtime.pyx", line 265, in cupy_backends.cuda.api.runtime.check_status
E       raise CUDARuntimeError(status)
E   cupy_backends.cuda.api.runtime.CUDARuntimeError: hipErrorUnknown: hipErrorUnknown

cupy_backends/cuda/api/runtime.pyx:265: AssertionError
----------------------------- Captured stderr call -----------------------------
Traceback (most recent call last):
  File "cupy_backends/cuda/api/runtime.pyx", line 644, in cupy_backends.cuda.api.runtime.freeArray
    check_status(status)
  File "cupy_backends/cuda/api/runtime.pyx", line 265, in cupy_backends.cuda.api.runtime.check_status
    raise CUDARuntimeError(status)
cupy_backends.cuda.api.runtime.CUDARuntimeError: hipErrorUnknown: hipErrorUnknown
_ TestAffineTransformTextureMemory.test_affine_transform_texture_memory[_param_22_{mode='constant', order=0, output=None, output_shape=10, shape=(10, 20), theta=180}] _

self = <<cupyx_tests.scipy_tests.ndimage_tests.test_interpolation.TestAffineTransformTextureMemory object at 0x7fab372218b0>  parameter: {'mode': 'constant', 'order': 0, 'output': None, 'output_shape': 10, 'shape': (10, 20), 'theta': 180}>
xp = <module 'cupy' from '/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.hXnTrEAC7u/cupy/cupy/__init__.py'>
scp = <module 'cupyx.scipy' from '/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.hXnTrEAC7u/cupy/cupyx/scipy/__init__.py'>

    @testing.numpy_cupy_allclose(atol=0.1, scipy_name='scp')
    def test_affine_transform_texture_memory(self, xp, scp):
        a = xp.ones(self.shape, dtype=xp.float32)
        center = numpy.divide(numpy.subtract(self.shape, 1), 2)
    
        if len(self.shape) == 2:
            matrix = self._2d_rotation_matrix(self.theta, center)
        elif len(self.shape) == 3:
            matrix = self._3d_rotation_matrix(self.theta, center)
        else:
            return pytest.xfail('Unsupported shape')
    
        if self.output == 'empty':
            output = xp.empty(self.shape, dtype=xp.float32)
            if self.output_shape:
                return pytest.skip('This combination is tested in '
                                   'test_invalid_texture_arguments')
        else:
            output = self.output
    
        if self.output_shape:
            output_shape = (self.output_shape, ) * len(self.shape)
        else:
            output_shape = self.output_shape
    
        if xp == cupy:
            m = cupyx.scipy.ndimage.affine_transform
            matrix = cupy.array(matrix)
>           return m(a, matrix, output_shape=output_shape,
                     output=output, order=self.order,
                     mode=self.mode, texture_memory=True)

tests/cupyx_tests/scipy_tests/ndimage_tests/test_interpolation.py:398: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
cupyx/scipy/ndimage/interpolation.py:376: in affine_transform
    return _texture.affine_transformation(data=input,
cupyx/_texture.py:168: in affine_transformation
    texture_object = _create_texture_object(data,
cupyx/_texture.py:98: in _create_texture_object
    array = texture.CUDAarray(texture_fmt, *data.shape[::-1])
cupy/cuda/texture.pyx:296: in cupy.cuda.texture.CUDAarray.__init__
    self.ptr = runtime.malloc3DArray(desc.ptr, width, height, depth,
cupy_backends/cuda/api/runtime.pyx:593: in cupy_backends.cuda.api.runtime.malloc3DArray
    check_status(status)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

>   raise CUDARuntimeError(status)
E   AssertionError: Only cupy raises error
E   
E   Traceback (most recent call last):
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.hXnTrEAC7u/cupy/cupy/testing/_helper.py", line 47, in _call_func
E       result = impl(self, *args, **kw)
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.hXnTrEAC7u/cupy/tests/cupyx_tests/scipy_tests/ndimage_tests/test_interpolation.py", line 398, in test_affine_transform_texture_memory
E       return m(a, matrix, output_shape=output_shape,
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.hXnTrEAC7u/cupy/cupyx/scipy/ndimage/interpolation.py", line 376, in affine_transform
E       return _texture.affine_transformation(data=input,
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.hXnTrEAC7u/cupy/cupyx/_texture.py", line 168, in affine_transformation
E       texture_object = _create_texture_object(data,
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.hXnTrEAC7u/cupy/cupyx/_texture.py", line 98, in _create_texture_object
E       array = texture.CUDAarray(texture_fmt, *data.shape[::-1])
E     File "cupy/cuda/texture.pyx", line 296, in cupy.cuda.texture.CUDAarray.__init__
E       self.ptr = runtime.malloc3DArray(desc.ptr, width, height, depth,
E     File "cupy_backends/cuda/api/runtime.pyx", line 593, in cupy_backends.cuda.api.runtime.malloc3DArray
E       check_status(status)
E     File "cupy_backends/cuda/api/runtime.pyx", line 265, in cupy_backends.cuda.api.runtime.check_status
E       raise CUDARuntimeError(status)
E   cupy_backends.cuda.api.runtime.CUDARuntimeError: hipErrorUnknown: hipErrorUnknown

cupy_backends/cuda/api/runtime.pyx:265: AssertionError
----------------------------- Captured stderr call -----------------------------
Traceback (most recent call last):
  File "cupy_backends/cuda/api/runtime.pyx", line 644, in cupy_backends.cuda.api.runtime.freeArray
    check_status(status)
  File "cupy_backends/cuda/api/runtime.pyx", line 265, in cupy_backends.cuda.api.runtime.check_status
    raise CUDARuntimeError(status)
cupy_backends.cuda.api.runtime.CUDARuntimeError: hipErrorUnknown: hipErrorUnknown
_ TestAffineTransformTextureMemory.test_affine_transform_texture_memory[_param_23_{mode='constant', order=0, output=None, output_shape=10, shape=(10, 20), theta=270}] _

self = <<cupyx_tests.scipy_tests.ndimage_tests.test_interpolation.TestAffineTransformTextureMemory object at 0x7fab39755eb0>  parameter: {'mode': 'constant', 'order': 0, 'output': None, 'output_shape': 10, 'shape': (10, 20), 'theta': 270}>
xp = <module 'cupy' from '/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.hXnTrEAC7u/cupy/cupy/__init__.py'>
scp = <module 'cupyx.scipy' from '/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.hXnTrEAC7u/cupy/cupyx/scipy/__init__.py'>

    @testing.numpy_cupy_allclose(atol=0.1, scipy_name='scp')
    def test_affine_transform_texture_memory(self, xp, scp):
        a = xp.ones(self.shape, dtype=xp.float32)
        center = numpy.divide(numpy.subtract(self.shape, 1), 2)
    
        if len(self.shape) == 2:
            matrix = self._2d_rotation_matrix(self.theta, center)
        elif len(self.shape) == 3:
            matrix = self._3d_rotation_matrix(self.theta, center)
        else:
            return pytest.xfail('Unsupported shape')
    
        if self.output == 'empty':
            output = xp.empty(self.shape, dtype=xp.float32)
            if self.output_shape:
                return pytest.skip('This combination is tested in '
                                   'test_invalid_texture_arguments')
        else:
            output = self.output
    
        if self.output_shape:
            output_shape = (self.output_shape, ) * len(self.shape)
        else:
            output_shape = self.output_shape
    
        if xp == cupy:
            m = cupyx.scipy.ndimage.affine_transform
            matrix = cupy.array(matrix)
>           return m(a, matrix, output_shape=output_shape,
                     output=output, order=self.order,
                     mode=self.mode, texture_memory=True)

tests/cupyx_tests/scipy_tests/ndimage_tests/test_interpolation.py:398: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
cupyx/scipy/ndimage/interpolation.py:376: in affine_transform
    return _texture.affine_transformation(data=input,
cupyx/_texture.py:168: in affine_transformation
    texture_object = _create_texture_object(data,
cupyx/_texture.py:98: in _create_texture_object
    array = texture.CUDAarray(texture_fmt, *data.shape[::-1])
cupy/cuda/texture.pyx:296: in cupy.cuda.texture.CUDAarray.__init__
    self.ptr = runtime.malloc3DArray(desc.ptr, width, height, depth,
cupy_backends/cuda/api/runtime.pyx:593: in cupy_backends.cuda.api.runtime.malloc3DArray
    check_status(status)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

>   raise CUDARuntimeError(status)
E   AssertionError: Only cupy raises error
E   
E   Traceback (most recent call last):
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.hXnTrEAC7u/cupy/cupy/testing/_helper.py", line 47, in _call_func
E       result = impl(self, *args, **kw)
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.hXnTrEAC7u/cupy/tests/cupyx_tests/scipy_tests/ndimage_tests/test_interpolation.py", line 398, in test_affine_transform_texture_memory
E       return m(a, matrix, output_shape=output_shape,
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.hXnTrEAC7u/cupy/cupyx/scipy/ndimage/interpolation.py", line 376, in affine_transform
E       return _texture.affine_transformation(data=input,
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.hXnTrEAC7u/cupy/cupyx/_texture.py", line 168, in affine_transformation
E       texture_object = _create_texture_object(data,
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.hXnTrEAC7u/cupy/cupyx/_texture.py", line 98, in _create_texture_object
E       array = texture.CUDAarray(texture_fmt, *data.shape[::-1])
E     File "cupy/cuda/texture.pyx", line 296, in cupy.cuda.texture.CUDAarray.__init__
E       self.ptr = runtime.malloc3DArray(desc.ptr, width, height, depth,
E     File "cupy_backends/cuda/api/runtime.pyx", line 593, in cupy_backends.cuda.api.runtime.malloc3DArray
E       check_status(status)
E     File "cupy_backends/cuda/api/runtime.pyx", line 265, in cupy_backends.cuda.api.runtime.check_status
E       raise CUDARuntimeError(status)
E   cupy_backends.cuda.api.runtime.CUDARuntimeError: hipErrorUnknown: hipErrorUnknown

cupy_backends/cuda/api/runtime.pyx:265: AssertionError
----------------------------- Captured stderr call -----------------------------
Traceback (most recent call last):
  File "cupy_backends/cuda/api/runtime.pyx", line 644, in cupy_backends.cuda.api.runtime.freeArray
    check_status(status)
  File "cupy_backends/cuda/api/runtime.pyx", line 265, in cupy_backends.cuda.api.runtime.check_status
    raise CUDARuntimeError(status)
cupy_backends.cuda.api.runtime.CUDARuntimeError: hipErrorUnknown: hipErrorUnknown
_ TestAffineTransformTextureMemory.test_affine_transform_texture_memory[_param_24_{mode='constant', order=0, output=None, output_shape=10, shape=(10, 10, 10), theta=0}] _

self = <<cupyx_tests.scipy_tests.ndimage_tests.test_interpolation.TestAffineTransformTextureMemory object at 0x7fac514d4f10>  parameter: {'mode': 'constant', 'order': 0, 'output': None, 'output_shape': 10, 'shape': (10, 10, 10), 'theta': 0}>
xp = <module 'cupy' from '/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.hXnTrEAC7u/cupy/cupy/__init__.py'>
scp = <module 'cupyx.scipy' from '/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.hXnTrEAC7u/cupy/cupyx/scipy/__init__.py'>

    @testing.numpy_cupy_allclose(atol=0.1, scipy_name='scp')
    def test_affine_transform_texture_memory(self, xp, scp):
        a = xp.ones(self.shape, dtype=xp.float32)
        center = numpy.divide(numpy.subtract(self.shape, 1), 2)
    
        if len(self.shape) == 2:
            matrix = self._2d_rotation_matrix(self.theta, center)
        elif len(self.shape) == 3:
            matrix = self._3d_rotation_matrix(self.theta, center)
        else:
            return pytest.xfail('Unsupported shape')
    
        if self.output == 'empty':
            output = xp.empty(self.shape, dtype=xp.float32)
            if self.output_shape:
                return pytest.skip('This combination is tested in '
                                   'test_invalid_texture_arguments')
        else:
            output = self.output
    
        if self.output_shape:
            output_shape = (self.output_shape, ) * len(self.shape)
        else:
            output_shape = self.output_shape
    
        if xp == cupy:
            m = cupyx.scipy.ndimage.affine_transform
            matrix = cupy.array(matrix)
>           return m(a, matrix, output_shape=output_shape,
                     output=output, order=self.order,
                     mode=self.mode, texture_memory=True)

tests/cupyx_tests/scipy_tests/ndimage_tests/test_interpolation.py:398: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
cupyx/scipy/ndimage/interpolation.py:376: in affine_transform
    return _texture.affine_transformation(data=input,
cupyx/_texture.py:168: in affine_transformation
    texture_object = _create_texture_object(data,
cupyx/_texture.py:98: in _create_texture_object
    array = texture.CUDAarray(texture_fmt, *data.shape[::-1])
cupy/cuda/texture.pyx:296: in cupy.cuda.texture.CUDAarray.__init__
    self.ptr = runtime.malloc3DArray(desc.ptr, width, height, depth,
cupy_backends/cuda/api/runtime.pyx:593: in cupy_backends.cuda.api.runtime.malloc3DArray
    check_status(status)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

>   raise CUDARuntimeError(status)
E   AssertionError: Only cupy raises error
E   
E   Traceback (most recent call last):
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.hXnTrEAC7u/cupy/cupy/testing/_helper.py", line 47, in _call_func
E       result = impl(self, *args, **kw)
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.hXnTrEAC7u/cupy/tests/cupyx_tests/scipy_tests/ndimage_tests/test_interpolation.py", line 398, in test_affine_transform_texture_memory
E       return m(a, matrix, output_shape=output_shape,
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.hXnTrEAC7u/cupy/cupyx/scipy/ndimage/interpolation.py", line 376, in affine_transform
E       return _texture.affine_transformation(data=input,
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.hXnTrEAC7u/cupy/cupyx/_texture.py", line 168, in affine_transformation
E       texture_object = _create_texture_object(data,
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.hXnTrEAC7u/cupy/cupyx/_texture.py", line 98, in _create_texture_object
E       array = texture.CUDAarray(texture_fmt, *data.shape[::-1])
E     File "cupy/cuda/texture.pyx", line 296, in cupy.cuda.texture.CUDAarray.__init__
E       self.ptr = runtime.malloc3DArray(desc.ptr, width, height, depth,
E     File "cupy_backends/cuda/api/runtime.pyx", line 593, in cupy_backends.cuda.api.runtime.malloc3DArray
E       check_status(status)
E     File "cupy_backends/cuda/api/runtime.pyx", line 265, in cupy_backends.cuda.api.runtime.check_status
E       raise CUDARuntimeError(status)
E   cupy_backends.cuda.api.runtime.CUDARuntimeError: hipErrorUnknown: hipErrorUnknown

cupy_backends/cuda/api/runtime.pyx:265: AssertionError
----------------------------- Captured stderr call -----------------------------
Traceback (most recent call last):
  File "cupy_backends/cuda/api/runtime.pyx", line 644, in cupy_backends.cuda.api.runtime.freeArray
    check_status(status)
  File "cupy_backends/cuda/api/runtime.pyx", line 265, in cupy_backends.cuda.api.runtime.check_status
    raise CUDARuntimeError(status)
cupy_backends.cuda.api.runtime.CUDARuntimeError: hipErrorUnknown: hipErrorUnknown
_ TestAffineTransformTextureMemory.test_affine_transform_texture_memory[_param_25_{mode='constant', order=0, output=None, output_shape=10, shape=(10, 10, 10), theta=90}] _

self = <<cupyx_tests.scipy_tests.ndimage_tests.test_interpolation.TestAffineTransformTextureMemory object at 0x7fab370d74c0>  parameter: {'mode': 'constant', 'order': 0, 'output': None, 'output_shape': 10, 'shape': (10, 10, 10), 'theta': 90}>
xp = <module 'cupy' from '/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.hXnTrEAC7u/cupy/cupy/__init__.py'>
scp = <module 'cupyx.scipy' from '/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.hXnTrEAC7u/cupy/cupyx/scipy/__init__.py'>

    @testing.numpy_cupy_allclose(atol=0.1, scipy_name='scp')
    def test_affine_transform_texture_memory(self, xp, scp):
        a = xp.ones(self.shape, dtype=xp.float32)
        center = numpy.divide(numpy.subtract(self.shape, 1), 2)
    
        if len(self.shape) == 2:
            matrix = self._2d_rotation_matrix(self.theta, center)
        elif len(self.shape) == 3:
            matrix = self._3d_rotation_matrix(self.theta, center)
        else:
            return pytest.xfail('Unsupported shape')
    
        if self.output == 'empty':
            output = xp.empty(self.shape, dtype=xp.float32)
            if self.output_shape:
                return pytest.skip('This combination is tested in '
                                   'test_invalid_texture_arguments')
        else:
            output = self.output
    
        if self.output_shape:
            output_shape = (self.output_shape, ) * len(self.shape)
        else:
            output_shape = self.output_shape
    
        if xp == cupy:
            m = cupyx.scipy.ndimage.affine_transform
            matrix = cupy.array(matrix)
>           return m(a, matrix, output_shape=output_shape,
                     output=output, order=self.order,
                     mode=self.mode, texture_memory=True)

tests/cupyx_tests/scipy_tests/ndimage_tests/test_interpolation.py:398: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
cupyx/scipy/ndimage/interpolation.py:376: in affine_transform
    return _texture.affine_transformation(data=input,
cupyx/_texture.py:168: in affine_transformation
    texture_object = _create_texture_object(data,
cupyx/_texture.py:98: in _create_texture_object
    array = texture.CUDAarray(texture_fmt, *data.shape[::-1])
cupy/cuda/texture.pyx:296: in cupy.cuda.texture.CUDAarray.__init__
    self.ptr = runtime.malloc3DArray(desc.ptr, width, height, depth,
cupy_backends/cuda/api/runtime.pyx:593: in cupy_backends.cuda.api.runtime.malloc3DArray
    check_status(status)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

>   raise CUDARuntimeError(status)
E   AssertionError: Only cupy raises error
E   
E   Traceback (most recent call last):
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.hXnTrEAC7u/cupy/cupy/testing/_helper.py", line 47, in _call_func
E       result = impl(self, *args, **kw)
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.hXnTrEAC7u/cupy/tests/cupyx_tests/scipy_tests/ndimage_tests/test_interpolation.py", line 398, in test_affine_transform_texture_memory
E       return m(a, matrix, output_shape=output_shape,
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.hXnTrEAC7u/cupy/cupyx/scipy/ndimage/interpolation.py", line 376, in affine_transform
E       return _texture.affine_transformation(data=input,
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.hXnTrEAC7u/cupy/cupyx/_texture.py", line 168, in affine_transformation
E       texture_object = _create_texture_object(data,
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.hXnTrEAC7u/cupy/cupyx/_texture.py", line 98, in _create_texture_object
E       array = texture.CUDAarray(texture_fmt, *data.shape[::-1])
E     File "cupy/cuda/texture.pyx", line 296, in cupy.cuda.texture.CUDAarray.__init__
E       self.ptr = runtime.malloc3DArray(desc.ptr, width, height, depth,
E     File "cupy_backends/cuda/api/runtime.pyx", line 593, in cupy_backends.cuda.api.runtime.malloc3DArray
E       check_status(status)
E     File "cupy_backends/cuda/api/runtime.pyx", line 265, in cupy_backends.cuda.api.runtime.check_status
E       raise CUDARuntimeError(status)
E   cupy_backends.cuda.api.runtime.CUDARuntimeError: hipErrorUnknown: hipErrorUnknown

cupy_backends/cuda/api/runtime.pyx:265: AssertionError
----------------------------- Captured stderr call -----------------------------
Traceback (most recent call last):
  File "cupy_backends/cuda/api/runtime.pyx", line 644, in cupy_backends.cuda.api.runtime.freeArray
    check_status(status)
  File "cupy_backends/cuda/api/runtime.pyx", line 265, in cupy_backends.cuda.api.runtime.check_status
    raise CUDARuntimeError(status)
cupy_backends.cuda.api.runtime.CUDARuntimeError: hipErrorUnknown: hipErrorUnknown
_ TestAffineTransformTextureMemory.test_affine_transform_texture_memory[_param_26_{mode='constant', order=0, output=None, output_shape=10, shape=(10, 10, 10), theta=180}] _

self = <<cupyx_tests.scipy_tests.ndimage_tests.test_interpolation.TestAffineTransformTextureMemory object at 0x7fab3715da90>  parameter: {'mode': 'constant', 'order': 0, 'output': None, 'output_shape': 10, 'shape': (10, 10, 10), 'theta': 180}>
xp = <module 'cupy' from '/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.hXnTrEAC7u/cupy/cupy/__init__.py'>
scp = <module 'cupyx.scipy' from '/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.hXnTrEAC7u/cupy/cupyx/scipy/__init__.py'>

    @testing.numpy_cupy_allclose(atol=0.1, scipy_name='scp')
    def test_affine_transform_texture_memory(self, xp, scp):
        a = xp.ones(self.shape, dtype=xp.float32)
        center = numpy.divide(numpy.subtract(self.shape, 1), 2)
    
        if len(self.shape) == 2:
            matrix = self._2d_rotation_matrix(self.theta, center)
        elif len(self.shape) == 3:
            matrix = self._3d_rotation_matrix(self.theta, center)
        else:
            return pytest.xfail('Unsupported shape')
    
        if self.output == 'empty':
            output = xp.empty(self.shape, dtype=xp.float32)
            if self.output_shape:
                return pytest.skip('This combination is tested in '
                                   'test_invalid_texture_arguments')
        else:
            output = self.output
    
        if self.output_shape:
            output_shape = (self.output_shape, ) * len(self.shape)
        else:
            output_shape = self.output_shape
    
        if xp == cupy:
            m = cupyx.scipy.ndimage.affine_transform
            matrix = cupy.array(matrix)
>           return m(a, matrix, output_shape=output_shape,
                     output=output, order=self.order,
                     mode=self.mode, texture_memory=True)

tests/cupyx_tests/scipy_tests/ndimage_tests/test_interpolation.py:398: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
cupyx/scipy/ndimage/interpolation.py:376: in affine_transform
    return _texture.affine_transformation(data=input,
cupyx/_texture.py:168: in affine_transformation
    texture_object = _create_texture_object(data,
cupyx/_texture.py:98: in _create_texture_object
    array = texture.CUDAarray(texture_fmt, *data.shape[::-1])
cupy/cuda/texture.pyx:296: in cupy.cuda.texture.CUDAarray.__init__
    self.ptr = runtime.malloc3DArray(desc.ptr, width, height, depth,
cupy_backends/cuda/api/runtime.pyx:593: in cupy_backends.cuda.api.runtime.malloc3DArray
    check_status(status)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

>   raise CUDARuntimeError(status)
E   AssertionError: Only cupy raises error
E   
E   Traceback (most recent call last):
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.hXnTrEAC7u/cupy/cupy/testing/_helper.py", line 47, in _call_func
E       result = impl(self, *args, **kw)
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.hXnTrEAC7u/cupy/tests/cupyx_tests/scipy_tests/ndimage_tests/test_interpolation.py", line 398, in test_affine_transform_texture_memory
E       return m(a, matrix, output_shape=output_shape,
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.hXnTrEAC7u/cupy/cupyx/scipy/ndimage/interpolation.py", line 376, in affine_transform
E       return _texture.affine_transformation(data=input,
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.hXnTrEAC7u/cupy/cupyx/_texture.py", line 168, in affine_transformation
E       texture_object = _create_texture_object(data,
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.hXnTrEAC7u/cupy/cupyx/_texture.py", line 98, in _create_texture_object
E       array = texture.CUDAarray(texture_fmt, *data.shape[::-1])
E     File "cupy/cuda/texture.pyx", line 296, in cupy.cuda.texture.CUDAarray.__init__
E       self.ptr = runtime.malloc3DArray(desc.ptr, width, height, depth,
E     File "cupy_backends/cuda/api/runtime.pyx", line 593, in cupy_backends.cuda.api.runtime.malloc3DArray
E       check_status(status)
E     File "cupy_backends/cuda/api/runtime.pyx", line 265, in cupy_backends.cuda.api.runtime.check_status
E       raise CUDARuntimeError(status)
E   cupy_backends.cuda.api.runtime.CUDARuntimeError: hipErrorUnknown: hipErrorUnknown

cupy_backends/cuda/api/runtime.pyx:265: AssertionError
----------------------------- Captured stderr call -----------------------------
Traceback (most recent call last):
  File "cupy_backends/cuda/api/runtime.pyx", line 644, in cupy_backends.cuda.api.runtime.freeArray
    check_status(status)
  File "cupy_backends/cuda/api/runtime.pyx", line 265, in cupy_backends.cuda.api.runtime.check_status
    raise CUDARuntimeError(status)
cupy_backends.cuda.api.runtime.CUDARuntimeError: hipErrorUnknown: hipErrorUnknown
_ TestAffineTransformTextureMemory.test_affine_transform_texture_memory[_param_27_{mode='constant', order=0, output=None, output_shape=10, shape=(10, 10, 10), theta=270}] _

self = <<cupyx_tests.scipy_tests.ndimage_tests.test_interpolation.TestAffineTransformTextureMemory object at 0x7fac514a1550>  parameter: {'mode': 'constant', 'order': 0, 'output': None, 'output_shape': 10, 'shape': (10, 10, 10), 'theta': 270}>
xp = <module 'cupy' from '/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.hXnTrEAC7u/cupy/cupy/__init__.py'>
scp = <module 'cupyx.scipy' from '/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.hXnTrEAC7u/cupy/cupyx/scipy/__init__.py'>

    @testing.numpy_cupy_allclose(atol=0.1, scipy_name='scp')
    def test_affine_transform_texture_memory(self, xp, scp):
        a = xp.ones(self.shape, dtype=xp.float32)
        center = numpy.divide(numpy.subtract(self.shape, 1), 2)
    
        if len(self.shape) == 2:
            matrix = self._2d_rotation_matrix(self.theta, center)
        elif len(self.shape) == 3:
            matrix = self._3d_rotation_matrix(self.theta, center)
        else:
            return pytest.xfail('Unsupported shape')
    
        if self.output == 'empty':
            output = xp.empty(self.shape, dtype=xp.float32)
            if self.output_shape:
                return pytest.skip('This combination is tested in '
                                   'test_invalid_texture_arguments')
        else:
            output = self.output
    
        if self.output_shape:
            output_shape = (self.output_shape, ) * len(self.shape)
        else:
            output_shape = self.output_shape
    
        if xp == cupy:
            m = cupyx.scipy.ndimage.affine_transform
            matrix = cupy.array(matrix)
>           return m(a, matrix, output_shape=output_shape,
                     output=output, order=self.order,
                     mode=self.mode, texture_memory=True)

tests/cupyx_tests/scipy_tests/ndimage_tests/test_interpolation.py:398: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
cupyx/scipy/ndimage/interpolation.py:376: in affine_transform
    return _texture.affine_transformation(data=input,
cupyx/_texture.py:168: in affine_transformation
    texture_object = _create_texture_object(data,
cupyx/_texture.py:98: in _create_texture_object
    array = texture.CUDAarray(texture_fmt, *data.shape[::-1])
cupy/cuda/texture.pyx:296: in cupy.cuda.texture.CUDAarray.__init__
    self.ptr = runtime.malloc3DArray(desc.ptr, width, height, depth,
cupy_backends/cuda/api/runtime.pyx:593: in cupy_backends.cuda.api.runtime.malloc3DArray
    check_status(status)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

>   raise CUDARuntimeError(status)
E   AssertionError: Only cupy raises error
E   
E   Traceback (most recent call last):
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.hXnTrEAC7u/cupy/cupy/testing/_helper.py", line 47, in _call_func
E       result = impl(self, *args, **kw)
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.hXnTrEAC7u/cupy/tests/cupyx_tests/scipy_tests/ndimage_tests/test_interpolation.py", line 398, in test_affine_transform_texture_memory
E       return m(a, matrix, output_shape=output_shape,
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.hXnTrEAC7u/cupy/cupyx/scipy/ndimage/interpolation.py", line 376, in affine_transform
E       return _texture.affine_transformation(data=input,
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.hXnTrEAC7u/cupy/cupyx/_texture.py", line 168, in affine_transformation
E       texture_object = _create_texture_object(data,
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.hXnTrEAC7u/cupy/cupyx/_texture.py", line 98, in _create_texture_object
E       array = texture.CUDAarray(texture_fmt, *data.shape[::-1])
E     File "cupy/cuda/texture.pyx", line 296, in cupy.cuda.texture.CUDAarray.__init__
E       self.ptr = runtime.malloc3DArray(desc.ptr, width, height, depth,
E     File "cupy_backends/cuda/api/runtime.pyx", line 593, in cupy_backends.cuda.api.runtime.malloc3DArray
E       check_status(status)
E     File "cupy_backends/cuda/api/runtime.pyx", line 265, in cupy_backends.cuda.api.runtime.check_status
E       raise CUDARuntimeError(status)
E   cupy_backends.cuda.api.runtime.CUDARuntimeError: hipErrorUnknown: hipErrorUnknown

cupy_backends/cuda/api/runtime.pyx:265: AssertionError
----------------------------- Captured stderr call -----------------------------
Traceback (most recent call last):
  File "cupy_backends/cuda/api/runtime.pyx", line 644, in cupy_backends.cuda.api.runtime.freeArray
    check_status(status)
  File "cupy_backends/cuda/api/runtime.pyx", line 265, in cupy_backends.cuda.api.runtime.check_status
    raise CUDARuntimeError(status)
cupy_backends.cuda.api.runtime.CUDARuntimeError: hipErrorUnknown: hipErrorUnknown
_ TestAffineTransformTextureMemory.test_affine_transform_texture_memory[_param_28_{mode='constant', order=0, output=None, output_shape=10, shape=(10, 20, 30), theta=0}] _

self = <<cupyx_tests.scipy_tests.ndimage_tests.test_interpolation.TestAffineTransformTextureMemory object at 0x7fab37c72fd0>  parameter: {'mode': 'constant', 'order': 0, 'output': None, 'output_shape': 10, 'shape': (10, 20, 30), 'theta': 0}>
xp = <module 'cupy' from '/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.hXnTrEAC7u/cupy/cupy/__init__.py'>
scp = <module 'cupyx.scipy' from '/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.hXnTrEAC7u/cupy/cupyx/scipy/__init__.py'>

    @testing.numpy_cupy_allclose(atol=0.1, scipy_name='scp')
    def test_affine_transform_texture_memory(self, xp, scp):
        a = xp.ones(self.shape, dtype=xp.float32)
        center = numpy.divide(numpy.subtract(self.shape, 1), 2)
    
        if len(self.shape) == 2:
            matrix = self._2d_rotation_matrix(self.theta, center)
        elif len(self.shape) == 3:
            matrix = self._3d_rotation_matrix(self.theta, center)
        else:
            return pytest.xfail('Unsupported shape')
    
        if self.output == 'empty':
            output = xp.empty(self.shape, dtype=xp.float32)
            if self.output_shape:
                return pytest.skip('This combination is tested in '
                                   'test_invalid_texture_arguments')
        else:
            output = self.output
    
        if self.output_shape:
            output_shape = (self.output_shape, ) * len(self.shape)
        else:
            output_shape = self.output_shape
    
        if xp == cupy:
            m = cupyx.scipy.ndimage.affine_transform
            matrix = cupy.array(matrix)
>           return m(a, matrix, output_shape=output_shape,
                     output=output, order=self.order,
                     mode=self.mode, texture_memory=True)

tests/cupyx_tests/scipy_tests/ndimage_tests/test_interpolation.py:398: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
cupyx/scipy/ndimage/interpolation.py:376: in affine_transform
    return _texture.affine_transformation(data=input,
cupyx/_texture.py:168: in affine_transformation
    texture_object = _create_texture_object(data,
cupyx/_texture.py:98: in _create_texture_object
    array = texture.CUDAarray(texture_fmt, *data.shape[::-1])
cupy/cuda/texture.pyx:296: in cupy.cuda.texture.CUDAarray.__init__
    self.ptr = runtime.malloc3DArray(desc.ptr, width, height, depth,
cupy_backends/cuda/api/runtime.pyx:593: in cupy_backends.cuda.api.runtime.malloc3DArray
    check_status(status)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

>   raise CUDARuntimeError(status)
E   AssertionError: Only cupy raises error
E   
E   Traceback (most recent call last):
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.hXnTrEAC7u/cupy/cupy/testing/_helper.py", line 47, in _call_func
E       result = impl(self, *args, **kw)
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.hXnTrEAC7u/cupy/tests/cupyx_tests/scipy_tests/ndimage_tests/test_interpolation.py", line 398, in test_affine_transform_texture_memory
E       return m(a, matrix, output_shape=output_shape,
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.hXnTrEAC7u/cupy/cupyx/scipy/ndimage/interpolation.py", line 376, in affine_transform
E       return _texture.affine_transformation(data=input,
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.hXnTrEAC7u/cupy/cupyx/_texture.py", line 168, in affine_transformation
E       texture_object = _create_texture_object(data,
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.hXnTrEAC7u/cupy/cupyx/_texture.py", line 98, in _create_texture_object
E       array = texture.CUDAarray(texture_fmt, *data.shape[::-1])
E     File "cupy/cuda/texture.pyx", line 296, in cupy.cuda.texture.CUDAarray.__init__
E       self.ptr = runtime.malloc3DArray(desc.ptr, width, height, depth,
E     File "cupy_backends/cuda/api/runtime.pyx", line 593, in cupy_backends.cuda.api.runtime.malloc3DArray
E       check_status(status)
E     File "cupy_backends/cuda/api/runtime.pyx", line 265, in cupy_backends.cuda.api.runtime.check_status
E       raise CUDARuntimeError(status)
E   cupy_backends.cuda.api.runtime.CUDARuntimeError: hipErrorUnknown: hipErrorUnknown

cupy_backends/cuda/api/runtime.pyx:265: AssertionError
----------------------------- Captured stderr call -----------------------------
Traceback (most recent call last):
  File "cupy_backends/cuda/api/runtime.pyx", line 644, in cupy_backends.cuda.api.runtime.freeArray
    check_status(status)
  File "cupy_backends/cuda/api/runtime.pyx", line 265, in cupy_backends.cuda.api.runtime.check_status
    raise CUDARuntimeError(status)
cupy_backends.cuda.api.runtime.CUDARuntimeError: hipErrorUnknown: hipErrorUnknown
_ TestAffineTransformTextureMemory.test_affine_transform_texture_memory[_param_29_{mode='constant', order=0, output=None, output_shape=10, shape=(10, 20, 30), theta=90}] _

self = <<cupyx_tests.scipy_tests.ndimage_tests.test_interpolation.TestAffineTransformTextureMemory object at 0x7fab38af5a30>  parameter: {'mode': 'constant', 'order': 0, 'output': None, 'output_shape': 10, 'shape': (10, 20, 30), 'theta': 90}>
xp = <module 'cupy' from '/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.hXnTrEAC7u/cupy/cupy/__init__.py'>
scp = <module 'cupyx.scipy' from '/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.hXnTrEAC7u/cupy/cupyx/scipy/__init__.py'>

    @testing.numpy_cupy_allclose(atol=0.1, scipy_name='scp')
    def test_affine_transform_texture_memory(self, xp, scp):
        a = xp.ones(self.shape, dtype=xp.float32)
        center = numpy.divide(numpy.subtract(self.shape, 1), 2)
    
        if len(self.shape) == 2:
            matrix = self._2d_rotation_matrix(self.theta, center)
        elif len(self.shape) == 3:
            matrix = self._3d_rotation_matrix(self.theta, center)
        else:
            return pytest.xfail('Unsupported shape')
    
        if self.output == 'empty':
            output = xp.empty(self.shape, dtype=xp.float32)
            if self.output_shape:
                return pytest.skip('This combination is tested in '
                                   'test_invalid_texture_arguments')
        else:
            output = self.output
    
        if self.output_shape:
            output_shape = (self.output_shape, ) * len(self.shape)
        else:
            output_shape = self.output_shape
    
        if xp == cupy:
            m = cupyx.scipy.ndimage.affine_transform
            matrix = cupy.array(matrix)
>           return m(a, matrix, output_shape=output_shape,
                     output=output, order=self.order,
                     mode=self.mode, texture_memory=True)

tests/cupyx_tests/scipy_tests/ndimage_tests/test_interpolation.py:398: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
cupyx/scipy/ndimage/interpolation.py:376: in affine_transform
    return _texture.affine_transformation(data=input,
cupyx/_texture.py:168: in affine_transformation
    texture_object = _create_texture_object(data,
cupyx/_texture.py:98: in _create_texture_object
    array = texture.CUDAarray(texture_fmt, *data.shape[::-1])
cupy/cuda/texture.pyx:296: in cupy.cuda.texture.CUDAarray.__init__
    self.ptr = runtime.malloc3DArray(desc.ptr, width, height, depth,
cupy_backends/cuda/api/runtime.pyx:593: in cupy_backends.cuda.api.runtime.malloc3DArray
    check_status(status)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

>   raise CUDARuntimeError(status)
E   AssertionError: Only cupy raises error
E   
E   Traceback (most recent call last):
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.hXnTrEAC7u/cupy/cupy/testing/_helper.py", line 47, in _call_func
E       result = impl(self, *args, **kw)
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.hXnTrEAC7u/cupy/tests/cupyx_tests/scipy_tests/ndimage_tests/test_interpolation.py", line 398, in test_affine_transform_texture_memory
E       return m(a, matrix, output_shape=output_shape,
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.hXnTrEAC7u/cupy/cupyx/scipy/ndimage/interpolation.py", line 376, in affine_transform
E       return _texture.affine_transformation(data=input,
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.hXnTrEAC7u/cupy/cupyx/_texture.py", line 168, in affine_transformation
E       texture_object = _create_texture_object(data,
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.hXnTrEAC7u/cupy/cupyx/_texture.py", line 98, in _create_texture_object
E       array = texture.CUDAarray(texture_fmt, *data.shape[::-1])
E     File "cupy/cuda/texture.pyx", line 296, in cupy.cuda.texture.CUDAarray.__init__
E       self.ptr = runtime.malloc3DArray(desc.ptr, width, height, depth,
E     File "cupy_backends/cuda/api/runtime.pyx", line 593, in cupy_backends.cuda.api.runtime.malloc3DArray
E       check_status(status)
E     File "cupy_backends/cuda/api/runtime.pyx", line 265, in cupy_backends.cuda.api.runtime.check_status
E       raise CUDARuntimeError(status)
E   cupy_backends.cuda.api.runtime.CUDARuntimeError: hipErrorUnknown: hipErrorUnknown

cupy_backends/cuda/api/runtime.pyx:265: AssertionError
----------------------------- Captured stderr call -----------------------------
Traceback (most recent call last):
  File "cupy_backends/cuda/api/runtime.pyx", line 644, in cupy_backends.cuda.api.runtime.freeArray
    check_status(status)
  File "cupy_backends/cuda/api/runtime.pyx", line 265, in cupy_backends.cuda.api.runtime.check_status
    raise CUDARuntimeError(status)
cupy_backends.cuda.api.runtime.CUDARuntimeError: hipErrorUnknown: hipErrorUnknown
_ TestAffineTransformTextureMemory.test_affine_transform_texture_memory[_param_30_{mode='constant', order=0, output=None, output_shape=10, shape=(10, 20, 30), theta=180}] _

self = <<cupyx_tests.scipy_tests.ndimage_tests.test_interpolation.TestAffineTransformTextureMemory object at 0x7fab371658e0>  parameter: {'mode': 'constant', 'order': 0, 'output': None, 'output_shape': 10, 'shape': (10, 20, 30), 'theta': 180}>
xp = <module 'cupy' from '/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.hXnTrEAC7u/cupy/cupy/__init__.py'>
scp = <module 'cupyx.scipy' from '/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.hXnTrEAC7u/cupy/cupyx/scipy/__init__.py'>

    @testing.numpy_cupy_allclose(atol=0.1, scipy_name='scp')
    def test_affine_transform_texture_memory(self, xp, scp):
        a = xp.ones(self.shape, dtype=xp.float32)
        center = numpy.divide(numpy.subtract(self.shape, 1), 2)
    
        if len(self.shape) == 2:
            matrix = self._2d_rotation_matrix(self.theta, center)
        elif len(self.shape) == 3:
            matrix = self._3d_rotation_matrix(self.theta, center)
        else:
            return pytest.xfail('Unsupported shape')
    
        if self.output == 'empty':
            output = xp.empty(self.shape, dtype=xp.float32)
            if self.output_shape:
                return pytest.skip('This combination is tested in '
                                   'test_invalid_texture_arguments')
        else:
            output = self.output
    
        if self.output_shape:
            output_shape = (self.output_shape, ) * len(self.shape)
        else:
            output_shape = self.output_shape
    
        if xp == cupy:
            m = cupyx.scipy.ndimage.affine_transform
            matrix = cupy.array(matrix)
>           return m(a, matrix, output_shape=output_shape,
                     output=output, order=self.order,
                     mode=self.mode, texture_memory=True)

tests/cupyx_tests/scipy_tests/ndimage_tests/test_interpolation.py:398: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
cupyx/scipy/ndimage/interpolation.py:376: in affine_transform
    return _texture.affine_transformation(data=input,
cupyx/_texture.py:168: in affine_transformation
    texture_object = _create_texture_object(data,
cupyx/_texture.py:98: in _create_texture_object
    array = texture.CUDAarray(texture_fmt, *data.shape[::-1])
cupy/cuda/texture.pyx:296: in cupy.cuda.texture.CUDAarray.__init__
    self.ptr = runtime.malloc3DArray(desc.ptr, width, height, depth,
cupy_backends/cuda/api/runtime.pyx:593: in cupy_backends.cuda.api.runtime.malloc3DArray
    check_status(status)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

>   raise CUDARuntimeError(status)
E   AssertionError: Only cupy raises error
E   
E   Traceback (most recent call last):
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.hXnTrEAC7u/cupy/cupy/testing/_helper.py", line 47, in _call_func
E       result = impl(self, *args, **kw)
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.hXnTrEAC7u/cupy/tests/cupyx_tests/scipy_tests/ndimage_tests/test_interpolation.py", line 398, in test_affine_transform_texture_memory
E       return m(a, matrix, output_shape=output_shape,
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.hXnTrEAC7u/cupy/cupyx/scipy/ndimage/interpolation.py", line 376, in affine_transform
E       return _texture.affine_transformation(data=input,
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.hXnTrEAC7u/cupy/cupyx/_texture.py", line 168, in affine_transformation
E       texture_object = _create_texture_object(data,
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.hXnTrEAC7u/cupy/cupyx/_texture.py", line 98, in _create_texture_object
E       array = texture.CUDAarray(texture_fmt, *data.shape[::-1])
E     File "cupy/cuda/texture.pyx", line 296, in cupy.cuda.texture.CUDAarray.__init__
E       self.ptr = runtime.malloc3DArray(desc.ptr, width, height, depth,
E     File "cupy_backends/cuda/api/runtime.pyx", line 593, in cupy_backends.cuda.api.runtime.malloc3DArray
E       check_status(status)
E     File "cupy_backends/cuda/api/runtime.pyx", line 265, in cupy_backends.cuda.api.runtime.check_status
E       raise CUDARuntimeError(status)
E   cupy_backends.cuda.api.runtime.CUDARuntimeError: hipErrorUnknown: hipErrorUnknown

cupy_backends/cuda/api/runtime.pyx:265: AssertionError
----------------------------- Captured stderr call -----------------------------
Traceback (most recent call last):
  File "cupy_backends/cuda/api/runtime.pyx", line 644, in cupy_backends.cuda.api.runtime.freeArray
    check_status(status)
  File "cupy_backends/cuda/api/runtime.pyx", line 265, in cupy_backends.cuda.api.runtime.check_status
    raise CUDARuntimeError(status)
cupy_backends.cuda.api.runtime.CUDARuntimeError: hipErrorUnknown: hipErrorUnknown
_ TestAffineTransformTextureMemory.test_affine_transform_texture_memory[_param_31_{mode='constant', order=0, output=None, output_shape=10, shape=(10, 20, 30), theta=270}] _

self = <<cupyx_tests.scipy_tests.ndimage_tests.test_interpolation.TestAffineTransformTextureMemory object at 0x7fab3714b880>  parameter: {'mode': 'constant', 'order': 0, 'output': None, 'output_shape': 10, 'shape': (10, 20, 30), 'theta': 270}>
xp = <module 'cupy' from '/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.hXnTrEAC7u/cupy/cupy/__init__.py'>
scp = <module 'cupyx.scipy' from '/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.hXnTrEAC7u/cupy/cupyx/scipy/__init__.py'>

    @testing.numpy_cupy_allclose(atol=0.1, scipy_name='scp')
    def test_affine_transform_texture_memory(self, xp, scp):
        a = xp.ones(self.shape, dtype=xp.float32)
        center = numpy.divide(numpy.subtract(self.shape, 1), 2)
    
        if len(self.shape) == 2:
            matrix = self._2d_rotation_matrix(self.theta, center)
        elif len(self.shape) == 3:
            matrix = self._3d_rotation_matrix(self.theta, center)
        else:
            return pytest.xfail('Unsupported shape')
    
        if self.output == 'empty':
            output = xp.empty(self.shape, dtype=xp.float32)
            if self.output_shape:
                return pytest.skip('This combination is tested in '
                                   'test_invalid_texture_arguments')
        else:
            output = self.output
    
        if self.output_shape:
            output_shape = (self.output_shape, ) * len(self.shape)
        else:
            output_shape = self.output_shape
    
        if xp == cupy:
            m = cupyx.scipy.ndimage.affine_transform
            matrix = cupy.array(matrix)
>           return m(a, matrix, output_shape=output_shape,
                     output=output, order=self.order,
                     mode=self.mode, texture_memory=True)

tests/cupyx_tests/scipy_tests/ndimage_tests/test_interpolation.py:398: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
cupyx/scipy/ndimage/interpolation.py:376: in affine_transform
    return _texture.affine_transformation(data=input,
cupyx/_texture.py:168: in affine_transformation
    texture_object = _create_texture_object(data,
cupyx/_texture.py:98: in _create_texture_object
    array = texture.CUDAarray(texture_fmt, *data.shape[::-1])
cupy/cuda/texture.pyx:296: in cupy.cuda.texture.CUDAarray.__init__
    self.ptr = runtime.malloc3DArray(desc.ptr, width, height, depth,
cupy_backends/cuda/api/runtime.pyx:593: in cupy_backends.cuda.api.runtime.malloc3DArray
    check_status(status)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

>   raise CUDARuntimeError(status)
E   AssertionError: Only cupy raises error
E   
E   Traceback (most recent call last):
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.hXnTrEAC7u/cupy/cupy/testing/_helper.py", line 47, in _call_func
E       result = impl(self, *args, **kw)
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.hXnTrEAC7u/cupy/tests/cupyx_tests/scipy_tests/ndimage_tests/test_interpolation.py", line 398, in test_affine_transform_texture_memory
E       return m(a, matrix, output_shape=output_shape,
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.hXnTrEAC7u/cupy/cupyx/scipy/ndimage/interpolation.py", line 376, in affine_transform
E       return _texture.affine_transformation(data=input,
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.hXnTrEAC7u/cupy/cupyx/_texture.py", line 168, in affine_transformation
E       texture_object = _create_texture_object(data,
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.hXnTrEAC7u/cupy/cupyx/_texture.py", line 98, in _create_texture_object
E       array = texture.CUDAarray(texture_fmt, *data.shape[::-1])
E     File "cupy/cuda/texture.pyx", line 296, in cupy.cuda.texture.CUDAarray.__init__
E       self.ptr = runtime.malloc3DArray(desc.ptr, width, height, depth,
E     File "cupy_backends/cuda/api/runtime.pyx", line 593, in cupy_backends.cuda.api.runtime.malloc3DArray
E       check_status(status)
E     File "cupy_backends/cuda/api/runtime.pyx", line 265, in cupy_backends.cuda.api.runtime.check_status
E       raise CUDARuntimeError(status)
E   cupy_backends.cuda.api.runtime.CUDARuntimeError: hipErrorUnknown: hipErrorUnknown

cupy_backends/cuda/api/runtime.pyx:265: AssertionError
----------------------------- Captured stderr call -----------------------------
Traceback (most recent call last):
  File "cupy_backends/cuda/api/runtime.pyx", line 644, in cupy_backends.cuda.api.runtime.freeArray
    check_status(status)
  File "cupy_backends/cuda/api/runtime.pyx", line 265, in cupy_backends.cuda.api.runtime.check_status
    raise CUDARuntimeError(status)
cupy_backends.cuda.api.runtime.CUDARuntimeError: hipErrorUnknown: hipErrorUnknown
_ TestAffineTransformTextureMemory.test_affine_transform_texture_memory[_param_32_{mode='constant', order=0, output=float32, output_shape=None, shape=(100, 100), theta=0}] _

self = <<cupyx_tests.scipy_tests.ndimage_tests.test_interpolation.TestAffineTransformTextureMemory object at 0x7fab370ec400> ...de': 'constant', 'order': 0, 'output': <class 'numpy.float32'>, 'output_shape': None, 'shape': (100, 100), 'theta': 0}>
xp = <module 'cupy' from '/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.hXnTrEAC7u/cupy/cupy/__init__.py'>
scp = <module 'cupyx.scipy' from '/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.hXnTrEAC7u/cupy/cupyx/scipy/__init__.py'>

    @testing.numpy_cupy_allclose(atol=0.1, scipy_name='scp')
    def test_affine_transform_texture_memory(self, xp, scp):
        a = xp.ones(self.shape, dtype=xp.float32)
        center = numpy.divide(numpy.subtract(self.shape, 1), 2)
    
        if len(self.shape) == 2:
            matrix = self._2d_rotation_matrix(self.theta, center)
        elif len(self.shape) == 3:
            matrix = self._3d_rotation_matrix(self.theta, center)
        else:
            return pytest.xfail('Unsupported shape')
    
        if self.output == 'empty':
            output = xp.empty(self.shape, dtype=xp.float32)
            if self.output_shape:
                return pytest.skip('This combination is tested in '
                                   'test_invalid_texture_arguments')
        else:
            output = self.output
    
        if self.output_shape:
            output_shape = (self.output_shape, ) * len(self.shape)
        else:
            output_shape = self.output_shape
    
        if xp == cupy:
            m = cupyx.scipy.ndimage.affine_transform
            matrix = cupy.array(matrix)
>           return m(a, matrix, output_shape=output_shape,
                     output=output, order=self.order,
                     mode=self.mode, texture_memory=True)

tests/cupyx_tests/scipy_tests/ndimage_tests/test_interpolation.py:398: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
cupyx/scipy/ndimage/interpolation.py:376: in affine_transform
    return _texture.affine_transformation(data=input,
cupyx/_texture.py:168: in affine_transformation
    texture_object = _create_texture_object(data,
cupyx/_texture.py:98: in _create_texture_object
    array = texture.CUDAarray(texture_fmt, *data.shape[::-1])
cupy/cuda/texture.pyx:296: in cupy.cuda.texture.CUDAarray.__init__
    self.ptr = runtime.malloc3DArray(desc.ptr, width, height, depth,
cupy_backends/cuda/api/runtime.pyx:593: in cupy_backends.cuda.api.runtime.malloc3DArray
    check_status(status)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

>   raise CUDARuntimeError(status)
E   AssertionError: Only cupy raises error
E   
E   Traceback (most recent call last):
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.hXnTrEAC7u/cupy/cupy/testing/_helper.py", line 47, in _call_func
E       result = impl(self, *args, **kw)
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.hXnTrEAC7u/cupy/tests/cupyx_tests/scipy_tests/ndimage_tests/test_interpolation.py", line 398, in test_affine_transform_texture_memory
E       return m(a, matrix, output_shape=output_shape,
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.hXnTrEAC7u/cupy/cupyx/scipy/ndimage/interpolation.py", line 376, in affine_transform
E       return _texture.affine_transformation(data=input,
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.hXnTrEAC7u/cupy/cupyx/_texture.py", line 168, in affine_transformation
E       texture_object = _create_texture_object(data,
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.hXnTrEAC7u/cupy/cupyx/_texture.py", line 98, in _create_texture_object
E       array = texture.CUDAarray(texture_fmt, *data.shape[::-1])
E     File "cupy/cuda/texture.pyx", line 296, in cupy.cuda.texture.CUDAarray.__init__
E       self.ptr = runtime.malloc3DArray(desc.ptr, width, height, depth,
E     File "cupy_backends/cuda/api/runtime.pyx", line 593, in cupy_backends.cuda.api.runtime.malloc3DArray
E       check_status(status)
E     File "cupy_backends/cuda/api/runtime.pyx", line 265, in cupy_backends.cuda.api.runtime.check_status
E       raise CUDARuntimeError(status)
E   cupy_backends.cuda.api.runtime.CUDARuntimeError: hipErrorUnknown: hipErrorUnknown

cupy_backends/cuda/api/runtime.pyx:265: AssertionError
----------------------------- Captured stderr call -----------------------------
Traceback (most recent call last):
  File "cupy_backends/cuda/api/runtime.pyx", line 644, in cupy_backends.cuda.api.runtime.freeArray
    check_status(status)
  File "cupy_backends/cuda/api/runtime.pyx", line 265, in cupy_backends.cuda.api.runtime.check_status
    raise CUDARuntimeError(status)
cupy_backends.cuda.api.runtime.CUDARuntimeError: hipErrorUnknown: hipErrorUnknown
_ TestAffineTransformTextureMemory.test_affine_transform_texture_memory[_param_33_{mode='constant', order=0, output=float32, output_shape=None, shape=(100, 100), theta=90}] _

self = <<cupyx_tests.scipy_tests.ndimage_tests.test_interpolation.TestAffineTransformTextureMemory object at 0x7fab37c84d30> ...e': 'constant', 'order': 0, 'output': <class 'numpy.float32'>, 'output_shape': None, 'shape': (100, 100), 'theta': 90}>
xp = <module 'cupy' from '/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.hXnTrEAC7u/cupy/cupy/__init__.py'>
scp = <module 'cupyx.scipy' from '/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.hXnTrEAC7u/cupy/cupyx/scipy/__init__.py'>

    @testing.numpy_cupy_allclose(atol=0.1, scipy_name='scp')
    def test_affine_transform_texture_memory(self, xp, scp):
        a = xp.ones(self.shape, dtype=xp.float32)
        center = numpy.divide(numpy.subtract(self.shape, 1), 2)
    
        if len(self.shape) == 2:
            matrix = self._2d_rotation_matrix(self.theta, center)
        elif len(self.shape) == 3:
            matrix = self._3d_rotation_matrix(self.theta, center)
        else:
            return pytest.xfail('Unsupported shape')
    
        if self.output == 'empty':
            output = xp.empty(self.shape, dtype=xp.float32)
            if self.output_shape:
                return pytest.skip('This combination is tested in '
                                   'test_invalid_texture_arguments')
        else:
            output = self.output
    
        if self.output_shape:
            output_shape = (self.output_shape, ) * len(self.shape)
        else:
            output_shape = self.output_shape
    
        if xp == cupy:
            m = cupyx.scipy.ndimage.affine_transform
            matrix = cupy.array(matrix)
>           return m(a, matrix, output_shape=output_shape,
                     output=output, order=self.order,
                     mode=self.mode, texture_memory=True)

tests/cupyx_tests/scipy_tests/ndimage_tests/test_interpolation.py:398: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
cupyx/scipy/ndimage/interpolation.py:376: in affine_transform
    return _texture.affine_transformation(data=input,
cupyx/_texture.py:168: in affine_transformation
    texture_object = _create_texture_object(data,
cupyx/_texture.py:98: in _create_texture_object
    array = texture.CUDAarray(texture_fmt, *data.shape[::-1])
cupy/cuda/texture.pyx:296: in cupy.cuda.texture.CUDAarray.__init__
    self.ptr = runtime.malloc3DArray(desc.ptr, width, height, depth,
cupy_backends/cuda/api/runtime.pyx:593: in cupy_backends.cuda.api.runtime.malloc3DArray
    check_status(status)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

>   raise CUDARuntimeError(status)
E   AssertionError: Only cupy raises error
E   
E   Traceback (most recent call last):
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.hXnTrEAC7u/cupy/cupy/testing/_helper.py", line 47, in _call_func
E       result = impl(self, *args, **kw)
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.hXnTrEAC7u/cupy/tests/cupyx_tests/scipy_tests/ndimage_tests/test_interpolation.py", line 398, in test_affine_transform_texture_memory
E       return m(a, matrix, output_shape=output_shape,
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.hXnTrEAC7u/cupy/cupyx/scipy/ndimage/interpolation.py", line 376, in affine_transform
E       return _texture.affine_transformation(data=input,
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.hXnTrEAC7u/cupy/cupyx/_texture.py", line 168, in affine_transformation
E       texture_object = _create_texture_object(data,
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.hXnTrEAC7u/cupy/cupyx/_texture.py", line 98, in _create_texture_object
E       array = texture.CUDAarray(texture_fmt, *data.shape[::-1])
E     File "cupy/cuda/texture.pyx", line 296, in cupy.cuda.texture.CUDAarray.__init__
E       self.ptr = runtime.malloc3DArray(desc.ptr, width, height, depth,
E     File "cupy_backends/cuda/api/runtime.pyx", line 593, in cupy_backends.cuda.api.runtime.malloc3DArray
E       check_status(status)
E     File "cupy_backends/cuda/api/runtime.pyx", line 265, in cupy_backends.cuda.api.runtime.check_status
E       raise CUDARuntimeError(status)
E   cupy_backends.cuda.api.runtime.CUDARuntimeError: hipErrorUnknown: hipErrorUnknown

cupy_backends/cuda/api/runtime.pyx:265: AssertionError
----------------------------- Captured stderr call -----------------------------
Traceback (most recent call last):
  File "cupy_backends/cuda/api/runtime.pyx", line 644, in cupy_backends.cuda.api.runtime.freeArray
    check_status(status)
  File "cupy_backends/cuda/api/runtime.pyx", line 265, in cupy_backends.cuda.api.runtime.check_status
    raise CUDARuntimeError(status)
cupy_backends.cuda.api.runtime.CUDARuntimeError: hipErrorUnknown: hipErrorUnknown
_ TestAffineTransformTextureMemory.test_affine_transform_texture_memory[_param_34_{mode='constant', order=0, output=float32, output_shape=None, shape=(100, 100), theta=180}] _

self = <<cupyx_tests.scipy_tests.ndimage_tests.test_interpolation.TestAffineTransformTextureMemory object at 0x7fab37257ee0> ...': 'constant', 'order': 0, 'output': <class 'numpy.float32'>, 'output_shape': None, 'shape': (100, 100), 'theta': 180}>
xp = <module 'cupy' from '/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.hXnTrEAC7u/cupy/cupy/__init__.py'>
scp = <module 'cupyx.scipy' from '/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.hXnTrEAC7u/cupy/cupyx/scipy/__init__.py'>

    @testing.numpy_cupy_allclose(atol=0.1, scipy_name='scp')
    def test_affine_transform_texture_memory(self, xp, scp):
        a = xp.ones(self.shape, dtype=xp.float32)
        center = numpy.divide(numpy.subtract(self.shape, 1), 2)
    
        if len(self.shape) == 2:
            matrix = self._2d_rotation_matrix(self.theta, center)
        elif len(self.shape) == 3:
            matrix = self._3d_rotation_matrix(self.theta, center)
        else:
            return pytest.xfail('Unsupported shape')
    
        if self.output == 'empty':
            output = xp.empty(self.shape, dtype=xp.float32)
            if self.output_shape:
                return pytest.skip('This combination is tested in '
                                   'test_invalid_texture_arguments')
        else:
            output = self.output
    
        if self.output_shape:
            output_shape = (self.output_shape, ) * len(self.shape)
        else:
            output_shape = self.output_shape
    
        if xp == cupy:
            m = cupyx.scipy.ndimage.affine_transform
            matrix = cupy.array(matrix)
>           return m(a, matrix, output_shape=output_shape,
                     output=output, order=self.order,
                     mode=self.mode, texture_memory=True)

tests/cupyx_tests/scipy_tests/ndimage_tests/test_interpolation.py:398: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
cupyx/scipy/ndimage/interpolation.py:376: in affine_transform
    return _texture.affine_transformation(data=input,
cupyx/_texture.py:168: in affine_transformation
    texture_object = _create_texture_object(data,
cupyx/_texture.py:98: in _create_texture_object
    array = texture.CUDAarray(texture_fmt, *data.shape[::-1])
cupy/cuda/texture.pyx:296: in cupy.cuda.texture.CUDAarray.__init__
    self.ptr = runtime.malloc3DArray(desc.ptr, width, height, depth,
cupy_backends/cuda/api/runtime.pyx:593: in cupy_backends.cuda.api.runtime.malloc3DArray
    check_status(status)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

>   raise CUDARuntimeError(status)
E   AssertionError: Only cupy raises error
E   
E   Traceback (most recent call last):
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.hXnTrEAC7u/cupy/cupy/testing/_helper.py", line 47, in _call_func
E       result = impl(self, *args, **kw)
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.hXnTrEAC7u/cupy/tests/cupyx_tests/scipy_tests/ndimage_tests/test_interpolation.py", line 398, in test_affine_transform_texture_memory
E       return m(a, matrix, output_shape=output_shape,
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.hXnTrEAC7u/cupy/cupyx/scipy/ndimage/interpolation.py", line 376, in affine_transform
E       return _texture.affine_transformation(data=input,
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.hXnTrEAC7u/cupy/cupyx/_texture.py", line 168, in affine_transformation
E       texture_object = _create_texture_object(data,
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.hXnTrEAC7u/cupy/cupyx/_texture.py", line 98, in _create_texture_object
E       array = texture.CUDAarray(texture_fmt, *data.shape[::-1])
E     File "cupy/cuda/texture.pyx", line 296, in cupy.cuda.texture.CUDAarray.__init__
E       self.ptr = runtime.malloc3DArray(desc.ptr, width, height, depth,
E     File "cupy_backends/cuda/api/runtime.pyx", line 593, in cupy_backends.cuda.api.runtime.malloc3DArray
E       check_status(status)
E     File "cupy_backends/cuda/api/runtime.pyx", line 265, in cupy_backends.cuda.api.runtime.check_status
E       raise CUDARuntimeError(status)
E   cupy_backends.cuda.api.runtime.CUDARuntimeError: hipErrorUnknown: hipErrorUnknown

cupy_backends/cuda/api/runtime.pyx:265: AssertionError
----------------------------- Captured stderr call -----------------------------
Traceback (most recent call last):
  File "cupy_backends/cuda/api/runtime.pyx", line 644, in cupy_backends.cuda.api.runtime.freeArray
    check_status(status)
  File "cupy_backends/cuda/api/runtime.pyx", line 265, in cupy_backends.cuda.api.runtime.check_status
    raise CUDARuntimeError(status)
cupy_backends.cuda.api.runtime.CUDARuntimeError: hipErrorUnknown: hipErrorUnknown
_ TestAffineTransformTextureMemory.test_affine_transform_texture_memory[_param_35_{mode='constant', order=0, output=float32, output_shape=None, shape=(100, 100), theta=270}] _

self = <<cupyx_tests.scipy_tests.ndimage_tests.test_interpolation.TestAffineTransformTextureMemory object at 0x7fab37299490> ...': 'constant', 'order': 0, 'output': <class 'numpy.float32'>, 'output_shape': None, 'shape': (100, 100), 'theta': 270}>
xp = <module 'cupy' from '/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.hXnTrEAC7u/cupy/cupy/__init__.py'>
scp = <module 'cupyx.scipy' from '/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.hXnTrEAC7u/cupy/cupyx/scipy/__init__.py'>

    @testing.numpy_cupy_allclose(atol=0.1, scipy_name='scp')
    def test_affine_transform_texture_memory(self, xp, scp):
        a = xp.ones(self.shape, dtype=xp.float32)
        center = numpy.divide(numpy.subtract(self.shape, 1), 2)
    
        if len(self.shape) == 2:
            matrix = self._2d_rotation_matrix(self.theta, center)
        elif len(self.shape) == 3:
            matrix = self._3d_rotation_matrix(self.theta, center)
        else:
            return pytest.xfail('Unsupported shape')
    
        if self.output == 'empty':
            output = xp.empty(self.shape, dtype=xp.float32)
            if self.output_shape:
                return pytest.skip('This combination is tested in '
                                   'test_invalid_texture_arguments')
        else:
            output = self.output
    
        if self.output_shape:
            output_shape = (self.output_shape, ) * len(self.shape)
        else:
            output_shape = self.output_shape
    
        if xp == cupy:
            m = cupyx.scipy.ndimage.affine_transform
            matrix = cupy.array(matrix)
>           return m(a, matrix, output_shape=output_shape,
                     output=output, order=self.order,
                     mode=self.mode, texture_memory=True)

tests/cupyx_tests/scipy_tests/ndimage_tests/test_interpolation.py:398: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
cupyx/scipy/ndimage/interpolation.py:376: in affine_transform
    return _texture.affine_transformation(data=input,
cupyx/_texture.py:168: in affine_transformation
    texture_object = _create_texture_object(data,
cupyx/_texture.py:98: in _create_texture_object
    array = texture.CUDAarray(texture_fmt, *data.shape[::-1])
cupy/cuda/texture.pyx:296: in cupy.cuda.texture.CUDAarray.__init__
    self.ptr = runtime.malloc3DArray(desc.ptr, width, height, depth,
cupy_backends/cuda/api/runtime.pyx:593: in cupy_backends.cuda.api.runtime.malloc3DArray
    check_status(status)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

>   raise CUDARuntimeError(status)
E   AssertionError: Only cupy raises error
E   
E   Traceback (most recent call last):
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.hXnTrEAC7u/cupy/cupy/testing/_helper.py", line 47, in _call_func
E       result = impl(self, *args, **kw)
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.hXnTrEAC7u/cupy/tests/cupyx_tests/scipy_tests/ndimage_tests/test_interpolation.py", line 398, in test_affine_transform_texture_memory
E       return m(a, matrix, output_shape=output_shape,
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.hXnTrEAC7u/cupy/cupyx/scipy/ndimage/interpolation.py", line 376, in affine_transform
E       return _texture.affine_transformation(data=input,
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.hXnTrEAC7u/cupy/cupyx/_texture.py", line 168, in affine_transformation
E       texture_object = _create_texture_object(data,
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.hXnTrEAC7u/cupy/cupyx/_texture.py", line 98, in _create_texture_object
E       array = texture.CUDAarray(texture_fmt, *data.shape[::-1])
E     File "cupy/cuda/texture.pyx", line 296, in cupy.cuda.texture.CUDAarray.__init__
E       self.ptr = runtime.malloc3DArray(desc.ptr, width, height, depth,
E     File "cupy_backends/cuda/api/runtime.pyx", line 593, in cupy_backends.cuda.api.runtime.malloc3DArray
E       check_status(status)
E     File "cupy_backends/cuda/api/runtime.pyx", line 265, in cupy_backends.cuda.api.runtime.check_status
E       raise CUDARuntimeError(status)
E   cupy_backends.cuda.api.runtime.CUDARuntimeError: hipErrorUnknown: hipErrorUnknown

cupy_backends/cuda/api/runtime.pyx:265: AssertionError
----------------------------- Captured stderr call -----------------------------
Traceback (most recent call last):
  File "cupy_backends/cuda/api/runtime.pyx", line 644, in cupy_backends.cuda.api.runtime.freeArray
    check_status(status)
  File "cupy_backends/cuda/api/runtime.pyx", line 265, in cupy_backends.cuda.api.runtime.check_status
    raise CUDARuntimeError(status)
cupy_backends.cuda.api.runtime.CUDARuntimeError: hipErrorUnknown: hipErrorUnknown
_ TestAffineTransformTextureMemory.test_affine_transform_texture_memory[_param_36_{mode='constant', order=0, output=float32, output_shape=None, shape=(10, 20), theta=0}] _

self = <<cupyx_tests.scipy_tests.ndimage_tests.test_interpolation.TestAffineTransformTextureMemory object at 0x7fab370831c0> ...mode': 'constant', 'order': 0, 'output': <class 'numpy.float32'>, 'output_shape': None, 'shape': (10, 20), 'theta': 0}>
xp = <module 'cupy' from '/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.hXnTrEAC7u/cupy/cupy/__init__.py'>
scp = <module 'cupyx.scipy' from '/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.hXnTrEAC7u/cupy/cupyx/scipy/__init__.py'>

    @testing.numpy_cupy_allclose(atol=0.1, scipy_name='scp')
    def test_affine_transform_texture_memory(self, xp, scp):
        a = xp.ones(self.shape, dtype=xp.float32)
        center = numpy.divide(numpy.subtract(self.shape, 1), 2)
    
        if len(self.shape) == 2:
            matrix = self._2d_rotation_matrix(self.theta, center)
        elif len(self.shape) == 3:
            matrix = self._3d_rotation_matrix(self.theta, center)
        else:
            return pytest.xfail('Unsupported shape')
    
        if self.output == 'empty':
            output = xp.empty(self.shape, dtype=xp.float32)
            if self.output_shape:
                return pytest.skip('This combination is tested in '
                                   'test_invalid_texture_arguments')
        else:
            output = self.output
    
        if self.output_shape:
            output_shape = (self.output_shape, ) * len(self.shape)
        else:
            output_shape = self.output_shape
    
        if xp == cupy:
            m = cupyx.scipy.ndimage.affine_transform
            matrix = cupy.array(matrix)
>           return m(a, matrix, output_shape=output_shape,
                     output=output, order=self.order,
                     mode=self.mode, texture_memory=True)

tests/cupyx_tests/scipy_tests/ndimage_tests/test_interpolation.py:398: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
cupyx/scipy/ndimage/interpolation.py:376: in affine_transform
    return _texture.affine_transformation(data=input,
cupyx/_texture.py:168: in affine_transformation
    texture_object = _create_texture_object(data,
cupyx/_texture.py:98: in _create_texture_object
    array = texture.CUDAarray(texture_fmt, *data.shape[::-1])
cupy/cuda/texture.pyx:296: in cupy.cuda.texture.CUDAarray.__init__
    self.ptr = runtime.malloc3DArray(desc.ptr, width, height, depth,
cupy_backends/cuda/api/runtime.pyx:593: in cupy_backends.cuda.api.runtime.malloc3DArray
    check_status(status)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

>   raise CUDARuntimeError(status)
E   AssertionError: Only cupy raises error
E   
E   Traceback (most recent call last):
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.hXnTrEAC7u/cupy/cupy/testing/_helper.py", line 47, in _call_func
E       result = impl(self, *args, **kw)
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.hXnTrEAC7u/cupy/tests/cupyx_tests/scipy_tests/ndimage_tests/test_interpolation.py", line 398, in test_affine_transform_texture_memory
E       return m(a, matrix, output_shape=output_shape,
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.hXnTrEAC7u/cupy/cupyx/scipy/ndimage/interpolation.py", line 376, in affine_transform
E       return _texture.affine_transformation(data=input,
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.hXnTrEAC7u/cupy/cupyx/_texture.py", line 168, in affine_transformation
E       texture_object = _create_texture_object(data,
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.hXnTrEAC7u/cupy/cupyx/_texture.py", line 98, in _create_texture_object
E       array = texture.CUDAarray(texture_fmt, *data.shape[::-1])
E     File "cupy/cuda/texture.pyx", line 296, in cupy.cuda.texture.CUDAarray.__init__
E       self.ptr = runtime.malloc3DArray(desc.ptr, width, height, depth,
E     File "cupy_backends/cuda/api/runtime.pyx", line 593, in cupy_backends.cuda.api.runtime.malloc3DArray
E       check_status(status)
E     File "cupy_backends/cuda/api/runtime.pyx", line 265, in cupy_backends.cuda.api.runtime.check_status
E       raise CUDARuntimeError(status)
E   cupy_backends.cuda.api.runtime.CUDARuntimeError: hipErrorUnknown: hipErrorUnknown

cupy_backends/cuda/api/runtime.pyx:265: AssertionError
----------------------------- Captured stderr call -----------------------------
Traceback (most recent call last):
  File "cupy_backends/cuda/api/runtime.pyx", line 644, in cupy_backends.cuda.api.runtime.freeArray
    check_status(status)
  File "cupy_backends/cuda/api/runtime.pyx", line 265, in cupy_backends.cuda.api.runtime.check_status
    raise CUDARuntimeError(status)
cupy_backends.cuda.api.runtime.CUDARuntimeError: hipErrorUnknown: hipErrorUnknown
_ TestAffineTransformTextureMemory.test_affine_transform_texture_memory[_param_37_{mode='constant', order=0, output=float32, output_shape=None, shape=(10, 20), theta=90}] _

self = <<cupyx_tests.scipy_tests.ndimage_tests.test_interpolation.TestAffineTransformTextureMemory object at 0x7fab3714b1c0> ...ode': 'constant', 'order': 0, 'output': <class 'numpy.float32'>, 'output_shape': None, 'shape': (10, 20), 'theta': 90}>
xp = <module 'cupy' from '/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.hXnTrEAC7u/cupy/cupy/__init__.py'>
scp = <module 'cupyx.scipy' from '/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.hXnTrEAC7u/cupy/cupyx/scipy/__init__.py'>

    @testing.numpy_cupy_allclose(atol=0.1, scipy_name='scp')
    def test_affine_transform_texture_memory(self, xp, scp):
        a = xp.ones(self.shape, dtype=xp.float32)
        center = numpy.divide(numpy.subtract(self.shape, 1), 2)
    
        if len(self.shape) == 2:
            matrix = self._2d_rotation_matrix(self.theta, center)
        elif len(self.shape) == 3:
            matrix = self._3d_rotation_matrix(self.theta, center)
        else:
            return pytest.xfail('Unsupported shape')
    
        if self.output == 'empty':
            output = xp.empty(self.shape, dtype=xp.float32)
            if self.output_shape:
                return pytest.skip('This combination is tested in '
                                   'test_invalid_texture_arguments')
        else:
            output = self.output
    
        if self.output_shape:
            output_shape = (self.output_shape, ) * len(self.shape)
        else:
            output_shape = self.output_shape
    
        if xp == cupy:
            m = cupyx.scipy.ndimage.affine_transform
            matrix = cupy.array(matrix)
>           return m(a, matrix, output_shape=output_shape,
                     output=output, order=self.order,
                     mode=self.mode, texture_memory=True)

tests/cupyx_tests/scipy_tests/ndimage_tests/test_interpolation.py:398: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
cupyx/scipy/ndimage/interpolation.py:376: in affine_transform
    return _texture.affine_transformation(data=input,
cupyx/_texture.py:168: in affine_transformation
    texture_object = _create_texture_object(data,
cupyx/_texture.py:98: in _create_texture_object
    array = texture.CUDAarray(texture_fmt, *data.shape[::-1])
cupy/cuda/texture.pyx:296: in cupy.cuda.texture.CUDAarray.__init__
    self.ptr = runtime.malloc3DArray(desc.ptr, width, height, depth,
cupy_backends/cuda/api/runtime.pyx:593: in cupy_backends.cuda.api.runtime.malloc3DArray
    check_status(status)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

>   raise CUDARuntimeError(status)
E   AssertionError: Only cupy raises error
E   
E   Traceback (most recent call last):
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.hXnTrEAC7u/cupy/cupy/testing/_helper.py", line 47, in _call_func
E       result = impl(self, *args, **kw)
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.hXnTrEAC7u/cupy/tests/cupyx_tests/scipy_tests/ndimage_tests/test_interpolation.py", line 398, in test_affine_transform_texture_memory
E       return m(a, matrix, output_shape=output_shape,
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.hXnTrEAC7u/cupy/cupyx/scipy/ndimage/interpolation.py", line 376, in affine_transform
E       return _texture.affine_transformation(data=input,
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.hXnTrEAC7u/cupy/cupyx/_texture.py", line 168, in affine_transformation
E       texture_object = _create_texture_object(data,
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.hXnTrEAC7u/cupy/cupyx/_texture.py", line 98, in _create_texture_object
E       array = texture.CUDAarray(texture_fmt, *data.shape[::-1])
E     File "cupy/cuda/texture.pyx", line 296, in cupy.cuda.texture.CUDAarray.__init__
E       self.ptr = runtime.malloc3DArray(desc.ptr, width, height, depth,
E     File "cupy_backends/cuda/api/runtime.pyx", line 593, in cupy_backends.cuda.api.runtime.malloc3DArray
E       check_status(status)
E     File "cupy_backends/cuda/api/runtime.pyx", line 265, in cupy_backends.cuda.api.runtime.check_status
E       raise CUDARuntimeError(status)
E   cupy_backends.cuda.api.runtime.CUDARuntimeError: hipErrorUnknown: hipErrorUnknown

cupy_backends/cuda/api/runtime.pyx:265: AssertionError
----------------------------- Captured stderr call -----------------------------
Traceback (most recent call last):
  File "cupy_backends/cuda/api/runtime.pyx", line 644, in cupy_backends.cuda.api.runtime.freeArray
    check_status(status)
  File "cupy_backends/cuda/api/runtime.pyx", line 265, in cupy_backends.cuda.api.runtime.check_status
    raise CUDARuntimeError(status)
cupy_backends.cuda.api.runtime.CUDARuntimeError: hipErrorUnknown: hipErrorUnknown
_ TestAffineTransformTextureMemory.test_affine_transform_texture_memory[_param_38_{mode='constant', order=0, output=float32, output_shape=None, shape=(10, 20), theta=180}] _

self = <<cupyx_tests.scipy_tests.ndimage_tests.test_interpolation.TestAffineTransformTextureMemory object at 0x7fab370942e0> ...de': 'constant', 'order': 0, 'output': <class 'numpy.float32'>, 'output_shape': None, 'shape': (10, 20), 'theta': 180}>
xp = <module 'cupy' from '/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.hXnTrEAC7u/cupy/cupy/__init__.py'>
scp = <module 'cupyx.scipy' from '/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.hXnTrEAC7u/cupy/cupyx/scipy/__init__.py'>

    @testing.numpy_cupy_allclose(atol=0.1, scipy_name='scp')
    def test_affine_transform_texture_memory(self, xp, scp):
        a = xp.ones(self.shape, dtype=xp.float32)
        center = numpy.divide(numpy.subtract(self.shape, 1), 2)
    
        if len(self.shape) == 2:
            matrix = self._2d_rotation_matrix(self.theta, center)
        elif len(self.shape) == 3:
            matrix = self._3d_rotation_matrix(self.theta, center)
        else:
            return pytest.xfail('Unsupported shape')
    
        if self.output == 'empty':
            output = xp.empty(self.shape, dtype=xp.float32)
            if self.output_shape:
                return pytest.skip('This combination is tested in '
                                   'test_invalid_texture_arguments')
        else:
            output = self.output
    
        if self.output_shape:
            output_shape = (self.output_shape, ) * len(self.shape)
        else:
            output_shape = self.output_shape
    
        if xp == cupy:
            m = cupyx.scipy.ndimage.affine_transform
            matrix = cupy.array(matrix)
>           return m(a, matrix, output_shape=output_shape,
                     output=output, order=self.order,
                     mode=self.mode, texture_memory=True)

tests/cupyx_tests/scipy_tests/ndimage_tests/test_interpolation.py:398: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
cupyx/scipy/ndimage/interpolation.py:376: in affine_transform
    return _texture.affine_transformation(data=input,
cupyx/_texture.py:168: in affine_transformation
    texture_object = _create_texture_object(data,
cupyx/_texture.py:98: in _create_texture_object
    array = texture.CUDAarray(texture_fmt, *data.shape[::-1])
cupy/cuda/texture.pyx:296: in cupy.cuda.texture.CUDAarray.__init__
    self.ptr = runtime.malloc3DArray(desc.ptr, width, height, depth,
cupy_backends/cuda/api/runtime.pyx:593: in cupy_backends.cuda.api.runtime.malloc3DArray
    check_status(status)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

>   raise CUDARuntimeError(status)
E   AssertionError: Only cupy raises error
E   
E   Traceback (most recent call last):
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.hXnTrEAC7u/cupy/cupy/testing/_helper.py", line 47, in _call_func
E       result = impl(self, *args, **kw)
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.hXnTrEAC7u/cupy/tests/cupyx_tests/scipy_tests/ndimage_tests/test_interpolation.py", line 398, in test_affine_transform_texture_memory
E       return m(a, matrix, output_shape=output_shape,
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.hXnTrEAC7u/cupy/cupyx/scipy/ndimage/interpolation.py", line 376, in affine_transform
E       return _texture.affine_transformation(data=input,
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.hXnTrEAC7u/cupy/cupyx/_texture.py", line 168, in affine_transformation
E       texture_object = _create_texture_object(data,
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.hXnTrEAC7u/cupy/cupyx/_texture.py", line 98, in _create_texture_object
E       array = texture.CUDAarray(texture_fmt, *data.shape[::-1])
E     File "cupy/cuda/texture.pyx", line 296, in cupy.cuda.texture.CUDAarray.__init__
E       self.ptr = runtime.malloc3DArray(desc.ptr, width, height, depth,
E     File "cupy_backends/cuda/api/runtime.pyx", line 593, in cupy_backends.cuda.api.runtime.malloc3DArray
E       check_status(status)
E     File "cupy_backends/cuda/api/runtime.pyx", line 265, in cupy_backends.cuda.api.runtime.check_status
E       raise CUDARuntimeError(status)
E   cupy_backends.cuda.api.runtime.CUDARuntimeError: hipErrorUnknown: hipErrorUnknown

cupy_backends/cuda/api/runtime.pyx:265: AssertionError
----------------------------- Captured stderr call -----------------------------
Traceback (most recent call last):
  File "cupy_backends/cuda/api/runtime.pyx", line 644, in cupy_backends.cuda.api.runtime.freeArray
    check_status(status)
  File "cupy_backends/cuda/api/runtime.pyx", line 265, in cupy_backends.cuda.api.runtime.check_status
    raise CUDARuntimeError(status)
cupy_backends.cuda.api.runtime.CUDARuntimeError: hipErrorUnknown: hipErrorUnknown
_ TestAffineTransformTextureMemory.test_affine_transform_texture_memory[_param_39_{mode='constant', order=0, output=float32, output_shape=None, shape=(10, 20), theta=270}] _

self = <<cupyx_tests.scipy_tests.ndimage_tests.test_interpolation.TestAffineTransformTextureMemory object at 0x7fab3708d490> ...de': 'constant', 'order': 0, 'output': <class 'numpy.float32'>, 'output_shape': None, 'shape': (10, 20), 'theta': 270}>
xp = <module 'cupy' from '/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.hXnTrEAC7u/cupy/cupy/__init__.py'>
scp = <module 'cupyx.scipy' from '/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.hXnTrEAC7u/cupy/cupyx/scipy/__init__.py'>

    @testing.numpy_cupy_allclose(atol=0.1, scipy_name='scp')
    def test_affine_transform_texture_memory(self, xp, scp):
        a = xp.ones(self.shape, dtype=xp.float32)
        center = numpy.divide(numpy.subtract(self.shape, 1), 2)
    
        if len(self.shape) == 2:
            matrix = self._2d_rotation_matrix(self.theta, center)
        elif len(self.shape) == 3:
            matrix = self._3d_rotation_matrix(self.theta, center)
        else:
            return pytest.xfail('Unsupported shape')
    
        if self.output == 'empty':
            output = xp.empty(self.shape, dtype=xp.float32)
            if self.output_shape:
                return pytest.skip('This combination is tested in '
                                   'test_invalid_texture_arguments')
        else:
            output = self.output
    
        if self.output_shape:
            output_shape = (self.output_shape, ) * len(self.shape)
        else:
            output_shape = self.output_shape
    
        if xp == cupy:
            m = cupyx.scipy.ndimage.affine_transform
            matrix = cupy.array(matrix)
>           return m(a, matrix, output_shape=output_shape,
                     output=output, order=self.order,
                     mode=self.mode, texture_memory=True)

tests/cupyx_tests/scipy_tests/ndimage_tests/test_interpolation.py:398: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
cupyx/scipy/ndimage/interpolation.py:376: in affine_transform
    return _texture.affine_transformation(data=input,
cupyx/_texture.py:168: in affine_transformation
    texture_object = _create_texture_object(data,
cupyx/_texture.py:98: in _create_texture_object
    array = texture.CUDAarray(texture_fmt, *data.shape[::-1])
cupy/cuda/texture.pyx:296: in cupy.cuda.texture.CUDAarray.__init__
    self.ptr = runtime.malloc3DArray(desc.ptr, width, height, depth,
cupy_backends/cuda/api/runtime.pyx:593: in cupy_backends.cuda.api.runtime.malloc3DArray
    check_status(status)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

>   raise CUDARuntimeError(status)
E   AssertionError: Only cupy raises error
E   
E   Traceback (most recent call last):
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.hXnTrEAC7u/cupy/cupy/testing/_helper.py", line 47, in _call_func
E       result = impl(self, *args, **kw)
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.hXnTrEAC7u/cupy/tests/cupyx_tests/scipy_tests/ndimage_tests/test_interpolation.py", line 398, in test_affine_transform_texture_memory
E       return m(a, matrix, output_shape=output_shape,
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.hXnTrEAC7u/cupy/cupyx/scipy/ndimage/interpolation.py", line 376, in affine_transform
E       return _texture.affine_transformation(data=input,
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.hXnTrEAC7u/cupy/cupyx/_texture.py", line 168, in affine_transformation
E       texture_object = _create_texture_object(data,
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.hXnTrEAC7u/cupy/cupyx/_texture.py", line 98, in _create_texture_object
E       array = texture.CUDAarray(texture_fmt, *data.shape[::-1])
E     File "cupy/cuda/texture.pyx", line 296, in cupy.cuda.texture.CUDAarray.__init__
E       self.ptr = runtime.malloc3DArray(desc.ptr, width, height, depth,
E     File "cupy_backends/cuda/api/runtime.pyx", line 593, in cupy_backends.cuda.api.runtime.malloc3DArray
E       check_status(status)
E     File "cupy_backends/cuda/api/runtime.pyx", line 265, in cupy_backends.cuda.api.runtime.check_status
E       raise CUDARuntimeError(status)
E   cupy_backends.cuda.api.runtime.CUDARuntimeError: hipErrorUnknown: hipErrorUnknown

cupy_backends/cuda/api/runtime.pyx:265: AssertionError
----------------------------- Captured stderr call -----------------------------
Traceback (most recent call last):
  File "cupy_backends/cuda/api/runtime.pyx", line 644, in cupy_backends.cuda.api.runtime.freeArray
    check_status(status)
  File "cupy_backends/cuda/api/runtime.pyx", line 265, in cupy_backends.cuda.api.runtime.check_status
    raise CUDARuntimeError(status)
cupy_backends.cuda.api.runtime.CUDARuntimeError: hipErrorUnknown: hipErrorUnknown
_ TestAffineTransformTextureMemory.test_affine_transform_texture_memory[_param_40_{mode='constant', order=0, output=float32, output_shape=None, shape=(10, 10, 10), theta=0}] _

self = <<cupyx_tests.scipy_tests.ndimage_tests.test_interpolation.TestAffineTransformTextureMemory object at 0x7fab38ebe910> ...': 'constant', 'order': 0, 'output': <class 'numpy.float32'>, 'output_shape': None, 'shape': (10, 10, 10), 'theta': 0}>
xp = <module 'cupy' from '/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.hXnTrEAC7u/cupy/cupy/__init__.py'>
scp = <module 'cupyx.scipy' from '/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.hXnTrEAC7u/cupy/cupyx/scipy/__init__.py'>

    @testing.numpy_cupy_allclose(atol=0.1, scipy_name='scp')
    def test_affine_transform_texture_memory(self, xp, scp):
        a = xp.ones(self.shape, dtype=xp.float32)
        center = numpy.divide(numpy.subtract(self.shape, 1), 2)
    
        if len(self.shape) == 2:
            matrix = self._2d_rotation_matrix(self.theta, center)
        elif len(self.shape) == 3:
            matrix = self._3d_rotation_matrix(self.theta, center)
        else:
            return pytest.xfail('Unsupported shape')
    
        if self.output == 'empty':
            output = xp.empty(self.shape, dtype=xp.float32)
            if self.output_shape:
                return pytest.skip('This combination is tested in '
                                   'test_invalid_texture_arguments')
        else:
            output = self.output
    
        if self.output_shape:
            output_shape = (self.output_shape, ) * len(self.shape)
        else:
            output_shape = self.output_shape
    
        if xp == cupy:
            m = cupyx.scipy.ndimage.affine_transform
            matrix = cupy.array(matrix)
>           return m(a, matrix, output_shape=output_shape,
                     output=output, order=self.order,
                     mode=self.mode, texture_memory=True)

tests/cupyx_tests/scipy_tests/ndimage_tests/test_interpolation.py:398: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
cupyx/scipy/ndimage/interpolation.py:376: in affine_transform
    return _texture.affine_transformation(data=input,
cupyx/_texture.py:168: in affine_transformation
    texture_object = _create_texture_object(data,
cupyx/_texture.py:98: in _create_texture_object
    array = texture.CUDAarray(texture_fmt, *data.shape[::-1])
cupy/cuda/texture.pyx:296: in cupy.cuda.texture.CUDAarray.__init__
    self.ptr = runtime.malloc3DArray(desc.ptr, width, height, depth,
cupy_backends/cuda/api/runtime.pyx:593: in cupy_backends.cuda.api.runtime.malloc3DArray
    check_status(status)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

>   raise CUDARuntimeError(status)
E   AssertionError: Only cupy raises error
E   
E   Traceback (most recent call last):
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.hXnTrEAC7u/cupy/cupy/testing/_helper.py", line 47, in _call_func
E       result = impl(self, *args, **kw)
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.hXnTrEAC7u/cupy/tests/cupyx_tests/scipy_tests/ndimage_tests/test_interpolation.py", line 398, in test_affine_transform_texture_memory
E       return m(a, matrix, output_shape=output_shape,
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.hXnTrEAC7u/cupy/cupyx/scipy/ndimage/interpolation.py", line 376, in affine_transform
E       return _texture.affine_transformation(data=input,
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.hXnTrEAC7u/cupy/cupyx/_texture.py", line 168, in affine_transformation
E       texture_object = _create_texture_object(data,
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.hXnTrEAC7u/cupy/cupyx/_texture.py", line 98, in _create_texture_object
E       array = texture.CUDAarray(texture_fmt, *data.shape[::-1])
E     File "cupy/cuda/texture.pyx", line 296, in cupy.cuda.texture.CUDAarray.__init__
E       self.ptr = runtime.malloc3DArray(desc.ptr, width, height, depth,
E     File "cupy_backends/cuda/api/runtime.pyx", line 593, in cupy_backends.cuda.api.runtime.malloc3DArray
E       check_status(status)
E     File "cupy_backends/cuda/api/runtime.pyx", line 265, in cupy_backends.cuda.api.runtime.check_status
E       raise CUDARuntimeError(status)
E   cupy_backends.cuda.api.runtime.CUDARuntimeError: hipErrorUnknown: hipErrorUnknown

cupy_backends/cuda/api/runtime.pyx:265: AssertionError
----------------------------- Captured stderr call -----------------------------
Traceback (most recent call last):
  File "cupy_backends/cuda/api/runtime.pyx", line 644, in cupy_backends.cuda.api.runtime.freeArray
    check_status(status)
  File "cupy_backends/cuda/api/runtime.pyx", line 265, in cupy_backends.cuda.api.runtime.check_status
    raise CUDARuntimeError(status)
cupy_backends.cuda.api.runtime.CUDARuntimeError: hipErrorUnknown: hipErrorUnknown
_ TestAffineTransformTextureMemory.test_affine_transform_texture_memory[_param_41_{mode='constant', order=0, output=float32, output_shape=None, shape=(10, 10, 10), theta=90}] _

self = <<cupyx_tests.scipy_tests.ndimage_tests.test_interpolation.TestAffineTransformTextureMemory object at 0x7fab3708d5b0> ...: 'constant', 'order': 0, 'output': <class 'numpy.float32'>, 'output_shape': None, 'shape': (10, 10, 10), 'theta': 90}>
xp = <module 'cupy' from '/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.hXnTrEAC7u/cupy/cupy/__init__.py'>
scp = <module 'cupyx.scipy' from '/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.hXnTrEAC7u/cupy/cupyx/scipy/__init__.py'>

    @testing.numpy_cupy_allclose(atol=0.1, scipy_name='scp')
    def test_affine_transform_texture_memory(self, xp, scp):
        a = xp.ones(self.shape, dtype=xp.float32)
        center = numpy.divide(numpy.subtract(self.shape, 1), 2)
    
        if len(self.shape) == 2:
            matrix = self._2d_rotation_matrix(self.theta, center)
        elif len(self.shape) == 3:
            matrix = self._3d_rotation_matrix(self.theta, center)
        else:
            return pytest.xfail('Unsupported shape')
    
        if self.output == 'empty':
            output = xp.empty(self.shape, dtype=xp.float32)
            if self.output_shape:
                return pytest.skip('This combination is tested in '
                                   'test_invalid_texture_arguments')
        else:
            output = self.output
    
        if self.output_shape:
            output_shape = (self.output_shape, ) * len(self.shape)
        else:
            output_shape = self.output_shape
    
        if xp == cupy:
            m = cupyx.scipy.ndimage.affine_transform
            matrix = cupy.array(matrix)
>           return m(a, matrix, output_shape=output_shape,
                     output=output, order=self.order,
                     mode=self.mode, texture_memory=True)

tests/cupyx_tests/scipy_tests/ndimage_tests/test_interpolation.py:398: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
cupyx/scipy/ndimage/interpolation.py:376: in affine_transform
    return _texture.affine_transformation(data=input,
cupyx/_texture.py:168: in affine_transformation
    texture_object = _create_texture_object(data,
cupyx/_texture.py:98: in _create_texture_object
    array = texture.CUDAarray(texture_fmt, *data.shape[::-1])
cupy/cuda/texture.pyx:296: in cupy.cuda.texture.CUDAarray.__init__
    self.ptr = runtime.malloc3DArray(desc.ptr, width, height, depth,
cupy_backends/cuda/api/runtime.pyx:593: in cupy_backends.cuda.api.runtime.malloc3DArray
    check_status(status)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

>   raise CUDARuntimeError(status)
E   AssertionError: Only cupy raises error
E   
E   Traceback (most recent call last):
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.hXnTrEAC7u/cupy/cupy/testing/_helper.py", line 47, in _call_func
E       result = impl(self, *args, **kw)
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.hXnTrEAC7u/cupy/tests/cupyx_tests/scipy_tests/ndimage_tests/test_interpolation.py", line 398, in test_affine_transform_texture_memory
E       return m(a, matrix, output_shape=output_shape,
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.hXnTrEAC7u/cupy/cupyx/scipy/ndimage/interpolation.py", line 376, in affine_transform
E       return _texture.affine_transformation(data=input,
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.hXnTrEAC7u/cupy/cupyx/_texture.py", line 168, in affine_transformation
E       texture_object = _create_texture_object(data,
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.hXnTrEAC7u/cupy/cupyx/_texture.py", line 98, in _create_texture_object
E       array = texture.CUDAarray(texture_fmt, *data.shape[::-1])
E     File "cupy/cuda/texture.pyx", line 296, in cupy.cuda.texture.CUDAarray.__init__
E       self.ptr = runtime.malloc3DArray(desc.ptr, width, height, depth,
E     File "cupy_backends/cuda/api/runtime.pyx", line 593, in cupy_backends.cuda.api.runtime.malloc3DArray
E       check_status(status)
E     File "cupy_backends/cuda/api/runtime.pyx", line 265, in cupy_backends.cuda.api.runtime.check_status
E       raise CUDARuntimeError(status)
E   cupy_backends.cuda.api.runtime.CUDARuntimeError: hipErrorUnknown: hipErrorUnknown

cupy_backends/cuda/api/runtime.pyx:265: AssertionError
----------------------------- Captured stderr call -----------------------------
Traceback (most recent call last):
  File "cupy_backends/cuda/api/runtime.pyx", line 644, in cupy_backends.cuda.api.runtime.freeArray
    check_status(status)
  File "cupy_backends/cuda/api/runtime.pyx", line 265, in cupy_backends.cuda.api.runtime.check_status
    raise CUDARuntimeError(status)
cupy_backends.cuda.api.runtime.CUDARuntimeError: hipErrorUnknown: hipErrorUnknown
_ TestAffineTransformTextureMemory.test_affine_transform_texture_memory[_param_42_{mode='constant', order=0, output=float32, output_shape=None, shape=(10, 10, 10), theta=180}] _

self = <<cupyx_tests.scipy_tests.ndimage_tests.test_interpolation.TestAffineTransformTextureMemory object at 0x7fab3728fc10> ... 'constant', 'order': 0, 'output': <class 'numpy.float32'>, 'output_shape': None, 'shape': (10, 10, 10), 'theta': 180}>
xp = <module 'cupy' from '/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.hXnTrEAC7u/cupy/cupy/__init__.py'>
scp = <module 'cupyx.scipy' from '/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.hXnTrEAC7u/cupy/cupyx/scipy/__init__.py'>

    @testing.numpy_cupy_allclose(atol=0.1, scipy_name='scp')
    def test_affine_transform_texture_memory(self, xp, scp):
        a = xp.ones(self.shape, dtype=xp.float32)
        center = numpy.divide(numpy.subtract(self.shape, 1), 2)
    
        if len(self.shape) == 2:
            matrix = self._2d_rotation_matrix(self.theta, center)
        elif len(self.shape) == 3:
            matrix = self._3d_rotation_matrix(self.theta, center)
        else:
            return pytest.xfail('Unsupported shape')
    
        if self.output == 'empty':
            output = xp.empty(self.shape, dtype=xp.float32)
            if self.output_shape:
                return pytest.skip('This combination is tested in '
                                   'test_invalid_texture_arguments')
        else:
            output = self.output
    
        if self.output_shape:
            output_shape = (self.output_shape, ) * len(self.shape)
        else:
            output_shape = self.output_shape
    
        if xp == cupy:
            m = cupyx.scipy.ndimage.affine_transform
            matrix = cupy.array(matrix)
>           return m(a, matrix, output_shape=output_shape,
                     output=output, order=self.order,
                     mode=self.mode, texture_memory=True)

tests/cupyx_tests/scipy_tests/ndimage_tests/test_interpolation.py:398: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
cupyx/scipy/ndimage/interpolation.py:376: in affine_transform
    return _texture.affine_transformation(data=input,
cupyx/_texture.py:168: in affine_transformation
    texture_object = _create_texture_object(data,
cupyx/_texture.py:98: in _create_texture_object
    array = texture.CUDAarray(texture_fmt, *data.shape[::-1])
cupy/cuda/texture.pyx:296: in cupy.cuda.texture.CUDAarray.__init__
    self.ptr = runtime.malloc3DArray(desc.ptr, width, height, depth,
cupy_backends/cuda/api/runtime.pyx:593: in cupy_backends.cuda.api.runtime.malloc3DArray
    check_status(status)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

>   raise CUDARuntimeError(status)
E   AssertionError: Only cupy raises error
E   
E   Traceback (most recent call last):
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.hXnTrEAC7u/cupy/cupy/testing/_helper.py", line 47, in _call_func
E       result = impl(self, *args, **kw)
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.hXnTrEAC7u/cupy/tests/cupyx_tests/scipy_tests/ndimage_tests/test_interpolation.py", line 398, in test_affine_transform_texture_memory
E       return m(a, matrix, output_shape=output_shape,
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.hXnTrEAC7u/cupy/cupyx/scipy/ndimage/interpolation.py", line 376, in affine_transform
E       return _texture.affine_transformation(data=input,
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.hXnTrEAC7u/cupy/cupyx/_texture.py", line 168, in affine_transformation
E       texture_object = _create_texture_object(data,
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.hXnTrEAC7u/cupy/cupyx/_texture.py", line 98, in _create_texture_object
E       array = texture.CUDAarray(texture_fmt, *data.shape[::-1])
E     File "cupy/cuda/texture.pyx", line 296, in cupy.cuda.texture.CUDAarray.__init__
E       self.ptr = runtime.malloc3DArray(desc.ptr, width, height, depth,
E     File "cupy_backends/cuda/api/runtime.pyx", line 593, in cupy_backends.cuda.api.runtime.malloc3DArray
E       check_status(status)
E     File "cupy_backends/cuda/api/runtime.pyx", line 265, in cupy_backends.cuda.api.runtime.check_status
E       raise CUDARuntimeError(status)
E   cupy_backends.cuda.api.runtime.CUDARuntimeError: hipErrorUnknown: hipErrorUnknown

cupy_backends/cuda/api/runtime.pyx:265: AssertionError
----------------------------- Captured stderr call -----------------------------
Traceback (most recent call last):
  File "cupy_backends/cuda/api/runtime.pyx", line 644, in cupy_backends.cuda.api.runtime.freeArray
    check_status(status)
  File "cupy_backends/cuda/api/runtime.pyx", line 265, in cupy_backends.cuda.api.runtime.check_status
    raise CUDARuntimeError(status)
cupy_backends.cuda.api.runtime.CUDARuntimeError: hipErrorUnknown: hipErrorUnknown
_ TestAffineTransformTextureMemory.test_affine_transform_texture_memory[_param_43_{mode='constant', order=0, output=float32, output_shape=None, shape=(10, 10, 10), theta=270}] _

self = <<cupyx_tests.scipy_tests.ndimage_tests.test_interpolation.TestAffineTransformTextureMemory object at 0x7fab38baf040> ... 'constant', 'order': 0, 'output': <class 'numpy.float32'>, 'output_shape': None, 'shape': (10, 10, 10), 'theta': 270}>
xp = <module 'cupy' from '/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.hXnTrEAC7u/cupy/cupy/__init__.py'>
scp = <module 'cupyx.scipy' from '/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.hXnTrEAC7u/cupy/cupyx/scipy/__init__.py'>

    @testing.numpy_cupy_allclose(atol=0.1, scipy_name='scp')
    def test_affine_transform_texture_memory(self, xp, scp):
        a = xp.ones(self.shape, dtype=xp.float32)
        center = numpy.divide(numpy.subtract(self.shape, 1), 2)
    
        if len(self.shape) == 2:
            matrix = self._2d_rotation_matrix(self.theta, center)
        elif len(self.shape) == 3:
            matrix = self._3d_rotation_matrix(self.theta, center)
        else:
            return pytest.xfail('Unsupported shape')
    
        if self.output == 'empty':
            output = xp.empty(self.shape, dtype=xp.float32)
            if self.output_shape:
                return pytest.skip('This combination is tested in '
                                   'test_invalid_texture_arguments')
        else:
            output = self.output
    
        if self.output_shape:
            output_shape = (self.output_shape, ) * len(self.shape)
        else:
            output_shape = self.output_shape
    
        if xp == cupy:
            m = cupyx.scipy.ndimage.affine_transform
            matrix = cupy.array(matrix)
>           return m(a, matrix, output_shape=output_shape,
                     output=output, order=self.order,
                     mode=self.mode, texture_memory=True)

tests/cupyx_tests/scipy_tests/ndimage_tests/test_interpolation.py:398: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
cupyx/scipy/ndimage/interpolation.py:376: in affine_transform
    return _texture.affine_transformation(data=input,
cupyx/_texture.py:168: in affine_transformation
    texture_object = _create_texture_object(data,
cupyx/_texture.py:98: in _create_texture_object
    array = texture.CUDAarray(texture_fmt, *data.shape[::-1])
cupy/cuda/texture.pyx:296: in cupy.cuda.texture.CUDAarray.__init__
    self.ptr = runtime.malloc3DArray(desc.ptr, width, height, depth,
cupy_backends/cuda/api/runtime.pyx:593: in cupy_backends.cuda.api.runtime.malloc3DArray
    check_status(status)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

>   raise CUDARuntimeError(status)
E   AssertionError: Only cupy raises error
E   
E   Traceback (most recent call last):
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.hXnTrEAC7u/cupy/cupy/testing/_helper.py", line 47, in _call_func
E       result = impl(self, *args, **kw)
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.hXnTrEAC7u/cupy/tests/cupyx_tests/scipy_tests/ndimage_tests/test_interpolation.py", line 398, in test_affine_transform_texture_memory
E       return m(a, matrix, output_shape=output_shape,
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.hXnTrEAC7u/cupy/cupyx/scipy/ndimage/interpolation.py", line 376, in affine_transform
E       return _texture.affine_transformation(data=input,
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.hXnTrEAC7u/cupy/cupyx/_texture.py", line 168, in affine_transformation
E       texture_object = _create_texture_object(data,
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.hXnTrEAC7u/cupy/cupyx/_texture.py", line 98, in _create_texture_object
E       array = texture.CUDAarray(texture_fmt, *data.shape[::-1])
E     File "cupy/cuda/texture.pyx", line 296, in cupy.cuda.texture.CUDAarray.__init__
E       self.ptr = runtime.malloc3DArray(desc.ptr, width, height, depth,
E     File "cupy_backends/cuda/api/runtime.pyx", line 593, in cupy_backends.cuda.api.runtime.malloc3DArray
E       check_status(status)
E     File "cupy_backends/cuda/api/runtime.pyx", line 265, in cupy_backends.cuda.api.runtime.check_status
E       raise CUDARuntimeError(status)
E   cupy_backends.cuda.api.runtime.CUDARuntimeError: hipErrorUnknown: hipErrorUnknown

cupy_backends/cuda/api/runtime.pyx:265: AssertionError
----------------------------- Captured stderr call -----------------------------
Traceback (most recent call last):
  File "cupy_backends/cuda/api/runtime.pyx", line 644, in cupy_backends.cuda.api.runtime.freeArray
    check_status(status)
  File "cupy_backends/cuda/api/runtime.pyx", line 265, in cupy_backends.cuda.api.runtime.check_status
    raise CUDARuntimeError(status)
cupy_backends.cuda.api.runtime.CUDARuntimeError: hipErrorUnknown: hipErrorUnknown
_ TestAffineTransformTextureMemory.test_affine_transform_texture_memory[_param_44_{mode='constant', order=0, output=float32, output_shape=None, shape=(10, 20, 30), theta=0}] _

self = <<cupyx_tests.scipy_tests.ndimage_tests.test_interpolation.TestAffineTransformTextureMemory object at 0x7fab39cb2040> ...': 'constant', 'order': 0, 'output': <class 'numpy.float32'>, 'output_shape': None, 'shape': (10, 20, 30), 'theta': 0}>
xp = <module 'cupy' from '/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.hXnTrEAC7u/cupy/cupy/__init__.py'>
scp = <module 'cupyx.scipy' from '/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.hXnTrEAC7u/cupy/cupyx/scipy/__init__.py'>

    @testing.numpy_cupy_allclose(atol=0.1, scipy_name='scp')
    def test_affine_transform_texture_memory(self, xp, scp):
        a = xp.ones(self.shape, dtype=xp.float32)
        center = numpy.divide(numpy.subtract(self.shape, 1), 2)
    
        if len(self.shape) == 2:
            matrix = self._2d_rotation_matrix(self.theta, center)
        elif len(self.shape) == 3:
            matrix = self._3d_rotation_matrix(self.theta, center)
        else:
            return pytest.xfail('Unsupported shape')
    
        if self.output == 'empty':
            output = xp.empty(self.shape, dtype=xp.float32)
            if self.output_shape:
                return pytest.skip('This combination is tested in '
                                   'test_invalid_texture_arguments')
        else:
            output = self.output
    
        if self.output_shape:
            output_shape = (self.output_shape, ) * len(self.shape)
        else:
            output_shape = self.output_shape
    
        if xp == cupy:
            m = cupyx.scipy.ndimage.affine_transform
            matrix = cupy.array(matrix)
>           return m(a, matrix, output_shape=output_shape,
                     output=output, order=self.order,
                     mode=self.mode, texture_memory=True)

tests/cupyx_tests/scipy_tests/ndimage_tests/test_interpolation.py:398: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
cupyx/scipy/ndimage/interpolation.py:376: in affine_transform
    return _texture.affine_transformation(data=input,
cupyx/_texture.py:168: in affine_transformation
    texture_object = _create_texture_object(data,
cupyx/_texture.py:98: in _create_texture_object
    array = texture.CUDAarray(texture_fmt, *data.shape[::-1])
cupy/cuda/texture.pyx:296: in cupy.cuda.texture.CUDAarray.__init__
    self.ptr = runtime.malloc3DArray(desc.ptr, width, height, depth,
cupy_backends/cuda/api/runtime.pyx:593: in cupy_backends.cuda.api.runtime.malloc3DArray
    check_status(status)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

>   raise CUDARuntimeError(status)
E   AssertionError: Only cupy raises error
E   
E   Traceback (most recent call last):
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.hXnTrEAC7u/cupy/cupy/testing/_helper.py", line 47, in _call_func
E       result = impl(self, *args, **kw)
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.hXnTrEAC7u/cupy/tests/cupyx_tests/scipy_tests/ndimage_tests/test_interpolation.py", line 398, in test_affine_transform_texture_memory
E       return m(a, matrix, output_shape=output_shape,
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.hXnTrEAC7u/cupy/cupyx/scipy/ndimage/interpolation.py", line 376, in affine_transform
E       return _texture.affine_transformation(data=input,
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.hXnTrEAC7u/cupy/cupyx/_texture.py", line 168, in affine_transformation
E       texture_object = _create_texture_object(data,
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.hXnTrEAC7u/cupy/cupyx/_texture.py", line 98, in _create_texture_object
E       array = texture.CUDAarray(texture_fmt, *data.shape[::-1])
E     File "cupy/cuda/texture.pyx", line 296, in cupy.cuda.texture.CUDAarray.__init__
E       self.ptr = runtime.malloc3DArray(desc.ptr, width, height, depth,
E     File "cupy_backends/cuda/api/runtime.pyx", line 593, in cupy_backends.cuda.api.runtime.malloc3DArray
E       check_status(status)
E     File "cupy_backends/cuda/api/runtime.pyx", line 265, in cupy_backends.cuda.api.runtime.check_status
E       raise CUDARuntimeError(status)
E   cupy_backends.cuda.api.runtime.CUDARuntimeError: hipErrorUnknown: hipErrorUnknown

cupy_backends/cuda/api/runtime.pyx:265: AssertionError
----------------------------- Captured stderr call -----------------------------
Traceback (most recent call last):
  File "cupy_backends/cuda/api/runtime.pyx", line 644, in cupy_backends.cuda.api.runtime.freeArray
    check_status(status)
  File "cupy_backends/cuda/api/runtime.pyx", line 265, in cupy_backends.cuda.api.runtime.check_status
    raise CUDARuntimeError(status)
cupy_backends.cuda.api.runtime.CUDARuntimeError: hipErrorUnknown: hipErrorUnknown
_ TestAffineTransformTextureMemory.test_affine_transform_texture_memory[_param_45_{mode='constant', order=0, output=float32, output_shape=None, shape=(10, 20, 30), theta=90}] _

self = <<cupyx_tests.scipy_tests.ndimage_tests.test_interpolation.TestAffineTransformTextureMemory object at 0x7fab3715a3d0> ...: 'constant', 'order': 0, 'output': <class 'numpy.float32'>, 'output_shape': None, 'shape': (10, 20, 30), 'theta': 90}>
xp = <module 'cupy' from '/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.hXnTrEAC7u/cupy/cupy/__init__.py'>
scp = <module 'cupyx.scipy' from '/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.hXnTrEAC7u/cupy/cupyx/scipy/__init__.py'>

    @testing.numpy_cupy_allclose(atol=0.1, scipy_name='scp')
    def test_affine_transform_texture_memory(self, xp, scp):
        a = xp.ones(self.shape, dtype=xp.float32)
        center = numpy.divide(numpy.subtract(self.shape, 1), 2)
    
        if len(self.shape) == 2:
            matrix = self._2d_rotation_matrix(self.theta, center)
        elif len(self.shape) == 3:
            matrix = self._3d_rotation_matrix(self.theta, center)
        else:
            return pytest.xfail('Unsupported shape')
    
        if self.output == 'empty':
            output = xp.empty(self.shape, dtype=xp.float32)
            if self.output_shape:
                return pytest.skip('This combination is tested in '
                                   'test_invalid_texture_arguments')
        else:
            output = self.output
    
        if self.output_shape:
            output_shape = (self.output_shape, ) * len(self.shape)
        else:
            output_shape = self.output_shape
    
        if xp == cupy:
            m = cupyx.scipy.ndimage.affine_transform
            matrix = cupy.array(matrix)
>           return m(a, matrix, output_shape=output_shape,
                     output=output, order=self.order,
                     mode=self.mode, texture_memory=True)

tests/cupyx_tests/scipy_tests/ndimage_tests/test_interpolation.py:398: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
cupyx/scipy/ndimage/interpolation.py:376: in affine_transform
    return _texture.affine_transformation(data=input,
cupyx/_texture.py:168: in affine_transformation
    texture_object = _create_texture_object(data,
cupyx/_texture.py:98: in _create_texture_object
    array = texture.CUDAarray(texture_fmt, *data.shape[::-1])
cupy/cuda/texture.pyx:296: in cupy.cuda.texture.CUDAarray.__init__
    self.ptr = runtime.malloc3DArray(desc.ptr, width, height, depth,
cupy_backends/cuda/api/runtime.pyx:593: in cupy_backends.cuda.api.runtime.malloc3DArray
    check_status(status)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

>   raise CUDARuntimeError(status)
E   AssertionError: Only cupy raises error
E   
E   Traceback (most recent call last):
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.hXnTrEAC7u/cupy/cupy/testing/_helper.py", line 47, in _call_func
E       result = impl(self, *args, **kw)
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.hXnTrEAC7u/cupy/tests/cupyx_tests/scipy_tests/ndimage_tests/test_interpolation.py", line 398, in test_affine_transform_texture_memory
E       return m(a, matrix, output_shape=output_shape,
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.hXnTrEAC7u/cupy/cupyx/scipy/ndimage/interpolation.py", line 376, in affine_transform
E       return _texture.affine_transformation(data=input,
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.hXnTrEAC7u/cupy/cupyx/_texture.py", line 168, in affine_transformation
E       texture_object = _create_texture_object(data,
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.hXnTrEAC7u/cupy/cupyx/_texture.py", line 98, in _create_texture_object
E       array = texture.CUDAarray(texture_fmt, *data.shape[::-1])
E     File "cupy/cuda/texture.pyx", line 296, in cupy.cuda.texture.CUDAarray.__init__
E       self.ptr = runtime.malloc3DArray(desc.ptr, width, height, depth,
E     File "cupy_backends/cuda/api/runtime.pyx", line 593, in cupy_backends.cuda.api.runtime.malloc3DArray
E       check_status(status)
E     File "cupy_backends/cuda/api/runtime.pyx", line 265, in cupy_backends.cuda.api.runtime.check_status
E       raise CUDARuntimeError(status)
E   cupy_backends.cuda.api.runtime.CUDARuntimeError: hipErrorUnknown: hipErrorUnknown

cupy_backends/cuda/api/runtime.pyx:265: AssertionError
----------------------------- Captured stderr call -----------------------------
Traceback (most recent call last):
  File "cupy_backends/cuda/api/runtime.pyx", line 644, in cupy_backends.cuda.api.runtime.freeArray
    check_status(status)
  File "cupy_backends/cuda/api/runtime.pyx", line 265, in cupy_backends.cuda.api.runtime.check_status
    raise CUDARuntimeError(status)
cupy_backends.cuda.api.runtime.CUDARuntimeError: hipErrorUnknown: hipErrorUnknown
_ TestAffineTransformTextureMemory.test_affine_transform_texture_memory[_param_46_{mode='constant', order=0, output=float32, output_shape=None, shape=(10, 20, 30), theta=180}] _

self = <<cupyx_tests.scipy_tests.ndimage_tests.test_interpolation.TestAffineTransformTextureMemory object at 0x7fab370d7190> ... 'constant', 'order': 0, 'output': <class 'numpy.float32'>, 'output_shape': None, 'shape': (10, 20, 30), 'theta': 180}>
xp = <module 'cupy' from '/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.hXnTrEAC7u/cupy/cupy/__init__.py'>
scp = <module 'cupyx.scipy' from '/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.hXnTrEAC7u/cupy/cupyx/scipy/__init__.py'>

    @testing.numpy_cupy_allclose(atol=0.1, scipy_name='scp')
    def test_affine_transform_texture_memory(self, xp, scp):
        a = xp.ones(self.shape, dtype=xp.float32)
        center = numpy.divide(numpy.subtract(self.shape, 1), 2)
    
        if len(self.shape) == 2:
            matrix = self._2d_rotation_matrix(self.theta, center)
        elif len(self.shape) == 3:
            matrix = self._3d_rotation_matrix(self.theta, center)
        else:
            return pytest.xfail('Unsupported shape')
    
        if self.output == 'empty':
            output = xp.empty(self.shape, dtype=xp.float32)
            if self.output_shape:
                return pytest.skip('This combination is tested in '
                                   'test_invalid_texture_arguments')
        else:
            output = self.output
    
        if self.output_shape:
            output_shape = (self.output_shape, ) * len(self.shape)
        else:
            output_shape = self.output_shape
    
        if xp == cupy:
            m = cupyx.scipy.ndimage.affine_transform
            matrix = cupy.array(matrix)
>           return m(a, matrix, output_shape=output_shape,
                     output=output, order=self.order,
                     mode=self.mode, texture_memory=True)

tests/cupyx_tests/scipy_tests/ndimage_tests/test_interpolation.py:398: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
cupyx/scipy/ndimage/interpolation.py:376: in affine_transform
    return _texture.affine_transformation(data=input,
cupyx/_texture.py:168: in affine_transformation
    texture_object = _create_texture_object(data,
cupyx/_texture.py:98: in _create_texture_object
    array = texture.CUDAarray(texture_fmt, *data.shape[::-1])
cupy/cuda/texture.pyx:296: in cupy.cuda.texture.CUDAarray.__init__
    self.ptr = runtime.malloc3DArray(desc.ptr, width, height, depth,
cupy_backends/cuda/api/runtime.pyx:593: in cupy_backends.cuda.api.runtime.malloc3DArray
    check_status(status)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

>   raise CUDARuntimeError(status)
E   AssertionError: Only cupy raises error
E   
E   Traceback (most recent call last):
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.hXnTrEAC7u/cupy/cupy/testing/_helper.py", line 47, in _call_func
E       result = impl(self, *args, **kw)
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.hXnTrEAC7u/cupy/tests/cupyx_tests/scipy_tests/ndimage_tests/test_interpolation.py", line 398, in test_affine_transform_texture_memory
E       return m(a, matrix, output_shape=output_shape,
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.hXnTrEAC7u/cupy/cupyx/scipy/ndimage/interpolation.py", line 376, in affine_transform
E       return _texture.affine_transformation(data=input,
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.hXnTrEAC7u/cupy/cupyx/_texture.py", line 168, in affine_transformation
E       texture_object = _create_texture_object(data,
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.hXnTrEAC7u/cupy/cupyx/_texture.py", line 98, in _create_texture_object
E       array = texture.CUDAarray(texture_fmt, *data.shape[::-1])
E     File "cupy/cuda/texture.pyx", line 296, in cupy.cuda.texture.CUDAarray.__init__
E       self.ptr = runtime.malloc3DArray(desc.ptr, width, height, depth,
E     File "cupy_backends/cuda/api/runtime.pyx", line 593, in cupy_backends.cuda.api.runtime.malloc3DArray
E       check_status(status)
E     File "cupy_backends/cuda/api/runtime.pyx", line 265, in cupy_backends.cuda.api.runtime.check_status
E       raise CUDARuntimeError(status)
E   cupy_backends.cuda.api.runtime.CUDARuntimeError: hipErrorUnknown: hipErrorUnknown

cupy_backends/cuda/api/runtime.pyx:265: AssertionError
----------------------------- Captured stderr call -----------------------------
Traceback (most recent call last):
  File "cupy_backends/cuda/api/runtime.pyx", line 644, in cupy_backends.cuda.api.runtime.freeArray
    check_status(status)
  File "cupy_backends/cuda/api/runtime.pyx", line 265, in cupy_backends.cuda.api.runtime.check_status
    raise CUDARuntimeError(status)
cupy_backends.cuda.api.runtime.CUDARuntimeError: hipErrorUnknown: hipErrorUnknown
_ TestAffineTransformTextureMemory.test_affine_transform_texture_memory[_param_47_{mode='constant', order=0, output=float32, output_shape=None, shape=(10, 20, 30), theta=270}] _

self = <<cupyx_tests.scipy_tests.ndimage_tests.test_interpolation.TestAffineTransformTextureMemory object at 0x7fab38f461c0> ... 'constant', 'order': 0, 'output': <class 'numpy.float32'>, 'output_shape': None, 'shape': (10, 20, 30), 'theta': 270}>
xp = <module 'cupy' from '/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.hXnTrEAC7u/cupy/cupy/__init__.py'>
scp = <module 'cupyx.scipy' from '/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.hXnTrEAC7u/cupy/cupyx/scipy/__init__.py'>

    @testing.numpy_cupy_allclose(atol=0.1, scipy_name='scp')
    def test_affine_transform_texture_memory(self, xp, scp):
        a = xp.ones(self.shape, dtype=xp.float32)
        center = numpy.divide(numpy.subtract(self.shape, 1), 2)
    
        if len(self.shape) == 2:
            matrix = self._2d_rotation_matrix(self.theta, center)
        elif len(self.shape) == 3:
            matrix = self._3d_rotation_matrix(self.theta, center)
        else:
            return pytest.xfail('Unsupported shape')
    
        if self.output == 'empty':
            output = xp.empty(self.shape, dtype=xp.float32)
            if self.output_shape:
                return pytest.skip('This combination is tested in '
                                   'test_invalid_texture_arguments')
        else:
            output = self.output
    
        if self.output_shape:
            output_shape = (self.output_shape, ) * len(self.shape)
        else:
            output_shape = self.output_shape
    
        if xp == cupy:
            m = cupyx.scipy.ndimage.affine_transform
            matrix = cupy.array(matrix)
>           return m(a, matrix, output_shape=output_shape,
                     output=output, order=self.order,
                     mode=self.mode, texture_memory=True)

tests/cupyx_tests/scipy_tests/ndimage_tests/test_interpolation.py:398: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
cupyx/scipy/ndimage/interpolation.py:376: in affine_transform
    return _texture.affine_transformation(data=input,
cupyx/_texture.py:168: in affine_transformation
    texture_object = _create_texture_object(data,
cupyx/_texture.py:98: in _create_texture_object
    array = texture.CUDAarray(texture_fmt, *data.shape[::-1])
cupy/cuda/texture.pyx:296: in cupy.cuda.texture.CUDAarray.__init__
    self.ptr = runtime.malloc3DArray(desc.ptr, width, height, depth,
cupy_backends/cuda/api/runtime.pyx:593: in cupy_backends.cuda.api.runtime.malloc3DArray
    check_status(status)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

>   raise CUDARuntimeError(status)
E   AssertionError: Only cupy raises error
E   
E   Traceback (most recent call last):
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.hXnTrEAC7u/cupy/cupy/testing/_helper.py", line 47, in _call_func
E       result = impl(self, *args, **kw)
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.hXnTrEAC7u/cupy/tests/cupyx_tests/scipy_tests/ndimage_tests/test_interpolation.py", line 398, in test_affine_transform_texture_memory
E       return m(a, matrix, output_shape=output_shape,
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.hXnTrEAC7u/cupy/cupyx/scipy/ndimage/interpolation.py", line 376, in affine_transform
E       return _texture.affine_transformation(data=input,
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.hXnTrEAC7u/cupy/cupyx/_texture.py", line 168, in affine_transformation
E       texture_object = _create_texture_object(data,
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.hXnTrEAC7u/cupy/cupyx/_texture.py", line 98, in _create_texture_object
E       array = texture.CUDAarray(texture_fmt, *data.shape[::-1])
E     File "cupy/cuda/texture.pyx", line 296, in cupy.cuda.texture.CUDAarray.__init__
E       self.ptr = runtime.malloc3DArray(desc.ptr, width, height, depth,
E     File "cupy_backends/cuda/api/runtime.pyx", line 593, in cupy_backends.cuda.api.runtime.malloc3DArray
E       check_status(status)
E     File "cupy_backends/cuda/api/runtime.pyx", line 265, in cupy_backends.cuda.api.runtime.check_status
E       raise CUDARuntimeError(status)
E   cupy_backends.cuda.api.runtime.CUDARuntimeError: hipErrorUnknown: hipErrorUnknown

cupy_backends/cuda/api/runtime.pyx:265: AssertionError
----------------------------- Captured stderr call -----------------------------
Traceback (most recent call last):
  File "cupy_backends/cuda/api/runtime.pyx", line 644, in cupy_backends.cuda.api.runtime.freeArray
    check_status(status)
  File "cupy_backends/cuda/api/runtime.pyx", line 265, in cupy_backends.cuda.api.runtime.check_status
    raise CUDARuntimeError(status)
cupy_backends.cuda.api.runtime.CUDARuntimeError: hipErrorUnknown: hipErrorUnknown
_ TestAffineTransformTextureMemory.test_affine_transform_texture_memory[_param_48_{mode='constant', order=0, output=float32, output_shape=10, shape=(100, 100), theta=0}] _

self = <<cupyx_tests.scipy_tests.ndimage_tests.test_interpolation.TestAffineTransformTextureMemory object at 0x7fab37c72730> ...mode': 'constant', 'order': 0, 'output': <class 'numpy.float32'>, 'output_shape': 10, 'shape': (100, 100), 'theta': 0}>
xp = <module 'cupy' from '/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.hXnTrEAC7u/cupy/cupy/__init__.py'>
scp = <module 'cupyx.scipy' from '/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.hXnTrEAC7u/cupy/cupyx/scipy/__init__.py'>

    @testing.numpy_cupy_allclose(atol=0.1, scipy_name='scp')
    def test_affine_transform_texture_memory(self, xp, scp):
        a = xp.ones(self.shape, dtype=xp.float32)
        center = numpy.divide(numpy.subtract(self.shape, 1), 2)
    
        if len(self.shape) == 2:
            matrix = self._2d_rotation_matrix(self.theta, center)
        elif len(self.shape) == 3:
            matrix = self._3d_rotation_matrix(self.theta, center)
        else:
            return pytest.xfail('Unsupported shape')
    
        if self.output == 'empty':
            output = xp.empty(self.shape, dtype=xp.float32)
            if self.output_shape:
                return pytest.skip('This combination is tested in '
                                   'test_invalid_texture_arguments')
        else:
            output = self.output
    
        if self.output_shape:
            output_shape = (self.output_shape, ) * len(self.shape)
        else:
            output_shape = self.output_shape
    
        if xp == cupy:
            m = cupyx.scipy.ndimage.affine_transform
            matrix = cupy.array(matrix)
>           return m(a, matrix, output_shape=output_shape,
                     output=output, order=self.order,
                     mode=self.mode, texture_memory=True)

tests/cupyx_tests/scipy_tests/ndimage_tests/test_interpolation.py:398: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
cupyx/scipy/ndimage/interpolation.py:376: in affine_transform
    return _texture.affine_transformation(data=input,
cupyx/_texture.py:168: in affine_transformation
    texture_object = _create_texture_object(data,
cupyx/_texture.py:98: in _create_texture_object
    array = texture.CUDAarray(texture_fmt, *data.shape[::-1])
cupy/cuda/texture.pyx:296: in cupy.cuda.texture.CUDAarray.__init__
    self.ptr = runtime.malloc3DArray(desc.ptr, width, height, depth,
cupy_backends/cuda/api/runtime.pyx:593: in cupy_backends.cuda.api.runtime.malloc3DArray
    check_status(status)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

>   raise CUDARuntimeError(status)
E   AssertionError: Only cupy raises error
E   
E   Traceback (most recent call last):
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.hXnTrEAC7u/cupy/cupy/testing/_helper.py", line 47, in _call_func
E       result = impl(self, *args, **kw)
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.hXnTrEAC7u/cupy/tests/cupyx_tests/scipy_tests/ndimage_tests/test_interpolation.py", line 398, in test_affine_transform_texture_memory
E       return m(a, matrix, output_shape=output_shape,
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.hXnTrEAC7u/cupy/cupyx/scipy/ndimage/interpolation.py", line 376, in affine_transform
E       return _texture.affine_transformation(data=input,
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.hXnTrEAC7u/cupy/cupyx/_texture.py", line 168, in affine_transformation
E       texture_object = _create_texture_object(data,
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.hXnTrEAC7u/cupy/cupyx/_texture.py", line 98, in _create_texture_object
E       array = texture.CUDAarray(texture_fmt, *data.shape[::-1])
E     File "cupy/cuda/texture.pyx", line 296, in cupy.cuda.texture.CUDAarray.__init__
E       self.ptr = runtime.malloc3DArray(desc.ptr, width, height, depth,
E     File "cupy_backends/cuda/api/runtime.pyx", line 593, in cupy_backends.cuda.api.runtime.malloc3DArray
E       check_status(status)
E     File "cupy_backends/cuda/api/runtime.pyx", line 265, in cupy_backends.cuda.api.runtime.check_status
E       raise CUDARuntimeError(status)
E   cupy_backends.cuda.api.runtime.CUDARuntimeError: hipErrorUnknown: hipErrorUnknown

cupy_backends/cuda/api/runtime.pyx:265: AssertionError
----------------------------- Captured stderr call -----------------------------
Traceback (most recent call last):
  File "cupy_backends/cuda/api/runtime.pyx", line 644, in cupy_backends.cuda.api.runtime.freeArray
    check_status(status)
  File "cupy_backends/cuda/api/runtime.pyx", line 265, in cupy_backends.cuda.api.runtime.check_status
    raise CUDARuntimeError(status)
cupy_backends.cuda.api.runtime.CUDARuntimeError: hipErrorUnknown: hipErrorUnknown
_ TestAffineTransformTextureMemory.test_affine_transform_texture_memory[_param_49_{mode='constant', order=0, output=float32, output_shape=10, shape=(100, 100), theta=90}] _

self = <<cupyx_tests.scipy_tests.ndimage_tests.test_interpolation.TestAffineTransformTextureMemory object at 0x7fac51507b50> ...ode': 'constant', 'order': 0, 'output': <class 'numpy.float32'>, 'output_shape': 10, 'shape': (100, 100), 'theta': 90}>
xp = <module 'cupy' from '/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.hXnTrEAC7u/cupy/cupy/__init__.py'>
scp = <module 'cupyx.scipy' from '/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.hXnTrEAC7u/cupy/cupyx/scipy/__init__.py'>

    @testing.numpy_cupy_allclose(atol=0.1, scipy_name='scp')
    def test_affine_transform_texture_memory(self, xp, scp):
        a = xp.ones(self.shape, dtype=xp.float32)
        center = numpy.divide(numpy.subtract(self.shape, 1), 2)
    
        if len(self.shape) == 2:
            matrix = self._2d_rotation_matrix(self.theta, center)
        elif len(self.shape) == 3:
            matrix = self._3d_rotation_matrix(self.theta, center)
        else:
            return pytest.xfail('Unsupported shape')
    
        if self.output == 'empty':
            output = xp.empty(self.shape, dtype=xp.float32)
            if self.output_shape:
                return pytest.skip('This combination is tested in '
                                   'test_invalid_texture_arguments')
        else:
            output = self.output
    
        if self.output_shape:
            output_shape = (self.output_shape, ) * len(self.shape)
        else:
            output_shape = self.output_shape
    
        if xp == cupy:
            m = cupyx.scipy.ndimage.affine_transform
            matrix = cupy.array(matrix)
>           return m(a, matrix, output_shape=output_shape,
                     output=output, order=self.order,
                     mode=self.mode, texture_memory=True)

tests/cupyx_tests/scipy_tests/ndimage_tests/test_interpolation.py:398: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
cupyx/scipy/ndimage/interpolation.py:376: in affine_transform
    return _texture.affine_transformation(data=input,
cupyx/_texture.py:168: in affine_transformation
    texture_object = _create_texture_object(data,
cupyx/_texture.py:98: in _create_texture_object
    array = texture.CUDAarray(texture_fmt, *data.shape[::-1])
cupy/cuda/texture.pyx:296: in cupy.cuda.texture.CUDAarray.__init__
    self.ptr = runtime.malloc3DArray(desc.ptr, width, height, depth,
cupy_backends/cuda/api/runtime.pyx:593: in cupy_backends.cuda.api.runtime.malloc3DArray
    check_status(status)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

>   raise CUDARuntimeError(status)
E   AssertionError: Only cupy raises error
E   
E   Traceback (most recent call last):
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.hXnTrEAC7u/cupy/cupy/testing/_helper.py", line 47, in _call_func
E       result = impl(self, *args, **kw)
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.hXnTrEAC7u/cupy/tests/cupyx_tests/scipy_tests/ndimage_tests/test_interpolation.py", line 398, in test_affine_transform_texture_memory
E       return m(a, matrix, output_shape=output_shape,
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.hXnTrEAC7u/cupy/cupyx/scipy/ndimage/interpolation.py", line 376, in affine_transform
E       return _texture.affine_transformation(data=input,
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.hXnTrEAC7u/cupy/cupyx/_texture.py", line 168, in affine_transformation
E       texture_object = _create_texture_object(data,
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.hXnTrEAC7u/cupy/cupyx/_texture.py", line 98, in _create_texture_object
E       array = texture.CUDAarray(texture_fmt, *data.shape[::-1])
E     File "cupy/cuda/texture.pyx", line 296, in cupy.cuda.texture.CUDAarray.__init__
E       self.ptr = runtime.malloc3DArray(desc.ptr, width, height, depth,
E     File "cupy_backends/cuda/api/runtime.pyx", line 593, in cupy_backends.cuda.api.runtime.malloc3DArray
E       check_status(status)
E     File "cupy_backends/cuda/api/runtime.pyx", line 265, in cupy_backends.cuda.api.runtime.check_status
E       raise CUDARuntimeError(status)
E   cupy_backends.cuda.api.runtime.CUDARuntimeError: hipErrorUnknown: hipErrorUnknown

cupy_backends/cuda/api/runtime.pyx:265: AssertionError
----------------------------- Captured stderr call -----------------------------
Traceback (most recent call last):
  File "cupy_backends/cuda/api/runtime.pyx", line 644, in cupy_backends.cuda.api.runtime.freeArray
    check_status(status)
  File "cupy_backends/cuda/api/runtime.pyx", line 265, in cupy_backends.cuda.api.runtime.check_status
    raise CUDARuntimeError(status)
cupy_backends.cuda.api.runtime.CUDARuntimeError: hipErrorUnknown: hipErrorUnknown
_ TestAffineTransformTextureMemory.test_affine_transform_texture_memory[_param_50_{mode='constant', order=0, output=float32, output_shape=10, shape=(100, 100), theta=180}] _

self = <<cupyx_tests.scipy_tests.ndimage_tests.test_interpolation.TestAffineTransformTextureMemory object at 0x7fac514b9490> ...de': 'constant', 'order': 0, 'output': <class 'numpy.float32'>, 'output_shape': 10, 'shape': (100, 100), 'theta': 180}>
xp = <module 'cupy' from '/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.hXnTrEAC7u/cupy/cupy/__init__.py'>
scp = <module 'cupyx.scipy' from '/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.hXnTrEAC7u/cupy/cupyx/scipy/__init__.py'>

    @testing.numpy_cupy_allclose(atol=0.1, scipy_name='scp')
    def test_affine_transform_texture_memory(self, xp, scp):
        a = xp.ones(self.shape, dtype=xp.float32)
        center = numpy.divide(numpy.subtract(self.shape, 1), 2)
    
        if len(self.shape) == 2:
            matrix = self._2d_rotation_matrix(self.theta, center)
        elif len(self.shape) == 3:
            matrix = self._3d_rotation_matrix(self.theta, center)
        else:
            return pytest.xfail('Unsupported shape')
    
        if self.output == 'empty':
            output = xp.empty(self.shape, dtype=xp.float32)
            if self.output_shape:
                return pytest.skip('This combination is tested in '
                                   'test_invalid_texture_arguments')
        else:
            output = self.output
    
        if self.output_shape:
            output_shape = (self.output_shape, ) * len(self.shape)
        else:
            output_shape = self.output_shape
    
        if xp == cupy:
            m = cupyx.scipy.ndimage.affine_transform
            matrix = cupy.array(matrix)
>           return m(a, matrix, output_shape=output_shape,
                     output=output, order=self.order,
                     mode=self.mode, texture_memory=True)

tests/cupyx_tests/scipy_tests/ndimage_tests/test_interpolation.py:398: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
cupyx/scipy/ndimage/interpolation.py:376: in affine_transform
    return _texture.affine_transformation(data=input,
cupyx/_texture.py:168: in affine_transformation
    texture_object = _create_texture_object(data,
cupyx/_texture.py:98: in _create_texture_object
    array = texture.CUDAarray(texture_fmt, *data.shape[::-1])
cupy/cuda/texture.pyx:296: in cupy.cuda.texture.CUDAarray.__init__
    self.ptr = runtime.malloc3DArray(desc.ptr, width, height, depth,
cupy_backends/cuda/api/runtime.pyx:593: in cupy_backends.cuda.api.runtime.malloc3DArray
    check_status(status)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

>   raise CUDARuntimeError(status)
E   AssertionError: Only cupy raises error
E   
E   Traceback (most recent call last):
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.hXnTrEAC7u/cupy/cupy/testing/_helper.py", line 47, in _call_func
E       result = impl(self, *args, **kw)
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.hXnTrEAC7u/cupy/tests/cupyx_tests/scipy_tests/ndimage_tests/test_interpolation.py", line 398, in test_affine_transform_texture_memory
E       return m(a, matrix, output_shape=output_shape,
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.hXnTrEAC7u/cupy/cupyx/scipy/ndimage/interpolation.py", line 376, in affine_transform
E       return _texture.affine_transformation(data=input,
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.hXnTrEAC7u/cupy/cupyx/_texture.py", line 168, in affine_transformation
E       texture_object = _create_texture_object(data,
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.hXnTrEAC7u/cupy/cupyx/_texture.py", line 98, in _create_texture_object
E       array = texture.CUDAarray(texture_fmt, *data.shape[::-1])
E     File "cupy/cuda/texture.pyx", line 296, in cupy.cuda.texture.CUDAarray.__init__
E       self.ptr = runtime.malloc3DArray(desc.ptr, width, height, depth,
E     File "cupy_backends/cuda/api/runtime.pyx", line 593, in cupy_backends.cuda.api.runtime.malloc3DArray
E       check_status(status)
E     File "cupy_backends/cuda/api/runtime.pyx", line 265, in cupy_backends.cuda.api.runtime.check_status
E       raise CUDARuntimeError(status)
E   cupy_backends.cuda.api.runtime.CUDARuntimeError: hipErrorUnknown: hipErrorUnknown

cupy_backends/cuda/api/runtime.pyx:265: AssertionError
----------------------------- Captured stderr call -----------------------------
Traceback (most recent call last):
  File "cupy_backends/cuda/api/runtime.pyx", line 644, in cupy_backends.cuda.api.runtime.freeArray
    check_status(status)
  File "cupy_backends/cuda/api/runtime.pyx", line 265, in cupy_backends.cuda.api.runtime.check_status
    raise CUDARuntimeError(status)
cupy_backends.cuda.api.runtime.CUDARuntimeError: hipErrorUnknown: hipErrorUnknown
_ TestAffineTransformTextureMemory.test_affine_transform_texture_memory[_param_51_{mode='constant', order=0, output=float32, output_shape=10, shape=(100, 100), theta=270}] _

self = <<cupyx_tests.scipy_tests.ndimage_tests.test_interpolation.TestAffineTransformTextureMemory object at 0x7fab39d9a4c0> ...de': 'constant', 'order': 0, 'output': <class 'numpy.float32'>, 'output_shape': 10, 'shape': (100, 100), 'theta': 270}>
xp = <module 'cupy' from '/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.hXnTrEAC7u/cupy/cupy/__init__.py'>
scp = <module 'cupyx.scipy' from '/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.hXnTrEAC7u/cupy/cupyx/scipy/__init__.py'>

    @testing.numpy_cupy_allclose(atol=0.1, scipy_name='scp')
    def test_affine_transform_texture_memory(self, xp, scp):
        a = xp.ones(self.shape, dtype=xp.float32)
        center = numpy.divide(numpy.subtract(self.shape, 1), 2)
    
        if len(self.shape) == 2:
            matrix = self._2d_rotation_matrix(self.theta, center)
        elif len(self.shape) == 3:
            matrix = self._3d_rotation_matrix(self.theta, center)
        else:
            return pytest.xfail('Unsupported shape')
    
        if self.output == 'empty':
            output = xp.empty(self.shape, dtype=xp.float32)
            if self.output_shape:
                return pytest.skip('This combination is tested in '
                                   'test_invalid_texture_arguments')
        else:
            output = self.output
    
        if self.output_shape:
            output_shape = (self.output_shape, ) * len(self.shape)
        else:
            output_shape = self.output_shape
    
        if xp == cupy:
            m = cupyx.scipy.ndimage.affine_transform
            matrix = cupy.array(matrix)
>           return m(a, matrix, output_shape=output_shape,
                     output=output, order=self.order,
                     mode=self.mode, texture_memory=True)

tests/cupyx_tests/scipy_tests/ndimage_tests/test_interpolation.py:398: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
cupyx/scipy/ndimage/interpolation.py:376: in affine_transform
    return _texture.affine_transformation(data=input,
cupyx/_texture.py:168: in affine_transformation
    texture_object = _create_texture_object(data,
cupyx/_texture.py:98: in _create_texture_object
    array = texture.CUDAarray(texture_fmt, *data.shape[::-1])
cupy/cuda/texture.pyx:296: in cupy.cuda.texture.CUDAarray.__init__
    self.ptr = runtime.malloc3DArray(desc.ptr, width, height, depth,
cupy_backends/cuda/api/runtime.pyx:593: in cupy_backends.cuda.api.runtime.malloc3DArray
    check_status(status)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

>   raise CUDARuntimeError(status)
E   AssertionError: Only cupy raises error
E   
E   Traceback (most recent call last):
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.hXnTrEAC7u/cupy/cupy/testing/_helper.py", line 47, in _call_func
E       result = impl(self, *args, **kw)
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.hXnTrEAC7u/cupy/tests/cupyx_tests/scipy_tests/ndimage_tests/test_interpolation.py", line 398, in test_affine_transform_texture_memory
E       return m(a, matrix, output_shape=output_shape,
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.hXnTrEAC7u/cupy/cupyx/scipy/ndimage/interpolation.py", line 376, in affine_transform
E       return _texture.affine_transformation(data=input,
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.hXnTrEAC7u/cupy/cupyx/_texture.py", line 168, in affine_transformation
E       texture_object = _create_texture_object(data,
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.hXnTrEAC7u/cupy/cupyx/_texture.py", line 98, in _create_texture_object
E       array = texture.CUDAarray(texture_fmt, *data.shape[::-1])
E     File "cupy/cuda/texture.pyx", line 296, in cupy.cuda.texture.CUDAarray.__init__
E       self.ptr = runtime.malloc3DArray(desc.ptr, width, height, depth,
E     File "cupy_backends/cuda/api/runtime.pyx", line 593, in cupy_backends.cuda.api.runtime.malloc3DArray
E       check_status(status)
E     File "cupy_backends/cuda/api/runtime.pyx", line 265, in cupy_backends.cuda.api.runtime.check_status
E       raise CUDARuntimeError(status)
E   cupy_backends.cuda.api.runtime.CUDARuntimeError: hipErrorUnknown: hipErrorUnknown

cupy_backends/cuda/api/runtime.pyx:265: AssertionError
----------------------------- Captured stderr call -----------------------------
Traceback (most recent call last):
  File "cupy_backends/cuda/api/runtime.pyx", line 644, in cupy_backends.cuda.api.runtime.freeArray
    check_status(status)
  File "cupy_backends/cuda/api/runtime.pyx", line 265, in cupy_backends.cuda.api.runtime.check_status
    raise CUDARuntimeError(status)
cupy_backends.cuda.api.runtime.CUDARuntimeError: hipErrorUnknown: hipErrorUnknown
_ TestAffineTransformTextureMemory.test_affine_transform_texture_memory[_param_52_{mode='constant', order=0, output=float32, output_shape=10, shape=(10, 20), theta=0}] _

self = <<cupyx_tests.scipy_tests.ndimage_tests.test_interpolation.TestAffineTransformTextureMemory object at 0x7fab37234b80> ...{'mode': 'constant', 'order': 0, 'output': <class 'numpy.float32'>, 'output_shape': 10, 'shape': (10, 20), 'theta': 0}>
xp = <module 'cupy' from '/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.hXnTrEAC7u/cupy/cupy/__init__.py'>
scp = <module 'cupyx.scipy' from '/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.hXnTrEAC7u/cupy/cupyx/scipy/__init__.py'>

    @testing.numpy_cupy_allclose(atol=0.1, scipy_name='scp')
    def test_affine_transform_texture_memory(self, xp, scp):
        a = xp.ones(self.shape, dtype=xp.float32)
        center = numpy.divide(numpy.subtract(self.shape, 1), 2)
    
        if len(self.shape) == 2:
            matrix = self._2d_rotation_matrix(self.theta, center)
        elif len(self.shape) == 3:
            matrix = self._3d_rotation_matrix(self.theta, center)
        else:
            return pytest.xfail('Unsupported shape')
    
        if self.output == 'empty':
            output = xp.empty(self.shape, dtype=xp.float32)
            if self.output_shape:
                return pytest.skip('This combination is tested in '
                                   'test_invalid_texture_arguments')
        else:
            output = self.output
    
        if self.output_shape:
            output_shape = (self.output_shape, ) * len(self.shape)
        else:
            output_shape = self.output_shape
    
        if xp == cupy:
            m = cupyx.scipy.ndimage.affine_transform
            matrix = cupy.array(matrix)
>           return m(a, matrix, output_shape=output_shape,
                     output=output, order=self.order,
                     mode=self.mode, texture_memory=True)

tests/cupyx_tests/scipy_tests/ndimage_tests/test_interpolation.py:398: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
cupyx/scipy/ndimage/interpolation.py:376: in affine_transform
    return _texture.affine_transformation(data=input,
cupyx/_texture.py:168: in affine_transformation
    texture_object = _create_texture_object(data,
cupyx/_texture.py:98: in _create_texture_object
    array = texture.CUDAarray(texture_fmt, *data.shape[::-1])
cupy/cuda/texture.pyx:296: in cupy.cuda.texture.CUDAarray.__init__
    self.ptr = runtime.malloc3DArray(desc.ptr, width, height, depth,
cupy_backends/cuda/api/runtime.pyx:593: in cupy_backends.cuda.api.runtime.malloc3DArray
    check_status(status)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

>   raise CUDARuntimeError(status)
E   AssertionError: Only cupy raises error
E   
E   Traceback (most recent call last):
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.hXnTrEAC7u/cupy/cupy/testing/_helper.py", line 47, in _call_func
E       result = impl(self, *args, **kw)
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.hXnTrEAC7u/cupy/tests/cupyx_tests/scipy_tests/ndimage_tests/test_interpolation.py", line 398, in test_affine_transform_texture_memory
E       return m(a, matrix, output_shape=output_shape,
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.hXnTrEAC7u/cupy/cupyx/scipy/ndimage/interpolation.py", line 376, in affine_transform
E       return _texture.affine_transformation(data=input,
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.hXnTrEAC7u/cupy/cupyx/_texture.py", line 168, in affine_transformation
E       texture_object = _create_texture_object(data,
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.hXnTrEAC7u/cupy/cupyx/_texture.py", line 98, in _create_texture_object
E       array = texture.CUDAarray(texture_fmt, *data.shape[::-1])
E     File "cupy/cuda/texture.pyx", line 296, in cupy.cuda.texture.CUDAarray.__init__
E       self.ptr = runtime.malloc3DArray(desc.ptr, width, height, depth,
E     File "cupy_backends/cuda/api/runtime.pyx", line 593, in cupy_backends.cuda.api.runtime.malloc3DArray
E       check_status(status)
E     File "cupy_backends/cuda/api/runtime.pyx", line 265, in cupy_backends.cuda.api.runtime.check_status
E       raise CUDARuntimeError(status)
E   cupy_backends.cuda.api.runtime.CUDARuntimeError: hipErrorUnknown: hipErrorUnknown

cupy_backends/cuda/api/runtime.pyx:265: AssertionError
----------------------------- Captured stderr call -----------------------------
Traceback (most recent call last):
  File "cupy_backends/cuda/api/runtime.pyx", line 644, in cupy_backends.cuda.api.runtime.freeArray
    check_status(status)
  File "cupy_backends/cuda/api/runtime.pyx", line 265, in cupy_backends.cuda.api.runtime.check_status
    raise CUDARuntimeError(status)
cupy_backends.cuda.api.runtime.CUDARuntimeError: hipErrorUnknown: hipErrorUnknown
_ TestAffineTransformTextureMemory.test_affine_transform_texture_memory[_param_53_{mode='constant', order=0, output=float32, output_shape=10, shape=(10, 20), theta=90}] _

self = <<cupyx_tests.scipy_tests.ndimage_tests.test_interpolation.TestAffineTransformTextureMemory object at 0x7fab391e5dc0> ...'mode': 'constant', 'order': 0, 'output': <class 'numpy.float32'>, 'output_shape': 10, 'shape': (10, 20), 'theta': 90}>
xp = <module 'cupy' from '/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.hXnTrEAC7u/cupy/cupy/__init__.py'>
scp = <module 'cupyx.scipy' from '/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.hXnTrEAC7u/cupy/cupyx/scipy/__init__.py'>

    @testing.numpy_cupy_allclose(atol=0.1, scipy_name='scp')
    def test_affine_transform_texture_memory(self, xp, scp):
        a = xp.ones(self.shape, dtype=xp.float32)
        center = numpy.divide(numpy.subtract(self.shape, 1), 2)
    
        if len(self.shape) == 2:
            matrix = self._2d_rotation_matrix(self.theta, center)
        elif len(self.shape) == 3:
            matrix = self._3d_rotation_matrix(self.theta, center)
        else:
            return pytest.xfail('Unsupported shape')
    
        if self.output == 'empty':
            output = xp.empty(self.shape, dtype=xp.float32)
            if self.output_shape:
                return pytest.skip('This combination is tested in '
                                   'test_invalid_texture_arguments')
        else:
            output = self.output
    
        if self.output_shape:
            output_shape = (self.output_shape, ) * len(self.shape)
        else:
            output_shape = self.output_shape
    
        if xp == cupy:
            m = cupyx.scipy.ndimage.affine_transform
            matrix = cupy.array(matrix)
>           return m(a, matrix, output_shape=output_shape,
                     output=output, order=self.order,
                     mode=self.mode, texture_memory=True)

tests/cupyx_tests/scipy_tests/ndimage_tests/test_interpolation.py:398: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
cupyx/scipy/ndimage/interpolation.py:376: in affine_transform
    return _texture.affine_transformation(data=input,
cupyx/_texture.py:168: in affine_transformation
    texture_object = _create_texture_object(data,
cupyx/_texture.py:98: in _create_texture_object
    array = texture.CUDAarray(texture_fmt, *data.shape[::-1])
cupy/cuda/texture.pyx:296: in cupy.cuda.texture.CUDAarray.__init__
    self.ptr = runtime.malloc3DArray(desc.ptr, width, height, depth,
cupy_backends/cuda/api/runtime.pyx:593: in cupy_backends.cuda.api.runtime.malloc3DArray
    check_status(status)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

>   raise CUDARuntimeError(status)
E   AssertionError: Only cupy raises error
E   
E   Traceback (most recent call last):
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.hXnTrEAC7u/cupy/cupy/testing/_helper.py", line 47, in _call_func
E       result = impl(self, *args, **kw)
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.hXnTrEAC7u/cupy/tests/cupyx_tests/scipy_tests/ndimage_tests/test_interpolation.py", line 398, in test_affine_transform_texture_memory
E       return m(a, matrix, output_shape=output_shape,
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.hXnTrEAC7u/cupy/cupyx/scipy/ndimage/interpolation.py", line 376, in affine_transform
E       return _texture.affine_transformation(data=input,
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.hXnTrEAC7u/cupy/cupyx/_texture.py", line 168, in affine_transformation
E       texture_object = _create_texture_object(data,
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.hXnTrEAC7u/cupy/cupyx/_texture.py", line 98, in _create_texture_object
E       array = texture.CUDAarray(texture_fmt, *data.shape[::-1])
E     File "cupy/cuda/texture.pyx", line 296, in cupy.cuda.texture.CUDAarray.__init__
E       self.ptr = runtime.malloc3DArray(desc.ptr, width, height, depth,
E     File "cupy_backends/cuda/api/runtime.pyx", line 593, in cupy_backends.cuda.api.runtime.malloc3DArray
E       check_status(status)
E     File "cupy_backends/cuda/api/runtime.pyx", line 265, in cupy_backends.cuda.api.runtime.check_status
E       raise CUDARuntimeError(status)
E   cupy_backends.cuda.api.runtime.CUDARuntimeError: hipErrorUnknown: hipErrorUnknown

cupy_backends/cuda/api/runtime.pyx:265: AssertionError
----------------------------- Captured stderr call -----------------------------
Traceback (most recent call last):
  File "cupy_backends/cuda/api/runtime.pyx", line 644, in cupy_backends.cuda.api.runtime.freeArray
    check_status(status)
  File "cupy_backends/cuda/api/runtime.pyx", line 265, in cupy_backends.cuda.api.runtime.check_status
    raise CUDARuntimeError(status)
cupy_backends.cuda.api.runtime.CUDARuntimeError: hipErrorUnknown: hipErrorUnknown
_ TestAffineTransformTextureMemory.test_affine_transform_texture_memory[_param_54_{mode='constant', order=0, output=float32, output_shape=10, shape=(10, 20), theta=180}] _

self = <<cupyx_tests.scipy_tests.ndimage_tests.test_interpolation.TestAffineTransformTextureMemory object at 0x7fac514fb3d0> ...mode': 'constant', 'order': 0, 'output': <class 'numpy.float32'>, 'output_shape': 10, 'shape': (10, 20), 'theta': 180}>
xp = <module 'cupy' from '/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.hXnTrEAC7u/cupy/cupy/__init__.py'>
scp = <module 'cupyx.scipy' from '/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.hXnTrEAC7u/cupy/cupyx/scipy/__init__.py'>

    @testing.numpy_cupy_allclose(atol=0.1, scipy_name='scp')
    def test_affine_transform_texture_memory(self, xp, scp):
        a = xp.ones(self.shape, dtype=xp.float32)
        center = numpy.divide(numpy.subtract(self.shape, 1), 2)
    
        if len(self.shape) == 2:
            matrix = self._2d_rotation_matrix(self.theta, center)
        elif len(self.shape) == 3:
            matrix = self._3d_rotation_matrix(self.theta, center)
        else:
            return pytest.xfail('Unsupported shape')
    
        if self.output == 'empty':
            output = xp.empty(self.shape, dtype=xp.float32)
            if self.output_shape:
                return pytest.skip('This combination is tested in '
                                   'test_invalid_texture_arguments')
        else:
            output = self.output
    
        if self.output_shape:
            output_shape = (self.output_shape, ) * len(self.shape)
        else:
            output_shape = self.output_shape
    
        if xp == cupy:
            m = cupyx.scipy.ndimage.affine_transform
            matrix = cupy.array(matrix)
>           return m(a, matrix, output_shape=output_shape,
                     output=output, order=self.order,
                     mode=self.mode, texture_memory=True)

tests/cupyx_tests/scipy_tests/ndimage_tests/test_interpolation.py:398: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
cupyx/scipy/ndimage/interpolation.py:376: in affine_transform
    return _texture.affine_transformation(data=input,
cupyx/_texture.py:168: in affine_transformation
    texture_object = _create_texture_object(data,
cupyx/_texture.py:98: in _create_texture_object
    array = texture.CUDAarray(texture_fmt, *data.shape[::-1])
cupy/cuda/texture.pyx:296: in cupy.cuda.texture.CUDAarray.__init__
    self.ptr = runtime.malloc3DArray(desc.ptr, width, height, depth,
cupy_backends/cuda/api/runtime.pyx:593: in cupy_backends.cuda.api.runtime.malloc3DArray
    check_status(status)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

>   raise CUDARuntimeError(status)
E   AssertionError: Only cupy raises error
E   
E   Traceback (most recent call last):
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.hXnTrEAC7u/cupy/cupy/testing/_helper.py", line 47, in _call_func
E       result = impl(self, *args, **kw)
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.hXnTrEAC7u/cupy/tests/cupyx_tests/scipy_tests/ndimage_tests/test_interpolation.py", line 398, in test_affine_transform_texture_memory
E       return m(a, matrix, output_shape=output_shape,
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.hXnTrEAC7u/cupy/cupyx/scipy/ndimage/interpolation.py", line 376, in affine_transform
E       return _texture.affine_transformation(data=input,
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.hXnTrEAC7u/cupy/cupyx/_texture.py", line 168, in affine_transformation
E       texture_object = _create_texture_object(data,
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.hXnTrEAC7u/cupy/cupyx/_texture.py", line 98, in _create_texture_object
E       array = texture.CUDAarray(texture_fmt, *data.shape[::-1])
E     File "cupy/cuda/texture.pyx", line 296, in cupy.cuda.texture.CUDAarray.__init__
E       self.ptr = runtime.malloc3DArray(desc.ptr, width, height, depth,
E     File "cupy_backends/cuda/api/runtime.pyx", line 593, in cupy_backends.cuda.api.runtime.malloc3DArray
E       check_status(status)
E     File "cupy_backends/cuda/api/runtime.pyx", line 265, in cupy_backends.cuda.api.runtime.check_status
E       raise CUDARuntimeError(status)
E   cupy_backends.cuda.api.runtime.CUDARuntimeError: hipErrorUnknown: hipErrorUnknown

cupy_backends/cuda/api/runtime.pyx:265: AssertionError
----------------------------- Captured stderr call -----------------------------
Traceback (most recent call last):
  File "cupy_backends/cuda/api/runtime.pyx", line 644, in cupy_backends.cuda.api.runtime.freeArray
    check_status(status)
  File "cupy_backends/cuda/api/runtime.pyx", line 265, in cupy_backends.cuda.api.runtime.check_status
    raise CUDARuntimeError(status)
cupy_backends.cuda.api.runtime.CUDARuntimeError: hipErrorUnknown: hipErrorUnknown
_ TestAffineTransformTextureMemory.test_affine_transform_texture_memory[_param_55_{mode='constant', order=0, output=float32, output_shape=10, shape=(10, 20), theta=270}] _

self = <<cupyx_tests.scipy_tests.ndimage_tests.test_interpolation.TestAffineTransformTextureMemory object at 0x7fab389b6610> ...mode': 'constant', 'order': 0, 'output': <class 'numpy.float32'>, 'output_shape': 10, 'shape': (10, 20), 'theta': 270}>
xp = <module 'cupy' from '/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.hXnTrEAC7u/cupy/cupy/__init__.py'>
scp = <module 'cupyx.scipy' from '/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.hXnTrEAC7u/cupy/cupyx/scipy/__init__.py'>

    @testing.numpy_cupy_allclose(atol=0.1, scipy_name='scp')
    def test_affine_transform_texture_memory(self, xp, scp):
        a = xp.ones(self.shape, dtype=xp.float32)
        center = numpy.divide(numpy.subtract(self.shape, 1), 2)
    
        if len(self.shape) == 2:
            matrix = self._2d_rotation_matrix(self.theta, center)
        elif len(self.shape) == 3:
            matrix = self._3d_rotation_matrix(self.theta, center)
        else:
            return pytest.xfail('Unsupported shape')
    
        if self.output == 'empty':
            output = xp.empty(self.shape, dtype=xp.float32)
            if self.output_shape:
                return pytest.skip('This combination is tested in '
                                   'test_invalid_texture_arguments')
        else:
            output = self.output
    
        if self.output_shape:
            output_shape = (self.output_shape, ) * len(self.shape)
        else:
            output_shape = self.output_shape
    
        if xp == cupy:
            m = cupyx.scipy.ndimage.affine_transform
            matrix = cupy.array(matrix)
>           return m(a, matrix, output_shape=output_shape,
                     output=output, order=self.order,
                     mode=self.mode, texture_memory=True)

tests/cupyx_tests/scipy_tests/ndimage_tests/test_interpolation.py:398: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
cupyx/scipy/ndimage/interpolation.py:376: in affine_transform
    return _texture.affine_transformation(data=input,
cupyx/_texture.py:168: in affine_transformation
    texture_object = _create_texture_object(data,
cupyx/_texture.py:98: in _create_texture_object
    array = texture.CUDAarray(texture_fmt, *data.shape[::-1])
cupy/cuda/texture.pyx:296: in cupy.cuda.texture.CUDAarray.__init__
    self.ptr = runtime.malloc3DArray(desc.ptr, width, height, depth,
cupy_backends/cuda/api/runtime.pyx:593: in cupy_backends.cuda.api.runtime.malloc3DArray
    check_status(status)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

>   raise CUDARuntimeError(status)
E   AssertionError: Only cupy raises error
E   
E   Traceback (most recent call last):
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.hXnTrEAC7u/cupy/cupy/testing/_helper.py", line 47, in _call_func
E       result = impl(self, *args, **kw)
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.hXnTrEAC7u/cupy/tests/cupyx_tests/scipy_tests/ndimage_tests/test_interpolation.py", line 398, in test_affine_transform_texture_memory
E       return m(a, matrix, output_shape=output_shape,
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.hXnTrEAC7u/cupy/cupyx/scipy/ndimage/interpolation.py", line 376, in affine_transform
E       return _texture.affine_transformation(data=input,
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.hXnTrEAC7u/cupy/cupyx/_texture.py", line 168, in affine_transformation
E       texture_object = _create_texture_object(data,
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.hXnTrEAC7u/cupy/cupyx/_texture.py", line 98, in _create_texture_object
E       array = texture.CUDAarray(texture_fmt, *data.shape[::-1])
E     File "cupy/cuda/texture.pyx", line 296, in cupy.cuda.texture.CUDAarray.__init__
E       self.ptr = runtime.malloc3DArray(desc.ptr, width, height, depth,
E     File "cupy_backends/cuda/api/runtime.pyx", line 593, in cupy_backends.cuda.api.runtime.malloc3DArray
E       check_status(status)
E     File "cupy_backends/cuda/api/runtime.pyx", line 265, in cupy_backends.cuda.api.runtime.check_status
E       raise CUDARuntimeError(status)
E   cupy_backends.cuda.api.runtime.CUDARuntimeError: hipErrorUnknown: hipErrorUnknown

cupy_backends/cuda/api/runtime.pyx:265: AssertionError
----------------------------- Captured stderr call -----------------------------
Traceback (most recent call last):
  File "cupy_backends/cuda/api/runtime.pyx", line 644, in cupy_backends.cuda.api.runtime.freeArray
    check_status(status)
  File "cupy_backends/cuda/api/runtime.pyx", line 265, in cupy_backends.cuda.api.runtime.check_status
    raise CUDARuntimeError(status)
cupy_backends.cuda.api.runtime.CUDARuntimeError: hipErrorUnknown: hipErrorUnknown
_ TestAffineTransformTextureMemory.test_affine_transform_texture_memory[_param_56_{mode='constant', order=0, output=float32, output_shape=10, shape=(10, 10, 10), theta=0}] _

self = <<cupyx_tests.scipy_tests.ndimage_tests.test_interpolation.TestAffineTransformTextureMemory object at 0x7fac51524b50> ...de': 'constant', 'order': 0, 'output': <class 'numpy.float32'>, 'output_shape': 10, 'shape': (10, 10, 10), 'theta': 0}>
xp = <module 'cupy' from '/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.hXnTrEAC7u/cupy/cupy/__init__.py'>
scp = <module 'cupyx.scipy' from '/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.hXnTrEAC7u/cupy/cupyx/scipy/__init__.py'>

    @testing.numpy_cupy_allclose(atol=0.1, scipy_name='scp')
    def test_affine_transform_texture_memory(self, xp, scp):
        a = xp.ones(self.shape, dtype=xp.float32)
        center = numpy.divide(numpy.subtract(self.shape, 1), 2)
    
        if len(self.shape) == 2:
            matrix = self._2d_rotation_matrix(self.theta, center)
        elif len(self.shape) == 3:
            matrix = self._3d_rotation_matrix(self.theta, center)
        else:
            return pytest.xfail('Unsupported shape')
    
        if self.output == 'empty':
            output = xp.empty(self.shape, dtype=xp.float32)
            if self.output_shape:
                return pytest.skip('This combination is tested in '
                                   'test_invalid_texture_arguments')
        else:
            output = self.output
    
        if self.output_shape:
            output_shape = (self.output_shape, ) * len(self.shape)
        else:
            output_shape = self.output_shape
    
        if xp == cupy:
            m = cupyx.scipy.ndimage.affine_transform
            matrix = cupy.array(matrix)
>           return m(a, matrix, output_shape=output_shape,
                     output=output, order=self.order,
                     mode=self.mode, texture_memory=True)

tests/cupyx_tests/scipy_tests/ndimage_tests/test_interpolation.py:398: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
cupyx/scipy/ndimage/interpolation.py:376: in affine_transform
    return _texture.affine_transformation(data=input,
cupyx/_texture.py:168: in affine_transformation
    texture_object = _create_texture_object(data,
cupyx/_texture.py:98: in _create_texture_object
    array = texture.CUDAarray(texture_fmt, *data.shape[::-1])
cupy/cuda/texture.pyx:296: in cupy.cuda.texture.CUDAarray.__init__
    self.ptr = runtime.malloc3DArray(desc.ptr, width, height, depth,
cupy_backends/cuda/api/runtime.pyx:593: in cupy_backends.cuda.api.runtime.malloc3DArray
    check_status(status)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

>   raise CUDARuntimeError(status)
E   AssertionError: Only cupy raises error
E   
E   Traceback (most recent call last):
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.hXnTrEAC7u/cupy/cupy/testing/_helper.py", line 47, in _call_func
E       result = impl(self, *args, **kw)
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.hXnTrEAC7u/cupy/tests/cupyx_tests/scipy_tests/ndimage_tests/test_interpolation.py", line 398, in test_affine_transform_texture_memory
E       return m(a, matrix, output_shape=output_shape,
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.hXnTrEAC7u/cupy/cupyx/scipy/ndimage/interpolation.py", line 376, in affine_transform
E       return _texture.affine_transformation(data=input,
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.hXnTrEAC7u/cupy/cupyx/_texture.py", line 168, in affine_transformation
E       texture_object = _create_texture_object(data,
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.hXnTrEAC7u/cupy/cupyx/_texture.py", line 98, in _create_texture_object
E       array = texture.CUDAarray(texture_fmt, *data.shape[::-1])
E     File "cupy/cuda/texture.pyx", line 296, in cupy.cuda.texture.CUDAarray.__init__
E       self.ptr = runtime.malloc3DArray(desc.ptr, width, height, depth,
E     File "cupy_backends/cuda/api/runtime.pyx", line 593, in cupy_backends.cuda.api.runtime.malloc3DArray
E       check_status(status)
E     File "cupy_backends/cuda/api/runtime.pyx", line 265, in cupy_backends.cuda.api.runtime.check_status
E       raise CUDARuntimeError(status)
E   cupy_backends.cuda.api.runtime.CUDARuntimeError: hipErrorUnknown: hipErrorUnknown

cupy_backends/cuda/api/runtime.pyx:265: AssertionError
----------------------------- Captured stderr call -----------------------------
Traceback (most recent call last):
  File "cupy_backends/cuda/api/runtime.pyx", line 644, in cupy_backends.cuda.api.runtime.freeArray
    check_status(status)
  File "cupy_backends/cuda/api/runtime.pyx", line 265, in cupy_backends.cuda.api.runtime.check_status
    raise CUDARuntimeError(status)
cupy_backends.cuda.api.runtime.CUDARuntimeError: hipErrorUnknown: hipErrorUnknown
_ TestAffineTransformTextureMemory.test_affine_transform_texture_memory[_param_57_{mode='constant', order=0, output=float32, output_shape=10, shape=(10, 10, 10), theta=90}] _

self = <<cupyx_tests.scipy_tests.ndimage_tests.test_interpolation.TestAffineTransformTextureMemory object at 0x7fab38af51c0> ...e': 'constant', 'order': 0, 'output': <class 'numpy.float32'>, 'output_shape': 10, 'shape': (10, 10, 10), 'theta': 90}>
xp = <module 'cupy' from '/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.hXnTrEAC7u/cupy/cupy/__init__.py'>
scp = <module 'cupyx.scipy' from '/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.hXnTrEAC7u/cupy/cupyx/scipy/__init__.py'>

    @testing.numpy_cupy_allclose(atol=0.1, scipy_name='scp')
    def test_affine_transform_texture_memory(self, xp, scp):
        a = xp.ones(self.shape, dtype=xp.float32)
        center = numpy.divide(numpy.subtract(self.shape, 1), 2)
    
        if len(self.shape) == 2:
            matrix = self._2d_rotation_matrix(self.theta, center)
        elif len(self.shape) == 3:
            matrix = self._3d_rotation_matrix(self.theta, center)
        else:
            return pytest.xfail('Unsupported shape')
    
        if self.output == 'empty':
            output = xp.empty(self.shape, dtype=xp.float32)
            if self.output_shape:
                return pytest.skip('This combination is tested in '
                                   'test_invalid_texture_arguments')
        else:
            output = self.output
    
        if self.output_shape:
            output_shape = (self.output_shape, ) * len(self.shape)
        else:
            output_shape = self.output_shape
    
        if xp == cupy:
            m = cupyx.scipy.ndimage.affine_transform
            matrix = cupy.array(matrix)
>           return m(a, matrix, output_shape=output_shape,
                     output=output, order=self.order,
                     mode=self.mode, texture_memory=True)

tests/cupyx_tests/scipy_tests/ndimage_tests/test_interpolation.py:398: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
cupyx/scipy/ndimage/interpolation.py:376: in affine_transform
    return _texture.affine_transformation(data=input,
cupyx/_texture.py:168: in affine_transformation
    texture_object = _create_texture_object(data,
cupyx/_texture.py:98: in _create_texture_object
    array = texture.CUDAarray(texture_fmt, *data.shape[::-1])
cupy/cuda/texture.pyx:296: in cupy.cuda.texture.CUDAarray.__init__
    self.ptr = runtime.malloc3DArray(desc.ptr, width, height, depth,
cupy_backends/cuda/api/runtime.pyx:593: in cupy_backends.cuda.api.runtime.malloc3DArray
    check_status(status)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

>   raise CUDARuntimeError(status)
E   AssertionError: Only cupy raises error
E   
E   Traceback (most recent call last):
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.hXnTrEAC7u/cupy/cupy/testing/_helper.py", line 47, in _call_func
E       result = impl(self, *args, **kw)
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.hXnTrEAC7u/cupy/tests/cupyx_tests/scipy_tests/ndimage_tests/test_interpolation.py", line 398, in test_affine_transform_texture_memory
E       return m(a, matrix, output_shape=output_shape,
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.hXnTrEAC7u/cupy/cupyx/scipy/ndimage/interpolation.py", line 376, in affine_transform
E       return _texture.affine_transformation(data=input,
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.hXnTrEAC7u/cupy/cupyx/_texture.py", line 168, in affine_transformation
E       texture_object = _create_texture_object(data,
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.hXnTrEAC7u/cupy/cupyx/_texture.py", line 98, in _create_texture_object
E       array = texture.CUDAarray(texture_fmt, *data.shape[::-1])
E     File "cupy/cuda/texture.pyx", line 296, in cupy.cuda.texture.CUDAarray.__init__
E       self.ptr = runtime.malloc3DArray(desc.ptr, width, height, depth,
E     File "cupy_backends/cuda/api/runtime.pyx", line 593, in cupy_backends.cuda.api.runtime.malloc3DArray
E       check_status(status)
E     File "cupy_backends/cuda/api/runtime.pyx", line 265, in cupy_backends.cuda.api.runtime.check_status
E       raise CUDARuntimeError(status)
E   cupy_backends.cuda.api.runtime.CUDARuntimeError: hipErrorUnknown: hipErrorUnknown

cupy_backends/cuda/api/runtime.pyx:265: AssertionError
----------------------------- Captured stderr call -----------------------------
Traceback (most recent call last):
  File "cupy_backends/cuda/api/runtime.pyx", line 644, in cupy_backends.cuda.api.runtime.freeArray
    check_status(status)
  File "cupy_backends/cuda/api/runtime.pyx", line 265, in cupy_backends.cuda.api.runtime.check_status
    raise CUDARuntimeError(status)
cupy_backends.cuda.api.runtime.CUDARuntimeError: hipErrorUnknown: hipErrorUnknown
_ TestAffineTransformTextureMemory.test_affine_transform_texture_memory[_param_58_{mode='constant', order=0, output=float32, output_shape=10, shape=(10, 10, 10), theta=180}] _

self = <<cupyx_tests.scipy_tests.ndimage_tests.test_interpolation.TestAffineTransformTextureMemory object at 0x7fab3959ec10> ...': 'constant', 'order': 0, 'output': <class 'numpy.float32'>, 'output_shape': 10, 'shape': (10, 10, 10), 'theta': 180}>
xp = <module 'cupy' from '/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.hXnTrEAC7u/cupy/cupy/__init__.py'>
scp = <module 'cupyx.scipy' from '/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.hXnTrEAC7u/cupy/cupyx/scipy/__init__.py'>

    @testing.numpy_cupy_allclose(atol=0.1, scipy_name='scp')
    def test_affine_transform_texture_memory(self, xp, scp):
        a = xp.ones(self.shape, dtype=xp.float32)
        center = numpy.divide(numpy.subtract(self.shape, 1), 2)
    
        if len(self.shape) == 2:
            matrix = self._2d_rotation_matrix(self.theta, center)
        elif len(self.shape) == 3:
            matrix = self._3d_rotation_matrix(self.theta, center)
        else:
            return pytest.xfail('Unsupported shape')
    
        if self.output == 'empty':
            output = xp.empty(self.shape, dtype=xp.float32)
            if self.output_shape:
                return pytest.skip('This combination is tested in '
                                   'test_invalid_texture_arguments')
        else:
            output = self.output
    
        if self.output_shape:
            output_shape = (self.output_shape, ) * len(self.shape)
        else:
            output_shape = self.output_shape
    
        if xp == cupy:
            m = cupyx.scipy.ndimage.affine_transform
            matrix = cupy.array(matrix)
>           return m(a, matrix, output_shape=output_shape,
                     output=output, order=self.order,
                     mode=self.mode, texture_memory=True)

tests/cupyx_tests/scipy_tests/ndimage_tests/test_interpolation.py:398: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
cupyx/scipy/ndimage/interpolation.py:376: in affine_transform
    return _texture.affine_transformation(data=input,
cupyx/_texture.py:168: in affine_transformation
    texture_object = _create_texture_object(data,
cupyx/_texture.py:98: in _create_texture_object
    array = texture.CUDAarray(texture_fmt, *data.shape[::-1])
cupy/cuda/texture.pyx:296: in cupy.cuda.texture.CUDAarray.__init__
    self.ptr = runtime.malloc3DArray(desc.ptr, width, height, depth,
cupy_backends/cuda/api/runtime.pyx:593: in cupy_backends.cuda.api.runtime.malloc3DArray
    check_status(status)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

>   raise CUDARuntimeError(status)
E   AssertionError: Only cupy raises error
E   
E   Traceback (most recent call last):
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.hXnTrEAC7u/cupy/cupy/testing/_helper.py", line 47, in _call_func
E       result = impl(self, *args, **kw)
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.hXnTrEAC7u/cupy/tests/cupyx_tests/scipy_tests/ndimage_tests/test_interpolation.py", line 398, in test_affine_transform_texture_memory
E       return m(a, matrix, output_shape=output_shape,
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.hXnTrEAC7u/cupy/cupyx/scipy/ndimage/interpolation.py", line 376, in affine_transform
E       return _texture.affine_transformation(data=input,
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.hXnTrEAC7u/cupy/cupyx/_texture.py", line 168, in affine_transformation
E       texture_object = _create_texture_object(data,
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.hXnTrEAC7u/cupy/cupyx/_texture.py", line 98, in _create_texture_object
E       array = texture.CUDAarray(texture_fmt, *data.shape[::-1])
E     File "cupy/cuda/texture.pyx", line 296, in cupy.cuda.texture.CUDAarray.__init__
E       self.ptr = runtime.malloc3DArray(desc.ptr, width, height, depth,
E     File "cupy_backends/cuda/api/runtime.pyx", line 593, in cupy_backends.cuda.api.runtime.malloc3DArray
E       check_status(status)
E     File "cupy_backends/cuda/api/runtime.pyx", line 265, in cupy_backends.cuda.api.runtime.check_status
E       raise CUDARuntimeError(status)
E   cupy_backends.cuda.api.runtime.CUDARuntimeError: hipErrorUnknown: hipErrorUnknown

cupy_backends/cuda/api/runtime.pyx:265: AssertionError
----------------------------- Captured stderr call -----------------------------
Traceback (most recent call last):
  File "cupy_backends/cuda/api/runtime.pyx", line 644, in cupy_backends.cuda.api.runtime.freeArray
    check_status(status)
  File "cupy_backends/cuda/api/runtime.pyx", line 265, in cupy_backends.cuda.api.runtime.check_status
    raise CUDARuntimeError(status)
cupy_backends.cuda.api.runtime.CUDARuntimeError: hipErrorUnknown: hipErrorUnknown
_ TestAffineTransformTextureMemory.test_affine_transform_texture_memory[_param_59_{mode='constant', order=0, output=float32, output_shape=10, shape=(10, 10, 10), theta=270}] _

self = <<cupyx_tests.scipy_tests.ndimage_tests.test_interpolation.TestAffineTransformTextureMemory object at 0x7fab37126850> ...': 'constant', 'order': 0, 'output': <class 'numpy.float32'>, 'output_shape': 10, 'shape': (10, 10, 10), 'theta': 270}>
xp = <module 'cupy' from '/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.hXnTrEAC7u/cupy/cupy/__init__.py'>
scp = <module 'cupyx.scipy' from '/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.hXnTrEAC7u/cupy/cupyx/scipy/__init__.py'>

    @testing.numpy_cupy_allclose(atol=0.1, scipy_name='scp')
    def test_affine_transform_texture_memory(self, xp, scp):
        a = xp.ones(self.shape, dtype=xp.float32)
        center = numpy.divide(numpy.subtract(self.shape, 1), 2)
    
        if len(self.shape) == 2:
            matrix = self._2d_rotation_matrix(self.theta, center)
        elif len(self.shape) == 3:
            matrix = self._3d_rotation_matrix(self.theta, center)
        else:
            return pytest.xfail('Unsupported shape')
    
        if self.output == 'empty':
            output = xp.empty(self.shape, dtype=xp.float32)
            if self.output_shape:
                return pytest.skip('This combination is tested in '
                                   'test_invalid_texture_arguments')
        else:
            output = self.output
    
        if self.output_shape:
            output_shape = (self.output_shape, ) * len(self.shape)
        else:
            output_shape = self.output_shape
    
        if xp == cupy:
            m = cupyx.scipy.ndimage.affine_transform
            matrix = cupy.array(matrix)
>           return m(a, matrix, output_shape=output_shape,
                     output=output, order=self.order,
                     mode=self.mode, texture_memory=True)

tests/cupyx_tests/scipy_tests/ndimage_tests/test_interpolation.py:398: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
cupyx/scipy/ndimage/interpolation.py:376: in affine_transform
    return _texture.affine_transformation(data=input,
cupyx/_texture.py:168: in affine_transformation
    texture_object = _create_texture_object(data,
cupyx/_texture.py:98: in _create_texture_object
    array = texture.CUDAarray(texture_fmt, *data.shape[::-1])
cupy/cuda/texture.pyx:296: in cupy.cuda.texture.CUDAarray.__init__
    self.ptr = runtime.malloc3DArray(desc.ptr, width, height, depth,
cupy_backends/cuda/api/runtime.pyx:593: in cupy_backends.cuda.api.runtime.malloc3DArray
    check_status(status)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

>   raise CUDARuntimeError(status)
E   AssertionError: Only cupy raises error
E   
E   Traceback (most recent call last):
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.hXnTrEAC7u/cupy/cupy/testing/_helper.py", line 47, in _call_func
E       result = impl(self, *args, **kw)
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.hXnTrEAC7u/cupy/tests/cupyx_tests/scipy_tests/ndimage_tests/test_interpolation.py", line 398, in test_affine_transform_texture_memory
E       return m(a, matrix, output_shape=output_shape,
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.hXnTrEAC7u/cupy/cupyx/scipy/ndimage/interpolation.py", line 376, in affine_transform
E       return _texture.affine_transformation(data=input,
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.hXnTrEAC7u/cupy/cupyx/_texture.py", line 168, in affine_transformation
E       texture_object = _create_texture_object(data,
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.hXnTrEAC7u/cupy/cupyx/_texture.py", line 98, in _create_texture_object
E       array = texture.CUDAarray(texture_fmt, *data.shape[::-1])
E     File "cupy/cuda/texture.pyx", line 296, in cupy.cuda.texture.CUDAarray.__init__
E       self.ptr = runtime.malloc3DArray(desc.ptr, width, height, depth,
E     File "cupy_backends/cuda/api/runtime.pyx", line 593, in cupy_backends.cuda.api.runtime.malloc3DArray
E       check_status(status)
E     File "cupy_backends/cuda/api/runtime.pyx", line 265, in cupy_backends.cuda.api.runtime.check_status
E       raise CUDARuntimeError(status)
E   cupy_backends.cuda.api.runtime.CUDARuntimeError: hipErrorUnknown: hipErrorUnknown

cupy_backends/cuda/api/runtime.pyx:265: AssertionError
----------------------------- Captured stderr call -----------------------------
Traceback (most recent call last):
  File "cupy_backends/cuda/api/runtime.pyx", line 644, in cupy_backends.cuda.api.runtime.freeArray
    check_status(status)
  File "cupy_backends/cuda/api/runtime.pyx", line 265, in cupy_backends.cuda.api.runtime.check_status
    raise CUDARuntimeError(status)
cupy_backends.cuda.api.runtime.CUDARuntimeError: hipErrorUnknown: hipErrorUnknown
_ TestAffineTransformTextureMemory.test_affine_transform_texture_memory[_param_60_{mode='constant', order=0, output=float32, output_shape=10, shape=(10, 20, 30), theta=0}] _

self = <<cupyx_tests.scipy_tests.ndimage_tests.test_interpolation.TestAffineTransformTextureMemory object at 0x7fab371cdd90> ...de': 'constant', 'order': 0, 'output': <class 'numpy.float32'>, 'output_shape': 10, 'shape': (10, 20, 30), 'theta': 0}>
xp = <module 'cupy' from '/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.hXnTrEAC7u/cupy/cupy/__init__.py'>
scp = <module 'cupyx.scipy' from '/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.hXnTrEAC7u/cupy/cupyx/scipy/__init__.py'>

    @testing.numpy_cupy_allclose(atol=0.1, scipy_name='scp')
    def test_affine_transform_texture_memory(self, xp, scp):
        a = xp.ones(self.shape, dtype=xp.float32)
        center = numpy.divide(numpy.subtract(self.shape, 1), 2)
    
        if len(self.shape) == 2:
            matrix = self._2d_rotation_matrix(self.theta, center)
        elif len(self.shape) == 3:
            matrix = self._3d_rotation_matrix(self.theta, center)
        else:
            return pytest.xfail('Unsupported shape')
    
        if self.output == 'empty':
            output = xp.empty(self.shape, dtype=xp.float32)
            if self.output_shape:
                return pytest.skip('This combination is tested in '
                                   'test_invalid_texture_arguments')
        else:
            output = self.output
    
        if self.output_shape:
            output_shape = (self.output_shape, ) * len(self.shape)
        else:
            output_shape = self.output_shape
    
        if xp == cupy:
            m = cupyx.scipy.ndimage.affine_transform
            matrix = cupy.array(matrix)
>           return m(a, matrix, output_shape=output_shape,
                     output=output, order=self.order,
                     mode=self.mode, texture_memory=True)

tests/cupyx_tests/scipy_tests/ndimage_tests/test_interpolation.py:398: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
cupyx/scipy/ndimage/interpolation.py:376: in affine_transform
    return _texture.affine_transformation(data=input,
cupyx/_texture.py:168: in affine_transformation
    texture_object = _create_texture_object(data,
cupyx/_texture.py:98: in _create_texture_object
    array = texture.CUDAarray(texture_fmt, *data.shape[::-1])
cupy/cuda/texture.pyx:296: in cupy.cuda.texture.CUDAarray.__init__
    self.ptr = runtime.malloc3DArray(desc.ptr, width, height, depth,
cupy_backends/cuda/api/runtime.pyx:593: in cupy_backends.cuda.api.runtime.malloc3DArray
    check_status(status)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

>   raise CUDARuntimeError(status)
E   AssertionError: Only cupy raises error
E   
E   Traceback (most recent call last):
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.hXnTrEAC7u/cupy/cupy/testing/_helper.py", line 47, in _call_func
E       result = impl(self, *args, **kw)
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.hXnTrEAC7u/cupy/tests/cupyx_tests/scipy_tests/ndimage_tests/test_interpolation.py", line 398, in test_affine_transform_texture_memory
E       return m(a, matrix, output_shape=output_shape,
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.hXnTrEAC7u/cupy/cupyx/scipy/ndimage/interpolation.py", line 376, in affine_transform
E       return _texture.affine_transformation(data=input,
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.hXnTrEAC7u/cupy/cupyx/_texture.py", line 168, in affine_transformation
E       texture_object = _create_texture_object(data,
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.hXnTrEAC7u/cupy/cupyx/_texture.py", line 98, in _create_texture_object
E       array = texture.CUDAarray(texture_fmt, *data.shape[::-1])
E     File "cupy/cuda/texture.pyx", line 296, in cupy.cuda.texture.CUDAarray.__init__
E       self.ptr = runtime.malloc3DArray(desc.ptr, width, height, depth,
E     File "cupy_backends/cuda/api/runtime.pyx", line 593, in cupy_backends.cuda.api.runtime.malloc3DArray
E       check_status(status)
E     File "cupy_backends/cuda/api/runtime.pyx", line 265, in cupy_backends.cuda.api.runtime.check_status
E       raise CUDARuntimeError(status)
E   cupy_backends.cuda.api.runtime.CUDARuntimeError: hipErrorUnknown: hipErrorUnknown

cupy_backends/cuda/api/runtime.pyx:265: AssertionError
----------------------------- Captured stderr call -----------------------------
Traceback (most recent call last):
  File "cupy_backends/cuda/api/runtime.pyx", line 644, in cupy_backends.cuda.api.runtime.freeArray
    check_status(status)
  File "cupy_backends/cuda/api/runtime.pyx", line 265, in cupy_backends.cuda.api.runtime.check_status
    raise CUDARuntimeError(status)
cupy_backends.cuda.api.runtime.CUDARuntimeError: hipErrorUnknown: hipErrorUnknown
_ TestAffineTransformTextureMemory.test_affine_transform_texture_memory[_param_61_{mode='constant', order=0, output=float32, output_shape=10, shape=(10, 20, 30), theta=90}] _

self = <<cupyx_tests.scipy_tests.ndimage_tests.test_interpolation.TestAffineTransformTextureMemory object at 0x7fab38b9b370> ...e': 'constant', 'order': 0, 'output': <class 'numpy.float32'>, 'output_shape': 10, 'shape': (10, 20, 30), 'theta': 90}>
xp = <module 'cupy' from '/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.hXnTrEAC7u/cupy/cupy/__init__.py'>
scp = <module 'cupyx.scipy' from '/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.hXnTrEAC7u/cupy/cupyx/scipy/__init__.py'>

    @testing.numpy_cupy_allclose(atol=0.1, scipy_name='scp')
    def test_affine_transform_texture_memory(self, xp, scp):
        a = xp.ones(self.shape, dtype=xp.float32)
        center = numpy.divide(numpy.subtract(self.shape, 1), 2)
    
        if len(self.shape) == 2:
            matrix = self._2d_rotation_matrix(self.theta, center)
        elif len(self.shape) == 3:
            matrix = self._3d_rotation_matrix(self.theta, center)
        else:
            return pytest.xfail('Unsupported shape')
    
        if self.output == 'empty':
            output = xp.empty(self.shape, dtype=xp.float32)
            if self.output_shape:
                return pytest.skip('This combination is tested in '
                                   'test_invalid_texture_arguments')
        else:
            output = self.output
    
        if self.output_shape:
            output_shape = (self.output_shape, ) * len(self.shape)
        else:
            output_shape = self.output_shape
    
        if xp == cupy:
            m = cupyx.scipy.ndimage.affine_transform
            matrix = cupy.array(matrix)
>           return m(a, matrix, output_shape=output_shape,
                     output=output, order=self.order,
                     mode=self.mode, texture_memory=True)

tests/cupyx_tests/scipy_tests/ndimage_tests/test_interpolation.py:398: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
cupyx/scipy/ndimage/interpolation.py:376: in affine_transform
    return _texture.affine_transformation(data=input,
cupyx/_texture.py:168: in affine_transformation
    texture_object = _create_texture_object(data,
cupyx/_texture.py:98: in _create_texture_object
    array = texture.CUDAarray(texture_fmt, *data.shape[::-1])
cupy/cuda/texture.pyx:296: in cupy.cuda.texture.CUDAarray.__init__
    self.ptr = runtime.malloc3DArray(desc.ptr, width, height, depth,
cupy_backends/cuda/api/runtime.pyx:593: in cupy_backends.cuda.api.runtime.malloc3DArray
    check_status(status)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

>   raise CUDARuntimeError(status)
E   AssertionError: Only cupy raises error
E   
E   Traceback (most recent call last):
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.hXnTrEAC7u/cupy/cupy/testing/_helper.py", line 47, in _call_func
E       result = impl(self, *args, **kw)
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.hXnTrEAC7u/cupy/tests/cupyx_tests/scipy_tests/ndimage_tests/test_interpolation.py", line 398, in test_affine_transform_texture_memory
E       return m(a, matrix, output_shape=output_shape,
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.hXnTrEAC7u/cupy/cupyx/scipy/ndimage/interpolation.py", line 376, in affine_transform
E       return _texture.affine_transformation(data=input,
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.hXnTrEAC7u/cupy/cupyx/_texture.py", line 168, in affine_transformation
E       texture_object = _create_texture_object(data,
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.hXnTrEAC7u/cupy/cupyx/_texture.py", line 98, in _create_texture_object
E       array = texture.CUDAarray(texture_fmt, *data.shape[::-1])
E     File "cupy/cuda/texture.pyx", line 296, in cupy.cuda.texture.CUDAarray.__init__
E       self.ptr = runtime.malloc3DArray(desc.ptr, width, height, depth,
E     File "cupy_backends/cuda/api/runtime.pyx", line 593, in cupy_backends.cuda.api.runtime.malloc3DArray
E       check_status(status)
E     File "cupy_backends/cuda/api/runtime.pyx", line 265, in cupy_backends.cuda.api.runtime.check_status
E       raise CUDARuntimeError(status)
E   cupy_backends.cuda.api.runtime.CUDARuntimeError: hipErrorUnknown: hipErrorUnknown

cupy_backends/cuda/api/runtime.pyx:265: AssertionError
----------------------------- Captured stderr call -----------------------------
Traceback (most recent call last):
  File "cupy_backends/cuda/api/runtime.pyx", line 644, in cupy_backends.cuda.api.runtime.freeArray
    check_status(status)
  File "cupy_backends/cuda/api/runtime.pyx", line 265, in cupy_backends.cuda.api.runtime.check_status
    raise CUDARuntimeError(status)
cupy_backends.cuda.api.runtime.CUDARuntimeError: hipErrorUnknown: hipErrorUnknown
_ TestAffineTransformTextureMemory.test_affine_transform_texture_memory[_param_62_{mode='constant', order=0, output=float32, output_shape=10, shape=(10, 20, 30), theta=180}] _

self = <<cupyx_tests.scipy_tests.ndimage_tests.test_interpolation.TestAffineTransformTextureMemory object at 0x7fab371cdfa0> ...': 'constant', 'order': 0, 'output': <class 'numpy.float32'>, 'output_shape': 10, 'shape': (10, 20, 30), 'theta': 180}>
xp = <module 'cupy' from '/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.hXnTrEAC7u/cupy/cupy/__init__.py'>
scp = <module 'cupyx.scipy' from '/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.hXnTrEAC7u/cupy/cupyx/scipy/__init__.py'>

    @testing.numpy_cupy_allclose(atol=0.1, scipy_name='scp')
    def test_affine_transform_texture_memory(self, xp, scp):
        a = xp.ones(self.shape, dtype=xp.float32)
        center = numpy.divide(numpy.subtract(self.shape, 1), 2)
    
        if len(self.shape) == 2:
            matrix = self._2d_rotation_matrix(self.theta, center)
        elif len(self.shape) == 3:
            matrix = self._3d_rotation_matrix(self.theta, center)
        else:
            return pytest.xfail('Unsupported shape')
    
        if self.output == 'empty':
            output = xp.empty(self.shape, dtype=xp.float32)
            if self.output_shape:
                return pytest.skip('This combination is tested in '
                                   'test_invalid_texture_arguments')
        else:
            output = self.output
    
        if self.output_shape:
            output_shape = (self.output_shape, ) * len(self.shape)
        else:
            output_shape = self.output_shape
    
        if xp == cupy:
            m = cupyx.scipy.ndimage.affine_transform
            matrix = cupy.array(matrix)
>           return m(a, matrix, output_shape=output_shape,
                     output=output, order=self.order,
                     mode=self.mode, texture_memory=True)

tests/cupyx_tests/scipy_tests/ndimage_tests/test_interpolation.py:398: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
cupyx/scipy/ndimage/interpolation.py:376: in affine_transform
    return _texture.affine_transformation(data=input,
cupyx/_texture.py:168: in affine_transformation
    texture_object = _create_texture_object(data,
cupyx/_texture.py:98: in _create_texture_object
    array = texture.CUDAarray(texture_fmt, *data.shape[::-1])
cupy/cuda/texture.pyx:296: in cupy.cuda.texture.CUDAarray.__init__
    self.ptr = runtime.malloc3DArray(desc.ptr, width, height, depth,
cupy_backends/cuda/api/runtime.pyx:593: in cupy_backends.cuda.api.runtime.malloc3DArray
    check_status(status)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

>   raise CUDARuntimeError(status)
E   AssertionError: Only cupy raises error
E   
E   Traceback (most recent call last):
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.hXnTrEAC7u/cupy/cupy/testing/_helper.py", line 47, in _call_func
E       result = impl(self, *args, **kw)
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.hXnTrEAC7u/cupy/tests/cupyx_tests/scipy_tests/ndimage_tests/test_interpolation.py", line 398, in test_affine_transform_texture_memory
E       return m(a, matrix, output_shape=output_shape,
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.hXnTrEAC7u/cupy/cupyx/scipy/ndimage/interpolation.py", line 376, in affine_transform
E       return _texture.affine_transformation(data=input,
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.hXnTrEAC7u/cupy/cupyx/_texture.py", line 168, in affine_transformation
E       texture_object = _create_texture_object(data,
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.hXnTrEAC7u/cupy/cupyx/_texture.py", line 98, in _create_texture_object
E       array = texture.CUDAarray(texture_fmt, *data.shape[::-1])
E     File "cupy/cuda/texture.pyx", line 296, in cupy.cuda.texture.CUDAarray.__init__
E       self.ptr = runtime.malloc3DArray(desc.ptr, width, height, depth,
E     File "cupy_backends/cuda/api/runtime.pyx", line 593, in cupy_backends.cuda.api.runtime.malloc3DArray
E       check_status(status)
E     File "cupy_backends/cuda/api/runtime.pyx", line 265, in cupy_backends.cuda.api.runtime.check_status
E       raise CUDARuntimeError(status)
E   cupy_backends.cuda.api.runtime.CUDARuntimeError: hipErrorUnknown: hipErrorUnknown

cupy_backends/cuda/api/runtime.pyx:265: AssertionError
----------------------------- Captured stderr call -----------------------------
Traceback (most recent call last):
  File "cupy_backends/cuda/api/runtime.pyx", line 644, in cupy_backends.cuda.api.runtime.freeArray
    check_status(status)
  File "cupy_backends/cuda/api/runtime.pyx", line 265, in cupy_backends.cuda.api.runtime.check_status
    raise CUDARuntimeError(status)
cupy_backends.cuda.api.runtime.CUDARuntimeError: hipErrorUnknown: hipErrorUnknown
_ TestAffineTransformTextureMemory.test_affine_transform_texture_memory[_param_63_{mode='constant', order=0, output=float32, output_shape=10, shape=(10, 20, 30), theta=270}] _

self = <<cupyx_tests.scipy_tests.ndimage_tests.test_interpolation.TestAffineTransformTextureMemory object at 0x7fab37d3f130> ...': 'constant', 'order': 0, 'output': <class 'numpy.float32'>, 'output_shape': 10, 'shape': (10, 20, 30), 'theta': 270}>
xp = <module 'cupy' from '/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.hXnTrEAC7u/cupy/cupy/__init__.py'>
scp = <module 'cupyx.scipy' from '/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.hXnTrEAC7u/cupy/cupyx/scipy/__init__.py'>

    @testing.numpy_cupy_allclose(atol=0.1, scipy_name='scp')
    def test_affine_transform_texture_memory(self, xp, scp):
        a = xp.ones(self.shape, dtype=xp.float32)
        center = numpy.divide(numpy.subtract(self.shape, 1), 2)
    
        if len(self.shape) == 2:
            matrix = self._2d_rotation_matrix(self.theta, center)
        elif len(self.shape) == 3:
            matrix = self._3d_rotation_matrix(self.theta, center)
        else:
            return pytest.xfail('Unsupported shape')
    
        if self.output == 'empty':
            output = xp.empty(self.shape, dtype=xp.float32)
            if self.output_shape:
                return pytest.skip('This combination is tested in '
                                   'test_invalid_texture_arguments')
        else:
            output = self.output
    
        if self.output_shape:
            output_shape = (self.output_shape, ) * len(self.shape)
        else:
            output_shape = self.output_shape
    
        if xp == cupy:
            m = cupyx.scipy.ndimage.affine_transform
            matrix = cupy.array(matrix)
>           return m(a, matrix, output_shape=output_shape,
                     output=output, order=self.order,
                     mode=self.mode, texture_memory=True)

tests/cupyx_tests/scipy_tests/ndimage_tests/test_interpolation.py:398: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
cupyx/scipy/ndimage/interpolation.py:376: in affine_transform
    return _texture.affine_transformation(data=input,
cupyx/_texture.py:168: in affine_transformation
    texture_object = _create_texture_object(data,
cupyx/_texture.py:98: in _create_texture_object
    array = texture.CUDAarray(texture_fmt, *data.shape[::-1])
cupy/cuda/texture.pyx:296: in cupy.cuda.texture.CUDAarray.__init__
    self.ptr = runtime.malloc3DArray(desc.ptr, width, height, depth,
cupy_backends/cuda/api/runtime.pyx:593: in cupy_backends.cuda.api.runtime.malloc3DArray
    check_status(status)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

>   raise CUDARuntimeError(status)
E   AssertionError: Only cupy raises error
E   
E   Traceback (most recent call last):
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.hXnTrEAC7u/cupy/cupy/testing/_helper.py", line 47, in _call_func
E       result = impl(self, *args, **kw)
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.hXnTrEAC7u/cupy/tests/cupyx_tests/scipy_tests/ndimage_tests/test_interpolation.py", line 398, in test_affine_transform_texture_memory
E       return m(a, matrix, output_shape=output_shape,
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.hXnTrEAC7u/cupy/cupyx/scipy/ndimage/interpolation.py", line 376, in affine_transform
E       return _texture.affine_transformation(data=input,
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.hXnTrEAC7u/cupy/cupyx/_texture.py", line 168, in affine_transformation
E       texture_object = _create_texture_object(data,
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.hXnTrEAC7u/cupy/cupyx/_texture.py", line 98, in _create_texture_object
E       array = texture.CUDAarray(texture_fmt, *data.shape[::-1])
E     File "cupy/cuda/texture.pyx", line 296, in cupy.cuda.texture.CUDAarray.__init__
E       self.ptr = runtime.malloc3DArray(desc.ptr, width, height, depth,
E     File "cupy_backends/cuda/api/runtime.pyx", line 593, in cupy_backends.cuda.api.runtime.malloc3DArray
E       check_status(status)
E     File "cupy_backends/cuda/api/runtime.pyx", line 265, in cupy_backends.cuda.api.runtime.check_status
E       raise CUDARuntimeError(status)
E   cupy_backends.cuda.api.runtime.CUDARuntimeError: hipErrorUnknown: hipErrorUnknown

cupy_backends/cuda/api/runtime.pyx:265: AssertionError
----------------------------- Captured stderr call -----------------------------
Traceback (most recent call last):
  File "cupy_backends/cuda/api/runtime.pyx", line 644, in cupy_backends.cuda.api.runtime.freeArray
    check_status(status)
  File "cupy_backends/cuda/api/runtime.pyx", line 265, in cupy_backends.cuda.api.runtime.check_status
    raise CUDARuntimeError(status)
cupy_backends.cuda.api.runtime.CUDARuntimeError: hipErrorUnknown: hipErrorUnknown
_ TestAffineTransformTextureMemory.test_affine_transform_texture_memory[_param_64_{mode='constant', order=0, output='empty', output_shape=None, shape=(100, 100), theta=0}] _

self = <<cupyx_tests.scipy_tests.ndimage_tests.test_interpolation.TestAffineTransformTextureMemory object at 0x7fab39d95490>  parameter: {'mode': 'constant', 'order': 0, 'output': 'empty', 'output_shape': None, 'shape': (100, 100), 'theta': 0}>
xp = <module 'cupy' from '/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.hXnTrEAC7u/cupy/cupy/__init__.py'>
scp = <module 'cupyx.scipy' from '/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.hXnTrEAC7u/cupy/cupyx/scipy/__init__.py'>

    @testing.numpy_cupy_allclose(atol=0.1, scipy_name='scp')
    def test_affine_transform_texture_memory(self, xp, scp):
        a = xp.ones(self.shape, dtype=xp.float32)
        center = numpy.divide(numpy.subtract(self.shape, 1), 2)
    
        if len(self.shape) == 2:
            matrix = self._2d_rotation_matrix(self.theta, center)
        elif len(self.shape) == 3:
            matrix = self._3d_rotation_matrix(self.theta, center)
        else:
            return pytest.xfail('Unsupported shape')
    
        if self.output == 'empty':
            output = xp.empty(self.shape, dtype=xp.float32)
            if self.output_shape:
                return pytest.skip('This combination is tested in '
                                   'test_invalid_texture_arguments')
        else:
            output = self.output
    
        if self.output_shape:
            output_shape = (self.output_shape, ) * len(self.shape)
        else:
            output_shape = self.output_shape
    
        if xp == cupy:
            m = cupyx.scipy.ndimage.affine_transform
            matrix = cupy.array(matrix)
>           return m(a, matrix, output_shape=output_shape,
                     output=output, order=self.order,
                     mode=self.mode, texture_memory=True)

tests/cupyx_tests/scipy_tests/ndimage_tests/test_interpolation.py:398: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
cupyx/scipy/ndimage/interpolation.py:376: in affine_transform
    return _texture.affine_transformation(data=input,
cupyx/_texture.py:168: in affine_transformation
    texture_object = _create_texture_object(data,
cupyx/_texture.py:98: in _create_texture_object
    array = texture.CUDAarray(texture_fmt, *data.shape[::-1])
cupy/cuda/texture.pyx:296: in cupy.cuda.texture.CUDAarray.__init__
    self.ptr = runtime.malloc3DArray(desc.ptr, width, height, depth,
cupy_backends/cuda/api/runtime.pyx:593: in cupy_backends.cuda.api.runtime.malloc3DArray
    check_status(status)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

>   raise CUDARuntimeError(status)
E   AssertionError: Only cupy raises error
E   
E   Traceback (most recent call last):
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.hXnTrEAC7u/cupy/cupy/testing/_helper.py", line 47, in _call_func
E       result = impl(self, *args, **kw)
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.hXnTrEAC7u/cupy/tests/cupyx_tests/scipy_tests/ndimage_tests/test_interpolation.py", line 398, in test_affine_transform_texture_memory
E       return m(a, matrix, output_shape=output_shape,
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.hXnTrEAC7u/cupy/cupyx/scipy/ndimage/interpolation.py", line 376, in affine_transform
E       return _texture.affine_transformation(data=input,
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.hXnTrEAC7u/cupy/cupyx/_texture.py", line 168, in affine_transformation
E       texture_object = _create_texture_object(data,
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.hXnTrEAC7u/cupy/cupyx/_texture.py", line 98, in _create_texture_object
E       array = texture.CUDAarray(texture_fmt, *data.shape[::-1])
E     File "cupy/cuda/texture.pyx", line 296, in cupy.cuda.texture.CUDAarray.__init__
E       self.ptr = runtime.malloc3DArray(desc.ptr, width, height, depth,
E     File "cupy_backends/cuda/api/runtime.pyx", line 593, in cupy_backends.cuda.api.runtime.malloc3DArray
E       check_status(status)
E     File "cupy_backends/cuda/api/runtime.pyx", line 265, in cupy_backends.cuda.api.runtime.check_status
E       raise CUDARuntimeError(status)
E   cupy_backends.cuda.api.runtime.CUDARuntimeError: hipErrorUnknown: hipErrorUnknown

cupy_backends/cuda/api/runtime.pyx:265: AssertionError
----------------------------- Captured stderr call -----------------------------
Traceback (most recent call last):
  File "cupy_backends/cuda/api/runtime.pyx", line 644, in cupy_backends.cuda.api.runtime.freeArray
    check_status(status)
  File "cupy_backends/cuda/api/runtime.pyx", line 265, in cupy_backends.cuda.api.runtime.check_status
    raise CUDARuntimeError(status)
cupy_backends.cuda.api.runtime.CUDARuntimeError: hipErrorUnknown: hipErrorUnknown
_ TestAffineTransformTextureMemory.test_affine_transform_texture_memory[_param_65_{mode='constant', order=0, output='empty', output_shape=None, shape=(100, 100), theta=90}] _

self = <<cupyx_tests.scipy_tests.ndimage_tests.test_interpolation.TestAffineTransformTextureMemory object at 0x7fab371bfcd0>  parameter: {'mode': 'constant', 'order': 0, 'output': 'empty', 'output_shape': None, 'shape': (100, 100), 'theta': 90}>
xp = <module 'cupy' from '/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.hXnTrEAC7u/cupy/cupy/__init__.py'>
scp = <module 'cupyx.scipy' from '/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.hXnTrEAC7u/cupy/cupyx/scipy/__init__.py'>

    @testing.numpy_cupy_allclose(atol=0.1, scipy_name='scp')
    def test_affine_transform_texture_memory(self, xp, scp):
        a = xp.ones(self.shape, dtype=xp.float32)
        center = numpy.divide(numpy.subtract(self.shape, 1), 2)
    
        if len(self.shape) == 2:
            matrix = self._2d_rotation_matrix(self.theta, center)
        elif len(self.shape) == 3:
            matrix = self._3d_rotation_matrix(self.theta, center)
        else:
            return pytest.xfail('Unsupported shape')
    
        if self.output == 'empty':
            output = xp.empty(self.shape, dtype=xp.float32)
            if self.output_shape:
                return pytest.skip('This combination is tested in '
                                   'test_invalid_texture_arguments')
        else:
            output = self.output
    
        if self.output_shape:
            output_shape = (self.output_shape, ) * len(self.shape)
        else:
            output_shape = self.output_shape
    
        if xp == cupy:
            m = cupyx.scipy.ndimage.affine_transform
            matrix = cupy.array(matrix)
>           return m(a, matrix, output_shape=output_shape,
                     output=output, order=self.order,
                     mode=self.mode, texture_memory=True)

tests/cupyx_tests/scipy_tests/ndimage_tests/test_interpolation.py:398: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
cupyx/scipy/ndimage/interpolation.py:376: in affine_transform
    return _texture.affine_transformation(data=input,
cupyx/_texture.py:168: in affine_transformation
    texture_object = _create_texture_object(data,
cupyx/_texture.py:98: in _create_texture_object
    array = texture.CUDAarray(texture_fmt, *data.shape[::-1])
cupy/cuda/texture.pyx:296: in cupy.cuda.texture.CUDAarray.__init__
    self.ptr = runtime.malloc3DArray(desc.ptr, width, height, depth,
cupy_backends/cuda/api/runtime.pyx:593: in cupy_backends.cuda.api.runtime.malloc3DArray
    check_status(status)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

>   raise CUDARuntimeError(status)
E   AssertionError: Only cupy raises error
E   
E   Traceback (most recent call last):
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.hXnTrEAC7u/cupy/cupy/testing/_helper.py", line 47, in _call_func
E       result = impl(self, *args, **kw)
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.hXnTrEAC7u/cupy/tests/cupyx_tests/scipy_tests/ndimage_tests/test_interpolation.py", line 398, in test_affine_transform_texture_memory
E       return m(a, matrix, output_shape=output_shape,
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.hXnTrEAC7u/cupy/cupyx/scipy/ndimage/interpolation.py", line 376, in affine_transform
E       return _texture.affine_transformation(data=input,
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.hXnTrEAC7u/cupy/cupyx/_texture.py", line 168, in affine_transformation
E       texture_object = _create_texture_object(data,
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.hXnTrEAC7u/cupy/cupyx/_texture.py", line 98, in _create_texture_object
E       array = texture.CUDAarray(texture_fmt, *data.shape[::-1])
E     File "cupy/cuda/texture.pyx", line 296, in cupy.cuda.texture.CUDAarray.__init__
E       self.ptr = runtime.malloc3DArray(desc.ptr, width, height, depth,
E     File "cupy_backends/cuda/api/runtime.pyx", line 593, in cupy_backends.cuda.api.runtime.malloc3DArray
E       check_status(status)
E     File "cupy_backends/cuda/api/runtime.pyx", line 265, in cupy_backends.cuda.api.runtime.check_status
E       raise CUDARuntimeError(status)
E   cupy_backends.cuda.api.runtime.CUDARuntimeError: hipErrorUnknown: hipErrorUnknown

cupy_backends/cuda/api/runtime.pyx:265: AssertionError
----------------------------- Captured stderr call -----------------------------
Traceback (most recent call last):
  File "cupy_backends/cuda/api/runtime.pyx", line 644, in cupy_backends.cuda.api.runtime.freeArray
    check_status(status)
  File "cupy_backends/cuda/api/runtime.pyx", line 265, in cupy_backends.cuda.api.runtime.check_status
    raise CUDARuntimeError(status)
cupy_backends.cuda.api.runtime.CUDARuntimeError: hipErrorUnknown: hipErrorUnknown
_ TestAffineTransformTextureMemory.test_affine_transform_texture_memory[_param_66_{mode='constant', order=0, output='empty', output_shape=None, shape=(100, 100), theta=180}] _

self = <<cupyx_tests.scipy_tests.ndimage_tests.test_interpolation.TestAffineTransformTextureMemory object at 0x7fab371c77c0>  parameter: {'mode': 'constant', 'order': 0, 'output': 'empty', 'output_shape': None, 'shape': (100, 100), 'theta': 180}>
xp = <module 'cupy' from '/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.hXnTrEAC7u/cupy/cupy/__init__.py'>
scp = <module 'cupyx.scipy' from '/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.hXnTrEAC7u/cupy/cupyx/scipy/__init__.py'>

    @testing.numpy_cupy_allclose(atol=0.1, scipy_name='scp')
    def test_affine_transform_texture_memory(self, xp, scp):
        a = xp.ones(self.shape, dtype=xp.float32)
        center = numpy.divide(numpy.subtract(self.shape, 1), 2)
    
        if len(self.shape) == 2:
            matrix = self._2d_rotation_matrix(self.theta, center)
        elif len(self.shape) == 3:
            matrix = self._3d_rotation_matrix(self.theta, center)
        else:
            return pytest.xfail('Unsupported shape')
    
        if self.output == 'empty':
            output = xp.empty(self.shape, dtype=xp.float32)
            if self.output_shape:
                return pytest.skip('This combination is tested in '
                                   'test_invalid_texture_arguments')
        else:
            output = self.output
    
        if self.output_shape:
            output_shape = (self.output_shape, ) * len(self.shape)
        else:
            output_shape = self.output_shape
    
        if xp == cupy:
            m = cupyx.scipy.ndimage.affine_transform
            matrix = cupy.array(matrix)
>           return m(a, matrix, output_shape=output_shape,
                     output=output, order=self.order,
                     mode=self.mode, texture_memory=True)

tests/cupyx_tests/scipy_tests/ndimage_tests/test_interpolation.py:398: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
cupyx/scipy/ndimage/interpolation.py:376: in affine_transform
    return _texture.affine_transformation(data=input,
cupyx/_texture.py:168: in affine_transformation
    texture_object = _create_texture_object(data,
cupyx/_texture.py:98: in _create_texture_object
    array = texture.CUDAarray(texture_fmt, *data.shape[::-1])
cupy/cuda/texture.pyx:296: in cupy.cuda.texture.CUDAarray.__init__
    self.ptr = runtime.malloc3DArray(desc.ptr, width, height, depth,
cupy_backends/cuda/api/runtime.pyx:593: in cupy_backends.cuda.api.runtime.malloc3DArray
    check_status(status)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

>   raise CUDARuntimeError(status)
E   AssertionError: Only cupy raises error
E   
E   Traceback (most recent call last):
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.hXnTrEAC7u/cupy/cupy/testing/_helper.py", line 47, in _call_func
E       result = impl(self, *args, **kw)
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.hXnTrEAC7u/cupy/tests/cupyx_tests/scipy_tests/ndimage_tests/test_interpolation.py", line 398, in test_affine_transform_texture_memory
E       return m(a, matrix, output_shape=output_shape,
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.hXnTrEAC7u/cupy/cupyx/scipy/ndimage/interpolation.py", line 376, in affine_transform
E       return _texture.affine_transformation(data=input,
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.hXnTrEAC7u/cupy/cupyx/_texture.py", line 168, in affine_transformation
E       texture_object = _create_texture_object(data,
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.hXnTrEAC7u/cupy/cupyx/_texture.py", line 98, in _create_texture_object
E       array = texture.CUDAarray(texture_fmt, *data.shape[::-1])
E     File "cupy/cuda/texture.pyx", line 296, in cupy.cuda.texture.CUDAarray.__init__
E       self.ptr = runtime.malloc3DArray(desc.ptr, width, height, depth,
E     File "cupy_backends/cuda/api/runtime.pyx", line 593, in cupy_backends.cuda.api.runtime.malloc3DArray
E       check_status(status)
E     File "cupy_backends/cuda/api/runtime.pyx", line 265, in cupy_backends.cuda.api.runtime.check_status
E       raise CUDARuntimeError(status)
E   cupy_backends.cuda.api.runtime.CUDARuntimeError: hipErrorUnknown: hipErrorUnknown

cupy_backends/cuda/api/runtime.pyx:265: AssertionError
----------------------------- Captured stderr call -----------------------------
Traceback (most recent call last):
  File "cupy_backends/cuda/api/runtime.pyx", line 644, in cupy_backends.cuda.api.runtime.freeArray
    check_status(status)
  File "cupy_backends/cuda/api/runtime.pyx", line 265, in cupy_backends.cuda.api.runtime.check_status
    raise CUDARuntimeError(status)
cupy_backends.cuda.api.runtime.CUDARuntimeError: hipErrorUnknown: hipErrorUnknown
_ TestAffineTransformTextureMemory.test_affine_transform_texture_memory[_param_67_{mode='constant', order=0, output='empty', output_shape=None, shape=(100, 100), theta=270}] _

self = <<cupyx_tests.scipy_tests.ndimage_tests.test_interpolation.TestAffineTransformTextureMemory object at 0x7fab39c978b0>  parameter: {'mode': 'constant', 'order': 0, 'output': 'empty', 'output_shape': None, 'shape': (100, 100), 'theta': 270}>
xp = <module 'cupy' from '/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.hXnTrEAC7u/cupy/cupy/__init__.py'>
scp = <module 'cupyx.scipy' from '/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.hXnTrEAC7u/cupy/cupyx/scipy/__init__.py'>

    @testing.numpy_cupy_allclose(atol=0.1, scipy_name='scp')
    def test_affine_transform_texture_memory(self, xp, scp):
        a = xp.ones(self.shape, dtype=xp.float32)
        center = numpy.divide(numpy.subtract(self.shape, 1), 2)
    
        if len(self.shape) == 2:
            matrix = self._2d_rotation_matrix(self.theta, center)
        elif len(self.shape) == 3:
            matrix = self._3d_rotation_matrix(self.theta, center)
        else:
            return pytest.xfail('Unsupported shape')
    
        if self.output == 'empty':
            output = xp.empty(self.shape, dtype=xp.float32)
            if self.output_shape:
                return pytest.skip('This combination is tested in '
                                   'test_invalid_texture_arguments')
        else:
            output = self.output
    
        if self.output_shape:
            output_shape = (self.output_shape, ) * len(self.shape)
        else:
            output_shape = self.output_shape
    
        if xp == cupy:
            m = cupyx.scipy.ndimage.affine_transform
            matrix = cupy.array(matrix)
>           return m(a, matrix, output_shape=output_shape,
                     output=output, order=self.order,
                     mode=self.mode, texture_memory=True)

tests/cupyx_tests/scipy_tests/ndimage_tests/test_interpolation.py:398: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
cupyx/scipy/ndimage/interpolation.py:376: in affine_transform
    return _texture.affine_transformation(data=input,
cupyx/_texture.py:168: in affine_transformation
    texture_object = _create_texture_object(data,
cupyx/_texture.py:98: in _create_texture_object
    array = texture.CUDAarray(texture_fmt, *data.shape[::-1])
cupy/cuda/texture.pyx:296: in cupy.cuda.texture.CUDAarray.__init__
    self.ptr = runtime.malloc3DArray(desc.ptr, width, height, depth,
cupy_backends/cuda/api/runtime.pyx:593: in cupy_backends.cuda.api.runtime.malloc3DArray
    check_status(status)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

>   raise CUDARuntimeError(status)
E   AssertionError: Only cupy raises error
E   
E   Traceback (most recent call last):
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.hXnTrEAC7u/cupy/cupy/testing/_helper.py", line 47, in _call_func
E       result = impl(self, *args, **kw)
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.hXnTrEAC7u/cupy/tests/cupyx_tests/scipy_tests/ndimage_tests/test_interpolation.py", line 398, in test_affine_transform_texture_memory
E       return m(a, matrix, output_shape=output_shape,
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.hXnTrEAC7u/cupy/cupyx/scipy/ndimage/interpolation.py", line 376, in affine_transform
E       return _texture.affine_transformation(data=input,
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.hXnTrEAC7u/cupy/cupyx/_texture.py", line 168, in affine_transformation
E       texture_object = _create_texture_object(data,
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.hXnTrEAC7u/cupy/cupyx/_texture.py", line 98, in _create_texture_object
E       array = texture.CUDAarray(texture_fmt, *data.shape[::-1])
E     File "cupy/cuda/texture.pyx", line 296, in cupy.cuda.texture.CUDAarray.__init__
E       self.ptr = runtime.malloc3DArray(desc.ptr, width, height, depth,
E     File "cupy_backends/cuda/api/runtime.pyx", line 593, in cupy_backends.cuda.api.runtime.malloc3DArray
E       check_status(status)
E     File "cupy_backends/cuda/api/runtime.pyx", line 265, in cupy_backends.cuda.api.runtime.check_status
E       raise CUDARuntimeError(status)
E   cupy_backends.cuda.api.runtime.CUDARuntimeError: hipErrorUnknown: hipErrorUnknown

cupy_backends/cuda/api/runtime.pyx:265: AssertionError
----------------------------- Captured stderr call -----------------------------
Traceback (most recent call last):
  File "cupy_backends/cuda/api/runtime.pyx", line 644, in cupy_backends.cuda.api.runtime.freeArray
    check_status(status)
  File "cupy_backends/cuda/api/runtime.pyx", line 265, in cupy_backends.cuda.api.runtime.check_status
    raise CUDARuntimeError(status)
cupy_backends.cuda.api.runtime.CUDARuntimeError: hipErrorUnknown: hipErrorUnknown
_ TestAffineTransformTextureMemory.test_affine_transform_texture_memory[_param_68_{mode='constant', order=0, output='empty', output_shape=None, shape=(10, 20), theta=0}] _

self = <<cupyx_tests.scipy_tests.ndimage_tests.test_interpolation.TestAffineTransformTextureMemory object at 0x7fab371482b0>  parameter: {'mode': 'constant', 'order': 0, 'output': 'empty', 'output_shape': None, 'shape': (10, 20), 'theta': 0}>
xp = <module 'cupy' from '/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.hXnTrEAC7u/cupy/cupy/__init__.py'>
scp = <module 'cupyx.scipy' from '/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.hXnTrEAC7u/cupy/cupyx/scipy/__init__.py'>

    @testing.numpy_cupy_allclose(atol=0.1, scipy_name='scp')
    def test_affine_transform_texture_memory(self, xp, scp):
        a = xp.ones(self.shape, dtype=xp.float32)
        center = numpy.divide(numpy.subtract(self.shape, 1), 2)
    
        if len(self.shape) == 2:
            matrix = self._2d_rotation_matrix(self.theta, center)
        elif len(self.shape) == 3:
            matrix = self._3d_rotation_matrix(self.theta, center)
        else:
            return pytest.xfail('Unsupported shape')
    
        if self.output == 'empty':
            output = xp.empty(self.shape, dtype=xp.float32)
            if self.output_shape:
                return pytest.skip('This combination is tested in '
                                   'test_invalid_texture_arguments')
        else:
            output = self.output
    
        if self.output_shape:
            output_shape = (self.output_shape, ) * len(self.shape)
        else:
            output_shape = self.output_shape
    
        if xp == cupy:
            m = cupyx.scipy.ndimage.affine_transform
            matrix = cupy.array(matrix)
>           return m(a, matrix, output_shape=output_shape,
                     output=output, order=self.order,
                     mode=self.mode, texture_memory=True)

tests/cupyx_tests/scipy_tests/ndimage_tests/test_interpolation.py:398: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
cupyx/scipy/ndimage/interpolation.py:376: in affine_transform
    return _texture.affine_transformation(data=input,
cupyx/_texture.py:168: in affine_transformation
    texture_object = _create_texture_object(data,
cupyx/_texture.py:98: in _create_texture_object
    array = texture.CUDAarray(texture_fmt, *data.shape[::-1])
cupy/cuda/texture.pyx:296: in cupy.cuda.texture.CUDAarray.__init__
    self.ptr = runtime.malloc3DArray(desc.ptr, width, height, depth,
cupy_backends/cuda/api/runtime.pyx:593: in cupy_backends.cuda.api.runtime.malloc3DArray
    check_status(status)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

>   raise CUDARuntimeError(status)
E   AssertionError: Only cupy raises error
E   
E   Traceback (most recent call last):
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.hXnTrEAC7u/cupy/cupy/testing/_helper.py", line 47, in _call_func
E       result = impl(self, *args, **kw)
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.hXnTrEAC7u/cupy/tests/cupyx_tests/scipy_tests/ndimage_tests/test_interpolation.py", line 398, in test_affine_transform_texture_memory
E       return m(a, matrix, output_shape=output_shape,
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.hXnTrEAC7u/cupy/cupyx/scipy/ndimage/interpolation.py", line 376, in affine_transform
E       return _texture.affine_transformation(data=input,
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.hXnTrEAC7u/cupy/cupyx/_texture.py", line 168, in affine_transformation
E       texture_object = _create_texture_object(data,
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.hXnTrEAC7u/cupy/cupyx/_texture.py", line 98, in _create_texture_object
E       array = texture.CUDAarray(texture_fmt, *data.shape[::-1])
E     File "cupy/cuda/texture.pyx", line 296, in cupy.cuda.texture.CUDAarray.__init__
E       self.ptr = runtime.malloc3DArray(desc.ptr, width, height, depth,
E     File "cupy_backends/cuda/api/runtime.pyx", line 593, in cupy_backends.cuda.api.runtime.malloc3DArray
E       check_status(status)
E     File "cupy_backends/cuda/api/runtime.pyx", line 265, in cupy_backends.cuda.api.runtime.check_status
E       raise CUDARuntimeError(status)
E   cupy_backends.cuda.api.runtime.CUDARuntimeError: hipErrorUnknown: hipErrorUnknown

cupy_backends/cuda/api/runtime.pyx:265: AssertionError
----------------------------- Captured stderr call -----------------------------
Traceback (most recent call last):
  File "cupy_backends/cuda/api/runtime.pyx", line 644, in cupy_backends.cuda.api.runtime.freeArray
    check_status(status)
  File "cupy_backends/cuda/api/runtime.pyx", line 265, in cupy_backends.cuda.api.runtime.check_status
    raise CUDARuntimeError(status)
cupy_backends.cuda.api.runtime.CUDARuntimeError: hipErrorUnknown: hipErrorUnknown
_ TestAffineTransformTextureMemory.test_affine_transform_texture_memory[_param_69_{mode='constant', order=0, output='empty', output_shape=None, shape=(10, 20), theta=90}] _

self = <<cupyx_tests.scipy_tests.ndimage_tests.test_interpolation.TestAffineTransformTextureMemory object at 0x7fab370e8970>  parameter: {'mode': 'constant', 'order': 0, 'output': 'empty', 'output_shape': None, 'shape': (10, 20), 'theta': 90}>
xp = <module 'cupy' from '/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.hXnTrEAC7u/cupy/cupy/__init__.py'>
scp = <module 'cupyx.scipy' from '/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.hXnTrEAC7u/cupy/cupyx/scipy/__init__.py'>

    @testing.numpy_cupy_allclose(atol=0.1, scipy_name='scp')
    def test_affine_transform_texture_memory(self, xp, scp):
        a = xp.ones(self.shape, dtype=xp.float32)
        center = numpy.divide(numpy.subtract(self.shape, 1), 2)
    
        if len(self.shape) == 2:
            matrix = self._2d_rotation_matrix(self.theta, center)
        elif len(self.shape) == 3:
            matrix = self._3d_rotation_matrix(self.theta, center)
        else:
            return pytest.xfail('Unsupported shape')
    
        if self.output == 'empty':
            output = xp.empty(self.shape, dtype=xp.float32)
            if self.output_shape:
                return pytest.skip('This combination is tested in '
                                   'test_invalid_texture_arguments')
        else:
            output = self.output
    
        if self.output_shape:
            output_shape = (self.output_shape, ) * len(self.shape)
        else:
            output_shape = self.output_shape
    
        if xp == cupy:
            m = cupyx.scipy.ndimage.affine_transform
            matrix = cupy.array(matrix)
>           return m(a, matrix, output_shape=output_shape,
                     output=output, order=self.order,
                     mode=self.mode, texture_memory=True)

tests/cupyx_tests/scipy_tests/ndimage_tests/test_interpolation.py:398: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
cupyx/scipy/ndimage/interpolation.py:376: in affine_transform
    return _texture.affine_transformation(data=input,
cupyx/_texture.py:168: in affine_transformation
    texture_object = _create_texture_object(data,
cupyx/_texture.py:98: in _create_texture_object
    array = texture.CUDAarray(texture_fmt, *data.shape[::-1])
cupy/cuda/texture.pyx:296: in cupy.cuda.texture.CUDAarray.__init__
    self.ptr = runtime.malloc3DArray(desc.ptr, width, height, depth,
cupy_backends/cuda/api/runtime.pyx:593: in cupy_backends.cuda.api.runtime.malloc3DArray
    check_status(status)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

>   raise CUDARuntimeError(status)
E   AssertionError: Only cupy raises error
E   
E   Traceback (most recent call last):
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.hXnTrEAC7u/cupy/cupy/testing/_helper.py", line 47, in _call_func
E       result = impl(self, *args, **kw)
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.hXnTrEAC7u/cupy/tests/cupyx_tests/scipy_tests/ndimage_tests/test_interpolation.py", line 398, in test_affine_transform_texture_memory
E       return m(a, matrix, output_shape=output_shape,
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.hXnTrEAC7u/cupy/cupyx/scipy/ndimage/interpolation.py", line 376, in affine_transform
E       return _texture.affine_transformation(data=input,
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.hXnTrEAC7u/cupy/cupyx/_texture.py", line 168, in affine_transformation
E       texture_object = _create_texture_object(data,
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.hXnTrEAC7u/cupy/cupyx/_texture.py", line 98, in _create_texture_object
E       array = texture.CUDAarray(texture_fmt, *data.shape[::-1])
E     File "cupy/cuda/texture.pyx", line 296, in cupy.cuda.texture.CUDAarray.__init__
E       self.ptr = runtime.malloc3DArray(desc.ptr, width, height, depth,
E     File "cupy_backends/cuda/api/runtime.pyx", line 593, in cupy_backends.cuda.api.runtime.malloc3DArray
E       check_status(status)
E     File "cupy_backends/cuda/api/runtime.pyx", line 265, in cupy_backends.cuda.api.runtime.check_status
E       raise CUDARuntimeError(status)
E   cupy_backends.cuda.api.runtime.CUDARuntimeError: hipErrorUnknown: hipErrorUnknown

cupy_backends/cuda/api/runtime.pyx:265: AssertionError
----------------------------- Captured stderr call -----------------------------
Traceback (most recent call last):
  File "cupy_backends/cuda/api/runtime.pyx", line 644, in cupy_backends.cuda.api.runtime.freeArray
    check_status(status)
  File "cupy_backends/cuda/api/runtime.pyx", line 265, in cupy_backends.cuda.api.runtime.check_status
    raise CUDARuntimeError(status)
cupy_backends.cuda.api.runtime.CUDARuntimeError: hipErrorUnknown: hipErrorUnknown
_ TestAffineTransformTextureMemory.test_affine_transform_texture_memory[_param_70_{mode='constant', order=0, output='empty', output_shape=None, shape=(10, 20), theta=180}] _

self = <<cupyx_tests.scipy_tests.ndimage_tests.test_interpolation.TestAffineTransformTextureMemory object at 0x7fab38f52130>  parameter: {'mode': 'constant', 'order': 0, 'output': 'empty', 'output_shape': None, 'shape': (10, 20), 'theta': 180}>
xp = <module 'cupy' from '/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.hXnTrEAC7u/cupy/cupy/__init__.py'>
scp = <module 'cupyx.scipy' from '/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.hXnTrEAC7u/cupy/cupyx/scipy/__init__.py'>

    @testing.numpy_cupy_allclose(atol=0.1, scipy_name='scp')
    def test_affine_transform_texture_memory(self, xp, scp):
        a = xp.ones(self.shape, dtype=xp.float32)
        center = numpy.divide(numpy.subtract(self.shape, 1), 2)
    
        if len(self.shape) == 2:
            matrix = self._2d_rotation_matrix(self.theta, center)
        elif len(self.shape) == 3:
            matrix = self._3d_rotation_matrix(self.theta, center)
        else:
            return pytest.xfail('Unsupported shape')
    
        if self.output == 'empty':
            output = xp.empty(self.shape, dtype=xp.float32)
            if self.output_shape:
                return pytest.skip('This combination is tested in '
                                   'test_invalid_texture_arguments')
        else:
            output = self.output
    
        if self.output_shape:
            output_shape = (self.output_shape, ) * len(self.shape)
        else:
            output_shape = self.output_shape
    
        if xp == cupy:
            m = cupyx.scipy.ndimage.affine_transform
            matrix = cupy.array(matrix)
>           return m(a, matrix, output_shape=output_shape,
                     output=output, order=self.order,
                     mode=self.mode, texture_memory=True)

tests/cupyx_tests/scipy_tests/ndimage_tests/test_interpolation.py:398: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
cupyx/scipy/ndimage/interpolation.py:376: in affine_transform
    return _texture.affine_transformation(data=input,
cupyx/_texture.py:168: in affine_transformation
    texture_object = _create_texture_object(data,
cupyx/_texture.py:98: in _create_texture_object
    array = texture.CUDAarray(texture_fmt, *data.shape[::-1])
cupy/cuda/texture.pyx:296: in cupy.cuda.texture.CUDAarray.__init__
    self.ptr = runtime.malloc3DArray(desc.ptr, width, height, depth,
cupy_backends/cuda/api/runtime.pyx:593: in cupy_backends.cuda.api.runtime.malloc3DArray
    check_status(status)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

>   raise CUDARuntimeError(status)
E   AssertionError: Only cupy raises error
E   
E   Traceback (most recent call last):
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.hXnTrEAC7u/cupy/cupy/testing/_helper.py", line 47, in _call_func
E       result = impl(self, *args, **kw)
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.hXnTrEAC7u/cupy/tests/cupyx_tests/scipy_tests/ndimage_tests/test_interpolation.py", line 398, in test_affine_transform_texture_memory
E       return m(a, matrix, output_shape=output_shape,
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.hXnTrEAC7u/cupy/cupyx/scipy/ndimage/interpolation.py", line 376, in affine_transform
E       return _texture.affine_transformation(data=input,
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.hXnTrEAC7u/cupy/cupyx/_texture.py", line 168, in affine_transformation
E       texture_object = _create_texture_object(data,
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.hXnTrEAC7u/cupy/cupyx/_texture.py", line 98, in _create_texture_object
E       array = texture.CUDAarray(texture_fmt, *data.shape[::-1])
E     File "cupy/cuda/texture.pyx", line 296, in cupy.cuda.texture.CUDAarray.__init__
E       self.ptr = runtime.malloc3DArray(desc.ptr, width, height, depth,
E     File "cupy_backends/cuda/api/runtime.pyx", line 593, in cupy_backends.cuda.api.runtime.malloc3DArray
E       check_status(status)
E     File "cupy_backends/cuda/api/runtime.pyx", line 265, in cupy_backends.cuda.api.runtime.check_status
E       raise CUDARuntimeError(status)
E   cupy_backends.cuda.api.runtime.CUDARuntimeError: hipErrorUnknown: hipErrorUnknown

cupy_backends/cuda/api/runtime.pyx:265: AssertionError
----------------------------- Captured stderr call -----------------------------
Traceback (most recent call last):
  File "cupy_backends/cuda/api/runtime.pyx", line 644, in cupy_backends.cuda.api.runtime.freeArray
    check_status(status)
  File "cupy_backends/cuda/api/runtime.pyx", line 265, in cupy_backends.cuda.api.runtime.check_status
    raise CUDARuntimeError(status)
cupy_backends.cuda.api.runtime.CUDARuntimeError: hipErrorUnknown: hipErrorUnknown
_ TestAffineTransformTextureMemory.test_affine_transform_texture_memory[_param_71_{mode='constant', order=0, output='empty', output_shape=None, shape=(10, 20), theta=270}] _

self = <<cupyx_tests.scipy_tests.ndimage_tests.test_interpolation.TestAffineTransformTextureMemory object at 0x7fab39c89070>  parameter: {'mode': 'constant', 'order': 0, 'output': 'empty', 'output_shape': None, 'shape': (10, 20), 'theta': 270}>
xp = <module 'cupy' from '/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.hXnTrEAC7u/cupy/cupy/__init__.py'>
scp = <module 'cupyx.scipy' from '/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.hXnTrEAC7u/cupy/cupyx/scipy/__init__.py'>

    @testing.numpy_cupy_allclose(atol=0.1, scipy_name='scp')
    def test_affine_transform_texture_memory(self, xp, scp):
        a = xp.ones(self.shape, dtype=xp.float32)
        center = numpy.divide(numpy.subtract(self.shape, 1), 2)
    
        if len(self.shape) == 2:
            matrix = self._2d_rotation_matrix(self.theta, center)
        elif len(self.shape) == 3:
            matrix = self._3d_rotation_matrix(self.theta, center)
        else:
            return pytest.xfail('Unsupported shape')
    
        if self.output == 'empty':
            output = xp.empty(self.shape, dtype=xp.float32)
            if self.output_shape:
                return pytest.skip('This combination is tested in '
                                   'test_invalid_texture_arguments')
        else:
            output = self.output
    
        if self.output_shape:
            output_shape = (self.output_shape, ) * len(self.shape)
        else:
            output_shape = self.output_shape
    
        if xp == cupy:
            m = cupyx.scipy.ndimage.affine_transform
            matrix = cupy.array(matrix)
>           return m(a, matrix, output_shape=output_shape,
                     output=output, order=self.order,
                     mode=self.mode, texture_memory=True)

tests/cupyx_tests/scipy_tests/ndimage_tests/test_interpolation.py:398: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
cupyx/scipy/ndimage/interpolation.py:376: in affine_transform
    return _texture.affine_transformation(data=input,
cupyx/_texture.py:168: in affine_transformation
    texture_object = _create_texture_object(data,
cupyx/_texture.py:98: in _create_texture_object
    array = texture.CUDAarray(texture_fmt, *data.shape[::-1])
cupy/cuda/texture.pyx:296: in cupy.cuda.texture.CUDAarray.__init__
    self.ptr = runtime.malloc3DArray(desc.ptr, width, height, depth,
cupy_backends/cuda/api/runtime.pyx:593: in cupy_backends.cuda.api.runtime.malloc3DArray
    check_status(status)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

>   raise CUDARuntimeError(status)
E   AssertionError: Only cupy raises error
E   
E   Traceback (most recent call last):
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.hXnTrEAC7u/cupy/cupy/testing/_helper.py", line 47, in _call_func
E       result = impl(self, *args, **kw)
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.hXnTrEAC7u/cupy/tests/cupyx_tests/scipy_tests/ndimage_tests/test_interpolation.py", line 398, in test_affine_transform_texture_memory
E       return m(a, matrix, output_shape=output_shape,
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.hXnTrEAC7u/cupy/cupyx/scipy/ndimage/interpolation.py", line 376, in affine_transform
E       return _texture.affine_transformation(data=input,
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.hXnTrEAC7u/cupy/cupyx/_texture.py", line 168, in affine_transformation
E       texture_object = _create_texture_object(data,
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.hXnTrEAC7u/cupy/cupyx/_texture.py", line 98, in _create_texture_object
E       array = texture.CUDAarray(texture_fmt, *data.shape[::-1])
E     File "cupy/cuda/texture.pyx", line 296, in cupy.cuda.texture.CUDAarray.__init__
E       self.ptr = runtime.malloc3DArray(desc.ptr, width, height, depth,
E     File "cupy_backends/cuda/api/runtime.pyx", line 593, in cupy_backends.cuda.api.runtime.malloc3DArray
E       check_status(status)
E     File "cupy_backends/cuda/api/runtime.pyx", line 265, in cupy_backends.cuda.api.runtime.check_status
E       raise CUDARuntimeError(status)
E   cupy_backends.cuda.api.runtime.CUDARuntimeError: hipErrorUnknown: hipErrorUnknown

cupy_backends/cuda/api/runtime.pyx:265: AssertionError
----------------------------- Captured stderr call -----------------------------
Traceback (most recent call last):
  File "cupy_backends/cuda/api/runtime.pyx", line 644, in cupy_backends.cuda.api.runtime.freeArray
    check_status(status)
  File "cupy_backends/cuda/api/runtime.pyx", line 265, in cupy_backends.cuda.api.runtime.check_status
    raise CUDARuntimeError(status)
cupy_backends.cuda.api.runtime.CUDARuntimeError: hipErrorUnknown: hipErrorUnknown
_ TestAffineTransformTextureMemory.test_affine_transform_texture_memory[_param_72_{mode='constant', order=0, output='empty', output_shape=None, shape=(10, 10, 10), theta=0}] _

self = <<cupyx_tests.scipy_tests.ndimage_tests.test_interpolation.TestAffineTransformTextureMemory object at 0x7fab39509640>  parameter: {'mode': 'constant', 'order': 0, 'output': 'empty', 'output_shape': None, 'shape': (10, 10, 10), 'theta': 0}>
xp = <module 'cupy' from '/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.hXnTrEAC7u/cupy/cupy/__init__.py'>
scp = <module 'cupyx.scipy' from '/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.hXnTrEAC7u/cupy/cupyx/scipy/__init__.py'>

    @testing.numpy_cupy_allclose(atol=0.1, scipy_name='scp')
    def test_affine_transform_texture_memory(self, xp, scp):
        a = xp.ones(self.shape, dtype=xp.float32)
        center = numpy.divide(numpy.subtract(self.shape, 1), 2)
    
        if len(self.shape) == 2:
            matrix = self._2d_rotation_matrix(self.theta, center)
        elif len(self.shape) == 3:
            matrix = self._3d_rotation_matrix(self.theta, center)
        else:
            return pytest.xfail('Unsupported shape')
    
        if self.output == 'empty':
            output = xp.empty(self.shape, dtype=xp.float32)
            if self.output_shape:
                return pytest.skip('This combination is tested in '
                                   'test_invalid_texture_arguments')
        else:
            output = self.output
    
        if self.output_shape:
            output_shape = (self.output_shape, ) * len(self.shape)
        else:
            output_shape = self.output_shape
    
        if xp == cupy:
            m = cupyx.scipy.ndimage.affine_transform
            matrix = cupy.array(matrix)
>           return m(a, matrix, output_shape=output_shape,
                     output=output, order=self.order,
                     mode=self.mode, texture_memory=True)

tests/cupyx_tests/scipy_tests/ndimage_tests/test_interpolation.py:398: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
cupyx/scipy/ndimage/interpolation.py:376: in affine_transform
    return _texture.affine_transformation(data=input,
cupyx/_texture.py:168: in affine_transformation
    texture_object = _create_texture_object(data,
cupyx/_texture.py:98: in _create_texture_object
    array = texture.CUDAarray(texture_fmt, *data.shape[::-1])
cupy/cuda/texture.pyx:296: in cupy.cuda.texture.CUDAarray.__init__
    self.ptr = runtime.malloc3DArray(desc.ptr, width, height, depth,
cupy_backends/cuda/api/runtime.pyx:593: in cupy_backends.cuda.api.runtime.malloc3DArray
    check_status(status)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

>   raise CUDARuntimeError(status)
E   AssertionError: Only cupy raises error
E   
E   Traceback (most recent call last):
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.hXnTrEAC7u/cupy/cupy/testing/_helper.py", line 47, in _call_func
E       result = impl(self, *args, **kw)
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.hXnTrEAC7u/cupy/tests/cupyx_tests/scipy_tests/ndimage_tests/test_interpolation.py", line 398, in test_affine_transform_texture_memory
E       return m(a, matrix, output_shape=output_shape,
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.hXnTrEAC7u/cupy/cupyx/scipy/ndimage/interpolation.py", line 376, in affine_transform
E       return _texture.affine_transformation(data=input,
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.hXnTrEAC7u/cupy/cupyx/_texture.py", line 168, in affine_transformation
E       texture_object = _create_texture_object(data,
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.hXnTrEAC7u/cupy/cupyx/_texture.py", line 98, in _create_texture_object
E       array = texture.CUDAarray(texture_fmt, *data.shape[::-1])
E     File "cupy/cuda/texture.pyx", line 296, in cupy.cuda.texture.CUDAarray.__init__
E       self.ptr = runtime.malloc3DArray(desc.ptr, width, height, depth,
E     File "cupy_backends/cuda/api/runtime.pyx", line 593, in cupy_backends.cuda.api.runtime.malloc3DArray
E       check_status(status)
E     File "cupy_backends/cuda/api/runtime.pyx", line 265, in cupy_backends.cuda.api.runtime.check_status
E       raise CUDARuntimeError(status)
E   cupy_backends.cuda.api.runtime.CUDARuntimeError: hipErrorUnknown: hipErrorUnknown

cupy_backends/cuda/api/runtime.pyx:265: AssertionError
----------------------------- Captured stderr call -----------------------------
Traceback (most recent call last):
  File "cupy_backends/cuda/api/runtime.pyx", line 644, in cupy_backends.cuda.api.runtime.freeArray
    check_status(status)
  File "cupy_backends/cuda/api/runtime.pyx", line 265, in cupy_backends.cuda.api.runtime.check_status
    raise CUDARuntimeError(status)
cupy_backends.cuda.api.runtime.CUDARuntimeError: hipErrorUnknown: hipErrorUnknown
_ TestAffineTransformTextureMemory.test_affine_transform_texture_memory[_param_73_{mode='constant', order=0, output='empty', output_shape=None, shape=(10, 10, 10), theta=90}] _

self = <<cupyx_tests.scipy_tests.ndimage_tests.test_interpolation.TestAffineTransformTextureMemory object at 0x7fab39cb2370>  parameter: {'mode': 'constant', 'order': 0, 'output': 'empty', 'output_shape': None, 'shape': (10, 10, 10), 'theta': 90}>
xp = <module 'cupy' from '/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.hXnTrEAC7u/cupy/cupy/__init__.py'>
scp = <module 'cupyx.scipy' from '/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.hXnTrEAC7u/cupy/cupyx/scipy/__init__.py'>

    @testing.numpy_cupy_allclose(atol=0.1, scipy_name='scp')
    def test_affine_transform_texture_memory(self, xp, scp):
        a = xp.ones(self.shape, dtype=xp.float32)
        center = numpy.divide(numpy.subtract(self.shape, 1), 2)
    
        if len(self.shape) == 2:
            matrix = self._2d_rotation_matrix(self.theta, center)
        elif len(self.shape) == 3:
            matrix = self._3d_rotation_matrix(self.theta, center)
        else:
            return pytest.xfail('Unsupported shape')
    
        if self.output == 'empty':
            output = xp.empty(self.shape, dtype=xp.float32)
            if self.output_shape:
                return pytest.skip('This combination is tested in '
                                   'test_invalid_texture_arguments')
        else:
            output = self.output
    
        if self.output_shape:
            output_shape = (self.output_shape, ) * len(self.shape)
        else:
            output_shape = self.output_shape
    
        if xp == cupy:
            m = cupyx.scipy.ndimage.affine_transform
            matrix = cupy.array(matrix)
>           return m(a, matrix, output_shape=output_shape,
                     output=output, order=self.order,
                     mode=self.mode, texture_memory=True)

tests/cupyx_tests/scipy_tests/ndimage_tests/test_interpolation.py:398: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
cupyx/scipy/ndimage/interpolation.py:376: in affine_transform
    return _texture.affine_transformation(data=input,
cupyx/_texture.py:168: in affine_transformation
    texture_object = _create_texture_object(data,
cupyx/_texture.py:98: in _create_texture_object
    array = texture.CUDAarray(texture_fmt, *data.shape[::-1])
cupy/cuda/texture.pyx:296: in cupy.cuda.texture.CUDAarray.__init__
    self.ptr = runtime.malloc3DArray(desc.ptr, width, height, depth,
cupy_backends/cuda/api/runtime.pyx:593: in cupy_backends.cuda.api.runtime.malloc3DArray
    check_status(status)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

>   raise CUDARuntimeError(status)
E   AssertionError: Only cupy raises error
E   
E   Traceback (most recent call last):
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.hXnTrEAC7u/cupy/cupy/testing/_helper.py", line 47, in _call_func
E       result = impl(self, *args, **kw)
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.hXnTrEAC7u/cupy/tests/cupyx_tests/scipy_tests/ndimage_tests/test_interpolation.py", line 398, in test_affine_transform_texture_memory
E       return m(a, matrix, output_shape=output_shape,
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.hXnTrEAC7u/cupy/cupyx/scipy/ndimage/interpolation.py", line 376, in affine_transform
E       return _texture.affine_transformation(data=input,
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.hXnTrEAC7u/cupy/cupyx/_texture.py", line 168, in affine_transformation
E       texture_object = _create_texture_object(data,
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.hXnTrEAC7u/cupy/cupyx/_texture.py", line 98, in _create_texture_object
E       array = texture.CUDAarray(texture_fmt, *data.shape[::-1])
E     File "cupy/cuda/texture.pyx", line 296, in cupy.cuda.texture.CUDAarray.__init__
E       self.ptr = runtime.malloc3DArray(desc.ptr, width, height, depth,
E     File "cupy_backends/cuda/api/runtime.pyx", line 593, in cupy_backends.cuda.api.runtime.malloc3DArray
E       check_status(status)
E     File "cupy_backends/cuda/api/runtime.pyx", line 265, in cupy_backends.cuda.api.runtime.check_status
E       raise CUDARuntimeError(status)
E   cupy_backends.cuda.api.runtime.CUDARuntimeError: hipErrorUnknown: hipErrorUnknown

cupy_backends/cuda/api/runtime.pyx:265: AssertionError
----------------------------- Captured stderr call -----------------------------
Traceback (most recent call last):
  File "cupy_backends/cuda/api/runtime.pyx", line 644, in cupy_backends.cuda.api.runtime.freeArray
    check_status(status)
  File "cupy_backends/cuda/api/runtime.pyx", line 265, in cupy_backends.cuda.api.runtime.check_status
    raise CUDARuntimeError(status)
cupy_backends.cuda.api.runtime.CUDARuntimeError: hipErrorUnknown: hipErrorUnknown
_ TestAffineTransformTextureMemory.test_affine_transform_texture_memory[_param_74_{mode='constant', order=0, output='empty', output_shape=None, shape=(10, 10, 10), theta=180}] _

self = <<cupyx_tests.scipy_tests.ndimage_tests.test_interpolation.TestAffineTransformTextureMemory object at 0x7fab391ab6a0> ...ameter: {'mode': 'constant', 'order': 0, 'output': 'empty', 'output_shape': None, 'shape': (10, 10, 10), 'theta': 180}>
xp = <module 'cupy' from '/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.hXnTrEAC7u/cupy/cupy/__init__.py'>
scp = <module 'cupyx.scipy' from '/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.hXnTrEAC7u/cupy/cupyx/scipy/__init__.py'>

    @testing.numpy_cupy_allclose(atol=0.1, scipy_name='scp')
    def test_affine_transform_texture_memory(self, xp, scp):
        a = xp.ones(self.shape, dtype=xp.float32)
        center = numpy.divide(numpy.subtract(self.shape, 1), 2)
    
        if len(self.shape) == 2:
            matrix = self._2d_rotation_matrix(self.theta, center)
        elif len(self.shape) == 3:
            matrix = self._3d_rotation_matrix(self.theta, center)
        else:
            return pytest.xfail('Unsupported shape')
    
        if self.output == 'empty':
            output = xp.empty(self.shape, dtype=xp.float32)
            if self.output_shape:
                return pytest.skip('This combination is tested in '
                                   'test_invalid_texture_arguments')
        else:
            output = self.output
    
        if self.output_shape:
            output_shape = (self.output_shape, ) * len(self.shape)
        else:
            output_shape = self.output_shape
    
        if xp == cupy:
            m = cupyx.scipy.ndimage.affine_transform
            matrix = cupy.array(matrix)
>           return m(a, matrix, output_shape=output_shape,
                     output=output, order=self.order,
                     mode=self.mode, texture_memory=True)

tests/cupyx_tests/scipy_tests/ndimage_tests/test_interpolation.py:398: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
cupyx/scipy/ndimage/interpolation.py:376: in affine_transform
    return _texture.affine_transformation(data=input,
cupyx/_texture.py:168: in affine_transformation
    texture_object = _create_texture_object(data,
cupyx/_texture.py:98: in _create_texture_object
    array = texture.CUDAarray(texture_fmt, *data.shape[::-1])
cupy/cuda/texture.pyx:296: in cupy.cuda.texture.CUDAarray.__init__
    self.ptr = runtime.malloc3DArray(desc.ptr, width, height, depth,
cupy_backends/cuda/api/runtime.pyx:593: in cupy_backends.cuda.api.runtime.malloc3DArray
    check_status(status)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

>   raise CUDARuntimeError(status)
E   AssertionError: Only cupy raises error
E   
E   Traceback (most recent call last):
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.hXnTrEAC7u/cupy/cupy/testing/_helper.py", line 47, in _call_func
E       result = impl(self, *args, **kw)
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.hXnTrEAC7u/cupy/tests/cupyx_tests/scipy_tests/ndimage_tests/test_interpolation.py", line 398, in test_affine_transform_texture_memory
E       return m(a, matrix, output_shape=output_shape,
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.hXnTrEAC7u/cupy/cupyx/scipy/ndimage/interpolation.py", line 376, in affine_transform
E       return _texture.affine_transformation(data=input,
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.hXnTrEAC7u/cupy/cupyx/_texture.py", line 168, in affine_transformation
E       texture_object = _create_texture_object(data,
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.hXnTrEAC7u/cupy/cupyx/_texture.py", line 98, in _create_texture_object
E       array = texture.CUDAarray(texture_fmt, *data.shape[::-1])
E     File "cupy/cuda/texture.pyx", line 296, in cupy.cuda.texture.CUDAarray.__init__
E       self.ptr = runtime.malloc3DArray(desc.ptr, width, height, depth,
E     File "cupy_backends/cuda/api/runtime.pyx", line 593, in cupy_backends.cuda.api.runtime.malloc3DArray
E       check_status(status)
E     File "cupy_backends/cuda/api/runtime.pyx", line 265, in cupy_backends.cuda.api.runtime.check_status
E       raise CUDARuntimeError(status)
E   cupy_backends.cuda.api.runtime.CUDARuntimeError: hipErrorUnknown: hipErrorUnknown

cupy_backends/cuda/api/runtime.pyx:265: AssertionError
----------------------------- Captured stderr call -----------------------------
Traceback (most recent call last):
  File "cupy_backends/cuda/api/runtime.pyx", line 644, in cupy_backends.cuda.api.runtime.freeArray
    check_status(status)
  File "cupy_backends/cuda/api/runtime.pyx", line 265, in cupy_backends.cuda.api.runtime.check_status
    raise CUDARuntimeError(status)
cupy_backends.cuda.api.runtime.CUDARuntimeError: hipErrorUnknown: hipErrorUnknown
_ TestAffineTransformTextureMemory.test_affine_transform_texture_memory[_param_75_{mode='constant', order=0, output='empty', output_shape=None, shape=(10, 10, 10), theta=270}] _

self = <<cupyx_tests.scipy_tests.ndimage_tests.test_interpolation.TestAffineTransformTextureMemory object at 0x7fab36f13820> ...ameter: {'mode': 'constant', 'order': 0, 'output': 'empty', 'output_shape': None, 'shape': (10, 10, 10), 'theta': 270}>
xp = <module 'cupy' from '/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.hXnTrEAC7u/cupy/cupy/__init__.py'>
scp = <module 'cupyx.scipy' from '/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.hXnTrEAC7u/cupy/cupyx/scipy/__init__.py'>

    @testing.numpy_cupy_allclose(atol=0.1, scipy_name='scp')
    def test_affine_transform_texture_memory(self, xp, scp):
        a = xp.ones(self.shape, dtype=xp.float32)
        center = numpy.divide(numpy.subtract(self.shape, 1), 2)
    
        if len(self.shape) == 2:
            matrix = self._2d_rotation_matrix(self.theta, center)
        elif len(self.shape) == 3:
            matrix = self._3d_rotation_matrix(self.theta, center)
        else:
            return pytest.xfail('Unsupported shape')
    
        if self.output == 'empty':
            output = xp.empty(self.shape, dtype=xp.float32)
            if self.output_shape:
                return pytest.skip('This combination is tested in '
                                   'test_invalid_texture_arguments')
        else:
            output = self.output
    
        if self.output_shape:
            output_shape = (self.output_shape, ) * len(self.shape)
        else:
            output_shape = self.output_shape
    
        if xp == cupy:
            m = cupyx.scipy.ndimage.affine_transform
            matrix = cupy.array(matrix)
>           return m(a, matrix, output_shape=output_shape,
                     output=output, order=self.order,
                     mode=self.mode, texture_memory=True)

tests/cupyx_tests/scipy_tests/ndimage_tests/test_interpolation.py:398: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
cupyx/scipy/ndimage/interpolation.py:376: in affine_transform
    return _texture.affine_transformation(data=input,
cupyx/_texture.py:168: in affine_transformation
    texture_object = _create_texture_object(data,
cupyx/_texture.py:98: in _create_texture_object
    array = texture.CUDAarray(texture_fmt, *data.shape[::-1])
cupy/cuda/texture.pyx:296: in cupy.cuda.texture.CUDAarray.__init__
    self.ptr = runtime.malloc3DArray(desc.ptr, width, height, depth,
cupy_backends/cuda/api/runtime.pyx:593: in cupy_backends.cuda.api.runtime.malloc3DArray
    check_status(status)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

>   raise CUDARuntimeError(status)
E   AssertionError: Only cupy raises error
E   
E   Traceback (most recent call last):
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.hXnTrEAC7u/cupy/cupy/testing/_helper.py", line 47, in _call_func
E       result = impl(self, *args, **kw)
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.hXnTrEAC7u/cupy/tests/cupyx_tests/scipy_tests/ndimage_tests/test_interpolation.py", line 398, in test_affine_transform_texture_memory
E       return m(a, matrix, output_shape=output_shape,
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.hXnTrEAC7u/cupy/cupyx/scipy/ndimage/interpolation.py", line 376, in affine_transform
E       return _texture.affine_transformation(data=input,
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.hXnTrEAC7u/cupy/cupyx/_texture.py", line 168, in affine_transformation
E       texture_object = _create_texture_object(data,
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.hXnTrEAC7u/cupy/cupyx/_texture.py", line 98, in _create_texture_object
E       array = texture.CUDAarray(texture_fmt, *data.shape[::-1])
E     File "cupy/cuda/texture.pyx", line 296, in cupy.cuda.texture.CUDAarray.__init__
E       self.ptr = runtime.malloc3DArray(desc.ptr, width, height, depth,
E     File "cupy_backends/cuda/api/runtime.pyx", line 593, in cupy_backends.cuda.api.runtime.malloc3DArray
E       check_status(status)
E     File "cupy_backends/cuda/api/runtime.pyx", line 265, in cupy_backends.cuda.api.runtime.check_status
E       raise CUDARuntimeError(status)
E   cupy_backends.cuda.api.runtime.CUDARuntimeError: hipErrorUnknown: hipErrorUnknown

cupy_backends/cuda/api/runtime.pyx:265: AssertionError
----------------------------- Captured stderr call -----------------------------
Traceback (most recent call last):
  File "cupy_backends/cuda/api/runtime.pyx", line 644, in cupy_backends.cuda.api.runtime.freeArray
    check_status(status)
  File "cupy_backends/cuda/api/runtime.pyx", line 265, in cupy_backends.cuda.api.runtime.check_status
    raise CUDARuntimeError(status)
cupy_backends.cuda.api.runtime.CUDARuntimeError: hipErrorUnknown: hipErrorUnknown
_ TestAffineTransformTextureMemory.test_affine_transform_texture_memory[_param_76_{mode='constant', order=0, output='empty', output_shape=None, shape=(10, 20, 30), theta=0}] _

self = <<cupyx_tests.scipy_tests.ndimage_tests.test_interpolation.TestAffineTransformTextureMemory object at 0x7fab38795cd0>  parameter: {'mode': 'constant', 'order': 0, 'output': 'empty', 'output_shape': None, 'shape': (10, 20, 30), 'theta': 0}>
xp = <module 'cupy' from '/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.hXnTrEAC7u/cupy/cupy/__init__.py'>
scp = <module 'cupyx.scipy' from '/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.hXnTrEAC7u/cupy/cupyx/scipy/__init__.py'>

    @testing.numpy_cupy_allclose(atol=0.1, scipy_name='scp')
    def test_affine_transform_texture_memory(self, xp, scp):
        a = xp.ones(self.shape, dtype=xp.float32)
        center = numpy.divide(numpy.subtract(self.shape, 1), 2)
    
        if len(self.shape) == 2:
            matrix = self._2d_rotation_matrix(self.theta, center)
        elif len(self.shape) == 3:
            matrix = self._3d_rotation_matrix(self.theta, center)
        else:
            return pytest.xfail('Unsupported shape')
    
        if self.output == 'empty':
            output = xp.empty(self.shape, dtype=xp.float32)
            if self.output_shape:
                return pytest.skip('This combination is tested in '
                                   'test_invalid_texture_arguments')
        else:
            output = self.output
    
        if self.output_shape:
            output_shape = (self.output_shape, ) * len(self.shape)
        else:
            output_shape = self.output_shape
    
        if xp == cupy:
            m = cupyx.scipy.ndimage.affine_transform
            matrix = cupy.array(matrix)
>           return m(a, matrix, output_shape=output_shape,
                     output=output, order=self.order,
                     mode=self.mode, texture_memory=True)

tests/cupyx_tests/scipy_tests/ndimage_tests/test_interpolation.py:398: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
cupyx/scipy/ndimage/interpolation.py:376: in affine_transform
    return _texture.affine_transformation(data=input,
cupyx/_texture.py:168: in affine_transformation
    texture_object = _create_texture_object(data,
cupyx/_texture.py:98: in _create_texture_object
    array = texture.CUDAarray(texture_fmt, *data.shape[::-1])
cupy/cuda/texture.pyx:296: in cupy.cuda.texture.CUDAarray.__init__
    self.ptr = runtime.malloc3DArray(desc.ptr, width, height, depth,
cupy_backends/cuda/api/runtime.pyx:593: in cupy_backends.cuda.api.runtime.malloc3DArray
    check_status(status)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

>   raise CUDARuntimeError(status)
E   AssertionError: Only cupy raises error
E   
E   Traceback (most recent call last):
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.hXnTrEAC7u/cupy/cupy/testing/_helper.py", line 47, in _call_func
E       result = impl(self, *args, **kw)
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.hXnTrEAC7u/cupy/tests/cupyx_tests/scipy_tests/ndimage_tests/test_interpolation.py", line 398, in test_affine_transform_texture_memory
E       return m(a, matrix, output_shape=output_shape,
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.hXnTrEAC7u/cupy/cupyx/scipy/ndimage/interpolation.py", line 376, in affine_transform
E       return _texture.affine_transformation(data=input,
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.hXnTrEAC7u/cupy/cupyx/_texture.py", line 168, in affine_transformation
E       texture_object = _create_texture_object(data,
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.hXnTrEAC7u/cupy/cupyx/_texture.py", line 98, in _create_texture_object
E       array = texture.CUDAarray(texture_fmt, *data.shape[::-1])
E     File "cupy/cuda/texture.pyx", line 296, in cupy.cuda.texture.CUDAarray.__init__
E       self.ptr = runtime.malloc3DArray(desc.ptr, width, height, depth,
E     File "cupy_backends/cuda/api/runtime.pyx", line 593, in cupy_backends.cuda.api.runtime.malloc3DArray
E       check_status(status)
E     File "cupy_backends/cuda/api/runtime.pyx", line 265, in cupy_backends.cuda.api.runtime.check_status
E       raise CUDARuntimeError(status)
E   cupy_backends.cuda.api.runtime.CUDARuntimeError: hipErrorUnknown: hipErrorUnknown

cupy_backends/cuda/api/runtime.pyx:265: AssertionError
----------------------------- Captured stderr call -----------------------------
Traceback (most recent call last):
  File "cupy_backends/cuda/api/runtime.pyx", line 644, in cupy_backends.cuda.api.runtime.freeArray
    check_status(status)
  File "cupy_backends/cuda/api/runtime.pyx", line 265, in cupy_backends.cuda.api.runtime.check_status
    raise CUDARuntimeError(status)
cupy_backends.cuda.api.runtime.CUDARuntimeError: hipErrorUnknown: hipErrorUnknown
_ TestAffineTransformTextureMemory.test_affine_transform_texture_memory[_param_77_{mode='constant', order=0, output='empty', output_shape=None, shape=(10, 20, 30), theta=90}] _

self = <<cupyx_tests.scipy_tests.ndimage_tests.test_interpolation.TestAffineTransformTextureMemory object at 0x7fab38e869a0>  parameter: {'mode': 'constant', 'order': 0, 'output': 'empty', 'output_shape': None, 'shape': (10, 20, 30), 'theta': 90}>
xp = <module 'cupy' from '/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.hXnTrEAC7u/cupy/cupy/__init__.py'>
scp = <module 'cupyx.scipy' from '/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.hXnTrEAC7u/cupy/cupyx/scipy/__init__.py'>

    @testing.numpy_cupy_allclose(atol=0.1, scipy_name='scp')
    def test_affine_transform_texture_memory(self, xp, scp):
        a = xp.ones(self.shape, dtype=xp.float32)
        center = numpy.divide(numpy.subtract(self.shape, 1), 2)
    
        if len(self.shape) == 2:
            matrix = self._2d_rotation_matrix(self.theta, center)
        elif len(self.shape) == 3:
            matrix = self._3d_rotation_matrix(self.theta, center)
        else:
            return pytest.xfail('Unsupported shape')
    
        if self.output == 'empty':
            output = xp.empty(self.shape, dtype=xp.float32)
            if self.output_shape:
                return pytest.skip('This combination is tested in '
                                   'test_invalid_texture_arguments')
        else:
            output = self.output
    
        if self.output_shape:
            output_shape = (self.output_shape, ) * len(self.shape)
        else:
            output_shape = self.output_shape
    
        if xp == cupy:
            m = cupyx.scipy.ndimage.affine_transform
            matrix = cupy.array(matrix)
>           return m(a, matrix, output_shape=output_shape,
                     output=output, order=self.order,
                     mode=self.mode, texture_memory=True)

tests/cupyx_tests/scipy_tests/ndimage_tests/test_interpolation.py:398: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
cupyx/scipy/ndimage/interpolation.py:376: in affine_transform
    return _texture.affine_transformation(data=input,
cupyx/_texture.py:168: in affine_transformation
    texture_object = _create_texture_object(data,
cupyx/_texture.py:98: in _create_texture_object
    array = texture.CUDAarray(texture_fmt, *data.shape[::-1])
cupy/cuda/texture.pyx:296: in cupy.cuda.texture.CUDAarray.__init__
    self.ptr = runtime.malloc3DArray(desc.ptr, width, height, depth,
cupy_backends/cuda/api/runtime.pyx:593: in cupy_backends.cuda.api.runtime.malloc3DArray
    check_status(status)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

>   raise CUDARuntimeError(status)
E   AssertionError: Only cupy raises error
E   
E   Traceback (most recent call last):
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.hXnTrEAC7u/cupy/cupy/testing/_helper.py", line 47, in _call_func
E       result = impl(self, *args, **kw)
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.hXnTrEAC7u/cupy/tests/cupyx_tests/scipy_tests/ndimage_tests/test_interpolation.py", line 398, in test_affine_transform_texture_memory
E       return m(a, matrix, output_shape=output_shape,
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.hXnTrEAC7u/cupy/cupyx/scipy/ndimage/interpolation.py", line 376, in affine_transform
E       return _texture.affine_transformation(data=input,
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.hXnTrEAC7u/cupy/cupyx/_texture.py", line 168, in affine_transformation
E       texture_object = _create_texture_object(data,
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.hXnTrEAC7u/cupy/cupyx/_texture.py", line 98, in _create_texture_object
E       array = texture.CUDAarray(texture_fmt, *data.shape[::-1])
E     File "cupy/cuda/texture.pyx", line 296, in cupy.cuda.texture.CUDAarray.__init__
E       self.ptr = runtime.malloc3DArray(desc.ptr, width, height, depth,
E     File "cupy_backends/cuda/api/runtime.pyx", line 593, in cupy_backends.cuda.api.runtime.malloc3DArray
E       check_status(status)
E     File "cupy_backends/cuda/api/runtime.pyx", line 265, in cupy_backends.cuda.api.runtime.check_status
E       raise CUDARuntimeError(status)
E   cupy_backends.cuda.api.runtime.CUDARuntimeError: hipErrorUnknown: hipErrorUnknown

cupy_backends/cuda/api/runtime.pyx:265: AssertionError
----------------------------- Captured stderr call -----------------------------
Traceback (most recent call last):
  File "cupy_backends/cuda/api/runtime.pyx", line 644, in cupy_backends.cuda.api.runtime.freeArray
    check_status(status)
  File "cupy_backends/cuda/api/runtime.pyx", line 265, in cupy_backends.cuda.api.runtime.check_status
    raise CUDARuntimeError(status)
cupy_backends.cuda.api.runtime.CUDARuntimeError: hipErrorUnknown: hipErrorUnknown
_ TestAffineTransformTextureMemory.test_affine_transform_texture_memory[_param_78_{mode='constant', order=0, output='empty', output_shape=None, shape=(10, 20, 30), theta=180}] _

self = <<cupyx_tests.scipy_tests.ndimage_tests.test_interpolation.TestAffineTransformTextureMemory object at 0x7fac51517910> ...ameter: {'mode': 'constant', 'order': 0, 'output': 'empty', 'output_shape': None, 'shape': (10, 20, 30), 'theta': 180}>
xp = <module 'cupy' from '/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.hXnTrEAC7u/cupy/cupy/__init__.py'>
scp = <module 'cupyx.scipy' from '/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.hXnTrEAC7u/cupy/cupyx/scipy/__init__.py'>

    @testing.numpy_cupy_allclose(atol=0.1, scipy_name='scp')
    def test_affine_transform_texture_memory(self, xp, scp):
        a = xp.ones(self.shape, dtype=xp.float32)
        center = numpy.divide(numpy.subtract(self.shape, 1), 2)
    
        if len(self.shape) == 2:
            matrix = self._2d_rotation_matrix(self.theta, center)
        elif len(self.shape) == 3:
            matrix = self._3d_rotation_matrix(self.theta, center)
        else:
            return pytest.xfail('Unsupported shape')
    
        if self.output == 'empty':
            output = xp.empty(self.shape, dtype=xp.float32)
            if self.output_shape:
                return pytest.skip('This combination is tested in '
                                   'test_invalid_texture_arguments')
        else:
            output = self.output
    
        if self.output_shape:
            output_shape = (self.output_shape, ) * len(self.shape)
        else:
            output_shape = self.output_shape
    
        if xp == cupy:
            m = cupyx.scipy.ndimage.affine_transform
            matrix = cupy.array(matrix)
>           return m(a, matrix, output_shape=output_shape,
                     output=output, order=self.order,
                     mode=self.mode, texture_memory=True)

tests/cupyx_tests/scipy_tests/ndimage_tests/test_interpolation.py:398: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
cupyx/scipy/ndimage/interpolation.py:376: in affine_transform
    return _texture.affine_transformation(data=input,
cupyx/_texture.py:168: in affine_transformation
    texture_object = _create_texture_object(data,
cupyx/_texture.py:98: in _create_texture_object
    array = texture.CUDAarray(texture_fmt, *data.shape[::-1])
cupy/cuda/texture.pyx:296: in cupy.cuda.texture.CUDAarray.__init__
    self.ptr = runtime.malloc3DArray(desc.ptr, width, height, depth,
cupy_backends/cuda/api/runtime.pyx:593: in cupy_backends.cuda.api.runtime.malloc3DArray
    check_status(status)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

>   raise CUDARuntimeError(status)
E   AssertionError: Only cupy raises error
E   
E   Traceback (most recent call last):
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.hXnTrEAC7u/cupy/cupy/testing/_helper.py", line 47, in _call_func
E       result = impl(self, *args, **kw)
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.hXnTrEAC7u/cupy/tests/cupyx_tests/scipy_tests/ndimage_tests/test_interpolation.py", line 398, in test_affine_transform_texture_memory
E       return m(a, matrix, output_shape=output_shape,
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.hXnTrEAC7u/cupy/cupyx/scipy/ndimage/interpolation.py", line 376, in affine_transform
E       return _texture.affine_transformation(data=input,
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.hXnTrEAC7u/cupy/cupyx/_texture.py", line 168, in affine_transformation
E       texture_object = _create_texture_object(data,
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.hXnTrEAC7u/cupy/cupyx/_texture.py", line 98, in _create_texture_object
E       array = texture.CUDAarray(texture_fmt, *data.shape[::-1])
E     File "cupy/cuda/texture.pyx", line 296, in cupy.cuda.texture.CUDAarray.__init__
E       self.ptr = runtime.malloc3DArray(desc.ptr, width, height, depth,
E     File "cupy_backends/cuda/api/runtime.pyx", line 593, in cupy_backends.cuda.api.runtime.malloc3DArray
E       check_status(status)
E     File "cupy_backends/cuda/api/runtime.pyx", line 265, in cupy_backends.cuda.api.runtime.check_status
E       raise CUDARuntimeError(status)
E   cupy_backends.cuda.api.runtime.CUDARuntimeError: hipErrorUnknown: hipErrorUnknown

cupy_backends/cuda/api/runtime.pyx:265: AssertionError
----------------------------- Captured stderr call -----------------------------
Traceback (most recent call last):
  File "cupy_backends/cuda/api/runtime.pyx", line 644, in cupy_backends.cuda.api.runtime.freeArray
    check_status(status)
  File "cupy_backends/cuda/api/runtime.pyx", line 265, in cupy_backends.cuda.api.runtime.check_status
    raise CUDARuntimeError(status)
cupy_backends.cuda.api.runtime.CUDARuntimeError: hipErrorUnknown: hipErrorUnknown
_ TestAffineTransformTextureMemory.test_affine_transform_texture_memory[_param_79_{mode='constant', order=0, output='empty', output_shape=None, shape=(10, 20, 30), theta=270}] _

self = <<cupyx_tests.scipy_tests.ndimage_tests.test_interpolation.TestAffineTransformTextureMemory object at 0x7fab38baf8e0> ...ameter: {'mode': 'constant', 'order': 0, 'output': 'empty', 'output_shape': None, 'shape': (10, 20, 30), 'theta': 270}>
xp = <module 'cupy' from '/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.hXnTrEAC7u/cupy/cupy/__init__.py'>
scp = <module 'cupyx.scipy' from '/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.hXnTrEAC7u/cupy/cupyx/scipy/__init__.py'>

    @testing.numpy_cupy_allclose(atol=0.1, scipy_name='scp')
    def test_affine_transform_texture_memory(self, xp, scp):
        a = xp.ones(self.shape, dtype=xp.float32)
        center = numpy.divide(numpy.subtract(self.shape, 1), 2)
    
        if len(self.shape) == 2:
            matrix = self._2d_rotation_matrix(self.theta, center)
        elif len(self.shape) == 3:
            matrix = self._3d_rotation_matrix(self.theta, center)
        else:
            return pytest.xfail('Unsupported shape')
    
        if self.output == 'empty':
            output = xp.empty(self.shape, dtype=xp.float32)
            if self.output_shape:
                return pytest.skip('This combination is tested in '
                                   'test_invalid_texture_arguments')
        else:
            output = self.output
    
        if self.output_shape:
            output_shape = (self.output_shape, ) * len(self.shape)
        else:
            output_shape = self.output_shape
    
        if xp == cupy:
            m = cupyx.scipy.ndimage.affine_transform
            matrix = cupy.array(matrix)
>           return m(a, matrix, output_shape=output_shape,
                     output=output, order=self.order,
                     mode=self.mode, texture_memory=True)

tests/cupyx_tests/scipy_tests/ndimage_tests/test_interpolation.py:398: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
cupyx/scipy/ndimage/interpolation.py:376: in affine_transform
    return _texture.affine_transformation(data=input,
cupyx/_texture.py:168: in affine_transformation
    texture_object = _create_texture_object(data,
cupyx/_texture.py:98: in _create_texture_object
    array = texture.CUDAarray(texture_fmt, *data.shape[::-1])
cupy/cuda/texture.pyx:296: in cupy.cuda.texture.CUDAarray.__init__
    self.ptr = runtime.malloc3DArray(desc.ptr, width, height, depth,
cupy_backends/cuda/api/runtime.pyx:593: in cupy_backends.cuda.api.runtime.malloc3DArray
    check_status(status)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

>   raise CUDARuntimeError(status)
E   AssertionError: Only cupy raises error
E   
E   Traceback (most recent call last):
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.hXnTrEAC7u/cupy/cupy/testing/_helper.py", line 47, in _call_func
E       result = impl(self, *args, **kw)
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.hXnTrEAC7u/cupy/tests/cupyx_tests/scipy_tests/ndimage_tests/test_interpolation.py", line 398, in test_affine_transform_texture_memory
E       return m(a, matrix, output_shape=output_shape,
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.hXnTrEAC7u/cupy/cupyx/scipy/ndimage/interpolation.py", line 376, in affine_transform
E       return _texture.affine_transformation(data=input,
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.hXnTrEAC7u/cupy/cupyx/_texture.py", line 168, in affine_transformation
E       texture_object = _create_texture_object(data,
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.hXnTrEAC7u/cupy/cupyx/_texture.py", line 98, in _create_texture_object
E       array = texture.CUDAarray(texture_fmt, *data.shape[::-1])
E     File "cupy/cuda/texture.pyx", line 296, in cupy.cuda.texture.CUDAarray.__init__
E       self.ptr = runtime.malloc3DArray(desc.ptr, width, height, depth,
E     File "cupy_backends/cuda/api/runtime.pyx", line 593, in cupy_backends.cuda.api.runtime.malloc3DArray
E       check_status(status)
E     File "cupy_backends/cuda/api/runtime.pyx", line 265, in cupy_backends.cuda.api.runtime.check_status
E       raise CUDARuntimeError(status)
E   cupy_backends.cuda.api.runtime.CUDARuntimeError: hipErrorUnknown: hipErrorUnknown

cupy_backends/cuda/api/runtime.pyx:265: AssertionError
----------------------------- Captured stderr call -----------------------------
Traceback (most recent call last):
  File "cupy_backends/cuda/api/runtime.pyx", line 644, in cupy_backends.cuda.api.runtime.freeArray
    check_status(status)
  File "cupy_backends/cuda/api/runtime.pyx", line 265, in cupy_backends.cuda.api.runtime.check_status
    raise CUDARuntimeError(status)
cupy_backends.cuda.api.runtime.CUDARuntimeError: hipErrorUnknown: hipErrorUnknown
_ TestAffineTransformTextureMemory.test_affine_transform_texture_memory[_param_96_{mode='constant', order=1, output=None, output_shape=None, shape=(100, 100), theta=0}] _

self = <<cupyx_tests.scipy_tests.ndimage_tests.test_interpolation.TestAffineTransformTextureMemory object at 0x7fab37084c70>  parameter: {'mode': 'constant', 'order': 1, 'output': None, 'output_shape': None, 'shape': (100, 100), 'theta': 0}>
xp = <module 'cupy' from '/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.hXnTrEAC7u/cupy/cupy/__init__.py'>
scp = <module 'cupyx.scipy' from '/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.hXnTrEAC7u/cupy/cupyx/scipy/__init__.py'>

    @testing.numpy_cupy_allclose(atol=0.1, scipy_name='scp')
    def test_affine_transform_texture_memory(self, xp, scp):
        a = xp.ones(self.shape, dtype=xp.float32)
        center = numpy.divide(numpy.subtract(self.shape, 1), 2)
    
        if len(self.shape) == 2:
            matrix = self._2d_rotation_matrix(self.theta, center)
        elif len(self.shape) == 3:
            matrix = self._3d_rotation_matrix(self.theta, center)
        else:
            return pytest.xfail('Unsupported shape')
    
        if self.output == 'empty':
            output = xp.empty(self.shape, dtype=xp.float32)
            if self.output_shape:
                return pytest.skip('This combination is tested in '
                                   'test_invalid_texture_arguments')
        else:
            output = self.output
    
        if self.output_shape:
            output_shape = (self.output_shape, ) * len(self.shape)
        else:
            output_shape = self.output_shape
    
        if xp == cupy:
            m = cupyx.scipy.ndimage.affine_transform
            matrix = cupy.array(matrix)
>           return m(a, matrix, output_shape=output_shape,
                     output=output, order=self.order,
                     mode=self.mode, texture_memory=True)

tests/cupyx_tests/scipy_tests/ndimage_tests/test_interpolation.py:398: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
cupyx/scipy/ndimage/interpolation.py:376: in affine_transform
    return _texture.affine_transformation(data=input,
cupyx/_texture.py:168: in affine_transformation
    texture_object = _create_texture_object(data,
cupyx/_texture.py:98: in _create_texture_object
    array = texture.CUDAarray(texture_fmt, *data.shape[::-1])
cupy/cuda/texture.pyx:296: in cupy.cuda.texture.CUDAarray.__init__
    self.ptr = runtime.malloc3DArray(desc.ptr, width, height, depth,
cupy_backends/cuda/api/runtime.pyx:593: in cupy_backends.cuda.api.runtime.malloc3DArray
    check_status(status)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

>   raise CUDARuntimeError(status)
E   AssertionError: Only cupy raises error
E   
E   Traceback (most recent call last):
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.hXnTrEAC7u/cupy/cupy/testing/_helper.py", line 47, in _call_func
E       result = impl(self, *args, **kw)
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.hXnTrEAC7u/cupy/tests/cupyx_tests/scipy_tests/ndimage_tests/test_interpolation.py", line 398, in test_affine_transform_texture_memory
E       return m(a, matrix, output_shape=output_shape,
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.hXnTrEAC7u/cupy/cupyx/scipy/ndimage/interpolation.py", line 376, in affine_transform
E       return _texture.affine_transformation(data=input,
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.hXnTrEAC7u/cupy/cupyx/_texture.py", line 168, in affine_transformation
E       texture_object = _create_texture_object(data,
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.hXnTrEAC7u/cupy/cupyx/_texture.py", line 98, in _create_texture_object
E       array = texture.CUDAarray(texture_fmt, *data.shape[::-1])
E     File "cupy/cuda/texture.pyx", line 296, in cupy.cuda.texture.CUDAarray.__init__
E       self.ptr = runtime.malloc3DArray(desc.ptr, width, height, depth,
E     File "cupy_backends/cuda/api/runtime.pyx", line 593, in cupy_backends.cuda.api.runtime.malloc3DArray
E       check_status(status)
E     File "cupy_backends/cuda/api/runtime.pyx", line 265, in cupy_backends.cuda.api.runtime.check_status
E       raise CUDARuntimeError(status)
E   cupy_backends.cuda.api.runtime.CUDARuntimeError: hipErrorUnknown: hipErrorUnknown

cupy_backends/cuda/api/runtime.pyx:265: AssertionError
----------------------------- Captured stderr call -----------------------------
Traceback (most recent call last):
  File "cupy_backends/cuda/api/runtime.pyx", line 644, in cupy_backends.cuda.api.runtime.freeArray
    check_status(status)
  File "cupy_backends/cuda/api/runtime.pyx", line 265, in cupy_backends.cuda.api.runtime.check_status
    raise CUDARuntimeError(status)
cupy_backends.cuda.api.runtime.CUDARuntimeError: hipErrorUnknown: hipErrorUnknown
_ TestAffineTransformTextureMemory.test_affine_transform_texture_memory[_param_97_{mode='constant', order=1, output=None, output_shape=None, shape=(100, 100), theta=90}] _

self = <<cupyx_tests.scipy_tests.ndimage_tests.test_interpolation.TestAffineTransformTextureMemory object at 0x7fac5162ab50>  parameter: {'mode': 'constant', 'order': 1, 'output': None, 'output_shape': None, 'shape': (100, 100), 'theta': 90}>
xp = <module 'cupy' from '/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.hXnTrEAC7u/cupy/cupy/__init__.py'>
scp = <module 'cupyx.scipy' from '/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.hXnTrEAC7u/cupy/cupyx/scipy/__init__.py'>

    @testing.numpy_cupy_allclose(atol=0.1, scipy_name='scp')
    def test_affine_transform_texture_memory(self, xp, scp):
        a = xp.ones(self.shape, dtype=xp.float32)
        center = numpy.divide(numpy.subtract(self.shape, 1), 2)
    
        if len(self.shape) == 2:
            matrix = self._2d_rotation_matrix(self.theta, center)
        elif len(self.shape) == 3:
            matrix = self._3d_rotation_matrix(self.theta, center)
        else:
            return pytest.xfail('Unsupported shape')
    
        if self.output == 'empty':
            output = xp.empty(self.shape, dtype=xp.float32)
            if self.output_shape:
                return pytest.skip('This combination is tested in '
                                   'test_invalid_texture_arguments')
        else:
            output = self.output
    
        if self.output_shape:
            output_shape = (self.output_shape, ) * len(self.shape)
        else:
            output_shape = self.output_shape
    
        if xp == cupy:
            m = cupyx.scipy.ndimage.affine_transform
            matrix = cupy.array(matrix)
>           return m(a, matrix, output_shape=output_shape,
                     output=output, order=self.order,
                     mode=self.mode, texture_memory=True)

tests/cupyx_tests/scipy_tests/ndimage_tests/test_interpolation.py:398: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
cupyx/scipy/ndimage/interpolation.py:376: in affine_transform
    return _texture.affine_transformation(data=input,
cupyx/_texture.py:168: in affine_transformation
    texture_object = _create_texture_object(data,
cupyx/_texture.py:98: in _create_texture_object
    array = texture.CUDAarray(texture_fmt, *data.shape[::-1])
cupy/cuda/texture.pyx:296: in cupy.cuda.texture.CUDAarray.__init__
    self.ptr = runtime.malloc3DArray(desc.ptr, width, height, depth,
cupy_backends/cuda/api/runtime.pyx:593: in cupy_backends.cuda.api.runtime.malloc3DArray
    check_status(status)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

>   raise CUDARuntimeError(status)
E   AssertionError: Only cupy raises error
E   
E   Traceback (most recent call last):
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.hXnTrEAC7u/cupy/cupy/testing/_helper.py", line 47, in _call_func
E       result = impl(self, *args, **kw)
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.hXnTrEAC7u/cupy/tests/cupyx_tests/scipy_tests/ndimage_tests/test_interpolation.py", line 398, in test_affine_transform_texture_memory
E       return m(a, matrix, output_shape=output_shape,
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.hXnTrEAC7u/cupy/cupyx/scipy/ndimage/interpolation.py", line 376, in affine_transform
E       return _texture.affine_transformation(data=input,
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.hXnTrEAC7u/cupy/cupyx/_texture.py", line 168, in affine_transformation
E       texture_object = _create_texture_object(data,
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.hXnTrEAC7u/cupy/cupyx/_texture.py", line 98, in _create_texture_object
E       array = texture.CUDAarray(texture_fmt, *data.shape[::-1])
E     File "cupy/cuda/texture.pyx", line 296, in cupy.cuda.texture.CUDAarray.__init__
E       self.ptr = runtime.malloc3DArray(desc.ptr, width, height, depth,
E     File "cupy_backends/cuda/api/runtime.pyx", line 593, in cupy_backends.cuda.api.runtime.malloc3DArray
E       check_status(status)
E     File "cupy_backends/cuda/api/runtime.pyx", line 265, in cupy_backends.cuda.api.runtime.check_status
E       raise CUDARuntimeError(status)
E   cupy_backends.cuda.api.runtime.CUDARuntimeError: hipErrorUnknown: hipErrorUnknown

cupy_backends/cuda/api/runtime.pyx:265: AssertionError
----------------------------- Captured stderr call -----------------------------
Traceback (most recent call last):
  File "cupy_backends/cuda/api/runtime.pyx", line 644, in cupy_backends.cuda.api.runtime.freeArray
    check_status(status)
  File "cupy_backends/cuda/api/runtime.pyx", line 265, in cupy_backends.cuda.api.runtime.check_status
    raise CUDARuntimeError(status)
cupy_backends.cuda.api.runtime.CUDARuntimeError: hipErrorUnknown: hipErrorUnknown
_ TestAffineTransformTextureMemory.test_affine_transform_texture_memory[_param_98_{mode='constant', order=1, output=None, output_shape=None, shape=(100, 100), theta=180}] _

self = <<cupyx_tests.scipy_tests.ndimage_tests.test_interpolation.TestAffineTransformTextureMemory object at 0x7fab39dc11f0>  parameter: {'mode': 'constant', 'order': 1, 'output': None, 'output_shape': None, 'shape': (100, 100), 'theta': 180}>
xp = <module 'cupy' from '/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.hXnTrEAC7u/cupy/cupy/__init__.py'>
scp = <module 'cupyx.scipy' from '/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.hXnTrEAC7u/cupy/cupyx/scipy/__init__.py'>

    @testing.numpy_cupy_allclose(atol=0.1, scipy_name='scp')
    def test_affine_transform_texture_memory(self, xp, scp):
        a = xp.ones(self.shape, dtype=xp.float32)
        center = numpy.divide(numpy.subtract(self.shape, 1), 2)
    
        if len(self.shape) == 2:
            matrix = self._2d_rotation_matrix(self.theta, center)
        elif len(self.shape) == 3:
            matrix = self._3d_rotation_matrix(self.theta, center)
        else:
            return pytest.xfail('Unsupported shape')
    
        if self.output == 'empty':
            output = xp.empty(self.shape, dtype=xp.float32)
            if self.output_shape:
                return pytest.skip('This combination is tested in '
                                   'test_invalid_texture_arguments')
        else:
            output = self.output
    
        if self.output_shape:
            output_shape = (self.output_shape, ) * len(self.shape)
        else:
            output_shape = self.output_shape
    
        if xp == cupy:
            m = cupyx.scipy.ndimage.affine_transform
            matrix = cupy.array(matrix)
>           return m(a, matrix, output_shape=output_shape,
                     output=output, order=self.order,
                     mode=self.mode, texture_memory=True)

tests/cupyx_tests/scipy_tests/ndimage_tests/test_interpolation.py:398: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
cupyx/scipy/ndimage/interpolation.py:376: in affine_transform
    return _texture.affine_transformation(data=input,
cupyx/_texture.py:168: in affine_transformation
    texture_object = _create_texture_object(data,
cupyx/_texture.py:98: in _create_texture_object
    array = texture.CUDAarray(texture_fmt, *data.shape[::-1])
cupy/cuda/texture.pyx:296: in cupy.cuda.texture.CUDAarray.__init__
    self.ptr = runtime.malloc3DArray(desc.ptr, width, height, depth,
cupy_backends/cuda/api/runtime.pyx:593: in cupy_backends.cuda.api.runtime.malloc3DArray
    check_status(status)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

>   raise CUDARuntimeError(status)
E   AssertionError: Only cupy raises error
E   
E   Traceback (most recent call last):
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.hXnTrEAC7u/cupy/cupy/testing/_helper.py", line 47, in _call_func
E       result = impl(self, *args, **kw)
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.hXnTrEAC7u/cupy/tests/cupyx_tests/scipy_tests/ndimage_tests/test_interpolation.py", line 398, in test_affine_transform_texture_memory
E       return m(a, matrix, output_shape=output_shape,
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.hXnTrEAC7u/cupy/cupyx/scipy/ndimage/interpolation.py", line 376, in affine_transform
E       return _texture.affine_transformation(data=input,
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.hXnTrEAC7u/cupy/cupyx/_texture.py", line 168, in affine_transformation
E       texture_object = _create_texture_object(data,
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.hXnTrEAC7u/cupy/cupyx/_texture.py", line 98, in _create_texture_object
E       array = texture.CUDAarray(texture_fmt, *data.shape[::-1])
E     File "cupy/cuda/texture.pyx", line 296, in cupy.cuda.texture.CUDAarray.__init__
E       self.ptr = runtime.malloc3DArray(desc.ptr, width, height, depth,
E     File "cupy_backends/cuda/api/runtime.pyx", line 593, in cupy_backends.cuda.api.runtime.malloc3DArray
E       check_status(status)
E     File "cupy_backends/cuda/api/runtime.pyx", line 265, in cupy_backends.cuda.api.runtime.check_status
E       raise CUDARuntimeError(status)
E   cupy_backends.cuda.api.runtime.CUDARuntimeError: hipErrorUnknown: hipErrorUnknown

cupy_backends/cuda/api/runtime.pyx:265: AssertionError
----------------------------- Captured stderr call -----------------------------
Traceback (most recent call last):
  File "cupy_backends/cuda/api/runtime.pyx", line 644, in cupy_backends.cuda.api.runtime.freeArray
    check_status(status)
  File "cupy_backends/cuda/api/runtime.pyx", line 265, in cupy_backends.cuda.api.runtime.check_status
    raise CUDARuntimeError(status)
cupy_backends.cuda.api.runtime.CUDARuntimeError: hipErrorUnknown: hipErrorUnknown
_ TestAffineTransformTextureMemory.test_affine_transform_texture_memory[_param_99_{mode='constant', order=1, output=None, output_shape=None, shape=(100, 100), theta=270}] _

self = <<cupyx_tests.scipy_tests.ndimage_tests.test_interpolation.TestAffineTransformTextureMemory object at 0x7fac511a0760>  parameter: {'mode': 'constant', 'order': 1, 'output': None, 'output_shape': None, 'shape': (100, 100), 'theta': 270}>
xp = <module 'cupy' from '/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.hXnTrEAC7u/cupy/cupy/__init__.py'>
scp = <module 'cupyx.scipy' from '/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.hXnTrEAC7u/cupy/cupyx/scipy/__init__.py'>

    @testing.numpy_cupy_allclose(atol=0.1, scipy_name='scp')
    def test_affine_transform_texture_memory(self, xp, scp):
        a = xp.ones(self.shape, dtype=xp.float32)
        center = numpy.divide(numpy.subtract(self.shape, 1), 2)
    
        if len(self.shape) == 2:
            matrix = self._2d_rotation_matrix(self.theta, center)
        elif len(self.shape) == 3:
            matrix = self._3d_rotation_matrix(self.theta, center)
        else:
            return pytest.xfail('Unsupported shape')
    
        if self.output == 'empty':
            output = xp.empty(self.shape, dtype=xp.float32)
            if self.output_shape:
                return pytest.skip('This combination is tested in '
                                   'test_invalid_texture_arguments')
        else:
            output = self.output
    
        if self.output_shape:
            output_shape = (self.output_shape, ) * len(self.shape)
        else:
            output_shape = self.output_shape
    
        if xp == cupy:
            m = cupyx.scipy.ndimage.affine_transform
            matrix = cupy.array(matrix)
>           return m(a, matrix, output_shape=output_shape,
                     output=output, order=self.order,
                     mode=self.mode, texture_memory=True)

tests/cupyx_tests/scipy_tests/ndimage_tests/test_interpolation.py:398: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
cupyx/scipy/ndimage/interpolation.py:376: in affine_transform
    return _texture.affine_transformation(data=input,
cupyx/_texture.py:168: in affine_transformation
    texture_object = _create_texture_object(data,
cupyx/_texture.py:98: in _create_texture_object
    array = texture.CUDAarray(texture_fmt, *data.shape[::-1])
cupy/cuda/texture.pyx:296: in cupy.cuda.texture.CUDAarray.__init__
    self.ptr = runtime.malloc3DArray(desc.ptr, width, height, depth,
cupy_backends/cuda/api/runtime.pyx:593: in cupy_backends.cuda.api.runtime.malloc3DArray
    check_status(status)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

>   raise CUDARuntimeError(status)
E   AssertionError: Only cupy raises error
E   
E   Traceback (most recent call last):
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.hXnTrEAC7u/cupy/cupy/testing/_helper.py", line 47, in _call_func
E       result = impl(self, *args, **kw)
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.hXnTrEAC7u/cupy/tests/cupyx_tests/scipy_tests/ndimage_tests/test_interpolation.py", line 398, in test_affine_transform_texture_memory
E       return m(a, matrix, output_shape=output_shape,
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.hXnTrEAC7u/cupy/cupyx/scipy/ndimage/interpolation.py", line 376, in affine_transform
E       return _texture.affine_transformation(data=input,
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.hXnTrEAC7u/cupy/cupyx/_texture.py", line 168, in affine_transformation
E       texture_object = _create_texture_object(data,
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.hXnTrEAC7u/cupy/cupyx/_texture.py", line 98, in _create_texture_object
E       array = texture.CUDAarray(texture_fmt, *data.shape[::-1])
E     File "cupy/cuda/texture.pyx", line 296, in cupy.cuda.texture.CUDAarray.__init__
E       self.ptr = runtime.malloc3DArray(desc.ptr, width, height, depth,
E     File "cupy_backends/cuda/api/runtime.pyx", line 593, in cupy_backends.cuda.api.runtime.malloc3DArray
E       check_status(status)
E     File "cupy_backends/cuda/api/runtime.pyx", line 265, in cupy_backends.cuda.api.runtime.check_status
E       raise CUDARuntimeError(status)
E   cupy_backends.cuda.api.runtime.CUDARuntimeError: hipErrorUnknown: hipErrorUnknown

cupy_backends/cuda/api/runtime.pyx:265: AssertionError
----------------------------- Captured stderr call -----------------------------
Traceback (most recent call last):
  File "cupy_backends/cuda/api/runtime.pyx", line 644, in cupy_backends.cuda.api.runtime.freeArray
    check_status(status)
  File "cupy_backends/cuda/api/runtime.pyx", line 265, in cupy_backends.cuda.api.runtime.check_status
    raise CUDARuntimeError(status)
cupy_backends.cuda.api.runtime.CUDARuntimeError: hipErrorUnknown: hipErrorUnknown
_ TestAffineTransformTextureMemory.test_affine_transform_texture_memory[_param_100_{mode='constant', order=1, output=None, output_shape=None, shape=(10, 20), theta=0}] _

self = <<cupyx_tests.scipy_tests.ndimage_tests.test_interpolation.TestAffineTransformTextureMemory object at 0x7fab37216940>  parameter: {'mode': 'constant', 'order': 1, 'output': None, 'output_shape': None, 'shape': (10, 20), 'theta': 0}>
xp = <module 'cupy' from '/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.hXnTrEAC7u/cupy/cupy/__init__.py'>
scp = <module 'cupyx.scipy' from '/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.hXnTrEAC7u/cupy/cupyx/scipy/__init__.py'>

    @testing.numpy_cupy_allclose(atol=0.1, scipy_name='scp')
    def test_affine_transform_texture_memory(self, xp, scp):
        a = xp.ones(self.shape, dtype=xp.float32)
        center = numpy.divide(numpy.subtract(self.shape, 1), 2)
    
        if len(self.shape) == 2:
            matrix = self._2d_rotation_matrix(self.theta, center)
        elif len(self.shape) == 3:
            matrix = self._3d_rotation_matrix(self.theta, center)
        else:
            return pytest.xfail('Unsupported shape')
    
        if self.output == 'empty':
            output = xp.empty(self.shape, dtype=xp.float32)
            if self.output_shape:
                return pytest.skip('This combination is tested in '
                                   'test_invalid_texture_arguments')
        else:
            output = self.output
    
        if self.output_shape:
            output_shape = (self.output_shape, ) * len(self.shape)
        else:
            output_shape = self.output_shape
    
        if xp == cupy:
            m = cupyx.scipy.ndimage.affine_transform
            matrix = cupy.array(matrix)
>           return m(a, matrix, output_shape=output_shape,
                     output=output, order=self.order,
                     mode=self.mode, texture_memory=True)

tests/cupyx_tests/scipy_tests/ndimage_tests/test_interpolation.py:398: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
cupyx/scipy/ndimage/interpolation.py:376: in affine_transform
    return _texture.affine_transformation(data=input,
cupyx/_texture.py:168: in affine_transformation
    texture_object = _create_texture_object(data,
cupyx/_texture.py:98: in _create_texture_object
    array = texture.CUDAarray(texture_fmt, *data.shape[::-1])
cupy/cuda/texture.pyx:296: in cupy.cuda.texture.CUDAarray.__init__
    self.ptr = runtime.malloc3DArray(desc.ptr, width, height, depth,
cupy_backends/cuda/api/runtime.pyx:593: in cupy_backends.cuda.api.runtime.malloc3DArray
    check_status(status)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

>   raise CUDARuntimeError(status)
E   AssertionError: Only cupy raises error
E   
E   Traceback (most recent call last):
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.hXnTrEAC7u/cupy/cupy/testing/_helper.py", line 47, in _call_func
E       result = impl(self, *args, **kw)
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.hXnTrEAC7u/cupy/tests/cupyx_tests/scipy_tests/ndimage_tests/test_interpolation.py", line 398, in test_affine_transform_texture_memory
E       return m(a, matrix, output_shape=output_shape,
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.hXnTrEAC7u/cupy/cupyx/scipy/ndimage/interpolation.py", line 376, in affine_transform
E       return _texture.affine_transformation(data=input,
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.hXnTrEAC7u/cupy/cupyx/_texture.py", line 168, in affine_transformation
E       texture_object = _create_texture_object(data,
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.hXnTrEAC7u/cupy/cupyx/_texture.py", line 98, in _create_texture_object
E       array = texture.CUDAarray(texture_fmt, *data.shape[::-1])
E     File "cupy/cuda/texture.pyx", line 296, in cupy.cuda.texture.CUDAarray.__init__
E       self.ptr = runtime.malloc3DArray(desc.ptr, width, height, depth,
E     File "cupy_backends/cuda/api/runtime.pyx", line 593, in cupy_backends.cuda.api.runtime.malloc3DArray
E       check_status(status)
E     File "cupy_backends/cuda/api/runtime.pyx", line 265, in cupy_backends.cuda.api.runtime.check_status
E       raise CUDARuntimeError(status)
E   cupy_backends.cuda.api.runtime.CUDARuntimeError: hipErrorUnknown: hipErrorUnknown

cupy_backends/cuda/api/runtime.pyx:265: AssertionError
----------------------------- Captured stderr call -----------------------------
Traceback (most recent call last):
  File "cupy_backends/cuda/api/runtime.pyx", line 644, in cupy_backends.cuda.api.runtime.freeArray
    check_status(status)
  File "cupy_backends/cuda/api/runtime.pyx", line 265, in cupy_backends.cuda.api.runtime.check_status
    raise CUDARuntimeError(status)
cupy_backends.cuda.api.runtime.CUDARuntimeError: hipErrorUnknown: hipErrorUnknown
_ TestAffineTransformTextureMemory.test_affine_transform_texture_memory[_param_101_{mode='constant', order=1, output=None, output_shape=None, shape=(10, 20), theta=90}] _

self = <<cupyx_tests.scipy_tests.ndimage_tests.test_interpolation.TestAffineTransformTextureMemory object at 0x7fab38f767f0>  parameter: {'mode': 'constant', 'order': 1, 'output': None, 'output_shape': None, 'shape': (10, 20), 'theta': 90}>
xp = <module 'cupy' from '/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.hXnTrEAC7u/cupy/cupy/__init__.py'>
scp = <module 'cupyx.scipy' from '/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.hXnTrEAC7u/cupy/cupyx/scipy/__init__.py'>

    @testing.numpy_cupy_allclose(atol=0.1, scipy_name='scp')
    def test_affine_transform_texture_memory(self, xp, scp):
        a = xp.ones(self.shape, dtype=xp.float32)
        center = numpy.divide(numpy.subtract(self.shape, 1), 2)
    
        if len(self.shape) == 2:
            matrix = self._2d_rotation_matrix(self.theta, center)
        elif len(self.shape) == 3:
            matrix = self._3d_rotation_matrix(self.theta, center)
        else:
            return pytest.xfail('Unsupported shape')
    
        if self.output == 'empty':
            output = xp.empty(self.shape, dtype=xp.float32)
            if self.output_shape:
                return pytest.skip('This combination is tested in '
                                   'test_invalid_texture_arguments')
        else:
            output = self.output
    
        if self.output_shape:
            output_shape = (self.output_shape, ) * len(self.shape)
        else:
            output_shape = self.output_shape
    
        if xp == cupy:
            m = cupyx.scipy.ndimage.affine_transform
            matrix = cupy.array(matrix)
>           return m(a, matrix, output_shape=output_shape,
                     output=output, order=self.order,
                     mode=self.mode, texture_memory=True)

tests/cupyx_tests/scipy_tests/ndimage_tests/test_interpolation.py:398: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
cupyx/scipy/ndimage/interpolation.py:376: in affine_transform
    return _texture.affine_transformation(data=input,
cupyx/_texture.py:168: in affine_transformation
    texture_object = _create_texture_object(data,
cupyx/_texture.py:98: in _create_texture_object
    array = texture.CUDAarray(texture_fmt, *data.shape[::-1])
cupy/cuda/texture.pyx:296: in cupy.cuda.texture.CUDAarray.__init__
    self.ptr = runtime.malloc3DArray(desc.ptr, width, height, depth,
cupy_backends/cuda/api/runtime.pyx:593: in cupy_backends.cuda.api.runtime.malloc3DArray
    check_status(status)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

>   raise CUDARuntimeError(status)
E   AssertionError: Only cupy raises error
E   
E   Traceback (most recent call last):
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.hXnTrEAC7u/cupy/cupy/testing/_helper.py", line 47, in _call_func
E       result = impl(self, *args, **kw)
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.hXnTrEAC7u/cupy/tests/cupyx_tests/scipy_tests/ndimage_tests/test_interpolation.py", line 398, in test_affine_transform_texture_memory
E       return m(a, matrix, output_shape=output_shape,
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.hXnTrEAC7u/cupy/cupyx/scipy/ndimage/interpolation.py", line 376, in affine_transform
E       return _texture.affine_transformation(data=input,
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.hXnTrEAC7u/cupy/cupyx/_texture.py", line 168, in affine_transformation
E       texture_object = _create_texture_object(data,
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.hXnTrEAC7u/cupy/cupyx/_texture.py", line 98, in _create_texture_object
E       array = texture.CUDAarray(texture_fmt, *data.shape[::-1])
E     File "cupy/cuda/texture.pyx", line 296, in cupy.cuda.texture.CUDAarray.__init__
E       self.ptr = runtime.malloc3DArray(desc.ptr, width, height, depth,
E     File "cupy_backends/cuda/api/runtime.pyx", line 593, in cupy_backends.cuda.api.runtime.malloc3DArray
E       check_status(status)
E     File "cupy_backends/cuda/api/runtime.pyx", line 265, in cupy_backends.cuda.api.runtime.check_status
E       raise CUDARuntimeError(status)
E   cupy_backends.cuda.api.runtime.CUDARuntimeError: hipErrorUnknown: hipErrorUnknown

cupy_backends/cuda/api/runtime.pyx:265: AssertionError
----------------------------- Captured stderr call -----------------------------
Traceback (most recent call last):
  File "cupy_backends/cuda/api/runtime.pyx", line 644, in cupy_backends.cuda.api.runtime.freeArray
    check_status(status)
  File "cupy_backends/cuda/api/runtime.pyx", line 265, in cupy_backends.cuda.api.runtime.check_status
    raise CUDARuntimeError(status)
cupy_backends.cuda.api.runtime.CUDARuntimeError: hipErrorUnknown: hipErrorUnknown
_ TestAffineTransformTextureMemory.test_affine_transform_texture_memory[_param_102_{mode='constant', order=1, output=None, output_shape=None, shape=(10, 20), theta=180}] _

self = <<cupyx_tests.scipy_tests.ndimage_tests.test_interpolation.TestAffineTransformTextureMemory object at 0x7fac514acc10>  parameter: {'mode': 'constant', 'order': 1, 'output': None, 'output_shape': None, 'shape': (10, 20), 'theta': 180}>
xp = <module 'cupy' from '/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.hXnTrEAC7u/cupy/cupy/__init__.py'>
scp = <module 'cupyx.scipy' from '/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.hXnTrEAC7u/cupy/cupyx/scipy/__init__.py'>

    @testing.numpy_cupy_allclose(atol=0.1, scipy_name='scp')
    def test_affine_transform_texture_memory(self, xp, scp):
        a = xp.ones(self.shape, dtype=xp.float32)
        center = numpy.divide(numpy.subtract(self.shape, 1), 2)
    
        if len(self.shape) == 2:
            matrix = self._2d_rotation_matrix(self.theta, center)
        elif len(self.shape) == 3:
            matrix = self._3d_rotation_matrix(self.theta, center)
        else:
            return pytest.xfail('Unsupported shape')
    
        if self.output == 'empty':
            output = xp.empty(self.shape, dtype=xp.float32)
            if self.output_shape:
                return pytest.skip('This combination is tested in '
                                   'test_invalid_texture_arguments')
        else:
            output = self.output
    
        if self.output_shape:
            output_shape = (self.output_shape, ) * len(self.shape)
        else:
            output_shape = self.output_shape
    
        if xp == cupy:
            m = cupyx.scipy.ndimage.affine_transform
            matrix = cupy.array(matrix)
>           return m(a, matrix, output_shape=output_shape,
                     output=output, order=self.order,
                     mode=self.mode, texture_memory=True)

tests/cupyx_tests/scipy_tests/ndimage_tests/test_interpolation.py:398: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
cupyx/scipy/ndimage/interpolation.py:376: in affine_transform
    return _texture.affine_transformation(data=input,
cupyx/_texture.py:168: in affine_transformation
    texture_object = _create_texture_object(data,
cupyx/_texture.py:98: in _create_texture_object
    array = texture.CUDAarray(texture_fmt, *data.shape[::-1])
cupy/cuda/texture.pyx:296: in cupy.cuda.texture.CUDAarray.__init__
    self.ptr = runtime.malloc3DArray(desc.ptr, width, height, depth,
cupy_backends/cuda/api/runtime.pyx:593: in cupy_backends.cuda.api.runtime.malloc3DArray
    check_status(status)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

>   raise CUDARuntimeError(status)
E   AssertionError: Only cupy raises error
E   
E   Traceback (most recent call last):
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.hXnTrEAC7u/cupy/cupy/testing/_helper.py", line 47, in _call_func
E       result = impl(self, *args, **kw)
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.hXnTrEAC7u/cupy/tests/cupyx_tests/scipy_tests/ndimage_tests/test_interpolation.py", line 398, in test_affine_transform_texture_memory
E       return m(a, matrix, output_shape=output_shape,
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.hXnTrEAC7u/cupy/cupyx/scipy/ndimage/interpolation.py", line 376, in affine_transform
E       return _texture.affine_transformation(data=input,
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.hXnTrEAC7u/cupy/cupyx/_texture.py", line 168, in affine_transformation
E       texture_object = _create_texture_object(data,
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.hXnTrEAC7u/cupy/cupyx/_texture.py", line 98, in _create_texture_object
E       array = texture.CUDAarray(texture_fmt, *data.shape[::-1])
E     File "cupy/cuda/texture.pyx", line 296, in cupy.cuda.texture.CUDAarray.__init__
E       self.ptr = runtime.malloc3DArray(desc.ptr, width, height, depth,
E     File "cupy_backends/cuda/api/runtime.pyx", line 593, in cupy_backends.cuda.api.runtime.malloc3DArray
E       check_status(status)
E     File "cupy_backends/cuda/api/runtime.pyx", line 265, in cupy_backends.cuda.api.runtime.check_status
E       raise CUDARuntimeError(status)
E   cupy_backends.cuda.api.runtime.CUDARuntimeError: hipErrorUnknown: hipErrorUnknown

cupy_backends/cuda/api/runtime.pyx:265: AssertionError
----------------------------- Captured stderr call -----------------------------
Traceback (most recent call last):
  File "cupy_backends/cuda/api/runtime.pyx", line 644, in cupy_backends.cuda.api.runtime.freeArray
    check_status(status)
  File "cupy_backends/cuda/api/runtime.pyx", line 265, in cupy_backends.cuda.api.runtime.check_status
    raise CUDARuntimeError(status)
cupy_backends.cuda.api.runtime.CUDARuntimeError: hipErrorUnknown: hipErrorUnknown
_ TestAffineTransformTextureMemory.test_affine_transform_texture_memory[_param_103_{mode='constant', order=1, output=None, output_shape=None, shape=(10, 20), theta=270}] _

self = <<cupyx_tests.scipy_tests.ndimage_tests.test_interpolation.TestAffineTransformTextureMemory object at 0x7fab395c4250>  parameter: {'mode': 'constant', 'order': 1, 'output': None, 'output_shape': None, 'shape': (10, 20), 'theta': 270}>
xp = <module 'cupy' from '/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.hXnTrEAC7u/cupy/cupy/__init__.py'>
scp = <module 'cupyx.scipy' from '/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.hXnTrEAC7u/cupy/cupyx/scipy/__init__.py'>

    @testing.numpy_cupy_allclose(atol=0.1, scipy_name='scp')
    def test_affine_transform_texture_memory(self, xp, scp):
        a = xp.ones(self.shape, dtype=xp.float32)
        center = numpy.divide(numpy.subtract(self.shape, 1), 2)
    
        if len(self.shape) == 2:
            matrix = self._2d_rotation_matrix(self.theta, center)
        elif len(self.shape) == 3:
            matrix = self._3d_rotation_matrix(self.theta, center)
        else:
            return pytest.xfail('Unsupported shape')
    
        if self.output == 'empty':
            output = xp.empty(self.shape, dtype=xp.float32)
            if self.output_shape:
                return pytest.skip('This combination is tested in '
                                   'test_invalid_texture_arguments')
        else:
            output = self.output
    
        if self.output_shape:
            output_shape = (self.output_shape, ) * len(self.shape)
        else:
            output_shape = self.output_shape
    
        if xp == cupy:
            m = cupyx.scipy.ndimage.affine_transform
            matrix = cupy.array(matrix)
>           return m(a, matrix, output_shape=output_shape,
                     output=output, order=self.order,
                     mode=self.mode, texture_memory=True)

tests/cupyx_tests/scipy_tests/ndimage_tests/test_interpolation.py:398: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
cupyx/scipy/ndimage/interpolation.py:376: in affine_transform
    return _texture.affine_transformation(data=input,
cupyx/_texture.py:168: in affine_transformation
    texture_object = _create_texture_object(data,
cupyx/_texture.py:98: in _create_texture_object
    array = texture.CUDAarray(texture_fmt, *data.shape[::-1])
cupy/cuda/texture.pyx:296: in cupy.cuda.texture.CUDAarray.__init__
    self.ptr = runtime.malloc3DArray(desc.ptr, width, height, depth,
cupy_backends/cuda/api/runtime.pyx:593: in cupy_backends.cuda.api.runtime.malloc3DArray
    check_status(status)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

>   raise CUDARuntimeError(status)
E   AssertionError: Only cupy raises error
E   
E   Traceback (most recent call last):
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.hXnTrEAC7u/cupy/cupy/testing/_helper.py", line 47, in _call_func
E       result = impl(self, *args, **kw)
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.hXnTrEAC7u/cupy/tests/cupyx_tests/scipy_tests/ndimage_tests/test_interpolation.py", line 398, in test_affine_transform_texture_memory
E       return m(a, matrix, output_shape=output_shape,
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.hXnTrEAC7u/cupy/cupyx/scipy/ndimage/interpolation.py", line 376, in affine_transform
E       return _texture.affine_transformation(data=input,
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.hXnTrEAC7u/cupy/cupyx/_texture.py", line 168, in affine_transformation
E       texture_object = _create_texture_object(data,
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.hXnTrEAC7u/cupy/cupyx/_texture.py", line 98, in _create_texture_object
E       array = texture.CUDAarray(texture_fmt, *data.shape[::-1])
E     File "cupy/cuda/texture.pyx", line 296, in cupy.cuda.texture.CUDAarray.__init__
E       self.ptr = runtime.malloc3DArray(desc.ptr, width, height, depth,
E     File "cupy_backends/cuda/api/runtime.pyx", line 593, in cupy_backends.cuda.api.runtime.malloc3DArray
E       check_status(status)
E     File "cupy_backends/cuda/api/runtime.pyx", line 265, in cupy_backends.cuda.api.runtime.check_status
E       raise CUDARuntimeError(status)
E   cupy_backends.cuda.api.runtime.CUDARuntimeError: hipErrorUnknown: hipErrorUnknown

cupy_backends/cuda/api/runtime.pyx:265: AssertionError
----------------------------- Captured stderr call -----------------------------
Traceback (most recent call last):
  File "cupy_backends/cuda/api/runtime.pyx", line 644, in cupy_backends.cuda.api.runtime.freeArray
    check_status(status)
  File "cupy_backends/cuda/api/runtime.pyx", line 265, in cupy_backends.cuda.api.runtime.check_status
    raise CUDARuntimeError(status)
cupy_backends.cuda.api.runtime.CUDARuntimeError: hipErrorUnknown: hipErrorUnknown
_ TestAffineTransformTextureMemory.test_affine_transform_texture_memory[_param_104_{mode='constant', order=1, output=None, output_shape=None, shape=(10, 10, 10), theta=0}] _

self = <<cupyx_tests.scipy_tests.ndimage_tests.test_interpolation.TestAffineTransformTextureMemory object at 0x7fab371cdeb0>  parameter: {'mode': 'constant', 'order': 1, 'output': None, 'output_shape': None, 'shape': (10, 10, 10), 'theta': 0}>
xp = <module 'cupy' from '/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.hXnTrEAC7u/cupy/cupy/__init__.py'>
scp = <module 'cupyx.scipy' from '/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.hXnTrEAC7u/cupy/cupyx/scipy/__init__.py'>

    @testing.numpy_cupy_allclose(atol=0.1, scipy_name='scp')
    def test_affine_transform_texture_memory(self, xp, scp):
        a = xp.ones(self.shape, dtype=xp.float32)
        center = numpy.divide(numpy.subtract(self.shape, 1), 2)
    
        if len(self.shape) == 2:
            matrix = self._2d_rotation_matrix(self.theta, center)
        elif len(self.shape) == 3:
            matrix = self._3d_rotation_matrix(self.theta, center)
        else:
            return pytest.xfail('Unsupported shape')
    
        if self.output == 'empty':
            output = xp.empty(self.shape, dtype=xp.float32)
            if self.output_shape:
                return pytest.skip('This combination is tested in '
                                   'test_invalid_texture_arguments')
        else:
            output = self.output
    
        if self.output_shape:
            output_shape = (self.output_shape, ) * len(self.shape)
        else:
            output_shape = self.output_shape
    
        if xp == cupy:
            m = cupyx.scipy.ndimage.affine_transform
            matrix = cupy.array(matrix)
>           return m(a, matrix, output_shape=output_shape,
                     output=output, order=self.order,
                     mode=self.mode, texture_memory=True)

tests/cupyx_tests/scipy_tests/ndimage_tests/test_interpolation.py:398: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
cupyx/scipy/ndimage/interpolation.py:376: in affine_transform
    return _texture.affine_transformation(data=input,
cupyx/_texture.py:168: in affine_transformation
    texture_object = _create_texture_object(data,
cupyx/_texture.py:98: in _create_texture_object
    array = texture.CUDAarray(texture_fmt, *data.shape[::-1])
cupy/cuda/texture.pyx:296: in cupy.cuda.texture.CUDAarray.__init__
    self.ptr = runtime.malloc3DArray(desc.ptr, width, height, depth,
cupy_backends/cuda/api/runtime.pyx:593: in cupy_backends.cuda.api.runtime.malloc3DArray
    check_status(status)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

>   raise CUDARuntimeError(status)
E   AssertionError: Only cupy raises error
E   
E   Traceback (most recent call last):
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.hXnTrEAC7u/cupy/cupy/testing/_helper.py", line 47, in _call_func
E       result = impl(self, *args, **kw)
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.hXnTrEAC7u/cupy/tests/cupyx_tests/scipy_tests/ndimage_tests/test_interpolation.py", line 398, in test_affine_transform_texture_memory
E       return m(a, matrix, output_shape=output_shape,
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.hXnTrEAC7u/cupy/cupyx/scipy/ndimage/interpolation.py", line 376, in affine_transform
E       return _texture.affine_transformation(data=input,
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.hXnTrEAC7u/cupy/cupyx/_texture.py", line 168, in affine_transformation
E       texture_object = _create_texture_object(data,
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.hXnTrEAC7u/cupy/cupyx/_texture.py", line 98, in _create_texture_object
E       array = texture.CUDAarray(texture_fmt, *data.shape[::-1])
E     File "cupy/cuda/texture.pyx", line 296, in cupy.cuda.texture.CUDAarray.__init__
E       self.ptr = runtime.malloc3DArray(desc.ptr, width, height, depth,
E     File "cupy_backends/cuda/api/runtime.pyx", line 593, in cupy_backends.cuda.api.runtime.malloc3DArray
E       check_status(status)
E     File "cupy_backends/cuda/api/runtime.pyx", line 265, in cupy_backends.cuda.api.runtime.check_status
E       raise CUDARuntimeError(status)
E   cupy_backends.cuda.api.runtime.CUDARuntimeError: hipErrorUnknown: hipErrorUnknown

cupy_backends/cuda/api/runtime.pyx:265: AssertionError
----------------------------- Captured stderr call -----------------------------
Traceback (most recent call last):
  File "cupy_backends/cuda/api/runtime.pyx", line 644, in cupy_backends.cuda.api.runtime.freeArray
    check_status(status)
  File "cupy_backends/cuda/api/runtime.pyx", line 265, in cupy_backends.cuda.api.runtime.check_status
    raise CUDARuntimeError(status)
cupy_backends.cuda.api.runtime.CUDARuntimeError: hipErrorUnknown: hipErrorUnknown
_ TestAffineTransformTextureMemory.test_affine_transform_texture_memory[_param_105_{mode='constant', order=1, output=None, output_shape=None, shape=(10, 10, 10), theta=90}] _

self = <<cupyx_tests.scipy_tests.ndimage_tests.test_interpolation.TestAffineTransformTextureMemory object at 0x7fab38eb5670>  parameter: {'mode': 'constant', 'order': 1, 'output': None, 'output_shape': None, 'shape': (10, 10, 10), 'theta': 90}>
xp = <module 'cupy' from '/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.hXnTrEAC7u/cupy/cupy/__init__.py'>
scp = <module 'cupyx.scipy' from '/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.hXnTrEAC7u/cupy/cupyx/scipy/__init__.py'>

    @testing.numpy_cupy_allclose(atol=0.1, scipy_name='scp')
    def test_affine_transform_texture_memory(self, xp, scp):
        a = xp.ones(self.shape, dtype=xp.float32)
        center = numpy.divide(numpy.subtract(self.shape, 1), 2)
    
        if len(self.shape) == 2:
            matrix = self._2d_rotation_matrix(self.theta, center)
        elif len(self.shape) == 3:
            matrix = self._3d_rotation_matrix(self.theta, center)
        else:
            return pytest.xfail('Unsupported shape')
    
        if self.output == 'empty':
            output = xp.empty(self.shape, dtype=xp.float32)
            if self.output_shape:
                return pytest.skip('This combination is tested in '
                                   'test_invalid_texture_arguments')
        else:
            output = self.output
    
        if self.output_shape:
            output_shape = (self.output_shape, ) * len(self.shape)
        else:
            output_shape = self.output_shape
    
        if xp == cupy:
            m = cupyx.scipy.ndimage.affine_transform
            matrix = cupy.array(matrix)
>           return m(a, matrix, output_shape=output_shape,
                     output=output, order=self.order,
                     mode=self.mode, texture_memory=True)

tests/cupyx_tests/scipy_tests/ndimage_tests/test_interpolation.py:398: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
cupyx/scipy/ndimage/interpolation.py:376: in affine_transform
    return _texture.affine_transformation(data=input,
cupyx/_texture.py:168: in affine_transformation
    texture_object = _create_texture_object(data,
cupyx/_texture.py:98: in _create_texture_object
    array = texture.CUDAarray(texture_fmt, *data.shape[::-1])
cupy/cuda/texture.pyx:296: in cupy.cuda.texture.CUDAarray.__init__
    self.ptr = runtime.malloc3DArray(desc.ptr, width, height, depth,
cupy_backends/cuda/api/runtime.pyx:593: in cupy_backends.cuda.api.runtime.malloc3DArray
    check_status(status)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

>   raise CUDARuntimeError(status)
E   AssertionError: Only cupy raises error
E   
E   Traceback (most recent call last):
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.hXnTrEAC7u/cupy/cupy/testing/_helper.py", line 47, in _call_func
E       result = impl(self, *args, **kw)
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.hXnTrEAC7u/cupy/tests/cupyx_tests/scipy_tests/ndimage_tests/test_interpolation.py", line 398, in test_affine_transform_texture_memory
E       return m(a, matrix, output_shape=output_shape,
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.hXnTrEAC7u/cupy/cupyx/scipy/ndimage/interpolation.py", line 376, in affine_transform
E       return _texture.affine_transformation(data=input,
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.hXnTrEAC7u/cupy/cupyx/_texture.py", line 168, in affine_transformation
E       texture_object = _create_texture_object(data,
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.hXnTrEAC7u/cupy/cupyx/_texture.py", line 98, in _create_texture_object
E       array = texture.CUDAarray(texture_fmt, *data.shape[::-1])
E     File "cupy/cuda/texture.pyx", line 296, in cupy.cuda.texture.CUDAarray.__init__
E       self.ptr = runtime.malloc3DArray(desc.ptr, width, height, depth,
E     File "cupy_backends/cuda/api/runtime.pyx", line 593, in cupy_backends.cuda.api.runtime.malloc3DArray
E       check_status(status)
E     File "cupy_backends/cuda/api/runtime.pyx", line 265, in cupy_backends.cuda.api.runtime.check_status
E       raise CUDARuntimeError(status)
E   cupy_backends.cuda.api.runtime.CUDARuntimeError: hipErrorUnknown: hipErrorUnknown

cupy_backends/cuda/api/runtime.pyx:265: AssertionError
----------------------------- Captured stderr call -----------------------------
Traceback (most recent call last):
  File "cupy_backends/cuda/api/runtime.pyx", line 644, in cupy_backends.cuda.api.runtime.freeArray
    check_status(status)
  File "cupy_backends/cuda/api/runtime.pyx", line 265, in cupy_backends.cuda.api.runtime.check_status
    raise CUDARuntimeError(status)
cupy_backends.cuda.api.runtime.CUDARuntimeError: hipErrorUnknown: hipErrorUnknown
_ TestAffineTransformTextureMemory.test_affine_transform_texture_memory[_param_106_{mode='constant', order=1, output=None, output_shape=None, shape=(10, 10, 10), theta=180}] _

self = <<cupyx_tests.scipy_tests.ndimage_tests.test_interpolation.TestAffineTransformTextureMemory object at 0x7fab370402b0>  parameter: {'mode': 'constant', 'order': 1, 'output': None, 'output_shape': None, 'shape': (10, 10, 10), 'theta': 180}>
xp = <module 'cupy' from '/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.hXnTrEAC7u/cupy/cupy/__init__.py'>
scp = <module 'cupyx.scipy' from '/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.hXnTrEAC7u/cupy/cupyx/scipy/__init__.py'>

    @testing.numpy_cupy_allclose(atol=0.1, scipy_name='scp')
    def test_affine_transform_texture_memory(self, xp, scp):
        a = xp.ones(self.shape, dtype=xp.float32)
        center = numpy.divide(numpy.subtract(self.shape, 1), 2)
    
        if len(self.shape) == 2:
            matrix = self._2d_rotation_matrix(self.theta, center)
        elif len(self.shape) == 3:
            matrix = self._3d_rotation_matrix(self.theta, center)
        else:
            return pytest.xfail('Unsupported shape')
    
        if self.output == 'empty':
            output = xp.empty(self.shape, dtype=xp.float32)
            if self.output_shape:
                return pytest.skip('This combination is tested in '
                                   'test_invalid_texture_arguments')
        else:
            output = self.output
    
        if self.output_shape:
            output_shape = (self.output_shape, ) * len(self.shape)
        else:
            output_shape = self.output_shape
    
        if xp == cupy:
            m = cupyx.scipy.ndimage.affine_transform
            matrix = cupy.array(matrix)
>           return m(a, matrix, output_shape=output_shape,
                     output=output, order=self.order,
                     mode=self.mode, texture_memory=True)

tests/cupyx_tests/scipy_tests/ndimage_tests/test_interpolation.py:398: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
cupyx/scipy/ndimage/interpolation.py:376: in affine_transform
    return _texture.affine_transformation(data=input,
cupyx/_texture.py:168: in affine_transformation
    texture_object = _create_texture_object(data,
cupyx/_texture.py:98: in _create_texture_object
    array = texture.CUDAarray(texture_fmt, *data.shape[::-1])
cupy/cuda/texture.pyx:296: in cupy.cuda.texture.CUDAarray.__init__
    self.ptr = runtime.malloc3DArray(desc.ptr, width, height, depth,
cupy_backends/cuda/api/runtime.pyx:593: in cupy_backends.cuda.api.runtime.malloc3DArray
    check_status(status)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

>   raise CUDARuntimeError(status)
E   AssertionError: Only cupy raises error
E   
E   Traceback (most recent call last):
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.hXnTrEAC7u/cupy/cupy/testing/_helper.py", line 47, in _call_func
E       result = impl(self, *args, **kw)
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.hXnTrEAC7u/cupy/tests/cupyx_tests/scipy_tests/ndimage_tests/test_interpolation.py", line 398, in test_affine_transform_texture_memory
E       return m(a, matrix, output_shape=output_shape,
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.hXnTrEAC7u/cupy/cupyx/scipy/ndimage/interpolation.py", line 376, in affine_transform
E       return _texture.affine_transformation(data=input,
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.hXnTrEAC7u/cupy/cupyx/_texture.py", line 168, in affine_transformation
E       texture_object = _create_texture_object(data,
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.hXnTrEAC7u/cupy/cupyx/_texture.py", line 98, in _create_texture_object
E       array = texture.CUDAarray(texture_fmt, *data.shape[::-1])
E     File "cupy/cuda/texture.pyx", line 296, in cupy.cuda.texture.CUDAarray.__init__
E       self.ptr = runtime.malloc3DArray(desc.ptr, width, height, depth,
E     File "cupy_backends/cuda/api/runtime.pyx", line 593, in cupy_backends.cuda.api.runtime.malloc3DArray
E       check_status(status)
E     File "cupy_backends/cuda/api/runtime.pyx", line 265, in cupy_backends.cuda.api.runtime.check_status
E       raise CUDARuntimeError(status)
E   cupy_backends.cuda.api.runtime.CUDARuntimeError: hipErrorUnknown: hipErrorUnknown

cupy_backends/cuda/api/runtime.pyx:265: AssertionError
----------------------------- Captured stderr call -----------------------------
Traceback (most recent call last):
  File "cupy_backends/cuda/api/runtime.pyx", line 644, in cupy_backends.cuda.api.runtime.freeArray
    check_status(status)
  File "cupy_backends/cuda/api/runtime.pyx", line 265, in cupy_backends.cuda.api.runtime.check_status
    raise CUDARuntimeError(status)
cupy_backends.cuda.api.runtime.CUDARuntimeError: hipErrorUnknown: hipErrorUnknown
_ TestAffineTransformTextureMemory.test_affine_transform_texture_memory[_param_107_{mode='constant', order=1, output=None, output_shape=None, shape=(10, 10, 10), theta=270}] _

self = <<cupyx_tests.scipy_tests.ndimage_tests.test_interpolation.TestAffineTransformTextureMemory object at 0x7fab39757f70>  parameter: {'mode': 'constant', 'order': 1, 'output': None, 'output_shape': None, 'shape': (10, 10, 10), 'theta': 270}>
xp = <module 'cupy' from '/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.hXnTrEAC7u/cupy/cupy/__init__.py'>
scp = <module 'cupyx.scipy' from '/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.hXnTrEAC7u/cupy/cupyx/scipy/__init__.py'>

    @testing.numpy_cupy_allclose(atol=0.1, scipy_name='scp')
    def test_affine_transform_texture_memory(self, xp, scp):
        a = xp.ones(self.shape, dtype=xp.float32)
        center = numpy.divide(numpy.subtract(self.shape, 1), 2)
    
        if len(self.shape) == 2:
            matrix = self._2d_rotation_matrix(self.theta, center)
        elif len(self.shape) == 3:
            matrix = self._3d_rotation_matrix(self.theta, center)
        else:
            return pytest.xfail('Unsupported shape')
    
        if self.output == 'empty':
            output = xp.empty(self.shape, dtype=xp.float32)
            if self.output_shape:
                return pytest.skip('This combination is tested in '
                                   'test_invalid_texture_arguments')
        else:
            output = self.output
    
        if self.output_shape:
            output_shape = (self.output_shape, ) * len(self.shape)
        else:
            output_shape = self.output_shape
    
        if xp == cupy:
            m = cupyx.scipy.ndimage.affine_transform
            matrix = cupy.array(matrix)
>           return m(a, matrix, output_shape=output_shape,
                     output=output, order=self.order,
                     mode=self.mode, texture_memory=True)

tests/cupyx_tests/scipy_tests/ndimage_tests/test_interpolation.py:398: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
cupyx/scipy/ndimage/interpolation.py:376: in affine_transform
    return _texture.affine_transformation(data=input,
cupyx/_texture.py:168: in affine_transformation
    texture_object = _create_texture_object(data,
cupyx/_texture.py:98: in _create_texture_object
    array = texture.CUDAarray(texture_fmt, *data.shape[::-1])
cupy/cuda/texture.pyx:296: in cupy.cuda.texture.CUDAarray.__init__
    self.ptr = runtime.malloc3DArray(desc.ptr, width, height, depth,
cupy_backends/cuda/api/runtime.pyx:593: in cupy_backends.cuda.api.runtime.malloc3DArray
    check_status(status)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

>   raise CUDARuntimeError(status)
E   AssertionError: Only cupy raises error
E   
E   Traceback (most recent call last):
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.hXnTrEAC7u/cupy/cupy/testing/_helper.py", line 47, in _call_func
E       result = impl(self, *args, **kw)
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.hXnTrEAC7u/cupy/tests/cupyx_tests/scipy_tests/ndimage_tests/test_interpolation.py", line 398, in test_affine_transform_texture_memory
E       return m(a, matrix, output_shape=output_shape,
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.hXnTrEAC7u/cupy/cupyx/scipy/ndimage/interpolation.py", line 376, in affine_transform
E       return _texture.affine_transformation(data=input,
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.hXnTrEAC7u/cupy/cupyx/_texture.py", line 168, in affine_transformation
E       texture_object = _create_texture_object(data,
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.hXnTrEAC7u/cupy/cupyx/_texture.py", line 98, in _create_texture_object
E       array = texture.CUDAarray(texture_fmt, *data.shape[::-1])
E     File "cupy/cuda/texture.pyx", line 296, in cupy.cuda.texture.CUDAarray.__init__
E       self.ptr = runtime.malloc3DArray(desc.ptr, width, height, depth,
E     File "cupy_backends/cuda/api/runtime.pyx", line 593, in cupy_backends.cuda.api.runtime.malloc3DArray
E       check_status(status)
E     File "cupy_backends/cuda/api/runtime.pyx", line 265, in cupy_backends.cuda.api.runtime.check_status
E       raise CUDARuntimeError(status)
E   cupy_backends.cuda.api.runtime.CUDARuntimeError: hipErrorUnknown: hipErrorUnknown

cupy_backends/cuda/api/runtime.pyx:265: AssertionError
----------------------------- Captured stderr call -----------------------------
Traceback (most recent call last):
  File "cupy_backends/cuda/api/runtime.pyx", line 644, in cupy_backends.cuda.api.runtime.freeArray
    check_status(status)
  File "cupy_backends/cuda/api/runtime.pyx", line 265, in cupy_backends.cuda.api.runtime.check_status
    raise CUDARuntimeError(status)
cupy_backends.cuda.api.runtime.CUDARuntimeError: hipErrorUnknown: hipErrorUnknown
_ TestAffineTransformTextureMemory.test_affine_transform_texture_memory[_param_108_{mode='constant', order=1, output=None, output_shape=None, shape=(10, 20, 30), theta=0}] _

self = <<cupyx_tests.scipy_tests.ndimage_tests.test_interpolation.TestAffineTransformTextureMemory object at 0x7fab39e60dc0>  parameter: {'mode': 'constant', 'order': 1, 'output': None, 'output_shape': None, 'shape': (10, 20, 30), 'theta': 0}>
xp = <module 'cupy' from '/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.hXnTrEAC7u/cupy/cupy/__init__.py'>
scp = <module 'cupyx.scipy' from '/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.hXnTrEAC7u/cupy/cupyx/scipy/__init__.py'>

    @testing.numpy_cupy_allclose(atol=0.1, scipy_name='scp')
    def test_affine_transform_texture_memory(self, xp, scp):
        a = xp.ones(self.shape, dtype=xp.float32)
        center = numpy.divide(numpy.subtract(self.shape, 1), 2)
    
        if len(self.shape) == 2:
            matrix = self._2d_rotation_matrix(self.theta, center)
        elif len(self.shape) == 3:
            matrix = self._3d_rotation_matrix(self.theta, center)
        else:
            return pytest.xfail('Unsupported shape')
    
        if self.output == 'empty':
            output = xp.empty(self.shape, dtype=xp.float32)
            if self.output_shape:
                return pytest.skip('This combination is tested in '
                                   'test_invalid_texture_arguments')
        else:
            output = self.output
    
        if self.output_shape:
            output_shape = (self.output_shape, ) * len(self.shape)
        else:
            output_shape = self.output_shape
    
        if xp == cupy:
            m = cupyx.scipy.ndimage.affine_transform
            matrix = cupy.array(matrix)
>           return m(a, matrix, output_shape=output_shape,
                     output=output, order=self.order,
                     mode=self.mode, texture_memory=True)

tests/cupyx_tests/scipy_tests/ndimage_tests/test_interpolation.py:398: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
cupyx/scipy/ndimage/interpolation.py:376: in affine_transform
    return _texture.affine_transformation(data=input,
cupyx/_texture.py:168: in affine_transformation
    texture_object = _create_texture_object(data,
cupyx/_texture.py:98: in _create_texture_object
    array = texture.CUDAarray(texture_fmt, *data.shape[::-1])
cupy/cuda/texture.pyx:296: in cupy.cuda.texture.CUDAarray.__init__
    self.ptr = runtime.malloc3DArray(desc.ptr, width, height, depth,
cupy_backends/cuda/api/runtime.pyx:593: in cupy_backends.cuda.api.runtime.malloc3DArray
    check_status(status)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

>   raise CUDARuntimeError(status)
E   AssertionError: Only cupy raises error
E   
E   Traceback (most recent call last):
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.hXnTrEAC7u/cupy/cupy/testing/_helper.py", line 47, in _call_func
E       result = impl(self, *args, **kw)
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.hXnTrEAC7u/cupy/tests/cupyx_tests/scipy_tests/ndimage_tests/test_interpolation.py", line 398, in test_affine_transform_texture_memory
E       return m(a, matrix, output_shape=output_shape,
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.hXnTrEAC7u/cupy/cupyx/scipy/ndimage/interpolation.py", line 376, in affine_transform
E       return _texture.affine_transformation(data=input,
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.hXnTrEAC7u/cupy/cupyx/_texture.py", line 168, in affine_transformation
E       texture_object = _create_texture_object(data,
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.hXnTrEAC7u/cupy/cupyx/_texture.py", line 98, in _create_texture_object
E       array = texture.CUDAarray(texture_fmt, *data.shape[::-1])
E     File "cupy/cuda/texture.pyx", line 296, in cupy.cuda.texture.CUDAarray.__init__
E       self.ptr = runtime.malloc3DArray(desc.ptr, width, height, depth,
E     File "cupy_backends/cuda/api/runtime.pyx", line 593, in cupy_backends.cuda.api.runtime.malloc3DArray
E       check_status(status)
E     File "cupy_backends/cuda/api/runtime.pyx", line 265, in cupy_backends.cuda.api.runtime.check_status
E       raise CUDARuntimeError(status)
E   cupy_backends.cuda.api.runtime.CUDARuntimeError: hipErrorUnknown: hipErrorUnknown

cupy_backends/cuda/api/runtime.pyx:265: AssertionError
----------------------------- Captured stderr call -----------------------------
Traceback (most recent call last):
  File "cupy_backends/cuda/api/runtime.pyx", line 644, in cupy_backends.cuda.api.runtime.freeArray
    check_status(status)
  File "cupy_backends/cuda/api/runtime.pyx", line 265, in cupy_backends.cuda.api.runtime.check_status
    raise CUDARuntimeError(status)
cupy_backends.cuda.api.runtime.CUDARuntimeError: hipErrorUnknown: hipErrorUnknown
_ TestAffineTransformTextureMemory.test_affine_transform_texture_memory[_param_109_{mode='constant', order=1, output=None, output_shape=None, shape=(10, 20, 30), theta=90}] _

self = <<cupyx_tests.scipy_tests.ndimage_tests.test_interpolation.TestAffineTransformTextureMemory object at 0x7fab39d78fd0>  parameter: {'mode': 'constant', 'order': 1, 'output': None, 'output_shape': None, 'shape': (10, 20, 30), 'theta': 90}>
xp = <module 'cupy' from '/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.hXnTrEAC7u/cupy/cupy/__init__.py'>
scp = <module 'cupyx.scipy' from '/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.hXnTrEAC7u/cupy/cupyx/scipy/__init__.py'>

    @testing.numpy_cupy_allclose(atol=0.1, scipy_name='scp')
    def test_affine_transform_texture_memory(self, xp, scp):
        a = xp.ones(self.shape, dtype=xp.float32)
        center = numpy.divide(numpy.subtract(self.shape, 1), 2)
    
        if len(self.shape) == 2:
            matrix = self._2d_rotation_matrix(self.theta, center)
        elif len(self.shape) == 3:
            matrix = self._3d_rotation_matrix(self.theta, center)
        else:
            return pytest.xfail('Unsupported shape')
    
        if self.output == 'empty':
            output = xp.empty(self.shape, dtype=xp.float32)
            if self.output_shape:
                return pytest.skip('This combination is tested in '
                                   'test_invalid_texture_arguments')
        else:
            output = self.output
    
        if self.output_shape:
            output_shape = (self.output_shape, ) * len(self.shape)
        else:
            output_shape = self.output_shape
    
        if xp == cupy:
            m = cupyx.scipy.ndimage.affine_transform
            matrix = cupy.array(matrix)
>           return m(a, matrix, output_shape=output_shape,
                     output=output, order=self.order,
                     mode=self.mode, texture_memory=True)

tests/cupyx_tests/scipy_tests/ndimage_tests/test_interpolation.py:398: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
cupyx/scipy/ndimage/interpolation.py:376: in affine_transform
    return _texture.affine_transformation(data=input,
cupyx/_texture.py:168: in affine_transformation
    texture_object = _create_texture_object(data,
cupyx/_texture.py:98: in _create_texture_object
    array = texture.CUDAarray(texture_fmt, *data.shape[::-1])
cupy/cuda/texture.pyx:296: in cupy.cuda.texture.CUDAarray.__init__
    self.ptr = runtime.malloc3DArray(desc.ptr, width, height, depth,
cupy_backends/cuda/api/runtime.pyx:593: in cupy_backends.cuda.api.runtime.malloc3DArray
    check_status(status)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

>   raise CUDARuntimeError(status)
E   AssertionError: Only cupy raises error
E   
E   Traceback (most recent call last):
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.hXnTrEAC7u/cupy/cupy/testing/_helper.py", line 47, in _call_func
E       result = impl(self, *args, **kw)
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.hXnTrEAC7u/cupy/tests/cupyx_tests/scipy_tests/ndimage_tests/test_interpolation.py", line 398, in test_affine_transform_texture_memory
E       return m(a, matrix, output_shape=output_shape,
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.hXnTrEAC7u/cupy/cupyx/scipy/ndimage/interpolation.py", line 376, in affine_transform
E       return _texture.affine_transformation(data=input,
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.hXnTrEAC7u/cupy/cupyx/_texture.py", line 168, in affine_transformation
E       texture_object = _create_texture_object(data,
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.hXnTrEAC7u/cupy/cupyx/_texture.py", line 98, in _create_texture_object
E       array = texture.CUDAarray(texture_fmt, *data.shape[::-1])
E     File "cupy/cuda/texture.pyx", line 296, in cupy.cuda.texture.CUDAarray.__init__
E       self.ptr = runtime.malloc3DArray(desc.ptr, width, height, depth,
E     File "cupy_backends/cuda/api/runtime.pyx", line 593, in cupy_backends.cuda.api.runtime.malloc3DArray
E       check_status(status)
E     File "cupy_backends/cuda/api/runtime.pyx", line 265, in cupy_backends.cuda.api.runtime.check_status
E       raise CUDARuntimeError(status)
E   cupy_backends.cuda.api.runtime.CUDARuntimeError: hipErrorUnknown: hipErrorUnknown

cupy_backends/cuda/api/runtime.pyx:265: AssertionError
----------------------------- Captured stderr call -----------------------------
Traceback (most recent call last):
  File "cupy_backends/cuda/api/runtime.pyx", line 644, in cupy_backends.cuda.api.runtime.freeArray
    check_status(status)
  File "cupy_backends/cuda/api/runtime.pyx", line 265, in cupy_backends.cuda.api.runtime.check_status
    raise CUDARuntimeError(status)
cupy_backends.cuda.api.runtime.CUDARuntimeError: hipErrorUnknown: hipErrorUnknown
_ TestAffineTransformTextureMemory.test_affine_transform_texture_memory[_param_110_{mode='constant', order=1, output=None, output_shape=None, shape=(10, 20, 30), theta=180}] _

self = <<cupyx_tests.scipy_tests.ndimage_tests.test_interpolation.TestAffineTransformTextureMemory object at 0x7fac51524490>  parameter: {'mode': 'constant', 'order': 1, 'output': None, 'output_shape': None, 'shape': (10, 20, 30), 'theta': 180}>
xp = <module 'cupy' from '/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.hXnTrEAC7u/cupy/cupy/__init__.py'>
scp = <module 'cupyx.scipy' from '/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.hXnTrEAC7u/cupy/cupyx/scipy/__init__.py'>

    @testing.numpy_cupy_allclose(atol=0.1, scipy_name='scp')
    def test_affine_transform_texture_memory(self, xp, scp):
        a = xp.ones(self.shape, dtype=xp.float32)
        center = numpy.divide(numpy.subtract(self.shape, 1), 2)
    
        if len(self.shape) == 2:
            matrix = self._2d_rotation_matrix(self.theta, center)
        elif len(self.shape) == 3:
            matrix = self._3d_rotation_matrix(self.theta, center)
        else:
            return pytest.xfail('Unsupported shape')
    
        if self.output == 'empty':
            output = xp.empty(self.shape, dtype=xp.float32)
            if self.output_shape:
                return pytest.skip('This combination is tested in '
                                   'test_invalid_texture_arguments')
        else:
            output = self.output
    
        if self.output_shape:
            output_shape = (self.output_shape, ) * len(self.shape)
        else:
            output_shape = self.output_shape
    
        if xp == cupy:
            m = cupyx.scipy.ndimage.affine_transform
            matrix = cupy.array(matrix)
>           return m(a, matrix, output_shape=output_shape,
                     output=output, order=self.order,
                     mode=self.mode, texture_memory=True)

tests/cupyx_tests/scipy_tests/ndimage_tests/test_interpolation.py:398: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
cupyx/scipy/ndimage/interpolation.py:376: in affine_transform
    return _texture.affine_transformation(data=input,
cupyx/_texture.py:168: in affine_transformation
    texture_object = _create_texture_object(data,
cupyx/_texture.py:98: in _create_texture_object
    array = texture.CUDAarray(texture_fmt, *data.shape[::-1])
cupy/cuda/texture.pyx:296: in cupy.cuda.texture.CUDAarray.__init__
    self.ptr = runtime.malloc3DArray(desc.ptr, width, height, depth,
cupy_backends/cuda/api/runtime.pyx:593: in cupy_backends.cuda.api.runtime.malloc3DArray
    check_status(status)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

>   raise CUDARuntimeError(status)
E   AssertionError: Only cupy raises error
E   
E   Traceback (most recent call last):
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.hXnTrEAC7u/cupy/cupy/testing/_helper.py", line 47, in _call_func
E       result = impl(self, *args, **kw)
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.hXnTrEAC7u/cupy/tests/cupyx_tests/scipy_tests/ndimage_tests/test_interpolation.py", line 398, in test_affine_transform_texture_memory
E       return m(a, matrix, output_shape=output_shape,
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.hXnTrEAC7u/cupy/cupyx/scipy/ndimage/interpolation.py", line 376, in affine_transform
E       return _texture.affine_transformation(data=input,
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.hXnTrEAC7u/cupy/cupyx/_texture.py", line 168, in affine_transformation
E       texture_object = _create_texture_object(data,
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.hXnTrEAC7u/cupy/cupyx/_texture.py", line 98, in _create_texture_object
E       array = texture.CUDAarray(texture_fmt, *data.shape[::-1])
E     File "cupy/cuda/texture.pyx", line 296, in cupy.cuda.texture.CUDAarray.__init__
E       self.ptr = runtime.malloc3DArray(desc.ptr, width, height, depth,
E     File "cupy_backends/cuda/api/runtime.pyx", line 593, in cupy_backends.cuda.api.runtime.malloc3DArray
E       check_status(status)
E     File "cupy_backends/cuda/api/runtime.pyx", line 265, in cupy_backends.cuda.api.runtime.check_status
E       raise CUDARuntimeError(status)
E   cupy_backends.cuda.api.runtime.CUDARuntimeError: hipErrorUnknown: hipErrorUnknown

cupy_backends/cuda/api/runtime.pyx:265: AssertionError
----------------------------- Captured stderr call -----------------------------
Traceback (most recent call last):
  File "cupy_backends/cuda/api/runtime.pyx", line 644, in cupy_backends.cuda.api.runtime.freeArray
    check_status(status)
  File "cupy_backends/cuda/api/runtime.pyx", line 265, in cupy_backends.cuda.api.runtime.check_status
    raise CUDARuntimeError(status)
cupy_backends.cuda.api.runtime.CUDARuntimeError: hipErrorUnknown: hipErrorUnknown
_ TestAffineTransformTextureMemory.test_affine_transform_texture_memory[_param_111_{mode='constant', order=1, output=None, output_shape=None, shape=(10, 20, 30), theta=270}] _

self = <<cupyx_tests.scipy_tests.ndimage_tests.test_interpolation.TestAffineTransformTextureMemory object at 0x7fab37059490>  parameter: {'mode': 'constant', 'order': 1, 'output': None, 'output_shape': None, 'shape': (10, 20, 30), 'theta': 270}>
xp = <module 'cupy' from '/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.hXnTrEAC7u/cupy/cupy/__init__.py'>
scp = <module 'cupyx.scipy' from '/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.hXnTrEAC7u/cupy/cupyx/scipy/__init__.py'>

    @testing.numpy_cupy_allclose(atol=0.1, scipy_name='scp')
    def test_affine_transform_texture_memory(self, xp, scp):
        a = xp.ones(self.shape, dtype=xp.float32)
        center = numpy.divide(numpy.subtract(self.shape, 1), 2)
    
        if len(self.shape) == 2:
            matrix = self._2d_rotation_matrix(self.theta, center)
        elif len(self.shape) == 3:
            matrix = self._3d_rotation_matrix(self.theta, center)
        else:
            return pytest.xfail('Unsupported shape')
    
        if self.output == 'empty':
            output = xp.empty(self.shape, dtype=xp.float32)
            if self.output_shape:
                return pytest.skip('This combination is tested in '
                                   'test_invalid_texture_arguments')
        else:
            output = self.output
    
        if self.output_shape:
            output_shape = (self.output_shape, ) * len(self.shape)
        else:
            output_shape = self.output_shape
    
        if xp == cupy:
            m = cupyx.scipy.ndimage.affine_transform
            matrix = cupy.array(matrix)
>           return m(a, matrix, output_shape=output_shape,
                     output=output, order=self.order,
                     mode=self.mode, texture_memory=True)

tests/cupyx_tests/scipy_tests/ndimage_tests/test_interpolation.py:398: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
cupyx/scipy/ndimage/interpolation.py:376: in affine_transform
    return _texture.affine_transformation(data=input,
cupyx/_texture.py:168: in affine_transformation
    texture_object = _create_texture_object(data,
cupyx/_texture.py:98: in _create_texture_object
    array = texture.CUDAarray(texture_fmt, *data.shape[::-1])
cupy/cuda/texture.pyx:296: in cupy.cuda.texture.CUDAarray.__init__
    self.ptr = runtime.malloc3DArray(desc.ptr, width, height, depth,
cupy_backends/cuda/api/runtime.pyx:593: in cupy_backends.cuda.api.runtime.malloc3DArray
    check_status(status)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

>   raise CUDARuntimeError(status)
E   AssertionError: Only cupy raises error
E   
E   Traceback (most recent call last):
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.hXnTrEAC7u/cupy/cupy/testing/_helper.py", line 47, in _call_func
E       result = impl(self, *args, **kw)
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.hXnTrEAC7u/cupy/tests/cupyx_tests/scipy_tests/ndimage_tests/test_interpolation.py", line 398, in test_affine_transform_texture_memory
E       return m(a, matrix, output_shape=output_shape,
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.hXnTrEAC7u/cupy/cupyx/scipy/ndimage/interpolation.py", line 376, in affine_transform
E       return _texture.affine_transformation(data=input,
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.hXnTrEAC7u/cupy/cupyx/_texture.py", line 168, in affine_transformation
E       texture_object = _create_texture_object(data,
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.hXnTrEAC7u/cupy/cupyx/_texture.py", line 98, in _create_texture_object
E       array = texture.CUDAarray(texture_fmt, *data.shape[::-1])
E     File "cupy/cuda/texture.pyx", line 296, in cupy.cuda.texture.CUDAarray.__init__
E       self.ptr = runtime.malloc3DArray(desc.ptr, width, height, depth,
E     File "cupy_backends/cuda/api/runtime.pyx", line 593, in cupy_backends.cuda.api.runtime.malloc3DArray
E       check_status(status)
E     File "cupy_backends/cuda/api/runtime.pyx", line 265, in cupy_backends.cuda.api.runtime.check_status
E       raise CUDARuntimeError(status)
E   cupy_backends.cuda.api.runtime.CUDARuntimeError: hipErrorUnknown: hipErrorUnknown

cupy_backends/cuda/api/runtime.pyx:265: AssertionError
----------------------------- Captured stderr call -----------------------------
Traceback (most recent call last):
  File "cupy_backends/cuda/api/runtime.pyx", line 644, in cupy_backends.cuda.api.runtime.freeArray
    check_status(status)
  File "cupy_backends/cuda/api/runtime.pyx", line 265, in cupy_backends.cuda.api.runtime.check_status
    raise CUDARuntimeError(status)
cupy_backends.cuda.api.runtime.CUDARuntimeError: hipErrorUnknown: hipErrorUnknown
_ TestAffineTransformTextureMemory.test_affine_transform_texture_memory[_param_112_{mode='constant', order=1, output=None, output_shape=10, shape=(100, 100), theta=0}] _

self = <<cupyx_tests.scipy_tests.ndimage_tests.test_interpolation.TestAffineTransformTextureMemory object at 0x7fab38b8cfa0>  parameter: {'mode': 'constant', 'order': 1, 'output': None, 'output_shape': 10, 'shape': (100, 100), 'theta': 0}>
xp = <module 'cupy' from '/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.hXnTrEAC7u/cupy/cupy/__init__.py'>
scp = <module 'cupyx.scipy' from '/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.hXnTrEAC7u/cupy/cupyx/scipy/__init__.py'>

    @testing.numpy_cupy_allclose(atol=0.1, scipy_name='scp')
    def test_affine_transform_texture_memory(self, xp, scp):
        a = xp.ones(self.shape, dtype=xp.float32)
        center = numpy.divide(numpy.subtract(self.shape, 1), 2)
    
        if len(self.shape) == 2:
            matrix = self._2d_rotation_matrix(self.theta, center)
        elif len(self.shape) == 3:
            matrix = self._3d_rotation_matrix(self.theta, center)
        else:
            return pytest.xfail('Unsupported shape')
    
        if self.output == 'empty':
            output = xp.empty(self.shape, dtype=xp.float32)
            if self.output_shape:
                return pytest.skip('This combination is tested in '
                                   'test_invalid_texture_arguments')
        else:
            output = self.output
    
        if self.output_shape:
            output_shape = (self.output_shape, ) * len(self.shape)
        else:
            output_shape = self.output_shape
    
        if xp == cupy:
            m = cupyx.scipy.ndimage.affine_transform
            matrix = cupy.array(matrix)
>           return m(a, matrix, output_shape=output_shape,
                     output=output, order=self.order,
                     mode=self.mode, texture_memory=True)

tests/cupyx_tests/scipy_tests/ndimage_tests/test_interpolation.py:398: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
cupyx/scipy/ndimage/interpolation.py:376: in affine_transform
    return _texture.affine_transformation(data=input,
cupyx/_texture.py:168: in affine_transformation
    texture_object = _create_texture_object(data,
cupyx/_texture.py:98: in _create_texture_object
    array = texture.CUDAarray(texture_fmt, *data.shape[::-1])
cupy/cuda/texture.pyx:296: in cupy.cuda.texture.CUDAarray.__init__
    self.ptr = runtime.malloc3DArray(desc.ptr, width, height, depth,
cupy_backends/cuda/api/runtime.pyx:593: in cupy_backends.cuda.api.runtime.malloc3DArray
    check_status(status)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

>   raise CUDARuntimeError(status)
E   AssertionError: Only cupy raises error
E   
E   Traceback (most recent call last):
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.hXnTrEAC7u/cupy/cupy/testing/_helper.py", line 47, in _call_func
E       result = impl(self, *args, **kw)
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.hXnTrEAC7u/cupy/tests/cupyx_tests/scipy_tests/ndimage_tests/test_interpolation.py", line 398, in test_affine_transform_texture_memory
E       return m(a, matrix, output_shape=output_shape,
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.hXnTrEAC7u/cupy/cupyx/scipy/ndimage/interpolation.py", line 376, in affine_transform
E       return _texture.affine_transformation(data=input,
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.hXnTrEAC7u/cupy/cupyx/_texture.py", line 168, in affine_transformation
E       texture_object = _create_texture_object(data,
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.hXnTrEAC7u/cupy/cupyx/_texture.py", line 98, in _create_texture_object
E       array = texture.CUDAarray(texture_fmt, *data.shape[::-1])
E     File "cupy/cuda/texture.pyx", line 296, in cupy.cuda.texture.CUDAarray.__init__
E       self.ptr = runtime.malloc3DArray(desc.ptr, width, height, depth,
E     File "cupy_backends/cuda/api/runtime.pyx", line 593, in cupy_backends.cuda.api.runtime.malloc3DArray
E       check_status(status)
E     File "cupy_backends/cuda/api/runtime.pyx", line 265, in cupy_backends.cuda.api.runtime.check_status
E       raise CUDARuntimeError(status)
E   cupy_backends.cuda.api.runtime.CUDARuntimeError: hipErrorUnknown: hipErrorUnknown

cupy_backends/cuda/api/runtime.pyx:265: AssertionError
----------------------------- Captured stderr call -----------------------------
Traceback (most recent call last):
  File "cupy_backends/cuda/api/runtime.pyx", line 644, in cupy_backends.cuda.api.runtime.freeArray
    check_status(status)
  File "cupy_backends/cuda/api/runtime.pyx", line 265, in cupy_backends.cuda.api.runtime.check_status
    raise CUDARuntimeError(status)
cupy_backends.cuda.api.runtime.CUDARuntimeError: hipErrorUnknown: hipErrorUnknown
_ TestAffineTransformTextureMemory.test_affine_transform_texture_memory[_param_113_{mode='constant', order=1, output=None, output_shape=10, shape=(100, 100), theta=90}] _

self = <<cupyx_tests.scipy_tests.ndimage_tests.test_interpolation.TestAffineTransformTextureMemory object at 0x7fab39ec92b0>  parameter: {'mode': 'constant', 'order': 1, 'output': None, 'output_shape': 10, 'shape': (100, 100), 'theta': 90}>
xp = <module 'cupy' from '/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.hXnTrEAC7u/cupy/cupy/__init__.py'>
scp = <module 'cupyx.scipy' from '/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.hXnTrEAC7u/cupy/cupyx/scipy/__init__.py'>

    @testing.numpy_cupy_allclose(atol=0.1, scipy_name='scp')
    def test_affine_transform_texture_memory(self, xp, scp):
        a = xp.ones(self.shape, dtype=xp.float32)
        center = numpy.divide(numpy.subtract(self.shape, 1), 2)
    
        if len(self.shape) == 2:
            matrix = self._2d_rotation_matrix(self.theta, center)
        elif len(self.shape) == 3:
            matrix = self._3d_rotation_matrix(self.theta, center)
        else:
            return pytest.xfail('Unsupported shape')
    
        if self.output == 'empty':
            output = xp.empty(self.shape, dtype=xp.float32)
            if self.output_shape:
                return pytest.skip('This combination is tested in '
                                   'test_invalid_texture_arguments')
        else:
            output = self.output
    
        if self.output_shape:
            output_shape = (self.output_shape, ) * len(self.shape)
        else:
            output_shape = self.output_shape
    
        if xp == cupy:
            m = cupyx.scipy.ndimage.affine_transform
            matrix = cupy.array(matrix)
>           return m(a, matrix, output_shape=output_shape,
                     output=output, order=self.order,
                     mode=self.mode, texture_memory=True)

tests/cupyx_tests/scipy_tests/ndimage_tests/test_interpolation.py:398: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
cupyx/scipy/ndimage/interpolation.py:376: in affine_transform
    return _texture.affine_transformation(data=input,
cupyx/_texture.py:168: in affine_transformation
    texture_object = _create_texture_object(data,
cupyx/_texture.py:98: in _create_texture_object
    array = texture.CUDAarray(texture_fmt, *data.shape[::-1])
cupy/cuda/texture.pyx:296: in cupy.cuda.texture.CUDAarray.__init__
    self.ptr = runtime.malloc3DArray(desc.ptr, width, height, depth,
cupy_backends/cuda/api/runtime.pyx:593: in cupy_backends.cuda.api.runtime.malloc3DArray
    check_status(status)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

>   raise CUDARuntimeError(status)
E   AssertionError: Only cupy raises error
E   
E   Traceback (most recent call last):
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.hXnTrEAC7u/cupy/cupy/testing/_helper.py", line 47, in _call_func
E       result = impl(self, *args, **kw)
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.hXnTrEAC7u/cupy/tests/cupyx_tests/scipy_tests/ndimage_tests/test_interpolation.py", line 398, in test_affine_transform_texture_memory
E       return m(a, matrix, output_shape=output_shape,
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.hXnTrEAC7u/cupy/cupyx/scipy/ndimage/interpolation.py", line 376, in affine_transform
E       return _texture.affine_transformation(data=input,
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.hXnTrEAC7u/cupy/cupyx/_texture.py", line 168, in affine_transformation
E       texture_object = _create_texture_object(data,
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.hXnTrEAC7u/cupy/cupyx/_texture.py", line 98, in _create_texture_object
E       array = texture.CUDAarray(texture_fmt, *data.shape[::-1])
E     File "cupy/cuda/texture.pyx", line 296, in cupy.cuda.texture.CUDAarray.__init__
E       self.ptr = runtime.malloc3DArray(desc.ptr, width, height, depth,
E     File "cupy_backends/cuda/api/runtime.pyx", line 593, in cupy_backends.cuda.api.runtime.malloc3DArray
E       check_status(status)
E     File "cupy_backends/cuda/api/runtime.pyx", line 265, in cupy_backends.cuda.api.runtime.check_status
E       raise CUDARuntimeError(status)
E   cupy_backends.cuda.api.runtime.CUDARuntimeError: hipErrorUnknown: hipErrorUnknown

cupy_backends/cuda/api/runtime.pyx:265: AssertionError
----------------------------- Captured stderr call -----------------------------
Traceback (most recent call last):
  File "cupy_backends/cuda/api/runtime.pyx", line 644, in cupy_backends.cuda.api.runtime.freeArray
    check_status(status)
  File "cupy_backends/cuda/api/runtime.pyx", line 265, in cupy_backends.cuda.api.runtime.check_status
    raise CUDARuntimeError(status)
cupy_backends.cuda.api.runtime.CUDARuntimeError: hipErrorUnknown: hipErrorUnknown
_ TestAffineTransformTextureMemory.test_affine_transform_texture_memory[_param_114_{mode='constant', order=1, output=None, output_shape=10, shape=(100, 100), theta=180}] _

self = <<cupyx_tests.scipy_tests.ndimage_tests.test_interpolation.TestAffineTransformTextureMemory object at 0x7fab37d540a0>  parameter: {'mode': 'constant', 'order': 1, 'output': None, 'output_shape': 10, 'shape': (100, 100), 'theta': 180}>
xp = <module 'cupy' from '/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.hXnTrEAC7u/cupy/cupy/__init__.py'>
scp = <module 'cupyx.scipy' from '/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.hXnTrEAC7u/cupy/cupyx/scipy/__init__.py'>

    @testing.numpy_cupy_allclose(atol=0.1, scipy_name='scp')
    def test_affine_transform_texture_memory(self, xp, scp):
        a = xp.ones(self.shape, dtype=xp.float32)
        center = numpy.divide(numpy.subtract(self.shape, 1), 2)
    
        if len(self.shape) == 2:
            matrix = self._2d_rotation_matrix(self.theta, center)
        elif len(self.shape) == 3:
            matrix = self._3d_rotation_matrix(self.theta, center)
        else:
            return pytest.xfail('Unsupported shape')
    
        if self.output == 'empty':
            output = xp.empty(self.shape, dtype=xp.float32)
            if self.output_shape:
                return pytest.skip('This combination is tested in '
                                   'test_invalid_texture_arguments')
        else:
            output = self.output
    
        if self.output_shape:
            output_shape = (self.output_shape, ) * len(self.shape)
        else:
            output_shape = self.output_shape
    
        if xp == cupy:
            m = cupyx.scipy.ndimage.affine_transform
            matrix = cupy.array(matrix)
>           return m(a, matrix, output_shape=output_shape,
                     output=output, order=self.order,
                     mode=self.mode, texture_memory=True)

tests/cupyx_tests/scipy_tests/ndimage_tests/test_interpolation.py:398: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
cupyx/scipy/ndimage/interpolation.py:376: in affine_transform
    return _texture.affine_transformation(data=input,
cupyx/_texture.py:168: in affine_transformation
    texture_object = _create_texture_object(data,
cupyx/_texture.py:98: in _create_texture_object
    array = texture.CUDAarray(texture_fmt, *data.shape[::-1])
cupy/cuda/texture.pyx:296: in cupy.cuda.texture.CUDAarray.__init__
    self.ptr = runtime.malloc3DArray(desc.ptr, width, height, depth,
cupy_backends/cuda/api/runtime.pyx:593: in cupy_backends.cuda.api.runtime.malloc3DArray
    check_status(status)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

>   raise CUDARuntimeError(status)
E   AssertionError: Only cupy raises error
E   
E   Traceback (most recent call last):
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.hXnTrEAC7u/cupy/cupy/testing/_helper.py", line 47, in _call_func
E       result = impl(self, *args, **kw)
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.hXnTrEAC7u/cupy/tests/cupyx_tests/scipy_tests/ndimage_tests/test_interpolation.py", line 398, in test_affine_transform_texture_memory
E       return m(a, matrix, output_shape=output_shape,
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.hXnTrEAC7u/cupy/cupyx/scipy/ndimage/interpolation.py", line 376, in affine_transform
E       return _texture.affine_transformation(data=input,
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.hXnTrEAC7u/cupy/cupyx/_texture.py", line 168, in affine_transformation
E       texture_object = _create_texture_object(data,
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.hXnTrEAC7u/cupy/cupyx/_texture.py", line 98, in _create_texture_object
E       array = texture.CUDAarray(texture_fmt, *data.shape[::-1])
E     File "cupy/cuda/texture.pyx", line 296, in cupy.cuda.texture.CUDAarray.__init__
E       self.ptr = runtime.malloc3DArray(desc.ptr, width, height, depth,
E     File "cupy_backends/cuda/api/runtime.pyx", line 593, in cupy_backends.cuda.api.runtime.malloc3DArray
E       check_status(status)
E     File "cupy_backends/cuda/api/runtime.pyx", line 265, in cupy_backends.cuda.api.runtime.check_status
E       raise CUDARuntimeError(status)
E   cupy_backends.cuda.api.runtime.CUDARuntimeError: hipErrorUnknown: hipErrorUnknown

cupy_backends/cuda/api/runtime.pyx:265: AssertionError
----------------------------- Captured stderr call -----------------------------
Traceback (most recent call last):
  File "cupy_backends/cuda/api/runtime.pyx", line 644, in cupy_backends.cuda.api.runtime.freeArray
    check_status(status)
  File "cupy_backends/cuda/api/runtime.pyx", line 265, in cupy_backends.cuda.api.runtime.check_status
    raise CUDARuntimeError(status)
cupy_backends.cuda.api.runtime.CUDARuntimeError: hipErrorUnknown: hipErrorUnknown
_ TestAffineTransformTextureMemory.test_affine_transform_texture_memory[_param_115_{mode='constant', order=1, output=None, output_shape=10, shape=(100, 100), theta=270}] _

self = <<cupyx_tests.scipy_tests.ndimage_tests.test_interpolation.TestAffineTransformTextureMemory object at 0x7fab395a8d90>  parameter: {'mode': 'constant', 'order': 1, 'output': None, 'output_shape': 10, 'shape': (100, 100), 'theta': 270}>
xp = <module 'cupy' from '/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.hXnTrEAC7u/cupy/cupy/__init__.py'>
scp = <module 'cupyx.scipy' from '/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.hXnTrEAC7u/cupy/cupyx/scipy/__init__.py'>

    @testing.numpy_cupy_allclose(atol=0.1, scipy_name='scp')
    def test_affine_transform_texture_memory(self, xp, scp):
        a = xp.ones(self.shape, dtype=xp.float32)
        center = numpy.divide(numpy.subtract(self.shape, 1), 2)
    
        if len(self.shape) == 2:
            matrix = self._2d_rotation_matrix(self.theta, center)
        elif len(self.shape) == 3:
            matrix = self._3d_rotation_matrix(self.theta, center)
        else:
            return pytest.xfail('Unsupported shape')
    
        if self.output == 'empty':
            output = xp.empty(self.shape, dtype=xp.float32)
            if self.output_shape:
                return pytest.skip('This combination is tested in '
                                   'test_invalid_texture_arguments')
        else:
            output = self.output
    
        if self.output_shape:
            output_shape = (self.output_shape, ) * len(self.shape)
        else:
            output_shape = self.output_shape
    
        if xp == cupy:
            m = cupyx.scipy.ndimage.affine_transform
            matrix = cupy.array(matrix)
>           return m(a, matrix, output_shape=output_shape,
                     output=output, order=self.order,
                     mode=self.mode, texture_memory=True)

tests/cupyx_tests/scipy_tests/ndimage_tests/test_interpolation.py:398: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
cupyx/scipy/ndimage/interpolation.py:376: in affine_transform
    return _texture.affine_transformation(data=input,
cupyx/_texture.py:168: in affine_transformation
    texture_object = _create_texture_object(data,
cupyx/_texture.py:98: in _create_texture_object
    array = texture.CUDAarray(texture_fmt, *data.shape[::-1])
cupy/cuda/texture.pyx:296: in cupy.cuda.texture.CUDAarray.__init__
    self.ptr = runtime.malloc3DArray(desc.ptr, width, height, depth,
cupy_backends/cuda/api/runtime.pyx:593: in cupy_backends.cuda.api.runtime.malloc3DArray
    check_status(status)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

>   raise CUDARuntimeError(status)
E   AssertionError: Only cupy raises error
E   
E   Traceback (most recent call last):
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.hXnTrEAC7u/cupy/cupy/testing/_helper.py", line 47, in _call_func
E       result = impl(self, *args, **kw)
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.hXnTrEAC7u/cupy/tests/cupyx_tests/scipy_tests/ndimage_tests/test_interpolation.py", line 398, in test_affine_transform_texture_memory
E       return m(a, matrix, output_shape=output_shape,
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.hXnTrEAC7u/cupy/cupyx/scipy/ndimage/interpolation.py", line 376, in affine_transform
E       return _texture.affine_transformation(data=input,
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.hXnTrEAC7u/cupy/cupyx/_texture.py", line 168, in affine_transformation
E       texture_object = _create_texture_object(data,
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.hXnTrEAC7u/cupy/cupyx/_texture.py", line 98, in _create_texture_object
E       array = texture.CUDAarray(texture_fmt, *data.shape[::-1])
E     File "cupy/cuda/texture.pyx", line 296, in cupy.cuda.texture.CUDAarray.__init__
E       self.ptr = runtime.malloc3DArray(desc.ptr, width, height, depth,
E     File "cupy_backends/cuda/api/runtime.pyx", line 593, in cupy_backends.cuda.api.runtime.malloc3DArray
E       check_status(status)
E     File "cupy_backends/cuda/api/runtime.pyx", line 265, in cupy_backends.cuda.api.runtime.check_status
E       raise CUDARuntimeError(status)
E   cupy_backends.cuda.api.runtime.CUDARuntimeError: hipErrorUnknown: hipErrorUnknown

cupy_backends/cuda/api/runtime.pyx:265: AssertionError
----------------------------- Captured stderr call -----------------------------
Traceback (most recent call last):
  File "cupy_backends/cuda/api/runtime.pyx", line 644, in cupy_backends.cuda.api.runtime.freeArray
    check_status(status)
  File "cupy_backends/cuda/api/runtime.pyx", line 265, in cupy_backends.cuda.api.runtime.check_status
    raise CUDARuntimeError(status)
cupy_backends.cuda.api.runtime.CUDARuntimeError: hipErrorUnknown: hipErrorUnknown
_ TestAffineTransformTextureMemory.test_affine_transform_texture_memory[_param_116_{mode='constant', order=1, output=None, output_shape=10, shape=(10, 20), theta=0}] _

self = <<cupyx_tests.scipy_tests.ndimage_tests.test_interpolation.TestAffineTransformTextureMemory object at 0x7fab39d46d00>  parameter: {'mode': 'constant', 'order': 1, 'output': None, 'output_shape': 10, 'shape': (10, 20), 'theta': 0}>
xp = <module 'cupy' from '/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.hXnTrEAC7u/cupy/cupy/__init__.py'>
scp = <module 'cupyx.scipy' from '/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.hXnTrEAC7u/cupy/cupyx/scipy/__init__.py'>

    @testing.numpy_cupy_allclose(atol=0.1, scipy_name='scp')
    def test_affine_transform_texture_memory(self, xp, scp):
        a = xp.ones(self.shape, dtype=xp.float32)
        center = numpy.divide(numpy.subtract(self.shape, 1), 2)
    
        if len(self.shape) == 2:
            matrix = self._2d_rotation_matrix(self.theta, center)
        elif len(self.shape) == 3:
            matrix = self._3d_rotation_matrix(self.theta, center)
        else:
            return pytest.xfail('Unsupported shape')
    
        if self.output == 'empty':
            output = xp.empty(self.shape, dtype=xp.float32)
            if self.output_shape:
                return pytest.skip('This combination is tested in '
                                   'test_invalid_texture_arguments')
        else:
            output = self.output
    
        if self.output_shape:
            output_shape = (self.output_shape, ) * len(self.shape)
        else:
            output_shape = self.output_shape
    
        if xp == cupy:
            m = cupyx.scipy.ndimage.affine_transform
            matrix = cupy.array(matrix)
>           return m(a, matrix, output_shape=output_shape,
                     output=output, order=self.order,
                     mode=self.mode, texture_memory=True)

tests/cupyx_tests/scipy_tests/ndimage_tests/test_interpolation.py:398: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
cupyx/scipy/ndimage/interpolation.py:376: in affine_transform
    return _texture.affine_transformation(data=input,
cupyx/_texture.py:168: in affine_transformation
    texture_object = _create_texture_object(data,
cupyx/_texture.py:98: in _create_texture_object
    array = texture.CUDAarray(texture_fmt, *data.shape[::-1])
cupy/cuda/texture.pyx:296: in cupy.cuda.texture.CUDAarray.__init__
    self.ptr = runtime.malloc3DArray(desc.ptr, width, height, depth,
cupy_backends/cuda/api/runtime.pyx:593: in cupy_backends.cuda.api.runtime.malloc3DArray
    check_status(status)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

>   raise CUDARuntimeError(status)
E   AssertionError: Only cupy raises error
E   
E   Traceback (most recent call last):
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.hXnTrEAC7u/cupy/cupy/testing/_helper.py", line 47, in _call_func
E       result = impl(self, *args, **kw)
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.hXnTrEAC7u/cupy/tests/cupyx_tests/scipy_tests/ndimage_tests/test_interpolation.py", line 398, in test_affine_transform_texture_memory
E       return m(a, matrix, output_shape=output_shape,
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.hXnTrEAC7u/cupy/cupyx/scipy/ndimage/interpolation.py", line 376, in affine_transform
E       return _texture.affine_transformation(data=input,
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.hXnTrEAC7u/cupy/cupyx/_texture.py", line 168, in affine_transformation
E       texture_object = _create_texture_object(data,
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.hXnTrEAC7u/cupy/cupyx/_texture.py", line 98, in _create_texture_object
E       array = texture.CUDAarray(texture_fmt, *data.shape[::-1])
E     File "cupy/cuda/texture.pyx", line 296, in cupy.cuda.texture.CUDAarray.__init__
E       self.ptr = runtime.malloc3DArray(desc.ptr, width, height, depth,
E     File "cupy_backends/cuda/api/runtime.pyx", line 593, in cupy_backends.cuda.api.runtime.malloc3DArray
E       check_status(status)
E     File "cupy_backends/cuda/api/runtime.pyx", line 265, in cupy_backends.cuda.api.runtime.check_status
E       raise CUDARuntimeError(status)
E   cupy_backends.cuda.api.runtime.CUDARuntimeError: hipErrorUnknown: hipErrorUnknown

cupy_backends/cuda/api/runtime.pyx:265: AssertionError
----------------------------- Captured stderr call -----------------------------
Traceback (most recent call last):
  File "cupy_backends/cuda/api/runtime.pyx", line 644, in cupy_backends.cuda.api.runtime.freeArray
    check_status(status)
  File "cupy_backends/cuda/api/runtime.pyx", line 265, in cupy_backends.cuda.api.runtime.check_status
    raise CUDARuntimeError(status)
cupy_backends.cuda.api.runtime.CUDARuntimeError: hipErrorUnknown: hipErrorUnknown
_ TestAffineTransformTextureMemory.test_affine_transform_texture_memory[_param_117_{mode='constant', order=1, output=None, output_shape=10, shape=(10, 20), theta=90}] _

self = <<cupyx_tests.scipy_tests.ndimage_tests.test_interpolation.TestAffineTransformTextureMemory object at 0x7fab387b6ee0>  parameter: {'mode': 'constant', 'order': 1, 'output': None, 'output_shape': 10, 'shape': (10, 20), 'theta': 90}>
xp = <module 'cupy' from '/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.hXnTrEAC7u/cupy/cupy/__init__.py'>
scp = <module 'cupyx.scipy' from '/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.hXnTrEAC7u/cupy/cupyx/scipy/__init__.py'>

    @testing.numpy_cupy_allclose(atol=0.1, scipy_name='scp')
    def test_affine_transform_texture_memory(self, xp, scp):
        a = xp.ones(self.shape, dtype=xp.float32)
        center = numpy.divide(numpy.subtract(self.shape, 1), 2)
    
        if len(self.shape) == 2:
            matrix = self._2d_rotation_matrix(self.theta, center)
        elif len(self.shape) == 3:
            matrix = self._3d_rotation_matrix(self.theta, center)
        else:
            return pytest.xfail('Unsupported shape')
    
        if self.output == 'empty':
            output = xp.empty(self.shape, dtype=xp.float32)
            if self.output_shape:
                return pytest.skip('This combination is tested in '
                                   'test_invalid_texture_arguments')
        else:
            output = self.output
    
        if self.output_shape:
            output_shape = (self.output_shape, ) * len(self.shape)
        else:
            output_shape = self.output_shape
    
        if xp == cupy:
            m = cupyx.scipy.ndimage.affine_transform
            matrix = cupy.array(matrix)
>           return m(a, matrix, output_shape=output_shape,
                     output=output, order=self.order,
                     mode=self.mode, texture_memory=True)

tests/cupyx_tests/scipy_tests/ndimage_tests/test_interpolation.py:398: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
cupyx/scipy/ndimage/interpolation.py:376: in affine_transform
    return _texture.affine_transformation(data=input,
cupyx/_texture.py:168: in affine_transformation
    texture_object = _create_texture_object(data,
cupyx/_texture.py:98: in _create_texture_object
    array = texture.CUDAarray(texture_fmt, *data.shape[::-1])
cupy/cuda/texture.pyx:296: in cupy.cuda.texture.CUDAarray.__init__
    self.ptr = runtime.malloc3DArray(desc.ptr, width, height, depth,
cupy_backends/cuda/api/runtime.pyx:593: in cupy_backends.cuda.api.runtime.malloc3DArray
    check_status(status)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

>   raise CUDARuntimeError(status)
E   AssertionError: Only cupy raises error
E   
E   Traceback (most recent call last):
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.hXnTrEAC7u/cupy/cupy/testing/_helper.py", line 47, in _call_func
E       result = impl(self, *args, **kw)
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.hXnTrEAC7u/cupy/tests/cupyx_tests/scipy_tests/ndimage_tests/test_interpolation.py", line 398, in test_affine_transform_texture_memory
E       return m(a, matrix, output_shape=output_shape,
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.hXnTrEAC7u/cupy/cupyx/scipy/ndimage/interpolation.py", line 376, in affine_transform
E       return _texture.affine_transformation(data=input,
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.hXnTrEAC7u/cupy/cupyx/_texture.py", line 168, in affine_transformation
E       texture_object = _create_texture_object(data,
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.hXnTrEAC7u/cupy/cupyx/_texture.py", line 98, in _create_texture_object
E       array = texture.CUDAarray(texture_fmt, *data.shape[::-1])
E     File "cupy/cuda/texture.pyx", line 296, in cupy.cuda.texture.CUDAarray.__init__
E       self.ptr = runtime.malloc3DArray(desc.ptr, width, height, depth,
E     File "cupy_backends/cuda/api/runtime.pyx", line 593, in cupy_backends.cuda.api.runtime.malloc3DArray
E       check_status(status)
E     File "cupy_backends/cuda/api/runtime.pyx", line 265, in cupy_backends.cuda.api.runtime.check_status
E       raise CUDARuntimeError(status)
E   cupy_backends.cuda.api.runtime.CUDARuntimeError: hipErrorUnknown: hipErrorUnknown

cupy_backends/cuda/api/runtime.pyx:265: AssertionError
----------------------------- Captured stderr call -----------------------------
Traceback (most recent call last):
  File "cupy_backends/cuda/api/runtime.pyx", line 644, in cupy_backends.cuda.api.runtime.freeArray
    check_status(status)
  File "cupy_backends/cuda/api/runtime.pyx", line 265, in cupy_backends.cuda.api.runtime.check_status
    raise CUDARuntimeError(status)
cupy_backends.cuda.api.runtime.CUDARuntimeError: hipErrorUnknown: hipErrorUnknown
_ TestAffineTransformTextureMemory.test_affine_transform_texture_memory[_param_118_{mode='constant', order=1, output=None, output_shape=10, shape=(10, 20), theta=180}] _

self = <<cupyx_tests.scipy_tests.ndimage_tests.test_interpolation.TestAffineTransformTextureMemory object at 0x7fab3714d7f0>  parameter: {'mode': 'constant', 'order': 1, 'output': None, 'output_shape': 10, 'shape': (10, 20), 'theta': 180}>
xp = <module 'cupy' from '/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.hXnTrEAC7u/cupy/cupy/__init__.py'>
scp = <module 'cupyx.scipy' from '/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.hXnTrEAC7u/cupy/cupyx/scipy/__init__.py'>

    @testing.numpy_cupy_allclose(atol=0.1, scipy_name='scp')
    def test_affine_transform_texture_memory(self, xp, scp):
        a = xp.ones(self.shape, dtype=xp.float32)
        center = numpy.divide(numpy.subtract(self.shape, 1), 2)
    
        if len(self.shape) == 2:
            matrix = self._2d_rotation_matrix(self.theta, center)
        elif len(self.shape) == 3:
            matrix = self._3d_rotation_matrix(self.theta, center)
        else:
            return pytest.xfail('Unsupported shape')
    
        if self.output == 'empty':
            output = xp.empty(self.shape, dtype=xp.float32)
            if self.output_shape:
                return pytest.skip('This combination is tested in '
                                   'test_invalid_texture_arguments')
        else:
            output = self.output
    
        if self.output_shape:
            output_shape = (self.output_shape, ) * len(self.shape)
        else:
            output_shape = self.output_shape
    
        if xp == cupy:
            m = cupyx.scipy.ndimage.affine_transform
            matrix = cupy.array(matrix)
>           return m(a, matrix, output_shape=output_shape,
                     output=output, order=self.order,
                     mode=self.mode, texture_memory=True)

tests/cupyx_tests/scipy_tests/ndimage_tests/test_interpolation.py:398: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
cupyx/scipy/ndimage/interpolation.py:376: in affine_transform
    return _texture.affine_transformation(data=input,
cupyx/_texture.py:168: in affine_transformation
    texture_object = _create_texture_object(data,
cupyx/_texture.py:98: in _create_texture_object
    array = texture.CUDAarray(texture_fmt, *data.shape[::-1])
cupy/cuda/texture.pyx:296: in cupy.cuda.texture.CUDAarray.__init__
    self.ptr = runtime.malloc3DArray(desc.ptr, width, height, depth,
cupy_backends/cuda/api/runtime.pyx:593: in cupy_backends.cuda.api.runtime.malloc3DArray
    check_status(status)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

>   raise CUDARuntimeError(status)
E   AssertionError: Only cupy raises error
E   
E   Traceback (most recent call last):
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.hXnTrEAC7u/cupy/cupy/testing/_helper.py", line 47, in _call_func
E       result = impl(self, *args, **kw)
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.hXnTrEAC7u/cupy/tests/cupyx_tests/scipy_tests/ndimage_tests/test_interpolation.py", line 398, in test_affine_transform_texture_memory
E       return m(a, matrix, output_shape=output_shape,
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.hXnTrEAC7u/cupy/cupyx/scipy/ndimage/interpolation.py", line 376, in affine_transform
E       return _texture.affine_transformation(data=input,
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.hXnTrEAC7u/cupy/cupyx/_texture.py", line 168, in affine_transformation
E       texture_object = _create_texture_object(data,
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.hXnTrEAC7u/cupy/cupyx/_texture.py", line 98, in _create_texture_object
E       array = texture.CUDAarray(texture_fmt, *data.shape[::-1])
E     File "cupy/cuda/texture.pyx", line 296, in cupy.cuda.texture.CUDAarray.__init__
E       self.ptr = runtime.malloc3DArray(desc.ptr, width, height, depth,
E     File "cupy_backends/cuda/api/runtime.pyx", line 593, in cupy_backends.cuda.api.runtime.malloc3DArray
E       check_status(status)
E     File "cupy_backends/cuda/api/runtime.pyx", line 265, in cupy_backends.cuda.api.runtime.check_status
E       raise CUDARuntimeError(status)
E   cupy_backends.cuda.api.runtime.CUDARuntimeError: hipErrorUnknown: hipErrorUnknown

cupy_backends/cuda/api/runtime.pyx:265: AssertionError
----------------------------- Captured stderr call -----------------------------
Traceback (most recent call last):
  File "cupy_backends/cuda/api/runtime.pyx", line 644, in cupy_backends.cuda.api.runtime.freeArray
    check_status(status)
  File "cupy_backends/cuda/api/runtime.pyx", line 265, in cupy_backends.cuda.api.runtime.check_status
    raise CUDARuntimeError(status)
cupy_backends.cuda.api.runtime.CUDARuntimeError: hipErrorUnknown: hipErrorUnknown
_ TestAffineTransformTextureMemory.test_affine_transform_texture_memory[_param_119_{mode='constant', order=1, output=None, output_shape=10, shape=(10, 20), theta=270}] _

self = <<cupyx_tests.scipy_tests.ndimage_tests.test_interpolation.TestAffineTransformTextureMemory object at 0x7fab3708f7c0>  parameter: {'mode': 'constant', 'order': 1, 'output': None, 'output_shape': 10, 'shape': (10, 20), 'theta': 270}>
xp = <module 'cupy' from '/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.hXnTrEAC7u/cupy/cupy/__init__.py'>
scp = <module 'cupyx.scipy' from '/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.hXnTrEAC7u/cupy/cupyx/scipy/__init__.py'>

    @testing.numpy_cupy_allclose(atol=0.1, scipy_name='scp')
    def test_affine_transform_texture_memory(self, xp, scp):
        a = xp.ones(self.shape, dtype=xp.float32)
        center = numpy.divide(numpy.subtract(self.shape, 1), 2)
    
        if len(self.shape) == 2:
            matrix = self._2d_rotation_matrix(self.theta, center)
        elif len(self.shape) == 3:
            matrix = self._3d_rotation_matrix(self.theta, center)
        else:
            return pytest.xfail('Unsupported shape')
    
        if self.output == 'empty':
            output = xp.empty(self.shape, dtype=xp.float32)
            if self.output_shape:
                return pytest.skip('This combination is tested in '
                                   'test_invalid_texture_arguments')
        else:
            output = self.output
    
        if self.output_shape:
            output_shape = (self.output_shape, ) * len(self.shape)
        else:
            output_shape = self.output_shape
    
        if xp == cupy:
            m = cupyx.scipy.ndimage.affine_transform
            matrix = cupy.array(matrix)
>           return m(a, matrix, output_shape=output_shape,
                     output=output, order=self.order,
                     mode=self.mode, texture_memory=True)

tests/cupyx_tests/scipy_tests/ndimage_tests/test_interpolation.py:398: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
cupyx/scipy/ndimage/interpolation.py:376: in affine_transform
    return _texture.affine_transformation(data=input,
cupyx/_texture.py:168: in affine_transformation
    texture_object = _create_texture_object(data,
cupyx/_texture.py:98: in _create_texture_object
    array = texture.CUDAarray(texture_fmt, *data.shape[::-1])
cupy/cuda/texture.pyx:296: in cupy.cuda.texture.CUDAarray.__init__
    self.ptr = runtime.malloc3DArray(desc.ptr, width, height, depth,
cupy_backends/cuda/api/runtime.pyx:593: in cupy_backends.cuda.api.runtime.malloc3DArray
    check_status(status)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

>   raise CUDARuntimeError(status)
E   AssertionError: Only cupy raises error
E   
E   Traceback (most recent call last):
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.hXnTrEAC7u/cupy/cupy/testing/_helper.py", line 47, in _call_func
E       result = impl(self, *args, **kw)
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.hXnTrEAC7u/cupy/tests/cupyx_tests/scipy_tests/ndimage_tests/test_interpolation.py", line 398, in test_affine_transform_texture_memory
E       return m(a, matrix, output_shape=output_shape,
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.hXnTrEAC7u/cupy/cupyx/scipy/ndimage/interpolation.py", line 376, in affine_transform
E       return _texture.affine_transformation(data=input,
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.hXnTrEAC7u/cupy/cupyx/_texture.py", line 168, in affine_transformation
E       texture_object = _create_texture_object(data,
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.hXnTrEAC7u/cupy/cupyx/_texture.py", line 98, in _create_texture_object
E       array = texture.CUDAarray(texture_fmt, *data.shape[::-1])
E     File "cupy/cuda/texture.pyx", line 296, in cupy.cuda.texture.CUDAarray.__init__
E       self.ptr = runtime.malloc3DArray(desc.ptr, width, height, depth,
E     File "cupy_backends/cuda/api/runtime.pyx", line 593, in cupy_backends.cuda.api.runtime.malloc3DArray
E       check_status(status)
E     File "cupy_backends/cuda/api/runtime.pyx", line 265, in cupy_backends.cuda.api.runtime.check_status
E       raise CUDARuntimeError(status)
E   cupy_backends.cuda.api.runtime.CUDARuntimeError: hipErrorUnknown: hipErrorUnknown

cupy_backends/cuda/api/runtime.pyx:265: AssertionError
----------------------------- Captured stderr call -----------------------------
Traceback (most recent call last):
  File "cupy_backends/cuda/api/runtime.pyx", line 644, in cupy_backends.cuda.api.runtime.freeArray
    check_status(status)
  File "cupy_backends/cuda/api/runtime.pyx", line 265, in cupy_backends.cuda.api.runtime.check_status
    raise CUDARuntimeError(status)
cupy_backends.cuda.api.runtime.CUDARuntimeError: hipErrorUnknown: hipErrorUnknown
_ TestAffineTransformTextureMemory.test_affine_transform_texture_memory[_param_120_{mode='constant', order=1, output=None, output_shape=10, shape=(10, 10, 10), theta=0}] _

self = <<cupyx_tests.scipy_tests.ndimage_tests.test_interpolation.TestAffineTransformTextureMemory object at 0x7fab370ce670>  parameter: {'mode': 'constant', 'order': 1, 'output': None, 'output_shape': 10, 'shape': (10, 10, 10), 'theta': 0}>
xp = <module 'cupy' from '/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.hXnTrEAC7u/cupy/cupy/__init__.py'>
scp = <module 'cupyx.scipy' from '/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.hXnTrEAC7u/cupy/cupyx/scipy/__init__.py'>

    @testing.numpy_cupy_allclose(atol=0.1, scipy_name='scp')
    def test_affine_transform_texture_memory(self, xp, scp):
        a = xp.ones(self.shape, dtype=xp.float32)
        center = numpy.divide(numpy.subtract(self.shape, 1), 2)
    
        if len(self.shape) == 2:
            matrix = self._2d_rotation_matrix(self.theta, center)
        elif len(self.shape) == 3:
            matrix = self._3d_rotation_matrix(self.theta, center)
        else:
            return pytest.xfail('Unsupported shape')
    
        if self.output == 'empty':
            output = xp.empty(self.shape, dtype=xp.float32)
            if self.output_shape:
                return pytest.skip('This combination is tested in '
                                   'test_invalid_texture_arguments')
        else:
            output = self.output
    
        if self.output_shape:
            output_shape = (self.output_shape, ) * len(self.shape)
        else:
            output_shape = self.output_shape
    
        if xp == cupy:
            m = cupyx.scipy.ndimage.affine_transform
            matrix = cupy.array(matrix)
>           return m(a, matrix, output_shape=output_shape,
                     output=output, order=self.order,
                     mode=self.mode, texture_memory=True)

tests/cupyx_tests/scipy_tests/ndimage_tests/test_interpolation.py:398: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
cupyx/scipy/ndimage/interpolation.py:376: in affine_transform
    return _texture.affine_transformation(data=input,
cupyx/_texture.py:168: in affine_transformation
    texture_object = _create_texture_object(data,
cupyx/_texture.py:98: in _create_texture_object
    array = texture.CUDAarray(texture_fmt, *data.shape[::-1])
cupy/cuda/texture.pyx:296: in cupy.cuda.texture.CUDAarray.__init__
    self.ptr = runtime.malloc3DArray(desc.ptr, width, height, depth,
cupy_backends/cuda/api/runtime.pyx:593: in cupy_backends.cuda.api.runtime.malloc3DArray
    check_status(status)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

>   raise CUDARuntimeError(status)
E   AssertionError: Only cupy raises error
E   
E   Traceback (most recent call last):
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.hXnTrEAC7u/cupy/cupy/testing/_helper.py", line 47, in _call_func
E       result = impl(self, *args, **kw)
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.hXnTrEAC7u/cupy/tests/cupyx_tests/scipy_tests/ndimage_tests/test_interpolation.py", line 398, in test_affine_transform_texture_memory
E       return m(a, matrix, output_shape=output_shape,
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.hXnTrEAC7u/cupy/cupyx/scipy/ndimage/interpolation.py", line 376, in affine_transform
E       return _texture.affine_transformation(data=input,
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.hXnTrEAC7u/cupy/cupyx/_texture.py", line 168, in affine_transformation
E       texture_object = _create_texture_object(data,
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.hXnTrEAC7u/cupy/cupyx/_texture.py", line 98, in _create_texture_object
E       array = texture.CUDAarray(texture_fmt, *data.shape[::-1])
E     File "cupy/cuda/texture.pyx", line 296, in cupy.cuda.texture.CUDAarray.__init__
E       self.ptr = runtime.malloc3DArray(desc.ptr, width, height, depth,
E     File "cupy_backends/cuda/api/runtime.pyx", line 593, in cupy_backends.cuda.api.runtime.malloc3DArray
E       check_status(status)
E     File "cupy_backends/cuda/api/runtime.pyx", line 265, in cupy_backends.cuda.api.runtime.check_status
E       raise CUDARuntimeError(status)
E   cupy_backends.cuda.api.runtime.CUDARuntimeError: hipErrorUnknown: hipErrorUnknown

cupy_backends/cuda/api/runtime.pyx:265: AssertionError
----------------------------- Captured stderr call -----------------------------
Traceback (most recent call last):
  File "cupy_backends/cuda/api/runtime.pyx", line 644, in cupy_backends.cuda.api.runtime.freeArray
    check_status(status)
  File "cupy_backends/cuda/api/runtime.pyx", line 265, in cupy_backends.cuda.api.runtime.check_status
    raise CUDARuntimeError(status)
cupy_backends.cuda.api.runtime.CUDARuntimeError: hipErrorUnknown: hipErrorUnknown
_ TestAffineTransformTextureMemory.test_affine_transform_texture_memory[_param_121_{mode='constant', order=1, output=None, output_shape=10, shape=(10, 10, 10), theta=90}] _

self = <<cupyx_tests.scipy_tests.ndimage_tests.test_interpolation.TestAffineTransformTextureMemory object at 0x7fab39a817c0>  parameter: {'mode': 'constant', 'order': 1, 'output': None, 'output_shape': 10, 'shape': (10, 10, 10), 'theta': 90}>
xp = <module 'cupy' from '/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.hXnTrEAC7u/cupy/cupy/__init__.py'>
scp = <module 'cupyx.scipy' from '/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.hXnTrEAC7u/cupy/cupyx/scipy/__init__.py'>

    @testing.numpy_cupy_allclose(atol=0.1, scipy_name='scp')
    def test_affine_transform_texture_memory(self, xp, scp):
        a = xp.ones(self.shape, dtype=xp.float32)
        center = numpy.divide(numpy.subtract(self.shape, 1), 2)
    
        if len(self.shape) == 2:
            matrix = self._2d_rotation_matrix(self.theta, center)
        elif len(self.shape) == 3:
            matrix = self._3d_rotation_matrix(self.theta, center)
        else:
            return pytest.xfail('Unsupported shape')
    
        if self.output == 'empty':
            output = xp.empty(self.shape, dtype=xp.float32)
            if self.output_shape:
                return pytest.skip('This combination is tested in '
                                   'test_invalid_texture_arguments')
        else:
            output = self.output
    
        if self.output_shape:
            output_shape = (self.output_shape, ) * len(self.shape)
        else:
            output_shape = self.output_shape
    
        if xp == cupy:
            m = cupyx.scipy.ndimage.affine_transform
            matrix = cupy.array(matrix)
>           return m(a, matrix, output_shape=output_shape,
                     output=output, order=self.order,
                     mode=self.mode, texture_memory=True)

tests/cupyx_tests/scipy_tests/ndimage_tests/test_interpolation.py:398: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
cupyx/scipy/ndimage/interpolation.py:376: in affine_transform
    return _texture.affine_transformation(data=input,
cupyx/_texture.py:168: in affine_transformation
    texture_object = _create_texture_object(data,
cupyx/_texture.py:98: in _create_texture_object
    array = texture.CUDAarray(texture_fmt, *data.shape[::-1])
cupy/cuda/texture.pyx:296: in cupy.cuda.texture.CUDAarray.__init__
    self.ptr = runtime.malloc3DArray(desc.ptr, width, height, depth,
cupy_backends/cuda/api/runtime.pyx:593: in cupy_backends.cuda.api.runtime.malloc3DArray
    check_status(status)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

>   raise CUDARuntimeError(status)
E   AssertionError: Only cupy raises error
E   
E   Traceback (most recent call last):
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.hXnTrEAC7u/cupy/cupy/testing/_helper.py", line 47, in _call_func
E       result = impl(self, *args, **kw)
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.hXnTrEAC7u/cupy/tests/cupyx_tests/scipy_tests/ndimage_tests/test_interpolation.py", line 398, in test_affine_transform_texture_memory
E       return m(a, matrix, output_shape=output_shape,
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.hXnTrEAC7u/cupy/cupyx/scipy/ndimage/interpolation.py", line 376, in affine_transform
E       return _texture.affine_transformation(data=input,
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.hXnTrEAC7u/cupy/cupyx/_texture.py", line 168, in affine_transformation
E       texture_object = _create_texture_object(data,
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.hXnTrEAC7u/cupy/cupyx/_texture.py", line 98, in _create_texture_object
E       array = texture.CUDAarray(texture_fmt, *data.shape[::-1])
E     File "cupy/cuda/texture.pyx", line 296, in cupy.cuda.texture.CUDAarray.__init__
E       self.ptr = runtime.malloc3DArray(desc.ptr, width, height, depth,
E     File "cupy_backends/cuda/api/runtime.pyx", line 593, in cupy_backends.cuda.api.runtime.malloc3DArray
E       check_status(status)
E     File "cupy_backends/cuda/api/runtime.pyx", line 265, in cupy_backends.cuda.api.runtime.check_status
E       raise CUDARuntimeError(status)
E   cupy_backends.cuda.api.runtime.CUDARuntimeError: hipErrorUnknown: hipErrorUnknown

cupy_backends/cuda/api/runtime.pyx:265: AssertionError
----------------------------- Captured stderr call -----------------------------
Traceback (most recent call last):
  File "cupy_backends/cuda/api/runtime.pyx", line 644, in cupy_backends.cuda.api.runtime.freeArray
    check_status(status)
  File "cupy_backends/cuda/api/runtime.pyx", line 265, in cupy_backends.cuda.api.runtime.check_status
    raise CUDARuntimeError(status)
cupy_backends.cuda.api.runtime.CUDARuntimeError: hipErrorUnknown: hipErrorUnknown
_ TestAffineTransformTextureMemory.test_affine_transform_texture_memory[_param_122_{mode='constant', order=1, output=None, output_shape=10, shape=(10, 10, 10), theta=180}] _

self = <<cupyx_tests.scipy_tests.ndimage_tests.test_interpolation.TestAffineTransformTextureMemory object at 0x7fab39dc3e50>  parameter: {'mode': 'constant', 'order': 1, 'output': None, 'output_shape': 10, 'shape': (10, 10, 10), 'theta': 180}>
xp = <module 'cupy' from '/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.hXnTrEAC7u/cupy/cupy/__init__.py'>
scp = <module 'cupyx.scipy' from '/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.hXnTrEAC7u/cupy/cupyx/scipy/__init__.py'>

    @testing.numpy_cupy_allclose(atol=0.1, scipy_name='scp')
    def test_affine_transform_texture_memory(self, xp, scp):
        a = xp.ones(self.shape, dtype=xp.float32)
        center = numpy.divide(numpy.subtract(self.shape, 1), 2)
    
        if len(self.shape) == 2:
            matrix = self._2d_rotation_matrix(self.theta, center)
        elif len(self.shape) == 3:
            matrix = self._3d_rotation_matrix(self.theta, center)
        else:
            return pytest.xfail('Unsupported shape')
    
        if self.output == 'empty':
            output = xp.empty(self.shape, dtype=xp.float32)
            if self.output_shape:
                return pytest.skip('This combination is tested in '
                                   'test_invalid_texture_arguments')
        else:
            output = self.output
    
        if self.output_shape:
            output_shape = (self.output_shape, ) * len(self.shape)
        else:
            output_shape = self.output_shape
    
        if xp == cupy:
            m = cupyx.scipy.ndimage.affine_transform
            matrix = cupy.array(matrix)
>           return m(a, matrix, output_shape=output_shape,
                     output=output, order=self.order,
                     mode=self.mode, texture_memory=True)

tests/cupyx_tests/scipy_tests/ndimage_tests/test_interpolation.py:398: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
cupyx/scipy/ndimage/interpolation.py:376: in affine_transform
    return _texture.affine_transformation(data=input,
cupyx/_texture.py:168: in affine_transformation
    texture_object = _create_texture_object(data,
cupyx/_texture.py:98: in _create_texture_object
    array = texture.CUDAarray(texture_fmt, *data.shape[::-1])
cupy/cuda/texture.pyx:296: in cupy.cuda.texture.CUDAarray.__init__
    self.ptr = runtime.malloc3DArray(desc.ptr, width, height, depth,
cupy_backends/cuda/api/runtime.pyx:593: in cupy_backends.cuda.api.runtime.malloc3DArray
    check_status(status)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

>   raise CUDARuntimeError(status)
E   AssertionError: Only cupy raises error
E   
E   Traceback (most recent call last):
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.hXnTrEAC7u/cupy/cupy/testing/_helper.py", line 47, in _call_func
E       result = impl(self, *args, **kw)
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.hXnTrEAC7u/cupy/tests/cupyx_tests/scipy_tests/ndimage_tests/test_interpolation.py", line 398, in test_affine_transform_texture_memory
E       return m(a, matrix, output_shape=output_shape,
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.hXnTrEAC7u/cupy/cupyx/scipy/ndimage/interpolation.py", line 376, in affine_transform
E       return _texture.affine_transformation(data=input,
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.hXnTrEAC7u/cupy/cupyx/_texture.py", line 168, in affine_transformation
E       texture_object = _create_texture_object(data,
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.hXnTrEAC7u/cupy/cupyx/_texture.py", line 98, in _create_texture_object
E       array = texture.CUDAarray(texture_fmt, *data.shape[::-1])
E     File "cupy/cuda/texture.pyx", line 296, in cupy.cuda.texture.CUDAarray.__init__
E       self.ptr = runtime.malloc3DArray(desc.ptr, width, height, depth,
E     File "cupy_backends/cuda/api/runtime.pyx", line 593, in cupy_backends.cuda.api.runtime.malloc3DArray
E       check_status(status)
E     File "cupy_backends/cuda/api/runtime.pyx", line 265, in cupy_backends.cuda.api.runtime.check_status
E       raise CUDARuntimeError(status)
E   cupy_backends.cuda.api.runtime.CUDARuntimeError: hipErrorUnknown: hipErrorUnknown

cupy_backends/cuda/api/runtime.pyx:265: AssertionError
----------------------------- Captured stderr call -----------------------------
Traceback (most recent call last):
  File "cupy_backends/cuda/api/runtime.pyx", line 644, in cupy_backends.cuda.api.runtime.freeArray
    check_status(status)
  File "cupy_backends/cuda/api/runtime.pyx", line 265, in cupy_backends.cuda.api.runtime.check_status
    raise CUDARuntimeError(status)
cupy_backends.cuda.api.runtime.CUDARuntimeError: hipErrorUnknown: hipErrorUnknown
_ TestAffineTransformTextureMemory.test_affine_transform_texture_memory[_param_123_{mode='constant', order=1, output=None, output_shape=10, shape=(10, 10, 10), theta=270}] _

self = <<cupyx_tests.scipy_tests.ndimage_tests.test_interpolation.TestAffineTransformTextureMemory object at 0x7fab372298e0>  parameter: {'mode': 'constant', 'order': 1, 'output': None, 'output_shape': 10, 'shape': (10, 10, 10), 'theta': 270}>
xp = <module 'cupy' from '/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.hXnTrEAC7u/cupy/cupy/__init__.py'>
scp = <module 'cupyx.scipy' from '/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.hXnTrEAC7u/cupy/cupyx/scipy/__init__.py'>

    @testing.numpy_cupy_allclose(atol=0.1, scipy_name='scp')
    def test_affine_transform_texture_memory(self, xp, scp):
        a = xp.ones(self.shape, dtype=xp.float32)
        center = numpy.divide(numpy.subtract(self.shape, 1), 2)
    
        if len(self.shape) == 2:
            matrix = self._2d_rotation_matrix(self.theta, center)
        elif len(self.shape) == 3:
            matrix = self._3d_rotation_matrix(self.theta, center)
        else:
            return pytest.xfail('Unsupported shape')
    
        if self.output == 'empty':
            output = xp.empty(self.shape, dtype=xp.float32)
            if self.output_shape:
                return pytest.skip('This combination is tested in '
                                   'test_invalid_texture_arguments')
        else:
            output = self.output
    
        if self.output_shape:
            output_shape = (self.output_shape, ) * len(self.shape)
        else:
            output_shape = self.output_shape
    
        if xp == cupy:
            m = cupyx.scipy.ndimage.affine_transform
            matrix = cupy.array(matrix)
>           return m(a, matrix, output_shape=output_shape,
                     output=output, order=self.order,
                     mode=self.mode, texture_memory=True)

tests/cupyx_tests/scipy_tests/ndimage_tests/test_interpolation.py:398: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
cupyx/scipy/ndimage/interpolation.py:376: in affine_transform
    return _texture.affine_transformation(data=input,
cupyx/_texture.py:168: in affine_transformation
    texture_object = _create_texture_object(data,
cupyx/_texture.py:98: in _create_texture_object
    array = texture.CUDAarray(texture_fmt, *data.shape[::-1])
cupy/cuda/texture.pyx:296: in cupy.cuda.texture.CUDAarray.__init__
    self.ptr = runtime.malloc3DArray(desc.ptr, width, height, depth,
cupy_backends/cuda/api/runtime.pyx:593: in cupy_backends.cuda.api.runtime.malloc3DArray
    check_status(status)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

>   raise CUDARuntimeError(status)
E   AssertionError: Only cupy raises error
E   
E   Traceback (most recent call last):
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.hXnTrEAC7u/cupy/cupy/testing/_helper.py", line 47, in _call_func
E       result = impl(self, *args, **kw)
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.hXnTrEAC7u/cupy/tests/cupyx_tests/scipy_tests/ndimage_tests/test_interpolation.py", line 398, in test_affine_transform_texture_memory
E       return m(a, matrix, output_shape=output_shape,
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.hXnTrEAC7u/cupy/cupyx/scipy/ndimage/interpolation.py", line 376, in affine_transform
E       return _texture.affine_transformation(data=input,
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.hXnTrEAC7u/cupy/cupyx/_texture.py", line 168, in affine_transformation
E       texture_object = _create_texture_object(data,
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.hXnTrEAC7u/cupy/cupyx/_texture.py", line 98, in _create_texture_object
E       array = texture.CUDAarray(texture_fmt, *data.shape[::-1])
E     File "cupy/cuda/texture.pyx", line 296, in cupy.cuda.texture.CUDAarray.__init__
E       self.ptr = runtime.malloc3DArray(desc.ptr, width, height, depth,
E     File "cupy_backends/cuda/api/runtime.pyx", line 593, in cupy_backends.cuda.api.runtime.malloc3DArray
E       check_status(status)
E     File "cupy_backends/cuda/api/runtime.pyx", line 265, in cupy_backends.cuda.api.runtime.check_status
E       raise CUDARuntimeError(status)
E   cupy_backends.cuda.api.runtime.CUDARuntimeError: hipErrorUnknown: hipErrorUnknown

cupy_backends/cuda/api/runtime.pyx:265: AssertionError
----------------------------- Captured stderr call -----------------------------
Traceback (most recent call last):
  File "cupy_backends/cuda/api/runtime.pyx", line 644, in cupy_backends.cuda.api.runtime.freeArray
    check_status(status)
  File "cupy_backends/cuda/api/runtime.pyx", line 265, in cupy_backends.cuda.api.runtime.check_status
    raise CUDARuntimeError(status)
cupy_backends.cuda.api.runtime.CUDARuntimeError: hipErrorUnknown: hipErrorUnknown
_ TestAffineTransformTextureMemory.test_affine_transform_texture_memory[_param_124_{mode='constant', order=1, output=None, output_shape=10, shape=(10, 20, 30), theta=0}] _

self = <<cupyx_tests.scipy_tests.ndimage_tests.test_interpolation.TestAffineTransformTextureMemory object at 0x7fac514eee50>  parameter: {'mode': 'constant', 'order': 1, 'output': None, 'output_shape': 10, 'shape': (10, 20, 30), 'theta': 0}>
xp = <module 'cupy' from '/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.hXnTrEAC7u/cupy/cupy/__init__.py'>
scp = <module 'cupyx.scipy' from '/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.hXnTrEAC7u/cupy/cupyx/scipy/__init__.py'>

    @testing.numpy_cupy_allclose(atol=0.1, scipy_name='scp')
    def test_affine_transform_texture_memory(self, xp, scp):
        a = xp.ones(self.shape, dtype=xp.float32)
        center = numpy.divide(numpy.subtract(self.shape, 1), 2)
    
        if len(self.shape) == 2:
            matrix = self._2d_rotation_matrix(self.theta, center)
        elif len(self.shape) == 3:
            matrix = self._3d_rotation_matrix(self.theta, center)
        else:
            return pytest.xfail('Unsupported shape')
    
        if self.output == 'empty':
            output = xp.empty(self.shape, dtype=xp.float32)
            if self.output_shape:
                return pytest.skip('This combination is tested in '
                                   'test_invalid_texture_arguments')
        else:
            output = self.output
    
        if self.output_shape:
            output_shape = (self.output_shape, ) * len(self.shape)
        else:
            output_shape = self.output_shape
    
        if xp == cupy:
            m = cupyx.scipy.ndimage.affine_transform
            matrix = cupy.array(matrix)
>           return m(a, matrix, output_shape=output_shape,
                     output=output, order=self.order,
                     mode=self.mode, texture_memory=True)

tests/cupyx_tests/scipy_tests/ndimage_tests/test_interpolation.py:398: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
cupyx/scipy/ndimage/interpolation.py:376: in affine_transform
    return _texture.affine_transformation(data=input,
cupyx/_texture.py:168: in affine_transformation
    texture_object = _create_texture_object(data,
cupyx/_texture.py:98: in _create_texture_object
    array = texture.CUDAarray(texture_fmt, *data.shape[::-1])
cupy/cuda/texture.pyx:296: in cupy.cuda.texture.CUDAarray.__init__
    self.ptr = runtime.malloc3DArray(desc.ptr, width, height, depth,
cupy_backends/cuda/api/runtime.pyx:593: in cupy_backends.cuda.api.runtime.malloc3DArray
    check_status(status)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

>   raise CUDARuntimeError(status)
E   AssertionError: Only cupy raises error
E   
E   Traceback (most recent call last):
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.hXnTrEAC7u/cupy/cupy/testing/_helper.py", line 47, in _call_func
E       result = impl(self, *args, **kw)
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.hXnTrEAC7u/cupy/tests/cupyx_tests/scipy_tests/ndimage_tests/test_interpolation.py", line 398, in test_affine_transform_texture_memory
E       return m(a, matrix, output_shape=output_shape,
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.hXnTrEAC7u/cupy/cupyx/scipy/ndimage/interpolation.py", line 376, in affine_transform
E       return _texture.affine_transformation(data=input,
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.hXnTrEAC7u/cupy/cupyx/_texture.py", line 168, in affine_transformation
E       texture_object = _create_texture_object(data,
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.hXnTrEAC7u/cupy/cupyx/_texture.py", line 98, in _create_texture_object
E       array = texture.CUDAarray(texture_fmt, *data.shape[::-1])
E     File "cupy/cuda/texture.pyx", line 296, in cupy.cuda.texture.CUDAarray.__init__
E       self.ptr = runtime.malloc3DArray(desc.ptr, width, height, depth,
E     File "cupy_backends/cuda/api/runtime.pyx", line 593, in cupy_backends.cuda.api.runtime.malloc3DArray
E       check_status(status)
E     File "cupy_backends/cuda/api/runtime.pyx", line 265, in cupy_backends.cuda.api.runtime.check_status
E       raise CUDARuntimeError(status)
E   cupy_backends.cuda.api.runtime.CUDARuntimeError: hipErrorUnknown: hipErrorUnknown

cupy_backends/cuda/api/runtime.pyx:265: AssertionError
----------------------------- Captured stderr call -----------------------------
Traceback (most recent call last):
  File "cupy_backends/cuda/api/runtime.pyx", line 644, in cupy_backends.cuda.api.runtime.freeArray
    check_status(status)
  File "cupy_backends/cuda/api/runtime.pyx", line 265, in cupy_backends.cuda.api.runtime.check_status
    raise CUDARuntimeError(status)
cupy_backends.cuda.api.runtime.CUDARuntimeError: hipErrorUnknown: hipErrorUnknown
_ TestAffineTransformTextureMemory.test_affine_transform_texture_memory[_param_125_{mode='constant', order=1, output=None, output_shape=10, shape=(10, 20, 30), theta=90}] _

self = <<cupyx_tests.scipy_tests.ndimage_tests.test_interpolation.TestAffineTransformTextureMemory object at 0x7fab371bf3a0>  parameter: {'mode': 'constant', 'order': 1, 'output': None, 'output_shape': 10, 'shape': (10, 20, 30), 'theta': 90}>
xp = <module 'cupy' from '/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.hXnTrEAC7u/cupy/cupy/__init__.py'>
scp = <module 'cupyx.scipy' from '/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.hXnTrEAC7u/cupy/cupyx/scipy/__init__.py'>

    @testing.numpy_cupy_allclose(atol=0.1, scipy_name='scp')
    def test_affine_transform_texture_memory(self, xp, scp):
        a = xp.ones(self.shape, dtype=xp.float32)
        center = numpy.divide(numpy.subtract(self.shape, 1), 2)
    
        if len(self.shape) == 2:
            matrix = self._2d_rotation_matrix(self.theta, center)
        elif len(self.shape) == 3:
            matrix = self._3d_rotation_matrix(self.theta, center)
        else:
            return pytest.xfail('Unsupported shape')
    
        if self.output == 'empty':
            output = xp.empty(self.shape, dtype=xp.float32)
            if self.output_shape:
                return pytest.skip('This combination is tested in '
                                   'test_invalid_texture_arguments')
        else:
            output = self.output
    
        if self.output_shape:
            output_shape = (self.output_shape, ) * len(self.shape)
        else:
            output_shape = self.output_shape
    
        if xp == cupy:
            m = cupyx.scipy.ndimage.affine_transform
            matrix = cupy.array(matrix)
>           return m(a, matrix, output_shape=output_shape,
                     output=output, order=self.order,
                     mode=self.mode, texture_memory=True)

tests/cupyx_tests/scipy_tests/ndimage_tests/test_interpolation.py:398: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
cupyx/scipy/ndimage/interpolation.py:376: in affine_transform
    return _texture.affine_transformation(data=input,
cupyx/_texture.py:168: in affine_transformation
    texture_object = _create_texture_object(data,
cupyx/_texture.py:98: in _create_texture_object
    array = texture.CUDAarray(texture_fmt, *data.shape[::-1])
cupy/cuda/texture.pyx:296: in cupy.cuda.texture.CUDAarray.__init__
    self.ptr = runtime.malloc3DArray(desc.ptr, width, height, depth,
cupy_backends/cuda/api/runtime.pyx:593: in cupy_backends.cuda.api.runtime.malloc3DArray
    check_status(status)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

>   raise CUDARuntimeError(status)
E   AssertionError: Only cupy raises error
E   
E   Traceback (most recent call last):
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.hXnTrEAC7u/cupy/cupy/testing/_helper.py", line 47, in _call_func
E       result = impl(self, *args, **kw)
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.hXnTrEAC7u/cupy/tests/cupyx_tests/scipy_tests/ndimage_tests/test_interpolation.py", line 398, in test_affine_transform_texture_memory
E       return m(a, matrix, output_shape=output_shape,
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.hXnTrEAC7u/cupy/cupyx/scipy/ndimage/interpolation.py", line 376, in affine_transform
E       return _texture.affine_transformation(data=input,
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.hXnTrEAC7u/cupy/cupyx/_texture.py", line 168, in affine_transformation
E       texture_object = _create_texture_object(data,
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.hXnTrEAC7u/cupy/cupyx/_texture.py", line 98, in _create_texture_object
E       array = texture.CUDAarray(texture_fmt, *data.shape[::-1])
E     File "cupy/cuda/texture.pyx", line 296, in cupy.cuda.texture.CUDAarray.__init__
E       self.ptr = runtime.malloc3DArray(desc.ptr, width, height, depth,
E     File "cupy_backends/cuda/api/runtime.pyx", line 593, in cupy_backends.cuda.api.runtime.malloc3DArray
E       check_status(status)
E     File "cupy_backends/cuda/api/runtime.pyx", line 265, in cupy_backends.cuda.api.runtime.check_status
E       raise CUDARuntimeError(status)
E   cupy_backends.cuda.api.runtime.CUDARuntimeError: hipErrorUnknown: hipErrorUnknown

cupy_backends/cuda/api/runtime.pyx:265: AssertionError
----------------------------- Captured stderr call -----------------------------
Traceback (most recent call last):
  File "cupy_backends/cuda/api/runtime.pyx", line 644, in cupy_backends.cuda.api.runtime.freeArray
    check_status(status)
  File "cupy_backends/cuda/api/runtime.pyx", line 265, in cupy_backends.cuda.api.runtime.check_status
    raise CUDARuntimeError(status)
cupy_backends.cuda.api.runtime.CUDARuntimeError: hipErrorUnknown: hipErrorUnknown
_ TestAffineTransformTextureMemory.test_affine_transform_texture_memory[_param_126_{mode='constant', order=1, output=None, output_shape=10, shape=(10, 20, 30), theta=180}] _

self = <<cupyx_tests.scipy_tests.ndimage_tests.test_interpolation.TestAffineTransformTextureMemory object at 0x7fab39757be0>  parameter: {'mode': 'constant', 'order': 1, 'output': None, 'output_shape': 10, 'shape': (10, 20, 30), 'theta': 180}>
xp = <module 'cupy' from '/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.hXnTrEAC7u/cupy/cupy/__init__.py'>
scp = <module 'cupyx.scipy' from '/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.hXnTrEAC7u/cupy/cupyx/scipy/__init__.py'>

    @testing.numpy_cupy_allclose(atol=0.1, scipy_name='scp')
    def test_affine_transform_texture_memory(self, xp, scp):
        a = xp.ones(self.shape, dtype=xp.float32)
        center = numpy.divide(numpy.subtract(self.shape, 1), 2)
    
        if len(self.shape) == 2:
            matrix = self._2d_rotation_matrix(self.theta, center)
        elif len(self.shape) == 3:
            matrix = self._3d_rotation_matrix(self.theta, center)
        else:
            return pytest.xfail('Unsupported shape')
    
        if self.output == 'empty':
            output = xp.empty(self.shape, dtype=xp.float32)
            if self.output_shape:
                return pytest.skip('This combination is tested in '
                                   'test_invalid_texture_arguments')
        else:
            output = self.output
    
        if self.output_shape:
            output_shape = (self.output_shape, ) * len(self.shape)
        else:
            output_shape = self.output_shape
    
        if xp == cupy:
            m = cupyx.scipy.ndimage.affine_transform
            matrix = cupy.array(matrix)
>           return m(a, matrix, output_shape=output_shape,
                     output=output, order=self.order,
                     mode=self.mode, texture_memory=True)

tests/cupyx_tests/scipy_tests/ndimage_tests/test_interpolation.py:398: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
cupyx/scipy/ndimage/interpolation.py:376: in affine_transform
    return _texture.affine_transformation(data=input,
cupyx/_texture.py:168: in affine_transformation
    texture_object = _create_texture_object(data,
cupyx/_texture.py:98: in _create_texture_object
    array = texture.CUDAarray(texture_fmt, *data.shape[::-1])
cupy/cuda/texture.pyx:296: in cupy.cuda.texture.CUDAarray.__init__
    self.ptr = runtime.malloc3DArray(desc.ptr, width, height, depth,
cupy_backends/cuda/api/runtime.pyx:593: in cupy_backends.cuda.api.runtime.malloc3DArray
    check_status(status)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

>   raise CUDARuntimeError(status)
E   AssertionError: Only cupy raises error
E   
E   Traceback (most recent call last):
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.hXnTrEAC7u/cupy/cupy/testing/_helper.py", line 47, in _call_func
E       result = impl(self, *args, **kw)
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.hXnTrEAC7u/cupy/tests/cupyx_tests/scipy_tests/ndimage_tests/test_interpolation.py", line 398, in test_affine_transform_texture_memory
E       return m(a, matrix, output_shape=output_shape,
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.hXnTrEAC7u/cupy/cupyx/scipy/ndimage/interpolation.py", line 376, in affine_transform
E       return _texture.affine_transformation(data=input,
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.hXnTrEAC7u/cupy/cupyx/_texture.py", line 168, in affine_transformation
E       texture_object = _create_texture_object(data,
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.hXnTrEAC7u/cupy/cupyx/_texture.py", line 98, in _create_texture_object
E       array = texture.CUDAarray(texture_fmt, *data.shape[::-1])
E     File "cupy/cuda/texture.pyx", line 296, in cupy.cuda.texture.CUDAarray.__init__
E       self.ptr = runtime.malloc3DArray(desc.ptr, width, height, depth,
E     File "cupy_backends/cuda/api/runtime.pyx", line 593, in cupy_backends.cuda.api.runtime.malloc3DArray
E       check_status(status)
E     File "cupy_backends/cuda/api/runtime.pyx", line 265, in cupy_backends.cuda.api.runtime.check_status
E       raise CUDARuntimeError(status)
E   cupy_backends.cuda.api.runtime.CUDARuntimeError: hipErrorUnknown: hipErrorUnknown

cupy_backends/cuda/api/runtime.pyx:265: AssertionError
----------------------------- Captured stderr call -----------------------------
Traceback (most recent call last):
  File "cupy_backends/cuda/api/runtime.pyx", line 644, in cupy_backends.cuda.api.runtime.freeArray
    check_status(status)
  File "cupy_backends/cuda/api/runtime.pyx", line 265, in cupy_backends.cuda.api.runtime.check_status
    raise CUDARuntimeError(status)
cupy_backends.cuda.api.runtime.CUDARuntimeError: hipErrorUnknown: hipErrorUnknown
_ TestAffineTransformTextureMemory.test_affine_transform_texture_memory[_param_127_{mode='constant', order=1, output=None, output_shape=10, shape=(10, 20, 30), theta=270}] _

self = <<cupyx_tests.scipy_tests.ndimage_tests.test_interpolation.TestAffineTransformTextureMemory object at 0x7fac515319d0>  parameter: {'mode': 'constant', 'order': 1, 'output': None, 'output_shape': 10, 'shape': (10, 20, 30), 'theta': 270}>
xp = <module 'cupy' from '/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.hXnTrEAC7u/cupy/cupy/__init__.py'>
scp = <module 'cupyx.scipy' from '/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.hXnTrEAC7u/cupy/cupyx/scipy/__init__.py'>

    @testing.numpy_cupy_allclose(atol=0.1, scipy_name='scp')
    def test_affine_transform_texture_memory(self, xp, scp):
        a = xp.ones(self.shape, dtype=xp.float32)
        center = numpy.divide(numpy.subtract(self.shape, 1), 2)
    
        if len(self.shape) == 2:
            matrix = self._2d_rotation_matrix(self.theta, center)
        elif len(self.shape) == 3:
            matrix = self._3d_rotation_matrix(self.theta, center)
        else:
            return pytest.xfail('Unsupported shape')
    
        if self.output == 'empty':
            output = xp.empty(self.shape, dtype=xp.float32)
            if self.output_shape:
                return pytest.skip('This combination is tested in '
                                   'test_invalid_texture_arguments')
        else:
            output = self.output
    
        if self.output_shape:
            output_shape = (self.output_shape, ) * len(self.shape)
        else:
            output_shape = self.output_shape
    
        if xp == cupy:
            m = cupyx.scipy.ndimage.affine_transform
            matrix = cupy.array(matrix)
>           return m(a, matrix, output_shape=output_shape,
                     output=output, order=self.order,
                     mode=self.mode, texture_memory=True)

tests/cupyx_tests/scipy_tests/ndimage_tests/test_interpolation.py:398: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
cupyx/scipy/ndimage/interpolation.py:376: in affine_transform
    return _texture.affine_transformation(data=input,
cupyx/_texture.py:168: in affine_transformation
    texture_object = _create_texture_object(data,
cupyx/_texture.py:98: in _create_texture_object
    array = texture.CUDAarray(texture_fmt, *data.shape[::-1])
cupy/cuda/texture.pyx:296: in cupy.cuda.texture.CUDAarray.__init__
    self.ptr = runtime.malloc3DArray(desc.ptr, width, height, depth,
cupy_backends/cuda/api/runtime.pyx:593: in cupy_backends.cuda.api.runtime.malloc3DArray
    check_status(status)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

>   raise CUDARuntimeError(status)
E   AssertionError: Only cupy raises error
E   
E   Traceback (most recent call last):
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.hXnTrEAC7u/cupy/cupy/testing/_helper.py", line 47, in _call_func
E       result = impl(self, *args, **kw)
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.hXnTrEAC7u/cupy/tests/cupyx_tests/scipy_tests/ndimage_tests/test_interpolation.py", line 398, in test_affine_transform_texture_memory
E       return m(a, matrix, output_shape=output_shape,
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.hXnTrEAC7u/cupy/cupyx/scipy/ndimage/interpolation.py", line 376, in affine_transform
E       return _texture.affine_transformation(data=input,
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.hXnTrEAC7u/cupy/cupyx/_texture.py", line 168, in affine_transformation
E       texture_object = _create_texture_object(data,
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.hXnTrEAC7u/cupy/cupyx/_texture.py", line 98, in _create_texture_object
E       array = texture.CUDAarray(texture_fmt, *data.shape[::-1])
E     File "cupy/cuda/texture.pyx", line 296, in cupy.cuda.texture.CUDAarray.__init__
E       self.ptr = runtime.malloc3DArray(desc.ptr, width, height, depth,
E     File "cupy_backends/cuda/api/runtime.pyx", line 593, in cupy_backends.cuda.api.runtime.malloc3DArray
E       check_status(status)
E     File "cupy_backends/cuda/api/runtime.pyx", line 265, in cupy_backends.cuda.api.runtime.check_status
E       raise CUDARuntimeError(status)
E   cupy_backends.cuda.api.runtime.CUDARuntimeError: hipErrorUnknown: hipErrorUnknown

cupy_backends/cuda/api/runtime.pyx:265: AssertionError
----------------------------- Captured stderr call -----------------------------
Traceback (most recent call last):
  File "cupy_backends/cuda/api/runtime.pyx", line 644, in cupy_backends.cuda.api.runtime.freeArray
    check_status(status)
  File "cupy_backends/cuda/api/runtime.pyx", line 265, in cupy_backends.cuda.api.runtime.check_status
    raise CUDARuntimeError(status)
cupy_backends.cuda.api.runtime.CUDARuntimeError: hipErrorUnknown: hipErrorUnknown
_ TestAffineTransformTextureMemory.test_affine_transform_texture_memory[_param_128_{mode='constant', order=1, output=float32, output_shape=None, shape=(100, 100), theta=0}] _

self = <<cupyx_tests.scipy_tests.ndimage_tests.test_interpolation.TestAffineTransformTextureMemory object at 0x7fab371dd8b0> ...de': 'constant', 'order': 1, 'output': <class 'numpy.float32'>, 'output_shape': None, 'shape': (100, 100), 'theta': 0}>
xp = <module 'cupy' from '/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.hXnTrEAC7u/cupy/cupy/__init__.py'>
scp = <module 'cupyx.scipy' from '/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.hXnTrEAC7u/cupy/cupyx/scipy/__init__.py'>

    @testing.numpy_cupy_allclose(atol=0.1, scipy_name='scp')
    def test_affine_transform_texture_memory(self, xp, scp):
        a = xp.ones(self.shape, dtype=xp.float32)
        center = numpy.divide(numpy.subtract(self.shape, 1), 2)
    
        if len(self.shape) == 2:
            matrix = self._2d_rotation_matrix(self.theta, center)
        elif len(self.shape) == 3:
            matrix = self._3d_rotation_matrix(self.theta, center)
        else:
            return pytest.xfail('Unsupported shape')
    
        if self.output == 'empty':
            output = xp.empty(self.shape, dtype=xp.float32)
            if self.output_shape:
                return pytest.skip('This combination is tested in '
                                   'test_invalid_texture_arguments')
        else:
            output = self.output
    
        if self.output_shape:
            output_shape = (self.output_shape, ) * len(self.shape)
        else:
            output_shape = self.output_shape
    
        if xp == cupy:
            m = cupyx.scipy.ndimage.affine_transform
            matrix = cupy.array(matrix)
>           return m(a, matrix, output_shape=output_shape,
                     output=output, order=self.order,
                     mode=self.mode, texture_memory=True)

tests/cupyx_tests/scipy_tests/ndimage_tests/test_interpolation.py:398: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
cupyx/scipy/ndimage/interpolation.py:376: in affine_transform
    return _texture.affine_transformation(data=input,
cupyx/_texture.py:168: in affine_transformation
    texture_object = _create_texture_object(data,
cupyx/_texture.py:98: in _create_texture_object
    array = texture.CUDAarray(texture_fmt, *data.shape[::-1])
cupy/cuda/texture.pyx:296: in cupy.cuda.texture.CUDAarray.__init__
    self.ptr = runtime.malloc3DArray(desc.ptr, width, height, depth,
cupy_backends/cuda/api/runtime.pyx:593: in cupy_backends.cuda.api.runtime.malloc3DArray
    check_status(status)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

>   raise CUDARuntimeError(status)
E   AssertionError: Only cupy raises error
E   
E   Traceback (most recent call last):
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.hXnTrEAC7u/cupy/cupy/testing/_helper.py", line 47, in _call_func
E       result = impl(self, *args, **kw)
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.hXnTrEAC7u/cupy/tests/cupyx_tests/scipy_tests/ndimage_tests/test_interpolation.py", line 398, in test_affine_transform_texture_memory
E       return m(a, matrix, output_shape=output_shape,
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.hXnTrEAC7u/cupy/cupyx/scipy/ndimage/interpolation.py", line 376, in affine_transform
E       return _texture.affine_transformation(data=input,
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.hXnTrEAC7u/cupy/cupyx/_texture.py", line 168, in affine_transformation
E       texture_object = _create_texture_object(data,
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.hXnTrEAC7u/cupy/cupyx/_texture.py", line 98, in _create_texture_object
E       array = texture.CUDAarray(texture_fmt, *data.shape[::-1])
E     File "cupy/cuda/texture.pyx", line 296, in cupy.cuda.texture.CUDAarray.__init__
E       self.ptr = runtime.malloc3DArray(desc.ptr, width, height, depth,
E     File "cupy_backends/cuda/api/runtime.pyx", line 593, in cupy_backends.cuda.api.runtime.malloc3DArray
E       check_status(status)
E     File "cupy_backends/cuda/api/runtime.pyx", line 265, in cupy_backends.cuda.api.runtime.check_status
E       raise CUDARuntimeError(status)
E   cupy_backends.cuda.api.runtime.CUDARuntimeError: hipErrorUnknown: hipErrorUnknown

cupy_backends/cuda/api/runtime.pyx:265: AssertionError
----------------------------- Captured stderr call -----------------------------
Traceback (most recent call last):
  File "cupy_backends/cuda/api/runtime.pyx", line 644, in cupy_backends.cuda.api.runtime.freeArray
    check_status(status)
  File "cupy_backends/cuda/api/runtime.pyx", line 265, in cupy_backends.cuda.api.runtime.check_status
    raise CUDARuntimeError(status)
cupy_backends.cuda.api.runtime.CUDARuntimeError: hipErrorUnknown: hipErrorUnknown
_ TestAffineTransformTextureMemory.test_affine_transform_texture_memory[_param_129_{mode='constant', order=1, output=float32, output_shape=None, shape=(100, 100), theta=90}] _

self = <<cupyx_tests.scipy_tests.ndimage_tests.test_interpolation.TestAffineTransformTextureMemory object at 0x7fab37287340> ...e': 'constant', 'order': 1, 'output': <class 'numpy.float32'>, 'output_shape': None, 'shape': (100, 100), 'theta': 90}>
xp = <module 'cupy' from '/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.hXnTrEAC7u/cupy/cupy/__init__.py'>
scp = <module 'cupyx.scipy' from '/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.hXnTrEAC7u/cupy/cupyx/scipy/__init__.py'>

    @testing.numpy_cupy_allclose(atol=0.1, scipy_name='scp')
    def test_affine_transform_texture_memory(self, xp, scp):
        a = xp.ones(self.shape, dtype=xp.float32)
        center = numpy.divide(numpy.subtract(self.shape, 1), 2)
    
        if len(self.shape) == 2:
            matrix = self._2d_rotation_matrix(self.theta, center)
        elif len(self.shape) == 3:
            matrix = self._3d_rotation_matrix(self.theta, center)
        else:
            return pytest.xfail('Unsupported shape')
    
        if self.output == 'empty':
            output = xp.empty(self.shape, dtype=xp.float32)
            if self.output_shape:
                return pytest.skip('This combination is tested in '
                                   'test_invalid_texture_arguments')
        else:
            output = self.output
    
        if self.output_shape:
            output_shape = (self.output_shape, ) * len(self.shape)
        else:
            output_shape = self.output_shape
    
        if xp == cupy:
            m = cupyx.scipy.ndimage.affine_transform
            matrix = cupy.array(matrix)
>           return m(a, matrix, output_shape=output_shape,
                     output=output, order=self.order,
                     mode=self.mode, texture_memory=True)

tests/cupyx_tests/scipy_tests/ndimage_tests/test_interpolation.py:398: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
cupyx/scipy/ndimage/interpolation.py:376: in affine_transform
    return _texture.affine_transformation(data=input,
cupyx/_texture.py:168: in affine_transformation
    texture_object = _create_texture_object(data,
cupyx/_texture.py:98: in _create_texture_object
    array = texture.CUDAarray(texture_fmt, *data.shape[::-1])
cupy/cuda/texture.pyx:296: in cupy.cuda.texture.CUDAarray.__init__
    self.ptr = runtime.malloc3DArray(desc.ptr, width, height, depth,
cupy_backends/cuda/api/runtime.pyx:593: in cupy_backends.cuda.api.runtime.malloc3DArray
    check_status(status)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

>   raise CUDARuntimeError(status)
E   AssertionError: Only cupy raises error
E   
E   Traceback (most recent call last):
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.hXnTrEAC7u/cupy/cupy/testing/_helper.py", line 47, in _call_func
E       result = impl(self, *args, **kw)
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.hXnTrEAC7u/cupy/tests/cupyx_tests/scipy_tests/ndimage_tests/test_interpolation.py", line 398, in test_affine_transform_texture_memory
E       return m(a, matrix, output_shape=output_shape,
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.hXnTrEAC7u/cupy/cupyx/scipy/ndimage/interpolation.py", line 376, in affine_transform
E       return _texture.affine_transformation(data=input,
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.hXnTrEAC7u/cupy/cupyx/_texture.py", line 168, in affine_transformation
E       texture_object = _create_texture_object(data,
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.hXnTrEAC7u/cupy/cupyx/_texture.py", line 98, in _create_texture_object
E       array = texture.CUDAarray(texture_fmt, *data.shape[::-1])
E     File "cupy/cuda/texture.pyx", line 296, in cupy.cuda.texture.CUDAarray.__init__
E       self.ptr = runtime.malloc3DArray(desc.ptr, width, height, depth,
E     File "cupy_backends/cuda/api/runtime.pyx", line 593, in cupy_backends.cuda.api.runtime.malloc3DArray
E       check_status(status)
E     File "cupy_backends/cuda/api/runtime.pyx", line 265, in cupy_backends.cuda.api.runtime.check_status
E       raise CUDARuntimeError(status)
E   cupy_backends.cuda.api.runtime.CUDARuntimeError: hipErrorUnknown: hipErrorUnknown

cupy_backends/cuda/api/runtime.pyx:265: AssertionError
----------------------------- Captured stderr call -----------------------------
Traceback (most recent call last):
  File "cupy_backends/cuda/api/runtime.pyx", line 644, in cupy_backends.cuda.api.runtime.freeArray
    check_status(status)
  File "cupy_backends/cuda/api/runtime.pyx", line 265, in cupy_backends.cuda.api.runtime.check_status
    raise CUDARuntimeError(status)
cupy_backends.cuda.api.runtime.CUDARuntimeError: hipErrorUnknown: hipErrorUnknown
_ TestAffineTransformTextureMemory.test_affine_transform_texture_memory[_param_130_{mode='constant', order=1, output=float32, output_shape=None, shape=(100, 100), theta=180}] _

self = <<cupyx_tests.scipy_tests.ndimage_tests.test_interpolation.TestAffineTransformTextureMemory object at 0x7fab37c2d5e0> ...': 'constant', 'order': 1, 'output': <class 'numpy.float32'>, 'output_shape': None, 'shape': (100, 100), 'theta': 180}>
xp = <module 'cupy' from '/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.hXnTrEAC7u/cupy/cupy/__init__.py'>
scp = <module 'cupyx.scipy' from '/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.hXnTrEAC7u/cupy/cupyx/scipy/__init__.py'>

    @testing.numpy_cupy_allclose(atol=0.1, scipy_name='scp')
    def test_affine_transform_texture_memory(self, xp, scp):
        a = xp.ones(self.shape, dtype=xp.float32)
        center = numpy.divide(numpy.subtract(self.shape, 1), 2)
    
        if len(self.shape) == 2:
            matrix = self._2d_rotation_matrix(self.theta, center)
        elif len(self.shape) == 3:
            matrix = self._3d_rotation_matrix(self.theta, center)
        else:
            return pytest.xfail('Unsupported shape')
    
        if self.output == 'empty':
            output = xp.empty(self.shape, dtype=xp.float32)
            if self.output_shape:
                return pytest.skip('This combination is tested in '
                                   'test_invalid_texture_arguments')
        else:
            output = self.output
    
        if self.output_shape:
            output_shape = (self.output_shape, ) * len(self.shape)
        else:
            output_shape = self.output_shape
    
        if xp == cupy:
            m = cupyx.scipy.ndimage.affine_transform
            matrix = cupy.array(matrix)
>           return m(a, matrix, output_shape=output_shape,
                     output=output, order=self.order,
                     mode=self.mode, texture_memory=True)

tests/cupyx_tests/scipy_tests/ndimage_tests/test_interpolation.py:398: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
cupyx/scipy/ndimage/interpolation.py:376: in affine_transform
    return _texture.affine_transformation(data=input,
cupyx/_texture.py:168: in affine_transformation
    texture_object = _create_texture_object(data,
cupyx/_texture.py:98: in _create_texture_object
    array = texture.CUDAarray(texture_fmt, *data.shape[::-1])
cupy/cuda/texture.pyx:296: in cupy.cuda.texture.CUDAarray.__init__
    self.ptr = runtime.malloc3DArray(desc.ptr, width, height, depth,
cupy_backends/cuda/api/runtime.pyx:593: in cupy_backends.cuda.api.runtime.malloc3DArray
    check_status(status)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

>   raise CUDARuntimeError(status)
E   AssertionError: Only cupy raises error
E   
E   Traceback (most recent call last):
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.hXnTrEAC7u/cupy/cupy/testing/_helper.py", line 47, in _call_func
E       result = impl(self, *args, **kw)
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.hXnTrEAC7u/cupy/tests/cupyx_tests/scipy_tests/ndimage_tests/test_interpolation.py", line 398, in test_affine_transform_texture_memory
E       return m(a, matrix, output_shape=output_shape,
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.hXnTrEAC7u/cupy/cupyx/scipy/ndimage/interpolation.py", line 376, in affine_transform
E       return _texture.affine_transformation(data=input,
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.hXnTrEAC7u/cupy/cupyx/_texture.py", line 168, in affine_transformation
E       texture_object = _create_texture_object(data,
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.hXnTrEAC7u/cupy/cupyx/_texture.py", line 98, in _create_texture_object
E       array = texture.CUDAarray(texture_fmt, *data.shape[::-1])
E     File "cupy/cuda/texture.pyx", line 296, in cupy.cuda.texture.CUDAarray.__init__
E       self.ptr = runtime.malloc3DArray(desc.ptr, width, height, depth,
E     File "cupy_backends/cuda/api/runtime.pyx", line 593, in cupy_backends.cuda.api.runtime.malloc3DArray
E       check_status(status)
E     File "cupy_backends/cuda/api/runtime.pyx", line 265, in cupy_backends.cuda.api.runtime.check_status
E       raise CUDARuntimeError(status)
E   cupy_backends.cuda.api.runtime.CUDARuntimeError: hipErrorUnknown: hipErrorUnknown

cupy_backends/cuda/api/runtime.pyx:265: AssertionError
----------------------------- Captured stderr call -----------------------------
Traceback (most recent call last):
  File "cupy_backends/cuda/api/runtime.pyx", line 644, in cupy_backends.cuda.api.runtime.freeArray
    check_status(status)
  File "cupy_backends/cuda/api/runtime.pyx", line 265, in cupy_backends.cuda.api.runtime.check_status
    raise CUDARuntimeError(status)
cupy_backends.cuda.api.runtime.CUDARuntimeError: hipErrorUnknown: hipErrorUnknown
_ TestAffineTransformTextureMemory.test_affine_transform_texture_memory[_param_131_{mode='constant', order=1, output=float32, output_shape=None, shape=(100, 100), theta=270}] _

self = <<cupyx_tests.scipy_tests.ndimage_tests.test_interpolation.TestAffineTransformTextureMemory object at 0x7fab36f05d60> ...': 'constant', 'order': 1, 'output': <class 'numpy.float32'>, 'output_shape': None, 'shape': (100, 100), 'theta': 270}>
xp = <module 'cupy' from '/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.hXnTrEAC7u/cupy/cupy/__init__.py'>
scp = <module 'cupyx.scipy' from '/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.hXnTrEAC7u/cupy/cupyx/scipy/__init__.py'>

    @testing.numpy_cupy_allclose(atol=0.1, scipy_name='scp')
    def test_affine_transform_texture_memory(self, xp, scp):
        a = xp.ones(self.shape, dtype=xp.float32)
        center = numpy.divide(numpy.subtract(self.shape, 1), 2)
    
        if len(self.shape) == 2:
            matrix = self._2d_rotation_matrix(self.theta, center)
        elif len(self.shape) == 3:
            matrix = self._3d_rotation_matrix(self.theta, center)
        else:
            return pytest.xfail('Unsupported shape')
    
        if self.output == 'empty':
            output = xp.empty(self.shape, dtype=xp.float32)
            if self.output_shape:
                return pytest.skip('This combination is tested in '
                                   'test_invalid_texture_arguments')
        else:
            output = self.output
    
        if self.output_shape:
            output_shape = (self.output_shape, ) * len(self.shape)
        else:
            output_shape = self.output_shape
    
        if xp == cupy:
            m = cupyx.scipy.ndimage.affine_transform
            matrix = cupy.array(matrix)
>           return m(a, matrix, output_shape=output_shape,
                     output=output, order=self.order,
                     mode=self.mode, texture_memory=True)

tests/cupyx_tests/scipy_tests/ndimage_tests/test_interpolation.py:398: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
cupyx/scipy/ndimage/interpolation.py:376: in affine_transform
    return _texture.affine_transformation(data=input,
cupyx/_texture.py:168: in affine_transformation
    texture_object = _create_texture_object(data,
cupyx/_texture.py:98: in _create_texture_object
    array = texture.CUDAarray(texture_fmt, *data.shape[::-1])
cupy/cuda/texture.pyx:296: in cupy.cuda.texture.CUDAarray.__init__
    self.ptr = runtime.malloc3DArray(desc.ptr, width, height, depth,
cupy_backends/cuda/api/runtime.pyx:593: in cupy_backends.cuda.api.runtime.malloc3DArray
    check_status(status)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

>   raise CUDARuntimeError(status)
E   AssertionError: Only cupy raises error
E   
E   Traceback (most recent call last):
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.hXnTrEAC7u/cupy/cupy/testing/_helper.py", line 47, in _call_func
E       result = impl(self, *args, **kw)
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.hXnTrEAC7u/cupy/tests/cupyx_tests/scipy_tests/ndimage_tests/test_interpolation.py", line 398, in test_affine_transform_texture_memory
E       return m(a, matrix, output_shape=output_shape,
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.hXnTrEAC7u/cupy/cupyx/scipy/ndimage/interpolation.py", line 376, in affine_transform
E       return _texture.affine_transformation(data=input,
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.hXnTrEAC7u/cupy/cupyx/_texture.py", line 168, in affine_transformation
E       texture_object = _create_texture_object(data,
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.hXnTrEAC7u/cupy/cupyx/_texture.py", line 98, in _create_texture_object
E       array = texture.CUDAarray(texture_fmt, *data.shape[::-1])
E     File "cupy/cuda/texture.pyx", line 296, in cupy.cuda.texture.CUDAarray.__init__
E       self.ptr = runtime.malloc3DArray(desc.ptr, width, height, depth,
E     File "cupy_backends/cuda/api/runtime.pyx", line 593, in cupy_backends.cuda.api.runtime.malloc3DArray
E       check_status(status)
E     File "cupy_backends/cuda/api/runtime.pyx", line 265, in cupy_backends.cuda.api.runtime.check_status
E       raise CUDARuntimeError(status)
E   cupy_backends.cuda.api.runtime.CUDARuntimeError: hipErrorUnknown: hipErrorUnknown

cupy_backends/cuda/api/runtime.pyx:265: AssertionError
----------------------------- Captured stderr call -----------------------------
Traceback (most recent call last):
  File "cupy_backends/cuda/api/runtime.pyx", line 644, in cupy_backends.cuda.api.runtime.freeArray
    check_status(status)
  File "cupy_backends/cuda/api/runtime.pyx", line 265, in cupy_backends.cuda.api.runtime.check_status
    raise CUDARuntimeError(status)
cupy_backends.cuda.api.runtime.CUDARuntimeError: hipErrorUnknown: hipErrorUnknown
_ TestAffineTransformTextureMemory.test_affine_transform_texture_memory[_param_132_{mode='constant', order=1, output=float32, output_shape=None, shape=(10, 20), theta=0}] _

self = <<cupyx_tests.scipy_tests.ndimage_tests.test_interpolation.TestAffineTransformTextureMemory object at 0x7fab39e3d5b0> ...mode': 'constant', 'order': 1, 'output': <class 'numpy.float32'>, 'output_shape': None, 'shape': (10, 20), 'theta': 0}>
xp = <module 'cupy' from '/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.hXnTrEAC7u/cupy/cupy/__init__.py'>
scp = <module 'cupyx.scipy' from '/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.hXnTrEAC7u/cupy/cupyx/scipy/__init__.py'>

    @testing.numpy_cupy_allclose(atol=0.1, scipy_name='scp')
    def test_affine_transform_texture_memory(self, xp, scp):
        a = xp.ones(self.shape, dtype=xp.float32)
        center = numpy.divide(numpy.subtract(self.shape, 1), 2)
    
        if len(self.shape) == 2:
            matrix = self._2d_rotation_matrix(self.theta, center)
        elif len(self.shape) == 3:
            matrix = self._3d_rotation_matrix(self.theta, center)
        else:
            return pytest.xfail('Unsupported shape')
    
        if self.output == 'empty':
            output = xp.empty(self.shape, dtype=xp.float32)
            if self.output_shape:
                return pytest.skip('This combination is tested in '
                                   'test_invalid_texture_arguments')
        else:
            output = self.output
    
        if self.output_shape:
            output_shape = (self.output_shape, ) * len(self.shape)
        else:
            output_shape = self.output_shape
    
        if xp == cupy:
            m = cupyx.scipy.ndimage.affine_transform
            matrix = cupy.array(matrix)
>           return m(a, matrix, output_shape=output_shape,
                     output=output, order=self.order,
                     mode=self.mode, texture_memory=True)

tests/cupyx_tests/scipy_tests/ndimage_tests/test_interpolation.py:398: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
cupyx/scipy/ndimage/interpolation.py:376: in affine_transform
    return _texture.affine_transformation(data=input,
cupyx/_texture.py:168: in affine_transformation
    texture_object = _create_texture_object(data,
cupyx/_texture.py:98: in _create_texture_object
    array = texture.CUDAarray(texture_fmt, *data.shape[::-1])
cupy/cuda/texture.pyx:296: in cupy.cuda.texture.CUDAarray.__init__
    self.ptr = runtime.malloc3DArray(desc.ptr, width, height, depth,
cupy_backends/cuda/api/runtime.pyx:593: in cupy_backends.cuda.api.runtime.malloc3DArray
    check_status(status)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

>   raise CUDARuntimeError(status)
E   AssertionError: Only cupy raises error
E   
E   Traceback (most recent call last):
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.hXnTrEAC7u/cupy/cupy/testing/_helper.py", line 47, in _call_func
E       result = impl(self, *args, **kw)
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.hXnTrEAC7u/cupy/tests/cupyx_tests/scipy_tests/ndimage_tests/test_interpolation.py", line 398, in test_affine_transform_texture_memory
E       return m(a, matrix, output_shape=output_shape,
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.hXnTrEAC7u/cupy/cupyx/scipy/ndimage/interpolation.py", line 376, in affine_transform
E       return _texture.affine_transformation(data=input,
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.hXnTrEAC7u/cupy/cupyx/_texture.py", line 168, in affine_transformation
E       texture_object = _create_texture_object(data,
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.hXnTrEAC7u/cupy/cupyx/_texture.py", line 98, in _create_texture_object
E       array = texture.CUDAarray(texture_fmt, *data.shape[::-1])
E     File "cupy/cuda/texture.pyx", line 296, in cupy.cuda.texture.CUDAarray.__init__
E       self.ptr = runtime.malloc3DArray(desc.ptr, width, height, depth,
E     File "cupy_backends/cuda/api/runtime.pyx", line 593, in cupy_backends.cuda.api.runtime.malloc3DArray
E       check_status(status)
E     File "cupy_backends/cuda/api/runtime.pyx", line 265, in cupy_backends.cuda.api.runtime.check_status
E       raise CUDARuntimeError(status)
E   cupy_backends.cuda.api.runtime.CUDARuntimeError: hipErrorUnknown: hipErrorUnknown

cupy_backends/cuda/api/runtime.pyx:265: AssertionError
----------------------------- Captured stderr call -----------------------------
Traceback (most recent call last):
  File "cupy_backends/cuda/api/runtime.pyx", line 644, in cupy_backends.cuda.api.runtime.freeArray
    check_status(status)
  File "cupy_backends/cuda/api/runtime.pyx", line 265, in cupy_backends.cuda.api.runtime.check_status
    raise CUDARuntimeError(status)
cupy_backends.cuda.api.runtime.CUDARuntimeError: hipErrorUnknown: hipErrorUnknown
_ TestAffineTransformTextureMemory.test_affine_transform_texture_memory[_param_133_{mode='constant', order=1, output=float32, output_shape=None, shape=(10, 20), theta=90}] _

self = <<cupyx_tests.scipy_tests.ndimage_tests.test_interpolation.TestAffineTransformTextureMemory object at 0x7fab36e03c40> ...ode': 'constant', 'order': 1, 'output': <class 'numpy.float32'>, 'output_shape': None, 'shape': (10, 20), 'theta': 90}>
xp = <module 'cupy' from '/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.hXnTrEAC7u/cupy/cupy/__init__.py'>
scp = <module 'cupyx.scipy' from '/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.hXnTrEAC7u/cupy/cupyx/scipy/__init__.py'>

    @testing.numpy_cupy_allclose(atol=0.1, scipy_name='scp')
    def test_affine_transform_texture_memory(self, xp, scp):
        a = xp.ones(self.shape, dtype=xp.float32)
        center = numpy.divide(numpy.subtract(self.shape, 1), 2)
    
        if len(self.shape) == 2:
            matrix = self._2d_rotation_matrix(self.theta, center)
        elif len(self.shape) == 3:
            matrix = self._3d_rotation_matrix(self.theta, center)
        else:
            return pytest.xfail('Unsupported shape')
    
        if self.output == 'empty':
            output = xp.empty(self.shape, dtype=xp.float32)
            if self.output_shape:
                return pytest.skip('This combination is tested in '
                                   'test_invalid_texture_arguments')
        else:
            output = self.output
    
        if self.output_shape:
            output_shape = (self.output_shape, ) * len(self.shape)
        else:
            output_shape = self.output_shape
    
        if xp == cupy:
            m = cupyx.scipy.ndimage.affine_transform
            matrix = cupy.array(matrix)
>           return m(a, matrix, output_shape=output_shape,
                     output=output, order=self.order,
                     mode=self.mode, texture_memory=True)

tests/cupyx_tests/scipy_tests/ndimage_tests/test_interpolation.py:398: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
cupyx/scipy/ndimage/interpolation.py:376: in affine_transform
    return _texture.affine_transformation(data=input,
cupyx/_texture.py:168: in affine_transformation
    texture_object = _create_texture_object(data,
cupyx/_texture.py:98: in _create_texture_object
    array = texture.CUDAarray(texture_fmt, *data.shape[::-1])
cupy/cuda/texture.pyx:296: in cupy.cuda.texture.CUDAarray.__init__
    self.ptr = runtime.malloc3DArray(desc.ptr, width, height, depth,
cupy_backends/cuda/api/runtime.pyx:593: in cupy_backends.cuda.api.runtime.malloc3DArray
    check_status(status)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

>   raise CUDARuntimeError(status)
E   AssertionError: Only cupy raises error
E   
E   Traceback (most recent call last):
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.hXnTrEAC7u/cupy/cupy/testing/_helper.py", line 47, in _call_func
E       result = impl(self, *args, **kw)
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.hXnTrEAC7u/cupy/tests/cupyx_tests/scipy_tests/ndimage_tests/test_interpolation.py", line 398, in test_affine_transform_texture_memory
E       return m(a, matrix, output_shape=output_shape,
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.hXnTrEAC7u/cupy/cupyx/scipy/ndimage/interpolation.py", line 376, in affine_transform
E       return _texture.affine_transformation(data=input,
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.hXnTrEAC7u/cupy/cupyx/_texture.py", line 168, in affine_transformation
E       texture_object = _create_texture_object(data,
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.hXnTrEAC7u/cupy/cupyx/_texture.py", line 98, in _create_texture_object
E       array = texture.CUDAarray(texture_fmt, *data.shape[::-1])
E     File "cupy/cuda/texture.pyx", line 296, in cupy.cuda.texture.CUDAarray.__init__
E       self.ptr = runtime.malloc3DArray(desc.ptr, width, height, depth,
E     File "cupy_backends/cuda/api/runtime.pyx", line 593, in cupy_backends.cuda.api.runtime.malloc3DArray
E       check_status(status)
E     File "cupy_backends/cuda/api/runtime.pyx", line 265, in cupy_backends.cuda.api.runtime.check_status
E       raise CUDARuntimeError(status)
E   cupy_backends.cuda.api.runtime.CUDARuntimeError: hipErrorUnknown: hipErrorUnknown

cupy_backends/cuda/api/runtime.pyx:265: AssertionError
----------------------------- Captured stderr call -----------------------------
Traceback (most recent call last):
  File "cupy_backends/cuda/api/runtime.pyx", line 644, in cupy_backends.cuda.api.runtime.freeArray
    check_status(status)
  File "cupy_backends/cuda/api/runtime.pyx", line 265, in cupy_backends.cuda.api.runtime.check_status
    raise CUDARuntimeError(status)
cupy_backends.cuda.api.runtime.CUDARuntimeError: hipErrorUnknown: hipErrorUnknown
_ TestAffineTransformTextureMemory.test_affine_transform_texture_memory[_param_134_{mode='constant', order=1, output=float32, output_shape=None, shape=(10, 20), theta=180}] _

self = <<cupyx_tests.scipy_tests.ndimage_tests.test_interpolation.TestAffineTransformTextureMemory object at 0x7fab39e24400> ...de': 'constant', 'order': 1, 'output': <class 'numpy.float32'>, 'output_shape': None, 'shape': (10, 20), 'theta': 180}>
xp = <module 'cupy' from '/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.hXnTrEAC7u/cupy/cupy/__init__.py'>
scp = <module 'cupyx.scipy' from '/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.hXnTrEAC7u/cupy/cupyx/scipy/__init__.py'>

    @testing.numpy_cupy_allclose(atol=0.1, scipy_name='scp')
    def test_affine_transform_texture_memory(self, xp, scp):
        a = xp.ones(self.shape, dtype=xp.float32)
        center = numpy.divide(numpy.subtract(self.shape, 1), 2)
    
        if len(self.shape) == 2:
            matrix = self._2d_rotation_matrix(self.theta, center)
        elif len(self.shape) == 3:
            matrix = self._3d_rotation_matrix(self.theta, center)
        else:
            return pytest.xfail('Unsupported shape')
    
        if self.output == 'empty':
            output = xp.empty(self.shape, dtype=xp.float32)
            if self.output_shape:
                return pytest.skip('This combination is tested in '
                                   'test_invalid_texture_arguments')
        else:
            output = self.output
    
        if self.output_shape:
            output_shape = (self.output_shape, ) * len(self.shape)
        else:
            output_shape = self.output_shape
    
        if xp == cupy:
            m = cupyx.scipy.ndimage.affine_transform
            matrix = cupy.array(matrix)
>           return m(a, matrix, output_shape=output_shape,
                     output=output, order=self.order,
                     mode=self.mode, texture_memory=True)

tests/cupyx_tests/scipy_tests/ndimage_tests/test_interpolation.py:398: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
cupyx/scipy/ndimage/interpolation.py:376: in affine_transform
    return _texture.affine_transformation(data=input,
cupyx/_texture.py:168: in affine_transformation
    texture_object = _create_texture_object(data,
cupyx/_texture.py:98: in _create_texture_object
    array = texture.CUDAarray(texture_fmt, *data.shape[::-1])
cupy/cuda/texture.pyx:296: in cupy.cuda.texture.CUDAarray.__init__
    self.ptr = runtime.malloc3DArray(desc.ptr, width, height, depth,
cupy_backends/cuda/api/runtime.pyx:593: in cupy_backends.cuda.api.runtime.malloc3DArray
    check_status(status)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

>   raise CUDARuntimeError(status)
E   AssertionError: Only cupy raises error
E   
E   Traceback (most recent call last):
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.hXnTrEAC7u/cupy/cupy/testing/_helper.py", line 47, in _call_func
E       result = impl(self, *args, **kw)
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.hXnTrEAC7u/cupy/tests/cupyx_tests/scipy_tests/ndimage_tests/test_interpolation.py", line 398, in test_affine_transform_texture_memory
E       return m(a, matrix, output_shape=output_shape,
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.hXnTrEAC7u/cupy/cupyx/scipy/ndimage/interpolation.py", line 376, in affine_transform
E       return _texture.affine_transformation(data=input,
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.hXnTrEAC7u/cupy/cupyx/_texture.py", line 168, in affine_transformation
E       texture_object = _create_texture_object(data,
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.hXnTrEAC7u/cupy/cupyx/_texture.py", line 98, in _create_texture_object
E       array = texture.CUDAarray(texture_fmt, *data.shape[::-1])
E     File "cupy/cuda/texture.pyx", line 296, in cupy.cuda.texture.CUDAarray.__init__
E       self.ptr = runtime.malloc3DArray(desc.ptr, width, height, depth,
E     File "cupy_backends/cuda/api/runtime.pyx", line 593, in cupy_backends.cuda.api.runtime.malloc3DArray
E       check_status(status)
E     File "cupy_backends/cuda/api/runtime.pyx", line 265, in cupy_backends.cuda.api.runtime.check_status
E       raise CUDARuntimeError(status)
E   cupy_backends.cuda.api.runtime.CUDARuntimeError: hipErrorUnknown: hipErrorUnknown

cupy_backends/cuda/api/runtime.pyx:265: AssertionError
----------------------------- Captured stderr call -----------------------------
Traceback (most recent call last):
  File "cupy_backends/cuda/api/runtime.pyx", line 644, in cupy_backends.cuda.api.runtime.freeArray
    check_status(status)
  File "cupy_backends/cuda/api/runtime.pyx", line 265, in cupy_backends.cuda.api.runtime.check_status
    raise CUDARuntimeError(status)
cupy_backends.cuda.api.runtime.CUDARuntimeError: hipErrorUnknown: hipErrorUnknown
_ TestAffineTransformTextureMemory.test_affine_transform_texture_memory[_param_135_{mode='constant', order=1, output=float32, output_shape=None, shape=(10, 20), theta=270}] _

self = <<cupyx_tests.scipy_tests.ndimage_tests.test_interpolation.TestAffineTransformTextureMemory object at 0x7fab38e86190> ...de': 'constant', 'order': 1, 'output': <class 'numpy.float32'>, 'output_shape': None, 'shape': (10, 20), 'theta': 270}>
xp = <module 'cupy' from '/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.hXnTrEAC7u/cupy/cupy/__init__.py'>
scp = <module 'cupyx.scipy' from '/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.hXnTrEAC7u/cupy/cupyx/scipy/__init__.py'>

    @testing.numpy_cupy_allclose(atol=0.1, scipy_name='scp')
    def test_affine_transform_texture_memory(self, xp, scp):
        a = xp.ones(self.shape, dtype=xp.float32)
        center = numpy.divide(numpy.subtract(self.shape, 1), 2)
    
        if len(self.shape) == 2:
            matrix = self._2d_rotation_matrix(self.theta, center)
        elif len(self.shape) == 3:
            matrix = self._3d_rotation_matrix(self.theta, center)
        else:
            return pytest.xfail('Unsupported shape')
    
        if self.output == 'empty':
            output = xp.empty(self.shape, dtype=xp.float32)
            if self.output_shape:
                return pytest.skip('This combination is tested in '
                                   'test_invalid_texture_arguments')
        else:
            output = self.output
    
        if self.output_shape:
            output_shape = (self.output_shape, ) * len(self.shape)
        else:
            output_shape = self.output_shape
    
        if xp == cupy:
            m = cupyx.scipy.ndimage.affine_transform
            matrix = cupy.array(matrix)
>           return m(a, matrix, output_shape=output_shape,
                     output=output, order=self.order,
                     mode=self.mode, texture_memory=True)

tests/cupyx_tests/scipy_tests/ndimage_tests/test_interpolation.py:398: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
cupyx/scipy/ndimage/interpolation.py:376: in affine_transform
    return _texture.affine_transformation(data=input,
cupyx/_texture.py:168: in affine_transformation
    texture_object = _create_texture_object(data,
cupyx/_texture.py:98: in _create_texture_object
    array = texture.CUDAarray(texture_fmt, *data.shape[::-1])
cupy/cuda/texture.pyx:296: in cupy.cuda.texture.CUDAarray.__init__
    self.ptr = runtime.malloc3DArray(desc.ptr, width, height, depth,
cupy_backends/cuda/api/runtime.pyx:593: in cupy_backends.cuda.api.runtime.malloc3DArray
    check_status(status)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

>   raise CUDARuntimeError(status)
E   AssertionError: Only cupy raises error
E   
E   Traceback (most recent call last):
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.hXnTrEAC7u/cupy/cupy/testing/_helper.py", line 47, in _call_func
E       result = impl(self, *args, **kw)
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.hXnTrEAC7u/cupy/tests/cupyx_tests/scipy_tests/ndimage_tests/test_interpolation.py", line 398, in test_affine_transform_texture_memory
E       return m(a, matrix, output_shape=output_shape,
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.hXnTrEAC7u/cupy/cupyx/scipy/ndimage/interpolation.py", line 376, in affine_transform
E       return _texture.affine_transformation(data=input,
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.hXnTrEAC7u/cupy/cupyx/_texture.py", line 168, in affine_transformation
E       texture_object = _create_texture_object(data,
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.hXnTrEAC7u/cupy/cupyx/_texture.py", line 98, in _create_texture_object
E       array = texture.CUDAarray(texture_fmt, *data.shape[::-1])
E     File "cupy/cuda/texture.pyx", line 296, in cupy.cuda.texture.CUDAarray.__init__
E       self.ptr = runtime.malloc3DArray(desc.ptr, width, height, depth,
E     File "cupy_backends/cuda/api/runtime.pyx", line 593, in cupy_backends.cuda.api.runtime.malloc3DArray
E       check_status(status)
E     File "cupy_backends/cuda/api/runtime.pyx", line 265, in cupy_backends.cuda.api.runtime.check_status
E       raise CUDARuntimeError(status)
E   cupy_backends.cuda.api.runtime.CUDARuntimeError: hipErrorUnknown: hipErrorUnknown

cupy_backends/cuda/api/runtime.pyx:265: AssertionError
----------------------------- Captured stderr call -----------------------------
Traceback (most recent call last):
  File "cupy_backends/cuda/api/runtime.pyx", line 644, in cupy_backends.cuda.api.runtime.freeArray
    check_status(status)
  File "cupy_backends/cuda/api/runtime.pyx", line 265, in cupy_backends.cuda.api.runtime.check_status
    raise CUDARuntimeError(status)
cupy_backends.cuda.api.runtime.CUDARuntimeError: hipErrorUnknown: hipErrorUnknown
_ TestAffineTransformTextureMemory.test_affine_transform_texture_memory[_param_136_{mode='constant', order=1, output=float32, output_shape=None, shape=(10, 10, 10), theta=0}] _

self = <<cupyx_tests.scipy_tests.ndimage_tests.test_interpolation.TestAffineTransformTextureMemory object at 0x7fac514e13d0> ...': 'constant', 'order': 1, 'output': <class 'numpy.float32'>, 'output_shape': None, 'shape': (10, 10, 10), 'theta': 0}>
xp = <module 'cupy' from '/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.hXnTrEAC7u/cupy/cupy/__init__.py'>
scp = <module 'cupyx.scipy' from '/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.hXnTrEAC7u/cupy/cupyx/scipy/__init__.py'>

    @testing.numpy_cupy_allclose(atol=0.1, scipy_name='scp')
    def test_affine_transform_texture_memory(self, xp, scp):
        a = xp.ones(self.shape, dtype=xp.float32)
        center = numpy.divide(numpy.subtract(self.shape, 1), 2)
    
        if len(self.shape) == 2:
            matrix = self._2d_rotation_matrix(self.theta, center)
        elif len(self.shape) == 3:
            matrix = self._3d_rotation_matrix(self.theta, center)
        else:
            return pytest.xfail('Unsupported shape')
    
        if self.output == 'empty':
            output = xp.empty(self.shape, dtype=xp.float32)
            if self.output_shape:
                return pytest.skip('This combination is tested in '
                                   'test_invalid_texture_arguments')
        else:
            output = self.output
    
        if self.output_shape:
            output_shape = (self.output_shape, ) * len(self.shape)
        else:
            output_shape = self.output_shape
    
        if xp == cupy:
            m = cupyx.scipy.ndimage.affine_transform
            matrix = cupy.array(matrix)
>           return m(a, matrix, output_shape=output_shape,
                     output=output, order=self.order,
                     mode=self.mode, texture_memory=True)

tests/cupyx_tests/scipy_tests/ndimage_tests/test_interpolation.py:398: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
cupyx/scipy/ndimage/interpolation.py:376: in affine_transform
    return _texture.affine_transformation(data=input,
cupyx/_texture.py:168: in affine_transformation
    texture_object = _create_texture_object(data,
cupyx/_texture.py:98: in _create_texture_object
    array = texture.CUDAarray(texture_fmt, *data.shape[::-1])
cupy/cuda/texture.pyx:296: in cupy.cuda.texture.CUDAarray.__init__
    self.ptr = runtime.malloc3DArray(desc.ptr, width, height, depth,
cupy_backends/cuda/api/runtime.pyx:593: in cupy_backends.cuda.api.runtime.malloc3DArray
    check_status(status)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

>   raise CUDARuntimeError(status)
E   AssertionError: Only cupy raises error
E   
E   Traceback (most recent call last):
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.hXnTrEAC7u/cupy/cupy/testing/_helper.py", line 47, in _call_func
E       result = impl(self, *args, **kw)
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.hXnTrEAC7u/cupy/tests/cupyx_tests/scipy_tests/ndimage_tests/test_interpolation.py", line 398, in test_affine_transform_texture_memory
E       return m(a, matrix, output_shape=output_shape,
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.hXnTrEAC7u/cupy/cupyx/scipy/ndimage/interpolation.py", line 376, in affine_transform
E       return _texture.affine_transformation(data=input,
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.hXnTrEAC7u/cupy/cupyx/_texture.py", line 168, in affine_transformation
E       texture_object = _create_texture_object(data,
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.hXnTrEAC7u/cupy/cupyx/_texture.py", line 98, in _create_texture_object
E       array = texture.CUDAarray(texture_fmt, *data.shape[::-1])
E     File "cupy/cuda/texture.pyx", line 296, in cupy.cuda.texture.CUDAarray.__init__
E       self.ptr = runtime.malloc3DArray(desc.ptr, width, height, depth,
E     File "cupy_backends/cuda/api/runtime.pyx", line 593, in cupy_backends.cuda.api.runtime.malloc3DArray
E       check_status(status)
E     File "cupy_backends/cuda/api/runtime.pyx", line 265, in cupy_backends.cuda.api.runtime.check_status
E       raise CUDARuntimeError(status)
E   cupy_backends.cuda.api.runtime.CUDARuntimeError: hipErrorUnknown: hipErrorUnknown

cupy_backends/cuda/api/runtime.pyx:265: AssertionError
----------------------------- Captured stderr call -----------------------------
Traceback (most recent call last):
  File "cupy_backends/cuda/api/runtime.pyx", line 644, in cupy_backends.cuda.api.runtime.freeArray
    check_status(status)
  File "cupy_backends/cuda/api/runtime.pyx", line 265, in cupy_backends.cuda.api.runtime.check_status
    raise CUDARuntimeError(status)
cupy_backends.cuda.api.runtime.CUDARuntimeError: hipErrorUnknown: hipErrorUnknown
_ TestAffineTransformTextureMemory.test_affine_transform_texture_memory[_param_137_{mode='constant', order=1, output=float32, output_shape=None, shape=(10, 10, 10), theta=90}] _

self = <<cupyx_tests.scipy_tests.ndimage_tests.test_interpolation.TestAffineTransformTextureMemory object at 0x7fac5114de20> ...: 'constant', 'order': 1, 'output': <class 'numpy.float32'>, 'output_shape': None, 'shape': (10, 10, 10), 'theta': 90}>
xp = <module 'cupy' from '/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.hXnTrEAC7u/cupy/cupy/__init__.py'>
scp = <module 'cupyx.scipy' from '/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.hXnTrEAC7u/cupy/cupyx/scipy/__init__.py'>

    @testing.numpy_cupy_allclose(atol=0.1, scipy_name='scp')
    def test_affine_transform_texture_memory(self, xp, scp):
        a = xp.ones(self.shape, dtype=xp.float32)
        center = numpy.divide(numpy.subtract(self.shape, 1), 2)
    
        if len(self.shape) == 2:
            matrix = self._2d_rotation_matrix(self.theta, center)
        elif len(self.shape) == 3:
            matrix = self._3d_rotation_matrix(self.theta, center)
        else:
            return pytest.xfail('Unsupported shape')
    
        if self.output == 'empty':
            output = xp.empty(self.shape, dtype=xp.float32)
            if self.output_shape:
                return pytest.skip('This combination is tested in '
                                   'test_invalid_texture_arguments')
        else:
            output = self.output
    
        if self.output_shape:
            output_shape = (self.output_shape, ) * len(self.shape)
        else:
            output_shape = self.output_shape
    
        if xp == cupy:
            m = cupyx.scipy.ndimage.affine_transform
            matrix = cupy.array(matrix)
>           return m(a, matrix, output_shape=output_shape,
                     output=output, order=self.order,
                     mode=self.mode, texture_memory=True)

tests/cupyx_tests/scipy_tests/ndimage_tests/test_interpolation.py:398: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
cupyx/scipy/ndimage/interpolation.py:376: in affine_transform
    return _texture.affine_transformation(data=input,
cupyx/_texture.py:168: in affine_transformation
    texture_object = _create_texture_object(data,
cupyx/_texture.py:98: in _create_texture_object
    array = texture.CUDAarray(texture_fmt, *data.shape[::-1])
cupy/cuda/texture.pyx:296: in cupy.cuda.texture.CUDAarray.__init__
    self.ptr = runtime.malloc3DArray(desc.ptr, width, height, depth,
cupy_backends/cuda/api/runtime.pyx:593: in cupy_backends.cuda.api.runtime.malloc3DArray
    check_status(status)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

>   raise CUDARuntimeError(status)
E   AssertionError: Only cupy raises error
E   
E   Traceback (most recent call last):
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.hXnTrEAC7u/cupy/cupy/testing/_helper.py", line 47, in _call_func
E       result = impl(self, *args, **kw)
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.hXnTrEAC7u/cupy/tests/cupyx_tests/scipy_tests/ndimage_tests/test_interpolation.py", line 398, in test_affine_transform_texture_memory
E       return m(a, matrix, output_shape=output_shape,
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.hXnTrEAC7u/cupy/cupyx/scipy/ndimage/interpolation.py", line 376, in affine_transform
E       return _texture.affine_transformation(data=input,
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.hXnTrEAC7u/cupy/cupyx/_texture.py", line 168, in affine_transformation
E       texture_object = _create_texture_object(data,
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.hXnTrEAC7u/cupy/cupyx/_texture.py", line 98, in _create_texture_object
E       array = texture.CUDAarray(texture_fmt, *data.shape[::-1])
E     File "cupy/cuda/texture.pyx", line 296, in cupy.cuda.texture.CUDAarray.__init__
E       self.ptr = runtime.malloc3DArray(desc.ptr, width, height, depth,
E     File "cupy_backends/cuda/api/runtime.pyx", line 593, in cupy_backends.cuda.api.runtime.malloc3DArray
E       check_status(status)
E     File "cupy_backends/cuda/api/runtime.pyx", line 265, in cupy_backends.cuda.api.runtime.check_status
E       raise CUDARuntimeError(status)
E   cupy_backends.cuda.api.runtime.CUDARuntimeError: hipErrorUnknown: hipErrorUnknown

cupy_backends/cuda/api/runtime.pyx:265: AssertionError
----------------------------- Captured stderr call -----------------------------
Traceback (most recent call last):
  File "cupy_backends/cuda/api/runtime.pyx", line 644, in cupy_backends.cuda.api.runtime.freeArray
    check_status(status)
  File "cupy_backends/cuda/api/runtime.pyx", line 265, in cupy_backends.cuda.api.runtime.check_status
    raise CUDARuntimeError(status)
cupy_backends.cuda.api.runtime.CUDARuntimeError: hipErrorUnknown: hipErrorUnknown
_ TestAffineTransformTextureMemory.test_affine_transform_texture_memory[_param_138_{mode='constant', order=1, output=float32, output_shape=None, shape=(10, 10, 10), theta=180}] _

self = <<cupyx_tests.scipy_tests.ndimage_tests.test_interpolation.TestAffineTransformTextureMemory object at 0x7fab3714d640> ... 'constant', 'order': 1, 'output': <class 'numpy.float32'>, 'output_shape': None, 'shape': (10, 10, 10), 'theta': 180}>
xp = <module 'cupy' from '/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.hXnTrEAC7u/cupy/cupy/__init__.py'>
scp = <module 'cupyx.scipy' from '/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.hXnTrEAC7u/cupy/cupyx/scipy/__init__.py'>

    @testing.numpy_cupy_allclose(atol=0.1, scipy_name='scp')
    def test_affine_transform_texture_memory(self, xp, scp):
        a = xp.ones(self.shape, dtype=xp.float32)
        center = numpy.divide(numpy.subtract(self.shape, 1), 2)
    
        if len(self.shape) == 2:
            matrix = self._2d_rotation_matrix(self.theta, center)
        elif len(self.shape) == 3:
            matrix = self._3d_rotation_matrix(self.theta, center)
        else:
            return pytest.xfail('Unsupported shape')
    
        if self.output == 'empty':
            output = xp.empty(self.shape, dtype=xp.float32)
            if self.output_shape:
                return pytest.skip('This combination is tested in '
                                   'test_invalid_texture_arguments')
        else:
            output = self.output
    
        if self.output_shape:
            output_shape = (self.output_shape, ) * len(self.shape)
        else:
            output_shape = self.output_shape
    
        if xp == cupy:
            m = cupyx.scipy.ndimage.affine_transform
            matrix = cupy.array(matrix)
>           return m(a, matrix, output_shape=output_shape,
                     output=output, order=self.order,
                     mode=self.mode, texture_memory=True)

tests/cupyx_tests/scipy_tests/ndimage_tests/test_interpolation.py:398: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
cupyx/scipy/ndimage/interpolation.py:376: in affine_transform
    return _texture.affine_transformation(data=input,
cupyx/_texture.py:168: in affine_transformation
    texture_object = _create_texture_object(data,
cupyx/_texture.py:98: in _create_texture_object
    array = texture.CUDAarray(texture_fmt, *data.shape[::-1])
cupy/cuda/texture.pyx:296: in cupy.cuda.texture.CUDAarray.__init__
    self.ptr = runtime.malloc3DArray(desc.ptr, width, height, depth,
cupy_backends/cuda/api/runtime.pyx:593: in cupy_backends.cuda.api.runtime.malloc3DArray
    check_status(status)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

>   raise CUDARuntimeError(status)
E   AssertionError: Only cupy raises error
E   
E   Traceback (most recent call last):
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.hXnTrEAC7u/cupy/cupy/testing/_helper.py", line 47, in _call_func
E       result = impl(self, *args, **kw)
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.hXnTrEAC7u/cupy/tests/cupyx_tests/scipy_tests/ndimage_tests/test_interpolation.py", line 398, in test_affine_transform_texture_memory
E       return m(a, matrix, output_shape=output_shape,
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.hXnTrEAC7u/cupy/cupyx/scipy/ndimage/interpolation.py", line 376, in affine_transform
E       return _texture.affine_transformation(data=input,
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.hXnTrEAC7u/cupy/cupyx/_texture.py", line 168, in affine_transformation
E       texture_object = _create_texture_object(data,
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.hXnTrEAC7u/cupy/cupyx/_texture.py", line 98, in _create_texture_object
E       array = texture.CUDAarray(texture_fmt, *data.shape[::-1])
E     File "cupy/cuda/texture.pyx", line 296, in cupy.cuda.texture.CUDAarray.__init__
E       self.ptr = runtime.malloc3DArray(desc.ptr, width, height, depth,
E     File "cupy_backends/cuda/api/runtime.pyx", line 593, in cupy_backends.cuda.api.runtime.malloc3DArray
E       check_status(status)
E     File "cupy_backends/cuda/api/runtime.pyx", line 265, in cupy_backends.cuda.api.runtime.check_status
E       raise CUDARuntimeError(status)
E   cupy_backends.cuda.api.runtime.CUDARuntimeError: hipErrorUnknown: hipErrorUnknown

cupy_backends/cuda/api/runtime.pyx:265: AssertionError
----------------------------- Captured stderr call -----------------------------
Traceback (most recent call last):
  File "cupy_backends/cuda/api/runtime.pyx", line 644, in cupy_backends.cuda.api.runtime.freeArray
    check_status(status)
  File "cupy_backends/cuda/api/runtime.pyx", line 265, in cupy_backends.cuda.api.runtime.check_status
    raise CUDARuntimeError(status)
cupy_backends.cuda.api.runtime.CUDARuntimeError: hipErrorUnknown: hipErrorUnknown
_ TestAffineTransformTextureMemory.test_affine_transform_texture_memory[_param_139_{mode='constant', order=1, output=float32, output_shape=None, shape=(10, 10, 10), theta=270}] _

self = <<cupyx_tests.scipy_tests.ndimage_tests.test_interpolation.TestAffineTransformTextureMemory object at 0x7fab37276220> ... 'constant', 'order': 1, 'output': <class 'numpy.float32'>, 'output_shape': None, 'shape': (10, 10, 10), 'theta': 270}>
xp = <module 'cupy' from '/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.hXnTrEAC7u/cupy/cupy/__init__.py'>
scp = <module 'cupyx.scipy' from '/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.hXnTrEAC7u/cupy/cupyx/scipy/__init__.py'>

    @testing.numpy_cupy_allclose(atol=0.1, scipy_name='scp')
    def test_affine_transform_texture_memory(self, xp, scp):
        a = xp.ones(self.shape, dtype=xp.float32)
        center = numpy.divide(numpy.subtract(self.shape, 1), 2)
    
        if len(self.shape) == 2:
            matrix = self._2d_rotation_matrix(self.theta, center)
        elif len(self.shape) == 3:
            matrix = self._3d_rotation_matrix(self.theta, center)
        else:
            return pytest.xfail('Unsupported shape')
    
        if self.output == 'empty':
            output = xp.empty(self.shape, dtype=xp.float32)
            if self.output_shape:
                return pytest.skip('This combination is tested in '
                                   'test_invalid_texture_arguments')
        else:
            output = self.output
    
        if self.output_shape:
            output_shape = (self.output_shape, ) * len(self.shape)
        else:
            output_shape = self.output_shape
    
        if xp == cupy:
            m = cupyx.scipy.ndimage.affine_transform
            matrix = cupy.array(matrix)
>           return m(a, matrix, output_shape=output_shape,
                     output=output, order=self.order,
                     mode=self.mode, texture_memory=True)

tests/cupyx_tests/scipy_tests/ndimage_tests/test_interpolation.py:398: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
cupyx/scipy/ndimage/interpolation.py:376: in affine_transform
    return _texture.affine_transformation(data=input,
cupyx/_texture.py:168: in affine_transformation
    texture_object = _create_texture_object(data,
cupyx/_texture.py:98: in _create_texture_object
    array = texture.CUDAarray(texture_fmt, *data.shape[::-1])
cupy/cuda/texture.pyx:296: in cupy.cuda.texture.CUDAarray.__init__
    self.ptr = runtime.malloc3DArray(desc.ptr, width, height, depth,
cupy_backends/cuda/api/runtime.pyx:593: in cupy_backends.cuda.api.runtime.malloc3DArray
    check_status(status)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

>   raise CUDARuntimeError(status)
E   AssertionError: Only cupy raises error
E   
E   Traceback (most recent call last):
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.hXnTrEAC7u/cupy/cupy/testing/_helper.py", line 47, in _call_func
E       result = impl(self, *args, **kw)
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.hXnTrEAC7u/cupy/tests/cupyx_tests/scipy_tests/ndimage_tests/test_interpolation.py", line 398, in test_affine_transform_texture_memory
E       return m(a, matrix, output_shape=output_shape,
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.hXnTrEAC7u/cupy/cupyx/scipy/ndimage/interpolation.py", line 376, in affine_transform
E       return _texture.affine_transformation(data=input,
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.hXnTrEAC7u/cupy/cupyx/_texture.py", line 168, in affine_transformation
E       texture_object = _create_texture_object(data,
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.hXnTrEAC7u/cupy/cupyx/_texture.py", line 98, in _create_texture_object
E       array = texture.CUDAarray(texture_fmt, *data.shape[::-1])
E     File "cupy/cuda/texture.pyx", line 296, in cupy.cuda.texture.CUDAarray.__init__
E       self.ptr = runtime.malloc3DArray(desc.ptr, width, height, depth,
E     File "cupy_backends/cuda/api/runtime.pyx", line 593, in cupy_backends.cuda.api.runtime.malloc3DArray
E       check_status(status)
E     File "cupy_backends/cuda/api/runtime.pyx", line 265, in cupy_backends.cuda.api.runtime.check_status
E       raise CUDARuntimeError(status)
E   cupy_backends.cuda.api.runtime.CUDARuntimeError: hipErrorUnknown: hipErrorUnknown

cupy_backends/cuda/api/runtime.pyx:265: AssertionError
----------------------------- Captured stderr call -----------------------------
Traceback (most recent call last):
  File "cupy_backends/cuda/api/runtime.pyx", line 644, in cupy_backends.cuda.api.runtime.freeArray
    check_status(status)
  File "cupy_backends/cuda/api/runtime.pyx", line 265, in cupy_backends.cuda.api.runtime.check_status
    raise CUDARuntimeError(status)
cupy_backends.cuda.api.runtime.CUDARuntimeError: hipErrorUnknown: hipErrorUnknown
_ TestAffineTransformTextureMemory.test_affine_transform_texture_memory[_param_140_{mode='constant', order=1, output=float32, output_shape=None, shape=(10, 20, 30), theta=0}] _

self = <<cupyx_tests.scipy_tests.ndimage_tests.test_interpolation.TestAffineTransformTextureMemory object at 0x7fab38adb670> ...': 'constant', 'order': 1, 'output': <class 'numpy.float32'>, 'output_shape': None, 'shape': (10, 20, 30), 'theta': 0}>
xp = <module 'cupy' from '/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.hXnTrEAC7u/cupy/cupy/__init__.py'>
scp = <module 'cupyx.scipy' from '/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.hXnTrEAC7u/cupy/cupyx/scipy/__init__.py'>

    @testing.numpy_cupy_allclose(atol=0.1, scipy_name='scp')
    def test_affine_transform_texture_memory(self, xp, scp):
        a = xp.ones(self.shape, dtype=xp.float32)
        center = numpy.divide(numpy.subtract(self.shape, 1), 2)
    
        if len(self.shape) == 2:
            matrix = self._2d_rotation_matrix(self.theta, center)
        elif len(self.shape) == 3:
            matrix = self._3d_rotation_matrix(self.theta, center)
        else:
            return pytest.xfail('Unsupported shape')
    
        if self.output == 'empty':
            output = xp.empty(self.shape, dtype=xp.float32)
            if self.output_shape:
                return pytest.skip('This combination is tested in '
                                   'test_invalid_texture_arguments')
        else:
            output = self.output
    
        if self.output_shape:
            output_shape = (self.output_shape, ) * len(self.shape)
        else:
            output_shape = self.output_shape
    
        if xp == cupy:
            m = cupyx.scipy.ndimage.affine_transform
            matrix = cupy.array(matrix)
>           return m(a, matrix, output_shape=output_shape,
                     output=output, order=self.order,
                     mode=self.mode, texture_memory=True)

tests/cupyx_tests/scipy_tests/ndimage_tests/test_interpolation.py:398: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
cupyx/scipy/ndimage/interpolation.py:376: in affine_transform
    return _texture.affine_transformation(data=input,
cupyx/_texture.py:168: in affine_transformation
    texture_object = _create_texture_object(data,
cupyx/_texture.py:98: in _create_texture_object
    array = texture.CUDAarray(texture_fmt, *data.shape[::-1])
cupy/cuda/texture.pyx:296: in cupy.cuda.texture.CUDAarray.__init__
    self.ptr = runtime.malloc3DArray(desc.ptr, width, height, depth,
cupy_backends/cuda/api/runtime.pyx:593: in cupy_backends.cuda.api.runtime.malloc3DArray
    check_status(status)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

>   raise CUDARuntimeError(status)
E   AssertionError: Only cupy raises error
E   
E   Traceback (most recent call last):
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.hXnTrEAC7u/cupy/cupy/testing/_helper.py", line 47, in _call_func
E       result = impl(self, *args, **kw)
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.hXnTrEAC7u/cupy/tests/cupyx_tests/scipy_tests/ndimage_tests/test_interpolation.py", line 398, in test_affine_transform_texture_memory
E       return m(a, matrix, output_shape=output_shape,
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.hXnTrEAC7u/cupy/cupyx/scipy/ndimage/interpolation.py", line 376, in affine_transform
E       return _texture.affine_transformation(data=input,
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.hXnTrEAC7u/cupy/cupyx/_texture.py", line 168, in affine_transformation
E       texture_object = _create_texture_object(data,
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.hXnTrEAC7u/cupy/cupyx/_texture.py", line 98, in _create_texture_object
E       array = texture.CUDAarray(texture_fmt, *data.shape[::-1])
E     File "cupy/cuda/texture.pyx", line 296, in cupy.cuda.texture.CUDAarray.__init__
E       self.ptr = runtime.malloc3DArray(desc.ptr, width, height, depth,
E     File "cupy_backends/cuda/api/runtime.pyx", line 593, in cupy_backends.cuda.api.runtime.malloc3DArray
E       check_status(status)
E     File "cupy_backends/cuda/api/runtime.pyx", line 265, in cupy_backends.cuda.api.runtime.check_status
E       raise CUDARuntimeError(status)
E   cupy_backends.cuda.api.runtime.CUDARuntimeError: hipErrorUnknown: hipErrorUnknown

cupy_backends/cuda/api/runtime.pyx:265: AssertionError
----------------------------- Captured stderr call -----------------------------
Traceback (most recent call last):
  File "cupy_backends/cuda/api/runtime.pyx", line 644, in cupy_backends.cuda.api.runtime.freeArray
    check_status(status)
  File "cupy_backends/cuda/api/runtime.pyx", line 265, in cupy_backends.cuda.api.runtime.check_status
    raise CUDARuntimeError(status)
cupy_backends.cuda.api.runtime.CUDARuntimeError: hipErrorUnknown: hipErrorUnknown
_ TestAffineTransformTextureMemory.test_affine_transform_texture_memory[_param_141_{mode='constant', order=1, output=float32, output_shape=None, shape=(10, 20, 30), theta=90}] _

self = <<cupyx_tests.scipy_tests.ndimage_tests.test_interpolation.TestAffineTransformTextureMemory object at 0x7fab3727b880> ...: 'constant', 'order': 1, 'output': <class 'numpy.float32'>, 'output_shape': None, 'shape': (10, 20, 30), 'theta': 90}>
xp = <module 'cupy' from '/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.hXnTrEAC7u/cupy/cupy/__init__.py'>
scp = <module 'cupyx.scipy' from '/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.hXnTrEAC7u/cupy/cupyx/scipy/__init__.py'>

    @testing.numpy_cupy_allclose(atol=0.1, scipy_name='scp')
    def test_affine_transform_texture_memory(self, xp, scp):
        a = xp.ones(self.shape, dtype=xp.float32)
        center = numpy.divide(numpy.subtract(self.shape, 1), 2)
    
        if len(self.shape) == 2:
            matrix = self._2d_rotation_matrix(self.theta, center)
        elif len(self.shape) == 3:
            matrix = self._3d_rotation_matrix(self.theta, center)
        else:
            return pytest.xfail('Unsupported shape')
    
        if self.output == 'empty':
            output = xp.empty(self.shape, dtype=xp.float32)
            if self.output_shape:
                return pytest.skip('This combination is tested in '
                                   'test_invalid_texture_arguments')
        else:
            output = self.output
    
        if self.output_shape:
            output_shape = (self.output_shape, ) * len(self.shape)
        else:
            output_shape = self.output_shape
    
        if xp == cupy:
            m = cupyx.scipy.ndimage.affine_transform
            matrix = cupy.array(matrix)
>           return m(a, matrix, output_shape=output_shape,
                     output=output, order=self.order,
                     mode=self.mode, texture_memory=True)

tests/cupyx_tests/scipy_tests/ndimage_tests/test_interpolation.py:398: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
cupyx/scipy/ndimage/interpolation.py:376: in affine_transform
    return _texture.affine_transformation(data=input,
cupyx/_texture.py:168: in affine_transformation
    texture_object = _create_texture_object(data,
cupyx/_texture.py:98: in _create_texture_object
    array = texture.CUDAarray(texture_fmt, *data.shape[::-1])
cupy/cuda/texture.pyx:296: in cupy.cuda.texture.CUDAarray.__init__
    self.ptr = runtime.malloc3DArray(desc.ptr, width, height, depth,
cupy_backends/cuda/api/runtime.pyx:593: in cupy_backends.cuda.api.runtime.malloc3DArray
    check_status(status)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

>   raise CUDARuntimeError(status)
E   AssertionError: Only cupy raises error
E   
E   Traceback (most recent call last):
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.hXnTrEAC7u/cupy/cupy/testing/_helper.py", line 47, in _call_func
E       result = impl(self, *args, **kw)
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.hXnTrEAC7u/cupy/tests/cupyx_tests/scipy_tests/ndimage_tests/test_interpolation.py", line 398, in test_affine_transform_texture_memory
E       return m(a, matrix, output_shape=output_shape,
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.hXnTrEAC7u/cupy/cupyx/scipy/ndimage/interpolation.py", line 376, in affine_transform
E       return _texture.affine_transformation(data=input,
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.hXnTrEAC7u/cupy/cupyx/_texture.py", line 168, in affine_transformation
E       texture_object = _create_texture_object(data,
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.hXnTrEAC7u/cupy/cupyx/_texture.py", line 98, in _create_texture_object
E       array = texture.CUDAarray(texture_fmt, *data.shape[::-1])
E     File "cupy/cuda/texture.pyx", line 296, in cupy.cuda.texture.CUDAarray.__init__
E       self.ptr = runtime.malloc3DArray(desc.ptr, width, height, depth,
E     File "cupy_backends/cuda/api/runtime.pyx", line 593, in cupy_backends.cuda.api.runtime.malloc3DArray
E       check_status(status)
E     File "cupy_backends/cuda/api/runtime.pyx", line 265, in cupy_backends.cuda.api.runtime.check_status
E       raise CUDARuntimeError(status)
E   cupy_backends.cuda.api.runtime.CUDARuntimeError: hipErrorUnknown: hipErrorUnknown

cupy_backends/cuda/api/runtime.pyx:265: AssertionError
----------------------------- Captured stderr call -----------------------------
Traceback (most recent call last):
  File "cupy_backends/cuda/api/runtime.pyx", line 644, in cupy_backends.cuda.api.runtime.freeArray
    check_status(status)
  File "cupy_backends/cuda/api/runtime.pyx", line 265, in cupy_backends.cuda.api.runtime.check_status
    raise CUDARuntimeError(status)
cupy_backends.cuda.api.runtime.CUDARuntimeError: hipErrorUnknown: hipErrorUnknown
_ TestAffineTransformTextureMemory.test_affine_transform_texture_memory[_param_142_{mode='constant', order=1, output=float32, output_shape=None, shape=(10, 20, 30), theta=180}] _

self = <<cupyx_tests.scipy_tests.ndimage_tests.test_interpolation.TestAffineTransformTextureMemory object at 0x7fab3718f640> ... 'constant', 'order': 1, 'output': <class 'numpy.float32'>, 'output_shape': None, 'shape': (10, 20, 30), 'theta': 180}>
xp = <module 'cupy' from '/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.hXnTrEAC7u/cupy/cupy/__init__.py'>
scp = <module 'cupyx.scipy' from '/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.hXnTrEAC7u/cupy/cupyx/scipy/__init__.py'>

    @testing.numpy_cupy_allclose(atol=0.1, scipy_name='scp')
    def test_affine_transform_texture_memory(self, xp, scp):
        a = xp.ones(self.shape, dtype=xp.float32)
        center = numpy.divide(numpy.subtract(self.shape, 1), 2)
    
        if len(self.shape) == 2:
            matrix = self._2d_rotation_matrix(self.theta, center)
        elif len(self.shape) == 3:
            matrix = self._3d_rotation_matrix(self.theta, center)
        else:
            return pytest.xfail('Unsupported shape')
    
        if self.output == 'empty':
            output = xp.empty(self.shape, dtype=xp.float32)
            if self.output_shape:
                return pytest.skip('This combination is tested in '
                                   'test_invalid_texture_arguments')
        else:
            output = self.output
    
        if self.output_shape:
            output_shape = (self.output_shape, ) * len(self.shape)
        else:
            output_shape = self.output_shape
    
        if xp == cupy:
            m = cupyx.scipy.ndimage.affine_transform
            matrix = cupy.array(matrix)
>           return m(a, matrix, output_shape=output_shape,
                     output=output, order=self.order,
                     mode=self.mode, texture_memory=True)

tests/cupyx_tests/scipy_tests/ndimage_tests/test_interpolation.py:398: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
cupyx/scipy/ndimage/interpolation.py:376: in affine_transform
    return _texture.affine_transformation(data=input,
cupyx/_texture.py:168: in affine_transformation
    texture_object = _create_texture_object(data,
cupyx/_texture.py:98: in _create_texture_object
    array = texture.CUDAarray(texture_fmt, *data.shape[::-1])
cupy/cuda/texture.pyx:296: in cupy.cuda.texture.CUDAarray.__init__
    self.ptr = runtime.malloc3DArray(desc.ptr, width, height, depth,
cupy_backends/cuda/api/runtime.pyx:593: in cupy_backends.cuda.api.runtime.malloc3DArray
    check_status(status)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

>   raise CUDARuntimeError(status)
E   AssertionError: Only cupy raises error
E   
E   Traceback (most recent call last):
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.hXnTrEAC7u/cupy/cupy/testing/_helper.py", line 47, in _call_func
E       result = impl(self, *args, **kw)
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.hXnTrEAC7u/cupy/tests/cupyx_tests/scipy_tests/ndimage_tests/test_interpolation.py", line 398, in test_affine_transform_texture_memory
E       return m(a, matrix, output_shape=output_shape,
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.hXnTrEAC7u/cupy/cupyx/scipy/ndimage/interpolation.py", line 376, in affine_transform
E       return _texture.affine_transformation(data=input,
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.hXnTrEAC7u/cupy/cupyx/_texture.py", line 168, in affine_transformation
E       texture_object = _create_texture_object(data,
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.hXnTrEAC7u/cupy/cupyx/_texture.py", line 98, in _create_texture_object
E       array = texture.CUDAarray(texture_fmt, *data.shape[::-1])
E     File "cupy/cuda/texture.pyx", line 296, in cupy.cuda.texture.CUDAarray.__init__
E       self.ptr = runtime.malloc3DArray(desc.ptr, width, height, depth,
E     File "cupy_backends/cuda/api/runtime.pyx", line 593, in cupy_backends.cuda.api.runtime.malloc3DArray
E       check_status(status)
E     File "cupy_backends/cuda/api/runtime.pyx", line 265, in cupy_backends.cuda.api.runtime.check_status
E       raise CUDARuntimeError(status)
E   cupy_backends.cuda.api.runtime.CUDARuntimeError: hipErrorUnknown: hipErrorUnknown

cupy_backends/cuda/api/runtime.pyx:265: AssertionError
----------------------------- Captured stderr call -----------------------------
Traceback (most recent call last):
  File "cupy_backends/cuda/api/runtime.pyx", line 644, in cupy_backends.cuda.api.runtime.freeArray
    check_status(status)
  File "cupy_backends/cuda/api/runtime.pyx", line 265, in cupy_backends.cuda.api.runtime.check_status
    raise CUDARuntimeError(status)
cupy_backends.cuda.api.runtime.CUDARuntimeError: hipErrorUnknown: hipErrorUnknown
_ TestAffineTransformTextureMemory.test_affine_transform_texture_memory[_param_143_{mode='constant', order=1, output=float32, output_shape=None, shape=(10, 20, 30), theta=270}] _

self = <<cupyx_tests.scipy_tests.ndimage_tests.test_interpolation.TestAffineTransformTextureMemory object at 0x7fab38f768b0> ... 'constant', 'order': 1, 'output': <class 'numpy.float32'>, 'output_shape': None, 'shape': (10, 20, 30), 'theta': 270}>
xp = <module 'cupy' from '/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.hXnTrEAC7u/cupy/cupy/__init__.py'>
scp = <module 'cupyx.scipy' from '/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.hXnTrEAC7u/cupy/cupyx/scipy/__init__.py'>

    @testing.numpy_cupy_allclose(atol=0.1, scipy_name='scp')
    def test_affine_transform_texture_memory(self, xp, scp):
        a = xp.ones(self.shape, dtype=xp.float32)
        center = numpy.divide(numpy.subtract(self.shape, 1), 2)
    
        if len(self.shape) == 2:
            matrix = self._2d_rotation_matrix(self.theta, center)
        elif len(self.shape) == 3:
            matrix = self._3d_rotation_matrix(self.theta, center)
        else:
            return pytest.xfail('Unsupported shape')
    
        if self.output == 'empty':
            output = xp.empty(self.shape, dtype=xp.float32)
            if self.output_shape:
                return pytest.skip('This combination is tested in '
                                   'test_invalid_texture_arguments')
        else:
            output = self.output
    
        if self.output_shape:
            output_shape = (self.output_shape, ) * len(self.shape)
        else:
            output_shape = self.output_shape
    
        if xp == cupy:
            m = cupyx.scipy.ndimage.affine_transform
            matrix = cupy.array(matrix)
>           return m(a, matrix, output_shape=output_shape,
                     output=output, order=self.order,
                     mode=self.mode, texture_memory=True)

tests/cupyx_tests/scipy_tests/ndimage_tests/test_interpolation.py:398: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
cupyx/scipy/ndimage/interpolation.py:376: in affine_transform
    return _texture.affine_transformation(data=input,
cupyx/_texture.py:168: in affine_transformation
    texture_object = _create_texture_object(data,
cupyx/_texture.py:98: in _create_texture_object
    array = texture.CUDAarray(texture_fmt, *data.shape[::-1])
cupy/cuda/texture.pyx:296: in cupy.cuda.texture.CUDAarray.__init__
    self.ptr = runtime.malloc3DArray(desc.ptr, width, height, depth,
cupy_backends/cuda/api/runtime.pyx:593: in cupy_backends.cuda.api.runtime.malloc3DArray
    check_status(status)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

>   raise CUDARuntimeError(status)
E   AssertionError: Only cupy raises error
E   
E   Traceback (most recent call last):
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.hXnTrEAC7u/cupy/cupy/testing/_helper.py", line 47, in _call_func
E       result = impl(self, *args, **kw)
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.hXnTrEAC7u/cupy/tests/cupyx_tests/scipy_tests/ndimage_tests/test_interpolation.py", line 398, in test_affine_transform_texture_memory
E       return m(a, matrix, output_shape=output_shape,
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.hXnTrEAC7u/cupy/cupyx/scipy/ndimage/interpolation.py", line 376, in affine_transform
E       return _texture.affine_transformation(data=input,
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.hXnTrEAC7u/cupy/cupyx/_texture.py", line 168, in affine_transformation
E       texture_object = _create_texture_object(data,
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.hXnTrEAC7u/cupy/cupyx/_texture.py", line 98, in _create_texture_object
E       array = texture.CUDAarray(texture_fmt, *data.shape[::-1])
E     File "cupy/cuda/texture.pyx", line 296, in cupy.cuda.texture.CUDAarray.__init__
E       self.ptr = runtime.malloc3DArray(desc.ptr, width, height, depth,
E     File "cupy_backends/cuda/api/runtime.pyx", line 593, in cupy_backends.cuda.api.runtime.malloc3DArray
E       check_status(status)
E     File "cupy_backends/cuda/api/runtime.pyx", line 265, in cupy_backends.cuda.api.runtime.check_status
E       raise CUDARuntimeError(status)
E   cupy_backends.cuda.api.runtime.CUDARuntimeError: hipErrorUnknown: hipErrorUnknown

cupy_backends/cuda/api/runtime.pyx:265: AssertionError
----------------------------- Captured stderr call -----------------------------
Traceback (most recent call last):
  File "cupy_backends/cuda/api/runtime.pyx", line 644, in cupy_backends.cuda.api.runtime.freeArray
    check_status(status)
  File "cupy_backends/cuda/api/runtime.pyx", line 265, in cupy_backends.cuda.api.runtime.check_status
    raise CUDARuntimeError(status)
cupy_backends.cuda.api.runtime.CUDARuntimeError: hipErrorUnknown: hipErrorUnknown
_ TestAffineTransformTextureMemory.test_affine_transform_texture_memory[_param_144_{mode='constant', order=1, output=float32, output_shape=10, shape=(100, 100), theta=0}] _

self = <<cupyx_tests.scipy_tests.ndimage_tests.test_interpolation.TestAffineTransformTextureMemory object at 0x7fac5111c220> ...mode': 'constant', 'order': 1, 'output': <class 'numpy.float32'>, 'output_shape': 10, 'shape': (100, 100), 'theta': 0}>
xp = <module 'cupy' from '/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.hXnTrEAC7u/cupy/cupy/__init__.py'>
scp = <module 'cupyx.scipy' from '/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.hXnTrEAC7u/cupy/cupyx/scipy/__init__.py'>

    @testing.numpy_cupy_allclose(atol=0.1, scipy_name='scp')
    def test_affine_transform_texture_memory(self, xp, scp):
        a = xp.ones(self.shape, dtype=xp.float32)
        center = numpy.divide(numpy.subtract(self.shape, 1), 2)
    
        if len(self.shape) == 2:
            matrix = self._2d_rotation_matrix(self.theta, center)
        elif len(self.shape) == 3:
            matrix = self._3d_rotation_matrix(self.theta, center)
        else:
            return pytest.xfail('Unsupported shape')
    
        if self.output == 'empty':
            output = xp.empty(self.shape, dtype=xp.float32)
            if self.output_shape:
                return pytest.skip('This combination is tested in '
                                   'test_invalid_texture_arguments')
        else:
            output = self.output
    
        if self.output_shape:
            output_shape = (self.output_shape, ) * len(self.shape)
        else:
            output_shape = self.output_shape
    
        if xp == cupy:
            m = cupyx.scipy.ndimage.affine_transform
            matrix = cupy.array(matrix)
>           return m(a, matrix, output_shape=output_shape,
                     output=output, order=self.order,
                     mode=self.mode, texture_memory=True)

tests/cupyx_tests/scipy_tests/ndimage_tests/test_interpolation.py:398: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
cupyx/scipy/ndimage/interpolation.py:376: in affine_transform
    return _texture.affine_transformation(data=input,
cupyx/_texture.py:168: in affine_transformation
    texture_object = _create_texture_object(data,
cupyx/_texture.py:98: in _create_texture_object
    array = texture.CUDAarray(texture_fmt, *data.shape[::-1])
cupy/cuda/texture.pyx:296: in cupy.cuda.texture.CUDAarray.__init__
    self.ptr = runtime.malloc3DArray(desc.ptr, width, height, depth,
cupy_backends/cuda/api/runtime.pyx:593: in cupy_backends.cuda.api.runtime.malloc3DArray
    check_status(status)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

>   raise CUDARuntimeError(status)
E   AssertionError: Only cupy raises error
E   
E   Traceback (most recent call last):
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.hXnTrEAC7u/cupy/cupy/testing/_helper.py", line 47, in _call_func
E       result = impl(self, *args, **kw)
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.hXnTrEAC7u/cupy/tests/cupyx_tests/scipy_tests/ndimage_tests/test_interpolation.py", line 398, in test_affine_transform_texture_memory
E       return m(a, matrix, output_shape=output_shape,
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.hXnTrEAC7u/cupy/cupyx/scipy/ndimage/interpolation.py", line 376, in affine_transform
E       return _texture.affine_transformation(data=input,
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.hXnTrEAC7u/cupy/cupyx/_texture.py", line 168, in affine_transformation
E       texture_object = _create_texture_object(data,
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.hXnTrEAC7u/cupy/cupyx/_texture.py", line 98, in _create_texture_object
E       array = texture.CUDAarray(texture_fmt, *data.shape[::-1])
E     File "cupy/cuda/texture.pyx", line 296, in cupy.cuda.texture.CUDAarray.__init__
E       self.ptr = runtime.malloc3DArray(desc.ptr, width, height, depth,
E     File "cupy_backends/cuda/api/runtime.pyx", line 593, in cupy_backends.cuda.api.runtime.malloc3DArray
E       check_status(status)
E     File "cupy_backends/cuda/api/runtime.pyx", line 265, in cupy_backends.cuda.api.runtime.check_status
E       raise CUDARuntimeError(status)
E   cupy_backends.cuda.api.runtime.CUDARuntimeError: hipErrorUnknown: hipErrorUnknown

cupy_backends/cuda/api/runtime.pyx:265: AssertionError
----------------------------- Captured stderr call -----------------------------
Traceback (most recent call last):
  File "cupy_backends/cuda/api/runtime.pyx", line 644, in cupy_backends.cuda.api.runtime.freeArray
    check_status(status)
  File "cupy_backends/cuda/api/runtime.pyx", line 265, in cupy_backends.cuda.api.runtime.check_status
    raise CUDARuntimeError(status)
cupy_backends.cuda.api.runtime.CUDARuntimeError: hipErrorUnknown: hipErrorUnknown
_ TestAffineTransformTextureMemory.test_affine_transform_texture_memory[_param_145_{mode='constant', order=1, output=float32, output_shape=10, shape=(100, 100), theta=90}] _

self = <<cupyx_tests.scipy_tests.ndimage_tests.test_interpolation.TestAffineTransformTextureMemory object at 0x7fab371d7b20> ...ode': 'constant', 'order': 1, 'output': <class 'numpy.float32'>, 'output_shape': 10, 'shape': (100, 100), 'theta': 90}>
xp = <module 'cupy' from '/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.hXnTrEAC7u/cupy/cupy/__init__.py'>
scp = <module 'cupyx.scipy' from '/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.hXnTrEAC7u/cupy/cupyx/scipy/__init__.py'>

    @testing.numpy_cupy_allclose(atol=0.1, scipy_name='scp')
    def test_affine_transform_texture_memory(self, xp, scp):
        a = xp.ones(self.shape, dtype=xp.float32)
        center = numpy.divide(numpy.subtract(self.shape, 1), 2)
    
        if len(self.shape) == 2:
            matrix = self._2d_rotation_matrix(self.theta, center)
        elif len(self.shape) == 3:
            matrix = self._3d_rotation_matrix(self.theta, center)
        else:
            return pytest.xfail('Unsupported shape')
    
        if self.output == 'empty':
            output = xp.empty(self.shape, dtype=xp.float32)
            if self.output_shape:
                return pytest.skip('This combination is tested in '
                                   'test_invalid_texture_arguments')
        else:
            output = self.output
    
        if self.output_shape:
            output_shape = (self.output_shape, ) * len(self.shape)
        else:
            output_shape = self.output_shape
    
        if xp == cupy:
            m = cupyx.scipy.ndimage.affine_transform
            matrix = cupy.array(matrix)
>           return m(a, matrix, output_shape=output_shape,
                     output=output, order=self.order,
                     mode=self.mode, texture_memory=True)

tests/cupyx_tests/scipy_tests/ndimage_tests/test_interpolation.py:398: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
cupyx/scipy/ndimage/interpolation.py:376: in affine_transform
    return _texture.affine_transformation(data=input,
cupyx/_texture.py:168: in affine_transformation
    texture_object = _create_texture_object(data,
cupyx/_texture.py:98: in _create_texture_object
    array = texture.CUDAarray(texture_fmt, *data.shape[::-1])
cupy/cuda/texture.pyx:296: in cupy.cuda.texture.CUDAarray.__init__
    self.ptr = runtime.malloc3DArray(desc.ptr, width, height, depth,
cupy_backends/cuda/api/runtime.pyx:593: in cupy_backends.cuda.api.runtime.malloc3DArray
    check_status(status)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

>   raise CUDARuntimeError(status)
E   AssertionError: Only cupy raises error
E   
E   Traceback (most recent call last):
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.hXnTrEAC7u/cupy/cupy/testing/_helper.py", line 47, in _call_func
E       result = impl(self, *args, **kw)
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.hXnTrEAC7u/cupy/tests/cupyx_tests/scipy_tests/ndimage_tests/test_interpolation.py", line 398, in test_affine_transform_texture_memory
E       return m(a, matrix, output_shape=output_shape,
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.hXnTrEAC7u/cupy/cupyx/scipy/ndimage/interpolation.py", line 376, in affine_transform
E       return _texture.affine_transformation(data=input,
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.hXnTrEAC7u/cupy/cupyx/_texture.py", line 168, in affine_transformation
E       texture_object = _create_texture_object(data,
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.hXnTrEAC7u/cupy/cupyx/_texture.py", line 98, in _create_texture_object
E       array = texture.CUDAarray(texture_fmt, *data.shape[::-1])
E     File "cupy/cuda/texture.pyx", line 296, in cupy.cuda.texture.CUDAarray.__init__
E       self.ptr = runtime.malloc3DArray(desc.ptr, width, height, depth,
E     File "cupy_backends/cuda/api/runtime.pyx", line 593, in cupy_backends.cuda.api.runtime.malloc3DArray
E       check_status(status)
E     File "cupy_backends/cuda/api/runtime.pyx", line 265, in cupy_backends.cuda.api.runtime.check_status
E       raise CUDARuntimeError(status)
E   cupy_backends.cuda.api.runtime.CUDARuntimeError: hipErrorUnknown: hipErrorUnknown

cupy_backends/cuda/api/runtime.pyx:265: AssertionError
----------------------------- Captured stderr call -----------------------------
Traceback (most recent call last):
  File "cupy_backends/cuda/api/runtime.pyx", line 644, in cupy_backends.cuda.api.runtime.freeArray
    check_status(status)
  File "cupy_backends/cuda/api/runtime.pyx", line 265, in cupy_backends.cuda.api.runtime.check_status
    raise CUDARuntimeError(status)
cupy_backends.cuda.api.runtime.CUDARuntimeError: hipErrorUnknown: hipErrorUnknown
_ TestAffineTransformTextureMemory.test_affine_transform_texture_memory[_param_146_{mode='constant', order=1, output=float32, output_shape=10, shape=(100, 100), theta=180}] _

self = <<cupyx_tests.scipy_tests.ndimage_tests.test_interpolation.TestAffineTransformTextureMemory object at 0x7fab389b9b50> ...de': 'constant', 'order': 1, 'output': <class 'numpy.float32'>, 'output_shape': 10, 'shape': (100, 100), 'theta': 180}>
xp = <module 'cupy' from '/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.hXnTrEAC7u/cupy/cupy/__init__.py'>
scp = <module 'cupyx.scipy' from '/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.hXnTrEAC7u/cupy/cupyx/scipy/__init__.py'>

    @testing.numpy_cupy_allclose(atol=0.1, scipy_name='scp')
    def test_affine_transform_texture_memory(self, xp, scp):
        a = xp.ones(self.shape, dtype=xp.float32)
        center = numpy.divide(numpy.subtract(self.shape, 1), 2)
    
        if len(self.shape) == 2:
            matrix = self._2d_rotation_matrix(self.theta, center)
        elif len(self.shape) == 3:
            matrix = self._3d_rotation_matrix(self.theta, center)
        else:
            return pytest.xfail('Unsupported shape')
    
        if self.output == 'empty':
            output = xp.empty(self.shape, dtype=xp.float32)
            if self.output_shape:
                return pytest.skip('This combination is tested in '
                                   'test_invalid_texture_arguments')
        else:
            output = self.output
    
        if self.output_shape:
            output_shape = (self.output_shape, ) * len(self.shape)
        else:
            output_shape = self.output_shape
    
        if xp == cupy:
            m = cupyx.scipy.ndimage.affine_transform
            matrix = cupy.array(matrix)
>           return m(a, matrix, output_shape=output_shape,
                     output=output, order=self.order,
                     mode=self.mode, texture_memory=True)

tests/cupyx_tests/scipy_tests/ndimage_tests/test_interpolation.py:398: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
cupyx/scipy/ndimage/interpolation.py:376: in affine_transform
    return _texture.affine_transformation(data=input,
cupyx/_texture.py:168: in affine_transformation
    texture_object = _create_texture_object(data,
cupyx/_texture.py:98: in _create_texture_object
    array = texture.CUDAarray(texture_fmt, *data.shape[::-1])
cupy/cuda/texture.pyx:296: in cupy.cuda.texture.CUDAarray.__init__
    self.ptr = runtime.malloc3DArray(desc.ptr, width, height, depth,
cupy_backends/cuda/api/runtime.pyx:593: in cupy_backends.cuda.api.runtime.malloc3DArray
    check_status(status)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

>   raise CUDARuntimeError(status)
E   AssertionError: Only cupy raises error
E   
E   Traceback (most recent call last):
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.hXnTrEAC7u/cupy/cupy/testing/_helper.py", line 47, in _call_func
E       result = impl(self, *args, **kw)
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.hXnTrEAC7u/cupy/tests/cupyx_tests/scipy_tests/ndimage_tests/test_interpolation.py", line 398, in test_affine_transform_texture_memory
E       return m(a, matrix, output_shape=output_shape,
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.hXnTrEAC7u/cupy/cupyx/scipy/ndimage/interpolation.py", line 376, in affine_transform
E       return _texture.affine_transformation(data=input,
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.hXnTrEAC7u/cupy/cupyx/_texture.py", line 168, in affine_transformation
E       texture_object = _create_texture_object(data,
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.hXnTrEAC7u/cupy/cupyx/_texture.py", line 98, in _create_texture_object
E       array = texture.CUDAarray(texture_fmt, *data.shape[::-1])
E     File "cupy/cuda/texture.pyx", line 296, in cupy.cuda.texture.CUDAarray.__init__
E       self.ptr = runtime.malloc3DArray(desc.ptr, width, height, depth,
E     File "cupy_backends/cuda/api/runtime.pyx", line 593, in cupy_backends.cuda.api.runtime.malloc3DArray
E       check_status(status)
E     File "cupy_backends/cuda/api/runtime.pyx", line 265, in cupy_backends.cuda.api.runtime.check_status
E       raise CUDARuntimeError(status)
E   cupy_backends.cuda.api.runtime.CUDARuntimeError: hipErrorUnknown: hipErrorUnknown

cupy_backends/cuda/api/runtime.pyx:265: AssertionError
----------------------------- Captured stderr call -----------------------------
Traceback (most recent call last):
  File "cupy_backends/cuda/api/runtime.pyx", line 644, in cupy_backends.cuda.api.runtime.freeArray
    check_status(status)
  File "cupy_backends/cuda/api/runtime.pyx", line 265, in cupy_backends.cuda.api.runtime.check_status
    raise CUDARuntimeError(status)
cupy_backends.cuda.api.runtime.CUDARuntimeError: hipErrorUnknown: hipErrorUnknown
_ TestAffineTransformTextureMemory.test_affine_transform_texture_memory[_param_147_{mode='constant', order=1, output=float32, output_shape=10, shape=(100, 100), theta=270}] _

self = <<cupyx_tests.scipy_tests.ndimage_tests.test_interpolation.TestAffineTransformTextureMemory object at 0x7fab3717b4c0> ...de': 'constant', 'order': 1, 'output': <class 'numpy.float32'>, 'output_shape': 10, 'shape': (100, 100), 'theta': 270}>
xp = <module 'cupy' from '/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.hXnTrEAC7u/cupy/cupy/__init__.py'>
scp = <module 'cupyx.scipy' from '/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.hXnTrEAC7u/cupy/cupyx/scipy/__init__.py'>

    @testing.numpy_cupy_allclose(atol=0.1, scipy_name='scp')
    def test_affine_transform_texture_memory(self, xp, scp):
        a = xp.ones(self.shape, dtype=xp.float32)
        center = numpy.divide(numpy.subtract(self.shape, 1), 2)
    
        if len(self.shape) == 2:
            matrix = self._2d_rotation_matrix(self.theta, center)
        elif len(self.shape) == 3:
            matrix = self._3d_rotation_matrix(self.theta, center)
        else:
            return pytest.xfail('Unsupported shape')
    
        if self.output == 'empty':
            output = xp.empty(self.shape, dtype=xp.float32)
            if self.output_shape:
                return pytest.skip('This combination is tested in '
                                   'test_invalid_texture_arguments')
        else:
            output = self.output
    
        if self.output_shape:
            output_shape = (self.output_shape, ) * len(self.shape)
        else:
            output_shape = self.output_shape
    
        if xp == cupy:
            m = cupyx.scipy.ndimage.affine_transform
            matrix = cupy.array(matrix)
>           return m(a, matrix, output_shape=output_shape,
                     output=output, order=self.order,
                     mode=self.mode, texture_memory=True)

tests/cupyx_tests/scipy_tests/ndimage_tests/test_interpolation.py:398: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
cupyx/scipy/ndimage/interpolation.py:376: in affine_transform
    return _texture.affine_transformation(data=input,
cupyx/_texture.py:168: in affine_transformation
    texture_object = _create_texture_object(data,
cupyx/_texture.py:98: in _create_texture_object
    array = texture.CUDAarray(texture_fmt, *data.shape[::-1])
cupy/cuda/texture.pyx:296: in cupy.cuda.texture.CUDAarray.__init__
    self.ptr = runtime.malloc3DArray(desc.ptr, width, height, depth,
cupy_backends/cuda/api/runtime.pyx:593: in cupy_backends.cuda.api.runtime.malloc3DArray
    check_status(status)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

>   raise CUDARuntimeError(status)
E   AssertionError: Only cupy raises error
E   
E   Traceback (most recent call last):
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.hXnTrEAC7u/cupy/cupy/testing/_helper.py", line 47, in _call_func
E       result = impl(self, *args, **kw)
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.hXnTrEAC7u/cupy/tests/cupyx_tests/scipy_tests/ndimage_tests/test_interpolation.py", line 398, in test_affine_transform_texture_memory
E       return m(a, matrix, output_shape=output_shape,
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.hXnTrEAC7u/cupy/cupyx/scipy/ndimage/interpolation.py", line 376, in affine_transform
E       return _texture.affine_transformation(data=input,
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.hXnTrEAC7u/cupy/cupyx/_texture.py", line 168, in affine_transformation
E       texture_object = _create_texture_object(data,
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.hXnTrEAC7u/cupy/cupyx/_texture.py", line 98, in _create_texture_object
E       array = texture.CUDAarray(texture_fmt, *data.shape[::-1])
E     File "cupy/cuda/texture.pyx", line 296, in cupy.cuda.texture.CUDAarray.__init__
E       self.ptr = runtime.malloc3DArray(desc.ptr, width, height, depth,
E     File "cupy_backends/cuda/api/runtime.pyx", line 593, in cupy_backends.cuda.api.runtime.malloc3DArray
E       check_status(status)
E     File "cupy_backends/cuda/api/runtime.pyx", line 265, in cupy_backends.cuda.api.runtime.check_status
E       raise CUDARuntimeError(status)
E   cupy_backends.cuda.api.runtime.CUDARuntimeError: hipErrorUnknown: hipErrorUnknown

cupy_backends/cuda/api/runtime.pyx:265: AssertionError
----------------------------- Captured stderr call -----------------------------
Traceback (most recent call last):
  File "cupy_backends/cuda/api/runtime.pyx", line 644, in cupy_backends.cuda.api.runtime.freeArray
    check_status(status)
  File "cupy_backends/cuda/api/runtime.pyx", line 265, in cupy_backends.cuda.api.runtime.check_status
    raise CUDARuntimeError(status)
cupy_backends.cuda.api.runtime.CUDARuntimeError: hipErrorUnknown: hipErrorUnknown
_ TestAffineTransformTextureMemory.test_affine_transform_texture_memory[_param_148_{mode='constant', order=1, output=float32, output_shape=10, shape=(10, 20), theta=0}] _

self = <<cupyx_tests.scipy_tests.ndimage_tests.test_interpolation.TestAffineTransformTextureMemory object at 0x7fab37129400> ...{'mode': 'constant', 'order': 1, 'output': <class 'numpy.float32'>, 'output_shape': 10, 'shape': (10, 20), 'theta': 0}>
xp = <module 'cupy' from '/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.hXnTrEAC7u/cupy/cupy/__init__.py'>
scp = <module 'cupyx.scipy' from '/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.hXnTrEAC7u/cupy/cupyx/scipy/__init__.py'>

    @testing.numpy_cupy_allclose(atol=0.1, scipy_name='scp')
    def test_affine_transform_texture_memory(self, xp, scp):
        a = xp.ones(self.shape, dtype=xp.float32)
        center = numpy.divide(numpy.subtract(self.shape, 1), 2)
    
        if len(self.shape) == 2:
            matrix = self._2d_rotation_matrix(self.theta, center)
        elif len(self.shape) == 3:
            matrix = self._3d_rotation_matrix(self.theta, center)
        else:
            return pytest.xfail('Unsupported shape')
    
        if self.output == 'empty':
            output = xp.empty(self.shape, dtype=xp.float32)
            if self.output_shape:
                return pytest.skip('This combination is tested in '
                                   'test_invalid_texture_arguments')
        else:
            output = self.output
    
        if self.output_shape:
            output_shape = (self.output_shape, ) * len(self.shape)
        else:
            output_shape = self.output_shape
    
        if xp == cupy:
            m = cupyx.scipy.ndimage.affine_transform
            matrix = cupy.array(matrix)
>           return m(a, matrix, output_shape=output_shape,
                     output=output, order=self.order,
                     mode=self.mode, texture_memory=True)

tests/cupyx_tests/scipy_tests/ndimage_tests/test_interpolation.py:398: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
cupyx/scipy/ndimage/interpolation.py:376: in affine_transform
    return _texture.affine_transformation(data=input,
cupyx/_texture.py:168: in affine_transformation
    texture_object = _create_texture_object(data,
cupyx/_texture.py:98: in _create_texture_object
    array = texture.CUDAarray(texture_fmt, *data.shape[::-1])
cupy/cuda/texture.pyx:296: in cupy.cuda.texture.CUDAarray.__init__
    self.ptr = runtime.malloc3DArray(desc.ptr, width, height, depth,
cupy_backends/cuda/api/runtime.pyx:593: in cupy_backends.cuda.api.runtime.malloc3DArray
    check_status(status)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

>   raise CUDARuntimeError(status)
E   AssertionError: Only cupy raises error
E   
E   Traceback (most recent call last):
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.hXnTrEAC7u/cupy/cupy/testing/_helper.py", line 47, in _call_func
E       result = impl(self, *args, **kw)
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.hXnTrEAC7u/cupy/tests/cupyx_tests/scipy_tests/ndimage_tests/test_interpolation.py", line 398, in test_affine_transform_texture_memory
E       return m(a, matrix, output_shape=output_shape,
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.hXnTrEAC7u/cupy/cupyx/scipy/ndimage/interpolation.py", line 376, in affine_transform
E       return _texture.affine_transformation(data=input,
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.hXnTrEAC7u/cupy/cupyx/_texture.py", line 168, in affine_transformation
E       texture_object = _create_texture_object(data,
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.hXnTrEAC7u/cupy/cupyx/_texture.py", line 98, in _create_texture_object
E       array = texture.CUDAarray(texture_fmt, *data.shape[::-1])
E     File "cupy/cuda/texture.pyx", line 296, in cupy.cuda.texture.CUDAarray.__init__
E       self.ptr = runtime.malloc3DArray(desc.ptr, width, height, depth,
E     File "cupy_backends/cuda/api/runtime.pyx", line 593, in cupy_backends.cuda.api.runtime.malloc3DArray
E       check_status(status)
E     File "cupy_backends/cuda/api/runtime.pyx", line 265, in cupy_backends.cuda.api.runtime.check_status
E       raise CUDARuntimeError(status)
E   cupy_backends.cuda.api.runtime.CUDARuntimeError: hipErrorUnknown: hipErrorUnknown

cupy_backends/cuda/api/runtime.pyx:265: AssertionError
----------------------------- Captured stderr call -----------------------------
Traceback (most recent call last):
  File "cupy_backends/cuda/api/runtime.pyx", line 644, in cupy_backends.cuda.api.runtime.freeArray
    check_status(status)
  File "cupy_backends/cuda/api/runtime.pyx", line 265, in cupy_backends.cuda.api.runtime.check_status
    raise CUDARuntimeError(status)
cupy_backends.cuda.api.runtime.CUDARuntimeError: hipErrorUnknown: hipErrorUnknown
_ TestAffineTransformTextureMemory.test_affine_transform_texture_memory[_param_149_{mode='constant', order=1, output=float32, output_shape=10, shape=(10, 20), theta=90}] _

self = <<cupyx_tests.scipy_tests.ndimage_tests.test_interpolation.TestAffineTransformTextureMemory object at 0x7fab38bb44c0> ...'mode': 'constant', 'order': 1, 'output': <class 'numpy.float32'>, 'output_shape': 10, 'shape': (10, 20), 'theta': 90}>
xp = <module 'cupy' from '/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.hXnTrEAC7u/cupy/cupy/__init__.py'>
scp = <module 'cupyx.scipy' from '/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.hXnTrEAC7u/cupy/cupyx/scipy/__init__.py'>

    @testing.numpy_cupy_allclose(atol=0.1, scipy_name='scp')
    def test_affine_transform_texture_memory(self, xp, scp):
        a = xp.ones(self.shape, dtype=xp.float32)
        center = numpy.divide(numpy.subtract(self.shape, 1), 2)
    
        if len(self.shape) == 2:
            matrix = self._2d_rotation_matrix(self.theta, center)
        elif len(self.shape) == 3:
            matrix = self._3d_rotation_matrix(self.theta, center)
        else:
            return pytest.xfail('Unsupported shape')
    
        if self.output == 'empty':
            output = xp.empty(self.shape, dtype=xp.float32)
            if self.output_shape:
                return pytest.skip('This combination is tested in '
                                   'test_invalid_texture_arguments')
        else:
            output = self.output
    
        if self.output_shape:
            output_shape = (self.output_shape, ) * len(self.shape)
        else:
            output_shape = self.output_shape
    
        if xp == cupy:
            m = cupyx.scipy.ndimage.affine_transform
            matrix = cupy.array(matrix)
>           return m(a, matrix, output_shape=output_shape,
                     output=output, order=self.order,
                     mode=self.mode, texture_memory=True)

tests/cupyx_tests/scipy_tests/ndimage_tests/test_interpolation.py:398: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
cupyx/scipy/ndimage/interpolation.py:376: in affine_transform
    return _texture.affine_transformation(data=input,
cupyx/_texture.py:168: in affine_transformation
    texture_object = _create_texture_object(data,
cupyx/_texture.py:98: in _create_texture_object
    array = texture.CUDAarray(texture_fmt, *data.shape[::-1])
cupy/cuda/texture.pyx:296: in cupy.cuda.texture.CUDAarray.__init__
    self.ptr = runtime.malloc3DArray(desc.ptr, width, height, depth,
cupy_backends/cuda/api/runtime.pyx:593: in cupy_backends.cuda.api.runtime.malloc3DArray
    check_status(status)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

>   raise CUDARuntimeError(status)
E   AssertionError: Only cupy raises error
E   
E   Traceback (most recent call last):
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.hXnTrEAC7u/cupy/cupy/testing/_helper.py", line 47, in _call_func
E       result = impl(self, *args, **kw)
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.hXnTrEAC7u/cupy/tests/cupyx_tests/scipy_tests/ndimage_tests/test_interpolation.py", line 398, in test_affine_transform_texture_memory
E       return m(a, matrix, output_shape=output_shape,
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.hXnTrEAC7u/cupy/cupyx/scipy/ndimage/interpolation.py", line 376, in affine_transform
E       return _texture.affine_transformation(data=input,
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.hXnTrEAC7u/cupy/cupyx/_texture.py", line 168, in affine_transformation
E       texture_object = _create_texture_object(data,
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.hXnTrEAC7u/cupy/cupyx/_texture.py", line 98, in _create_texture_object
E       array = texture.CUDAarray(texture_fmt, *data.shape[::-1])
E     File "cupy/cuda/texture.pyx", line 296, in cupy.cuda.texture.CUDAarray.__init__
E       self.ptr = runtime.malloc3DArray(desc.ptr, width, height, depth,
E     File "cupy_backends/cuda/api/runtime.pyx", line 593, in cupy_backends.cuda.api.runtime.malloc3DArray
E       check_status(status)
E     File "cupy_backends/cuda/api/runtime.pyx", line 265, in cupy_backends.cuda.api.runtime.check_status
E       raise CUDARuntimeError(status)
E   cupy_backends.cuda.api.runtime.CUDARuntimeError: hipErrorUnknown: hipErrorUnknown

cupy_backends/cuda/api/runtime.pyx:265: AssertionError
----------------------------- Captured stderr call -----------------------------
Traceback (most recent call last):
  File "cupy_backends/cuda/api/runtime.pyx", line 644, in cupy_backends.cuda.api.runtime.freeArray
    check_status(status)
  File "cupy_backends/cuda/api/runtime.pyx", line 265, in cupy_backends.cuda.api.runtime.check_status
    raise CUDARuntimeError(status)
cupy_backends.cuda.api.runtime.CUDARuntimeError: hipErrorUnknown: hipErrorUnknown
_ TestAffineTransformTextureMemory.test_affine_transform_texture_memory[_param_150_{mode='constant', order=1, output=float32, output_shape=10, shape=(10, 20), theta=180}] _

self = <<cupyx_tests.scipy_tests.ndimage_tests.test_interpolation.TestAffineTransformTextureMemory object at 0x7fab3713de20> ...mode': 'constant', 'order': 1, 'output': <class 'numpy.float32'>, 'output_shape': 10, 'shape': (10, 20), 'theta': 180}>
xp = <module 'cupy' from '/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.hXnTrEAC7u/cupy/cupy/__init__.py'>
scp = <module 'cupyx.scipy' from '/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.hXnTrEAC7u/cupy/cupyx/scipy/__init__.py'>

    @testing.numpy_cupy_allclose(atol=0.1, scipy_name='scp')
    def test_affine_transform_texture_memory(self, xp, scp):
        a = xp.ones(self.shape, dtype=xp.float32)
        center = numpy.divide(numpy.subtract(self.shape, 1), 2)
    
        if len(self.shape) == 2:
            matrix = self._2d_rotation_matrix(self.theta, center)
        elif len(self.shape) == 3:
            matrix = self._3d_rotation_matrix(self.theta, center)
        else:
            return pytest.xfail('Unsupported shape')
    
        if self.output == 'empty':
            output = xp.empty(self.shape, dtype=xp.float32)
            if self.output_shape:
                return pytest.skip('This combination is tested in '
                                   'test_invalid_texture_arguments')
        else:
            output = self.output
    
        if self.output_shape:
            output_shape = (self.output_shape, ) * len(self.shape)
        else:
            output_shape = self.output_shape
    
        if xp == cupy:
            m = cupyx.scipy.ndimage.affine_transform
            matrix = cupy.array(matrix)
>           return m(a, matrix, output_shape=output_shape,
                     output=output, order=self.order,
                     mode=self.mode, texture_memory=True)

tests/cupyx_tests/scipy_tests/ndimage_tests/test_interpolation.py:398: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
cupyx/scipy/ndimage/interpolation.py:376: in affine_transform
    return _texture.affine_transformation(data=input,
cupyx/_texture.py:168: in affine_transformation
    texture_object = _create_texture_object(data,
cupyx/_texture.py:98: in _create_texture_object
    array = texture.CUDAarray(texture_fmt, *data.shape[::-1])
cupy/cuda/texture.pyx:296: in cupy.cuda.texture.CUDAarray.__init__
    self.ptr = runtime.malloc3DArray(desc.ptr, width, height, depth,
cupy_backends/cuda/api/runtime.pyx:593: in cupy_backends.cuda.api.runtime.malloc3DArray
    check_status(status)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

>   raise CUDARuntimeError(status)
E   AssertionError: Only cupy raises error
E   
E   Traceback (most recent call last):
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.hXnTrEAC7u/cupy/cupy/testing/_helper.py", line 47, in _call_func
E       result = impl(self, *args, **kw)
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.hXnTrEAC7u/cupy/tests/cupyx_tests/scipy_tests/ndimage_tests/test_interpolation.py", line 398, in test_affine_transform_texture_memory
E       return m(a, matrix, output_shape=output_shape,
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.hXnTrEAC7u/cupy/cupyx/scipy/ndimage/interpolation.py", line 376, in affine_transform
E       return _texture.affine_transformation(data=input,
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.hXnTrEAC7u/cupy/cupyx/_texture.py", line 168, in affine_transformation
E       texture_object = _create_texture_object(data,
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.hXnTrEAC7u/cupy/cupyx/_texture.py", line 98, in _create_texture_object
E       array = texture.CUDAarray(texture_fmt, *data.shape[::-1])
E     File "cupy/cuda/texture.pyx", line 296, in cupy.cuda.texture.CUDAarray.__init__
E       self.ptr = runtime.malloc3DArray(desc.ptr, width, height, depth,
E     File "cupy_backends/cuda/api/runtime.pyx", line 593, in cupy_backends.cuda.api.runtime.malloc3DArray
E       check_status(status)
E     File "cupy_backends/cuda/api/runtime.pyx", line 265, in cupy_backends.cuda.api.runtime.check_status
E       raise CUDARuntimeError(status)
E   cupy_backends.cuda.api.runtime.CUDARuntimeError: hipErrorUnknown: hipErrorUnknown

cupy_backends/cuda/api/runtime.pyx:265: AssertionError
----------------------------- Captured stderr call -----------------------------
Traceback (most recent call last):
  File "cupy_backends/cuda/api/runtime.pyx", line 644, in cupy_backends.cuda.api.runtime.freeArray
    check_status(status)
  File "cupy_backends/cuda/api/runtime.pyx", line 265, in cupy_backends.cuda.api.runtime.check_status
    raise CUDARuntimeError(status)
cupy_backends.cuda.api.runtime.CUDARuntimeError: hipErrorUnknown: hipErrorUnknown
_ TestAffineTransformTextureMemory.test_affine_transform_texture_memory[_param_151_{mode='constant', order=1, output=float32, output_shape=10, shape=(10, 20), theta=270}] _

self = <<cupyx_tests.scipy_tests.ndimage_tests.test_interpolation.TestAffineTransformTextureMemory object at 0x7fab38ac70a0> ...mode': 'constant', 'order': 1, 'output': <class 'numpy.float32'>, 'output_shape': 10, 'shape': (10, 20), 'theta': 270}>
xp = <module 'cupy' from '/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.hXnTrEAC7u/cupy/cupy/__init__.py'>
scp = <module 'cupyx.scipy' from '/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.hXnTrEAC7u/cupy/cupyx/scipy/__init__.py'>

    @testing.numpy_cupy_allclose(atol=0.1, scipy_name='scp')
    def test_affine_transform_texture_memory(self, xp, scp):
        a = xp.ones(self.shape, dtype=xp.float32)
        center = numpy.divide(numpy.subtract(self.shape, 1), 2)
    
        if len(self.shape) == 2:
            matrix = self._2d_rotation_matrix(self.theta, center)
        elif len(self.shape) == 3:
            matrix = self._3d_rotation_matrix(self.theta, center)
        else:
            return pytest.xfail('Unsupported shape')
    
        if self.output == 'empty':
            output = xp.empty(self.shape, dtype=xp.float32)
            if self.output_shape:
                return pytest.skip('This combination is tested in '
                                   'test_invalid_texture_arguments')
        else:
            output = self.output
    
        if self.output_shape:
            output_shape = (self.output_shape, ) * len(self.shape)
        else:
            output_shape = self.output_shape
    
        if xp == cupy:
            m = cupyx.scipy.ndimage.affine_transform
            matrix = cupy.array(matrix)
>           return m(a, matrix, output_shape=output_shape,
                     output=output, order=self.order,
                     mode=self.mode, texture_memory=True)

tests/cupyx_tests/scipy_tests/ndimage_tests/test_interpolation.py:398: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
cupyx/scipy/ndimage/interpolation.py:376: in affine_transform
    return _texture.affine_transformation(data=input,
cupyx/_texture.py:168: in affine_transformation
    texture_object = _create_texture_object(data,
cupyx/_texture.py:98: in _create_texture_object
    array = texture.CUDAarray(texture_fmt, *data.shape[::-1])
cupy/cuda/texture.pyx:296: in cupy.cuda.texture.CUDAarray.__init__
    self.ptr = runtime.malloc3DArray(desc.ptr, width, height, depth,
cupy_backends/cuda/api/runtime.pyx:593: in cupy_backends.cuda.api.runtime.malloc3DArray
    check_status(status)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

>   raise CUDARuntimeError(status)
E   AssertionError: Only cupy raises error
E   
E   Traceback (most recent call last):
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.hXnTrEAC7u/cupy/cupy/testing/_helper.py", line 47, in _call_func
E       result = impl(self, *args, **kw)
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.hXnTrEAC7u/cupy/tests/cupyx_tests/scipy_tests/ndimage_tests/test_interpolation.py", line 398, in test_affine_transform_texture_memory
E       return m(a, matrix, output_shape=output_shape,
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.hXnTrEAC7u/cupy/cupyx/scipy/ndimage/interpolation.py", line 376, in affine_transform
E       return _texture.affine_transformation(data=input,
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.hXnTrEAC7u/cupy/cupyx/_texture.py", line 168, in affine_transformation
E       texture_object = _create_texture_object(data,
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.hXnTrEAC7u/cupy/cupyx/_texture.py", line 98, in _create_texture_object
E       array = texture.CUDAarray(texture_fmt, *data.shape[::-1])
E     File "cupy/cuda/texture.pyx", line 296, in cupy.cuda.texture.CUDAarray.__init__
E       self.ptr = runtime.malloc3DArray(desc.ptr, width, height, depth,
E     File "cupy_backends/cuda/api/runtime.pyx", line 593, in cupy_backends.cuda.api.runtime.malloc3DArray
E       check_status(status)
E     File "cupy_backends/cuda/api/runtime.pyx", line 265, in cupy_backends.cuda.api.runtime.check_status
E       raise CUDARuntimeError(status)
E   cupy_backends.cuda.api.runtime.CUDARuntimeError: hipErrorUnknown: hipErrorUnknown

cupy_backends/cuda/api/runtime.pyx:265: AssertionError
----------------------------- Captured stderr call -----------------------------
Traceback (most recent call last):
  File "cupy_backends/cuda/api/runtime.pyx", line 644, in cupy_backends.cuda.api.runtime.freeArray
    check_status(status)
  File "cupy_backends/cuda/api/runtime.pyx", line 265, in cupy_backends.cuda.api.runtime.check_status
    raise CUDARuntimeError(status)
cupy_backends.cuda.api.runtime.CUDARuntimeError: hipErrorUnknown: hipErrorUnknown
_ TestAffineTransformTextureMemory.test_affine_transform_texture_memory[_param_152_{mode='constant', order=1, output=float32, output_shape=10, shape=(10, 10, 10), theta=0}] _

self = <<cupyx_tests.scipy_tests.ndimage_tests.test_interpolation.TestAffineTransformTextureMemory object at 0x7fac51135a60> ...de': 'constant', 'order': 1, 'output': <class 'numpy.float32'>, 'output_shape': 10, 'shape': (10, 10, 10), 'theta': 0}>
xp = <module 'cupy' from '/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.hXnTrEAC7u/cupy/cupy/__init__.py'>
scp = <module 'cupyx.scipy' from '/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.hXnTrEAC7u/cupy/cupyx/scipy/__init__.py'>

    @testing.numpy_cupy_allclose(atol=0.1, scipy_name='scp')
    def test_affine_transform_texture_memory(self, xp, scp):
        a = xp.ones(self.shape, dtype=xp.float32)
        center = numpy.divide(numpy.subtract(self.shape, 1), 2)
    
        if len(self.shape) == 2:
            matrix = self._2d_rotation_matrix(self.theta, center)
        elif len(self.shape) == 3:
            matrix = self._3d_rotation_matrix(self.theta, center)
        else:
            return pytest.xfail('Unsupported shape')
    
        if self.output == 'empty':
            output = xp.empty(self.shape, dtype=xp.float32)
            if self.output_shape:
                return pytest.skip('This combination is tested in '
                                   'test_invalid_texture_arguments')
        else:
            output = self.output
    
        if self.output_shape:
            output_shape = (self.output_shape, ) * len(self.shape)
        else:
            output_shape = self.output_shape
    
        if xp == cupy:
            m = cupyx.scipy.ndimage.affine_transform
            matrix = cupy.array(matrix)
>           return m(a, matrix, output_shape=output_shape,
                     output=output, order=self.order,
                     mode=self.mode, texture_memory=True)

tests/cupyx_tests/scipy_tests/ndimage_tests/test_interpolation.py:398: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
cupyx/scipy/ndimage/interpolation.py:376: in affine_transform
    return _texture.affine_transformation(data=input,
cupyx/_texture.py:168: in affine_transformation
    texture_object = _create_texture_object(data,
cupyx/_texture.py:98: in _create_texture_object
    array = texture.CUDAarray(texture_fmt, *data.shape[::-1])
cupy/cuda/texture.pyx:296: in cupy.cuda.texture.CUDAarray.__init__
    self.ptr = runtime.malloc3DArray(desc.ptr, width, height, depth,
cupy_backends/cuda/api/runtime.pyx:593: in cupy_backends.cuda.api.runtime.malloc3DArray
    check_status(status)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

>   raise CUDARuntimeError(status)
E   AssertionError: Only cupy raises error
E   
E   Traceback (most recent call last):
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.hXnTrEAC7u/cupy/cupy/testing/_helper.py", line 47, in _call_func
E       result = impl(self, *args, **kw)
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.hXnTrEAC7u/cupy/tests/cupyx_tests/scipy_tests/ndimage_tests/test_interpolation.py", line 398, in test_affine_transform_texture_memory
E       return m(a, matrix, output_shape=output_shape,
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.hXnTrEAC7u/cupy/cupyx/scipy/ndimage/interpolation.py", line 376, in affine_transform
E       return _texture.affine_transformation(data=input,
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.hXnTrEAC7u/cupy/cupyx/_texture.py", line 168, in affine_transformation
E       texture_object = _create_texture_object(data,
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.hXnTrEAC7u/cupy/cupyx/_texture.py", line 98, in _create_texture_object
E       array = texture.CUDAarray(texture_fmt, *data.shape[::-1])
E     File "cupy/cuda/texture.pyx", line 296, in cupy.cuda.texture.CUDAarray.__init__
E       self.ptr = runtime.malloc3DArray(desc.ptr, width, height, depth,
E     File "cupy_backends/cuda/api/runtime.pyx", line 593, in cupy_backends.cuda.api.runtime.malloc3DArray
E       check_status(status)
E     File "cupy_backends/cuda/api/runtime.pyx", line 265, in cupy_backends.cuda.api.runtime.check_status
E       raise CUDARuntimeError(status)
E   cupy_backends.cuda.api.runtime.CUDARuntimeError: hipErrorUnknown: hipErrorUnknown

cupy_backends/cuda/api/runtime.pyx:265: AssertionError
----------------------------- Captured stderr call -----------------------------
Traceback (most recent call last):
  File "cupy_backends/cuda/api/runtime.pyx", line 644, in cupy_backends.cuda.api.runtime.freeArray
    check_status(status)
  File "cupy_backends/cuda/api/runtime.pyx", line 265, in cupy_backends.cuda.api.runtime.check_status
    raise CUDARuntimeError(status)
cupy_backends.cuda.api.runtime.CUDARuntimeError: hipErrorUnknown: hipErrorUnknown
_ TestAffineTransformTextureMemory.test_affine_transform_texture_memory[_param_153_{mode='constant', order=1, output=float32, output_shape=10, shape=(10, 10, 10), theta=90}] _

self = <<cupyx_tests.scipy_tests.ndimage_tests.test_interpolation.TestAffineTransformTextureMemory object at 0x7fab371c74f0> ...e': 'constant', 'order': 1, 'output': <class 'numpy.float32'>, 'output_shape': 10, 'shape': (10, 10, 10), 'theta': 90}>
xp = <module 'cupy' from '/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.hXnTrEAC7u/cupy/cupy/__init__.py'>
scp = <module 'cupyx.scipy' from '/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.hXnTrEAC7u/cupy/cupyx/scipy/__init__.py'>

    @testing.numpy_cupy_allclose(atol=0.1, scipy_name='scp')
    def test_affine_transform_texture_memory(self, xp, scp):
        a = xp.ones(self.shape, dtype=xp.float32)
        center = numpy.divide(numpy.subtract(self.shape, 1), 2)
    
        if len(self.shape) == 2:
            matrix = self._2d_rotation_matrix(self.theta, center)
        elif len(self.shape) == 3:
            matrix = self._3d_rotation_matrix(self.theta, center)
        else:
            return pytest.xfail('Unsupported shape')
    
        if self.output == 'empty':
            output = xp.empty(self.shape, dtype=xp.float32)
            if self.output_shape:
                return pytest.skip('This combination is tested in '
                                   'test_invalid_texture_arguments')
        else:
            output = self.output
    
        if self.output_shape:
            output_shape = (self.output_shape, ) * len(self.shape)
        else:
            output_shape = self.output_shape
    
        if xp == cupy:
            m = cupyx.scipy.ndimage.affine_transform
            matrix = cupy.array(matrix)
>           return m(a, matrix, output_shape=output_shape,
                     output=output, order=self.order,
                     mode=self.mode, texture_memory=True)

tests/cupyx_tests/scipy_tests/ndimage_tests/test_interpolation.py:398: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
cupyx/scipy/ndimage/interpolation.py:376: in affine_transform
    return _texture.affine_transformation(data=input,
cupyx/_texture.py:168: in affine_transformation
    texture_object = _create_texture_object(data,
cupyx/_texture.py:98: in _create_texture_object
    array = texture.CUDAarray(texture_fmt, *data.shape[::-1])
cupy/cuda/texture.pyx:296: in cupy.cuda.texture.CUDAarray.__init__
    self.ptr = runtime.malloc3DArray(desc.ptr, width, height, depth,
cupy_backends/cuda/api/runtime.pyx:593: in cupy_backends.cuda.api.runtime.malloc3DArray
    check_status(status)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

>   raise CUDARuntimeError(status)
E   AssertionError: Only cupy raises error
E   
E   Traceback (most recent call last):
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.hXnTrEAC7u/cupy/cupy/testing/_helper.py", line 47, in _call_func
E       result = impl(self, *args, **kw)
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.hXnTrEAC7u/cupy/tests/cupyx_tests/scipy_tests/ndimage_tests/test_interpolation.py", line 398, in test_affine_transform_texture_memory
E       return m(a, matrix, output_shape=output_shape,
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.hXnTrEAC7u/cupy/cupyx/scipy/ndimage/interpolation.py", line 376, in affine_transform
E       return _texture.affine_transformation(data=input,
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.hXnTrEAC7u/cupy/cupyx/_texture.py", line 168, in affine_transformation
E       texture_object = _create_texture_object(data,
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.hXnTrEAC7u/cupy/cupyx/_texture.py", line 98, in _create_texture_object
E       array = texture.CUDAarray(texture_fmt, *data.shape[::-1])
E     File "cupy/cuda/texture.pyx", line 296, in cupy.cuda.texture.CUDAarray.__init__
E       self.ptr = runtime.malloc3DArray(desc.ptr, width, height, depth,
E     File "cupy_backends/cuda/api/runtime.pyx", line 593, in cupy_backends.cuda.api.runtime.malloc3DArray
E       check_status(status)
E     File "cupy_backends/cuda/api/runtime.pyx", line 265, in cupy_backends.cuda.api.runtime.check_status
E       raise CUDARuntimeError(status)
E   cupy_backends.cuda.api.runtime.CUDARuntimeError: hipErrorUnknown: hipErrorUnknown

cupy_backends/cuda/api/runtime.pyx:265: AssertionError
----------------------------- Captured stderr call -----------------------------
Traceback (most recent call last):
  File "cupy_backends/cuda/api/runtime.pyx", line 644, in cupy_backends.cuda.api.runtime.freeArray
    check_status(status)
  File "cupy_backends/cuda/api/runtime.pyx", line 265, in cupy_backends.cuda.api.runtime.check_status
    raise CUDARuntimeError(status)
cupy_backends.cuda.api.runtime.CUDARuntimeError: hipErrorUnknown: hipErrorUnknown
_ TestAffineTransformTextureMemory.test_affine_transform_texture_memory[_param_154_{mode='constant', order=1, output=float32, output_shape=10, shape=(10, 10, 10), theta=180}] _

self = <<cupyx_tests.scipy_tests.ndimage_tests.test_interpolation.TestAffineTransformTextureMemory object at 0x7fab37059a90> ...': 'constant', 'order': 1, 'output': <class 'numpy.float32'>, 'output_shape': 10, 'shape': (10, 10, 10), 'theta': 180}>
xp = <module 'cupy' from '/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.hXnTrEAC7u/cupy/cupy/__init__.py'>
scp = <module 'cupyx.scipy' from '/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.hXnTrEAC7u/cupy/cupyx/scipy/__init__.py'>

    @testing.numpy_cupy_allclose(atol=0.1, scipy_name='scp')
    def test_affine_transform_texture_memory(self, xp, scp):
        a = xp.ones(self.shape, dtype=xp.float32)
        center = numpy.divide(numpy.subtract(self.shape, 1), 2)
    
        if len(self.shape) == 2:
            matrix = self._2d_rotation_matrix(self.theta, center)
        elif len(self.shape) == 3:
            matrix = self._3d_rotation_matrix(self.theta, center)
        else:
            return pytest.xfail('Unsupported shape')
    
        if self.output == 'empty':
            output = xp.empty(self.shape, dtype=xp.float32)
            if self.output_shape:
                return pytest.skip('This combination is tested in '
                                   'test_invalid_texture_arguments')
        else:
            output = self.output
    
        if self.output_shape:
            output_shape = (self.output_shape, ) * len(self.shape)
        else:
            output_shape = self.output_shape
    
        if xp == cupy:
            m = cupyx.scipy.ndimage.affine_transform
            matrix = cupy.array(matrix)
>           return m(a, matrix, output_shape=output_shape,
                     output=output, order=self.order,
                     mode=self.mode, texture_memory=True)

tests/cupyx_tests/scipy_tests/ndimage_tests/test_interpolation.py:398: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
cupyx/scipy/ndimage/interpolation.py:376: in affine_transform
    return _texture.affine_transformation(data=input,
cupyx/_texture.py:168: in affine_transformation
    texture_object = _create_texture_object(data,
cupyx/_texture.py:98: in _create_texture_object
    array = texture.CUDAarray(texture_fmt, *data.shape[::-1])
cupy/cuda/texture.pyx:296: in cupy.cuda.texture.CUDAarray.__init__
    self.ptr = runtime.malloc3DArray(desc.ptr, width, height, depth,
cupy_backends/cuda/api/runtime.pyx:593: in cupy_backends.cuda.api.runtime.malloc3DArray
    check_status(status)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

>   raise CUDARuntimeError(status)
E   AssertionError: Only cupy raises error
E   
E   Traceback (most recent call last):
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.hXnTrEAC7u/cupy/cupy/testing/_helper.py", line 47, in _call_func
E       result = impl(self, *args, **kw)
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.hXnTrEAC7u/cupy/tests/cupyx_tests/scipy_tests/ndimage_tests/test_interpolation.py", line 398, in test_affine_transform_texture_memory
E       return m(a, matrix, output_shape=output_shape,
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.hXnTrEAC7u/cupy/cupyx/scipy/ndimage/interpolation.py", line 376, in affine_transform
E       return _texture.affine_transformation(data=input,
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.hXnTrEAC7u/cupy/cupyx/_texture.py", line 168, in affine_transformation
E       texture_object = _create_texture_object(data,
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.hXnTrEAC7u/cupy/cupyx/_texture.py", line 98, in _create_texture_object
E       array = texture.CUDAarray(texture_fmt, *data.shape[::-1])
E     File "cupy/cuda/texture.pyx", line 296, in cupy.cuda.texture.CUDAarray.__init__
E       self.ptr = runtime.malloc3DArray(desc.ptr, width, height, depth,
E     File "cupy_backends/cuda/api/runtime.pyx", line 593, in cupy_backends.cuda.api.runtime.malloc3DArray
E       check_status(status)
E     File "cupy_backends/cuda/api/runtime.pyx", line 265, in cupy_backends.cuda.api.runtime.check_status
E       raise CUDARuntimeError(status)
E   cupy_backends.cuda.api.runtime.CUDARuntimeError: hipErrorUnknown: hipErrorUnknown

cupy_backends/cuda/api/runtime.pyx:265: AssertionError
----------------------------- Captured stderr call -----------------------------
Traceback (most recent call last):
  File "cupy_backends/cuda/api/runtime.pyx", line 644, in cupy_backends.cuda.api.runtime.freeArray
    check_status(status)
  File "cupy_backends/cuda/api/runtime.pyx", line 265, in cupy_backends.cuda.api.runtime.check_status
    raise CUDARuntimeError(status)
cupy_backends.cuda.api.runtime.CUDARuntimeError: hipErrorUnknown: hipErrorUnknown
_ TestAffineTransformTextureMemory.test_affine_transform_texture_memory[_param_155_{mode='constant', order=1, output=float32, output_shape=10, shape=(10, 10, 10), theta=270}] _

self = <<cupyx_tests.scipy_tests.ndimage_tests.test_interpolation.TestAffineTransformTextureMemory object at 0x7fab391d99d0> ...': 'constant', 'order': 1, 'output': <class 'numpy.float32'>, 'output_shape': 10, 'shape': (10, 10, 10), 'theta': 270}>
xp = <module 'cupy' from '/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.hXnTrEAC7u/cupy/cupy/__init__.py'>
scp = <module 'cupyx.scipy' from '/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.hXnTrEAC7u/cupy/cupyx/scipy/__init__.py'>

    @testing.numpy_cupy_allclose(atol=0.1, scipy_name='scp')
    def test_affine_transform_texture_memory(self, xp, scp):
        a = xp.ones(self.shape, dtype=xp.float32)
        center = numpy.divide(numpy.subtract(self.shape, 1), 2)
    
        if len(self.shape) == 2:
            matrix = self._2d_rotation_matrix(self.theta, center)
        elif len(self.shape) == 3:
            matrix = self._3d_rotation_matrix(self.theta, center)
        else:
            return pytest.xfail('Unsupported shape')
    
        if self.output == 'empty':
            output = xp.empty(self.shape, dtype=xp.float32)
            if self.output_shape:
                return pytest.skip('This combination is tested in '
                                   'test_invalid_texture_arguments')
        else:
            output = self.output
    
        if self.output_shape:
            output_shape = (self.output_shape, ) * len(self.shape)
        else:
            output_shape = self.output_shape
    
        if xp == cupy:
            m = cupyx.scipy.ndimage.affine_transform
            matrix = cupy.array(matrix)
>           return m(a, matrix, output_shape=output_shape,
                     output=output, order=self.order,
                     mode=self.mode, texture_memory=True)

tests/cupyx_tests/scipy_tests/ndimage_tests/test_interpolation.py:398: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
cupyx/scipy/ndimage/interpolation.py:376: in affine_transform
    return _texture.affine_transformation(data=input,
cupyx/_texture.py:168: in affine_transformation
    texture_object = _create_texture_object(data,
cupyx/_texture.py:98: in _create_texture_object
    array = texture.CUDAarray(texture_fmt, *data.shape[::-1])
cupy/cuda/texture.pyx:296: in cupy.cuda.texture.CUDAarray.__init__
    self.ptr = runtime.malloc3DArray(desc.ptr, width, height, depth,
cupy_backends/cuda/api/runtime.pyx:593: in cupy_backends.cuda.api.runtime.malloc3DArray
    check_status(status)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

>   raise CUDARuntimeError(status)
E   AssertionError: Only cupy raises error
E   
E   Traceback (most recent call last):
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.hXnTrEAC7u/cupy/cupy/testing/_helper.py", line 47, in _call_func
E       result = impl(self, *args, **kw)
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.hXnTrEAC7u/cupy/tests/cupyx_tests/scipy_tests/ndimage_tests/test_interpolation.py", line 398, in test_affine_transform_texture_memory
E       return m(a, matrix, output_shape=output_shape,
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.hXnTrEAC7u/cupy/cupyx/scipy/ndimage/interpolation.py", line 376, in affine_transform
E       return _texture.affine_transformation(data=input,
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.hXnTrEAC7u/cupy/cupyx/_texture.py", line 168, in affine_transformation
E       texture_object = _create_texture_object(data,
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.hXnTrEAC7u/cupy/cupyx/_texture.py", line 98, in _create_texture_object
E       array = texture.CUDAarray(texture_fmt, *data.shape[::-1])
E     File "cupy/cuda/texture.pyx", line 296, in cupy.cuda.texture.CUDAarray.__init__
E       self.ptr = runtime.malloc3DArray(desc.ptr, width, height, depth,
E     File "cupy_backends/cuda/api/runtime.pyx", line 593, in cupy_backends.cuda.api.runtime.malloc3DArray
E       check_status(status)
E     File "cupy_backends/cuda/api/runtime.pyx", line 265, in cupy_backends.cuda.api.runtime.check_status
E       raise CUDARuntimeError(status)
E   cupy_backends.cuda.api.runtime.CUDARuntimeError: hipErrorUnknown: hipErrorUnknown

cupy_backends/cuda/api/runtime.pyx:265: AssertionError
----------------------------- Captured stderr call -----------------------------
Traceback (most recent call last):
  File "cupy_backends/cuda/api/runtime.pyx", line 644, in cupy_backends.cuda.api.runtime.freeArray
    check_status(status)
  File "cupy_backends/cuda/api/runtime.pyx", line 265, in cupy_backends.cuda.api.runtime.check_status
    raise CUDARuntimeError(status)
cupy_backends.cuda.api.runtime.CUDARuntimeError: hipErrorUnknown: hipErrorUnknown
_ TestAffineTransformTextureMemory.test_affine_transform_texture_memory[_param_156_{mode='constant', order=1, output=float32, output_shape=10, shape=(10, 20, 30), theta=0}] _

self = <<cupyx_tests.scipy_tests.ndimage_tests.test_interpolation.TestAffineTransformTextureMemory object at 0x7fac514d4310> ...de': 'constant', 'order': 1, 'output': <class 'numpy.float32'>, 'output_shape': 10, 'shape': (10, 20, 30), 'theta': 0}>
xp = <module 'cupy' from '/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.hXnTrEAC7u/cupy/cupy/__init__.py'>
scp = <module 'cupyx.scipy' from '/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.hXnTrEAC7u/cupy/cupyx/scipy/__init__.py'>

    @testing.numpy_cupy_allclose(atol=0.1, scipy_name='scp')
    def test_affine_transform_texture_memory(self, xp, scp):
        a = xp.ones(self.shape, dtype=xp.float32)
        center = numpy.divide(numpy.subtract(self.shape, 1), 2)
    
        if len(self.shape) == 2:
            matrix = self._2d_rotation_matrix(self.theta, center)
        elif len(self.shape) == 3:
            matrix = self._3d_rotation_matrix(self.theta, center)
        else:
            return pytest.xfail('Unsupported shape')
    
        if self.output == 'empty':
            output = xp.empty(self.shape, dtype=xp.float32)
            if self.output_shape:
                return pytest.skip('This combination is tested in '
                                   'test_invalid_texture_arguments')
        else:
            output = self.output
    
        if self.output_shape:
            output_shape = (self.output_shape, ) * len(self.shape)
        else:
            output_shape = self.output_shape
    
        if xp == cupy:
            m = cupyx.scipy.ndimage.affine_transform
            matrix = cupy.array(matrix)
>           return m(a, matrix, output_shape=output_shape,
                     output=output, order=self.order,
                     mode=self.mode, texture_memory=True)

tests/cupyx_tests/scipy_tests/ndimage_tests/test_interpolation.py:398: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
cupyx/scipy/ndimage/interpolation.py:376: in affine_transform
    return _texture.affine_transformation(data=input,
cupyx/_texture.py:168: in affine_transformation
    texture_object = _create_texture_object(data,
cupyx/_texture.py:98: in _create_texture_object
    array = texture.CUDAarray(texture_fmt, *data.shape[::-1])
cupy/cuda/texture.pyx:296: in cupy.cuda.texture.CUDAarray.__init__
    self.ptr = runtime.malloc3DArray(desc.ptr, width, height, depth,
cupy_backends/cuda/api/runtime.pyx:593: in cupy_backends.cuda.api.runtime.malloc3DArray
    check_status(status)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

>   raise CUDARuntimeError(status)
E   AssertionError: Only cupy raises error
E   
E   Traceback (most recent call last):
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.hXnTrEAC7u/cupy/cupy/testing/_helper.py", line 47, in _call_func
E       result = impl(self, *args, **kw)
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.hXnTrEAC7u/cupy/tests/cupyx_tests/scipy_tests/ndimage_tests/test_interpolation.py", line 398, in test_affine_transform_texture_memory
E       return m(a, matrix, output_shape=output_shape,
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.hXnTrEAC7u/cupy/cupyx/scipy/ndimage/interpolation.py", line 376, in affine_transform
E       return _texture.affine_transformation(data=input,
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.hXnTrEAC7u/cupy/cupyx/_texture.py", line 168, in affine_transformation
E       texture_object = _create_texture_object(data,
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.hXnTrEAC7u/cupy/cupyx/_texture.py", line 98, in _create_texture_object
E       array = texture.CUDAarray(texture_fmt, *data.shape[::-1])
E     File "cupy/cuda/texture.pyx", line 296, in cupy.cuda.texture.CUDAarray.__init__
E       self.ptr = runtime.malloc3DArray(desc.ptr, width, height, depth,
E     File "cupy_backends/cuda/api/runtime.pyx", line 593, in cupy_backends.cuda.api.runtime.malloc3DArray
E       check_status(status)
E     File "cupy_backends/cuda/api/runtime.pyx", line 265, in cupy_backends.cuda.api.runtime.check_status
E       raise CUDARuntimeError(status)
E   cupy_backends.cuda.api.runtime.CUDARuntimeError: hipErrorUnknown: hipErrorUnknown

cupy_backends/cuda/api/runtime.pyx:265: AssertionError
----------------------------- Captured stderr call -----------------------------
Traceback (most recent call last):
  File "cupy_backends/cuda/api/runtime.pyx", line 644, in cupy_backends.cuda.api.runtime.freeArray
    check_status(status)
  File "cupy_backends/cuda/api/runtime.pyx", line 265, in cupy_backends.cuda.api.runtime.check_status
    raise CUDARuntimeError(status)
cupy_backends.cuda.api.runtime.CUDARuntimeError: hipErrorUnknown: hipErrorUnknown
_ TestAffineTransformTextureMemory.test_affine_transform_texture_memory[_param_157_{mode='constant', order=1, output=float32, output_shape=10, shape=(10, 20, 30), theta=90}] _

self = <<cupyx_tests.scipy_tests.ndimage_tests.test_interpolation.TestAffineTransformTextureMemory object at 0x7fab371a1910> ...e': 'constant', 'order': 1, 'output': <class 'numpy.float32'>, 'output_shape': 10, 'shape': (10, 20, 30), 'theta': 90}>
xp = <module 'cupy' from '/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.hXnTrEAC7u/cupy/cupy/__init__.py'>
scp = <module 'cupyx.scipy' from '/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.hXnTrEAC7u/cupy/cupyx/scipy/__init__.py'>

    @testing.numpy_cupy_allclose(atol=0.1, scipy_name='scp')
    def test_affine_transform_texture_memory(self, xp, scp):
        a = xp.ones(self.shape, dtype=xp.float32)
        center = numpy.divide(numpy.subtract(self.shape, 1), 2)
    
        if len(self.shape) == 2:
            matrix = self._2d_rotation_matrix(self.theta, center)
        elif len(self.shape) == 3:
            matrix = self._3d_rotation_matrix(self.theta, center)
        else:
            return pytest.xfail('Unsupported shape')
    
        if self.output == 'empty':
            output = xp.empty(self.shape, dtype=xp.float32)
            if self.output_shape:
                return pytest.skip('This combination is tested in '
                                   'test_invalid_texture_arguments')
        else:
            output = self.output
    
        if self.output_shape:
            output_shape = (self.output_shape, ) * len(self.shape)
        else:
            output_shape = self.output_shape
    
        if xp == cupy:
            m = cupyx.scipy.ndimage.affine_transform
            matrix = cupy.array(matrix)
>           return m(a, matrix, output_shape=output_shape,
                     output=output, order=self.order,
                     mode=self.mode, texture_memory=True)

tests/cupyx_tests/scipy_tests/ndimage_tests/test_interpolation.py:398: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
cupyx/scipy/ndimage/interpolation.py:376: in affine_transform
    return _texture.affine_transformation(data=input,
cupyx/_texture.py:168: in affine_transformation
    texture_object = _create_texture_object(data,
cupyx/_texture.py:98: in _create_texture_object
    array = texture.CUDAarray(texture_fmt, *data.shape[::-1])
cupy/cuda/texture.pyx:296: in cupy.cuda.texture.CUDAarray.__init__
    self.ptr = runtime.malloc3DArray(desc.ptr, width, height, depth,
cupy_backends/cuda/api/runtime.pyx:593: in cupy_backends.cuda.api.runtime.malloc3DArray
    check_status(status)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

>   raise CUDARuntimeError(status)
E   AssertionError: Only cupy raises error
E   
E   Traceback (most recent call last):
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.hXnTrEAC7u/cupy/cupy/testing/_helper.py", line 47, in _call_func
E       result = impl(self, *args, **kw)
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.hXnTrEAC7u/cupy/tests/cupyx_tests/scipy_tests/ndimage_tests/test_interpolation.py", line 398, in test_affine_transform_texture_memory
E       return m(a, matrix, output_shape=output_shape,
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.hXnTrEAC7u/cupy/cupyx/scipy/ndimage/interpolation.py", line 376, in affine_transform
E       return _texture.affine_transformation(data=input,
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.hXnTrEAC7u/cupy/cupyx/_texture.py", line 168, in affine_transformation
E       texture_object = _create_texture_object(data,
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.hXnTrEAC7u/cupy/cupyx/_texture.py", line 98, in _create_texture_object
E       array = texture.CUDAarray(texture_fmt, *data.shape[::-1])
E     File "cupy/cuda/texture.pyx", line 296, in cupy.cuda.texture.CUDAarray.__init__
E       self.ptr = runtime.malloc3DArray(desc.ptr, width, height, depth,
E     File "cupy_backends/cuda/api/runtime.pyx", line 593, in cupy_backends.cuda.api.runtime.malloc3DArray
E       check_status(status)
E     File "cupy_backends/cuda/api/runtime.pyx", line 265, in cupy_backends.cuda.api.runtime.check_status
E       raise CUDARuntimeError(status)
E   cupy_backends.cuda.api.runtime.CUDARuntimeError: hipErrorUnknown: hipErrorUnknown

cupy_backends/cuda/api/runtime.pyx:265: AssertionError
----------------------------- Captured stderr call -----------------------------
Traceback (most recent call last):
  File "cupy_backends/cuda/api/runtime.pyx", line 644, in cupy_backends.cuda.api.runtime.freeArray
    check_status(status)
  File "cupy_backends/cuda/api/runtime.pyx", line 265, in cupy_backends.cuda.api.runtime.check_status
    raise CUDARuntimeError(status)
cupy_backends.cuda.api.runtime.CUDARuntimeError: hipErrorUnknown: hipErrorUnknown
_ TestAffineTransformTextureMemory.test_affine_transform_texture_memory[_param_158_{mode='constant', order=1, output=float32, output_shape=10, shape=(10, 20, 30), theta=180}] _

self = <<cupyx_tests.scipy_tests.ndimage_tests.test_interpolation.TestAffineTransformTextureMemory object at 0x7fab3714d370> ...': 'constant', 'order': 1, 'output': <class 'numpy.float32'>, 'output_shape': 10, 'shape': (10, 20, 30), 'theta': 180}>
xp = <module 'cupy' from '/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.hXnTrEAC7u/cupy/cupy/__init__.py'>
scp = <module 'cupyx.scipy' from '/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.hXnTrEAC7u/cupy/cupyx/scipy/__init__.py'>

    @testing.numpy_cupy_allclose(atol=0.1, scipy_name='scp')
    def test_affine_transform_texture_memory(self, xp, scp):
        a = xp.ones(self.shape, dtype=xp.float32)
        center = numpy.divide(numpy.subtract(self.shape, 1), 2)
    
        if len(self.shape) == 2:
            matrix = self._2d_rotation_matrix(self.theta, center)
        elif len(self.shape) == 3:
            matrix = self._3d_rotation_matrix(self.theta, center)
        else:
            return pytest.xfail('Unsupported shape')
    
        if self.output == 'empty':
            output = xp.empty(self.shape, dtype=xp.float32)
            if self.output_shape:
                return pytest.skip('This combination is tested in '
                                   'test_invalid_texture_arguments')
        else:
            output = self.output
    
        if self.output_shape:
            output_shape = (self.output_shape, ) * len(self.shape)
        else:
            output_shape = self.output_shape
    
        if xp == cupy:
            m = cupyx.scipy.ndimage.affine_transform
            matrix = cupy.array(matrix)
>           return m(a, matrix, output_shape=output_shape,
                     output=output, order=self.order,
                     mode=self.mode, texture_memory=True)

tests/cupyx_tests/scipy_tests/ndimage_tests/test_interpolation.py:398: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
cupyx/scipy/ndimage/interpolation.py:376: in affine_transform
    return _texture.affine_transformation(data=input,
cupyx/_texture.py:168: in affine_transformation
    texture_object = _create_texture_object(data,
cupyx/_texture.py:98: in _create_texture_object
    array = texture.CUDAarray(texture_fmt, *data.shape[::-1])
cupy/cuda/texture.pyx:296: in cupy.cuda.texture.CUDAarray.__init__
    self.ptr = runtime.malloc3DArray(desc.ptr, width, height, depth,
cupy_backends/cuda/api/runtime.pyx:593: in cupy_backends.cuda.api.runtime.malloc3DArray
    check_status(status)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

>   raise CUDARuntimeError(status)
E   AssertionError: Only cupy raises error
E   
E   Traceback (most recent call last):
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.hXnTrEAC7u/cupy/cupy/testing/_helper.py", line 47, in _call_func
E       result = impl(self, *args, **kw)
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.hXnTrEAC7u/cupy/tests/cupyx_tests/scipy_tests/ndimage_tests/test_interpolation.py", line 398, in test_affine_transform_texture_memory
E       return m(a, matrix, output_shape=output_shape,
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.hXnTrEAC7u/cupy/cupyx/scipy/ndimage/interpolation.py", line 376, in affine_transform
E       return _texture.affine_transformation(data=input,
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.hXnTrEAC7u/cupy/cupyx/_texture.py", line 168, in affine_transformation
E       texture_object = _create_texture_object(data,
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.hXnTrEAC7u/cupy/cupyx/_texture.py", line 98, in _create_texture_object
E       array = texture.CUDAarray(texture_fmt, *data.shape[::-1])
E     File "cupy/cuda/texture.pyx", line 296, in cupy.cuda.texture.CUDAarray.__init__
E       self.ptr = runtime.malloc3DArray(desc.ptr, width, height, depth,
E     File "cupy_backends/cuda/api/runtime.pyx", line 593, in cupy_backends.cuda.api.runtime.malloc3DArray
E       check_status(status)
E     File "cupy_backends/cuda/api/runtime.pyx", line 265, in cupy_backends.cuda.api.runtime.check_status
E       raise CUDARuntimeError(status)
E   cupy_backends.cuda.api.runtime.CUDARuntimeError: hipErrorUnknown: hipErrorUnknown

cupy_backends/cuda/api/runtime.pyx:265: AssertionError
----------------------------- Captured stderr call -----------------------------
Traceback (most recent call last):
  File "cupy_backends/cuda/api/runtime.pyx", line 644, in cupy_backends.cuda.api.runtime.freeArray
    check_status(status)
  File "cupy_backends/cuda/api/runtime.pyx", line 265, in cupy_backends.cuda.api.runtime.check_status
    raise CUDARuntimeError(status)
cupy_backends.cuda.api.runtime.CUDARuntimeError: hipErrorUnknown: hipErrorUnknown
_ TestAffineTransformTextureMemory.test_affine_transform_texture_memory[_param_159_{mode='constant', order=1, output=float32, output_shape=10, shape=(10, 20, 30), theta=270}] _

self = <<cupyx_tests.scipy_tests.ndimage_tests.test_interpolation.TestAffineTransformTextureMemory object at 0x7fab37221760> ...': 'constant', 'order': 1, 'output': <class 'numpy.float32'>, 'output_shape': 10, 'shape': (10, 20, 30), 'theta': 270}>
xp = <module 'cupy' from '/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.hXnTrEAC7u/cupy/cupy/__init__.py'>
scp = <module 'cupyx.scipy' from '/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.hXnTrEAC7u/cupy/cupyx/scipy/__init__.py'>

    @testing.numpy_cupy_allclose(atol=0.1, scipy_name='scp')
    def test_affine_transform_texture_memory(self, xp, scp):
        a = xp.ones(self.shape, dtype=xp.float32)
        center = numpy.divide(numpy.subtract(self.shape, 1), 2)
    
        if len(self.shape) == 2:
            matrix = self._2d_rotation_matrix(self.theta, center)
        elif len(self.shape) == 3:
            matrix = self._3d_rotation_matrix(self.theta, center)
        else:
            return pytest.xfail('Unsupported shape')
    
        if self.output == 'empty':
            output = xp.empty(self.shape, dtype=xp.float32)
            if self.output_shape:
                return pytest.skip('This combination is tested in '
                                   'test_invalid_texture_arguments')
        else:
            output = self.output
    
        if self.output_shape:
            output_shape = (self.output_shape, ) * len(self.shape)
        else:
            output_shape = self.output_shape
    
        if xp == cupy:
            m = cupyx.scipy.ndimage.affine_transform
            matrix = cupy.array(matrix)
>           return m(a, matrix, output_shape=output_shape,
                     output=output, order=self.order,
                     mode=self.mode, texture_memory=True)

tests/cupyx_tests/scipy_tests/ndimage_tests/test_interpolation.py:398: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
cupyx/scipy/ndimage/interpolation.py:376: in affine_transform
    return _texture.affine_transformation(data=input,
cupyx/_texture.py:168: in affine_transformation
    texture_object = _create_texture_object(data,
cupyx/_texture.py:98: in _create_texture_object
    array = texture.CUDAarray(texture_fmt, *data.shape[::-1])
cupy/cuda/texture.pyx:296: in cupy.cuda.texture.CUDAarray.__init__
    self.ptr = runtime.malloc3DArray(desc.ptr, width, height, depth,
cupy_backends/cuda/api/runtime.pyx:593: in cupy_backends.cuda.api.runtime.malloc3DArray
    check_status(status)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

>   raise CUDARuntimeError(status)
E   AssertionError: Only cupy raises error
E   
E   Traceback (most recent call last):
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.hXnTrEAC7u/cupy/cupy/testing/_helper.py", line 47, in _call_func
E       result = impl(self, *args, **kw)
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.hXnTrEAC7u/cupy/tests/cupyx_tests/scipy_tests/ndimage_tests/test_interpolation.py", line 398, in test_affine_transform_texture_memory
E       return m(a, matrix, output_shape=output_shape,
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.hXnTrEAC7u/cupy/cupyx/scipy/ndimage/interpolation.py", line 376, in affine_transform
E       return _texture.affine_transformation(data=input,
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.hXnTrEAC7u/cupy/cupyx/_texture.py", line 168, in affine_transformation
E       texture_object = _create_texture_object(data,
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.hXnTrEAC7u/cupy/cupyx/_texture.py", line 98, in _create_texture_object
E       array = texture.CUDAarray(texture_fmt, *data.shape[::-1])
E     File "cupy/cuda/texture.pyx", line 296, in cupy.cuda.texture.CUDAarray.__init__
E       self.ptr = runtime.malloc3DArray(desc.ptr, width, height, depth,
E     File "cupy_backends/cuda/api/runtime.pyx", line 593, in cupy_backends.cuda.api.runtime.malloc3DArray
E       check_status(status)
E     File "cupy_backends/cuda/api/runtime.pyx", line 265, in cupy_backends.cuda.api.runtime.check_status
E       raise CUDARuntimeError(status)
E   cupy_backends.cuda.api.runtime.CUDARuntimeError: hipErrorUnknown: hipErrorUnknown

cupy_backends/cuda/api/runtime.pyx:265: AssertionError
----------------------------- Captured stderr call -----------------------------
Traceback (most recent call last):
  File "cupy_backends/cuda/api/runtime.pyx", line 644, in cupy_backends.cuda.api.runtime.freeArray
    check_status(status)
  File "cupy_backends/cuda/api/runtime.pyx", line 265, in cupy_backends.cuda.api.runtime.check_status
    raise CUDARuntimeError(status)
cupy_backends.cuda.api.runtime.CUDARuntimeError: hipErrorUnknown: hipErrorUnknown
_ TestAffineTransformTextureMemory.test_affine_transform_texture_memory[_param_160_{mode='constant', order=1, output='empty', output_shape=None, shape=(100, 100), theta=0}] _

self = <<cupyx_tests.scipy_tests.ndimage_tests.test_interpolation.TestAffineTransformTextureMemory object at 0x7fab371cd760>  parameter: {'mode': 'constant', 'order': 1, 'output': 'empty', 'output_shape': None, 'shape': (100, 100), 'theta': 0}>
xp = <module 'cupy' from '/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.hXnTrEAC7u/cupy/cupy/__init__.py'>
scp = <module 'cupyx.scipy' from '/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.hXnTrEAC7u/cupy/cupyx/scipy/__init__.py'>

    @testing.numpy_cupy_allclose(atol=0.1, scipy_name='scp')
    def test_affine_transform_texture_memory(self, xp, scp):
        a = xp.ones(self.shape, dtype=xp.float32)
        center = numpy.divide(numpy.subtract(self.shape, 1), 2)
    
        if len(self.shape) == 2:
            matrix = self._2d_rotation_matrix(self.theta, center)
        elif len(self.shape) == 3:
            matrix = self._3d_rotation_matrix(self.theta, center)
        else:
            return pytest.xfail('Unsupported shape')
    
        if self.output == 'empty':
            output = xp.empty(self.shape, dtype=xp.float32)
            if self.output_shape:
                return pytest.skip('This combination is tested in '
                                   'test_invalid_texture_arguments')
        else:
            output = self.output
    
        if self.output_shape:
            output_shape = (self.output_shape, ) * len(self.shape)
        else:
            output_shape = self.output_shape
    
        if xp == cupy:
            m = cupyx.scipy.ndimage.affine_transform
            matrix = cupy.array(matrix)
>           return m(a, matrix, output_shape=output_shape,
                     output=output, order=self.order,
                     mode=self.mode, texture_memory=True)

tests/cupyx_tests/scipy_tests/ndimage_tests/test_interpolation.py:398: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
cupyx/scipy/ndimage/interpolation.py:376: in affine_transform
    return _texture.affine_transformation(data=input,
cupyx/_texture.py:168: in affine_transformation
    texture_object = _create_texture_object(data,
cupyx/_texture.py:98: in _create_texture_object
    array = texture.CUDAarray(texture_fmt, *data.shape[::-1])
cupy/cuda/texture.pyx:296: in cupy.cuda.texture.CUDAarray.__init__
    self.ptr = runtime.malloc3DArray(desc.ptr, width, height, depth,
cupy_backends/cuda/api/runtime.pyx:593: in cupy_backends.cuda.api.runtime.malloc3DArray
    check_status(status)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

>   raise CUDARuntimeError(status)
E   AssertionError: Only cupy raises error
E   
E   Traceback (most recent call last):
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.hXnTrEAC7u/cupy/cupy/testing/_helper.py", line 47, in _call_func
E       result = impl(self, *args, **kw)
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.hXnTrEAC7u/cupy/tests/cupyx_tests/scipy_tests/ndimage_tests/test_interpolation.py", line 398, in test_affine_transform_texture_memory
E       return m(a, matrix, output_shape=output_shape,
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.hXnTrEAC7u/cupy/cupyx/scipy/ndimage/interpolation.py", line 376, in affine_transform
E       return _texture.affine_transformation(data=input,
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.hXnTrEAC7u/cupy/cupyx/_texture.py", line 168, in affine_transformation
E       texture_object = _create_texture_object(data,
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.hXnTrEAC7u/cupy/cupyx/_texture.py", line 98, in _create_texture_object
E       array = texture.CUDAarray(texture_fmt, *data.shape[::-1])
E     File "cupy/cuda/texture.pyx", line 296, in cupy.cuda.texture.CUDAarray.__init__
E       self.ptr = runtime.malloc3DArray(desc.ptr, width, height, depth,
E     File "cupy_backends/cuda/api/runtime.pyx", line 593, in cupy_backends.cuda.api.runtime.malloc3DArray
E       check_status(status)
E     File "cupy_backends/cuda/api/runtime.pyx", line 265, in cupy_backends.cuda.api.runtime.check_status
E       raise CUDARuntimeError(status)
E   cupy_backends.cuda.api.runtime.CUDARuntimeError: hipErrorUnknown: hipErrorUnknown

cupy_backends/cuda/api/runtime.pyx:265: AssertionError
----------------------------- Captured stderr call -----------------------------
Traceback (most recent call last):
  File "cupy_backends/cuda/api/runtime.pyx", line 644, in cupy_backends.cuda.api.runtime.freeArray
    check_status(status)
  File "cupy_backends/cuda/api/runtime.pyx", line 265, in cupy_backends.cuda.api.runtime.check_status
    raise CUDARuntimeError(status)
cupy_backends.cuda.api.runtime.CUDARuntimeError: hipErrorUnknown: hipErrorUnknown
_ TestAffineTransformTextureMemory.test_affine_transform_texture_memory[_param_161_{mode='constant', order=1, output='empty', output_shape=None, shape=(100, 100), theta=90}] _

self = <<cupyx_tests.scipy_tests.ndimage_tests.test_interpolation.TestAffineTransformTextureMemory object at 0x7fab39e3da60>  parameter: {'mode': 'constant', 'order': 1, 'output': 'empty', 'output_shape': None, 'shape': (100, 100), 'theta': 90}>
xp = <module 'cupy' from '/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.hXnTrEAC7u/cupy/cupy/__init__.py'>
scp = <module 'cupyx.scipy' from '/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.hXnTrEAC7u/cupy/cupyx/scipy/__init__.py'>

    @testing.numpy_cupy_allclose(atol=0.1, scipy_name='scp')
    def test_affine_transform_texture_memory(self, xp, scp):
        a = xp.ones(self.shape, dtype=xp.float32)
        center = numpy.divide(numpy.subtract(self.shape, 1), 2)
    
        if len(self.shape) == 2:
            matrix = self._2d_rotation_matrix(self.theta, center)
        elif len(self.shape) == 3:
            matrix = self._3d_rotation_matrix(self.theta, center)
        else:
            return pytest.xfail('Unsupported shape')
    
        if self.output == 'empty':
            output = xp.empty(self.shape, dtype=xp.float32)
            if self.output_shape:
                return pytest.skip('This combination is tested in '
                                   'test_invalid_texture_arguments')
        else:
            output = self.output
    
        if self.output_shape:
            output_shape = (self.output_shape, ) * len(self.shape)
        else:
            output_shape = self.output_shape
    
        if xp == cupy:
            m = cupyx.scipy.ndimage.affine_transform
            matrix = cupy.array(matrix)
>           return m(a, matrix, output_shape=output_shape,
                     output=output, order=self.order,
                     mode=self.mode, texture_memory=True)

tests/cupyx_tests/scipy_tests/ndimage_tests/test_interpolation.py:398: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
cupyx/scipy/ndimage/interpolation.py:376: in affine_transform
    return _texture.affine_transformation(data=input,
cupyx/_texture.py:168: in affine_transformation
    texture_object = _create_texture_object(data,
cupyx/_texture.py:98: in _create_texture_object
    array = texture.CUDAarray(texture_fmt, *data.shape[::-1])
cupy/cuda/texture.pyx:296: in cupy.cuda.texture.CUDAarray.__init__
    self.ptr = runtime.malloc3DArray(desc.ptr, width, height, depth,
cupy_backends/cuda/api/runtime.pyx:593: in cupy_backends.cuda.api.runtime.malloc3DArray
    check_status(status)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

>   raise CUDARuntimeError(status)
E   AssertionError: Only cupy raises error
E   
E   Traceback (most recent call last):
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.hXnTrEAC7u/cupy/cupy/testing/_helper.py", line 47, in _call_func
E       result = impl(self, *args, **kw)
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.hXnTrEAC7u/cupy/tests/cupyx_tests/scipy_tests/ndimage_tests/test_interpolation.py", line 398, in test_affine_transform_texture_memory
E       return m(a, matrix, output_shape=output_shape,
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.hXnTrEAC7u/cupy/cupyx/scipy/ndimage/interpolation.py", line 376, in affine_transform
E       return _texture.affine_transformation(data=input,
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.hXnTrEAC7u/cupy/cupyx/_texture.py", line 168, in affine_transformation
E       texture_object = _create_texture_object(data,
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.hXnTrEAC7u/cupy/cupyx/_texture.py", line 98, in _create_texture_object
E       array = texture.CUDAarray(texture_fmt, *data.shape[::-1])
E     File "cupy/cuda/texture.pyx", line 296, in cupy.cuda.texture.CUDAarray.__init__
E       self.ptr = runtime.malloc3DArray(desc.ptr, width, height, depth,
E     File "cupy_backends/cuda/api/runtime.pyx", line 593, in cupy_backends.cuda.api.runtime.malloc3DArray
E       check_status(status)
E     File "cupy_backends/cuda/api/runtime.pyx", line 265, in cupy_backends.cuda.api.runtime.check_status
E       raise CUDARuntimeError(status)
E   cupy_backends.cuda.api.runtime.CUDARuntimeError: hipErrorUnknown: hipErrorUnknown

cupy_backends/cuda/api/runtime.pyx:265: AssertionError
----------------------------- Captured stderr call -----------------------------
Traceback (most recent call last):
  File "cupy_backends/cuda/api/runtime.pyx", line 644, in cupy_backends.cuda.api.runtime.freeArray
    check_status(status)
  File "cupy_backends/cuda/api/runtime.pyx", line 265, in cupy_backends.cuda.api.runtime.check_status
    raise CUDARuntimeError(status)
cupy_backends.cuda.api.runtime.CUDARuntimeError: hipErrorUnknown: hipErrorUnknown
_ TestAffineTransformTextureMemory.test_affine_transform_texture_memory[_param_162_{mode='constant', order=1, output='empty', output_shape=None, shape=(100, 100), theta=180}] _

self = <<cupyx_tests.scipy_tests.ndimage_tests.test_interpolation.TestAffineTransformTextureMemory object at 0x7fac51517d90>  parameter: {'mode': 'constant', 'order': 1, 'output': 'empty', 'output_shape': None, 'shape': (100, 100), 'theta': 180}>
xp = <module 'cupy' from '/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.hXnTrEAC7u/cupy/cupy/__init__.py'>
scp = <module 'cupyx.scipy' from '/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.hXnTrEAC7u/cupy/cupyx/scipy/__init__.py'>

    @testing.numpy_cupy_allclose(atol=0.1, scipy_name='scp')
    def test_affine_transform_texture_memory(self, xp, scp):
        a = xp.ones(self.shape, dtype=xp.float32)
        center = numpy.divide(numpy.subtract(self.shape, 1), 2)
    
        if len(self.shape) == 2:
            matrix = self._2d_rotation_matrix(self.theta, center)
        elif len(self.shape) == 3:
            matrix = self._3d_rotation_matrix(self.theta, center)
        else:
            return pytest.xfail('Unsupported shape')
    
        if self.output == 'empty':
            output = xp.empty(self.shape, dtype=xp.float32)
            if self.output_shape:
                return pytest.skip('This combination is tested in '
                                   'test_invalid_texture_arguments')
        else:
            output = self.output
    
        if self.output_shape:
            output_shape = (self.output_shape, ) * len(self.shape)
        else:
            output_shape = self.output_shape
    
        if xp == cupy:
            m = cupyx.scipy.ndimage.affine_transform
            matrix = cupy.array(matrix)
>           return m(a, matrix, output_shape=output_shape,
                     output=output, order=self.order,
                     mode=self.mode, texture_memory=True)

tests/cupyx_tests/scipy_tests/ndimage_tests/test_interpolation.py:398: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
cupyx/scipy/ndimage/interpolation.py:376: in affine_transform
    return _texture.affine_transformation(data=input,
cupyx/_texture.py:168: in affine_transformation
    texture_object = _create_texture_object(data,
cupyx/_texture.py:98: in _create_texture_object
    array = texture.CUDAarray(texture_fmt, *data.shape[::-1])
cupy/cuda/texture.pyx:296: in cupy.cuda.texture.CUDAarray.__init__
    self.ptr = runtime.malloc3DArray(desc.ptr, width, height, depth,
cupy_backends/cuda/api/runtime.pyx:593: in cupy_backends.cuda.api.runtime.malloc3DArray
    check_status(status)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

>   raise CUDARuntimeError(status)
E   AssertionError: Only cupy raises error
E   
E   Traceback (most recent call last):
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.hXnTrEAC7u/cupy/cupy/testing/_helper.py", line 47, in _call_func
E       result = impl(self, *args, **kw)
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.hXnTrEAC7u/cupy/tests/cupyx_tests/scipy_tests/ndimage_tests/test_interpolation.py", line 398, in test_affine_transform_texture_memory
E       return m(a, matrix, output_shape=output_shape,
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.hXnTrEAC7u/cupy/cupyx/scipy/ndimage/interpolation.py", line 376, in affine_transform
E       return _texture.affine_transformation(data=input,
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.hXnTrEAC7u/cupy/cupyx/_texture.py", line 168, in affine_transformation
E       texture_object = _create_texture_object(data,
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.hXnTrEAC7u/cupy/cupyx/_texture.py", line 98, in _create_texture_object
E       array = texture.CUDAarray(texture_fmt, *data.shape[::-1])
E     File "cupy/cuda/texture.pyx", line 296, in cupy.cuda.texture.CUDAarray.__init__
E       self.ptr = runtime.malloc3DArray(desc.ptr, width, height, depth,
E     File "cupy_backends/cuda/api/runtime.pyx", line 593, in cupy_backends.cuda.api.runtime.malloc3DArray
E       check_status(status)
E     File "cupy_backends/cuda/api/runtime.pyx", line 265, in cupy_backends.cuda.api.runtime.check_status
E       raise CUDARuntimeError(status)
E   cupy_backends.cuda.api.runtime.CUDARuntimeError: hipErrorUnknown: hipErrorUnknown

cupy_backends/cuda/api/runtime.pyx:265: AssertionError
----------------------------- Captured stderr call -----------------------------
Traceback (most recent call last):
  File "cupy_backends/cuda/api/runtime.pyx", line 644, in cupy_backends.cuda.api.runtime.freeArray
    check_status(status)
  File "cupy_backends/cuda/api/runtime.pyx", line 265, in cupy_backends.cuda.api.runtime.check_status
    raise CUDARuntimeError(status)
cupy_backends.cuda.api.runtime.CUDARuntimeError: hipErrorUnknown: hipErrorUnknown
_ TestAffineTransformTextureMemory.test_affine_transform_texture_memory[_param_163_{mode='constant', order=1, output='empty', output_shape=None, shape=(100, 100), theta=270}] _

self = <<cupyx_tests.scipy_tests.ndimage_tests.test_interpolation.TestAffineTransformTextureMemory object at 0x7fab37c801f0>  parameter: {'mode': 'constant', 'order': 1, 'output': 'empty', 'output_shape': None, 'shape': (100, 100), 'theta': 270}>
xp = <module 'cupy' from '/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.hXnTrEAC7u/cupy/cupy/__init__.py'>
scp = <module 'cupyx.scipy' from '/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.hXnTrEAC7u/cupy/cupyx/scipy/__init__.py'>

    @testing.numpy_cupy_allclose(atol=0.1, scipy_name='scp')
    def test_affine_transform_texture_memory(self, xp, scp):
        a = xp.ones(self.shape, dtype=xp.float32)
        center = numpy.divide(numpy.subtract(self.shape, 1), 2)
    
        if len(self.shape) == 2:
            matrix = self._2d_rotation_matrix(self.theta, center)
        elif len(self.shape) == 3:
            matrix = self._3d_rotation_matrix(self.theta, center)
        else:
            return pytest.xfail('Unsupported shape')
    
        if self.output == 'empty':
            output = xp.empty(self.shape, dtype=xp.float32)
            if self.output_shape:
                return pytest.skip('This combination is tested in '
                                   'test_invalid_texture_arguments')
        else:
            output = self.output
    
        if self.output_shape:
            output_shape = (self.output_shape, ) * len(self.shape)
        else:
            output_shape = self.output_shape
    
        if xp == cupy:
            m = cupyx.scipy.ndimage.affine_transform
            matrix = cupy.array(matrix)
>           return m(a, matrix, output_shape=output_shape,
                     output=output, order=self.order,
                     mode=self.mode, texture_memory=True)

tests/cupyx_tests/scipy_tests/ndimage_tests/test_interpolation.py:398: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
cupyx/scipy/ndimage/interpolation.py:376: in affine_transform
    return _texture.affine_transformation(data=input,
cupyx/_texture.py:168: in affine_transformation
    texture_object = _create_texture_object(data,
cupyx/_texture.py:98: in _create_texture_object
    array = texture.CUDAarray(texture_fmt, *data.shape[::-1])
cupy/cuda/texture.pyx:296: in cupy.cuda.texture.CUDAarray.__init__
    self.ptr = runtime.malloc3DArray(desc.ptr, width, height, depth,
cupy_backends/cuda/api/runtime.pyx:593: in cupy_backends.cuda.api.runtime.malloc3DArray
    check_status(status)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

>   raise CUDARuntimeError(status)
E   AssertionError: Only cupy raises error
E   
E   Traceback (most recent call last):
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.hXnTrEAC7u/cupy/cupy/testing/_helper.py", line 47, in _call_func
E       result = impl(self, *args, **kw)
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.hXnTrEAC7u/cupy/tests/cupyx_tests/scipy_tests/ndimage_tests/test_interpolation.py", line 398, in test_affine_transform_texture_memory
E       return m(a, matrix, output_shape=output_shape,
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.hXnTrEAC7u/cupy/cupyx/scipy/ndimage/interpolation.py", line 376, in affine_transform
E       return _texture.affine_transformation(data=input,
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.hXnTrEAC7u/cupy/cupyx/_texture.py", line 168, in affine_transformation
E       texture_object = _create_texture_object(data,
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.hXnTrEAC7u/cupy/cupyx/_texture.py", line 98, in _create_texture_object
E       array = texture.CUDAarray(texture_fmt, *data.shape[::-1])
E     File "cupy/cuda/texture.pyx", line 296, in cupy.cuda.texture.CUDAarray.__init__
E       self.ptr = runtime.malloc3DArray(desc.ptr, width, height, depth,
E     File "cupy_backends/cuda/api/runtime.pyx", line 593, in cupy_backends.cuda.api.runtime.malloc3DArray
E       check_status(status)
E     File "cupy_backends/cuda/api/runtime.pyx", line 265, in cupy_backends.cuda.api.runtime.check_status
E       raise CUDARuntimeError(status)
E   cupy_backends.cuda.api.runtime.CUDARuntimeError: hipErrorUnknown: hipErrorUnknown

cupy_backends/cuda/api/runtime.pyx:265: AssertionError
----------------------------- Captured stderr call -----------------------------
Traceback (most recent call last):
  File "cupy_backends/cuda/api/runtime.pyx", line 644, in cupy_backends.cuda.api.runtime.freeArray
    check_status(status)
  File "cupy_backends/cuda/api/runtime.pyx", line 265, in cupy_backends.cuda.api.runtime.check_status
    raise CUDARuntimeError(status)
cupy_backends.cuda.api.runtime.CUDARuntimeError: hipErrorUnknown: hipErrorUnknown
_ TestAffineTransformTextureMemory.test_affine_transform_texture_memory[_param_164_{mode='constant', order=1, output='empty', output_shape=None, shape=(10, 20), theta=0}] _

self = <<cupyx_tests.scipy_tests.ndimage_tests.test_interpolation.TestAffineTransformTextureMemory object at 0x7fab3839da00>  parameter: {'mode': 'constant', 'order': 1, 'output': 'empty', 'output_shape': None, 'shape': (10, 20), 'theta': 0}>
xp = <module 'cupy' from '/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.hXnTrEAC7u/cupy/cupy/__init__.py'>
scp = <module 'cupyx.scipy' from '/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.hXnTrEAC7u/cupy/cupyx/scipy/__init__.py'>

    @testing.numpy_cupy_allclose(atol=0.1, scipy_name='scp')
    def test_affine_transform_texture_memory(self, xp, scp):
        a = xp.ones(self.shape, dtype=xp.float32)
        center = numpy.divide(numpy.subtract(self.shape, 1), 2)
    
        if len(self.shape) == 2:
            matrix = self._2d_rotation_matrix(self.theta, center)
        elif len(self.shape) == 3:
            matrix = self._3d_rotation_matrix(self.theta, center)
        else:
            return pytest.xfail('Unsupported shape')
    
        if self.output == 'empty':
            output = xp.empty(self.shape, dtype=xp.float32)
            if self.output_shape:
                return pytest.skip('This combination is tested in '
                                   'test_invalid_texture_arguments')
        else:
            output = self.output
    
        if self.output_shape:
            output_shape = (self.output_shape, ) * len(self.shape)
        else:
            output_shape = self.output_shape
    
        if xp == cupy:
            m = cupyx.scipy.ndimage.affine_transform
            matrix = cupy.array(matrix)
>           return m(a, matrix, output_shape=output_shape,
                     output=output, order=self.order,
                     mode=self.mode, texture_memory=True)

tests/cupyx_tests/scipy_tests/ndimage_tests/test_interpolation.py:398: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
cupyx/scipy/ndimage/interpolation.py:376: in affine_transform
    return _texture.affine_transformation(data=input,
cupyx/_texture.py:168: in affine_transformation
    texture_object = _create_texture_object(data,
cupyx/_texture.py:98: in _create_texture_object
    array = texture.CUDAarray(texture_fmt, *data.shape[::-1])
cupy/cuda/texture.pyx:296: in cupy.cuda.texture.CUDAarray.__init__
    self.ptr = runtime.malloc3DArray(desc.ptr, width, height, depth,
cupy_backends/cuda/api/runtime.pyx:593: in cupy_backends.cuda.api.runtime.malloc3DArray
    check_status(status)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

>   raise CUDARuntimeError(status)
E   AssertionError: Only cupy raises error
E   
E   Traceback (most recent call last):
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.hXnTrEAC7u/cupy/cupy/testing/_helper.py", line 47, in _call_func
E       result = impl(self, *args, **kw)
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.hXnTrEAC7u/cupy/tests/cupyx_tests/scipy_tests/ndimage_tests/test_interpolation.py", line 398, in test_affine_transform_texture_memory
E       return m(a, matrix, output_shape=output_shape,
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.hXnTrEAC7u/cupy/cupyx/scipy/ndimage/interpolation.py", line 376, in affine_transform
E       return _texture.affine_transformation(data=input,
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.hXnTrEAC7u/cupy/cupyx/_texture.py", line 168, in affine_transformation
E       texture_object = _create_texture_object(data,
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.hXnTrEAC7u/cupy/cupyx/_texture.py", line 98, in _create_texture_object
E       array = texture.CUDAarray(texture_fmt, *data.shape[::-1])
E     File "cupy/cuda/texture.pyx", line 296, in cupy.cuda.texture.CUDAarray.__init__
E       self.ptr = runtime.malloc3DArray(desc.ptr, width, height, depth,
E     File "cupy_backends/cuda/api/runtime.pyx", line 593, in cupy_backends.cuda.api.runtime.malloc3DArray
E       check_status(status)
E     File "cupy_backends/cuda/api/runtime.pyx", line 265, in cupy_backends.cuda.api.runtime.check_status
E       raise CUDARuntimeError(status)
E   cupy_backends.cuda.api.runtime.CUDARuntimeError: hipErrorUnknown: hipErrorUnknown

cupy_backends/cuda/api/runtime.pyx:265: AssertionError
----------------------------- Captured stderr call -----------------------------
Traceback (most recent call last):
  File "cupy_backends/cuda/api/runtime.pyx", line 644, in cupy_backends.cuda.api.runtime.freeArray
    check_status(status)
  File "cupy_backends/cuda/api/runtime.pyx", line 265, in cupy_backends.cuda.api.runtime.check_status
    raise CUDARuntimeError(status)
cupy_backends.cuda.api.runtime.CUDARuntimeError: hipErrorUnknown: hipErrorUnknown
_ TestAffineTransformTextureMemory.test_affine_transform_texture_memory[_param_165_{mode='constant', order=1, output='empty', output_shape=None, shape=(10, 20), theta=90}] _

self = <<cupyx_tests.scipy_tests.ndimage_tests.test_interpolation.TestAffineTransformTextureMemory object at 0x7fab37280460>  parameter: {'mode': 'constant', 'order': 1, 'output': 'empty', 'output_shape': None, 'shape': (10, 20), 'theta': 90}>
xp = <module 'cupy' from '/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.hXnTrEAC7u/cupy/cupy/__init__.py'>
scp = <module 'cupyx.scipy' from '/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.hXnTrEAC7u/cupy/cupyx/scipy/__init__.py'>

    @testing.numpy_cupy_allclose(atol=0.1, scipy_name='scp')
    def test_affine_transform_texture_memory(self, xp, scp):
        a = xp.ones(self.shape, dtype=xp.float32)
        center = numpy.divide(numpy.subtract(self.shape, 1), 2)
    
        if len(self.shape) == 2:
            matrix = self._2d_rotation_matrix(self.theta, center)
        elif len(self.shape) == 3:
            matrix = self._3d_rotation_matrix(self.theta, center)
        else:
            return pytest.xfail('Unsupported shape')
    
        if self.output == 'empty':
            output = xp.empty(self.shape, dtype=xp.float32)
            if self.output_shape:
                return pytest.skip('This combination is tested in '
                                   'test_invalid_texture_arguments')
        else:
            output = self.output
    
        if self.output_shape:
            output_shape = (self.output_shape, ) * len(self.shape)
        else:
            output_shape = self.output_shape
    
        if xp == cupy:
            m = cupyx.scipy.ndimage.affine_transform
            matrix = cupy.array(matrix)
>           return m(a, matrix, output_shape=output_shape,
                     output=output, order=self.order,
                     mode=self.mode, texture_memory=True)

tests/cupyx_tests/scipy_tests/ndimage_tests/test_interpolation.py:398: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
cupyx/scipy/ndimage/interpolation.py:376: in affine_transform
    return _texture.affine_transformation(data=input,
cupyx/_texture.py:168: in affine_transformation
    texture_object = _create_texture_object(data,
cupyx/_texture.py:98: in _create_texture_object
    array = texture.CUDAarray(texture_fmt, *data.shape[::-1])
cupy/cuda/texture.pyx:296: in cupy.cuda.texture.CUDAarray.__init__
    self.ptr = runtime.malloc3DArray(desc.ptr, width, height, depth,
cupy_backends/cuda/api/runtime.pyx:593: in cupy_backends.cuda.api.runtime.malloc3DArray
    check_status(status)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

>   raise CUDARuntimeError(status)
E   AssertionError: Only cupy raises error
E   
E   Traceback (most recent call last):
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.hXnTrEAC7u/cupy/cupy/testing/_helper.py", line 47, in _call_func
E       result = impl(self, *args, **kw)
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.hXnTrEAC7u/cupy/tests/cupyx_tests/scipy_tests/ndimage_tests/test_interpolation.py", line 398, in test_affine_transform_texture_memory
E       return m(a, matrix, output_shape=output_shape,
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.hXnTrEAC7u/cupy/cupyx/scipy/ndimage/interpolation.py", line 376, in affine_transform
E       return _texture.affine_transformation(data=input,
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.hXnTrEAC7u/cupy/cupyx/_texture.py", line 168, in affine_transformation
E       texture_object = _create_texture_object(data,
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.hXnTrEAC7u/cupy/cupyx/_texture.py", line 98, in _create_texture_object
E       array = texture.CUDAarray(texture_fmt, *data.shape[::-1])
E     File "cupy/cuda/texture.pyx", line 296, in cupy.cuda.texture.CUDAarray.__init__
E       self.ptr = runtime.malloc3DArray(desc.ptr, width, height, depth,
E     File "cupy_backends/cuda/api/runtime.pyx", line 593, in cupy_backends.cuda.api.runtime.malloc3DArray
E       check_status(status)
E     File "cupy_backends/cuda/api/runtime.pyx", line 265, in cupy_backends.cuda.api.runtime.check_status
E       raise CUDARuntimeError(status)
E   cupy_backends.cuda.api.runtime.CUDARuntimeError: hipErrorUnknown: hipErrorUnknown

cupy_backends/cuda/api/runtime.pyx:265: AssertionError
----------------------------- Captured stderr call -----------------------------
Traceback (most recent call last):
  File "cupy_backends/cuda/api/runtime.pyx", line 644, in cupy_backends.cuda.api.runtime.freeArray
    check_status(status)
  File "cupy_backends/cuda/api/runtime.pyx", line 265, in cupy_backends.cuda.api.runtime.check_status
    raise CUDARuntimeError(status)
cupy_backends.cuda.api.runtime.CUDARuntimeError: hipErrorUnknown: hipErrorUnknown
_ TestAffineTransformTextureMemory.test_affine_transform_texture_memory[_param_166_{mode='constant', order=1, output='empty', output_shape=None, shape=(10, 20), theta=180}] _

self = <<cupyx_tests.scipy_tests.ndimage_tests.test_interpolation.TestAffineTransformTextureMemory object at 0x7fab3790d7f0>  parameter: {'mode': 'constant', 'order': 1, 'output': 'empty', 'output_shape': None, 'shape': (10, 20), 'theta': 180}>
xp = <module 'cupy' from '/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.hXnTrEAC7u/cupy/cupy/__init__.py'>
scp = <module 'cupyx.scipy' from '/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.hXnTrEAC7u/cupy/cupyx/scipy/__init__.py'>

    @testing.numpy_cupy_allclose(atol=0.1, scipy_name='scp')
    def test_affine_transform_texture_memory(self, xp, scp):
        a = xp.ones(self.shape, dtype=xp.float32)
        center = numpy.divide(numpy.subtract(self.shape, 1), 2)
    
        if len(self.shape) == 2:
            matrix = self._2d_rotation_matrix(self.theta, center)
        elif len(self.shape) == 3:
            matrix = self._3d_rotation_matrix(self.theta, center)
        else:
            return pytest.xfail('Unsupported shape')
    
        if self.output == 'empty':
            output = xp.empty(self.shape, dtype=xp.float32)
            if self.output_shape:
                return pytest.skip('This combination is tested in '
                                   'test_invalid_texture_arguments')
        else:
            output = self.output
    
        if self.output_shape:
            output_shape = (self.output_shape, ) * len(self.shape)
        else:
            output_shape = self.output_shape
    
        if xp == cupy:
            m = cupyx.scipy.ndimage.affine_transform
            matrix = cupy.array(matrix)
>           return m(a, matrix, output_shape=output_shape,
                     output=output, order=self.order,
                     mode=self.mode, texture_memory=True)

tests/cupyx_tests/scipy_tests/ndimage_tests/test_interpolation.py:398: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
cupyx/scipy/ndimage/interpolation.py:376: in affine_transform
    return _texture.affine_transformation(data=input,
cupyx/_texture.py:168: in affine_transformation
    texture_object = _create_texture_object(data,
cupyx/_texture.py:98: in _create_texture_object
    array = texture.CUDAarray(texture_fmt, *data.shape[::-1])
cupy/cuda/texture.pyx:296: in cupy.cuda.texture.CUDAarray.__init__
    self.ptr = runtime.malloc3DArray(desc.ptr, width, height, depth,
cupy_backends/cuda/api/runtime.pyx:593: in cupy_backends.cuda.api.runtime.malloc3DArray
    check_status(status)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

>   raise CUDARuntimeError(status)
E   AssertionError: Only cupy raises error
E   
E   Traceback (most recent call last):
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.hXnTrEAC7u/cupy/cupy/testing/_helper.py", line 47, in _call_func
E       result = impl(self, *args, **kw)
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.hXnTrEAC7u/cupy/tests/cupyx_tests/scipy_tests/ndimage_tests/test_interpolation.py", line 398, in test_affine_transform_texture_memory
E       return m(a, matrix, output_shape=output_shape,
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.hXnTrEAC7u/cupy/cupyx/scipy/ndimage/interpolation.py", line 376, in affine_transform
E       return _texture.affine_transformation(data=input,
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.hXnTrEAC7u/cupy/cupyx/_texture.py", line 168, in affine_transformation
E       texture_object = _create_texture_object(data,
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.hXnTrEAC7u/cupy/cupyx/_texture.py", line 98, in _create_texture_object
E       array = texture.CUDAarray(texture_fmt, *data.shape[::-1])
E     File "cupy/cuda/texture.pyx", line 296, in cupy.cuda.texture.CUDAarray.__init__
E       self.ptr = runtime.malloc3DArray(desc.ptr, width, height, depth,
E     File "cupy_backends/cuda/api/runtime.pyx", line 593, in cupy_backends.cuda.api.runtime.malloc3DArray
E       check_status(status)
E     File "cupy_backends/cuda/api/runtime.pyx", line 265, in cupy_backends.cuda.api.runtime.check_status
E       raise CUDARuntimeError(status)
E   cupy_backends.cuda.api.runtime.CUDARuntimeError: hipErrorUnknown: hipErrorUnknown

cupy_backends/cuda/api/runtime.pyx:265: AssertionError
----------------------------- Captured stderr call -----------------------------
Traceback (most recent call last):
  File "cupy_backends/cuda/api/runtime.pyx", line 644, in cupy_backends.cuda.api.runtime.freeArray
    check_status(status)
  File "cupy_backends/cuda/api/runtime.pyx", line 265, in cupy_backends.cuda.api.runtime.check_status
    raise CUDARuntimeError(status)
cupy_backends.cuda.api.runtime.CUDARuntimeError: hipErrorUnknown: hipErrorUnknown
_ TestAffineTransformTextureMemory.test_affine_transform_texture_memory[_param_167_{mode='constant', order=1, output='empty', output_shape=None, shape=(10, 20), theta=270}] _

self = <<cupyx_tests.scipy_tests.ndimage_tests.test_interpolation.TestAffineTransformTextureMemory object at 0x7fab39d781f0>  parameter: {'mode': 'constant', 'order': 1, 'output': 'empty', 'output_shape': None, 'shape': (10, 20), 'theta': 270}>
xp = <module 'cupy' from '/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.hXnTrEAC7u/cupy/cupy/__init__.py'>
scp = <module 'cupyx.scipy' from '/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.hXnTrEAC7u/cupy/cupyx/scipy/__init__.py'>

    @testing.numpy_cupy_allclose(atol=0.1, scipy_name='scp')
    def test_affine_transform_texture_memory(self, xp, scp):
        a = xp.ones(self.shape, dtype=xp.float32)
        center = numpy.divide(numpy.subtract(self.shape, 1), 2)
    
        if len(self.shape) == 2:
            matrix = self._2d_rotation_matrix(self.theta, center)
        elif len(self.shape) == 3:
            matrix = self._3d_rotation_matrix(self.theta, center)
        else:
            return pytest.xfail('Unsupported shape')
    
        if self.output == 'empty':
            output = xp.empty(self.shape, dtype=xp.float32)
            if self.output_shape:
                return pytest.skip('This combination is tested in '
                                   'test_invalid_texture_arguments')
        else:
            output = self.output
    
        if self.output_shape:
            output_shape = (self.output_shape, ) * len(self.shape)
        else:
            output_shape = self.output_shape
    
        if xp == cupy:
            m = cupyx.scipy.ndimage.affine_transform
            matrix = cupy.array(matrix)
>           return m(a, matrix, output_shape=output_shape,
                     output=output, order=self.order,
                     mode=self.mode, texture_memory=True)

tests/cupyx_tests/scipy_tests/ndimage_tests/test_interpolation.py:398: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
cupyx/scipy/ndimage/interpolation.py:376: in affine_transform
    return _texture.affine_transformation(data=input,
cupyx/_texture.py:168: in affine_transformation
    texture_object = _create_texture_object(data,
cupyx/_texture.py:98: in _create_texture_object
    array = texture.CUDAarray(texture_fmt, *data.shape[::-1])
cupy/cuda/texture.pyx:296: in cupy.cuda.texture.CUDAarray.__init__
    self.ptr = runtime.malloc3DArray(desc.ptr, width, height, depth,
cupy_backends/cuda/api/runtime.pyx:593: in cupy_backends.cuda.api.runtime.malloc3DArray
    check_status(status)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

>   raise CUDARuntimeError(status)
E   AssertionError: Only cupy raises error
E   
E   Traceback (most recent call last):
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.hXnTrEAC7u/cupy/cupy/testing/_helper.py", line 47, in _call_func
E       result = impl(self, *args, **kw)
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.hXnTrEAC7u/cupy/tests/cupyx_tests/scipy_tests/ndimage_tests/test_interpolation.py", line 398, in test_affine_transform_texture_memory
E       return m(a, matrix, output_shape=output_shape,
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.hXnTrEAC7u/cupy/cupyx/scipy/ndimage/interpolation.py", line 376, in affine_transform
E       return _texture.affine_transformation(data=input,
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.hXnTrEAC7u/cupy/cupyx/_texture.py", line 168, in affine_transformation
E       texture_object = _create_texture_object(data,
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.hXnTrEAC7u/cupy/cupyx/_texture.py", line 98, in _create_texture_object
E       array = texture.CUDAarray(texture_fmt, *data.shape[::-1])
E     File "cupy/cuda/texture.pyx", line 296, in cupy.cuda.texture.CUDAarray.__init__
E       self.ptr = runtime.malloc3DArray(desc.ptr, width, height, depth,
E     File "cupy_backends/cuda/api/runtime.pyx", line 593, in cupy_backends.cuda.api.runtime.malloc3DArray
E       check_status(status)
E     File "cupy_backends/cuda/api/runtime.pyx", line 265, in cupy_backends.cuda.api.runtime.check_status
E       raise CUDARuntimeError(status)
E   cupy_backends.cuda.api.runtime.CUDARuntimeError: hipErrorUnknown: hipErrorUnknown

cupy_backends/cuda/api/runtime.pyx:265: AssertionError
----------------------------- Captured stderr call -----------------------------
Traceback (most recent call last):
  File "cupy_backends/cuda/api/runtime.pyx", line 644, in cupy_backends.cuda.api.runtime.freeArray
    check_status(status)
  File "cupy_backends/cuda/api/runtime.pyx", line 265, in cupy_backends.cuda.api.runtime.check_status
    raise CUDARuntimeError(status)
cupy_backends.cuda.api.runtime.CUDARuntimeError: hipErrorUnknown: hipErrorUnknown
_ TestAffineTransformTextureMemory.test_affine_transform_texture_memory[_param_168_{mode='constant', order=1, output='empty', output_shape=None, shape=(10, 10, 10), theta=0}] _

self = <<cupyx_tests.scipy_tests.ndimage_tests.test_interpolation.TestAffineTransformTextureMemory object at 0x7fab37e209a0>  parameter: {'mode': 'constant', 'order': 1, 'output': 'empty', 'output_shape': None, 'shape': (10, 10, 10), 'theta': 0}>
xp = <module 'cupy' from '/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.hXnTrEAC7u/cupy/cupy/__init__.py'>
scp = <module 'cupyx.scipy' from '/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.hXnTrEAC7u/cupy/cupyx/scipy/__init__.py'>

    @testing.numpy_cupy_allclose(atol=0.1, scipy_name='scp')
    def test_affine_transform_texture_memory(self, xp, scp):
        a = xp.ones(self.shape, dtype=xp.float32)
        center = numpy.divide(numpy.subtract(self.shape, 1), 2)
    
        if len(self.shape) == 2:
            matrix = self._2d_rotation_matrix(self.theta, center)
        elif len(self.shape) == 3:
            matrix = self._3d_rotation_matrix(self.theta, center)
        else:
            return pytest.xfail('Unsupported shape')
    
        if self.output == 'empty':
            output = xp.empty(self.shape, dtype=xp.float32)
            if self.output_shape:
                return pytest.skip('This combination is tested in '
                                   'test_invalid_texture_arguments')
        else:
            output = self.output
    
        if self.output_shape:
            output_shape = (self.output_shape, ) * len(self.shape)
        else:
            output_shape = self.output_shape
    
        if xp == cupy:
            m = cupyx.scipy.ndimage.affine_transform
            matrix = cupy.array(matrix)
>           return m(a, matrix, output_shape=output_shape,
                     output=output, order=self.order,
                     mode=self.mode, texture_memory=True)

tests/cupyx_tests/scipy_tests/ndimage_tests/test_interpolation.py:398: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
cupyx/scipy/ndimage/interpolation.py:376: in affine_transform
    return _texture.affine_transformation(data=input,
cupyx/_texture.py:168: in affine_transformation
    texture_object = _create_texture_object(data,
cupyx/_texture.py:98: in _create_texture_object
    array = texture.CUDAarray(texture_fmt, *data.shape[::-1])
cupy/cuda/texture.pyx:296: in cupy.cuda.texture.CUDAarray.__init__
    self.ptr = runtime.malloc3DArray(desc.ptr, width, height, depth,
cupy_backends/cuda/api/runtime.pyx:593: in cupy_backends.cuda.api.runtime.malloc3DArray
    check_status(status)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

>   raise CUDARuntimeError(status)
E   AssertionError: Only cupy raises error
E   
E   Traceback (most recent call last):
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.hXnTrEAC7u/cupy/cupy/testing/_helper.py", line 47, in _call_func
E       result = impl(self, *args, **kw)
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.hXnTrEAC7u/cupy/tests/cupyx_tests/scipy_tests/ndimage_tests/test_interpolation.py", line 398, in test_affine_transform_texture_memory
E       return m(a, matrix, output_shape=output_shape,
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.hXnTrEAC7u/cupy/cupyx/scipy/ndimage/interpolation.py", line 376, in affine_transform
E       return _texture.affine_transformation(data=input,
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.hXnTrEAC7u/cupy/cupyx/_texture.py", line 168, in affine_transformation
E       texture_object = _create_texture_object(data,
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.hXnTrEAC7u/cupy/cupyx/_texture.py", line 98, in _create_texture_object
E       array = texture.CUDAarray(texture_fmt, *data.shape[::-1])
E     File "cupy/cuda/texture.pyx", line 296, in cupy.cuda.texture.CUDAarray.__init__
E       self.ptr = runtime.malloc3DArray(desc.ptr, width, height, depth,
E     File "cupy_backends/cuda/api/runtime.pyx", line 593, in cupy_backends.cuda.api.runtime.malloc3DArray
E       check_status(status)
E     File "cupy_backends/cuda/api/runtime.pyx", line 265, in cupy_backends.cuda.api.runtime.check_status
E       raise CUDARuntimeError(status)
E   cupy_backends.cuda.api.runtime.CUDARuntimeError: hipErrorUnknown: hipErrorUnknown

cupy_backends/cuda/api/runtime.pyx:265: AssertionError
----------------------------- Captured stderr call -----------------------------
Traceback (most recent call last):
  File "cupy_backends/cuda/api/runtime.pyx", line 644, in cupy_backends.cuda.api.runtime.freeArray
    check_status(status)
  File "cupy_backends/cuda/api/runtime.pyx", line 265, in cupy_backends.cuda.api.runtime.check_status
    raise CUDARuntimeError(status)
cupy_backends.cuda.api.runtime.CUDARuntimeError: hipErrorUnknown: hipErrorUnknown
_ TestAffineTransformTextureMemory.test_affine_transform_texture_memory[_param_169_{mode='constant', order=1, output='empty', output_shape=None, shape=(10, 10, 10), theta=90}] _

self = <<cupyx_tests.scipy_tests.ndimage_tests.test_interpolation.TestAffineTransformTextureMemory object at 0x7fab3715d940>  parameter: {'mode': 'constant', 'order': 1, 'output': 'empty', 'output_shape': None, 'shape': (10, 10, 10), 'theta': 90}>
xp = <module 'cupy' from '/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.hXnTrEAC7u/cupy/cupy/__init__.py'>
scp = <module 'cupyx.scipy' from '/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.hXnTrEAC7u/cupy/cupyx/scipy/__init__.py'>

    @testing.numpy_cupy_allclose(atol=0.1, scipy_name='scp')
    def test_affine_transform_texture_memory(self, xp, scp):
        a = xp.ones(self.shape, dtype=xp.float32)
        center = numpy.divide(numpy.subtract(self.shape, 1), 2)
    
        if len(self.shape) == 2:
            matrix = self._2d_rotation_matrix(self.theta, center)
        elif len(self.shape) == 3:
            matrix = self._3d_rotation_matrix(self.theta, center)
        else:
            return pytest.xfail('Unsupported shape')
    
        if self.output == 'empty':
            output = xp.empty(self.shape, dtype=xp.float32)
            if self.output_shape:
                return pytest.skip('This combination is tested in '
                                   'test_invalid_texture_arguments')
        else:
            output = self.output
    
        if self.output_shape:
            output_shape = (self.output_shape, ) * len(self.shape)
        else:
            output_shape = self.output_shape
    
        if xp == cupy:
            m = cupyx.scipy.ndimage.affine_transform
            matrix = cupy.array(matrix)
>           return m(a, matrix, output_shape=output_shape,
                     output=output, order=self.order,
                     mode=self.mode, texture_memory=True)

tests/cupyx_tests/scipy_tests/ndimage_tests/test_interpolation.py:398: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
cupyx/scipy/ndimage/interpolation.py:376: in affine_transform
    return _texture.affine_transformation(data=input,
cupyx/_texture.py:168: in affine_transformation
    texture_object = _create_texture_object(data,
cupyx/_texture.py:98: in _create_texture_object
    array = texture.CUDAarray(texture_fmt, *data.shape[::-1])
cupy/cuda/texture.pyx:296: in cupy.cuda.texture.CUDAarray.__init__
    self.ptr = runtime.malloc3DArray(desc.ptr, width, height, depth,
cupy_backends/cuda/api/runtime.pyx:593: in cupy_backends.cuda.api.runtime.malloc3DArray
    check_status(status)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

>   raise CUDARuntimeError(status)
E   AssertionError: Only cupy raises error
E   
E   Traceback (most recent call last):
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.hXnTrEAC7u/cupy/cupy/testing/_helper.py", line 47, in _call_func
E       result = impl(self, *args, **kw)
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.hXnTrEAC7u/cupy/tests/cupyx_tests/scipy_tests/ndimage_tests/test_interpolation.py", line 398, in test_affine_transform_texture_memory
E       return m(a, matrix, output_shape=output_shape,
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.hXnTrEAC7u/cupy/cupyx/scipy/ndimage/interpolation.py", line 376, in affine_transform
E       return _texture.affine_transformation(data=input,
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.hXnTrEAC7u/cupy/cupyx/_texture.py", line 168, in affine_transformation
E       texture_object = _create_texture_object(data,
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.hXnTrEAC7u/cupy/cupyx/_texture.py", line 98, in _create_texture_object
E       array = texture.CUDAarray(texture_fmt, *data.shape[::-1])
E     File "cupy/cuda/texture.pyx", line 296, in cupy.cuda.texture.CUDAarray.__init__
E       self.ptr = runtime.malloc3DArray(desc.ptr, width, height, depth,
E     File "cupy_backends/cuda/api/runtime.pyx", line 593, in cupy_backends.cuda.api.runtime.malloc3DArray
E       check_status(status)
E     File "cupy_backends/cuda/api/runtime.pyx", line 265, in cupy_backends.cuda.api.runtime.check_status
E       raise CUDARuntimeError(status)
E   cupy_backends.cuda.api.runtime.CUDARuntimeError: hipErrorUnknown: hipErrorUnknown

cupy_backends/cuda/api/runtime.pyx:265: AssertionError
----------------------------- Captured stderr call -----------------------------
Traceback (most recent call last):
  File "cupy_backends/cuda/api/runtime.pyx", line 644, in cupy_backends.cuda.api.runtime.freeArray
    check_status(status)
  File "cupy_backends/cuda/api/runtime.pyx", line 265, in cupy_backends.cuda.api.runtime.check_status
    raise CUDARuntimeError(status)
cupy_backends.cuda.api.runtime.CUDARuntimeError: hipErrorUnknown: hipErrorUnknown
_ TestAffineTransformTextureMemory.test_affine_transform_texture_memory[_param_170_{mode='constant', order=1, output='empty', output_shape=None, shape=(10, 10, 10), theta=180}] _

self = <<cupyx_tests.scipy_tests.ndimage_tests.test_interpolation.TestAffineTransformTextureMemory object at 0x7fab3879fcd0> ...ameter: {'mode': 'constant', 'order': 1, 'output': 'empty', 'output_shape': None, 'shape': (10, 10, 10), 'theta': 180}>
xp = <module 'cupy' from '/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.hXnTrEAC7u/cupy/cupy/__init__.py'>
scp = <module 'cupyx.scipy' from '/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.hXnTrEAC7u/cupy/cupyx/scipy/__init__.py'>

    @testing.numpy_cupy_allclose(atol=0.1, scipy_name='scp')
    def test_affine_transform_texture_memory(self, xp, scp):
        a = xp.ones(self.shape, dtype=xp.float32)
        center = numpy.divide(numpy.subtract(self.shape, 1), 2)
    
        if len(self.shape) == 2:
            matrix = self._2d_rotation_matrix(self.theta, center)
        elif len(self.shape) == 3:
            matrix = self._3d_rotation_matrix(self.theta, center)
        else:
            return pytest.xfail('Unsupported shape')
    
        if self.output == 'empty':
            output = xp.empty(self.shape, dtype=xp.float32)
            if self.output_shape:
                return pytest.skip('This combination is tested in '
                                   'test_invalid_texture_arguments')
        else:
            output = self.output
    
        if self.output_shape:
            output_shape = (self.output_shape, ) * len(self.shape)
        else:
            output_shape = self.output_shape
    
        if xp == cupy:
            m = cupyx.scipy.ndimage.affine_transform
            matrix = cupy.array(matrix)
>           return m(a, matrix, output_shape=output_shape,
                     output=output, order=self.order,
                     mode=self.mode, texture_memory=True)

tests/cupyx_tests/scipy_tests/ndimage_tests/test_interpolation.py:398: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
cupyx/scipy/ndimage/interpolation.py:376: in affine_transform
    return _texture.affine_transformation(data=input,
cupyx/_texture.py:168: in affine_transformation
    texture_object = _create_texture_object(data,
cupyx/_texture.py:98: in _create_texture_object
    array = texture.CUDAarray(texture_fmt, *data.shape[::-1])
cupy/cuda/texture.pyx:296: in cupy.cuda.texture.CUDAarray.__init__
    self.ptr = runtime.malloc3DArray(desc.ptr, width, height, depth,
cupy_backends/cuda/api/runtime.pyx:593: in cupy_backends.cuda.api.runtime.malloc3DArray
    check_status(status)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

>   raise CUDARuntimeError(status)
E   AssertionError: Only cupy raises error
E   
E   Traceback (most recent call last):
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.hXnTrEAC7u/cupy/cupy/testing/_helper.py", line 47, in _call_func
E       result = impl(self, *args, **kw)
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.hXnTrEAC7u/cupy/tests/cupyx_tests/scipy_tests/ndimage_tests/test_interpolation.py", line 398, in test_affine_transform_texture_memory
E       return m(a, matrix, output_shape=output_shape,
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.hXnTrEAC7u/cupy/cupyx/scipy/ndimage/interpolation.py", line 376, in affine_transform
E       return _texture.affine_transformation(data=input,
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.hXnTrEAC7u/cupy/cupyx/_texture.py", line 168, in affine_transformation
E       texture_object = _create_texture_object(data,
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.hXnTrEAC7u/cupy/cupyx/_texture.py", line 98, in _create_texture_object
E       array = texture.CUDAarray(texture_fmt, *data.shape[::-1])
E     File "cupy/cuda/texture.pyx", line 296, in cupy.cuda.texture.CUDAarray.__init__
E       self.ptr = runtime.malloc3DArray(desc.ptr, width, height, depth,
E     File "cupy_backends/cuda/api/runtime.pyx", line 593, in cupy_backends.cuda.api.runtime.malloc3DArray
E       check_status(status)
E     File "cupy_backends/cuda/api/runtime.pyx", line 265, in cupy_backends.cuda.api.runtime.check_status
E       raise CUDARuntimeError(status)
E   cupy_backends.cuda.api.runtime.CUDARuntimeError: hipErrorUnknown: hipErrorUnknown

cupy_backends/cuda/api/runtime.pyx:265: AssertionError
----------------------------- Captured stderr call -----------------------------
Traceback (most recent call last):
  File "cupy_backends/cuda/api/runtime.pyx", line 644, in cupy_backends.cuda.api.runtime.freeArray
    check_status(status)
  File "cupy_backends/cuda/api/runtime.pyx", line 265, in cupy_backends.cuda.api.runtime.check_status
    raise CUDARuntimeError(status)
cupy_backends.cuda.api.runtime.CUDARuntimeError: hipErrorUnknown: hipErrorUnknown
_ TestAffineTransformTextureMemory.test_affine_transform_texture_memory[_param_171_{mode='constant', order=1, output='empty', output_shape=None, shape=(10, 10, 10), theta=270}] _

self = <<cupyx_tests.scipy_tests.ndimage_tests.test_interpolation.TestAffineTransformTextureMemory object at 0x7fab36f10f10> ...ameter: {'mode': 'constant', 'order': 1, 'output': 'empty', 'output_shape': None, 'shape': (10, 10, 10), 'theta': 270}>
xp = <module 'cupy' from '/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.hXnTrEAC7u/cupy/cupy/__init__.py'>
scp = <module 'cupyx.scipy' from '/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.hXnTrEAC7u/cupy/cupyx/scipy/__init__.py'>

    @testing.numpy_cupy_allclose(atol=0.1, scipy_name='scp')
    def test_affine_transform_texture_memory(self, xp, scp):
        a = xp.ones(self.shape, dtype=xp.float32)
        center = numpy.divide(numpy.subtract(self.shape, 1), 2)
    
        if len(self.shape) == 2:
            matrix = self._2d_rotation_matrix(self.theta, center)
        elif len(self.shape) == 3:
            matrix = self._3d_rotation_matrix(self.theta, center)
        else:
            return pytest.xfail('Unsupported shape')
    
        if self.output == 'empty':
            output = xp.empty(self.shape, dtype=xp.float32)
            if self.output_shape:
                return pytest.skip('This combination is tested in '
                                   'test_invalid_texture_arguments')
        else:
            output = self.output
    
        if self.output_shape:
            output_shape = (self.output_shape, ) * len(self.shape)
        else:
            output_shape = self.output_shape
    
        if xp == cupy:
            m = cupyx.scipy.ndimage.affine_transform
            matrix = cupy.array(matrix)
>           return m(a, matrix, output_shape=output_shape,
                     output=output, order=self.order,
                     mode=self.mode, texture_memory=True)

tests/cupyx_tests/scipy_tests/ndimage_tests/test_interpolation.py:398: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
cupyx/scipy/ndimage/interpolation.py:376: in affine_transform
    return _texture.affine_transformation(data=input,
cupyx/_texture.py:168: in affine_transformation
    texture_object = _create_texture_object(data,
cupyx/_texture.py:98: in _create_texture_object
    array = texture.CUDAarray(texture_fmt, *data.shape[::-1])
cupy/cuda/texture.pyx:296: in cupy.cuda.texture.CUDAarray.__init__
    self.ptr = runtime.malloc3DArray(desc.ptr, width, height, depth,
cupy_backends/cuda/api/runtime.pyx:593: in cupy_backends.cuda.api.runtime.malloc3DArray
    check_status(status)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

>   raise CUDARuntimeError(status)
E   AssertionError: Only cupy raises error
E   
E   Traceback (most recent call last):
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.hXnTrEAC7u/cupy/cupy/testing/_helper.py", line 47, in _call_func
E       result = impl(self, *args, **kw)
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.hXnTrEAC7u/cupy/tests/cupyx_tests/scipy_tests/ndimage_tests/test_interpolation.py", line 398, in test_affine_transform_texture_memory
E       return m(a, matrix, output_shape=output_shape,
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.hXnTrEAC7u/cupy/cupyx/scipy/ndimage/interpolation.py", line 376, in affine_transform
E       return _texture.affine_transformation(data=input,
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.hXnTrEAC7u/cupy/cupyx/_texture.py", line 168, in affine_transformation
E       texture_object = _create_texture_object(data,
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.hXnTrEAC7u/cupy/cupyx/_texture.py", line 98, in _create_texture_object
E       array = texture.CUDAarray(texture_fmt, *data.shape[::-1])
E     File "cupy/cuda/texture.pyx", line 296, in cupy.cuda.texture.CUDAarray.__init__
E       self.ptr = runtime.malloc3DArray(desc.ptr, width, height, depth,
E     File "cupy_backends/cuda/api/runtime.pyx", line 593, in cupy_backends.cuda.api.runtime.malloc3DArray
E       check_status(status)
E     File "cupy_backends/cuda/api/runtime.pyx", line 265, in cupy_backends.cuda.api.runtime.check_status
E       raise CUDARuntimeError(status)
E   cupy_backends.cuda.api.runtime.CUDARuntimeError: hipErrorUnknown: hipErrorUnknown

cupy_backends/cuda/api/runtime.pyx:265: AssertionError
----------------------------- Captured stderr call -----------------------------
Traceback (most recent call last):
  File "cupy_backends/cuda/api/runtime.pyx", line 644, in cupy_backends.cuda.api.runtime.freeArray
    check_status(status)
  File "cupy_backends/cuda/api/runtime.pyx", line 265, in cupy_backends.cuda.api.runtime.check_status
    raise CUDARuntimeError(status)
cupy_backends.cuda.api.runtime.CUDARuntimeError: hipErrorUnknown: hipErrorUnknown
_ TestAffineTransformTextureMemory.test_affine_transform_texture_memory[_param_172_{mode='constant', order=1, output='empty', output_shape=None, shape=(10, 20, 30), theta=0}] _

self = <<cupyx_tests.scipy_tests.ndimage_tests.test_interpolation.TestAffineTransformTextureMemory object at 0x7fab37084ac0>  parameter: {'mode': 'constant', 'order': 1, 'output': 'empty', 'output_shape': None, 'shape': (10, 20, 30), 'theta': 0}>
xp = <module 'cupy' from '/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.hXnTrEAC7u/cupy/cupy/__init__.py'>
scp = <module 'cupyx.scipy' from '/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.hXnTrEAC7u/cupy/cupyx/scipy/__init__.py'>

    @testing.numpy_cupy_allclose(atol=0.1, scipy_name='scp')
    def test_affine_transform_texture_memory(self, xp, scp):
        a = xp.ones(self.shape, dtype=xp.float32)
        center = numpy.divide(numpy.subtract(self.shape, 1), 2)
    
        if len(self.shape) == 2:
            matrix = self._2d_rotation_matrix(self.theta, center)
        elif len(self.shape) == 3:
            matrix = self._3d_rotation_matrix(self.theta, center)
        else:
            return pytest.xfail('Unsupported shape')
    
        if self.output == 'empty':
            output = xp.empty(self.shape, dtype=xp.float32)
            if self.output_shape:
                return pytest.skip('This combination is tested in '
                                   'test_invalid_texture_arguments')
        else:
            output = self.output
    
        if self.output_shape:
            output_shape = (self.output_shape, ) * len(self.shape)
        else:
            output_shape = self.output_shape
    
        if xp == cupy:
            m = cupyx.scipy.ndimage.affine_transform
            matrix = cupy.array(matrix)
>           return m(a, matrix, output_shape=output_shape,
                     output=output, order=self.order,
                     mode=self.mode, texture_memory=True)

tests/cupyx_tests/scipy_tests/ndimage_tests/test_interpolation.py:398: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
cupyx/scipy/ndimage/interpolation.py:376: in affine_transform
    return _texture.affine_transformation(data=input,
cupyx/_texture.py:168: in affine_transformation
    texture_object = _create_texture_object(data,
cupyx/_texture.py:98: in _create_texture_object
    array = texture.CUDAarray(texture_fmt, *data.shape[::-1])
cupy/cuda/texture.pyx:296: in cupy.cuda.texture.CUDAarray.__init__
    self.ptr = runtime.malloc3DArray(desc.ptr, width, height, depth,
cupy_backends/cuda/api/runtime.pyx:593: in cupy_backends.cuda.api.runtime.malloc3DArray
    check_status(status)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

>   raise CUDARuntimeError(status)
E   AssertionError: Only cupy raises error
E   
E   Traceback (most recent call last):
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.hXnTrEAC7u/cupy/cupy/testing/_helper.py", line 47, in _call_func
E       result = impl(self, *args, **kw)
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.hXnTrEAC7u/cupy/tests/cupyx_tests/scipy_tests/ndimage_tests/test_interpolation.py", line 398, in test_affine_transform_texture_memory
E       return m(a, matrix, output_shape=output_shape,
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.hXnTrEAC7u/cupy/cupyx/scipy/ndimage/interpolation.py", line 376, in affine_transform
E       return _texture.affine_transformation(data=input,
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.hXnTrEAC7u/cupy/cupyx/_texture.py", line 168, in affine_transformation
E       texture_object = _create_texture_object(data,
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.hXnTrEAC7u/cupy/cupyx/_texture.py", line 98, in _create_texture_object
E       array = texture.CUDAarray(texture_fmt, *data.shape[::-1])
E     File "cupy/cuda/texture.pyx", line 296, in cupy.cuda.texture.CUDAarray.__init__
E       self.ptr = runtime.malloc3DArray(desc.ptr, width, height, depth,
E     File "cupy_backends/cuda/api/runtime.pyx", line 593, in cupy_backends.cuda.api.runtime.malloc3DArray
E       check_status(status)
E     File "cupy_backends/cuda/api/runtime.pyx", line 265, in cupy_backends.cuda.api.runtime.check_status
E       raise CUDARuntimeError(status)
E   cupy_backends.cuda.api.runtime.CUDARuntimeError: hipErrorUnknown: hipErrorUnknown

cupy_backends/cuda/api/runtime.pyx:265: AssertionError
----------------------------- Captured stderr call -----------------------------
Traceback (most recent call last):
  File "cupy_backends/cuda/api/runtime.pyx", line 644, in cupy_backends.cuda.api.runtime.freeArray
    check_status(status)
  File "cupy_backends/cuda/api/runtime.pyx", line 265, in cupy_backends.cuda.api.runtime.check_status
    raise CUDARuntimeError(status)
cupy_backends.cuda.api.runtime.CUDARuntimeError: hipErrorUnknown: hipErrorUnknown
_ TestAffineTransformTextureMemory.test_affine_transform_texture_memory[_param_173_{mode='constant', order=1, output='empty', output_shape=None, shape=(10, 20, 30), theta=90}] _

self = <<cupyx_tests.scipy_tests.ndimage_tests.test_interpolation.TestAffineTransformTextureMemory object at 0x7fab38f45400>  parameter: {'mode': 'constant', 'order': 1, 'output': 'empty', 'output_shape': None, 'shape': (10, 20, 30), 'theta': 90}>
xp = <module 'cupy' from '/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.hXnTrEAC7u/cupy/cupy/__init__.py'>
scp = <module 'cupyx.scipy' from '/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.hXnTrEAC7u/cupy/cupyx/scipy/__init__.py'>

    @testing.numpy_cupy_allclose(atol=0.1, scipy_name='scp')
    def test_affine_transform_texture_memory(self, xp, scp):
        a = xp.ones(self.shape, dtype=xp.float32)
        center = numpy.divide(numpy.subtract(self.shape, 1), 2)
    
        if len(self.shape) == 2:
            matrix = self._2d_rotation_matrix(self.theta, center)
        elif len(self.shape) == 3:
            matrix = self._3d_rotation_matrix(self.theta, center)
        else:
            return pytest.xfail('Unsupported shape')
    
        if self.output == 'empty':
            output = xp.empty(self.shape, dtype=xp.float32)
            if self.output_shape:
                return pytest.skip('This combination is tested in '
                                   'test_invalid_texture_arguments')
        else:
            output = self.output
    
        if self.output_shape:
            output_shape = (self.output_shape, ) * len(self.shape)
        else:
            output_shape = self.output_shape
    
        if xp == cupy:
            m = cupyx.scipy.ndimage.affine_transform
            matrix = cupy.array(matrix)
>           return m(a, matrix, output_shape=output_shape,
                     output=output, order=self.order,
                     mode=self.mode, texture_memory=True)

tests/cupyx_tests/scipy_tests/ndimage_tests/test_interpolation.py:398: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
cupyx/scipy/ndimage/interpolation.py:376: in affine_transform
    return _texture.affine_transformation(data=input,
cupyx/_texture.py:168: in affine_transformation
    texture_object = _create_texture_object(data,
cupyx/_texture.py:98: in _create_texture_object
    array = texture.CUDAarray(texture_fmt, *data.shape[::-1])
cupy/cuda/texture.pyx:296: in cupy.cuda.texture.CUDAarray.__init__
    self.ptr = runtime.malloc3DArray(desc.ptr, width, height, depth,
cupy_backends/cuda/api/runtime.pyx:593: in cupy_backends.cuda.api.runtime.malloc3DArray
    check_status(status)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

>   raise CUDARuntimeError(status)
E   AssertionError: Only cupy raises error
E   
E   Traceback (most recent call last):
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.hXnTrEAC7u/cupy/cupy/testing/_helper.py", line 47, in _call_func
E       result = impl(self, *args, **kw)
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.hXnTrEAC7u/cupy/tests/cupyx_tests/scipy_tests/ndimage_tests/test_interpolation.py", line 398, in test_affine_transform_texture_memory
E       return m(a, matrix, output_shape=output_shape,
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.hXnTrEAC7u/cupy/cupyx/scipy/ndimage/interpolation.py", line 376, in affine_transform
E       return _texture.affine_transformation(data=input,
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.hXnTrEAC7u/cupy/cupyx/_texture.py", line 168, in affine_transformation
E       texture_object = _create_texture_object(data,
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.hXnTrEAC7u/cupy/cupyx/_texture.py", line 98, in _create_texture_object
E       array = texture.CUDAarray(texture_fmt, *data.shape[::-1])
E     File "cupy/cuda/texture.pyx", line 296, in cupy.cuda.texture.CUDAarray.__init__
E       self.ptr = runtime.malloc3DArray(desc.ptr, width, height, depth,
E     File "cupy_backends/cuda/api/runtime.pyx", line 593, in cupy_backends.cuda.api.runtime.malloc3DArray
E       check_status(status)
E     File "cupy_backends/cuda/api/runtime.pyx", line 265, in cupy_backends.cuda.api.runtime.check_status
E       raise CUDARuntimeError(status)
E   cupy_backends.cuda.api.runtime.CUDARuntimeError: hipErrorUnknown: hipErrorUnknown

cupy_backends/cuda/api/runtime.pyx:265: AssertionError
----------------------------- Captured stderr call -----------------------------
Traceback (most recent call last):
  File "cupy_backends/cuda/api/runtime.pyx", line 644, in cupy_backends.cuda.api.runtime.freeArray
    check_status(status)
  File "cupy_backends/cuda/api/runtime.pyx", line 265, in cupy_backends.cuda.api.runtime.check_status
    raise CUDARuntimeError(status)
cupy_backends.cuda.api.runtime.CUDARuntimeError: hipErrorUnknown: hipErrorUnknown
_ TestAffineTransformTextureMemory.test_affine_transform_texture_memory[_param_174_{mode='constant', order=1, output='empty', output_shape=None, shape=(10, 20, 30), theta=180}] _

self = <<cupyx_tests.scipy_tests.ndimage_tests.test_interpolation.TestAffineTransformTextureMemory object at 0x7fab38ebe5e0> ...ameter: {'mode': 'constant', 'order': 1, 'output': 'empty', 'output_shape': None, 'shape': (10, 20, 30), 'theta': 180}>
xp = <module 'cupy' from '/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.hXnTrEAC7u/cupy/cupy/__init__.py'>
scp = <module 'cupyx.scipy' from '/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.hXnTrEAC7u/cupy/cupyx/scipy/__init__.py'>

    @testing.numpy_cupy_allclose(atol=0.1, scipy_name='scp')
    def test_affine_transform_texture_memory(self, xp, scp):
        a = xp.ones(self.shape, dtype=xp.float32)
        center = numpy.divide(numpy.subtract(self.shape, 1), 2)
    
        if len(self.shape) == 2:
            matrix = self._2d_rotation_matrix(self.theta, center)
        elif len(self.shape) == 3:
            matrix = self._3d_rotation_matrix(self.theta, center)
        else:
            return pytest.xfail('Unsupported shape')
    
        if self.output == 'empty':
            output = xp.empty(self.shape, dtype=xp.float32)
            if self.output_shape:
                return pytest.skip('This combination is tested in '
                                   'test_invalid_texture_arguments')
        else:
            output = self.output
    
        if self.output_shape:
            output_shape = (self.output_shape, ) * len(self.shape)
        else:
            output_shape = self.output_shape
    
        if xp == cupy:
            m = cupyx.scipy.ndimage.affine_transform
            matrix = cupy.array(matrix)
>           return m(a, matrix, output_shape=output_shape,
                     output=output, order=self.order,
                     mode=self.mode, texture_memory=True)

tests/cupyx_tests/scipy_tests/ndimage_tests/test_interpolation.py:398: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
cupyx/scipy/ndimage/interpolation.py:376: in affine_transform
    return _texture.affine_transformation(data=input,
cupyx/_texture.py:168: in affine_transformation
    texture_object = _create_texture_object(data,
cupyx/_texture.py:98: in _create_texture_object
    array = texture.CUDAarray(texture_fmt, *data.shape[::-1])
cupy/cuda/texture.pyx:296: in cupy.cuda.texture.CUDAarray.__init__
    self.ptr = runtime.malloc3DArray(desc.ptr, width, height, depth,
cupy_backends/cuda/api/runtime.pyx:593: in cupy_backends.cuda.api.runtime.malloc3DArray
    check_status(status)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

>   raise CUDARuntimeError(status)
E   AssertionError: Only cupy raises error
E   
E   Traceback (most recent call last):
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.hXnTrEAC7u/cupy/cupy/testing/_helper.py", line 47, in _call_func
E       result = impl(self, *args, **kw)
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.hXnTrEAC7u/cupy/tests/cupyx_tests/scipy_tests/ndimage_tests/test_interpolation.py", line 398, in test_affine_transform_texture_memory
E       return m(a, matrix, output_shape=output_shape,
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.hXnTrEAC7u/cupy/cupyx/scipy/ndimage/interpolation.py", line 376, in affine_transform
E       return _texture.affine_transformation(data=input,
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.hXnTrEAC7u/cupy/cupyx/_texture.py", line 168, in affine_transformation
E       texture_object = _create_texture_object(data,
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.hXnTrEAC7u/cupy/cupyx/_texture.py", line 98, in _create_texture_object
E       array = texture.CUDAarray(texture_fmt, *data.shape[::-1])
E     File "cupy/cuda/texture.pyx", line 296, in cupy.cuda.texture.CUDAarray.__init__
E       self.ptr = runtime.malloc3DArray(desc.ptr, width, height, depth,
E     File "cupy_backends/cuda/api/runtime.pyx", line 593, in cupy_backends.cuda.api.runtime.malloc3DArray
E       check_status(status)
E     File "cupy_backends/cuda/api/runtime.pyx", line 265, in cupy_backends.cuda.api.runtime.check_status
E       raise CUDARuntimeError(status)
E   cupy_backends.cuda.api.runtime.CUDARuntimeError: hipErrorUnknown: hipErrorUnknown

cupy_backends/cuda/api/runtime.pyx:265: AssertionError
----------------------------- Captured stderr call -----------------------------
Traceback (most recent call last):
  File "cupy_backends/cuda/api/runtime.pyx", line 644, in cupy_backends.cuda.api.runtime.freeArray
    check_status(status)
  File "cupy_backends/cuda/api/runtime.pyx", line 265, in cupy_backends.cuda.api.runtime.check_status
    raise CUDARuntimeError(status)
cupy_backends.cuda.api.runtime.CUDARuntimeError: hipErrorUnknown: hipErrorUnknown
_ TestAffineTransformTextureMemory.test_affine_transform_texture_memory[_param_175_{mode='constant', order=1, output='empty', output_shape=None, shape=(10, 20, 30), theta=270}] _

self = <<cupyx_tests.scipy_tests.ndimage_tests.test_interpolation.TestAffineTransformTextureMemory object at 0x7fab37045d30> ...ameter: {'mode': 'constant', 'order': 1, 'output': 'empty', 'output_shape': None, 'shape': (10, 20, 30), 'theta': 270}>
xp = <module 'cupy' from '/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.hXnTrEAC7u/cupy/cupy/__init__.py'>
scp = <module 'cupyx.scipy' from '/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.hXnTrEAC7u/cupy/cupyx/scipy/__init__.py'>

    @testing.numpy_cupy_allclose(atol=0.1, scipy_name='scp')
    def test_affine_transform_texture_memory(self, xp, scp):
        a = xp.ones(self.shape, dtype=xp.float32)
        center = numpy.divide(numpy.subtract(self.shape, 1), 2)
    
        if len(self.shape) == 2:
            matrix = self._2d_rotation_matrix(self.theta, center)
        elif len(self.shape) == 3:
            matrix = self._3d_rotation_matrix(self.theta, center)
        else:
            return pytest.xfail('Unsupported shape')
    
        if self.output == 'empty':
            output = xp.empty(self.shape, dtype=xp.float32)
            if self.output_shape:
                return pytest.skip('This combination is tested in '
                                   'test_invalid_texture_arguments')
        else:
            output = self.output
    
        if self.output_shape:
            output_shape = (self.output_shape, ) * len(self.shape)
        else:
            output_shape = self.output_shape
    
        if xp == cupy:
            m = cupyx.scipy.ndimage.affine_transform
            matrix = cupy.array(matrix)
>           return m(a, matrix, output_shape=output_shape,
                     output=output, order=self.order,
                     mode=self.mode, texture_memory=True)

tests/cupyx_tests/scipy_tests/ndimage_tests/test_interpolation.py:398: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
cupyx/scipy/ndimage/interpolation.py:376: in affine_transform
    return _texture.affine_transformation(data=input,
cupyx/_texture.py:168: in affine_transformation
    texture_object = _create_texture_object(data,
cupyx/_texture.py:98: in _create_texture_object
    array = texture.CUDAarray(texture_fmt, *data.shape[::-1])
cupy/cuda/texture.pyx:296: in cupy.cuda.texture.CUDAarray.__init__
    self.ptr = runtime.malloc3DArray(desc.ptr, width, height, depth,
cupy_backends/cuda/api/runtime.pyx:593: in cupy_backends.cuda.api.runtime.malloc3DArray
    check_status(status)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

>   raise CUDARuntimeError(status)
E   AssertionError: Only cupy raises error
E   
E   Traceback (most recent call last):
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.hXnTrEAC7u/cupy/cupy/testing/_helper.py", line 47, in _call_func
E       result = impl(self, *args, **kw)
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.hXnTrEAC7u/cupy/tests/cupyx_tests/scipy_tests/ndimage_tests/test_interpolation.py", line 398, in test_affine_transform_texture_memory
E       return m(a, matrix, output_shape=output_shape,
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.hXnTrEAC7u/cupy/cupyx/scipy/ndimage/interpolation.py", line 376, in affine_transform
E       return _texture.affine_transformation(data=input,
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.hXnTrEAC7u/cupy/cupyx/_texture.py", line 168, in affine_transformation
E       texture_object = _create_texture_object(data,
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.hXnTrEAC7u/cupy/cupyx/_texture.py", line 98, in _create_texture_object
E       array = texture.CUDAarray(texture_fmt, *data.shape[::-1])
E     File "cupy/cuda/texture.pyx", line 296, in cupy.cuda.texture.CUDAarray.__init__
E       self.ptr = runtime.malloc3DArray(desc.ptr, width, height, depth,
E     File "cupy_backends/cuda/api/runtime.pyx", line 593, in cupy_backends.cuda.api.runtime.malloc3DArray
E       check_status(status)
E     File "cupy_backends/cuda/api/runtime.pyx", line 265, in cupy_backends.cuda.api.runtime.check_status
E       raise CUDARuntimeError(status)
E   cupy_backends.cuda.api.runtime.CUDARuntimeError: hipErrorUnknown: hipErrorUnknown

cupy_backends/cuda/api/runtime.pyx:265: AssertionError
----------------------------- Captured stderr call -----------------------------
Traceback (most recent call last):
  File "cupy_backends/cuda/api/runtime.pyx", line 644, in cupy_backends.cuda.api.runtime.freeArray
    check_status(status)
  File "cupy_backends/cuda/api/runtime.pyx", line 265, in cupy_backends.cuda.api.runtime.check_status
    raise CUDARuntimeError(status)
cupy_backends.cuda.api.runtime.CUDARuntimeError: hipErrorUnknown: hipErrorUnknown
_ TestAffineTransformTextureMemory.test_affine_transform_texture_memory[_param_192_{mode='nearest', order=0, output=None, output_shape=None, shape=(100, 100), theta=0}] _

self = <<cupyx_tests.scipy_tests.ndimage_tests.test_interpolation.TestAffineTransformTextureMemory object at 0x7fab36e24a30>  parameter: {'mode': 'nearest', 'order': 0, 'output': None, 'output_shape': None, 'shape': (100, 100), 'theta': 0}>
xp = <module 'cupy' from '/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.hXnTrEAC7u/cupy/cupy/__init__.py'>
scp = <module 'cupyx.scipy' from '/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.hXnTrEAC7u/cupy/cupyx/scipy/__init__.py'>

    @testing.numpy_cupy_allclose(atol=0.1, scipy_name='scp')
    def test_affine_transform_texture_memory(self, xp, scp):
        a = xp.ones(self.shape, dtype=xp.float32)
        center = numpy.divide(numpy.subtract(self.shape, 1), 2)
    
        if len(self.shape) == 2:
            matrix = self._2d_rotation_matrix(self.theta, center)
        elif len(self.shape) == 3:
            matrix = self._3d_rotation_matrix(self.theta, center)
        else:
            return pytest.xfail('Unsupported shape')
    
        if self.output == 'empty':
            output = xp.empty(self.shape, dtype=xp.float32)
            if self.output_shape:
                return pytest.skip('This combination is tested in '
                                   'test_invalid_texture_arguments')
        else:
            output = self.output
    
        if self.output_shape:
            output_shape = (self.output_shape, ) * len(self.shape)
        else:
            output_shape = self.output_shape
    
        if xp == cupy:
            m = cupyx.scipy.ndimage.affine_transform
            matrix = cupy.array(matrix)
>           return m(a, matrix, output_shape=output_shape,
                     output=output, order=self.order,
                     mode=self.mode, texture_memory=True)

tests/cupyx_tests/scipy_tests/ndimage_tests/test_interpolation.py:398: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
cupyx/scipy/ndimage/interpolation.py:376: in affine_transform
    return _texture.affine_transformation(data=input,
cupyx/_texture.py:168: in affine_transformation
    texture_object = _create_texture_object(data,
cupyx/_texture.py:98: in _create_texture_object
    array = texture.CUDAarray(texture_fmt, *data.shape[::-1])
cupy/cuda/texture.pyx:296: in cupy.cuda.texture.CUDAarray.__init__
    self.ptr = runtime.malloc3DArray(desc.ptr, width, height, depth,
cupy_backends/cuda/api/runtime.pyx:593: in cupy_backends.cuda.api.runtime.malloc3DArray
    check_status(status)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

>   raise CUDARuntimeError(status)
E   AssertionError: Only cupy raises error
E   
E   Traceback (most recent call last):
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.hXnTrEAC7u/cupy/cupy/testing/_helper.py", line 47, in _call_func
E       result = impl(self, *args, **kw)
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.hXnTrEAC7u/cupy/tests/cupyx_tests/scipy_tests/ndimage_tests/test_interpolation.py", line 398, in test_affine_transform_texture_memory
E       return m(a, matrix, output_shape=output_shape,
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.hXnTrEAC7u/cupy/cupyx/scipy/ndimage/interpolation.py", line 376, in affine_transform
E       return _texture.affine_transformation(data=input,
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.hXnTrEAC7u/cupy/cupyx/_texture.py", line 168, in affine_transformation
E       texture_object = _create_texture_object(data,
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.hXnTrEAC7u/cupy/cupyx/_texture.py", line 98, in _create_texture_object
E       array = texture.CUDAarray(texture_fmt, *data.shape[::-1])
E     File "cupy/cuda/texture.pyx", line 296, in cupy.cuda.texture.CUDAarray.__init__
E       self.ptr = runtime.malloc3DArray(desc.ptr, width, height, depth,
E     File "cupy_backends/cuda/api/runtime.pyx", line 593, in cupy_backends.cuda.api.runtime.malloc3DArray
E       check_status(status)
E     File "cupy_backends/cuda/api/runtime.pyx", line 265, in cupy_backends.cuda.api.runtime.check_status
E       raise CUDARuntimeError(status)
E   cupy_backends.cuda.api.runtime.CUDARuntimeError: hipErrorUnknown: hipErrorUnknown

cupy_backends/cuda/api/runtime.pyx:265: AssertionError
----------------------------- Captured stderr call -----------------------------
Traceback (most recent call last):
  File "cupy_backends/cuda/api/runtime.pyx", line 644, in cupy_backends.cuda.api.runtime.freeArray
    check_status(status)
  File "cupy_backends/cuda/api/runtime.pyx", line 265, in cupy_backends.cuda.api.runtime.check_status
    raise CUDARuntimeError(status)
cupy_backends.cuda.api.runtime.CUDARuntimeError: hipErrorUnknown: hipErrorUnknown
_ TestAffineTransformTextureMemory.test_affine_transform_texture_memory[_param_193_{mode='nearest', order=0, output=None, output_shape=None, shape=(100, 100), theta=90}] _

self = <<cupyx_tests.scipy_tests.ndimage_tests.test_interpolation.TestAffineTransformTextureMemory object at 0x7fab3726ed60>  parameter: {'mode': 'nearest', 'order': 0, 'output': None, 'output_shape': None, 'shape': (100, 100), 'theta': 90}>
xp = <module 'cupy' from '/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.hXnTrEAC7u/cupy/cupy/__init__.py'>
scp = <module 'cupyx.scipy' from '/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.hXnTrEAC7u/cupy/cupyx/scipy/__init__.py'>

    @testing.numpy_cupy_allclose(atol=0.1, scipy_name='scp')
    def test_affine_transform_texture_memory(self, xp, scp):
        a = xp.ones(self.shape, dtype=xp.float32)
        center = numpy.divide(numpy.subtract(self.shape, 1), 2)
    
        if len(self.shape) == 2:
            matrix = self._2d_rotation_matrix(self.theta, center)
        elif len(self.shape) == 3:
            matrix = self._3d_rotation_matrix(self.theta, center)
        else:
            return pytest.xfail('Unsupported shape')
    
        if self.output == 'empty':
            output = xp.empty(self.shape, dtype=xp.float32)
            if self.output_shape:
                return pytest.skip('This combination is tested in '
                                   'test_invalid_texture_arguments')
        else:
            output = self.output
    
        if self.output_shape:
            output_shape = (self.output_shape, ) * len(self.shape)
        else:
            output_shape = self.output_shape
    
        if xp == cupy:
            m = cupyx.scipy.ndimage.affine_transform
            matrix = cupy.array(matrix)
>           return m(a, matrix, output_shape=output_shape,
                     output=output, order=self.order,
                     mode=self.mode, texture_memory=True)

tests/cupyx_tests/scipy_tests/ndimage_tests/test_interpolation.py:398: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
cupyx/scipy/ndimage/interpolation.py:376: in affine_transform
    return _texture.affine_transformation(data=input,
cupyx/_texture.py:168: in affine_transformation
    texture_object = _create_texture_object(data,
cupyx/_texture.py:98: in _create_texture_object
    array = texture.CUDAarray(texture_fmt, *data.shape[::-1])
cupy/cuda/texture.pyx:296: in cupy.cuda.texture.CUDAarray.__init__
    self.ptr = runtime.malloc3DArray(desc.ptr, width, height, depth,
cupy_backends/cuda/api/runtime.pyx:593: in cupy_backends.cuda.api.runtime.malloc3DArray
    check_status(status)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

>   raise CUDARuntimeError(status)
E   AssertionError: Only cupy raises error
E   
E   Traceback (most recent call last):
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.hXnTrEAC7u/cupy/cupy/testing/_helper.py", line 47, in _call_func
E       result = impl(self, *args, **kw)
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.hXnTrEAC7u/cupy/tests/cupyx_tests/scipy_tests/ndimage_tests/test_interpolation.py", line 398, in test_affine_transform_texture_memory
E       return m(a, matrix, output_shape=output_shape,
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.hXnTrEAC7u/cupy/cupyx/scipy/ndimage/interpolation.py", line 376, in affine_transform
E       return _texture.affine_transformation(data=input,
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.hXnTrEAC7u/cupy/cupyx/_texture.py", line 168, in affine_transformation
E       texture_object = _create_texture_object(data,
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.hXnTrEAC7u/cupy/cupyx/_texture.py", line 98, in _create_texture_object
E       array = texture.CUDAarray(texture_fmt, *data.shape[::-1])
E     File "cupy/cuda/texture.pyx", line 296, in cupy.cuda.texture.CUDAarray.__init__
E       self.ptr = runtime.malloc3DArray(desc.ptr, width, height, depth,
E     File "cupy_backends/cuda/api/runtime.pyx", line 593, in cupy_backends.cuda.api.runtime.malloc3DArray
E       check_status(status)
E     File "cupy_backends/cuda/api/runtime.pyx", line 265, in cupy_backends.cuda.api.runtime.check_status
E       raise CUDARuntimeError(status)
E   cupy_backends.cuda.api.runtime.CUDARuntimeError: hipErrorUnknown: hipErrorUnknown

cupy_backends/cuda/api/runtime.pyx:265: AssertionError
----------------------------- Captured stderr call -----------------------------
Traceback (most recent call last):
  File "cupy_backends/cuda/api/runtime.pyx", line 644, in cupy_backends.cuda.api.runtime.freeArray
    check_status(status)
  File "cupy_backends/cuda/api/runtime.pyx", line 265, in cupy_backends.cuda.api.runtime.check_status
    raise CUDARuntimeError(status)
cupy_backends.cuda.api.runtime.CUDARuntimeError: hipErrorUnknown: hipErrorUnknown
_ TestAffineTransformTextureMemory.test_affine_transform_texture_memory[_param_194_{mode='nearest', order=0, output=None, output_shape=None, shape=(100, 100), theta=180}] _

self = <<cupyx_tests.scipy_tests.ndimage_tests.test_interpolation.TestAffineTransformTextureMemory object at 0x7fab39d4b310>  parameter: {'mode': 'nearest', 'order': 0, 'output': None, 'output_shape': None, 'shape': (100, 100), 'theta': 180}>
xp = <module 'cupy' from '/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.hXnTrEAC7u/cupy/cupy/__init__.py'>
scp = <module 'cupyx.scipy' from '/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.hXnTrEAC7u/cupy/cupyx/scipy/__init__.py'>

    @testing.numpy_cupy_allclose(atol=0.1, scipy_name='scp')
    def test_affine_transform_texture_memory(self, xp, scp):
        a = xp.ones(self.shape, dtype=xp.float32)
        center = numpy.divide(numpy.subtract(self.shape, 1), 2)
    
        if len(self.shape) == 2:
            matrix = self._2d_rotation_matrix(self.theta, center)
        elif len(self.shape) == 3:
            matrix = self._3d_rotation_matrix(self.theta, center)
        else:
            return pytest.xfail('Unsupported shape')
    
        if self.output == 'empty':
            output = xp.empty(self.shape, dtype=xp.float32)
            if self.output_shape:
                return pytest.skip('This combination is tested in '
                                   'test_invalid_texture_arguments')
        else:
            output = self.output
    
        if self.output_shape:
            output_shape = (self.output_shape, ) * len(self.shape)
        else:
            output_shape = self.output_shape
    
        if xp == cupy:
            m = cupyx.scipy.ndimage.affine_transform
            matrix = cupy.array(matrix)
>           return m(a, matrix, output_shape=output_shape,
                     output=output, order=self.order,
                     mode=self.mode, texture_memory=True)

tests/cupyx_tests/scipy_tests/ndimage_tests/test_interpolation.py:398: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
cupyx/scipy/ndimage/interpolation.py:376: in affine_transform
    return _texture.affine_transformation(data=input,
cupyx/_texture.py:168: in affine_transformation
    texture_object = _create_texture_object(data,
cupyx/_texture.py:98: in _create_texture_object
    array = texture.CUDAarray(texture_fmt, *data.shape[::-1])
cupy/cuda/texture.pyx:296: in cupy.cuda.texture.CUDAarray.__init__
    self.ptr = runtime.malloc3DArray(desc.ptr, width, height, depth,
cupy_backends/cuda/api/runtime.pyx:593: in cupy_backends.cuda.api.runtime.malloc3DArray
    check_status(status)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

>   raise CUDARuntimeError(status)
E   AssertionError: Only cupy raises error
E   
E   Traceback (most recent call last):
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.hXnTrEAC7u/cupy/cupy/testing/_helper.py", line 47, in _call_func
E       result = impl(self, *args, **kw)
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.hXnTrEAC7u/cupy/tests/cupyx_tests/scipy_tests/ndimage_tests/test_interpolation.py", line 398, in test_affine_transform_texture_memory
E       return m(a, matrix, output_shape=output_shape,
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.hXnTrEAC7u/cupy/cupyx/scipy/ndimage/interpolation.py", line 376, in affine_transform
E       return _texture.affine_transformation(data=input,
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.hXnTrEAC7u/cupy/cupyx/_texture.py", line 168, in affine_transformation
E       texture_object = _create_texture_object(data,
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.hXnTrEAC7u/cupy/cupyx/_texture.py", line 98, in _create_texture_object
E       array = texture.CUDAarray(texture_fmt, *data.shape[::-1])
E     File "cupy/cuda/texture.pyx", line 296, in cupy.cuda.texture.CUDAarray.__init__
E       self.ptr = runtime.malloc3DArray(desc.ptr, width, height, depth,
E     File "cupy_backends/cuda/api/runtime.pyx", line 593, in cupy_backends.cuda.api.runtime.malloc3DArray
E       check_status(status)
E     File "cupy_backends/cuda/api/runtime.pyx", line 265, in cupy_backends.cuda.api.runtime.check_status
E       raise CUDARuntimeError(status)
E   cupy_backends.cuda.api.runtime.CUDARuntimeError: hipErrorUnknown: hipErrorUnknown

cupy_backends/cuda/api/runtime.pyx:265: AssertionError
----------------------------- Captured stderr call -----------------------------
Traceback (most recent call last):
  File "cupy_backends/cuda/api/runtime.pyx", line 644, in cupy_backends.cuda.api.runtime.freeArray
    check_status(status)
  File "cupy_backends/cuda/api/runtime.pyx", line 265, in cupy_backends.cuda.api.runtime.check_status
    raise CUDARuntimeError(status)
cupy_backends.cuda.api.runtime.CUDARuntimeError: hipErrorUnknown: hipErrorUnknown
_ TestAffineTransformTextureMemory.test_affine_transform_texture_memory[_param_195_{mode='nearest', order=0, output=None, output_shape=None, shape=(100, 100), theta=270}] _

self = <<cupyx_tests.scipy_tests.ndimage_tests.test_interpolation.TestAffineTransformTextureMemory object at 0x7fab370a3f10>  parameter: {'mode': 'nearest', 'order': 0, 'output': None, 'output_shape': None, 'shape': (100, 100), 'theta': 270}>
xp = <module 'cupy' from '/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.hXnTrEAC7u/cupy/cupy/__init__.py'>
scp = <module 'cupyx.scipy' from '/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.hXnTrEAC7u/cupy/cupyx/scipy/__init__.py'>

    @testing.numpy_cupy_allclose(atol=0.1, scipy_name='scp')
    def test_affine_transform_texture_memory(self, xp, scp):
        a = xp.ones(self.shape, dtype=xp.float32)
        center = numpy.divide(numpy.subtract(self.shape, 1), 2)
    
        if len(self.shape) == 2:
            matrix = self._2d_rotation_matrix(self.theta, center)
        elif len(self.shape) == 3:
            matrix = self._3d_rotation_matrix(self.theta, center)
        else:
            return pytest.xfail('Unsupported shape')
    
        if self.output == 'empty':
            output = xp.empty(self.shape, dtype=xp.float32)
            if self.output_shape:
                return pytest.skip('This combination is tested in '
                                   'test_invalid_texture_arguments')
        else:
            output = self.output
    
        if self.output_shape:
            output_shape = (self.output_shape, ) * len(self.shape)
        else:
            output_shape = self.output_shape
    
        if xp == cupy:
            m = cupyx.scipy.ndimage.affine_transform
            matrix = cupy.array(matrix)
>           return m(a, matrix, output_shape=output_shape,
                     output=output, order=self.order,
                     mode=self.mode, texture_memory=True)

tests/cupyx_tests/scipy_tests/ndimage_tests/test_interpolation.py:398: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
cupyx/scipy/ndimage/interpolation.py:376: in affine_transform
    return _texture.affine_transformation(data=input,
cupyx/_texture.py:168: in affine_transformation
    texture_object = _create_texture_object(data,
cupyx/_texture.py:98: in _create_texture_object
    array = texture.CUDAarray(texture_fmt, *data.shape[::-1])
cupy/cuda/texture.pyx:296: in cupy.cuda.texture.CUDAarray.__init__
    self.ptr = runtime.malloc3DArray(desc.ptr, width, height, depth,
cupy_backends/cuda/api/runtime.pyx:593: in cupy_backends.cuda.api.runtime.malloc3DArray
    check_status(status)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

>   raise CUDARuntimeError(status)
E   AssertionError: Only cupy raises error
E   
E   Traceback (most recent call last):
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.hXnTrEAC7u/cupy/cupy/testing/_helper.py", line 47, in _call_func
E       result = impl(self, *args, **kw)
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.hXnTrEAC7u/cupy/tests/cupyx_tests/scipy_tests/ndimage_tests/test_interpolation.py", line 398, in test_affine_transform_texture_memory
E       return m(a, matrix, output_shape=output_shape,
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.hXnTrEAC7u/cupy/cupyx/scipy/ndimage/interpolation.py", line 376, in affine_transform
E       return _texture.affine_transformation(data=input,
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.hXnTrEAC7u/cupy/cupyx/_texture.py", line 168, in affine_transformation
E       texture_object = _create_texture_object(data,
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.hXnTrEAC7u/cupy/cupyx/_texture.py", line 98, in _create_texture_object
E       array = texture.CUDAarray(texture_fmt, *data.shape[::-1])
E     File "cupy/cuda/texture.pyx", line 296, in cupy.cuda.texture.CUDAarray.__init__
E       self.ptr = runtime.malloc3DArray(desc.ptr, width, height, depth,
E     File "cupy_backends/cuda/api/runtime.pyx", line 593, in cupy_backends.cuda.api.runtime.malloc3DArray
E       check_status(status)
E     File "cupy_backends/cuda/api/runtime.pyx", line 265, in cupy_backends.cuda.api.runtime.check_status
E       raise CUDARuntimeError(status)
E   cupy_backends.cuda.api.runtime.CUDARuntimeError: hipErrorUnknown: hipErrorUnknown

cupy_backends/cuda/api/runtime.pyx:265: AssertionError
----------------------------- Captured stderr call -----------------------------
Traceback (most recent call last):
  File "cupy_backends/cuda/api/runtime.pyx", line 644, in cupy_backends.cuda.api.runtime.freeArray
    check_status(status)
  File "cupy_backends/cuda/api/runtime.pyx", line 265, in cupy_backends.cuda.api.runtime.check_status
    raise CUDARuntimeError(status)
cupy_backends.cuda.api.runtime.CUDARuntimeError: hipErrorUnknown: hipErrorUnknown
_ TestAffineTransformTextureMemory.test_affine_transform_texture_memory[_param_196_{mode='nearest', order=0, output=None, output_shape=None, shape=(10, 20), theta=0}] _

self = <<cupyx_tests.scipy_tests.ndimage_tests.test_interpolation.TestAffineTransformTextureMemory object at 0x7fab37007130>  parameter: {'mode': 'nearest', 'order': 0, 'output': None, 'output_shape': None, 'shape': (10, 20), 'theta': 0}>
xp = <module 'cupy' from '/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.hXnTrEAC7u/cupy/cupy/__init__.py'>
scp = <module 'cupyx.scipy' from '/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.hXnTrEAC7u/cupy/cupyx/scipy/__init__.py'>

    @testing.numpy_cupy_allclose(atol=0.1, scipy_name='scp')
    def test_affine_transform_texture_memory(self, xp, scp):
        a = xp.ones(self.shape, dtype=xp.float32)
        center = numpy.divide(numpy.subtract(self.shape, 1), 2)
    
        if len(self.shape) == 2:
            matrix = self._2d_rotation_matrix(self.theta, center)
        elif len(self.shape) == 3:
            matrix = self._3d_rotation_matrix(self.theta, center)
        else:
            return pytest.xfail('Unsupported shape')
    
        if self.output == 'empty':
            output = xp.empty(self.shape, dtype=xp.float32)
            if self.output_shape:
                return pytest.skip('This combination is tested in '
                                   'test_invalid_texture_arguments')
        else:
            output = self.output
    
        if self.output_shape:
            output_shape = (self.output_shape, ) * len(self.shape)
        else:
            output_shape = self.output_shape
    
        if xp == cupy:
            m = cupyx.scipy.ndimage.affine_transform
            matrix = cupy.array(matrix)
>           return m(a, matrix, output_shape=output_shape,
                     output=output, order=self.order,
                     mode=self.mode, texture_memory=True)

tests/cupyx_tests/scipy_tests/ndimage_tests/test_interpolation.py:398: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
cupyx/scipy/ndimage/interpolation.py:376: in affine_transform
    return _texture.affine_transformation(data=input,
cupyx/_texture.py:168: in affine_transformation
    texture_object = _create_texture_object(data,
cupyx/_texture.py:98: in _create_texture_object
    array = texture.CUDAarray(texture_fmt, *data.shape[::-1])
cupy/cuda/texture.pyx:296: in cupy.cuda.texture.CUDAarray.__init__
    self.ptr = runtime.malloc3DArray(desc.ptr, width, height, depth,
cupy_backends/cuda/api/runtime.pyx:593: in cupy_backends.cuda.api.runtime.malloc3DArray
    check_status(status)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

>   raise CUDARuntimeError(status)
E   AssertionError: Only cupy raises error
E   
E   Traceback (most recent call last):
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.hXnTrEAC7u/cupy/cupy/testing/_helper.py", line 47, in _call_func
E       result = impl(self, *args, **kw)
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.hXnTrEAC7u/cupy/tests/cupyx_tests/scipy_tests/ndimage_tests/test_interpolation.py", line 398, in test_affine_transform_texture_memory
E       return m(a, matrix, output_shape=output_shape,
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.hXnTrEAC7u/cupy/cupyx/scipy/ndimage/interpolation.py", line 376, in affine_transform
E       return _texture.affine_transformation(data=input,
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.hXnTrEAC7u/cupy/cupyx/_texture.py", line 168, in affine_transformation
E       texture_object = _create_texture_object(data,
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.hXnTrEAC7u/cupy/cupyx/_texture.py", line 98, in _create_texture_object
E       array = texture.CUDAarray(texture_fmt, *data.shape[::-1])
E     File "cupy/cuda/texture.pyx", line 296, in cupy.cuda.texture.CUDAarray.__init__
E       self.ptr = runtime.malloc3DArray(desc.ptr, width, height, depth,
E     File "cupy_backends/cuda/api/runtime.pyx", line 593, in cupy_backends.cuda.api.runtime.malloc3DArray
E       check_status(status)
E     File "cupy_backends/cuda/api/runtime.pyx", line 265, in cupy_backends.cuda.api.runtime.check_status
E       raise CUDARuntimeError(status)
E   cupy_backends.cuda.api.runtime.CUDARuntimeError: hipErrorUnknown: hipErrorUnknown

cupy_backends/cuda/api/runtime.pyx:265: AssertionError
----------------------------- Captured stderr call -----------------------------
Traceback (most recent call last):
  File "cupy_backends/cuda/api/runtime.pyx", line 644, in cupy_backends.cuda.api.runtime.freeArray
    check_status(status)
  File "cupy_backends/cuda/api/runtime.pyx", line 265, in cupy_backends.cuda.api.runtime.check_status
    raise CUDARuntimeError(status)
cupy_backends.cuda.api.runtime.CUDARuntimeError: hipErrorUnknown: hipErrorUnknown
_ TestAffineTransformTextureMemory.test_affine_transform_texture_memory[_param_197_{mode='nearest', order=0, output=None, output_shape=None, shape=(10, 20), theta=90}] _

self = <<cupyx_tests.scipy_tests.ndimage_tests.test_interpolation.TestAffineTransformTextureMemory object at 0x7fab36f05700>  parameter: {'mode': 'nearest', 'order': 0, 'output': None, 'output_shape': None, 'shape': (10, 20), 'theta': 90}>
xp = <module 'cupy' from '/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.hXnTrEAC7u/cupy/cupy/__init__.py'>
scp = <module 'cupyx.scipy' from '/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.hXnTrEAC7u/cupy/cupyx/scipy/__init__.py'>

    @testing.numpy_cupy_allclose(atol=0.1, scipy_name='scp')
    def test_affine_transform_texture_memory(self, xp, scp):
        a = xp.ones(self.shape, dtype=xp.float32)
        center = numpy.divide(numpy.subtract(self.shape, 1), 2)
    
        if len(self.shape) == 2:
            matrix = self._2d_rotation_matrix(self.theta, center)
        elif len(self.shape) == 3:
            matrix = self._3d_rotation_matrix(self.theta, center)
        else:
            return pytest.xfail('Unsupported shape')
    
        if self.output == 'empty':
            output = xp.empty(self.shape, dtype=xp.float32)
            if self.output_shape:
                return pytest.skip('This combination is tested in '
                                   'test_invalid_texture_arguments')
        else:
            output = self.output
    
        if self.output_shape:
            output_shape = (self.output_shape, ) * len(self.shape)
        else:
            output_shape = self.output_shape
    
        if xp == cupy:
            m = cupyx.scipy.ndimage.affine_transform
            matrix = cupy.array(matrix)
>           return m(a, matrix, output_shape=output_shape,
                     output=output, order=self.order,
                     mode=self.mode, texture_memory=True)

tests/cupyx_tests/scipy_tests/ndimage_tests/test_interpolation.py:398: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
cupyx/scipy/ndimage/interpolation.py:376: in affine_transform
    return _texture.affine_transformation(data=input,
cupyx/_texture.py:168: in affine_transformation
    texture_object = _create_texture_object(data,
cupyx/_texture.py:98: in _create_texture_object
    array = texture.CUDAarray(texture_fmt, *data.shape[::-1])
cupy/cuda/texture.pyx:296: in cupy.cuda.texture.CUDAarray.__init__
    self.ptr = runtime.malloc3DArray(desc.ptr, width, height, depth,
cupy_backends/cuda/api/runtime.pyx:593: in cupy_backends.cuda.api.runtime.malloc3DArray
    check_status(status)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

>   raise CUDARuntimeError(status)
E   AssertionError: Only cupy raises error
E   
E   Traceback (most recent call last):
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.hXnTrEAC7u/cupy/cupy/testing/_helper.py", line 47, in _call_func
E       result = impl(self, *args, **kw)
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.hXnTrEAC7u/cupy/tests/cupyx_tests/scipy_tests/ndimage_tests/test_interpolation.py", line 398, in test_affine_transform_texture_memory
E       return m(a, matrix, output_shape=output_shape,
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.hXnTrEAC7u/cupy/cupyx/scipy/ndimage/interpolation.py", line 376, in affine_transform
E       return _texture.affine_transformation(data=input,
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.hXnTrEAC7u/cupy/cupyx/_texture.py", line 168, in affine_transformation
E       texture_object = _create_texture_object(data,
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.hXnTrEAC7u/cupy/cupyx/_texture.py", line 98, in _create_texture_object
E       array = texture.CUDAarray(texture_fmt, *data.shape[::-1])
E     File "cupy/cuda/texture.pyx", line 296, in cupy.cuda.texture.CUDAarray.__init__
E       self.ptr = runtime.malloc3DArray(desc.ptr, width, height, depth,
E     File "cupy_backends/cuda/api/runtime.pyx", line 593, in cupy_backends.cuda.api.runtime.malloc3DArray
E       check_status(status)
E     File "cupy_backends/cuda/api/runtime.pyx", line 265, in cupy_backends.cuda.api.runtime.check_status
E       raise CUDARuntimeError(status)
E   cupy_backends.cuda.api.runtime.CUDARuntimeError: hipErrorUnknown: hipErrorUnknown

cupy_backends/cuda/api/runtime.pyx:265: AssertionError
----------------------------- Captured stderr call -----------------------------
Traceback (most recent call last):
  File "cupy_backends/cuda/api/runtime.pyx", line 644, in cupy_backends.cuda.api.runtime.freeArray
    check_status(status)
  File "cupy_backends/cuda/api/runtime.pyx", line 265, in cupy_backends.cuda.api.runtime.check_status
    raise CUDARuntimeError(status)
cupy_backends.cuda.api.runtime.CUDARuntimeError: hipErrorUnknown: hipErrorUnknown
_ TestAffineTransformTextureMemory.test_affine_transform_texture_memory[_param_198_{mode='nearest', order=0, output=None, output_shape=None, shape=(10, 20), theta=180}] _

self = <<cupyx_tests.scipy_tests.ndimage_tests.test_interpolation.TestAffineTransformTextureMemory object at 0x7fab36f13550>  parameter: {'mode': 'nearest', 'order': 0, 'output': None, 'output_shape': None, 'shape': (10, 20), 'theta': 180}>
xp = <module 'cupy' from '/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.hXnTrEAC7u/cupy/cupy/__init__.py'>
scp = <module 'cupyx.scipy' from '/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.hXnTrEAC7u/cupy/cupyx/scipy/__init__.py'>

    @testing.numpy_cupy_allclose(atol=0.1, scipy_name='scp')
    def test_affine_transform_texture_memory(self, xp, scp):
        a = xp.ones(self.shape, dtype=xp.float32)
        center = numpy.divide(numpy.subtract(self.shape, 1), 2)
    
        if len(self.shape) == 2:
            matrix = self._2d_rotation_matrix(self.theta, center)
        elif len(self.shape) == 3:
            matrix = self._3d_rotation_matrix(self.theta, center)
        else:
            return pytest.xfail('Unsupported shape')
    
        if self.output == 'empty':
            output = xp.empty(self.shape, dtype=xp.float32)
            if self.output_shape:
                return pytest.skip('This combination is tested in '
                                   'test_invalid_texture_arguments')
        else:
            output = self.output
    
        if self.output_shape:
            output_shape = (self.output_shape, ) * len(self.shape)
        else:
            output_shape = self.output_shape
    
        if xp == cupy:
            m = cupyx.scipy.ndimage.affine_transform
            matrix = cupy.array(matrix)
>           return m(a, matrix, output_shape=output_shape,
                     output=output, order=self.order,
                     mode=self.mode, texture_memory=True)

tests/cupyx_tests/scipy_tests/ndimage_tests/test_interpolation.py:398: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
cupyx/scipy/ndimage/interpolation.py:376: in affine_transform
    return _texture.affine_transformation(data=input,
cupyx/_texture.py:168: in affine_transformation
    texture_object = _create_texture_object(data,
cupyx/_texture.py:98: in _create_texture_object
    array = texture.CUDAarray(texture_fmt, *data.shape[::-1])
cupy/cuda/texture.pyx:296: in cupy.cuda.texture.CUDAarray.__init__
    self.ptr = runtime.malloc3DArray(desc.ptr, width, height, depth,
cupy_backends/cuda/api/runtime.pyx:593: in cupy_backends.cuda.api.runtime.malloc3DArray
    check_status(status)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

>   raise CUDARuntimeError(status)
E   AssertionError: Only cupy raises error
E   
E   Traceback (most recent call last):
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.hXnTrEAC7u/cupy/cupy/testing/_helper.py", line 47, in _call_func
E       result = impl(self, *args, **kw)
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.hXnTrEAC7u/cupy/tests/cupyx_tests/scipy_tests/ndimage_tests/test_interpolation.py", line 398, in test_affine_transform_texture_memory
E       return m(a, matrix, output_shape=output_shape,
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.hXnTrEAC7u/cupy/cupyx/scipy/ndimage/interpolation.py", line 376, in affine_transform
E       return _texture.affine_transformation(data=input,
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.hXnTrEAC7u/cupy/cupyx/_texture.py", line 168, in affine_transformation
E       texture_object = _create_texture_object(data,
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.hXnTrEAC7u/cupy/cupyx/_texture.py", line 98, in _create_texture_object
E       array = texture.CUDAarray(texture_fmt, *data.shape[::-1])
E     File "cupy/cuda/texture.pyx", line 296, in cupy.cuda.texture.CUDAarray.__init__
E       self.ptr = runtime.malloc3DArray(desc.ptr, width, height, depth,
E     File "cupy_backends/cuda/api/runtime.pyx", line 593, in cupy_backends.cuda.api.runtime.malloc3DArray
E       check_status(status)
E     File "cupy_backends/cuda/api/runtime.pyx", line 265, in cupy_backends.cuda.api.runtime.check_status
E       raise CUDARuntimeError(status)
E   cupy_backends.cuda.api.runtime.CUDARuntimeError: hipErrorUnknown: hipErrorUnknown

cupy_backends/cuda/api/runtime.pyx:265: AssertionError
----------------------------- Captured stderr call -----------------------------
Traceback (most recent call last):
  File "cupy_backends/cuda/api/runtime.pyx", line 644, in cupy_backends.cuda.api.runtime.freeArray
    check_status(status)
  File "cupy_backends/cuda/api/runtime.pyx", line 265, in cupy_backends.cuda.api.runtime.check_status
    raise CUDARuntimeError(status)
cupy_backends.cuda.api.runtime.CUDARuntimeError: hipErrorUnknown: hipErrorUnknown
_ TestAffineTransformTextureMemory.test_affine_transform_texture_memory[_param_199_{mode='nearest', order=0, output=None, output_shape=None, shape=(10, 20), theta=270}] _

self = <<cupyx_tests.scipy_tests.ndimage_tests.test_interpolation.TestAffineTransformTextureMemory object at 0x7fab37287790>  parameter: {'mode': 'nearest', 'order': 0, 'output': None, 'output_shape': None, 'shape': (10, 20), 'theta': 270}>
xp = <module 'cupy' from '/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.hXnTrEAC7u/cupy/cupy/__init__.py'>
scp = <module 'cupyx.scipy' from '/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.hXnTrEAC7u/cupy/cupyx/scipy/__init__.py'>

    @testing.numpy_cupy_allclose(atol=0.1, scipy_name='scp')
    def test_affine_transform_texture_memory(self, xp, scp):
        a = xp.ones(self.shape, dtype=xp.float32)
        center = numpy.divide(numpy.subtract(self.shape, 1), 2)
    
        if len(self.shape) == 2:
            matrix = self._2d_rotation_matrix(self.theta, center)
        elif len(self.shape) == 3:
            matrix = self._3d_rotation_matrix(self.theta, center)
        else:
            return pytest.xfail('Unsupported shape')
    
        if self.output == 'empty':
            output = xp.empty(self.shape, dtype=xp.float32)
            if self.output_shape:
                return pytest.skip('This combination is tested in '
                                   'test_invalid_texture_arguments')
        else:
            output = self.output
    
        if self.output_shape:
            output_shape = (self.output_shape, ) * len(self.shape)
        else:
            output_shape = self.output_shape
    
        if xp == cupy:
            m = cupyx.scipy.ndimage.affine_transform
            matrix = cupy.array(matrix)
>           return m(a, matrix, output_shape=output_shape,
                     output=output, order=self.order,
                     mode=self.mode, texture_memory=True)

tests/cupyx_tests/scipy_tests/ndimage_tests/test_interpolation.py:398: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
cupyx/scipy/ndimage/interpolation.py:376: in affine_transform
    return _texture.affine_transformation(data=input,
cupyx/_texture.py:168: in affine_transformation
    texture_object = _create_texture_object(data,
cupyx/_texture.py:98: in _create_texture_object
    array = texture.CUDAarray(texture_fmt, *data.shape[::-1])
cupy/cuda/texture.pyx:296: in cupy.cuda.texture.CUDAarray.__init__
    self.ptr = runtime.malloc3DArray(desc.ptr, width, height, depth,
cupy_backends/cuda/api/runtime.pyx:593: in cupy_backends.cuda.api.runtime.malloc3DArray
    check_status(status)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

>   raise CUDARuntimeError(status)
E   AssertionError: Only cupy raises error
E   
E   Traceback (most recent call last):
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.hXnTrEAC7u/cupy/cupy/testing/_helper.py", line 47, in _call_func
E       result = impl(self, *args, **kw)
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.hXnTrEAC7u/cupy/tests/cupyx_tests/scipy_tests/ndimage_tests/test_interpolation.py", line 398, in test_affine_transform_texture_memory
E       return m(a, matrix, output_shape=output_shape,
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.hXnTrEAC7u/cupy/cupyx/scipy/ndimage/interpolation.py", line 376, in affine_transform
E       return _texture.affine_transformation(data=input,
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.hXnTrEAC7u/cupy/cupyx/_texture.py", line 168, in affine_transformation
E       texture_object = _create_texture_object(data,
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.hXnTrEAC7u/cupy/cupyx/_texture.py", line 98, in _create_texture_object
E       array = texture.CUDAarray(texture_fmt, *data.shape[::-1])
E     File "cupy/cuda/texture.pyx", line 296, in cupy.cuda.texture.CUDAarray.__init__
E       self.ptr = runtime.malloc3DArray(desc.ptr, width, height, depth,
E     File "cupy_backends/cuda/api/runtime.pyx", line 593, in cupy_backends.cuda.api.runtime.malloc3DArray
E       check_status(status)
E     File "cupy_backends/cuda/api/runtime.pyx", line 265, in cupy_backends.cuda.api.runtime.check_status
E       raise CUDARuntimeError(status)
E   cupy_backends.cuda.api.runtime.CUDARuntimeError: hipErrorUnknown: hipErrorUnknown

cupy_backends/cuda/api/runtime.pyx:265: AssertionError
----------------------------- Captured stderr call -----------------------------
Traceback (most recent call last):
  File "cupy_backends/cuda/api/runtime.pyx", line 644, in cupy_backends.cuda.api.runtime.freeArray
    check_status(status)
  File "cupy_backends/cuda/api/runtime.pyx", line 265, in cupy_backends.cuda.api.runtime.check_status
    raise CUDARuntimeError(status)
cupy_backends.cuda.api.runtime.CUDARuntimeError: hipErrorUnknown: hipErrorUnknown
_ TestAffineTransformTextureMemory.test_affine_transform_texture_memory[_param_200_{mode='nearest', order=0, output=None, output_shape=None, shape=(10, 10, 10), theta=0}] _

self = <<cupyx_tests.scipy_tests.ndimage_tests.test_interpolation.TestAffineTransformTextureMemory object at 0x7fab38e921c0>  parameter: {'mode': 'nearest', 'order': 0, 'output': None, 'output_shape': None, 'shape': (10, 10, 10), 'theta': 0}>
xp = <module 'cupy' from '/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.hXnTrEAC7u/cupy/cupy/__init__.py'>
scp = <module 'cupyx.scipy' from '/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.hXnTrEAC7u/cupy/cupyx/scipy/__init__.py'>

    @testing.numpy_cupy_allclose(atol=0.1, scipy_name='scp')
    def test_affine_transform_texture_memory(self, xp, scp):
        a = xp.ones(self.shape, dtype=xp.float32)
        center = numpy.divide(numpy.subtract(self.shape, 1), 2)
    
        if len(self.shape) == 2:
            matrix = self._2d_rotation_matrix(self.theta, center)
        elif len(self.shape) == 3:
            matrix = self._3d_rotation_matrix(self.theta, center)
        else:
            return pytest.xfail('Unsupported shape')
    
        if self.output == 'empty':
            output = xp.empty(self.shape, dtype=xp.float32)
            if self.output_shape:
                return pytest.skip('This combination is tested in '
                                   'test_invalid_texture_arguments')
        else:
            output = self.output
    
        if self.output_shape:
            output_shape = (self.output_shape, ) * len(self.shape)
        else:
            output_shape = self.output_shape
    
        if xp == cupy:
            m = cupyx.scipy.ndimage.affine_transform
            matrix = cupy.array(matrix)
>           return m(a, matrix, output_shape=output_shape,
                     output=output, order=self.order,
                     mode=self.mode, texture_memory=True)

tests/cupyx_tests/scipy_tests/ndimage_tests/test_interpolation.py:398: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
cupyx/scipy/ndimage/interpolation.py:376: in affine_transform
    return _texture.affine_transformation(data=input,
cupyx/_texture.py:168: in affine_transformation
    texture_object = _create_texture_object(data,
cupyx/_texture.py:98: in _create_texture_object
    array = texture.CUDAarray(texture_fmt, *data.shape[::-1])
cupy/cuda/texture.pyx:296: in cupy.cuda.texture.CUDAarray.__init__
    self.ptr = runtime.malloc3DArray(desc.ptr, width, height, depth,
cupy_backends/cuda/api/runtime.pyx:593: in cupy_backends.cuda.api.runtime.malloc3DArray
    check_status(status)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

>   raise CUDARuntimeError(status)
E   AssertionError: Only cupy raises error
E   
E   Traceback (most recent call last):
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.hXnTrEAC7u/cupy/cupy/testing/_helper.py", line 47, in _call_func
E       result = impl(self, *args, **kw)
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.hXnTrEAC7u/cupy/tests/cupyx_tests/scipy_tests/ndimage_tests/test_interpolation.py", line 398, in test_affine_transform_texture_memory
E       return m(a, matrix, output_shape=output_shape,
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.hXnTrEAC7u/cupy/cupyx/scipy/ndimage/interpolation.py", line 376, in affine_transform
E       return _texture.affine_transformation(data=input,
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.hXnTrEAC7u/cupy/cupyx/_texture.py", line 168, in affine_transformation
E       texture_object = _create_texture_object(data,
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.hXnTrEAC7u/cupy/cupyx/_texture.py", line 98, in _create_texture_object
E       array = texture.CUDAarray(texture_fmt, *data.shape[::-1])
E     File "cupy/cuda/texture.pyx", line 296, in cupy.cuda.texture.CUDAarray.__init__
E       self.ptr = runtime.malloc3DArray(desc.ptr, width, height, depth,
E     File "cupy_backends/cuda/api/runtime.pyx", line 593, in cupy_backends.cuda.api.runtime.malloc3DArray
E       check_status(status)
E     File "cupy_backends/cuda/api/runtime.pyx", line 265, in cupy_backends.cuda.api.runtime.check_status
E       raise CUDARuntimeError(status)
E   cupy_backends.cuda.api.runtime.CUDARuntimeError: hipErrorUnknown: hipErrorUnknown

cupy_backends/cuda/api/runtime.pyx:265: AssertionError
----------------------------- Captured stderr call -----------------------------
Traceback (most recent call last):
  File "cupy_backends/cuda/api/runtime.pyx", line 644, in cupy_backends.cuda.api.runtime.freeArray
    check_status(status)
  File "cupy_backends/cuda/api/runtime.pyx", line 265, in cupy_backends.cuda.api.runtime.check_status
    raise CUDARuntimeError(status)
cupy_backends.cuda.api.runtime.CUDARuntimeError: hipErrorUnknown: hipErrorUnknown
_ TestAffineTransformTextureMemory.test_affine_transform_texture_memory[_param_201_{mode='nearest', order=0, output=None, output_shape=None, shape=(10, 10, 10), theta=90}] _

self = <<cupyx_tests.scipy_tests.ndimage_tests.test_interpolation.TestAffineTransformTextureMemory object at 0x7fab372806d0>  parameter: {'mode': 'nearest', 'order': 0, 'output': None, 'output_shape': None, 'shape': (10, 10, 10), 'theta': 90}>
xp = <module 'cupy' from '/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.hXnTrEAC7u/cupy/cupy/__init__.py'>
scp = <module 'cupyx.scipy' from '/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.hXnTrEAC7u/cupy/cupyx/scipy/__init__.py'>

    @testing.numpy_cupy_allclose(atol=0.1, scipy_name='scp')
    def test_affine_transform_texture_memory(self, xp, scp):
        a = xp.ones(self.shape, dtype=xp.float32)
        center = numpy.divide(numpy.subtract(self.shape, 1), 2)
    
        if len(self.shape) == 2:
            matrix = self._2d_rotation_matrix(self.theta, center)
        elif len(self.shape) == 3:
            matrix = self._3d_rotation_matrix(self.theta, center)
        else:
            return pytest.xfail('Unsupported shape')
    
        if self.output == 'empty':
            output = xp.empty(self.shape, dtype=xp.float32)
            if self.output_shape:
                return pytest.skip('This combination is tested in '
                                   'test_invalid_texture_arguments')
        else:
            output = self.output
    
        if self.output_shape:
            output_shape = (self.output_shape, ) * len(self.shape)
        else:
            output_shape = self.output_shape
    
        if xp == cupy:
            m = cupyx.scipy.ndimage.affine_transform
            matrix = cupy.array(matrix)
>           return m(a, matrix, output_shape=output_shape,
                     output=output, order=self.order,
                     mode=self.mode, texture_memory=True)

tests/cupyx_tests/scipy_tests/ndimage_tests/test_interpolation.py:398: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
cupyx/scipy/ndimage/interpolation.py:376: in affine_transform
    return _texture.affine_transformation(data=input,
cupyx/_texture.py:168: in affine_transformation
    texture_object = _create_texture_object(data,
cupyx/_texture.py:98: in _create_texture_object
    array = texture.CUDAarray(texture_fmt, *data.shape[::-1])
cupy/cuda/texture.pyx:296: in cupy.cuda.texture.CUDAarray.__init__
    self.ptr = runtime.malloc3DArray(desc.ptr, width, height, depth,
cupy_backends/cuda/api/runtime.pyx:593: in cupy_backends.cuda.api.runtime.malloc3DArray
    check_status(status)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

>   raise CUDARuntimeError(status)
E   AssertionError: Only cupy raises error
E   
E   Traceback (most recent call last):
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.hXnTrEAC7u/cupy/cupy/testing/_helper.py", line 47, in _call_func
E       result = impl(self, *args, **kw)
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.hXnTrEAC7u/cupy/tests/cupyx_tests/scipy_tests/ndimage_tests/test_interpolation.py", line 398, in test_affine_transform_texture_memory
E       return m(a, matrix, output_shape=output_shape,
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.hXnTrEAC7u/cupy/cupyx/scipy/ndimage/interpolation.py", line 376, in affine_transform
E       return _texture.affine_transformation(data=input,
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.hXnTrEAC7u/cupy/cupyx/_texture.py", line 168, in affine_transformation
E       texture_object = _create_texture_object(data,
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.hXnTrEAC7u/cupy/cupyx/_texture.py", line 98, in _create_texture_object
E       array = texture.CUDAarray(texture_fmt, *data.shape[::-1])
E     File "cupy/cuda/texture.pyx", line 296, in cupy.cuda.texture.CUDAarray.__init__
E       self.ptr = runtime.malloc3DArray(desc.ptr, width, height, depth,
E     File "cupy_backends/cuda/api/runtime.pyx", line 593, in cupy_backends.cuda.api.runtime.malloc3DArray
E       check_status(status)
E     File "cupy_backends/cuda/api/runtime.pyx", line 265, in cupy_backends.cuda.api.runtime.check_status
E       raise CUDARuntimeError(status)
E   cupy_backends.cuda.api.runtime.CUDARuntimeError: hipErrorUnknown: hipErrorUnknown

cupy_backends/cuda/api/runtime.pyx:265: AssertionError
----------------------------- Captured stderr call -----------------------------
Traceback (most recent call last):
  File "cupy_backends/cuda/api/runtime.pyx", line 644, in cupy_backends.cuda.api.runtime.freeArray
    check_status(status)
  File "cupy_backends/cuda/api/runtime.pyx", line 265, in cupy_backends.cuda.api.runtime.check_status
    raise CUDARuntimeError(status)
cupy_backends.cuda.api.runtime.CUDARuntimeError: hipErrorUnknown: hipErrorUnknown
_ TestAffineTransformTextureMemory.test_affine_transform_texture_memory[_param_202_{mode='nearest', order=0, output=None, output_shape=None, shape=(10, 10, 10), theta=180}] _

self = <<cupyx_tests.scipy_tests.ndimage_tests.test_interpolation.TestAffineTransformTextureMemory object at 0x7fab3879fd30>  parameter: {'mode': 'nearest', 'order': 0, 'output': None, 'output_shape': None, 'shape': (10, 10, 10), 'theta': 180}>
xp = <module 'cupy' from '/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.hXnTrEAC7u/cupy/cupy/__init__.py'>
scp = <module 'cupyx.scipy' from '/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.hXnTrEAC7u/cupy/cupyx/scipy/__init__.py'>

    @testing.numpy_cupy_allclose(atol=0.1, scipy_name='scp')
    def test_affine_transform_texture_memory(self, xp, scp):
        a = xp.ones(self.shape, dtype=xp.float32)
        center = numpy.divide(numpy.subtract(self.shape, 1), 2)
    
        if len(self.shape) == 2:
            matrix = self._2d_rotation_matrix(self.theta, center)
        elif len(self.shape) == 3:
            matrix = self._3d_rotation_matrix(self.theta, center)
        else:
            return pytest.xfail('Unsupported shape')
    
        if self.output == 'empty':
            output = xp.empty(self.shape, dtype=xp.float32)
            if self.output_shape:
                return pytest.skip('This combination is tested in '
                                   'test_invalid_texture_arguments')
        else:
            output = self.output
    
        if self.output_shape:
            output_shape = (self.output_shape, ) * len(self.shape)
        else:
            output_shape = self.output_shape
    
        if xp == cupy:
            m = cupyx.scipy.ndimage.affine_transform
            matrix = cupy.array(matrix)
>           return m(a, matrix, output_shape=output_shape,
                     output=output, order=self.order,
                     mode=self.mode, texture_memory=True)

tests/cupyx_tests/scipy_tests/ndimage_tests/test_interpolation.py:398: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
cupyx/scipy/ndimage/interpolation.py:376: in affine_transform
    return _texture.affine_transformation(data=input,
cupyx/_texture.py:168: in affine_transformation
    texture_object = _create_texture_object(data,
cupyx/_texture.py:98: in _create_texture_object
    array = texture.CUDAarray(texture_fmt, *data.shape[::-1])
cupy/cuda/texture.pyx:296: in cupy.cuda.texture.CUDAarray.__init__
    self.ptr = runtime.malloc3DArray(desc.ptr, width, height, depth,
cupy_backends/cuda/api/runtime.pyx:593: in cupy_backends.cuda.api.runtime.malloc3DArray
    check_status(status)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

>   raise CUDARuntimeError(status)
E   AssertionError: Only cupy raises error
E   
E   Traceback (most recent call last):
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.hXnTrEAC7u/cupy/cupy/testing/_helper.py", line 47, in _call_func
E       result = impl(self, *args, **kw)
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.hXnTrEAC7u/cupy/tests/cupyx_tests/scipy_tests/ndimage_tests/test_interpolation.py", line 398, in test_affine_transform_texture_memory
E       return m(a, matrix, output_shape=output_shape,
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.hXnTrEAC7u/cupy/cupyx/scipy/ndimage/interpolation.py", line 376, in affine_transform
E       return _texture.affine_transformation(data=input,
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.hXnTrEAC7u/cupy/cupyx/_texture.py", line 168, in affine_transformation
E       texture_object = _create_texture_object(data,
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.hXnTrEAC7u/cupy/cupyx/_texture.py", line 98, in _create_texture_object
E       array = texture.CUDAarray(texture_fmt, *data.shape[::-1])
E     File "cupy/cuda/texture.pyx", line 296, in cupy.cuda.texture.CUDAarray.__init__
E       self.ptr = runtime.malloc3DArray(desc.ptr, width, height, depth,
E     File "cupy_backends/cuda/api/runtime.pyx", line 593, in cupy_backends.cuda.api.runtime.malloc3DArray
E       check_status(status)
E     File "cupy_backends/cuda/api/runtime.pyx", line 265, in cupy_backends.cuda.api.runtime.check_status
E       raise CUDARuntimeError(status)
E   cupy_backends.cuda.api.runtime.CUDARuntimeError: hipErrorUnknown: hipErrorUnknown

cupy_backends/cuda/api/runtime.pyx:265: AssertionError
----------------------------- Captured stderr call -----------------------------
Traceback (most recent call last):
  File "cupy_backends/cuda/api/runtime.pyx", line 644, in cupy_backends.cuda.api.runtime.freeArray
    check_status(status)
  File "cupy_backends/cuda/api/runtime.pyx", line 265, in cupy_backends.cuda.api.runtime.check_status
    raise CUDARuntimeError(status)
cupy_backends.cuda.api.runtime.CUDARuntimeError: hipErrorUnknown: hipErrorUnknown
_ TestAffineTransformTextureMemory.test_affine_transform_texture_memory[_param_203_{mode='nearest', order=0, output=None, output_shape=None, shape=(10, 10, 10), theta=270}] _

self = <<cupyx_tests.scipy_tests.ndimage_tests.test_interpolation.TestAffineTransformTextureMemory object at 0x7fab391c4490>  parameter: {'mode': 'nearest', 'order': 0, 'output': None, 'output_shape': None, 'shape': (10, 10, 10), 'theta': 270}>
xp = <module 'cupy' from '/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.hXnTrEAC7u/cupy/cupy/__init__.py'>
scp = <module 'cupyx.scipy' from '/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.hXnTrEAC7u/cupy/cupyx/scipy/__init__.py'>

    @testing.numpy_cupy_allclose(atol=0.1, scipy_name='scp')
    def test_affine_transform_texture_memory(self, xp, scp):
        a = xp.ones(self.shape, dtype=xp.float32)
        center = numpy.divide(numpy.subtract(self.shape, 1), 2)
    
        if len(self.shape) == 2:
            matrix = self._2d_rotation_matrix(self.theta, center)
        elif len(self.shape) == 3:
            matrix = self._3d_rotation_matrix(self.theta, center)
        else:
            return pytest.xfail('Unsupported shape')
    
        if self.output == 'empty':
            output = xp.empty(self.shape, dtype=xp.float32)
            if self.output_shape:
                return pytest.skip('This combination is tested in '
                                   'test_invalid_texture_arguments')
        else:
            output = self.output
    
        if self.output_shape:
            output_shape = (self.output_shape, ) * len(self.shape)
        else:
            output_shape = self.output_shape
    
        if xp == cupy:
            m = cupyx.scipy.ndimage.affine_transform
            matrix = cupy.array(matrix)
>           return m(a, matrix, output_shape=output_shape,
                     output=output, order=self.order,
                     mode=self.mode, texture_memory=True)

tests/cupyx_tests/scipy_tests/ndimage_tests/test_interpolation.py:398: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
cupyx/scipy/ndimage/interpolation.py:376: in affine_transform
    return _texture.affine_transformation(data=input,
cupyx/_texture.py:168: in affine_transformation
    texture_object = _create_texture_object(data,
cupyx/_texture.py:98: in _create_texture_object
    array = texture.CUDAarray(texture_fmt, *data.shape[::-1])
cupy/cuda/texture.pyx:296: in cupy.cuda.texture.CUDAarray.__init__
    self.ptr = runtime.malloc3DArray(desc.ptr, width, height, depth,
cupy_backends/cuda/api/runtime.pyx:593: in cupy_backends.cuda.api.runtime.malloc3DArray
    check_status(status)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

>   raise CUDARuntimeError(status)
E   AssertionError: Only cupy raises error
E   
E   Traceback (most recent call last):
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.hXnTrEAC7u/cupy/cupy/testing/_helper.py", line 47, in _call_func
E       result = impl(self, *args, **kw)
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.hXnTrEAC7u/cupy/tests/cupyx_tests/scipy_tests/ndimage_tests/test_interpolation.py", line 398, in test_affine_transform_texture_memory
E       return m(a, matrix, output_shape=output_shape,
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.hXnTrEAC7u/cupy/cupyx/scipy/ndimage/interpolation.py", line 376, in affine_transform
E       return _texture.affine_transformation(data=input,
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.hXnTrEAC7u/cupy/cupyx/_texture.py", line 168, in affine_transformation
E       texture_object = _create_texture_object(data,
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.hXnTrEAC7u/cupy/cupyx/_texture.py", line 98, in _create_texture_object
E       array = texture.CUDAarray(texture_fmt, *data.shape[::-1])
E     File "cupy/cuda/texture.pyx", line 296, in cupy.cuda.texture.CUDAarray.__init__
E       self.ptr = runtime.malloc3DArray(desc.ptr, width, height, depth,
E     File "cupy_backends/cuda/api/runtime.pyx", line 593, in cupy_backends.cuda.api.runtime.malloc3DArray
E       check_status(status)
E     File "cupy_backends/cuda/api/runtime.pyx", line 265, in cupy_backends.cuda.api.runtime.check_status
E       raise CUDARuntimeError(status)
E   cupy_backends.cuda.api.runtime.CUDARuntimeError: hipErrorUnknown: hipErrorUnknown

cupy_backends/cuda/api/runtime.pyx:265: AssertionError
----------------------------- Captured stderr call -----------------------------
Traceback (most recent call last):
  File "cupy_backends/cuda/api/runtime.pyx", line 644, in cupy_backends.cuda.api.runtime.freeArray
    check_status(status)
  File "cupy_backends/cuda/api/runtime.pyx", line 265, in cupy_backends.cuda.api.runtime.check_status
    raise CUDARuntimeError(status)
cupy_backends.cuda.api.runtime.CUDARuntimeError: hipErrorUnknown: hipErrorUnknown
_ TestAffineTransformTextureMemory.test_affine_transform_texture_memory[_param_204_{mode='nearest', order=0, output=None, output_shape=None, shape=(10, 20, 30), theta=0}] _

self = <<cupyx_tests.scipy_tests.ndimage_tests.test_interpolation.TestAffineTransformTextureMemory object at 0x7fab37c527f0>  parameter: {'mode': 'nearest', 'order': 0, 'output': None, 'output_shape': None, 'shape': (10, 20, 30), 'theta': 0}>
xp = <module 'cupy' from '/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.hXnTrEAC7u/cupy/cupy/__init__.py'>
scp = <module 'cupyx.scipy' from '/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.hXnTrEAC7u/cupy/cupyx/scipy/__init__.py'>

    @testing.numpy_cupy_allclose(atol=0.1, scipy_name='scp')
    def test_affine_transform_texture_memory(self, xp, scp):
        a = xp.ones(self.shape, dtype=xp.float32)
        center = numpy.divide(numpy.subtract(self.shape, 1), 2)
    
        if len(self.shape) == 2:
            matrix = self._2d_rotation_matrix(self.theta, center)
        elif len(self.shape) == 3:
            matrix = self._3d_rotation_matrix(self.theta, center)
        else:
            return pytest.xfail('Unsupported shape')
    
        if self.output == 'empty':
            output = xp.empty(self.shape, dtype=xp.float32)
            if self.output_shape:
                return pytest.skip('This combination is tested in '
                                   'test_invalid_texture_arguments')
        else:
            output = self.output
    
        if self.output_shape:
            output_shape = (self.output_shape, ) * len(self.shape)
        else:
            output_shape = self.output_shape
    
        if xp == cupy:
            m = cupyx.scipy.ndimage.affine_transform
            matrix = cupy.array(matrix)
>           return m(a, matrix, output_shape=output_shape,
                     output=output, order=self.order,
                     mode=self.mode, texture_memory=True)

tests/cupyx_tests/scipy_tests/ndimage_tests/test_interpolation.py:398: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
cupyx/scipy/ndimage/interpolation.py:376: in affine_transform
    return _texture.affine_transformation(data=input,
cupyx/_texture.py:168: in affine_transformation
    texture_object = _create_texture_object(data,
cupyx/_texture.py:98: in _create_texture_object
    array = texture.CUDAarray(texture_fmt, *data.shape[::-1])
cupy/cuda/texture.pyx:296: in cupy.cuda.texture.CUDAarray.__init__
    self.ptr = runtime.malloc3DArray(desc.ptr, width, height, depth,
cupy_backends/cuda/api/runtime.pyx:593: in cupy_backends.cuda.api.runtime.malloc3DArray
    check_status(status)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

>   raise CUDARuntimeError(status)
E   AssertionError: Only cupy raises error
E   
E   Traceback (most recent call last):
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.hXnTrEAC7u/cupy/cupy/testing/_helper.py", line 47, in _call_func
E       result = impl(self, *args, **kw)
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.hXnTrEAC7u/cupy/tests/cupyx_tests/scipy_tests/ndimage_tests/test_interpolation.py", line 398, in test_affine_transform_texture_memory
E       return m(a, matrix, output_shape=output_shape,
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.hXnTrEAC7u/cupy/cupyx/scipy/ndimage/interpolation.py", line 376, in affine_transform
E       return _texture.affine_transformation(data=input,
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.hXnTrEAC7u/cupy/cupyx/_texture.py", line 168, in affine_transformation
E       texture_object = _create_texture_object(data,
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.hXnTrEAC7u/cupy/cupyx/_texture.py", line 98, in _create_texture_object
E       array = texture.CUDAarray(texture_fmt, *data.shape[::-1])
E     File "cupy/cuda/texture.pyx", line 296, in cupy.cuda.texture.CUDAarray.__init__
E       self.ptr = runtime.malloc3DArray(desc.ptr, width, height, depth,
E     File "cupy_backends/cuda/api/runtime.pyx", line 593, in cupy_backends.cuda.api.runtime.malloc3DArray
E       check_status(status)
E     File "cupy_backends/cuda/api/runtime.pyx", line 265, in cupy_backends.cuda.api.runtime.check_status
E       raise CUDARuntimeError(status)
E   cupy_backends.cuda.api.runtime.CUDARuntimeError: hipErrorUnknown: hipErrorUnknown

cupy_backends/cuda/api/runtime.pyx:265: AssertionError
----------------------------- Captured stderr call -----------------------------
Traceback (most recent call last):
  File "cupy_backends/cuda/api/runtime.pyx", line 644, in cupy_backends.cuda.api.runtime.freeArray
    check_status(status)
  File "cupy_backends/cuda/api/runtime.pyx", line 265, in cupy_backends.cuda.api.runtime.check_status
    raise CUDARuntimeError(status)
cupy_backends.cuda.api.runtime.CUDARuntimeError: hipErrorUnknown: hipErrorUnknown
_ TestAffineTransformTextureMemory.test_affine_transform_texture_memory[_param_205_{mode='nearest', order=0, output=None, output_shape=None, shape=(10, 20, 30), theta=90}] _

self = <<cupyx_tests.scipy_tests.ndimage_tests.test_interpolation.TestAffineTransformTextureMemory object at 0x7fab39e41880>  parameter: {'mode': 'nearest', 'order': 0, 'output': None, 'output_shape': None, 'shape': (10, 20, 30), 'theta': 90}>
xp = <module 'cupy' from '/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.hXnTrEAC7u/cupy/cupy/__init__.py'>
scp = <module 'cupyx.scipy' from '/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.hXnTrEAC7u/cupy/cupyx/scipy/__init__.py'>

    @testing.numpy_cupy_allclose(atol=0.1, scipy_name='scp')
    def test_affine_transform_texture_memory(self, xp, scp):
        a = xp.ones(self.shape, dtype=xp.float32)
        center = numpy.divide(numpy.subtract(self.shape, 1), 2)
    
        if len(self.shape) == 2:
            matrix = self._2d_rotation_matrix(self.theta, center)
        elif len(self.shape) == 3:
            matrix = self._3d_rotation_matrix(self.theta, center)
        else:
            return pytest.xfail('Unsupported shape')
    
        if self.output == 'empty':
            output = xp.empty(self.shape, dtype=xp.float32)
            if self.output_shape:
                return pytest.skip('This combination is tested in '
                                   'test_invalid_texture_arguments')
        else:
            output = self.output
    
        if self.output_shape:
            output_shape = (self.output_shape, ) * len(self.shape)
        else:
            output_shape = self.output_shape
    
        if xp == cupy:
            m = cupyx.scipy.ndimage.affine_transform
            matrix = cupy.array(matrix)
>           return m(a, matrix, output_shape=output_shape,
                     output=output, order=self.order,
                     mode=self.mode, texture_memory=True)

tests/cupyx_tests/scipy_tests/ndimage_tests/test_interpolation.py:398: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
cupyx/scipy/ndimage/interpolation.py:376: in affine_transform
    return _texture.affine_transformation(data=input,
cupyx/_texture.py:168: in affine_transformation
    texture_object = _create_texture_object(data,
cupyx/_texture.py:98: in _create_texture_object
    array = texture.CUDAarray(texture_fmt, *data.shape[::-1])
cupy/cuda/texture.pyx:296: in cupy.cuda.texture.CUDAarray.__init__
    self.ptr = runtime.malloc3DArray(desc.ptr, width, height, depth,
cupy_backends/cuda/api/runtime.pyx:593: in cupy_backends.cuda.api.runtime.malloc3DArray
    check_status(status)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

>   raise CUDARuntimeError(status)
E   AssertionError: Only cupy raises error
E   
E   Traceback (most recent call last):
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.hXnTrEAC7u/cupy/cupy/testing/_helper.py", line 47, in _call_func
E       result = impl(self, *args, **kw)
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.hXnTrEAC7u/cupy/tests/cupyx_tests/scipy_tests/ndimage_tests/test_interpolation.py", line 398, in test_affine_transform_texture_memory
E       return m(a, matrix, output_shape=output_shape,
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.hXnTrEAC7u/cupy/cupyx/scipy/ndimage/interpolation.py", line 376, in affine_transform
E       return _texture.affine_transformation(data=input,
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.hXnTrEAC7u/cupy/cupyx/_texture.py", line 168, in affine_transformation
E       texture_object = _create_texture_object(data,
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.hXnTrEAC7u/cupy/cupyx/_texture.py", line 98, in _create_texture_object
E       array = texture.CUDAarray(texture_fmt, *data.shape[::-1])
E     File "cupy/cuda/texture.pyx", line 296, in cupy.cuda.texture.CUDAarray.__init__
E       self.ptr = runtime.malloc3DArray(desc.ptr, width, height, depth,
E     File "cupy_backends/cuda/api/runtime.pyx", line 593, in cupy_backends.cuda.api.runtime.malloc3DArray
E       check_status(status)
E     File "cupy_backends/cuda/api/runtime.pyx", line 265, in cupy_backends.cuda.api.runtime.check_status
E       raise CUDARuntimeError(status)
E   cupy_backends.cuda.api.runtime.CUDARuntimeError: hipErrorUnknown: hipErrorUnknown

cupy_backends/cuda/api/runtime.pyx:265: AssertionError
----------------------------- Captured stderr call -----------------------------
Traceback (most recent call last):
  File "cupy_backends/cuda/api/runtime.pyx", line 644, in cupy_backends.cuda.api.runtime.freeArray
    check_status(status)
  File "cupy_backends/cuda/api/runtime.pyx", line 265, in cupy_backends.cuda.api.runtime.check_status
    raise CUDARuntimeError(status)
cupy_backends.cuda.api.runtime.CUDARuntimeError: hipErrorUnknown: hipErrorUnknown
_ TestAffineTransformTextureMemory.test_affine_transform_texture_memory[_param_206_{mode='nearest', order=0, output=None, output_shape=None, shape=(10, 20, 30), theta=180}] _

self = <<cupyx_tests.scipy_tests.ndimage_tests.test_interpolation.TestAffineTransformTextureMemory object at 0x7fab3713d0a0>  parameter: {'mode': 'nearest', 'order': 0, 'output': None, 'output_shape': None, 'shape': (10, 20, 30), 'theta': 180}>
xp = <module 'cupy' from '/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.hXnTrEAC7u/cupy/cupy/__init__.py'>
scp = <module 'cupyx.scipy' from '/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.hXnTrEAC7u/cupy/cupyx/scipy/__init__.py'>

    @testing.numpy_cupy_allclose(atol=0.1, scipy_name='scp')
    def test_affine_transform_texture_memory(self, xp, scp):
        a = xp.ones(self.shape, dtype=xp.float32)
        center = numpy.divide(numpy.subtract(self.shape, 1), 2)
    
        if len(self.shape) == 2:
            matrix = self._2d_rotation_matrix(self.theta, center)
        elif len(self.shape) == 3:
            matrix = self._3d_rotation_matrix(self.theta, center)
        else:
            return pytest.xfail('Unsupported shape')
    
        if self.output == 'empty':
            output = xp.empty(self.shape, dtype=xp.float32)
            if self.output_shape:
                return pytest.skip('This combination is tested in '
                                   'test_invalid_texture_arguments')
        else:
            output = self.output
    
        if self.output_shape:
            output_shape = (self.output_shape, ) * len(self.shape)
        else:
            output_shape = self.output_shape
    
        if xp == cupy:
            m = cupyx.scipy.ndimage.affine_transform
            matrix = cupy.array(matrix)
>           return m(a, matrix, output_shape=output_shape,
                     output=output, order=self.order,
                     mode=self.mode, texture_memory=True)

tests/cupyx_tests/scipy_tests/ndimage_tests/test_interpolation.py:398: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
cupyx/scipy/ndimage/interpolation.py:376: in affine_transform
    return _texture.affine_transformation(data=input,
cupyx/_texture.py:168: in affine_transformation
    texture_object = _create_texture_object(data,
cupyx/_texture.py:98: in _create_texture_object
    array = texture.CUDAarray(texture_fmt, *data.shape[::-1])
cupy/cuda/texture.pyx:296: in cupy.cuda.texture.CUDAarray.__init__
    self.ptr = runtime.malloc3DArray(desc.ptr, width, height, depth,
cupy_backends/cuda/api/runtime.pyx:593: in cupy_backends.cuda.api.runtime.malloc3DArray
    check_status(status)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

>   raise CUDARuntimeError(status)
E   AssertionError: Only cupy raises error
E   
E   Traceback (most recent call last):
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.hXnTrEAC7u/cupy/cupy/testing/_helper.py", line 47, in _call_func
E       result = impl(self, *args, **kw)
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.hXnTrEAC7u/cupy/tests/cupyx_tests/scipy_tests/ndimage_tests/test_interpolation.py", line 398, in test_affine_transform_texture_memory
E       return m(a, matrix, output_shape=output_shape,
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.hXnTrEAC7u/cupy/cupyx/scipy/ndimage/interpolation.py", line 376, in affine_transform
E       return _texture.affine_transformation(data=input,
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.hXnTrEAC7u/cupy/cupyx/_texture.py", line 168, in affine_transformation
E       texture_object = _create_texture_object(data,
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.hXnTrEAC7u/cupy/cupyx/_texture.py", line 98, in _create_texture_object
E       array = texture.CUDAarray(texture_fmt, *data.shape[::-1])
E     File "cupy/cuda/texture.pyx", line 296, in cupy.cuda.texture.CUDAarray.__init__
E       self.ptr = runtime.malloc3DArray(desc.ptr, width, height, depth,
E     File "cupy_backends/cuda/api/runtime.pyx", line 593, in cupy_backends.cuda.api.runtime.malloc3DArray
E       check_status(status)
E     File "cupy_backends/cuda/api/runtime.pyx", line 265, in cupy_backends.cuda.api.runtime.check_status
E       raise CUDARuntimeError(status)
E   cupy_backends.cuda.api.runtime.CUDARuntimeError: hipErrorUnknown: hipErrorUnknown

cupy_backends/cuda/api/runtime.pyx:265: AssertionError
----------------------------- Captured stderr call -----------------------------
Traceback (most recent call last):
  File "cupy_backends/cuda/api/runtime.pyx", line 644, in cupy_backends.cuda.api.runtime.freeArray
    check_status(status)
  File "cupy_backends/cuda/api/runtime.pyx", line 265, in cupy_backends.cuda.api.runtime.check_status
    raise CUDARuntimeError(status)
cupy_backends.cuda.api.runtime.CUDARuntimeError: hipErrorUnknown: hipErrorUnknown
_ TestAffineTransformTextureMemory.test_affine_transform_texture_memory[_param_207_{mode='nearest', order=0, output=None, output_shape=None, shape=(10, 20, 30), theta=270}] _

self = <<cupyx_tests.scipy_tests.ndimage_tests.test_interpolation.TestAffineTransformTextureMemory object at 0x7fab38eb5550>  parameter: {'mode': 'nearest', 'order': 0, 'output': None, 'output_shape': None, 'shape': (10, 20, 30), 'theta': 270}>
xp = <module 'cupy' from '/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.hXnTrEAC7u/cupy/cupy/__init__.py'>
scp = <module 'cupyx.scipy' from '/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.hXnTrEAC7u/cupy/cupyx/scipy/__init__.py'>

    @testing.numpy_cupy_allclose(atol=0.1, scipy_name='scp')
    def test_affine_transform_texture_memory(self, xp, scp):
        a = xp.ones(self.shape, dtype=xp.float32)
        center = numpy.divide(numpy.subtract(self.shape, 1), 2)
    
        if len(self.shape) == 2:
            matrix = self._2d_rotation_matrix(self.theta, center)
        elif len(self.shape) == 3:
            matrix = self._3d_rotation_matrix(self.theta, center)
        else:
            return pytest.xfail('Unsupported shape')
    
        if self.output == 'empty':
            output = xp.empty(self.shape, dtype=xp.float32)
            if self.output_shape:
                return pytest.skip('This combination is tested in '
                                   'test_invalid_texture_arguments')
        else:
            output = self.output
    
        if self.output_shape:
            output_shape = (self.output_shape, ) * len(self.shape)
        else:
            output_shape = self.output_shape
    
        if xp == cupy:
            m = cupyx.scipy.ndimage.affine_transform
            matrix = cupy.array(matrix)
>           return m(a, matrix, output_shape=output_shape,
                     output=output, order=self.order,
                     mode=self.mode, texture_memory=True)

tests/cupyx_tests/scipy_tests/ndimage_tests/test_interpolation.py:398: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
cupyx/scipy/ndimage/interpolation.py:376: in affine_transform
    return _texture.affine_transformation(data=input,
cupyx/_texture.py:168: in affine_transformation
    texture_object = _create_texture_object(data,
cupyx/_texture.py:98: in _create_texture_object
    array = texture.CUDAarray(texture_fmt, *data.shape[::-1])
cupy/cuda/texture.pyx:296: in cupy.cuda.texture.CUDAarray.__init__
    self.ptr = runtime.malloc3DArray(desc.ptr, width, height, depth,
cupy_backends/cuda/api/runtime.pyx:593: in cupy_backends.cuda.api.runtime.malloc3DArray
    check_status(status)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

>   raise CUDARuntimeError(status)
E   AssertionError: Only cupy raises error
E   
E   Traceback (most recent call last):
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.hXnTrEAC7u/cupy/cupy/testing/_helper.py", line 47, in _call_func
E       result = impl(self, *args, **kw)
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.hXnTrEAC7u/cupy/tests/cupyx_tests/scipy_tests/ndimage_tests/test_interpolation.py", line 398, in test_affine_transform_texture_memory
E       return m(a, matrix, output_shape=output_shape,
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.hXnTrEAC7u/cupy/cupyx/scipy/ndimage/interpolation.py", line 376, in affine_transform
E       return _texture.affine_transformation(data=input,
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.hXnTrEAC7u/cupy/cupyx/_texture.py", line 168, in affine_transformation
E       texture_object = _create_texture_object(data,
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.hXnTrEAC7u/cupy/cupyx/_texture.py", line 98, in _create_texture_object
E       array = texture.CUDAarray(texture_fmt, *data.shape[::-1])
E     File "cupy/cuda/texture.pyx", line 296, in cupy.cuda.texture.CUDAarray.__init__
E       self.ptr = runtime.malloc3DArray(desc.ptr, width, height, depth,
E     File "cupy_backends/cuda/api/runtime.pyx", line 593, in cupy_backends.cuda.api.runtime.malloc3DArray
E       check_status(status)
E     File "cupy_backends/cuda/api/runtime.pyx", line 265, in cupy_backends.cuda.api.runtime.check_status
E       raise CUDARuntimeError(status)
E   cupy_backends.cuda.api.runtime.CUDARuntimeError: hipErrorUnknown: hipErrorUnknown

cupy_backends/cuda/api/runtime.pyx:265: AssertionError
----------------------------- Captured stderr call -----------------------------
Traceback (most recent call last):
  File "cupy_backends/cuda/api/runtime.pyx", line 644, in cupy_backends.cuda.api.runtime.freeArray
    check_status(status)
  File "cupy_backends/cuda/api/runtime.pyx", line 265, in cupy_backends.cuda.api.runtime.check_status
    raise CUDARuntimeError(status)
cupy_backends.cuda.api.runtime.CUDARuntimeError: hipErrorUnknown: hipErrorUnknown
_ TestAffineTransformTextureMemory.test_affine_transform_texture_memory[_param_208_{mode='nearest', order=0, output=None, output_shape=10, shape=(100, 100), theta=0}] _

self = <<cupyx_tests.scipy_tests.ndimage_tests.test_interpolation.TestAffineTransformTextureMemory object at 0x7fab39749520>  parameter: {'mode': 'nearest', 'order': 0, 'output': None, 'output_shape': 10, 'shape': (100, 100), 'theta': 0}>
xp = <module 'cupy' from '/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.hXnTrEAC7u/cupy/cupy/__init__.py'>
scp = <module 'cupyx.scipy' from '/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.hXnTrEAC7u/cupy/cupyx/scipy/__init__.py'>

    @testing.numpy_cupy_allclose(atol=0.1, scipy_name='scp')
    def test_affine_transform_texture_memory(self, xp, scp):
        a = xp.ones(self.shape, dtype=xp.float32)
        center = numpy.divide(numpy.subtract(self.shape, 1), 2)
    
        if len(self.shape) == 2:
            matrix = self._2d_rotation_matrix(self.theta, center)
        elif len(self.shape) == 3:
            matrix = self._3d_rotation_matrix(self.theta, center)
        else:
            return pytest.xfail('Unsupported shape')
    
        if self.output == 'empty':
            output = xp.empty(self.shape, dtype=xp.float32)
            if self.output_shape:
                return pytest.skip('This combination is tested in '
                                   'test_invalid_texture_arguments')
        else:
            output = self.output
    
        if self.output_shape:
            output_shape = (self.output_shape, ) * len(self.shape)
        else:
            output_shape = self.output_shape
    
        if xp == cupy:
            m = cupyx.scipy.ndimage.affine_transform
            matrix = cupy.array(matrix)
>           return m(a, matrix, output_shape=output_shape,
                     output=output, order=self.order,
                     mode=self.mode, texture_memory=True)

tests/cupyx_tests/scipy_tests/ndimage_tests/test_interpolation.py:398: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
cupyx/scipy/ndimage/interpolation.py:376: in affine_transform
    return _texture.affine_transformation(data=input,
cupyx/_texture.py:168: in affine_transformation
    texture_object = _create_texture_object(data,
cupyx/_texture.py:98: in _create_texture_object
    array = texture.CUDAarray(texture_fmt, *data.shape[::-1])
cupy/cuda/texture.pyx:296: in cupy.cuda.texture.CUDAarray.__init__
    self.ptr = runtime.malloc3DArray(desc.ptr, width, height, depth,
cupy_backends/cuda/api/runtime.pyx:593: in cupy_backends.cuda.api.runtime.malloc3DArray
    check_status(status)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

>   raise CUDARuntimeError(status)
E   AssertionError: Only cupy raises error
E   
E   Traceback (most recent call last):
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.hXnTrEAC7u/cupy/cupy/testing/_helper.py", line 47, in _call_func
E       result = impl(self, *args, **kw)
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.hXnTrEAC7u/cupy/tests/cupyx_tests/scipy_tests/ndimage_tests/test_interpolation.py", line 398, in test_affine_transform_texture_memory
E       return m(a, matrix, output_shape=output_shape,
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.hXnTrEAC7u/cupy/cupyx/scipy/ndimage/interpolation.py", line 376, in affine_transform
E       return _texture.affine_transformation(data=input,
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.hXnTrEAC7u/cupy/cupyx/_texture.py", line 168, in affine_transformation
E       texture_object = _create_texture_object(data,
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.hXnTrEAC7u/cupy/cupyx/_texture.py", line 98, in _create_texture_object
E       array = texture.CUDAarray(texture_fmt, *data.shape[::-1])
E     File "cupy/cuda/texture.pyx", line 296, in cupy.cuda.texture.CUDAarray.__init__
E       self.ptr = runtime.malloc3DArray(desc.ptr, width, height, depth,
E     File "cupy_backends/cuda/api/runtime.pyx", line 593, in cupy_backends.cuda.api.runtime.malloc3DArray
E       check_status(status)
E     File "cupy_backends/cuda/api/runtime.pyx", line 265, in cupy_backends.cuda.api.runtime.check_status
E       raise CUDARuntimeError(status)
E   cupy_backends.cuda.api.runtime.CUDARuntimeError: hipErrorUnknown: hipErrorUnknown

cupy_backends/cuda/api/runtime.pyx:265: AssertionError
----------------------------- Captured stderr call -----------------------------
Traceback (most recent call last):
  File "cupy_backends/cuda/api/runtime.pyx", line 644, in cupy_backends.cuda.api.runtime.freeArray
    check_status(status)
  File "cupy_backends/cuda/api/runtime.pyx", line 265, in cupy_backends.cuda.api.runtime.check_status
    raise CUDARuntimeError(status)
cupy_backends.cuda.api.runtime.CUDARuntimeError: hipErrorUnknown: hipErrorUnknown
_ TestAffineTransformTextureMemory.test_affine_transform_texture_memory[_param_209_{mode='nearest', order=0, output=None, output_shape=10, shape=(100, 100), theta=90}] _

self = <<cupyx_tests.scipy_tests.ndimage_tests.test_interpolation.TestAffineTransformTextureMemory object at 0x7fab387954c0>  parameter: {'mode': 'nearest', 'order': 0, 'output': None, 'output_shape': 10, 'shape': (100, 100), 'theta': 90}>
xp = <module 'cupy' from '/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.hXnTrEAC7u/cupy/cupy/__init__.py'>
scp = <module 'cupyx.scipy' from '/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.hXnTrEAC7u/cupy/cupyx/scipy/__init__.py'>

    @testing.numpy_cupy_allclose(atol=0.1, scipy_name='scp')
    def test_affine_transform_texture_memory(self, xp, scp):
        a = xp.ones(self.shape, dtype=xp.float32)
        center = numpy.divide(numpy.subtract(self.shape, 1), 2)
    
        if len(self.shape) == 2:
            matrix = self._2d_rotation_matrix(self.theta, center)
        elif len(self.shape) == 3:
            matrix = self._3d_rotation_matrix(self.theta, center)
        else:
            return pytest.xfail('Unsupported shape')
    
        if self.output == 'empty':
            output = xp.empty(self.shape, dtype=xp.float32)
            if self.output_shape:
                return pytest.skip('This combination is tested in '
                                   'test_invalid_texture_arguments')
        else:
            output = self.output
    
        if self.output_shape:
            output_shape = (self.output_shape, ) * len(self.shape)
        else:
            output_shape = self.output_shape
    
        if xp == cupy:
            m = cupyx.scipy.ndimage.affine_transform
            matrix = cupy.array(matrix)
>           return m(a, matrix, output_shape=output_shape,
                     output=output, order=self.order,
                     mode=self.mode, texture_memory=True)

tests/cupyx_tests/scipy_tests/ndimage_tests/test_interpolation.py:398: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
cupyx/scipy/ndimage/interpolation.py:376: in affine_transform
    return _texture.affine_transformation(data=input,
cupyx/_texture.py:168: in affine_transformation
    texture_object = _create_texture_object(data,
cupyx/_texture.py:98: in _create_texture_object
    array = texture.CUDAarray(texture_fmt, *data.shape[::-1])
cupy/cuda/texture.pyx:296: in cupy.cuda.texture.CUDAarray.__init__
    self.ptr = runtime.malloc3DArray(desc.ptr, width, height, depth,
cupy_backends/cuda/api/runtime.pyx:593: in cupy_backends.cuda.api.runtime.malloc3DArray
    check_status(status)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

>   raise CUDARuntimeError(status)
E   AssertionError: Only cupy raises error
E   
E   Traceback (most recent call last):
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.hXnTrEAC7u/cupy/cupy/testing/_helper.py", line 47, in _call_func
E       result = impl(self, *args, **kw)
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.hXnTrEAC7u/cupy/tests/cupyx_tests/scipy_tests/ndimage_tests/test_interpolation.py", line 398, in test_affine_transform_texture_memory
E       return m(a, matrix, output_shape=output_shape,
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.hXnTrEAC7u/cupy/cupyx/scipy/ndimage/interpolation.py", line 376, in affine_transform
E       return _texture.affine_transformation(data=input,
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.hXnTrEAC7u/cupy/cupyx/_texture.py", line 168, in affine_transformation
E       texture_object = _create_texture_object(data,
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.hXnTrEAC7u/cupy/cupyx/_texture.py", line 98, in _create_texture_object
E       array = texture.CUDAarray(texture_fmt, *data.shape[::-1])
E     File "cupy/cuda/texture.pyx", line 296, in cupy.cuda.texture.CUDAarray.__init__
E       self.ptr = runtime.malloc3DArray(desc.ptr, width, height, depth,
E     File "cupy_backends/cuda/api/runtime.pyx", line 593, in cupy_backends.cuda.api.runtime.malloc3DArray
E       check_status(status)
E     File "cupy_backends/cuda/api/runtime.pyx", line 265, in cupy_backends.cuda.api.runtime.check_status
E       raise CUDARuntimeError(status)
E   cupy_backends.cuda.api.runtime.CUDARuntimeError: hipErrorUnknown: hipErrorUnknown

cupy_backends/cuda/api/runtime.pyx:265: AssertionError
----------------------------- Captured stderr call -----------------------------
Traceback (most recent call last):
  File "cupy_backends/cuda/api/runtime.pyx", line 644, in cupy_backends.cuda.api.runtime.freeArray
    check_status(status)
  File "cupy_backends/cuda/api/runtime.pyx", line 265, in cupy_backends.cuda.api.runtime.check_status
    raise CUDARuntimeError(status)
cupy_backends.cuda.api.runtime.CUDARuntimeError: hipErrorUnknown: hipErrorUnknown
_ TestAffineTransformTextureMemory.test_affine_transform_texture_memory[_param_210_{mode='nearest', order=0, output=None, output_shape=10, shape=(100, 100), theta=180}] _

self = <<cupyx_tests.scipy_tests.ndimage_tests.test_interpolation.TestAffineTransformTextureMemory object at 0x7fac51549e50>  parameter: {'mode': 'nearest', 'order': 0, 'output': None, 'output_shape': 10, 'shape': (100, 100), 'theta': 180}>
xp = <module 'cupy' from '/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.hXnTrEAC7u/cupy/cupy/__init__.py'>
scp = <module 'cupyx.scipy' from '/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.hXnTrEAC7u/cupy/cupyx/scipy/__init__.py'>

    @testing.numpy_cupy_allclose(atol=0.1, scipy_name='scp')
    def test_affine_transform_texture_memory(self, xp, scp):
        a = xp.ones(self.shape, dtype=xp.float32)
        center = numpy.divide(numpy.subtract(self.shape, 1), 2)
    
        if len(self.shape) == 2:
            matrix = self._2d_rotation_matrix(self.theta, center)
        elif len(self.shape) == 3:
            matrix = self._3d_rotation_matrix(self.theta, center)
        else:
            return pytest.xfail('Unsupported shape')
    
        if self.output == 'empty':
            output = xp.empty(self.shape, dtype=xp.float32)
            if self.output_shape:
                return pytest.skip('This combination is tested in '
                                   'test_invalid_texture_arguments')
        else:
            output = self.output
    
        if self.output_shape:
            output_shape = (self.output_shape, ) * len(self.shape)
        else:
            output_shape = self.output_shape
    
        if xp == cupy:
            m = cupyx.scipy.ndimage.affine_transform
            matrix = cupy.array(matrix)
>           return m(a, matrix, output_shape=output_shape,
                     output=output, order=self.order,
                     mode=self.mode, texture_memory=True)

tests/cupyx_tests/scipy_tests/ndimage_tests/test_interpolation.py:398: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
cupyx/scipy/ndimage/interpolation.py:376: in affine_transform
    return _texture.affine_transformation(data=input,
cupyx/_texture.py:168: in affine_transformation
    texture_object = _create_texture_object(data,
cupyx/_texture.py:98: in _create_texture_object
    array = texture.CUDAarray(texture_fmt, *data.shape[::-1])
cupy/cuda/texture.pyx:296: in cupy.cuda.texture.CUDAarray.__init__
    self.ptr = runtime.malloc3DArray(desc.ptr, width, height, depth,
cupy_backends/cuda/api/runtime.pyx:593: in cupy_backends.cuda.api.runtime.malloc3DArray
    check_status(status)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

>   raise CUDARuntimeError(status)
E   AssertionError: Only cupy raises error
E   
E   Traceback (most recent call last):
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.hXnTrEAC7u/cupy/cupy/testing/_helper.py", line 47, in _call_func
E       result = impl(self, *args, **kw)
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.hXnTrEAC7u/cupy/tests/cupyx_tests/scipy_tests/ndimage_tests/test_interpolation.py", line 398, in test_affine_transform_texture_memory
E       return m(a, matrix, output_shape=output_shape,
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.hXnTrEAC7u/cupy/cupyx/scipy/ndimage/interpolation.py", line 376, in affine_transform
E       return _texture.affine_transformation(data=input,
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.hXnTrEAC7u/cupy/cupyx/_texture.py", line 168, in affine_transformation
E       texture_object = _create_texture_object(data,
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.hXnTrEAC7u/cupy/cupyx/_texture.py", line 98, in _create_texture_object
E       array = texture.CUDAarray(texture_fmt, *data.shape[::-1])
E     File "cupy/cuda/texture.pyx", line 296, in cupy.cuda.texture.CUDAarray.__init__
E       self.ptr = runtime.malloc3DArray(desc.ptr, width, height, depth,
E     File "cupy_backends/cuda/api/runtime.pyx", line 593, in cupy_backends.cuda.api.runtime.malloc3DArray
E       check_status(status)
E     File "cupy_backends/cuda/api/runtime.pyx", line 265, in cupy_backends.cuda.api.runtime.check_status
E       raise CUDARuntimeError(status)
E   cupy_backends.cuda.api.runtime.CUDARuntimeError: hipErrorUnknown: hipErrorUnknown

cupy_backends/cuda/api/runtime.pyx:265: AssertionError
----------------------------- Captured stderr call -----------------------------
Traceback (most recent call last):
  File "cupy_backends/cuda/api/runtime.pyx", line 644, in cupy_backends.cuda.api.runtime.freeArray
    check_status(status)
  File "cupy_backends/cuda/api/runtime.pyx", line 265, in cupy_backends.cuda.api.runtime.check_status
    raise CUDARuntimeError(status)
cupy_backends.cuda.api.runtime.CUDARuntimeError: hipErrorUnknown: hipErrorUnknown
_ TestAffineTransformTextureMemory.test_affine_transform_texture_memory[_param_211_{mode='nearest', order=0, output=None, output_shape=10, shape=(100, 100), theta=270}] _

self = <<cupyx_tests.scipy_tests.ndimage_tests.test_interpolation.TestAffineTransformTextureMemory object at 0x7fab36e9e490>  parameter: {'mode': 'nearest', 'order': 0, 'output': None, 'output_shape': 10, 'shape': (100, 100), 'theta': 270}>
xp = <module 'cupy' from '/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.hXnTrEAC7u/cupy/cupy/__init__.py'>
scp = <module 'cupyx.scipy' from '/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.hXnTrEAC7u/cupy/cupyx/scipy/__init__.py'>

    @testing.numpy_cupy_allclose(atol=0.1, scipy_name='scp')
    def test_affine_transform_texture_memory(self, xp, scp):
        a = xp.ones(self.shape, dtype=xp.float32)
        center = numpy.divide(numpy.subtract(self.shape, 1), 2)
    
        if len(self.shape) == 2:
            matrix = self._2d_rotation_matrix(self.theta, center)
        elif len(self.shape) == 3:
            matrix = self._3d_rotation_matrix(self.theta, center)
        else:
            return pytest.xfail('Unsupported shape')
    
        if self.output == 'empty':
            output = xp.empty(self.shape, dtype=xp.float32)
            if self.output_shape:
                return pytest.skip('This combination is tested in '
                                   'test_invalid_texture_arguments')
        else:
            output = self.output
    
        if self.output_shape:
            output_shape = (self.output_shape, ) * len(self.shape)
        else:
            output_shape = self.output_shape
    
        if xp == cupy:
            m = cupyx.scipy.ndimage.affine_transform
            matrix = cupy.array(matrix)
>           return m(a, matrix, output_shape=output_shape,
                     output=output, order=self.order,
                     mode=self.mode, texture_memory=True)

tests/cupyx_tests/scipy_tests/ndimage_tests/test_interpolation.py:398: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
cupyx/scipy/ndimage/interpolation.py:376: in affine_transform
    return _texture.affine_transformation(data=input,
cupyx/_texture.py:168: in affine_transformation
    texture_object = _create_texture_object(data,
cupyx/_texture.py:98: in _create_texture_object
    array = texture.CUDAarray(texture_fmt, *data.shape[::-1])
cupy/cuda/texture.pyx:296: in cupy.cuda.texture.CUDAarray.__init__
    self.ptr = runtime.malloc3DArray(desc.ptr, width, height, depth,
cupy_backends/cuda/api/runtime.pyx:593: in cupy_backends.cuda.api.runtime.malloc3DArray
    check_status(status)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

>   raise CUDARuntimeError(status)
E   AssertionError: Only cupy raises error
E   
E   Traceback (most recent call last):
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.hXnTrEAC7u/cupy/cupy/testing/_helper.py", line 47, in _call_func
E       result = impl(self, *args, **kw)
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.hXnTrEAC7u/cupy/tests/cupyx_tests/scipy_tests/ndimage_tests/test_interpolation.py", line 398, in test_affine_transform_texture_memory
E       return m(a, matrix, output_shape=output_shape,
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.hXnTrEAC7u/cupy/cupyx/scipy/ndimage/interpolation.py", line 376, in affine_transform
E       return _texture.affine_transformation(data=input,
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.hXnTrEAC7u/cupy/cupyx/_texture.py", line 168, in affine_transformation
E       texture_object = _create_texture_object(data,
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.hXnTrEAC7u/cupy/cupyx/_texture.py", line 98, in _create_texture_object
E       array = texture.CUDAarray(texture_fmt, *data.shape[::-1])
E     File "cupy/cuda/texture.pyx", line 296, in cupy.cuda.texture.CUDAarray.__init__
E       self.ptr = runtime.malloc3DArray(desc.ptr, width, height, depth,
E     File "cupy_backends/cuda/api/runtime.pyx", line 593, in cupy_backends.cuda.api.runtime.malloc3DArray
E       check_status(status)
E     File "cupy_backends/cuda/api/runtime.pyx", line 265, in cupy_backends.cuda.api.runtime.check_status
E       raise CUDARuntimeError(status)
E   cupy_backends.cuda.api.runtime.CUDARuntimeError: hipErrorUnknown: hipErrorUnknown

cupy_backends/cuda/api/runtime.pyx:265: AssertionError
----------------------------- Captured stderr call -----------------------------
Traceback (most recent call last):
  File "cupy_backends/cuda/api/runtime.pyx", line 644, in cupy_backends.cuda.api.runtime.freeArray
    check_status(status)
  File "cupy_backends/cuda/api/runtime.pyx", line 265, in cupy_backends.cuda.api.runtime.check_status
    raise CUDARuntimeError(status)
cupy_backends.cuda.api.runtime.CUDARuntimeError: hipErrorUnknown: hipErrorUnknown
_ TestAffineTransformTextureMemory.test_affine_transform_texture_memory[_param_212_{mode='nearest', order=0, output=None, output_shape=10, shape=(10, 20), theta=0}] _

self = <<cupyx_tests.scipy_tests.ndimage_tests.test_interpolation.TestAffineTransformTextureMemory object at 0x7fab3721ef10>  parameter: {'mode': 'nearest', 'order': 0, 'output': None, 'output_shape': 10, 'shape': (10, 20), 'theta': 0}>
xp = <module 'cupy' from '/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.hXnTrEAC7u/cupy/cupy/__init__.py'>
scp = <module 'cupyx.scipy' from '/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.hXnTrEAC7u/cupy/cupyx/scipy/__init__.py'>

    @testing.numpy_cupy_allclose(atol=0.1, scipy_name='scp')
    def test_affine_transform_texture_memory(self, xp, scp):
        a = xp.ones(self.shape, dtype=xp.float32)
        center = numpy.divide(numpy.subtract(self.shape, 1), 2)
    
        if len(self.shape) == 2:
            matrix = self._2d_rotation_matrix(self.theta, center)
        elif len(self.shape) == 3:
            matrix = self._3d_rotation_matrix(self.theta, center)
        else:
            return pytest.xfail('Unsupported shape')
    
        if self.output == 'empty':
            output = xp.empty(self.shape, dtype=xp.float32)
            if self.output_shape:
                return pytest.skip('This combination is tested in '
                                   'test_invalid_texture_arguments')
        else:
            output = self.output
    
        if self.output_shape:
            output_shape = (self.output_shape, ) * len(self.shape)
        else:
            output_shape = self.output_shape
    
        if xp == cupy:
            m = cupyx.scipy.ndimage.affine_transform
            matrix = cupy.array(matrix)
>           return m(a, matrix, output_shape=output_shape,
                     output=output, order=self.order,
                     mode=self.mode, texture_memory=True)

tests/cupyx_tests/scipy_tests/ndimage_tests/test_interpolation.py:398: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
cupyx/scipy/ndimage/interpolation.py:376: in affine_transform
    return _texture.affine_transformation(data=input,
cupyx/_texture.py:168: in affine_transformation
    texture_object = _create_texture_object(data,
cupyx/_texture.py:98: in _create_texture_object
    array = texture.CUDAarray(texture_fmt, *data.shape[::-1])
cupy/cuda/texture.pyx:296: in cupy.cuda.texture.CUDAarray.__init__
    self.ptr = runtime.malloc3DArray(desc.ptr, width, height, depth,
cupy_backends/cuda/api/runtime.pyx:593: in cupy_backends.cuda.api.runtime.malloc3DArray
    check_status(status)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

>   raise CUDARuntimeError(status)
E   AssertionError: Only cupy raises error
E   
E   Traceback (most recent call last):
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.hXnTrEAC7u/cupy/cupy/testing/_helper.py", line 47, in _call_func
E       result = impl(self, *args, **kw)
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.hXnTrEAC7u/cupy/tests/cupyx_tests/scipy_tests/ndimage_tests/test_interpolation.py", line 398, in test_affine_transform_texture_memory
E       return m(a, matrix, output_shape=output_shape,
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.hXnTrEAC7u/cupy/cupyx/scipy/ndimage/interpolation.py", line 376, in affine_transform
E       return _texture.affine_transformation(data=input,
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.hXnTrEAC7u/cupy/cupyx/_texture.py", line 168, in affine_transformation
E       texture_object = _create_texture_object(data,
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.hXnTrEAC7u/cupy/cupyx/_texture.py", line 98, in _create_texture_object
E       array = texture.CUDAarray(texture_fmt, *data.shape[::-1])
E     File "cupy/cuda/texture.pyx", line 296, in cupy.cuda.texture.CUDAarray.__init__
E       self.ptr = runtime.malloc3DArray(desc.ptr, width, height, depth,
E     File "cupy_backends/cuda/api/runtime.pyx", line 593, in cupy_backends.cuda.api.runtime.malloc3DArray
E       check_status(status)
E     File "cupy_backends/cuda/api/runtime.pyx", line 265, in cupy_backends.cuda.api.runtime.check_status
E       raise CUDARuntimeError(status)
E   cupy_backends.cuda.api.runtime.CUDARuntimeError: hipErrorUnknown: hipErrorUnknown

cupy_backends/cuda/api/runtime.pyx:265: AssertionError
----------------------------- Captured stderr call -----------------------------
Traceback (most recent call last):
  File "cupy_backends/cuda/api/runtime.pyx", line 644, in cupy_backends.cuda.api.runtime.freeArray
    check_status(status)
  File "cupy_backends/cuda/api/runtime.pyx", line 265, in cupy_backends.cuda.api.runtime.check_status
    raise CUDARuntimeError(status)
cupy_backends.cuda.api.runtime.CUDARuntimeError: hipErrorUnknown: hipErrorUnknown
_ TestAffineTransformTextureMemory.test_affine_transform_texture_memory[_param_213_{mode='nearest', order=0, output=None, output_shape=10, shape=(10, 20), theta=90}] _

self = <<cupyx_tests.scipy_tests.ndimage_tests.test_interpolation.TestAffineTransformTextureMemory object at 0x7fac510f1d60>  parameter: {'mode': 'nearest', 'order': 0, 'output': None, 'output_shape': 10, 'shape': (10, 20), 'theta': 90}>
xp = <module 'cupy' from '/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.hXnTrEAC7u/cupy/cupy/__init__.py'>
scp = <module 'cupyx.scipy' from '/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.hXnTrEAC7u/cupy/cupyx/scipy/__init__.py'>

    @testing.numpy_cupy_allclose(atol=0.1, scipy_name='scp')
    def test_affine_transform_texture_memory(self, xp, scp):
        a = xp.ones(self.shape, dtype=xp.float32)
        center = numpy.divide(numpy.subtract(self.shape, 1), 2)
    
        if len(self.shape) == 2:
            matrix = self._2d_rotation_matrix(self.theta, center)
        elif len(self.shape) == 3:
            matrix = self._3d_rotation_matrix(self.theta, center)
        else:
            return pytest.xfail('Unsupported shape')
    
        if self.output == 'empty':
            output = xp.empty(self.shape, dtype=xp.float32)
            if self.output_shape:
                return pytest.skip('This combination is tested in '
                                   'test_invalid_texture_arguments')
        else:
            output = self.output
    
        if self.output_shape:
            output_shape = (self.output_shape, ) * len(self.shape)
        else:
            output_shape = self.output_shape
    
        if xp == cupy:
            m = cupyx.scipy.ndimage.affine_transform
            matrix = cupy.array(matrix)
>           return m(a, matrix, output_shape=output_shape,
                     output=output, order=self.order,
                     mode=self.mode, texture_memory=True)

tests/cupyx_tests/scipy_tests/ndimage_tests/test_interpolation.py:398: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
cupyx/scipy/ndimage/interpolation.py:376: in affine_transform
    return _texture.affine_transformation(data=input,
cupyx/_texture.py:168: in affine_transformation
    texture_object = _create_texture_object(data,
cupyx/_texture.py:98: in _create_texture_object
    array = texture.CUDAarray(texture_fmt, *data.shape[::-1])
cupy/cuda/texture.pyx:296: in cupy.cuda.texture.CUDAarray.__init__
    self.ptr = runtime.malloc3DArray(desc.ptr, width, height, depth,
cupy_backends/cuda/api/runtime.pyx:593: in cupy_backends.cuda.api.runtime.malloc3DArray
    check_status(status)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

>   raise CUDARuntimeError(status)
E   AssertionError: Only cupy raises error
E   
E   Traceback (most recent call last):
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.hXnTrEAC7u/cupy/cupy/testing/_helper.py", line 47, in _call_func
E       result = impl(self, *args, **kw)
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.hXnTrEAC7u/cupy/tests/cupyx_tests/scipy_tests/ndimage_tests/test_interpolation.py", line 398, in test_affine_transform_texture_memory
E       return m(a, matrix, output_shape=output_shape,
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.hXnTrEAC7u/cupy/cupyx/scipy/ndimage/interpolation.py", line 376, in affine_transform
E       return _texture.affine_transformation(data=input,
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.hXnTrEAC7u/cupy/cupyx/_texture.py", line 168, in affine_transformation
E       texture_object = _create_texture_object(data,
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.hXnTrEAC7u/cupy/cupyx/_texture.py", line 98, in _create_texture_object
E       array = texture.CUDAarray(texture_fmt, *data.shape[::-1])
E     File "cupy/cuda/texture.pyx", line 296, in cupy.cuda.texture.CUDAarray.__init__
E       self.ptr = runtime.malloc3DArray(desc.ptr, width, height, depth,
E     File "cupy_backends/cuda/api/runtime.pyx", line 593, in cupy_backends.cuda.api.runtime.malloc3DArray
E       check_status(status)
E     File "cupy_backends/cuda/api/runtime.pyx", line 265, in cupy_backends.cuda.api.runtime.check_status
E       raise CUDARuntimeError(status)
E   cupy_backends.cuda.api.runtime.CUDARuntimeError: hipErrorUnknown: hipErrorUnknown

cupy_backends/cuda/api/runtime.pyx:265: AssertionError
----------------------------- Captured stderr call -----------------------------
Traceback (most recent call last):
  File "cupy_backends/cuda/api/runtime.pyx", line 644, in cupy_backends.cuda.api.runtime.freeArray
    check_status(status)
  File "cupy_backends/cuda/api/runtime.pyx", line 265, in cupy_backends.cuda.api.runtime.check_status
    raise CUDARuntimeError(status)
cupy_backends.cuda.api.runtime.CUDARuntimeError: hipErrorUnknown: hipErrorUnknown
_ TestAffineTransformTextureMemory.test_affine_transform_texture_memory[_param_214_{mode='nearest', order=0, output=None, output_shape=10, shape=(10, 20), theta=180}] _

self = <<cupyx_tests.scipy_tests.ndimage_tests.test_interpolation.TestAffineTransformTextureMemory object at 0x7fab3726c0a0>  parameter: {'mode': 'nearest', 'order': 0, 'output': None, 'output_shape': 10, 'shape': (10, 20), 'theta': 180}>
xp = <module 'cupy' from '/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.hXnTrEAC7u/cupy/cupy/__init__.py'>
scp = <module 'cupyx.scipy' from '/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.hXnTrEAC7u/cupy/cupyx/scipy/__init__.py'>

    @testing.numpy_cupy_allclose(atol=0.1, scipy_name='scp')
    def test_affine_transform_texture_memory(self, xp, scp):
        a = xp.ones(self.shape, dtype=xp.float32)
        center = numpy.divide(numpy.subtract(self.shape, 1), 2)
    
        if len(self.shape) == 2:
            matrix = self._2d_rotation_matrix(self.theta, center)
        elif len(self.shape) == 3:
            matrix = self._3d_rotation_matrix(self.theta, center)
        else:
            return pytest.xfail('Unsupported shape')
    
        if self.output == 'empty':
            output = xp.empty(self.shape, dtype=xp.float32)
            if self.output_shape:
                return pytest.skip('This combination is tested in '
                                   'test_invalid_texture_arguments')
        else:
            output = self.output
    
        if self.output_shape:
            output_shape = (self.output_shape, ) * len(self.shape)
        else:
            output_shape = self.output_shape
    
        if xp == cupy:
            m = cupyx.scipy.ndimage.affine_transform
            matrix = cupy.array(matrix)
>           return m(a, matrix, output_shape=output_shape,
                     output=output, order=self.order,
                     mode=self.mode, texture_memory=True)

tests/cupyx_tests/scipy_tests/ndimage_tests/test_interpolation.py:398: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
cupyx/scipy/ndimage/interpolation.py:376: in affine_transform
    return _texture.affine_transformation(data=input,
cupyx/_texture.py:168: in affine_transformation
    texture_object = _create_texture_object(data,
cupyx/_texture.py:98: in _create_texture_object
    array = texture.CUDAarray(texture_fmt, *data.shape[::-1])
cupy/cuda/texture.pyx:296: in cupy.cuda.texture.CUDAarray.__init__
    self.ptr = runtime.malloc3DArray(desc.ptr, width, height, depth,
cupy_backends/cuda/api/runtime.pyx:593: in cupy_backends.cuda.api.runtime.malloc3DArray
    check_status(status)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

>   raise CUDARuntimeError(status)
E   AssertionError: Only cupy raises error
E   
E   Traceback (most recent call last):
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.hXnTrEAC7u/cupy/cupy/testing/_helper.py", line 47, in _call_func
E       result = impl(self, *args, **kw)
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.hXnTrEAC7u/cupy/tests/cupyx_tests/scipy_tests/ndimage_tests/test_interpolation.py", line 398, in test_affine_transform_texture_memory
E       return m(a, matrix, output_shape=output_shape,
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.hXnTrEAC7u/cupy/cupyx/scipy/ndimage/interpolation.py", line 376, in affine_transform
E       return _texture.affine_transformation(data=input,
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.hXnTrEAC7u/cupy/cupyx/_texture.py", line 168, in affine_transformation
E       texture_object = _create_texture_object(data,
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.hXnTrEAC7u/cupy/cupyx/_texture.py", line 98, in _create_texture_object
E       array = texture.CUDAarray(texture_fmt, *data.shape[::-1])
E     File "cupy/cuda/texture.pyx", line 296, in cupy.cuda.texture.CUDAarray.__init__
E       self.ptr = runtime.malloc3DArray(desc.ptr, width, height, depth,
E     File "cupy_backends/cuda/api/runtime.pyx", line 593, in cupy_backends.cuda.api.runtime.malloc3DArray
E       check_status(status)
E     File "cupy_backends/cuda/api/runtime.pyx", line 265, in cupy_backends.cuda.api.runtime.check_status
E       raise CUDARuntimeError(status)
E   cupy_backends.cuda.api.runtime.CUDARuntimeError: hipErrorUnknown: hipErrorUnknown

cupy_backends/cuda/api/runtime.pyx:265: AssertionError
----------------------------- Captured stderr call -----------------------------
Traceback (most recent call last):
  File "cupy_backends/cuda/api/runtime.pyx", line 644, in cupy_backends.cuda.api.runtime.freeArray
    check_status(status)
  File "cupy_backends/cuda/api/runtime.pyx", line 265, in cupy_backends.cuda.api.runtime.check_status
    raise CUDARuntimeError(status)
cupy_backends.cuda.api.runtime.CUDARuntimeError: hipErrorUnknown: hipErrorUnknown
_ TestAffineTransformTextureMemory.test_affine_transform_texture_memory[_param_215_{mode='nearest', order=0, output=None, output_shape=10, shape=(10, 20), theta=270}] _

self = <<cupyx_tests.scipy_tests.ndimage_tests.test_interpolation.TestAffineTransformTextureMemory object at 0x7fab38f450d0>  parameter: {'mode': 'nearest', 'order': 0, 'output': None, 'output_shape': 10, 'shape': (10, 20), 'theta': 270}>
xp = <module 'cupy' from '/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.hXnTrEAC7u/cupy/cupy/__init__.py'>
scp = <module 'cupyx.scipy' from '/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.hXnTrEAC7u/cupy/cupyx/scipy/__init__.py'>

    @testing.numpy_cupy_allclose(atol=0.1, scipy_name='scp')
    def test_affine_transform_texture_memory(self, xp, scp):
        a = xp.ones(self.shape, dtype=xp.float32)
        center = numpy.divide(numpy.subtract(self.shape, 1), 2)
    
        if len(self.shape) == 2:
            matrix = self._2d_rotation_matrix(self.theta, center)
        elif len(self.shape) == 3:
            matrix = self._3d_rotation_matrix(self.theta, center)
        else:
            return pytest.xfail('Unsupported shape')
    
        if self.output == 'empty':
            output = xp.empty(self.shape, dtype=xp.float32)
            if self.output_shape:
                return pytest.skip('This combination is tested in '
                                   'test_invalid_texture_arguments')
        else:
            output = self.output
    
        if self.output_shape:
            output_shape = (self.output_shape, ) * len(self.shape)
        else:
            output_shape = self.output_shape
    
        if xp == cupy:
            m = cupyx.scipy.ndimage.affine_transform
            matrix = cupy.array(matrix)
>           return m(a, matrix, output_shape=output_shape,
                     output=output, order=self.order,
                     mode=self.mode, texture_memory=True)

tests/cupyx_tests/scipy_tests/ndimage_tests/test_interpolation.py:398: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
cupyx/scipy/ndimage/interpolation.py:376: in affine_transform
    return _texture.affine_transformation(data=input,
cupyx/_texture.py:168: in affine_transformation
    texture_object = _create_texture_object(data,
cupyx/_texture.py:98: in _create_texture_object
    array = texture.CUDAarray(texture_fmt, *data.shape[::-1])
cupy/cuda/texture.pyx:296: in cupy.cuda.texture.CUDAarray.__init__
    self.ptr = runtime.malloc3DArray(desc.ptr, width, height, depth,
cupy_backends/cuda/api/runtime.pyx:593: in cupy_backends.cuda.api.runtime.malloc3DArray
    check_status(status)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

>   raise CUDARuntimeError(status)
E   AssertionError: Only cupy raises error
E   
E   Traceback (most recent call last):
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.hXnTrEAC7u/cupy/cupy/testing/_helper.py", line 47, in _call_func
E       result = impl(self, *args, **kw)
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.hXnTrEAC7u/cupy/tests/cupyx_tests/scipy_tests/ndimage_tests/test_interpolation.py", line 398, in test_affine_transform_texture_memory
E       return m(a, matrix, output_shape=output_shape,
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.hXnTrEAC7u/cupy/cupyx/scipy/ndimage/interpolation.py", line 376, in affine_transform
E       return _texture.affine_transformation(data=input,
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.hXnTrEAC7u/cupy/cupyx/_texture.py", line 168, in affine_transformation
E       texture_object = _create_texture_object(data,
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.hXnTrEAC7u/cupy/cupyx/_texture.py", line 98, in _create_texture_object
E       array = texture.CUDAarray(texture_fmt, *data.shape[::-1])
E     File "cupy/cuda/texture.pyx", line 296, in cupy.cuda.texture.CUDAarray.__init__
E       self.ptr = runtime.malloc3DArray(desc.ptr, width, height, depth,
E     File "cupy_backends/cuda/api/runtime.pyx", line 593, in cupy_backends.cuda.api.runtime.malloc3DArray
E       check_status(status)
E     File "cupy_backends/cuda/api/runtime.pyx", line 265, in cupy_backends.cuda.api.runtime.check_status
E       raise CUDARuntimeError(status)
E   cupy_backends.cuda.api.runtime.CUDARuntimeError: hipErrorUnknown: hipErrorUnknown

cupy_backends/cuda/api/runtime.pyx:265: AssertionError
----------------------------- Captured stderr call -----------------------------
Traceback (most recent call last):
  File "cupy_backends/cuda/api/runtime.pyx", line 644, in cupy_backends.cuda.api.runtime.freeArray
    check_status(status)
  File "cupy_backends/cuda/api/runtime.pyx", line 265, in cupy_backends.cuda.api.runtime.check_status
    raise CUDARuntimeError(status)
cupy_backends.cuda.api.runtime.CUDARuntimeError: hipErrorUnknown: hipErrorUnknown
_ TestAffineTransformTextureMemory.test_affine_transform_texture_memory[_param_216_{mode='nearest', order=0, output=None, output_shape=10, shape=(10, 10, 10), theta=0}] _

self = <<cupyx_tests.scipy_tests.ndimage_tests.test_interpolation.TestAffineTransformTextureMemory object at 0x7fab371cd0d0>  parameter: {'mode': 'nearest', 'order': 0, 'output': None, 'output_shape': 10, 'shape': (10, 10, 10), 'theta': 0}>
xp = <module 'cupy' from '/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.hXnTrEAC7u/cupy/cupy/__init__.py'>
scp = <module 'cupyx.scipy' from '/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.hXnTrEAC7u/cupy/cupyx/scipy/__init__.py'>

    @testing.numpy_cupy_allclose(atol=0.1, scipy_name='scp')
    def test_affine_transform_texture_memory(self, xp, scp):
        a = xp.ones(self.shape, dtype=xp.float32)
        center = numpy.divide(numpy.subtract(self.shape, 1), 2)
    
        if len(self.shape) == 2:
            matrix = self._2d_rotation_matrix(self.theta, center)
        elif len(self.shape) == 3:
            matrix = self._3d_rotation_matrix(self.theta, center)
        else:
            return pytest.xfail('Unsupported shape')
    
        if self.output == 'empty':
            output = xp.empty(self.shape, dtype=xp.float32)
            if self.output_shape:
                return pytest.skip('This combination is tested in '
                                   'test_invalid_texture_arguments')
        else:
            output = self.output
    
        if self.output_shape:
            output_shape = (self.output_shape, ) * len(self.shape)
        else:
            output_shape = self.output_shape
    
        if xp == cupy:
            m = cupyx.scipy.ndimage.affine_transform
            matrix = cupy.array(matrix)
>           return m(a, matrix, output_shape=output_shape,
                     output=output, order=self.order,
                     mode=self.mode, texture_memory=True)

tests/cupyx_tests/scipy_tests/ndimage_tests/test_interpolation.py:398: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
cupyx/scipy/ndimage/interpolation.py:376: in affine_transform
    return _texture.affine_transformation(data=input,
cupyx/_texture.py:168: in affine_transformation
    texture_object = _create_texture_object(data,
cupyx/_texture.py:98: in _create_texture_object
    array = texture.CUDAarray(texture_fmt, *data.shape[::-1])
cupy/cuda/texture.pyx:296: in cupy.cuda.texture.CUDAarray.__init__
    self.ptr = runtime.malloc3DArray(desc.ptr, width, height, depth,
cupy_backends/cuda/api/runtime.pyx:593: in cupy_backends.cuda.api.runtime.malloc3DArray
    check_status(status)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

>   raise CUDARuntimeError(status)
E   AssertionError: Only cupy raises error
E   
E   Traceback (most recent call last):
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.hXnTrEAC7u/cupy/cupy/testing/_helper.py", line 47, in _call_func
E       result = impl(self, *args, **kw)
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.hXnTrEAC7u/cupy/tests/cupyx_tests/scipy_tests/ndimage_tests/test_interpolation.py", line 398, in test_affine_transform_texture_memory
E       return m(a, matrix, output_shape=output_shape,
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.hXnTrEAC7u/cupy/cupyx/scipy/ndimage/interpolation.py", line 376, in affine_transform
E       return _texture.affine_transformation(data=input,
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.hXnTrEAC7u/cupy/cupyx/_texture.py", line 168, in affine_transformation
E       texture_object = _create_texture_object(data,
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.hXnTrEAC7u/cupy/cupyx/_texture.py", line 98, in _create_texture_object
E       array = texture.CUDAarray(texture_fmt, *data.shape[::-1])
E     File "cupy/cuda/texture.pyx", line 296, in cupy.cuda.texture.CUDAarray.__init__
E       self.ptr = runtime.malloc3DArray(desc.ptr, width, height, depth,
E     File "cupy_backends/cuda/api/runtime.pyx", line 593, in cupy_backends.cuda.api.runtime.malloc3DArray
E       check_status(status)
E     File "cupy_backends/cuda/api/runtime.pyx", line 265, in cupy_backends.cuda.api.runtime.check_status
E       raise CUDARuntimeError(status)
E   cupy_backends.cuda.api.runtime.CUDARuntimeError: hipErrorUnknown: hipErrorUnknown

cupy_backends/cuda/api/runtime.pyx:265: AssertionError
----------------------------- Captured stderr call -----------------------------
Traceback (most recent call last):
  File "cupy_backends/cuda/api/runtime.pyx", line 644, in cupy_backends.cuda.api.runtime.freeArray
    check_status(status)
  File "cupy_backends/cuda/api/runtime.pyx", line 265, in cupy_backends.cuda.api.runtime.check_status
    raise CUDARuntimeError(status)
cupy_backends.cuda.api.runtime.CUDARuntimeError: hipErrorUnknown: hipErrorUnknown
_ TestAffineTransformTextureMemory.test_affine_transform_texture_memory[_param_217_{mode='nearest', order=0, output=None, output_shape=10, shape=(10, 10, 10), theta=90}] _

self = <<cupyx_tests.scipy_tests.ndimage_tests.test_interpolation.TestAffineTransformTextureMemory object at 0x7fab372a6220>  parameter: {'mode': 'nearest', 'order': 0, 'output': None, 'output_shape': 10, 'shape': (10, 10, 10), 'theta': 90}>
xp = <module 'cupy' from '/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.hXnTrEAC7u/cupy/cupy/__init__.py'>
scp = <module 'cupyx.scipy' from '/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.hXnTrEAC7u/cupy/cupyx/scipy/__init__.py'>

    @testing.numpy_cupy_allclose(atol=0.1, scipy_name='scp')
    def test_affine_transform_texture_memory(self, xp, scp):
        a = xp.ones(self.shape, dtype=xp.float32)
        center = numpy.divide(numpy.subtract(self.shape, 1), 2)
    
        if len(self.shape) == 2:
            matrix = self._2d_rotation_matrix(self.theta, center)
        elif len(self.shape) == 3:
            matrix = self._3d_rotation_matrix(self.theta, center)
        else:
            return pytest.xfail('Unsupported shape')
    
        if self.output == 'empty':
            output = xp.empty(self.shape, dtype=xp.float32)
            if self.output_shape:
                return pytest.skip('This combination is tested in '
                                   'test_invalid_texture_arguments')
        else:
            output = self.output
    
        if self.output_shape:
            output_shape = (self.output_shape, ) * len(self.shape)
        else:
            output_shape = self.output_shape
    
        if xp == cupy:
            m = cupyx.scipy.ndimage.affine_transform
            matrix = cupy.array(matrix)
>           return m(a, matrix, output_shape=output_shape,
                     output=output, order=self.order,
                     mode=self.mode, texture_memory=True)

tests/cupyx_tests/scipy_tests/ndimage_tests/test_interpolation.py:398: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
cupyx/scipy/ndimage/interpolation.py:376: in affine_transform
    return _texture.affine_transformation(data=input,
cupyx/_texture.py:168: in affine_transformation
    texture_object = _create_texture_object(data,
cupyx/_texture.py:98: in _create_texture_object
    array = texture.CUDAarray(texture_fmt, *data.shape[::-1])
cupy/cuda/texture.pyx:296: in cupy.cuda.texture.CUDAarray.__init__
    self.ptr = runtime.malloc3DArray(desc.ptr, width, height, depth,
cupy_backends/cuda/api/runtime.pyx:593: in cupy_backends.cuda.api.runtime.malloc3DArray
    check_status(status)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

>   raise CUDARuntimeError(status)
E   AssertionError: Only cupy raises error
E   
E   Traceback (most recent call last):
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.hXnTrEAC7u/cupy/cupy/testing/_helper.py", line 47, in _call_func
E       result = impl(self, *args, **kw)
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.hXnTrEAC7u/cupy/tests/cupyx_tests/scipy_tests/ndimage_tests/test_interpolation.py", line 398, in test_affine_transform_texture_memory
E       return m(a, matrix, output_shape=output_shape,
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.hXnTrEAC7u/cupy/cupyx/scipy/ndimage/interpolation.py", line 376, in affine_transform
E       return _texture.affine_transformation(data=input,
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.hXnTrEAC7u/cupy/cupyx/_texture.py", line 168, in affine_transformation
E       texture_object = _create_texture_object(data,
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.hXnTrEAC7u/cupy/cupyx/_texture.py", line 98, in _create_texture_object
E       array = texture.CUDAarray(texture_fmt, *data.shape[::-1])
E     File "cupy/cuda/texture.pyx", line 296, in cupy.cuda.texture.CUDAarray.__init__
E       self.ptr = runtime.malloc3DArray(desc.ptr, width, height, depth,
E     File "cupy_backends/cuda/api/runtime.pyx", line 593, in cupy_backends.cuda.api.runtime.malloc3DArray
E       check_status(status)
E     File "cupy_backends/cuda/api/runtime.pyx", line 265, in cupy_backends.cuda.api.runtime.check_status
E       raise CUDARuntimeError(status)
E   cupy_backends.cuda.api.runtime.CUDARuntimeError: hipErrorUnknown: hipErrorUnknown

cupy_backends/cuda/api/runtime.pyx:265: AssertionError
----------------------------- Captured stderr call -----------------------------
Traceback (most recent call last):
  File "cupy_backends/cuda/api/runtime.pyx", line 644, in cupy_backends.cuda.api.runtime.freeArray
    check_status(status)
  File "cupy_backends/cuda/api/runtime.pyx", line 265, in cupy_backends.cuda.api.runtime.check_status
    raise CUDARuntimeError(status)
cupy_backends.cuda.api.runtime.CUDARuntimeError: hipErrorUnknown: hipErrorUnknown
_ TestAffineTransformTextureMemory.test_affine_transform_texture_memory[_param_218_{mode='nearest', order=0, output=None, output_shape=10, shape=(10, 10, 10), theta=180}] _

self = <<cupyx_tests.scipy_tests.ndimage_tests.test_interpolation.TestAffineTransformTextureMemory object at 0x7fab36fe81c0>  parameter: {'mode': 'nearest', 'order': 0, 'output': None, 'output_shape': 10, 'shape': (10, 10, 10), 'theta': 180}>
xp = <module 'cupy' from '/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.hXnTrEAC7u/cupy/cupy/__init__.py'>
scp = <module 'cupyx.scipy' from '/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.hXnTrEAC7u/cupy/cupyx/scipy/__init__.py'>

    @testing.numpy_cupy_allclose(atol=0.1, scipy_name='scp')
    def test_affine_transform_texture_memory(self, xp, scp):
        a = xp.ones(self.shape, dtype=xp.float32)
        center = numpy.divide(numpy.subtract(self.shape, 1), 2)
    
        if len(self.shape) == 2:
            matrix = self._2d_rotation_matrix(self.theta, center)
        elif len(self.shape) == 3:
            matrix = self._3d_rotation_matrix(self.theta, center)
        else:
            return pytest.xfail('Unsupported shape')
    
        if self.output == 'empty':
            output = xp.empty(self.shape, dtype=xp.float32)
            if self.output_shape:
                return pytest.skip('This combination is tested in '
                                   'test_invalid_texture_arguments')
        else:
            output = self.output
    
        if self.output_shape:
            output_shape = (self.output_shape, ) * len(self.shape)
        else:
            output_shape = self.output_shape
    
        if xp == cupy:
            m = cupyx.scipy.ndimage.affine_transform
            matrix = cupy.array(matrix)
>           return m(a, matrix, output_shape=output_shape,
                     output=output, order=self.order,
                     mode=self.mode, texture_memory=True)

tests/cupyx_tests/scipy_tests/ndimage_tests/test_interpolation.py:398: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
cupyx/scipy/ndimage/interpolation.py:376: in affine_transform
    return _texture.affine_transformation(data=input,
cupyx/_texture.py:168: in affine_transformation
    texture_object = _create_texture_object(data,
cupyx/_texture.py:98: in _create_texture_object
    array = texture.CUDAarray(texture_fmt, *data.shape[::-1])
cupy/cuda/texture.pyx:296: in cupy.cuda.texture.CUDAarray.__init__
    self.ptr = runtime.malloc3DArray(desc.ptr, width, height, depth,
cupy_backends/cuda/api/runtime.pyx:593: in cupy_backends.cuda.api.runtime.malloc3DArray
    check_status(status)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

>   raise CUDARuntimeError(status)
E   AssertionError: Only cupy raises error
E   
E   Traceback (most recent call last):
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.hXnTrEAC7u/cupy/cupy/testing/_helper.py", line 47, in _call_func
E       result = impl(self, *args, **kw)
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.hXnTrEAC7u/cupy/tests/cupyx_tests/scipy_tests/ndimage_tests/test_interpolation.py", line 398, in test_affine_transform_texture_memory
E       return m(a, matrix, output_shape=output_shape,
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.hXnTrEAC7u/cupy/cupyx/scipy/ndimage/interpolation.py", line 376, in affine_transform
E       return _texture.affine_transformation(data=input,
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.hXnTrEAC7u/cupy/cupyx/_texture.py", line 168, in affine_transformation
E       texture_object = _create_texture_object(data,
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.hXnTrEAC7u/cupy/cupyx/_texture.py", line 98, in _create_texture_object
E       array = texture.CUDAarray(texture_fmt, *data.shape[::-1])
E     File "cupy/cuda/texture.pyx", line 296, in cupy.cuda.texture.CUDAarray.__init__
E       self.ptr = runtime.malloc3DArray(desc.ptr, width, height, depth,
E     File "cupy_backends/cuda/api/runtime.pyx", line 593, in cupy_backends.cuda.api.runtime.malloc3DArray
E       check_status(status)
E     File "cupy_backends/cuda/api/runtime.pyx", line 265, in cupy_backends.cuda.api.runtime.check_status
E       raise CUDARuntimeError(status)
E   cupy_backends.cuda.api.runtime.CUDARuntimeError: hipErrorUnknown: hipErrorUnknown

cupy_backends/cuda/api/runtime.pyx:265: AssertionError
----------------------------- Captured stderr call -----------------------------
Traceback (most recent call last):
  File "cupy_backends/cuda/api/runtime.pyx", line 644, in cupy_backends.cuda.api.runtime.freeArray
    check_status(status)
  File "cupy_backends/cuda/api/runtime.pyx", line 265, in cupy_backends.cuda.api.runtime.check_status
    raise CUDARuntimeError(status)
cupy_backends.cuda.api.runtime.CUDARuntimeError: hipErrorUnknown: hipErrorUnknown
_ TestAffineTransformTextureMemory.test_affine_transform_texture_memory[_param_219_{mode='nearest', order=0, output=None, output_shape=10, shape=(10, 10, 10), theta=270}] _

self = <<cupyx_tests.scipy_tests.ndimage_tests.test_interpolation.TestAffineTransformTextureMemory object at 0x7fab39757310>  parameter: {'mode': 'nearest', 'order': 0, 'output': None, 'output_shape': 10, 'shape': (10, 10, 10), 'theta': 270}>
xp = <module 'cupy' from '/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.hXnTrEAC7u/cupy/cupy/__init__.py'>
scp = <module 'cupyx.scipy' from '/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.hXnTrEAC7u/cupy/cupyx/scipy/__init__.py'>

    @testing.numpy_cupy_allclose(atol=0.1, scipy_name='scp')
    def test_affine_transform_texture_memory(self, xp, scp):
        a = xp.ones(self.shape, dtype=xp.float32)
        center = numpy.divide(numpy.subtract(self.shape, 1), 2)
    
        if len(self.shape) == 2:
            matrix = self._2d_rotation_matrix(self.theta, center)
        elif len(self.shape) == 3:
            matrix = self._3d_rotation_matrix(self.theta, center)
        else:
            return pytest.xfail('Unsupported shape')
    
        if self.output == 'empty':
            output = xp.empty(self.shape, dtype=xp.float32)
            if self.output_shape:
                return pytest.skip('This combination is tested in '
                                   'test_invalid_texture_arguments')
        else:
            output = self.output
    
        if self.output_shape:
            output_shape = (self.output_shape, ) * len(self.shape)
        else:
            output_shape = self.output_shape
    
        if xp == cupy:
            m = cupyx.scipy.ndimage.affine_transform
            matrix = cupy.array(matrix)
>           return m(a, matrix, output_shape=output_shape,
                     output=output, order=self.order,
                     mode=self.mode, texture_memory=True)

tests/cupyx_tests/scipy_tests/ndimage_tests/test_interpolation.py:398: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
cupyx/scipy/ndimage/interpolation.py:376: in affine_transform
    return _texture.affine_transformation(data=input,
cupyx/_texture.py:168: in affine_transformation
    texture_object = _create_texture_object(data,
cupyx/_texture.py:98: in _create_texture_object
    array = texture.CUDAarray(texture_fmt, *data.shape[::-1])
cupy/cuda/texture.pyx:296: in cupy.cuda.texture.CUDAarray.__init__
    self.ptr = runtime.malloc3DArray(desc.ptr, width, height, depth,
cupy_backends/cuda/api/runtime.pyx:593: in cupy_backends.cuda.api.runtime.malloc3DArray
    check_status(status)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

>   raise CUDARuntimeError(status)
E   AssertionError: Only cupy raises error
E   
E   Traceback (most recent call last):
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.hXnTrEAC7u/cupy/cupy/testing/_helper.py", line 47, in _call_func
E       result = impl(self, *args, **kw)
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.hXnTrEAC7u/cupy/tests/cupyx_tests/scipy_tests/ndimage_tests/test_interpolation.py", line 398, in test_affine_transform_texture_memory
E       return m(a, matrix, output_shape=output_shape,
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.hXnTrEAC7u/cupy/cupyx/scipy/ndimage/interpolation.py", line 376, in affine_transform
E       return _texture.affine_transformation(data=input,
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.hXnTrEAC7u/cupy/cupyx/_texture.py", line 168, in affine_transformation
E       texture_object = _create_texture_object(data,
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.hXnTrEAC7u/cupy/cupyx/_texture.py", line 98, in _create_texture_object
E       array = texture.CUDAarray(texture_fmt, *data.shape[::-1])
E     File "cupy/cuda/texture.pyx", line 296, in cupy.cuda.texture.CUDAarray.__init__
E       self.ptr = runtime.malloc3DArray(desc.ptr, width, height, depth,
E     File "cupy_backends/cuda/api/runtime.pyx", line 593, in cupy_backends.cuda.api.runtime.malloc3DArray
E       check_status(status)
E     File "cupy_backends/cuda/api/runtime.pyx", line 265, in cupy_backends.cuda.api.runtime.check_status
E       raise CUDARuntimeError(status)
E   cupy_backends.cuda.api.runtime.CUDARuntimeError: hipErrorUnknown: hipErrorUnknown

cupy_backends/cuda/api/runtime.pyx:265: AssertionError
----------------------------- Captured stderr call -----------------------------
Traceback (most recent call last):
  File "cupy_backends/cuda/api/runtime.pyx", line 644, in cupy_backends.cuda.api.runtime.freeArray
    check_status(status)
  File "cupy_backends/cuda/api/runtime.pyx", line 265, in cupy_backends.cuda.api.runtime.check_status
    raise CUDARuntimeError(status)
cupy_backends.cuda.api.runtime.CUDARuntimeError: hipErrorUnknown: hipErrorUnknown
_ TestAffineTransformTextureMemory.test_affine_transform_texture_memory[_param_220_{mode='nearest', order=0, output=None, output_shape=10, shape=(10, 20, 30), theta=0}] _

self = <<cupyx_tests.scipy_tests.ndimage_tests.test_interpolation.TestAffineTransformTextureMemory object at 0x7fac514ac190>  parameter: {'mode': 'nearest', 'order': 0, 'output': None, 'output_shape': 10, 'shape': (10, 20, 30), 'theta': 0}>
xp = <module 'cupy' from '/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.hXnTrEAC7u/cupy/cupy/__init__.py'>
scp = <module 'cupyx.scipy' from '/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.hXnTrEAC7u/cupy/cupyx/scipy/__init__.py'>

    @testing.numpy_cupy_allclose(atol=0.1, scipy_name='scp')
    def test_affine_transform_texture_memory(self, xp, scp):
        a = xp.ones(self.shape, dtype=xp.float32)
        center = numpy.divide(numpy.subtract(self.shape, 1), 2)
    
        if len(self.shape) == 2:
            matrix = self._2d_rotation_matrix(self.theta, center)
        elif len(self.shape) == 3:
            matrix = self._3d_rotation_matrix(self.theta, center)
        else:
            return pytest.xfail('Unsupported shape')
    
        if self.output == 'empty':
            output = xp.empty(self.shape, dtype=xp.float32)
            if self.output_shape:
                return pytest.skip('This combination is tested in '
                                   'test_invalid_texture_arguments')
        else:
            output = self.output
    
        if self.output_shape:
            output_shape = (self.output_shape, ) * len(self.shape)
        else:
            output_shape = self.output_shape
    
        if xp == cupy:
            m = cupyx.scipy.ndimage.affine_transform
            matrix = cupy.array(matrix)
>           return m(a, matrix, output_shape=output_shape,
                     output=output, order=self.order,
                     mode=self.mode, texture_memory=True)

tests/cupyx_tests/scipy_tests/ndimage_tests/test_interpolation.py:398: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
cupyx/scipy/ndimage/interpolation.py:376: in affine_transform
    return _texture.affine_transformation(data=input,
cupyx/_texture.py:168: in affine_transformation
    texture_object = _create_texture_object(data,
cupyx/_texture.py:98: in _create_texture_object
    array = texture.CUDAarray(texture_fmt, *data.shape[::-1])
cupy/cuda/texture.pyx:296: in cupy.cuda.texture.CUDAarray.__init__
    self.ptr = runtime.malloc3DArray(desc.ptr, width, height, depth,
cupy_backends/cuda/api/runtime.pyx:593: in cupy_backends.cuda.api.runtime.malloc3DArray
    check_status(status)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

>   raise CUDARuntimeError(status)
E   AssertionError: Only cupy raises error
E   
E   Traceback (most recent call last):
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.hXnTrEAC7u/cupy/cupy/testing/_helper.py", line 47, in _call_func
E       result = impl(self, *args, **kw)
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.hXnTrEAC7u/cupy/tests/cupyx_tests/scipy_tests/ndimage_tests/test_interpolation.py", line 398, in test_affine_transform_texture_memory
E       return m(a, matrix, output_shape=output_shape,
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.hXnTrEAC7u/cupy/cupyx/scipy/ndimage/interpolation.py", line 376, in affine_transform
E       return _texture.affine_transformation(data=input,
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.hXnTrEAC7u/cupy/cupyx/_texture.py", line 168, in affine_transformation
E       texture_object = _create_texture_object(data,
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.hXnTrEAC7u/cupy/cupyx/_texture.py", line 98, in _create_texture_object
E       array = texture.CUDAarray(texture_fmt, *data.shape[::-1])
E     File "cupy/cuda/texture.pyx", line 296, in cupy.cuda.texture.CUDAarray.__init__
E       self.ptr = runtime.malloc3DArray(desc.ptr, width, height, depth,
E     File "cupy_backends/cuda/api/runtime.pyx", line 593, in cupy_backends.cuda.api.runtime.malloc3DArray
E       check_status(status)
E     File "cupy_backends/cuda/api/runtime.pyx", line 265, in cupy_backends.cuda.api.runtime.check_status
E       raise CUDARuntimeError(status)
E   cupy_backends.cuda.api.runtime.CUDARuntimeError: hipErrorUnknown: hipErrorUnknown

cupy_backends/cuda/api/runtime.pyx:265: AssertionError
----------------------------- Captured stderr call -----------------------------
Traceback (most recent call last):
  File "cupy_backends/cuda/api/runtime.pyx", line 644, in cupy_backends.cuda.api.runtime.freeArray
    check_status(status)
  File "cupy_backends/cuda/api/runtime.pyx", line 265, in cupy_backends.cuda.api.runtime.check_status
    raise CUDARuntimeError(status)
cupy_backends.cuda.api.runtime.CUDARuntimeError: hipErrorUnknown: hipErrorUnknown
_ TestAffineTransformTextureMemory.test_affine_transform_texture_memory[_param_221_{mode='nearest', order=0, output=None, output_shape=10, shape=(10, 20, 30), theta=90}] _

self = <<cupyx_tests.scipy_tests.ndimage_tests.test_interpolation.TestAffineTransformTextureMemory object at 0x7fac514c5550>  parameter: {'mode': 'nearest', 'order': 0, 'output': None, 'output_shape': 10, 'shape': (10, 20, 30), 'theta': 90}>
xp = <module 'cupy' from '/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.hXnTrEAC7u/cupy/cupy/__init__.py'>
scp = <module 'cupyx.scipy' from '/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.hXnTrEAC7u/cupy/cupyx/scipy/__init__.py'>

    @testing.numpy_cupy_allclose(atol=0.1, scipy_name='scp')
    def test_affine_transform_texture_memory(self, xp, scp):
        a = xp.ones(self.shape, dtype=xp.float32)
        center = numpy.divide(numpy.subtract(self.shape, 1), 2)
    
        if len(self.shape) == 2:
            matrix = self._2d_rotation_matrix(self.theta, center)
        elif len(self.shape) == 3:
            matrix = self._3d_rotation_matrix(self.theta, center)
        else:
            return pytest.xfail('Unsupported shape')
    
        if self.output == 'empty':
            output = xp.empty(self.shape, dtype=xp.float32)
            if self.output_shape:
                return pytest.skip('This combination is tested in '
                                   'test_invalid_texture_arguments')
        else:
            output = self.output
    
        if self.output_shape:
            output_shape = (self.output_shape, ) * len(self.shape)
        else:
            output_shape = self.output_shape
    
        if xp == cupy:
            m = cupyx.scipy.ndimage.affine_transform
            matrix = cupy.array(matrix)
>           return m(a, matrix, output_shape=output_shape,
                     output=output, order=self.order,
                     mode=self.mode, texture_memory=True)

tests/cupyx_tests/scipy_tests/ndimage_tests/test_interpolation.py:398: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
cupyx/scipy/ndimage/interpolation.py:376: in affine_transform
    return _texture.affine_transformation(data=input,
cupyx/_texture.py:168: in affine_transformation
    texture_object = _create_texture_object(data,
cupyx/_texture.py:98: in _create_texture_object
    array = texture.CUDAarray(texture_fmt, *data.shape[::-1])
cupy/cuda/texture.pyx:296: in cupy.cuda.texture.CUDAarray.__init__
    self.ptr = runtime.malloc3DArray(desc.ptr, width, height, depth,
cupy_backends/cuda/api/runtime.pyx:593: in cupy_backends.cuda.api.runtime.malloc3DArray
    check_status(status)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

>   raise CUDARuntimeError(status)
E   AssertionError: Only cupy raises error
E   
E   Traceback (most recent call last):
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.hXnTrEAC7u/cupy/cupy/testing/_helper.py", line 47, in _call_func
E       result = impl(self, *args, **kw)
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.hXnTrEAC7u/cupy/tests/cupyx_tests/scipy_tests/ndimage_tests/test_interpolation.py", line 398, in test_affine_transform_texture_memory
E       return m(a, matrix, output_shape=output_shape,
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.hXnTrEAC7u/cupy/cupyx/scipy/ndimage/interpolation.py", line 376, in affine_transform
E       return _texture.affine_transformation(data=input,
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.hXnTrEAC7u/cupy/cupyx/_texture.py", line 168, in affine_transformation
E       texture_object = _create_texture_object(data,
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.hXnTrEAC7u/cupy/cupyx/_texture.py", line 98, in _create_texture_object
E       array = texture.CUDAarray(texture_fmt, *data.shape[::-1])
E     File "cupy/cuda/texture.pyx", line 296, in cupy.cuda.texture.CUDAarray.__init__
E       self.ptr = runtime.malloc3DArray(desc.ptr, width, height, depth,
E     File "cupy_backends/cuda/api/runtime.pyx", line 593, in cupy_backends.cuda.api.runtime.malloc3DArray
E       check_status(status)
E     File "cupy_backends/cuda/api/runtime.pyx", line 265, in cupy_backends.cuda.api.runtime.check_status
E       raise CUDARuntimeError(status)
E   cupy_backends.cuda.api.runtime.CUDARuntimeError: hipErrorUnknown: hipErrorUnknown

cupy_backends/cuda/api/runtime.pyx:265: AssertionError
----------------------------- Captured stderr call -----------------------------
Traceback (most recent call last):
  File "cupy_backends/cuda/api/runtime.pyx", line 644, in cupy_backends.cuda.api.runtime.freeArray
    check_status(status)
  File "cupy_backends/cuda/api/runtime.pyx", line 265, in cupy_backends.cuda.api.runtime.check_status
    raise CUDARuntimeError(status)
cupy_backends.cuda.api.runtime.CUDARuntimeError: hipErrorUnknown: hipErrorUnknown
_ TestAffineTransformTextureMemory.test_affine_transform_texture_memory[_param_222_{mode='nearest', order=0, output=None, output_shape=10, shape=(10, 20, 30), theta=180}] _

self = <<cupyx_tests.scipy_tests.ndimage_tests.test_interpolation.TestAffineTransformTextureMemory object at 0x7fab37197dc0>  parameter: {'mode': 'nearest', 'order': 0, 'output': None, 'output_shape': 10, 'shape': (10, 20, 30), 'theta': 180}>
xp = <module 'cupy' from '/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.hXnTrEAC7u/cupy/cupy/__init__.py'>
scp = <module 'cupyx.scipy' from '/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.hXnTrEAC7u/cupy/cupyx/scipy/__init__.py'>

    @testing.numpy_cupy_allclose(atol=0.1, scipy_name='scp')
    def test_affine_transform_texture_memory(self, xp, scp):
        a = xp.ones(self.shape, dtype=xp.float32)
        center = numpy.divide(numpy.subtract(self.shape, 1), 2)
    
        if len(self.shape) == 2:
            matrix = self._2d_rotation_matrix(self.theta, center)
        elif len(self.shape) == 3:
            matrix = self._3d_rotation_matrix(self.theta, center)
        else:
            return pytest.xfail('Unsupported shape')
    
        if self.output == 'empty':
            output = xp.empty(self.shape, dtype=xp.float32)
            if self.output_shape:
                return pytest.skip('This combination is tested in '
                                   'test_invalid_texture_arguments')
        else:
            output = self.output
    
        if self.output_shape:
            output_shape = (self.output_shape, ) * len(self.shape)
        else:
            output_shape = self.output_shape
    
        if xp == cupy:
            m = cupyx.scipy.ndimage.affine_transform
            matrix = cupy.array(matrix)
>           return m(a, matrix, output_shape=output_shape,
                     output=output, order=self.order,
                     mode=self.mode, texture_memory=True)

tests/cupyx_tests/scipy_tests/ndimage_tests/test_interpolation.py:398: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
cupyx/scipy/ndimage/interpolation.py:376: in affine_transform
    return _texture.affine_transformation(data=input,
cupyx/_texture.py:168: in affine_transformation
    texture_object = _create_texture_object(data,
cupyx/_texture.py:98: in _create_texture_object
    array = texture.CUDAarray(texture_fmt, *data.shape[::-1])
cupy/cuda/texture.pyx:296: in cupy.cuda.texture.CUDAarray.__init__
    self.ptr = runtime.malloc3DArray(desc.ptr, width, height, depth,
cupy_backends/cuda/api/runtime.pyx:593: in cupy_backends.cuda.api.runtime.malloc3DArray
    check_status(status)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

>   raise CUDARuntimeError(status)
E   AssertionError: Only cupy raises error
E   
E   Traceback (most recent call last):
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.hXnTrEAC7u/cupy/cupy/testing/_helper.py", line 47, in _call_func
E       result = impl(self, *args, **kw)
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.hXnTrEAC7u/cupy/tests/cupyx_tests/scipy_tests/ndimage_tests/test_interpolation.py", line 398, in test_affine_transform_texture_memory
E       return m(a, matrix, output_shape=output_shape,
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.hXnTrEAC7u/cupy/cupyx/scipy/ndimage/interpolation.py", line 376, in affine_transform
E       return _texture.affine_transformation(data=input,
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.hXnTrEAC7u/cupy/cupyx/_texture.py", line 168, in affine_transformation
E       texture_object = _create_texture_object(data,
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.hXnTrEAC7u/cupy/cupyx/_texture.py", line 98, in _create_texture_object
E       array = texture.CUDAarray(texture_fmt, *data.shape[::-1])
E     File "cupy/cuda/texture.pyx", line 296, in cupy.cuda.texture.CUDAarray.__init__
E       self.ptr = runtime.malloc3DArray(desc.ptr, width, height, depth,
E     File "cupy_backends/cuda/api/runtime.pyx", line 593, in cupy_backends.cuda.api.runtime.malloc3DArray
E       check_status(status)
E     File "cupy_backends/cuda/api/runtime.pyx", line 265, in cupy_backends.cuda.api.runtime.check_status
E       raise CUDARuntimeError(status)
E   cupy_backends.cuda.api.runtime.CUDARuntimeError: hipErrorUnknown: hipErrorUnknown

cupy_backends/cuda/api/runtime.pyx:265: AssertionError
----------------------------- Captured stderr call -----------------------------
Traceback (most recent call last):
  File "cupy_backends/cuda/api/runtime.pyx", line 644, in cupy_backends.cuda.api.runtime.freeArray
    check_status(status)
  File "cupy_backends/cuda/api/runtime.pyx", line 265, in cupy_backends.cuda.api.runtime.check_status
    raise CUDARuntimeError(status)
cupy_backends.cuda.api.runtime.CUDARuntimeError: hipErrorUnknown: hipErrorUnknown
_ TestAffineTransformTextureMemory.test_affine_transform_texture_memory[_param_223_{mode='nearest', order=0, output=None, output_shape=10, shape=(10, 20, 30), theta=270}] _

self = <<cupyx_tests.scipy_tests.ndimage_tests.test_interpolation.TestAffineTransformTextureMemory object at 0x7fab37023dc0>  parameter: {'mode': 'nearest', 'order': 0, 'output': None, 'output_shape': 10, 'shape': (10, 20, 30), 'theta': 270}>
xp = <module 'cupy' from '/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.hXnTrEAC7u/cupy/cupy/__init__.py'>
scp = <module 'cupyx.scipy' from '/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.hXnTrEAC7u/cupy/cupyx/scipy/__init__.py'>

    @testing.numpy_cupy_allclose(atol=0.1, scipy_name='scp')
    def test_affine_transform_texture_memory(self, xp, scp):
        a = xp.ones(self.shape, dtype=xp.float32)
        center = numpy.divide(numpy.subtract(self.shape, 1), 2)
    
        if len(self.shape) == 2:
            matrix = self._2d_rotation_matrix(self.theta, center)
        elif len(self.shape) == 3:
            matrix = self._3d_rotation_matrix(self.theta, center)
        else:
            return pytest.xfail('Unsupported shape')
    
        if self.output == 'empty':
            output = xp.empty(self.shape, dtype=xp.float32)
            if self.output_shape:
                return pytest.skip('This combination is tested in '
                                   'test_invalid_texture_arguments')
        else:
            output = self.output
    
        if self.output_shape:
            output_shape = (self.output_shape, ) * len(self.shape)
        else:
            output_shape = self.output_shape
    
        if xp == cupy:
            m = cupyx.scipy.ndimage.affine_transform
            matrix = cupy.array(matrix)
>           return m(a, matrix, output_shape=output_shape,
                     output=output, order=self.order,
                     mode=self.mode, texture_memory=True)

tests/cupyx_tests/scipy_tests/ndimage_tests/test_interpolation.py:398: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
cupyx/scipy/ndimage/interpolation.py:376: in affine_transform
    return _texture.affine_transformation(data=input,
cupyx/_texture.py:168: in affine_transformation
    texture_object = _create_texture_object(data,
cupyx/_texture.py:98: in _create_texture_object
    array = texture.CUDAarray(texture_fmt, *data.shape[::-1])
cupy/cuda/texture.pyx:296: in cupy.cuda.texture.CUDAarray.__init__
    self.ptr = runtime.malloc3DArray(desc.ptr, width, height, depth,
cupy_backends/cuda/api/runtime.pyx:593: in cupy_backends.cuda.api.runtime.malloc3DArray
    check_status(status)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

>   raise CUDARuntimeError(status)
E   AssertionError: Only cupy raises error
E   
E   Traceback (most recent call last):
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.hXnTrEAC7u/cupy/cupy/testing/_helper.py", line 47, in _call_func
E       result = impl(self, *args, **kw)
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.hXnTrEAC7u/cupy/tests/cupyx_tests/scipy_tests/ndimage_tests/test_interpolation.py", line 398, in test_affine_transform_texture_memory
E       return m(a, matrix, output_shape=output_shape,
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.hXnTrEAC7u/cupy/cupyx/scipy/ndimage/interpolation.py", line 376, in affine_transform
E       return _texture.affine_transformation(data=input,
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.hXnTrEAC7u/cupy/cupyx/_texture.py", line 168, in affine_transformation
E       texture_object = _create_texture_object(data,
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.hXnTrEAC7u/cupy/cupyx/_texture.py", line 98, in _create_texture_object
E       array = texture.CUDAarray(texture_fmt, *data.shape[::-1])
E     File "cupy/cuda/texture.pyx", line 296, in cupy.cuda.texture.CUDAarray.__init__
E       self.ptr = runtime.malloc3DArray(desc.ptr, width, height, depth,
E     File "cupy_backends/cuda/api/runtime.pyx", line 593, in cupy_backends.cuda.api.runtime.malloc3DArray
E       check_status(status)
E     File "cupy_backends/cuda/api/runtime.pyx", line 265, in cupy_backends.cuda.api.runtime.check_status
E       raise CUDARuntimeError(status)
E   cupy_backends.cuda.api.runtime.CUDARuntimeError: hipErrorUnknown: hipErrorUnknown

cupy_backends/cuda/api/runtime.pyx:265: AssertionError
----------------------------- Captured stderr call -----------------------------
Traceback (most recent call last):
  File "cupy_backends/cuda/api/runtime.pyx", line 644, in cupy_backends.cuda.api.runtime.freeArray
    check_status(status)
  File "cupy_backends/cuda/api/runtime.pyx", line 265, in cupy_backends.cuda.api.runtime.check_status
    raise CUDARuntimeError(status)
cupy_backends.cuda.api.runtime.CUDARuntimeError: hipErrorUnknown: hipErrorUnknown
_ TestAffineTransformTextureMemory.test_affine_transform_texture_memory[_param_224_{mode='nearest', order=0, output=float32, output_shape=None, shape=(100, 100), theta=0}] _

self = <<cupyx_tests.scipy_tests.ndimage_tests.test_interpolation.TestAffineTransformTextureMemory object at 0x7fab38b78a60> ...ode': 'nearest', 'order': 0, 'output': <class 'numpy.float32'>, 'output_shape': None, 'shape': (100, 100), 'theta': 0}>
xp = <module 'cupy' from '/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.hXnTrEAC7u/cupy/cupy/__init__.py'>
scp = <module 'cupyx.scipy' from '/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.hXnTrEAC7u/cupy/cupyx/scipy/__init__.py'>

    @testing.numpy_cupy_allclose(atol=0.1, scipy_name='scp')
    def test_affine_transform_texture_memory(self, xp, scp):
        a = xp.ones(self.shape, dtype=xp.float32)
        center = numpy.divide(numpy.subtract(self.shape, 1), 2)
    
        if len(self.shape) == 2:
            matrix = self._2d_rotation_matrix(self.theta, center)
        elif len(self.shape) == 3:
            matrix = self._3d_rotation_matrix(self.theta, center)
        else:
            return pytest.xfail('Unsupported shape')
    
        if self.output == 'empty':
            output = xp.empty(self.shape, dtype=xp.float32)
            if self.output_shape:
                return pytest.skip('This combination is tested in '
                                   'test_invalid_texture_arguments')
        else:
            output = self.output
    
        if self.output_shape:
            output_shape = (self.output_shape, ) * len(self.shape)
        else:
            output_shape = self.output_shape
    
        if xp == cupy:
            m = cupyx.scipy.ndimage.affine_transform
            matrix = cupy.array(matrix)
>           return m(a, matrix, output_shape=output_shape,
                     output=output, order=self.order,
                     mode=self.mode, texture_memory=True)

tests/cupyx_tests/scipy_tests/ndimage_tests/test_interpolation.py:398: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
cupyx/scipy/ndimage/interpolation.py:376: in affine_transform
    return _texture.affine_transformation(data=input,
cupyx/_texture.py:168: in affine_transformation
    texture_object = _create_texture_object(data,
cupyx/_texture.py:98: in _create_texture_object
    array = texture.CUDAarray(texture_fmt, *data.shape[::-1])
cupy/cuda/texture.pyx:296: in cupy.cuda.texture.CUDAarray.__init__
    self.ptr = runtime.malloc3DArray(desc.ptr, width, height, depth,
cupy_backends/cuda/api/runtime.pyx:593: in cupy_backends.cuda.api.runtime.malloc3DArray
    check_status(status)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

>   raise CUDARuntimeError(status)
E   AssertionError: Only cupy raises error
E   
E   Traceback (most recent call last):
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.hXnTrEAC7u/cupy/cupy/testing/_helper.py", line 47, in _call_func
E       result = impl(self, *args, **kw)
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.hXnTrEAC7u/cupy/tests/cupyx_tests/scipy_tests/ndimage_tests/test_interpolation.py", line 398, in test_affine_transform_texture_memory
E       return m(a, matrix, output_shape=output_shape,
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.hXnTrEAC7u/cupy/cupyx/scipy/ndimage/interpolation.py", line 376, in affine_transform
E       return _texture.affine_transformation(data=input,
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.hXnTrEAC7u/cupy/cupyx/_texture.py", line 168, in affine_transformation
E       texture_object = _create_texture_object(data,
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.hXnTrEAC7u/cupy/cupyx/_texture.py", line 98, in _create_texture_object
E       array = texture.CUDAarray(texture_fmt, *data.shape[::-1])
E     File "cupy/cuda/texture.pyx", line 296, in cupy.cuda.texture.CUDAarray.__init__
E       self.ptr = runtime.malloc3DArray(desc.ptr, width, height, depth,
E     File "cupy_backends/cuda/api/runtime.pyx", line 593, in cupy_backends.cuda.api.runtime.malloc3DArray
E       check_status(status)
E     File "cupy_backends/cuda/api/runtime.pyx", line 265, in cupy_backends.cuda.api.runtime.check_status
E       raise CUDARuntimeError(status)
E   cupy_backends.cuda.api.runtime.CUDARuntimeError: hipErrorUnknown: hipErrorUnknown

cupy_backends/cuda/api/runtime.pyx:265: AssertionError
----------------------------- Captured stderr call -----------------------------
Traceback (most recent call last):
  File "cupy_backends/cuda/api/runtime.pyx", line 644, in cupy_backends.cuda.api.runtime.freeArray
    check_status(status)
  File "cupy_backends/cuda/api/runtime.pyx", line 265, in cupy_backends.cuda.api.runtime.check_status
    raise CUDARuntimeError(status)
cupy_backends.cuda.api.runtime.CUDARuntimeError: hipErrorUnknown: hipErrorUnknown
_ TestAffineTransformTextureMemory.test_affine_transform_texture_memory[_param_225_{mode='nearest', order=0, output=float32, output_shape=None, shape=(100, 100), theta=90}] _

self = <<cupyx_tests.scipy_tests.ndimage_tests.test_interpolation.TestAffineTransformTextureMemory object at 0x7fab36f9e7f0> ...de': 'nearest', 'order': 0, 'output': <class 'numpy.float32'>, 'output_shape': None, 'shape': (100, 100), 'theta': 90}>
xp = <module 'cupy' from '/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.hXnTrEAC7u/cupy/cupy/__init__.py'>
scp = <module 'cupyx.scipy' from '/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.hXnTrEAC7u/cupy/cupyx/scipy/__init__.py'>

    @testing.numpy_cupy_allclose(atol=0.1, scipy_name='scp')
    def test_affine_transform_texture_memory(self, xp, scp):
        a = xp.ones(self.shape, dtype=xp.float32)
        center = numpy.divide(numpy.subtract(self.shape, 1), 2)
    
        if len(self.shape) == 2:
            matrix = self._2d_rotation_matrix(self.theta, center)
        elif len(self.shape) == 3:
            matrix = self._3d_rotation_matrix(self.theta, center)
        else:
            return pytest.xfail('Unsupported shape')
    
        if self.output == 'empty':
            output = xp.empty(self.shape, dtype=xp.float32)
            if self.output_shape:
                return pytest.skip('This combination is tested in '
                                   'test_invalid_texture_arguments')
        else:
            output = self.output
    
        if self.output_shape:
            output_shape = (self.output_shape, ) * len(self.shape)
        else:
            output_shape = self.output_shape
    
        if xp == cupy:
            m = cupyx.scipy.ndimage.affine_transform
            matrix = cupy.array(matrix)
>           return m(a, matrix, output_shape=output_shape,
                     output=output, order=self.order,
                     mode=self.mode, texture_memory=True)

tests/cupyx_tests/scipy_tests/ndimage_tests/test_interpolation.py:398: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
cupyx/scipy/ndimage/interpolation.py:376: in affine_transform
    return _texture.affine_transformation(data=input,
cupyx/_texture.py:168: in affine_transformation
    texture_object = _create_texture_object(data,
cupyx/_texture.py:98: in _create_texture_object
    array = texture.CUDAarray(texture_fmt, *data.shape[::-1])
cupy/cuda/texture.pyx:296: in cupy.cuda.texture.CUDAarray.__init__
    self.ptr = runtime.malloc3DArray(desc.ptr, width, height, depth,
cupy_backends/cuda/api/runtime.pyx:593: in cupy_backends.cuda.api.runtime.malloc3DArray
    check_status(status)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

>   raise CUDARuntimeError(status)
E   AssertionError: Only cupy raises error
E   
E   Traceback (most recent call last):
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.hXnTrEAC7u/cupy/cupy/testing/_helper.py", line 47, in _call_func
E       result = impl(self, *args, **kw)
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.hXnTrEAC7u/cupy/tests/cupyx_tests/scipy_tests/ndimage_tests/test_interpolation.py", line 398, in test_affine_transform_texture_memory
E       return m(a, matrix, output_shape=output_shape,
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.hXnTrEAC7u/cupy/cupyx/scipy/ndimage/interpolation.py", line 376, in affine_transform
E       return _texture.affine_transformation(data=input,
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.hXnTrEAC7u/cupy/cupyx/_texture.py", line 168, in affine_transformation
E       texture_object = _create_texture_object(data,
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.hXnTrEAC7u/cupy/cupyx/_texture.py", line 98, in _create_texture_object
E       array = texture.CUDAarray(texture_fmt, *data.shape[::-1])
E     File "cupy/cuda/texture.pyx", line 296, in cupy.cuda.texture.CUDAarray.__init__
E       self.ptr = runtime.malloc3DArray(desc.ptr, width, height, depth,
E     File "cupy_backends/cuda/api/runtime.pyx", line 593, in cupy_backends.cuda.api.runtime.malloc3DArray
E       check_status(status)
E     File "cupy_backends/cuda/api/runtime.pyx", line 265, in cupy_backends.cuda.api.runtime.check_status
E       raise CUDARuntimeError(status)
E   cupy_backends.cuda.api.runtime.CUDARuntimeError: hipErrorUnknown: hipErrorUnknown

cupy_backends/cuda/api/runtime.pyx:265: AssertionError
----------------------------- Captured stderr call -----------------------------
Traceback (most recent call last):
  File "cupy_backends/cuda/api/runtime.pyx", line 644, in cupy_backends.cuda.api.runtime.freeArray
    check_status(status)
  File "cupy_backends/cuda/api/runtime.pyx", line 265, in cupy_backends.cuda.api.runtime.check_status
    raise CUDARuntimeError(status)
cupy_backends.cuda.api.runtime.CUDARuntimeError: hipErrorUnknown: hipErrorUnknown
_ TestAffineTransformTextureMemory.test_affine_transform_texture_memory[_param_226_{mode='nearest', order=0, output=float32, output_shape=None, shape=(100, 100), theta=180}] _

self = <<cupyx_tests.scipy_tests.ndimage_tests.test_interpolation.TestAffineTransformTextureMemory object at 0x7fab37d54a00> ...e': 'nearest', 'order': 0, 'output': <class 'numpy.float32'>, 'output_shape': None, 'shape': (100, 100), 'theta': 180}>
xp = <module 'cupy' from '/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.hXnTrEAC7u/cupy/cupy/__init__.py'>
scp = <module 'cupyx.scipy' from '/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.hXnTrEAC7u/cupy/cupyx/scipy/__init__.py'>

    @testing.numpy_cupy_allclose(atol=0.1, scipy_name='scp')
    def test_affine_transform_texture_memory(self, xp, scp):
        a = xp.ones(self.shape, dtype=xp.float32)
        center = numpy.divide(numpy.subtract(self.shape, 1), 2)
    
        if len(self.shape) == 2:
            matrix = self._2d_rotation_matrix(self.theta, center)
        elif len(self.shape) == 3:
            matrix = self._3d_rotation_matrix(self.theta, center)
        else:
            return pytest.xfail('Unsupported shape')
    
        if self.output == 'empty':
            output = xp.empty(self.shape, dtype=xp.float32)
            if self.output_shape:
                return pytest.skip('This combination is tested in '
                                   'test_invalid_texture_arguments')
        else:
            output = self.output
    
        if self.output_shape:
            output_shape = (self.output_shape, ) * len(self.shape)
        else:
            output_shape = self.output_shape
    
        if xp == cupy:
            m = cupyx.scipy.ndimage.affine_transform
            matrix = cupy.array(matrix)
>           return m(a, matrix, output_shape=output_shape,
                     output=output, order=self.order,
                     mode=self.mode, texture_memory=True)

tests/cupyx_tests/scipy_tests/ndimage_tests/test_interpolation.py:398: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
cupyx/scipy/ndimage/interpolation.py:376: in affine_transform
    return _texture.affine_transformation(data=input,
cupyx/_texture.py:168: in affine_transformation
    texture_object = _create_texture_object(data,
cupyx/_texture.py:98: in _create_texture_object
    array = texture.CUDAarray(texture_fmt, *data.shape[::-1])
cupy/cuda/texture.pyx:296: in cupy.cuda.texture.CUDAarray.__init__
    self.ptr = runtime.malloc3DArray(desc.ptr, width, height, depth,
cupy_backends/cuda/api/runtime.pyx:593: in cupy_backends.cuda.api.runtime.malloc3DArray
    check_status(status)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

>   raise CUDARuntimeError(status)
E   AssertionError: Only cupy raises error
E   
E   Traceback (most recent call last):
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.hXnTrEAC7u/cupy/cupy/testing/_helper.py", line 47, in _call_func
E       result = impl(self, *args, **kw)
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.hXnTrEAC7u/cupy/tests/cupyx_tests/scipy_tests/ndimage_tests/test_interpolation.py", line 398, in test_affine_transform_texture_memory
E       return m(a, matrix, output_shape=output_shape,
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.hXnTrEAC7u/cupy/cupyx/scipy/ndimage/interpolation.py", line 376, in affine_transform
E       return _texture.affine_transformation(data=input,
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.hXnTrEAC7u/cupy/cupyx/_texture.py", line 168, in affine_transformation
E       texture_object = _create_texture_object(data,
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.hXnTrEAC7u/cupy/cupyx/_texture.py", line 98, in _create_texture_object
E       array = texture.CUDAarray(texture_fmt, *data.shape[::-1])
E     File "cupy/cuda/texture.pyx", line 296, in cupy.cuda.texture.CUDAarray.__init__
E       self.ptr = runtime.malloc3DArray(desc.ptr, width, height, depth,
E     File "cupy_backends/cuda/api/runtime.pyx", line 593, in cupy_backends.cuda.api.runtime.malloc3DArray
E       check_status(status)
E     File "cupy_backends/cuda/api/runtime.pyx", line 265, in cupy_backends.cuda.api.runtime.check_status
E       raise CUDARuntimeError(status)
E   cupy_backends.cuda.api.runtime.CUDARuntimeError: hipErrorUnknown: hipErrorUnknown

cupy_backends/cuda/api/runtime.pyx:265: AssertionError
----------------------------- Captured stderr call -----------------------------
Traceback (most recent call last):
  File "cupy_backends/cuda/api/runtime.pyx", line 644, in cupy_backends.cuda.api.runtime.freeArray
    check_status(status)
  File "cupy_backends/cuda/api/runtime.pyx", line 265, in cupy_backends.cuda.api.runtime.check_status
    raise CUDARuntimeError(status)
cupy_backends.cuda.api.runtime.CUDARuntimeError: hipErrorUnknown: hipErrorUnknown
_ TestAffineTransformTextureMemory.test_affine_transform_texture_memory[_param_227_{mode='nearest', order=0, output=float32, output_shape=None, shape=(100, 100), theta=270}] _

self = <<cupyx_tests.scipy_tests.ndimage_tests.test_interpolation.TestAffineTransformTextureMemory object at 0x7fac5111cbe0> ...e': 'nearest', 'order': 0, 'output': <class 'numpy.float32'>, 'output_shape': None, 'shape': (100, 100), 'theta': 270}>
xp = <module 'cupy' from '/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.hXnTrEAC7u/cupy/cupy/__init__.py'>
scp = <module 'cupyx.scipy' from '/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.hXnTrEAC7u/cupy/cupyx/scipy/__init__.py'>

    @testing.numpy_cupy_allclose(atol=0.1, scipy_name='scp')
    def test_affine_transform_texture_memory(self, xp, scp):
        a = xp.ones(self.shape, dtype=xp.float32)
        center = numpy.divide(numpy.subtract(self.shape, 1), 2)
    
        if len(self.shape) == 2:
            matrix = self._2d_rotation_matrix(self.theta, center)
        elif len(self.shape) == 3:
            matrix = self._3d_rotation_matrix(self.theta, center)
        else:
            return pytest.xfail('Unsupported shape')
    
        if self.output == 'empty':
            output = xp.empty(self.shape, dtype=xp.float32)
            if self.output_shape:
                return pytest.skip('This combination is tested in '
                                   'test_invalid_texture_arguments')
        else:
            output = self.output
    
        if self.output_shape:
            output_shape = (self.output_shape, ) * len(self.shape)
        else:
            output_shape = self.output_shape
    
        if xp == cupy:
            m = cupyx.scipy.ndimage.affine_transform
            matrix = cupy.array(matrix)
>           return m(a, matrix, output_shape=output_shape,
                     output=output, order=self.order,
                     mode=self.mode, texture_memory=True)

tests/cupyx_tests/scipy_tests/ndimage_tests/test_interpolation.py:398: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
cupyx/scipy/ndimage/interpolation.py:376: in affine_transform
    return _texture.affine_transformation(data=input,
cupyx/_texture.py:168: in affine_transformation
    texture_object = _create_texture_object(data,
cupyx/_texture.py:98: in _create_texture_object
    array = texture.CUDAarray(texture_fmt, *data.shape[::-1])
cupy/cuda/texture.pyx:296: in cupy.cuda.texture.CUDAarray.__init__
    self.ptr = runtime.malloc3DArray(desc.ptr, width, height, depth,
cupy_backends/cuda/api/runtime.pyx:593: in cupy_backends.cuda.api.runtime.malloc3DArray
    check_status(status)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

>   raise CUDARuntimeError(status)
E   AssertionError: Only cupy raises error
E   
E   Traceback (most recent call last):
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.hXnTrEAC7u/cupy/cupy/testing/_helper.py", line 47, in _call_func
E       result = impl(self, *args, **kw)
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.hXnTrEAC7u/cupy/tests/cupyx_tests/scipy_tests/ndimage_tests/test_interpolation.py", line 398, in test_affine_transform_texture_memory
E       return m(a, matrix, output_shape=output_shape,
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.hXnTrEAC7u/cupy/cupyx/scipy/ndimage/interpolation.py", line 376, in affine_transform
E       return _texture.affine_transformation(data=input,
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.hXnTrEAC7u/cupy/cupyx/_texture.py", line 168, in affine_transformation
E       texture_object = _create_texture_object(data,
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.hXnTrEAC7u/cupy/cupyx/_texture.py", line 98, in _create_texture_object
E       array = texture.CUDAarray(texture_fmt, *data.shape[::-1])
E     File "cupy/cuda/texture.pyx", line 296, in cupy.cuda.texture.CUDAarray.__init__
E       self.ptr = runtime.malloc3DArray(desc.ptr, width, height, depth,
E     File "cupy_backends/cuda/api/runtime.pyx", line 593, in cupy_backends.cuda.api.runtime.malloc3DArray
E       check_status(status)
E     File "cupy_backends/cuda/api/runtime.pyx", line 265, in cupy_backends.cuda.api.runtime.check_status
E       raise CUDARuntimeError(status)
E   cupy_backends.cuda.api.runtime.CUDARuntimeError: hipErrorUnknown: hipErrorUnknown

cupy_backends/cuda/api/runtime.pyx:265: AssertionError
----------------------------- Captured stderr call -----------------------------
Traceback (most recent call last):
  File "cupy_backends/cuda/api/runtime.pyx", line 644, in cupy_backends.cuda.api.runtime.freeArray
    check_status(status)
  File "cupy_backends/cuda/api/runtime.pyx", line 265, in cupy_backends.cuda.api.runtime.check_status
    raise CUDARuntimeError(status)
cupy_backends.cuda.api.runtime.CUDARuntimeError: hipErrorUnknown: hipErrorUnknown
_ TestAffineTransformTextureMemory.test_affine_transform_texture_memory[_param_228_{mode='nearest', order=0, output=float32, output_shape=None, shape=(10, 20), theta=0}] _

self = <<cupyx_tests.scipy_tests.ndimage_tests.test_interpolation.TestAffineTransformTextureMemory object at 0x7fab37e20e50> ...'mode': 'nearest', 'order': 0, 'output': <class 'numpy.float32'>, 'output_shape': None, 'shape': (10, 20), 'theta': 0}>
xp = <module 'cupy' from '/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.hXnTrEAC7u/cupy/cupy/__init__.py'>
scp = <module 'cupyx.scipy' from '/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.hXnTrEAC7u/cupy/cupyx/scipy/__init__.py'>

    @testing.numpy_cupy_allclose(atol=0.1, scipy_name='scp')
    def test_affine_transform_texture_memory(self, xp, scp):
        a = xp.ones(self.shape, dtype=xp.float32)
        center = numpy.divide(numpy.subtract(self.shape, 1), 2)
    
        if len(self.shape) == 2:
            matrix = self._2d_rotation_matrix(self.theta, center)
        elif len(self.shape) == 3:
            matrix = self._3d_rotation_matrix(self.theta, center)
        else:
            return pytest.xfail('Unsupported shape')
    
        if self.output == 'empty':
            output = xp.empty(self.shape, dtype=xp.float32)
            if self.output_shape:
                return pytest.skip('This combination is tested in '
                                   'test_invalid_texture_arguments')
        else:
            output = self.output
    
        if self.output_shape:
            output_shape = (self.output_shape, ) * len(self.shape)
        else:
            output_shape = self.output_shape
    
        if xp == cupy:
            m = cupyx.scipy.ndimage.affine_transform
            matrix = cupy.array(matrix)
>           return m(a, matrix, output_shape=output_shape,
                     output=output, order=self.order,
                     mode=self.mode, texture_memory=True)

tests/cupyx_tests/scipy_tests/ndimage_tests/test_interpolation.py:398: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
cupyx/scipy/ndimage/interpolation.py:376: in affine_transform
    return _texture.affine_transformation(data=input,
cupyx/_texture.py:168: in affine_transformation
    texture_object = _create_texture_object(data,
cupyx/_texture.py:98: in _create_texture_object
    array = texture.CUDAarray(texture_fmt, *data.shape[::-1])
cupy/cuda/texture.pyx:296: in cupy.cuda.texture.CUDAarray.__init__
    self.ptr = runtime.malloc3DArray(desc.ptr, width, height, depth,
cupy_backends/cuda/api/runtime.pyx:593: in cupy_backends.cuda.api.runtime.malloc3DArray
    check_status(status)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

>   raise CUDARuntimeError(status)
E   AssertionError: Only cupy raises error
E   
E   Traceback (most recent call last):
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.hXnTrEAC7u/cupy/cupy/testing/_helper.py", line 47, in _call_func
E       result = impl(self, *args, **kw)
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.hXnTrEAC7u/cupy/tests/cupyx_tests/scipy_tests/ndimage_tests/test_interpolation.py", line 398, in test_affine_transform_texture_memory
E       return m(a, matrix, output_shape=output_shape,
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.hXnTrEAC7u/cupy/cupyx/scipy/ndimage/interpolation.py", line 376, in affine_transform
E       return _texture.affine_transformation(data=input,
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.hXnTrEAC7u/cupy/cupyx/_texture.py", line 168, in affine_transformation
E       texture_object = _create_texture_object(data,
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.hXnTrEAC7u/cupy/cupyx/_texture.py", line 98, in _create_texture_object
E       array = texture.CUDAarray(texture_fmt, *data.shape[::-1])
E     File "cupy/cuda/texture.pyx", line 296, in cupy.cuda.texture.CUDAarray.__init__
E       self.ptr = runtime.malloc3DArray(desc.ptr, width, height, depth,
E     File "cupy_backends/cuda/api/runtime.pyx", line 593, in cupy_backends.cuda.api.runtime.malloc3DArray
E       check_status(status)
E     File "cupy_backends/cuda/api/runtime.pyx", line 265, in cupy_backends.cuda.api.runtime.check_status
E       raise CUDARuntimeError(status)
E   cupy_backends.cuda.api.runtime.CUDARuntimeError: hipErrorUnknown: hipErrorUnknown

cupy_backends/cuda/api/runtime.pyx:265: AssertionError
----------------------------- Captured stderr call -----------------------------
Traceback (most recent call last):
  File "cupy_backends/cuda/api/runtime.pyx", line 644, in cupy_backends.cuda.api.runtime.freeArray
    check_status(status)
  File "cupy_backends/cuda/api/runtime.pyx", line 265, in cupy_backends.cuda.api.runtime.check_status
    raise CUDARuntimeError(status)
cupy_backends.cuda.api.runtime.CUDARuntimeError: hipErrorUnknown: hipErrorUnknown
_ TestAffineTransformTextureMemory.test_affine_transform_texture_memory[_param_229_{mode='nearest', order=0, output=float32, output_shape=None, shape=(10, 20), theta=90}] _

self = <<cupyx_tests.scipy_tests.ndimage_tests.test_interpolation.TestAffineTransformTextureMemory object at 0x7fab38f46340> ...mode': 'nearest', 'order': 0, 'output': <class 'numpy.float32'>, 'output_shape': None, 'shape': (10, 20), 'theta': 90}>
xp = <module 'cupy' from '/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.hXnTrEAC7u/cupy/cupy/__init__.py'>
scp = <module 'cupyx.scipy' from '/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.hXnTrEAC7u/cupy/cupyx/scipy/__init__.py'>

    @testing.numpy_cupy_allclose(atol=0.1, scipy_name='scp')
    def test_affine_transform_texture_memory(self, xp, scp):
        a = xp.ones(self.shape, dtype=xp.float32)
        center = numpy.divide(numpy.subtract(self.shape, 1), 2)
    
        if len(self.shape) == 2:
            matrix = self._2d_rotation_matrix(self.theta, center)
        elif len(self.shape) == 3:
            matrix = self._3d_rotation_matrix(self.theta, center)
        else:
            return pytest.xfail('Unsupported shape')
    
        if self.output == 'empty':
            output = xp.empty(self.shape, dtype=xp.float32)
            if self.output_shape:
                return pytest.skip('This combination is tested in '
                                   'test_invalid_texture_arguments')
        else:
            output = self.output
    
        if self.output_shape:
            output_shape = (self.output_shape, ) * len(self.shape)
        else:
            output_shape = self.output_shape
    
        if xp == cupy:
            m = cupyx.scipy.ndimage.affine_transform
            matrix = cupy.array(matrix)
>           return m(a, matrix, output_shape=output_shape,
                     output=output, order=self.order,
                     mode=self.mode, texture_memory=True)

tests/cupyx_tests/scipy_tests/ndimage_tests/test_interpolation.py:398: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
cupyx/scipy/ndimage/interpolation.py:376: in affine_transform
    return _texture.affine_transformation(data=input,
cupyx/_texture.py:168: in affine_transformation
    texture_object = _create_texture_object(data,
cupyx/_texture.py:98: in _create_texture_object
    array = texture.CUDAarray(texture_fmt, *data.shape[::-1])
cupy/cuda/texture.pyx:296: in cupy.cuda.texture.CUDAarray.__init__
    self.ptr = runtime.malloc3DArray(desc.ptr, width, height, depth,
cupy_backends/cuda/api/runtime.pyx:593: in cupy_backends.cuda.api.runtime.malloc3DArray
    check_status(status)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

>   raise CUDARuntimeError(status)
E   AssertionError: Only cupy raises error
E   
E   Traceback (most recent call last):
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.hXnTrEAC7u/cupy/cupy/testing/_helper.py", line 47, in _call_func
E       result = impl(self, *args, **kw)
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.hXnTrEAC7u/cupy/tests/cupyx_tests/scipy_tests/ndimage_tests/test_interpolation.py", line 398, in test_affine_transform_texture_memory
E       return m(a, matrix, output_shape=output_shape,
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.hXnTrEAC7u/cupy/cupyx/scipy/ndimage/interpolation.py", line 376, in affine_transform
E       return _texture.affine_transformation(data=input,
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.hXnTrEAC7u/cupy/cupyx/_texture.py", line 168, in affine_transformation
E       texture_object = _create_texture_object(data,
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.hXnTrEAC7u/cupy/cupyx/_texture.py", line 98, in _create_texture_object
E       array = texture.CUDAarray(texture_fmt, *data.shape[::-1])
E     File "cupy/cuda/texture.pyx", line 296, in cupy.cuda.texture.CUDAarray.__init__
E       self.ptr = runtime.malloc3DArray(desc.ptr, width, height, depth,
E     File "cupy_backends/cuda/api/runtime.pyx", line 593, in cupy_backends.cuda.api.runtime.malloc3DArray
E       check_status(status)
E     File "cupy_backends/cuda/api/runtime.pyx", line 265, in cupy_backends.cuda.api.runtime.check_status
E       raise CUDARuntimeError(status)
E   cupy_backends.cuda.api.runtime.CUDARuntimeError: hipErrorUnknown: hipErrorUnknown

cupy_backends/cuda/api/runtime.pyx:265: AssertionError
----------------------------- Captured stderr call -----------------------------
Traceback (most recent call last):
  File "cupy_backends/cuda/api/runtime.pyx", line 644, in cupy_backends.cuda.api.runtime.freeArray
    check_status(status)
  File "cupy_backends/cuda/api/runtime.pyx", line 265, in cupy_backends.cuda.api.runtime.check_status
    raise CUDARuntimeError(status)
cupy_backends.cuda.api.runtime.CUDARuntimeError: hipErrorUnknown: hipErrorUnknown
_ TestAffineTransformTextureMemory.test_affine_transform_texture_memory[_param_230_{mode='nearest', order=0, output=float32, output_shape=None, shape=(10, 20), theta=180}] _

self = <<cupyx_tests.scipy_tests.ndimage_tests.test_interpolation.TestAffineTransformTextureMemory object at 0x7fac51679fd0> ...ode': 'nearest', 'order': 0, 'output': <class 'numpy.float32'>, 'output_shape': None, 'shape': (10, 20), 'theta': 180}>
xp = <module 'cupy' from '/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.hXnTrEAC7u/cupy/cupy/__init__.py'>
scp = <module 'cupyx.scipy' from '/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.hXnTrEAC7u/cupy/cupyx/scipy/__init__.py'>

    @testing.numpy_cupy_allclose(atol=0.1, scipy_name='scp')
    def test_affine_transform_texture_memory(self, xp, scp):
        a = xp.ones(self.shape, dtype=xp.float32)
        center = numpy.divide(numpy.subtract(self.shape, 1), 2)
    
        if len(self.shape) == 2:
            matrix = self._2d_rotation_matrix(self.theta, center)
        elif len(self.shape) == 3:
            matrix = self._3d_rotation_matrix(self.theta, center)
        else:
            return pytest.xfail('Unsupported shape')
    
        if self.output == 'empty':
            output = xp.empty(self.shape, dtype=xp.float32)
            if self.output_shape:
                return pytest.skip('This combination is tested in '
                                   'test_invalid_texture_arguments')
        else:
            output = self.output
    
        if self.output_shape:
            output_shape = (self.output_shape, ) * len(self.shape)
        else:
            output_shape = self.output_shape
    
        if xp == cupy:
            m = cupyx.scipy.ndimage.affine_transform
            matrix = cupy.array(matrix)
>           return m(a, matrix, output_shape=output_shape,
                     output=output, order=self.order,
                     mode=self.mode, texture_memory=True)

tests/cupyx_tests/scipy_tests/ndimage_tests/test_interpolation.py:398: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
cupyx/scipy/ndimage/interpolation.py:376: in affine_transform
    return _texture.affine_transformation(data=input,
cupyx/_texture.py:168: in affine_transformation
    texture_object = _create_texture_object(data,
cupyx/_texture.py:98: in _create_texture_object
    array = texture.CUDAarray(texture_fmt, *data.shape[::-1])
cupy/cuda/texture.pyx:296: in cupy.cuda.texture.CUDAarray.__init__
    self.ptr = runtime.malloc3DArray(desc.ptr, width, height, depth,
cupy_backends/cuda/api/runtime.pyx:593: in cupy_backends.cuda.api.runtime.malloc3DArray
    check_status(status)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

>   raise CUDARuntimeError(status)
E   AssertionError: Only cupy raises error
E   
E   Traceback (most recent call last):
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.hXnTrEAC7u/cupy/cupy/testing/_helper.py", line 47, in _call_func
E       result = impl(self, *args, **kw)
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.hXnTrEAC7u/cupy/tests/cupyx_tests/scipy_tests/ndimage_tests/test_interpolation.py", line 398, in test_affine_transform_texture_memory
E       return m(a, matrix, output_shape=output_shape,
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.hXnTrEAC7u/cupy/cupyx/scipy/ndimage/interpolation.py", line 376, in affine_transform
E       return _texture.affine_transformation(data=input,
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.hXnTrEAC7u/cupy/cupyx/_texture.py", line 168, in affine_transformation
E       texture_object = _create_texture_object(data,
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.hXnTrEAC7u/cupy/cupyx/_texture.py", line 98, in _create_texture_object
E       array = texture.CUDAarray(texture_fmt, *data.shape[::-1])
E     File "cupy/cuda/texture.pyx", line 296, in cupy.cuda.texture.CUDAarray.__init__
E       self.ptr = runtime.malloc3DArray(desc.ptr, width, height, depth,
E     File "cupy_backends/cuda/api/runtime.pyx", line 593, in cupy_backends.cuda.api.runtime.malloc3DArray
E       check_status(status)
E     File "cupy_backends/cuda/api/runtime.pyx", line 265, in cupy_backends.cuda.api.runtime.check_status
E       raise CUDARuntimeError(status)
E   cupy_backends.cuda.api.runtime.CUDARuntimeError: hipErrorUnknown: hipErrorUnknown

cupy_backends/cuda/api/runtime.pyx:265: AssertionError
----------------------------- Captured stderr call -----------------------------
Traceback (most recent call last):
  File "cupy_backends/cuda/api/runtime.pyx", line 644, in cupy_backends.cuda.api.runtime.freeArray
    check_status(status)
  File "cupy_backends/cuda/api/runtime.pyx", line 265, in cupy_backends.cuda.api.runtime.check_status
    raise CUDARuntimeError(status)
cupy_backends.cuda.api.runtime.CUDARuntimeError: hipErrorUnknown: hipErrorUnknown
_ TestAffineTransformTextureMemory.test_affine_transform_texture_memory[_param_231_{mode='nearest', order=0, output=float32, output_shape=None, shape=(10, 20), theta=270}] _

self = <<cupyx_tests.scipy_tests.ndimage_tests.test_interpolation.TestAffineTransformTextureMemory object at 0x7fab3700bd30> ...ode': 'nearest', 'order': 0, 'output': <class 'numpy.float32'>, 'output_shape': None, 'shape': (10, 20), 'theta': 270}>
xp = <module 'cupy' from '/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.hXnTrEAC7u/cupy/cupy/__init__.py'>
scp = <module 'cupyx.scipy' from '/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.hXnTrEAC7u/cupy/cupyx/scipy/__init__.py'>

    @testing.numpy_cupy_allclose(atol=0.1, scipy_name='scp')
    def test_affine_transform_texture_memory(self, xp, scp):
        a = xp.ones(self.shape, dtype=xp.float32)
        center = numpy.divide(numpy.subtract(self.shape, 1), 2)
    
        if len(self.shape) == 2:
            matrix = self._2d_rotation_matrix(self.theta, center)
        elif len(self.shape) == 3:
            matrix = self._3d_rotation_matrix(self.theta, center)
        else:
            return pytest.xfail('Unsupported shape')
    
        if self.output == 'empty':
            output = xp.empty(self.shape, dtype=xp.float32)
            if self.output_shape:
                return pytest.skip('This combination is tested in '
                                   'test_invalid_texture_arguments')
        else:
            output = self.output
    
        if self.output_shape:
            output_shape = (self.output_shape, ) * len(self.shape)
        else:
            output_shape = self.output_shape
    
        if xp == cupy:
            m = cupyx.scipy.ndimage.affine_transform
            matrix = cupy.array(matrix)
>           return m(a, matrix, output_shape=output_shape,
                     output=output, order=self.order,
                     mode=self.mode, texture_memory=True)

tests/cupyx_tests/scipy_tests/ndimage_tests/test_interpolation.py:398: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
cupyx/scipy/ndimage/interpolation.py:376: in affine_transform
    return _texture.affine_transformation(data=input,
cupyx/_texture.py:168: in affine_transformation
    texture_object = _create_texture_object(data,
cupyx/_texture.py:98: in _create_texture_object
    array = texture.CUDAarray(texture_fmt, *data.shape[::-1])
cupy/cuda/texture.pyx:296: in cupy.cuda.texture.CUDAarray.__init__
    self.ptr = runtime.malloc3DArray(desc.ptr, width, height, depth,
cupy_backends/cuda/api/runtime.pyx:593: in cupy_backends.cuda.api.runtime.malloc3DArray
    check_status(status)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

>   raise CUDARuntimeError(status)
E   AssertionError: Only cupy raises error
E   
E   Traceback (most recent call last):
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.hXnTrEAC7u/cupy/cupy/testing/_helper.py", line 47, in _call_func
E       result = impl(self, *args, **kw)
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.hXnTrEAC7u/cupy/tests/cupyx_tests/scipy_tests/ndimage_tests/test_interpolation.py", line 398, in test_affine_transform_texture_memory
E       return m(a, matrix, output_shape=output_shape,
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.hXnTrEAC7u/cupy/cupyx/scipy/ndimage/interpolation.py", line 376, in affine_transform
E       return _texture.affine_transformation(data=input,
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.hXnTrEAC7u/cupy/cupyx/_texture.py", line 168, in affine_transformation
E       texture_object = _create_texture_object(data,
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.hXnTrEAC7u/cupy/cupyx/_texture.py", line 98, in _create_texture_object
E       array = texture.CUDAarray(texture_fmt, *data.shape[::-1])
E     File "cupy/cuda/texture.pyx", line 296, in cupy.cuda.texture.CUDAarray.__init__
E       self.ptr = runtime.malloc3DArray(desc.ptr, width, height, depth,
E     File "cupy_backends/cuda/api/runtime.pyx", line 593, in cupy_backends.cuda.api.runtime.malloc3DArray
E       check_status(status)
E     File "cupy_backends/cuda/api/runtime.pyx", line 265, in cupy_backends.cuda.api.runtime.check_status
E       raise CUDARuntimeError(status)
E   cupy_backends.cuda.api.runtime.CUDARuntimeError: hipErrorUnknown: hipErrorUnknown

cupy_backends/cuda/api/runtime.pyx:265: AssertionError
----------------------------- Captured stderr call -----------------------------
Traceback (most recent call last):
  File "cupy_backends/cuda/api/runtime.pyx", line 644, in cupy_backends.cuda.api.runtime.freeArray
    check_status(status)
  File "cupy_backends/cuda/api/runtime.pyx", line 265, in cupy_backends.cuda.api.runtime.check_status
    raise CUDARuntimeError(status)
cupy_backends.cuda.api.runtime.CUDARuntimeError: hipErrorUnknown: hipErrorUnknown
_ TestAffineTransformTextureMemory.test_affine_transform_texture_memory[_param_232_{mode='nearest', order=0, output=float32, output_shape=None, shape=(10, 10, 10), theta=0}] _

self = <<cupyx_tests.scipy_tests.ndimage_tests.test_interpolation.TestAffineTransformTextureMemory object at 0x7fab37c80dc0> ...e': 'nearest', 'order': 0, 'output': <class 'numpy.float32'>, 'output_shape': None, 'shape': (10, 10, 10), 'theta': 0}>
xp = <module 'cupy' from '/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.hXnTrEAC7u/cupy/cupy/__init__.py'>
scp = <module 'cupyx.scipy' from '/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.hXnTrEAC7u/cupy/cupyx/scipy/__init__.py'>

    @testing.numpy_cupy_allclose(atol=0.1, scipy_name='scp')
    def test_affine_transform_texture_memory(self, xp, scp):
        a = xp.ones(self.shape, dtype=xp.float32)
        center = numpy.divide(numpy.subtract(self.shape, 1), 2)
    
        if len(self.shape) == 2:
            matrix = self._2d_rotation_matrix(self.theta, center)
        elif len(self.shape) == 3:
            matrix = self._3d_rotation_matrix(self.theta, center)
        else:
            return pytest.xfail('Unsupported shape')
    
        if self.output == 'empty':
            output = xp.empty(self.shape, dtype=xp.float32)
            if self.output_shape:
                return pytest.skip('This combination is tested in '
                                   'test_invalid_texture_arguments')
        else:
            output = self.output
    
        if self.output_shape:
            output_shape = (self.output_shape, ) * len(self.shape)
        else:
            output_shape = self.output_shape
    
        if xp == cupy:
            m = cupyx.scipy.ndimage.affine_transform
            matrix = cupy.array(matrix)
>           return m(a, matrix, output_shape=output_shape,
                     output=output, order=self.order,
                     mode=self.mode, texture_memory=True)

tests/cupyx_tests/scipy_tests/ndimage_tests/test_interpolation.py:398: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
cupyx/scipy/ndimage/interpolation.py:376: in affine_transform
    return _texture.affine_transformation(data=input,
cupyx/_texture.py:168: in affine_transformation
    texture_object = _create_texture_object(data,
cupyx/_texture.py:98: in _create_texture_object
    array = texture.CUDAarray(texture_fmt, *data.shape[::-1])
cupy/cuda/texture.pyx:296: in cupy.cuda.texture.CUDAarray.__init__
    self.ptr = runtime.malloc3DArray(desc.ptr, width, height, depth,
cupy_backends/cuda/api/runtime.pyx:593: in cupy_backends.cuda.api.runtime.malloc3DArray
    check_status(status)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

>   raise CUDARuntimeError(status)
E   AssertionError: Only cupy raises error
E   
E   Traceback (most recent call last):
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.hXnTrEAC7u/cupy/cupy/testing/_helper.py", line 47, in _call_func
E       result = impl(self, *args, **kw)
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.hXnTrEAC7u/cupy/tests/cupyx_tests/scipy_tests/ndimage_tests/test_interpolation.py", line 398, in test_affine_transform_texture_memory
E       return m(a, matrix, output_shape=output_shape,
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.hXnTrEAC7u/cupy/cupyx/scipy/ndimage/interpolation.py", line 376, in affine_transform
E       return _texture.affine_transformation(data=input,
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.hXnTrEAC7u/cupy/cupyx/_texture.py", line 168, in affine_transformation
E       texture_object = _create_texture_object(data,
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.hXnTrEAC7u/cupy/cupyx/_texture.py", line 98, in _create_texture_object
E       array = texture.CUDAarray(texture_fmt, *data.shape[::-1])
E     File "cupy/cuda/texture.pyx", line 296, in cupy.cuda.texture.CUDAarray.__init__
E       self.ptr = runtime.malloc3DArray(desc.ptr, width, height, depth,
E     File "cupy_backends/cuda/api/runtime.pyx", line 593, in cupy_backends.cuda.api.runtime.malloc3DArray
E       check_status(status)
E     File "cupy_backends/cuda/api/runtime.pyx", line 265, in cupy_backends.cuda.api.runtime.check_status
E       raise CUDARuntimeError(status)
E   cupy_backends.cuda.api.runtime.CUDARuntimeError: hipErrorUnknown: hipErrorUnknown

cupy_backends/cuda/api/runtime.pyx:265: AssertionError
----------------------------- Captured stderr call -----------------------------
Traceback (most recent call last):
  File "cupy_backends/cuda/api/runtime.pyx", line 644, in cupy_backends.cuda.api.runtime.freeArray
    check_status(status)
  File "cupy_backends/cuda/api/runtime.pyx", line 265, in cupy_backends.cuda.api.runtime.check_status
    raise CUDARuntimeError(status)
cupy_backends.cuda.api.runtime.CUDARuntimeError: hipErrorUnknown: hipErrorUnknown
_ TestAffineTransformTextureMemory.test_affine_transform_texture_memory[_param_233_{mode='nearest', order=0, output=float32, output_shape=None, shape=(10, 10, 10), theta=90}] _

self = <<cupyx_tests.scipy_tests.ndimage_tests.test_interpolation.TestAffineTransformTextureMemory object at 0x7fab36ff9fa0> ...': 'nearest', 'order': 0, 'output': <class 'numpy.float32'>, 'output_shape': None, 'shape': (10, 10, 10), 'theta': 90}>
xp = <module 'cupy' from '/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.hXnTrEAC7u/cupy/cupy/__init__.py'>
scp = <module 'cupyx.scipy' from '/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.hXnTrEAC7u/cupy/cupyx/scipy/__init__.py'>

    @testing.numpy_cupy_allclose(atol=0.1, scipy_name='scp')
    def test_affine_transform_texture_memory(self, xp, scp):
        a = xp.ones(self.shape, dtype=xp.float32)
        center = numpy.divide(numpy.subtract(self.shape, 1), 2)
    
        if len(self.shape) == 2:
            matrix = self._2d_rotation_matrix(self.theta, center)
        elif len(self.shape) == 3:
            matrix = self._3d_rotation_matrix(self.theta, center)
        else:
            return pytest.xfail('Unsupported shape')
    
        if self.output == 'empty':
            output = xp.empty(self.shape, dtype=xp.float32)
            if self.output_shape:
                return pytest.skip('This combination is tested in '
                                   'test_invalid_texture_arguments')
        else:
            output = self.output
    
        if self.output_shape:
            output_shape = (self.output_shape, ) * len(self.shape)
        else:
            output_shape = self.output_shape
    
        if xp == cupy:
            m = cupyx.scipy.ndimage.affine_transform
            matrix = cupy.array(matrix)
>           return m(a, matrix, output_shape=output_shape,
                     output=output, order=self.order,
                     mode=self.mode, texture_memory=True)

tests/cupyx_tests/scipy_tests/ndimage_tests/test_interpolation.py:398: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
cupyx/scipy/ndimage/interpolation.py:376: in affine_transform
    return _texture.affine_transformation(data=input,
cupyx/_texture.py:168: in affine_transformation
    texture_object = _create_texture_object(data,
cupyx/_texture.py:98: in _create_texture_object
    array = texture.CUDAarray(texture_fmt, *data.shape[::-1])
cupy/cuda/texture.pyx:296: in cupy.cuda.texture.CUDAarray.__init__
    self.ptr = runtime.malloc3DArray(desc.ptr, width, height, depth,
cupy_backends/cuda/api/runtime.pyx:593: in cupy_backends.cuda.api.runtime.malloc3DArray
    check_status(status)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

>   raise CUDARuntimeError(status)
E   AssertionError: Only cupy raises error
E   
E   Traceback (most recent call last):
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.hXnTrEAC7u/cupy/cupy/testing/_helper.py", line 47, in _call_func
E       result = impl(self, *args, **kw)
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.hXnTrEAC7u/cupy/tests/cupyx_tests/scipy_tests/ndimage_tests/test_interpolation.py", line 398, in test_affine_transform_texture_memory
E       return m(a, matrix, output_shape=output_shape,
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.hXnTrEAC7u/cupy/cupyx/scipy/ndimage/interpolation.py", line 376, in affine_transform
E       return _texture.affine_transformation(data=input,
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.hXnTrEAC7u/cupy/cupyx/_texture.py", line 168, in affine_transformation
E       texture_object = _create_texture_object(data,
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.hXnTrEAC7u/cupy/cupyx/_texture.py", line 98, in _create_texture_object
E       array = texture.CUDAarray(texture_fmt, *data.shape[::-1])
E     File "cupy/cuda/texture.pyx", line 296, in cupy.cuda.texture.CUDAarray.__init__
E       self.ptr = runtime.malloc3DArray(desc.ptr, width, height, depth,
E     File "cupy_backends/cuda/api/runtime.pyx", line 593, in cupy_backends.cuda.api.runtime.malloc3DArray
E       check_status(status)
E     File "cupy_backends/cuda/api/runtime.pyx", line 265, in cupy_backends.cuda.api.runtime.check_status
E       raise CUDARuntimeError(status)
E   cupy_backends.cuda.api.runtime.CUDARuntimeError: hipErrorUnknown: hipErrorUnknown

cupy_backends/cuda/api/runtime.pyx:265: AssertionError
----------------------------- Captured stderr call -----------------------------
Traceback (most recent call last):
  File "cupy_backends/cuda/api/runtime.pyx", line 644, in cupy_backends.cuda.api.runtime.freeArray
    check_status(status)
  File "cupy_backends/cuda/api/runtime.pyx", line 265, in cupy_backends.cuda.api.runtime.check_status
    raise CUDARuntimeError(status)
cupy_backends.cuda.api.runtime.CUDARuntimeError: hipErrorUnknown: hipErrorUnknown
_ TestAffineTransformTextureMemory.test_affine_transform_texture_memory[_param_234_{mode='nearest', order=0, output=float32, output_shape=None, shape=(10, 10, 10), theta=180}] _

self = <<cupyx_tests.scipy_tests.ndimage_tests.test_interpolation.TestAffineTransformTextureMemory object at 0x7fab37148550> ...: 'nearest', 'order': 0, 'output': <class 'numpy.float32'>, 'output_shape': None, 'shape': (10, 10, 10), 'theta': 180}>
xp = <module 'cupy' from '/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.hXnTrEAC7u/cupy/cupy/__init__.py'>
scp = <module 'cupyx.scipy' from '/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.hXnTrEAC7u/cupy/cupyx/scipy/__init__.py'>

    @testing.numpy_cupy_allclose(atol=0.1, scipy_name='scp')
    def test_affine_transform_texture_memory(self, xp, scp):
        a = xp.ones(self.shape, dtype=xp.float32)
        center = numpy.divide(numpy.subtract(self.shape, 1), 2)
    
        if len(self.shape) == 2:
            matrix = self._2d_rotation_matrix(self.theta, center)
        elif len(self.shape) == 3:
            matrix = self._3d_rotation_matrix(self.theta, center)
        else:
            return pytest.xfail('Unsupported shape')
    
        if self.output == 'empty':
            output = xp.empty(self.shape, dtype=xp.float32)
            if self.output_shape:
                return pytest.skip('This combination is tested in '
                                   'test_invalid_texture_arguments')
        else:
            output = self.output
    
        if self.output_shape:
            output_shape = (self.output_shape, ) * len(self.shape)
        else:
            output_shape = self.output_shape
    
        if xp == cupy:
            m = cupyx.scipy.ndimage.affine_transform
            matrix = cupy.array(matrix)
>           return m(a, matrix, output_shape=output_shape,
                     output=output, order=self.order,
                     mode=self.mode, texture_memory=True)

tests/cupyx_tests/scipy_tests/ndimage_tests/test_interpolation.py:398: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
cupyx/scipy/ndimage/interpolation.py:376: in affine_transform
    return _texture.affine_transformation(data=input,
cupyx/_texture.py:168: in affine_transformation
    texture_object = _create_texture_object(data,
cupyx/_texture.py:98: in _create_texture_object
    array = texture.CUDAarray(texture_fmt, *data.shape[::-1])
cupy/cuda/texture.pyx:296: in cupy.cuda.texture.CUDAarray.__init__
    self.ptr = runtime.malloc3DArray(desc.ptr, width, height, depth,
cupy_backends/cuda/api/runtime.pyx:593: in cupy_backends.cuda.api.runtime.malloc3DArray
    check_status(status)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

>   raise CUDARuntimeError(status)
E   AssertionError: Only cupy raises error
E   
E   Traceback (most recent call last):
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.hXnTrEAC7u/cupy/cupy/testing/_helper.py", line 47, in _call_func
E       result = impl(self, *args, **kw)
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.hXnTrEAC7u/cupy/tests/cupyx_tests/scipy_tests/ndimage_tests/test_interpolation.py", line 398, in test_affine_transform_texture_memory
E       return m(a, matrix, output_shape=output_shape,
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.hXnTrEAC7u/cupy/cupyx/scipy/ndimage/interpolation.py", line 376, in affine_transform
E       return _texture.affine_transformation(data=input,
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.hXnTrEAC7u/cupy/cupyx/_texture.py", line 168, in affine_transformation
E       texture_object = _create_texture_object(data,
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.hXnTrEAC7u/cupy/cupyx/_texture.py", line 98, in _create_texture_object
E       array = texture.CUDAarray(texture_fmt, *data.shape[::-1])
E     File "cupy/cuda/texture.pyx", line 296, in cupy.cuda.texture.CUDAarray.__init__
E       self.ptr = runtime.malloc3DArray(desc.ptr, width, height, depth,
E     File "cupy_backends/cuda/api/runtime.pyx", line 593, in cupy_backends.cuda.api.runtime.malloc3DArray
E       check_status(status)
E     File "cupy_backends/cuda/api/runtime.pyx", line 265, in cupy_backends.cuda.api.runtime.check_status
E       raise CUDARuntimeError(status)
E   cupy_backends.cuda.api.runtime.CUDARuntimeError: hipErrorUnknown: hipErrorUnknown

cupy_backends/cuda/api/runtime.pyx:265: AssertionError
----------------------------- Captured stderr call -----------------------------
Traceback (most recent call last):
  File "cupy_backends/cuda/api/runtime.pyx", line 644, in cupy_backends.cuda.api.runtime.freeArray
    check_status(status)
  File "cupy_backends/cuda/api/runtime.pyx", line 265, in cupy_backends.cuda.api.runtime.check_status
    raise CUDARuntimeError(status)
cupy_backends.cuda.api.runtime.CUDARuntimeError: hipErrorUnknown: hipErrorUnknown
_ TestAffineTransformTextureMemory.test_affine_transform_texture_memory[_param_235_{mode='nearest', order=0, output=float32, output_shape=None, shape=(10, 10, 10), theta=270}] _

self = <<cupyx_tests.scipy_tests.ndimage_tests.test_interpolation.TestAffineTransformTextureMemory object at 0x7fab37185e20> ...: 'nearest', 'order': 0, 'output': <class 'numpy.float32'>, 'output_shape': None, 'shape': (10, 10, 10), 'theta': 270}>
xp = <module 'cupy' from '/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.hXnTrEAC7u/cupy/cupy/__init__.py'>
scp = <module 'cupyx.scipy' from '/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.hXnTrEAC7u/cupy/cupyx/scipy/__init__.py'>

    @testing.numpy_cupy_allclose(atol=0.1, scipy_name='scp')
    def test_affine_transform_texture_memory(self, xp, scp):
        a = xp.ones(self.shape, dtype=xp.float32)
        center = numpy.divide(numpy.subtract(self.shape, 1), 2)
    
        if len(self.shape) == 2:
            matrix = self._2d_rotation_matrix(self.theta, center)
        elif len(self.shape) == 3:
            matrix = self._3d_rotation_matrix(self.theta, center)
        else:
            return pytest.xfail('Unsupported shape')
    
        if self.output == 'empty':
            output = xp.empty(self.shape, dtype=xp.float32)
            if self.output_shape:
                return pytest.skip('This combination is tested in '
                                   'test_invalid_texture_arguments')
        else:
            output = self.output
    
        if self.output_shape:
            output_shape = (self.output_shape, ) * len(self.shape)
        else:
            output_shape = self.output_shape
    
        if xp == cupy:
            m = cupyx.scipy.ndimage.affine_transform
            matrix = cupy.array(matrix)
>           return m(a, matrix, output_shape=output_shape,
                     output=output, order=self.order,
                     mode=self.mode, texture_memory=True)

tests/cupyx_tests/scipy_tests/ndimage_tests/test_interpolation.py:398: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
cupyx/scipy/ndimage/interpolation.py:376: in affine_transform
    return _texture.affine_transformation(data=input,
cupyx/_texture.py:168: in affine_transformation
    texture_object = _create_texture_object(data,
cupyx/_texture.py:98: in _create_texture_object
    array = texture.CUDAarray(texture_fmt, *data.shape[::-1])
cupy/cuda/texture.pyx:296: in cupy.cuda.texture.CUDAarray.__init__
    self.ptr = runtime.malloc3DArray(desc.ptr, width, height, depth,
cupy_backends/cuda/api/runtime.pyx:593: in cupy_backends.cuda.api.runtime.malloc3DArray
    check_status(status)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

>   raise CUDARuntimeError(status)
E   AssertionError: Only cupy raises error
E   
E   Traceback (most recent call last):
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.hXnTrEAC7u/cupy/cupy/testing/_helper.py", line 47, in _call_func
E       result = impl(self, *args, **kw)
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.hXnTrEAC7u/cupy/tests/cupyx_tests/scipy_tests/ndimage_tests/test_interpolation.py", line 398, in test_affine_transform_texture_memory
E       return m(a, matrix, output_shape=output_shape,
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.hXnTrEAC7u/cupy/cupyx/scipy/ndimage/interpolation.py", line 376, in affine_transform
E       return _texture.affine_transformation(data=input,
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.hXnTrEAC7u/cupy/cupyx/_texture.py", line 168, in affine_transformation
E       texture_object = _create_texture_object(data,
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.hXnTrEAC7u/cupy/cupyx/_texture.py", line 98, in _create_texture_object
E       array = texture.CUDAarray(texture_fmt, *data.shape[::-1])
E     File "cupy/cuda/texture.pyx", line 296, in cupy.cuda.texture.CUDAarray.__init__
E       self.ptr = runtime.malloc3DArray(desc.ptr, width, height, depth,
E     File "cupy_backends/cuda/api/runtime.pyx", line 593, in cupy_backends.cuda.api.runtime.malloc3DArray
E       check_status(status)
E     File "cupy_backends/cuda/api/runtime.pyx", line 265, in cupy_backends.cuda.api.runtime.check_status
E       raise CUDARuntimeError(status)
E   cupy_backends.cuda.api.runtime.CUDARuntimeError: hipErrorUnknown: hipErrorUnknown

cupy_backends/cuda/api/runtime.pyx:265: AssertionError
----------------------------- Captured stderr call -----------------------------
Traceback (most recent call last):
  File "cupy_backends/cuda/api/runtime.pyx", line 644, in cupy_backends.cuda.api.runtime.freeArray
    check_status(status)
  File "cupy_backends/cuda/api/runtime.pyx", line 265, in cupy_backends.cuda.api.runtime.check_status
    raise CUDARuntimeError(status)
cupy_backends.cuda.api.runtime.CUDARuntimeError: hipErrorUnknown: hipErrorUnknown
_ TestAffineTransformTextureMemory.test_affine_transform_texture_memory[_param_236_{mode='nearest', order=0, output=float32, output_shape=None, shape=(10, 20, 30), theta=0}] _

self = <<cupyx_tests.scipy_tests.ndimage_tests.test_interpolation.TestAffineTransformTextureMemory object at 0x7fab37129fa0> ...e': 'nearest', 'order': 0, 'output': <class 'numpy.float32'>, 'output_shape': None, 'shape': (10, 20, 30), 'theta': 0}>
xp = <module 'cupy' from '/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.hXnTrEAC7u/cupy/cupy/__init__.py'>
scp = <module 'cupyx.scipy' from '/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.hXnTrEAC7u/cupy/cupyx/scipy/__init__.py'>

    @testing.numpy_cupy_allclose(atol=0.1, scipy_name='scp')
    def test_affine_transform_texture_memory(self, xp, scp):
        a = xp.ones(self.shape, dtype=xp.float32)
        center = numpy.divide(numpy.subtract(self.shape, 1), 2)
    
        if len(self.shape) == 2:
            matrix = self._2d_rotation_matrix(self.theta, center)
        elif len(self.shape) == 3:
            matrix = self._3d_rotation_matrix(self.theta, center)
        else:
            return pytest.xfail('Unsupported shape')
    
        if self.output == 'empty':
            output = xp.empty(self.shape, dtype=xp.float32)
            if self.output_shape:
                return pytest.skip('This combination is tested in '
                                   'test_invalid_texture_arguments')
        else:
            output = self.output
    
        if self.output_shape:
            output_shape = (self.output_shape, ) * len(self.shape)
        else:
            output_shape = self.output_shape
    
        if xp == cupy:
            m = cupyx.scipy.ndimage.affine_transform
            matrix = cupy.array(matrix)
>           return m(a, matrix, output_shape=output_shape,
                     output=output, order=self.order,
                     mode=self.mode, texture_memory=True)

tests/cupyx_tests/scipy_tests/ndimage_tests/test_interpolation.py:398: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
cupyx/scipy/ndimage/interpolation.py:376: in affine_transform
    return _texture.affine_transformation(data=input,
cupyx/_texture.py:168: in affine_transformation
    texture_object = _create_texture_object(data,
cupyx/_texture.py:98: in _create_texture_object
    array = texture.CUDAarray(texture_fmt, *data.shape[::-1])
cupy/cuda/texture.pyx:296: in cupy.cuda.texture.CUDAarray.__init__
    self.ptr = runtime.malloc3DArray(desc.ptr, width, height, depth,
cupy_backends/cuda/api/runtime.pyx:593: in cupy_backends.cuda.api.runtime.malloc3DArray
    check_status(status)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

>   raise CUDARuntimeError(status)
E   AssertionError: Only cupy raises error
E   
E   Traceback (most recent call last):
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.hXnTrEAC7u/cupy/cupy/testing/_helper.py", line 47, in _call_func
E       result = impl(self, *args, **kw)
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.hXnTrEAC7u/cupy/tests/cupyx_tests/scipy_tests/ndimage_tests/test_interpolation.py", line 398, in test_affine_transform_texture_memory
E       return m(a, matrix, output_shape=output_shape,
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.hXnTrEAC7u/cupy/cupyx/scipy/ndimage/interpolation.py", line 376, in affine_transform
E       return _texture.affine_transformation(data=input,
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.hXnTrEAC7u/cupy/cupyx/_texture.py", line 168, in affine_transformation
E       texture_object = _create_texture_object(data,
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.hXnTrEAC7u/cupy/cupyx/_texture.py", line 98, in _create_texture_object
E       array = texture.CUDAarray(texture_fmt, *data.shape[::-1])
E     File "cupy/cuda/texture.pyx", line 296, in cupy.cuda.texture.CUDAarray.__init__
E       self.ptr = runtime.malloc3DArray(desc.ptr, width, height, depth,
E     File "cupy_backends/cuda/api/runtime.pyx", line 593, in cupy_backends.cuda.api.runtime.malloc3DArray
E       check_status(status)
E     File "cupy_backends/cuda/api/runtime.pyx", line 265, in cupy_backends.cuda.api.runtime.check_status
E       raise CUDARuntimeError(status)
E   cupy_backends.cuda.api.runtime.CUDARuntimeError: hipErrorUnknown: hipErrorUnknown

cupy_backends/cuda/api/runtime.pyx:265: AssertionError
----------------------------- Captured stderr call -----------------------------
Traceback (most recent call last):
  File "cupy_backends/cuda/api/runtime.pyx", line 644, in cupy_backends.cuda.api.runtime.freeArray
    check_status(status)
  File "cupy_backends/cuda/api/runtime.pyx", line 265, in cupy_backends.cuda.api.runtime.check_status
    raise CUDARuntimeError(status)
cupy_backends.cuda.api.runtime.CUDARuntimeError: hipErrorUnknown: hipErrorUnknown
_ TestAffineTransformTextureMemory.test_affine_transform_texture_memory[_param_237_{mode='nearest', order=0, output=float32, output_shape=None, shape=(10, 20, 30), theta=90}] _

self = <<cupyx_tests.scipy_tests.ndimage_tests.test_interpolation.TestAffineTransformTextureMemory object at 0x7fab378521f0> ...': 'nearest', 'order': 0, 'output': <class 'numpy.float32'>, 'output_shape': None, 'shape': (10, 20, 30), 'theta': 90}>
xp = <module 'cupy' from '/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.hXnTrEAC7u/cupy/cupy/__init__.py'>
scp = <module 'cupyx.scipy' from '/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.hXnTrEAC7u/cupy/cupyx/scipy/__init__.py'>

    @testing.numpy_cupy_allclose(atol=0.1, scipy_name='scp')
    def test_affine_transform_texture_memory(self, xp, scp):
        a = xp.ones(self.shape, dtype=xp.float32)
        center = numpy.divide(numpy.subtract(self.shape, 1), 2)
    
        if len(self.shape) == 2:
            matrix = self._2d_rotation_matrix(self.theta, center)
        elif len(self.shape) == 3:
            matrix = self._3d_rotation_matrix(self.theta, center)
        else:
            return pytest.xfail('Unsupported shape')
    
        if self.output == 'empty':
            output = xp.empty(self.shape, dtype=xp.float32)
            if self.output_shape:
                return pytest.skip('This combination is tested in '
                                   'test_invalid_texture_arguments')
        else:
            output = self.output
    
        if self.output_shape:
            output_shape = (self.output_shape, ) * len(self.shape)
        else:
            output_shape = self.output_shape
    
        if xp == cupy:
            m = cupyx.scipy.ndimage.affine_transform
            matrix = cupy.array(matrix)
>           return m(a, matrix, output_shape=output_shape,
                     output=output, order=self.order,
                     mode=self.mode, texture_memory=True)

tests/cupyx_tests/scipy_tests/ndimage_tests/test_interpolation.py:398: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
cupyx/scipy/ndimage/interpolation.py:376: in affine_transform
    return _texture.affine_transformation(data=input,
cupyx/_texture.py:168: in affine_transformation
    texture_object = _create_texture_object(data,
cupyx/_texture.py:98: in _create_texture_object
    array = texture.CUDAarray(texture_fmt, *data.shape[::-1])
cupy/cuda/texture.pyx:296: in cupy.cuda.texture.CUDAarray.__init__
    self.ptr = runtime.malloc3DArray(desc.ptr, width, height, depth,
cupy_backends/cuda/api/runtime.pyx:593: in cupy_backends.cuda.api.runtime.malloc3DArray
    check_status(status)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

>   raise CUDARuntimeError(status)
E   AssertionError: Only cupy raises error
E   
E   Traceback (most recent call last):
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.hXnTrEAC7u/cupy/cupy/testing/_helper.py", line 47, in _call_func
E       result = impl(self, *args, **kw)
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.hXnTrEAC7u/cupy/tests/cupyx_tests/scipy_tests/ndimage_tests/test_interpolation.py", line 398, in test_affine_transform_texture_memory
E       return m(a, matrix, output_shape=output_shape,
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.hXnTrEAC7u/cupy/cupyx/scipy/ndimage/interpolation.py", line 376, in affine_transform
E       return _texture.affine_transformation(data=input,
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.hXnTrEAC7u/cupy/cupyx/_texture.py", line 168, in affine_transformation
E       texture_object = _create_texture_object(data,
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.hXnTrEAC7u/cupy/cupyx/_texture.py", line 98, in _create_texture_object
E       array = texture.CUDAarray(texture_fmt, *data.shape[::-1])
E     File "cupy/cuda/texture.pyx", line 296, in cupy.cuda.texture.CUDAarray.__init__
E       self.ptr = runtime.malloc3DArray(desc.ptr, width, height, depth,
E     File "cupy_backends/cuda/api/runtime.pyx", line 593, in cupy_backends.cuda.api.runtime.malloc3DArray
E       check_status(status)
E     File "cupy_backends/cuda/api/runtime.pyx", line 265, in cupy_backends.cuda.api.runtime.check_status
E       raise CUDARuntimeError(status)
E   cupy_backends.cuda.api.runtime.CUDARuntimeError: hipErrorUnknown: hipErrorUnknown

cupy_backends/cuda/api/runtime.pyx:265: AssertionError
----------------------------- Captured stderr call -----------------------------
Traceback (most recent call last):
  File "cupy_backends/cuda/api/runtime.pyx", line 644, in cupy_backends.cuda.api.runtime.freeArray
    check_status(status)
  File "cupy_backends/cuda/api/runtime.pyx", line 265, in cupy_backends.cuda.api.runtime.check_status
    raise CUDARuntimeError(status)
cupy_backends.cuda.api.runtime.CUDARuntimeError: hipErrorUnknown: hipErrorUnknown
_ TestAffineTransformTextureMemory.test_affine_transform_texture_memory[_param_238_{mode='nearest', order=0, output=float32, output_shape=None, shape=(10, 20, 30), theta=180}] _

self = <<cupyx_tests.scipy_tests.ndimage_tests.test_interpolation.TestAffineTransformTextureMemory object at 0x7fab372802b0> ...: 'nearest', 'order': 0, 'output': <class 'numpy.float32'>, 'output_shape': None, 'shape': (10, 20, 30), 'theta': 180}>
xp = <module 'cupy' from '/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.hXnTrEAC7u/cupy/cupy/__init__.py'>
scp = <module 'cupyx.scipy' from '/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.hXnTrEAC7u/cupy/cupyx/scipy/__init__.py'>

    @testing.numpy_cupy_allclose(atol=0.1, scipy_name='scp')
    def test_affine_transform_texture_memory(self, xp, scp):
        a = xp.ones(self.shape, dtype=xp.float32)
        center = numpy.divide(numpy.subtract(self.shape, 1), 2)
    
        if len(self.shape) == 2:
            matrix = self._2d_rotation_matrix(self.theta, center)
        elif len(self.shape) == 3:
            matrix = self._3d_rotation_matrix(self.theta, center)
        else:
            return pytest.xfail('Unsupported shape')
    
        if self.output == 'empty':
            output = xp.empty(self.shape, dtype=xp.float32)
            if self.output_shape:
                return pytest.skip('This combination is tested in '
                                   'test_invalid_texture_arguments')
        else:
            output = self.output
    
        if self.output_shape:
            output_shape = (self.output_shape, ) * len(self.shape)
        else:
            output_shape = self.output_shape
    
        if xp == cupy:
            m = cupyx.scipy.ndimage.affine_transform
            matrix = cupy.array(matrix)
>           return m(a, matrix, output_shape=output_shape,
                     output=output, order=self.order,
                     mode=self.mode, texture_memory=True)

tests/cupyx_tests/scipy_tests/ndimage_tests/test_interpolation.py:398: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
cupyx/scipy/ndimage/interpolation.py:376: in affine_transform
    return _texture.affine_transformation(data=input,
cupyx/_texture.py:168: in affine_transformation
    texture_object = _create_texture_object(data,
cupyx/_texture.py:98: in _create_texture_object
    array = texture.CUDAarray(texture_fmt, *data.shape[::-1])
cupy/cuda/texture.pyx:296: in cupy.cuda.texture.CUDAarray.__init__
    self.ptr = runtime.malloc3DArray(desc.ptr, width, height, depth,
cupy_backends/cuda/api/runtime.pyx:593: in cupy_backends.cuda.api.runtime.malloc3DArray
    check_status(status)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

>   raise CUDARuntimeError(status)
E   AssertionError: Only cupy raises error
E   
E   Traceback (most recent call last):
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.hXnTrEAC7u/cupy/cupy/testing/_helper.py", line 47, in _call_func
E       result = impl(self, *args, **kw)
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.hXnTrEAC7u/cupy/tests/cupyx_tests/scipy_tests/ndimage_tests/test_interpolation.py", line 398, in test_affine_transform_texture_memory
E       return m(a, matrix, output_shape=output_shape,
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.hXnTrEAC7u/cupy/cupyx/scipy/ndimage/interpolation.py", line 376, in affine_transform
E       return _texture.affine_transformation(data=input,
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.hXnTrEAC7u/cupy/cupyx/_texture.py", line 168, in affine_transformation
E       texture_object = _create_texture_object(data,
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.hXnTrEAC7u/cupy/cupyx/_texture.py", line 98, in _create_texture_object
E       array = texture.CUDAarray(texture_fmt, *data.shape[::-1])
E     File "cupy/cuda/texture.pyx", line 296, in cupy.cuda.texture.CUDAarray.__init__
E       self.ptr = runtime.malloc3DArray(desc.ptr, width, height, depth,
E     File "cupy_backends/cuda/api/runtime.pyx", line 593, in cupy_backends.cuda.api.runtime.malloc3DArray
E       check_status(status)
E     File "cupy_backends/cuda/api/runtime.pyx", line 265, in cupy_backends.cuda.api.runtime.check_status
E       raise CUDARuntimeError(status)
E   cupy_backends.cuda.api.runtime.CUDARuntimeError: hipErrorUnknown: hipErrorUnknown

cupy_backends/cuda/api/runtime.pyx:265: AssertionError
----------------------------- Captured stderr call -----------------------------
Traceback (most recent call last):
  File "cupy_backends/cuda/api/runtime.pyx", line 644, in cupy_backends.cuda.api.runtime.freeArray
    check_status(status)
  File "cupy_backends/cuda/api/runtime.pyx", line 265, in cupy_backends.cuda.api.runtime.check_status
    raise CUDARuntimeError(status)
cupy_backends.cuda.api.runtime.CUDARuntimeError: hipErrorUnknown: hipErrorUnknown
_ TestAffineTransformTextureMemory.test_affine_transform_texture_memory[_param_239_{mode='nearest', order=0, output=float32, output_shape=None, shape=(10, 20, 30), theta=270}] _

self = <<cupyx_tests.scipy_tests.ndimage_tests.test_interpolation.TestAffineTransformTextureMemory object at 0x7fab39757130> ...: 'nearest', 'order': 0, 'output': <class 'numpy.float32'>, 'output_shape': None, 'shape': (10, 20, 30), 'theta': 270}>
xp = <module 'cupy' from '/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.hXnTrEAC7u/cupy/cupy/__init__.py'>
scp = <module 'cupyx.scipy' from '/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.hXnTrEAC7u/cupy/cupyx/scipy/__init__.py'>

    @testing.numpy_cupy_allclose(atol=0.1, scipy_name='scp')
    def test_affine_transform_texture_memory(self, xp, scp):
        a = xp.ones(self.shape, dtype=xp.float32)
        center = numpy.divide(numpy.subtract(self.shape, 1), 2)
    
        if len(self.shape) == 2:
            matrix = self._2d_rotation_matrix(self.theta, center)
        elif len(self.shape) == 3:
            matrix = self._3d_rotation_matrix(self.theta, center)
        else:
            return pytest.xfail('Unsupported shape')
    
        if self.output == 'empty':
            output = xp.empty(self.shape, dtype=xp.float32)
            if self.output_shape:
                return pytest.skip('This combination is tested in '
                                   'test_invalid_texture_arguments')
        else:
            output = self.output
    
        if self.output_shape:
            output_shape = (self.output_shape, ) * len(self.shape)
        else:
            output_shape = self.output_shape
    
        if xp == cupy:
            m = cupyx.scipy.ndimage.affine_transform
            matrix = cupy.array(matrix)
>           return m(a, matrix, output_shape=output_shape,
                     output=output, order=self.order,
                     mode=self.mode, texture_memory=True)

tests/cupyx_tests/scipy_tests/ndimage_tests/test_interpolation.py:398: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
cupyx/scipy/ndimage/interpolation.py:376: in affine_transform
    return _texture.affine_transformation(data=input,
cupyx/_texture.py:168: in affine_transformation
    texture_object = _create_texture_object(data,
cupyx/_texture.py:98: in _create_texture_object
    array = texture.CUDAarray(texture_fmt, *data.shape[::-1])
cupy/cuda/texture.pyx:296: in cupy.cuda.texture.CUDAarray.__init__
    self.ptr = runtime.malloc3DArray(desc.ptr, width, height, depth,
cupy_backends/cuda/api/runtime.pyx:593: in cupy_backends.cuda.api.runtime.malloc3DArray
    check_status(status)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

>   raise CUDARuntimeError(status)
E   AssertionError: Only cupy raises error
E   
E   Traceback (most recent call last):
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.hXnTrEAC7u/cupy/cupy/testing/_helper.py", line 47, in _call_func
E       result = impl(self, *args, **kw)
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.hXnTrEAC7u/cupy/tests/cupyx_tests/scipy_tests/ndimage_tests/test_interpolation.py", line 398, in test_affine_transform_texture_memory
E       return m(a, matrix, output_shape=output_shape,
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.hXnTrEAC7u/cupy/cupyx/scipy/ndimage/interpolation.py", line 376, in affine_transform
E       return _texture.affine_transformation(data=input,
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.hXnTrEAC7u/cupy/cupyx/_texture.py", line 168, in affine_transformation
E       texture_object = _create_texture_object(data,
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.hXnTrEAC7u/cupy/cupyx/_texture.py", line 98, in _create_texture_object
E       array = texture.CUDAarray(texture_fmt, *data.shape[::-1])
E     File "cupy/cuda/texture.pyx", line 296, in cupy.cuda.texture.CUDAarray.__init__
E       self.ptr = runtime.malloc3DArray(desc.ptr, width, height, depth,
E     File "cupy_backends/cuda/api/runtime.pyx", line 593, in cupy_backends.cuda.api.runtime.malloc3DArray
E       check_status(status)
E     File "cupy_backends/cuda/api/runtime.pyx", line 265, in cupy_backends.cuda.api.runtime.check_status
E       raise CUDARuntimeError(status)
E   cupy_backends.cuda.api.runtime.CUDARuntimeError: hipErrorUnknown: hipErrorUnknown

cupy_backends/cuda/api/runtime.pyx:265: AssertionError
----------------------------- Captured stderr call -----------------------------
Traceback (most recent call last):
  File "cupy_backends/cuda/api/runtime.pyx", line 644, in cupy_backends.cuda.api.runtime.freeArray
    check_status(status)
  File "cupy_backends/cuda/api/runtime.pyx", line 265, in cupy_backends.cuda.api.runtime.check_status
    raise CUDARuntimeError(status)
cupy_backends.cuda.api.runtime.CUDARuntimeError: hipErrorUnknown: hipErrorUnknown
_ TestAffineTransformTextureMemory.test_affine_transform_texture_memory[_param_240_{mode='nearest', order=0, output=float32, output_shape=10, shape=(100, 100), theta=0}] _

self = <<cupyx_tests.scipy_tests.ndimage_tests.test_interpolation.TestAffineTransformTextureMemory object at 0x7fab37229a90> ...'mode': 'nearest', 'order': 0, 'output': <class 'numpy.float32'>, 'output_shape': 10, 'shape': (100, 100), 'theta': 0}>
xp = <module 'cupy' from '/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.hXnTrEAC7u/cupy/cupy/__init__.py'>
scp = <module 'cupyx.scipy' from '/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.hXnTrEAC7u/cupy/cupyx/scipy/__init__.py'>

    @testing.numpy_cupy_allclose(atol=0.1, scipy_name='scp')
    def test_affine_transform_texture_memory(self, xp, scp):
        a = xp.ones(self.shape, dtype=xp.float32)
        center = numpy.divide(numpy.subtract(self.shape, 1), 2)
    
        if len(self.shape) == 2:
            matrix = self._2d_rotation_matrix(self.theta, center)
        elif len(self.shape) == 3:
            matrix = self._3d_rotation_matrix(self.theta, center)
        else:
            return pytest.xfail('Unsupported shape')
    
        if self.output == 'empty':
            output = xp.empty(self.shape, dtype=xp.float32)
            if self.output_shape:
                return pytest.skip('This combination is tested in '
                                   'test_invalid_texture_arguments')
        else:
            output = self.output
    
        if self.output_shape:
            output_shape = (self.output_shape, ) * len(self.shape)
        else:
            output_shape = self.output_shape
    
        if xp == cupy:
            m = cupyx.scipy.ndimage.affine_transform
            matrix = cupy.array(matrix)
>           return m(a, matrix, output_shape=output_shape,
                     output=output, order=self.order,
                     mode=self.mode, texture_memory=True)

tests/cupyx_tests/scipy_tests/ndimage_tests/test_interpolation.py:398: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
cupyx/scipy/ndimage/interpolation.py:376: in affine_transform
    return _texture.affine_transformation(data=input,
cupyx/_texture.py:168: in affine_transformation
    texture_object = _create_texture_object(data,
cupyx/_texture.py:98: in _create_texture_object
    array = texture.CUDAarray(texture_fmt, *data.shape[::-1])
cupy/cuda/texture.pyx:296: in cupy.cuda.texture.CUDAarray.__init__
    self.ptr = runtime.malloc3DArray(desc.ptr, width, height, depth,
cupy_backends/cuda/api/runtime.pyx:593: in cupy_backends.cuda.api.runtime.malloc3DArray
    check_status(status)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

>   raise CUDARuntimeError(status)
E   AssertionError: Only cupy raises error
E   
E   Traceback (most recent call last):
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.hXnTrEAC7u/cupy/cupy/testing/_helper.py", line 47, in _call_func
E       result = impl(self, *args, **kw)
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.hXnTrEAC7u/cupy/tests/cupyx_tests/scipy_tests/ndimage_tests/test_interpolation.py", line 398, in test_affine_transform_texture_memory
E       return m(a, matrix, output_shape=output_shape,
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.hXnTrEAC7u/cupy/cupyx/scipy/ndimage/interpolation.py", line 376, in affine_transform
E       return _texture.affine_transformation(data=input,
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.hXnTrEAC7u/cupy/cupyx/_texture.py", line 168, in affine_transformation
E       texture_object = _create_texture_object(data,
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.hXnTrEAC7u/cupy/cupyx/_texture.py", line 98, in _create_texture_object
E       array = texture.CUDAarray(texture_fmt, *data.shape[::-1])
E     File "cupy/cuda/texture.pyx", line 296, in cupy.cuda.texture.CUDAarray.__init__
E       self.ptr = runtime.malloc3DArray(desc.ptr, width, height, depth,
E     File "cupy_backends/cuda/api/runtime.pyx", line 593, in cupy_backends.cuda.api.runtime.malloc3DArray
E       check_status(status)
E     File "cupy_backends/cuda/api/runtime.pyx", line 265, in cupy_backends.cuda.api.runtime.check_status
E       raise CUDARuntimeError(status)
E   cupy_backends.cuda.api.runtime.CUDARuntimeError: hipErrorUnknown: hipErrorUnknown

cupy_backends/cuda/api/runtime.pyx:265: AssertionError
----------------------------- Captured stderr call -----------------------------
Traceback (most recent call last):
  File "cupy_backends/cuda/api/runtime.pyx", line 644, in cupy_backends.cuda.api.runtime.freeArray
    check_status(status)
  File "cupy_backends/cuda/api/runtime.pyx", line 265, in cupy_backends.cuda.api.runtime.check_status
    raise CUDARuntimeError(status)
cupy_backends.cuda.api.runtime.CUDARuntimeError: hipErrorUnknown: hipErrorUnknown
_ TestAffineTransformTextureMemory.test_affine_transform_texture_memory[_param_241_{mode='nearest', order=0, output=float32, output_shape=10, shape=(100, 100), theta=90}] _

self = <<cupyx_tests.scipy_tests.ndimage_tests.test_interpolation.TestAffineTransformTextureMemory object at 0x7fab38eaabb0> ...mode': 'nearest', 'order': 0, 'output': <class 'numpy.float32'>, 'output_shape': 10, 'shape': (100, 100), 'theta': 90}>
xp = <module 'cupy' from '/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.hXnTrEAC7u/cupy/cupy/__init__.py'>
scp = <module 'cupyx.scipy' from '/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.hXnTrEAC7u/cupy/cupyx/scipy/__init__.py'>

    @testing.numpy_cupy_allclose(atol=0.1, scipy_name='scp')
    def test_affine_transform_texture_memory(self, xp, scp):
        a = xp.ones(self.shape, dtype=xp.float32)
        center = numpy.divide(numpy.subtract(self.shape, 1), 2)
    
        if len(self.shape) == 2:
            matrix = self._2d_rotation_matrix(self.theta, center)
        elif len(self.shape) == 3:
            matrix = self._3d_rotation_matrix(self.theta, center)
        else:
            return pytest.xfail('Unsupported shape')
    
        if self.output == 'empty':
            output = xp.empty(self.shape, dtype=xp.float32)
            if self.output_shape:
                return pytest.skip('This combination is tested in '
                                   'test_invalid_texture_arguments')
        else:
            output = self.output
    
        if self.output_shape:
            output_shape = (self.output_shape, ) * len(self.shape)
        else:
            output_shape = self.output_shape
    
        if xp == cupy:
            m = cupyx.scipy.ndimage.affine_transform
            matrix = cupy.array(matrix)
>           return m(a, matrix, output_shape=output_shape,
                     output=output, order=self.order,
                     mode=self.mode, texture_memory=True)

tests/cupyx_tests/scipy_tests/ndimage_tests/test_interpolation.py:398: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
cupyx/scipy/ndimage/interpolation.py:376: in affine_transform
    return _texture.affine_transformation(data=input,
cupyx/_texture.py:168: in affine_transformation
    texture_object = _create_texture_object(data,
cupyx/_texture.py:98: in _create_texture_object
    array = texture.CUDAarray(texture_fmt, *data.shape[::-1])
cupy/cuda/texture.pyx:296: in cupy.cuda.texture.CUDAarray.__init__
    self.ptr = runtime.malloc3DArray(desc.ptr, width, height, depth,
cupy_backends/cuda/api/runtime.pyx:593: in cupy_backends.cuda.api.runtime.malloc3DArray
    check_status(status)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

>   raise CUDARuntimeError(status)
E   AssertionError: Only cupy raises error
E   
E   Traceback (most recent call last):
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.hXnTrEAC7u/cupy/cupy/testing/_helper.py", line 47, in _call_func
E       result = impl(self, *args, **kw)
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.hXnTrEAC7u/cupy/tests/cupyx_tests/scipy_tests/ndimage_tests/test_interpolation.py", line 398, in test_affine_transform_texture_memory
E       return m(a, matrix, output_shape=output_shape,
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.hXnTrEAC7u/cupy/cupyx/scipy/ndimage/interpolation.py", line 376, in affine_transform
E       return _texture.affine_transformation(data=input,
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.hXnTrEAC7u/cupy/cupyx/_texture.py", line 168, in affine_transformation
E       texture_object = _create_texture_object(data,
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.hXnTrEAC7u/cupy/cupyx/_texture.py", line 98, in _create_texture_object
E       array = texture.CUDAarray(texture_fmt, *data.shape[::-1])
E     File "cupy/cuda/texture.pyx", line 296, in cupy.cuda.texture.CUDAarray.__init__
E       self.ptr = runtime.malloc3DArray(desc.ptr, width, height, depth,
E     File "cupy_backends/cuda/api/runtime.pyx", line 593, in cupy_backends.cuda.api.runtime.malloc3DArray
E       check_status(status)
E     File "cupy_backends/cuda/api/runtime.pyx", line 265, in cupy_backends.cuda.api.runtime.check_status
E       raise CUDARuntimeError(status)
E   cupy_backends.cuda.api.runtime.CUDARuntimeError: hipErrorUnknown: hipErrorUnknown

cupy_backends/cuda/api/runtime.pyx:265: AssertionError
----------------------------- Captured stderr call -----------------------------
Traceback (most recent call last):
  File "cupy_backends/cuda/api/runtime.pyx", line 644, in cupy_backends.cuda.api.runtime.freeArray
    check_status(status)
  File "cupy_backends/cuda/api/runtime.pyx", line 265, in cupy_backends.cuda.api.runtime.check_status
    raise CUDARuntimeError(status)
cupy_backends.cuda.api.runtime.CUDARuntimeError: hipErrorUnknown: hipErrorUnknown
_ TestAffineTransformTextureMemory.test_affine_transform_texture_memory[_param_242_{mode='nearest', order=0, output=float32, output_shape=10, shape=(100, 100), theta=180}] _

self = <<cupyx_tests.scipy_tests.ndimage_tests.test_interpolation.TestAffineTransformTextureMemory object at 0x7fab36f5f370> ...ode': 'nearest', 'order': 0, 'output': <class 'numpy.float32'>, 'output_shape': 10, 'shape': (100, 100), 'theta': 180}>
xp = <module 'cupy' from '/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.hXnTrEAC7u/cupy/cupy/__init__.py'>
scp = <module 'cupyx.scipy' from '/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.hXnTrEAC7u/cupy/cupyx/scipy/__init__.py'>

    @testing.numpy_cupy_allclose(atol=0.1, scipy_name='scp')
    def test_affine_transform_texture_memory(self, xp, scp):
        a = xp.ones(self.shape, dtype=xp.float32)
        center = numpy.divide(numpy.subtract(self.shape, 1), 2)
    
        if len(self.shape) == 2:
            matrix = self._2d_rotation_matrix(self.theta, center)
        elif len(self.shape) == 3:
            matrix = self._3d_rotation_matrix(self.theta, center)
        else:
            return pytest.xfail('Unsupported shape')
    
        if self.output == 'empty':
            output = xp.empty(self.shape, dtype=xp.float32)
            if self.output_shape:
                return pytest.skip('This combination is tested in '
                                   'test_invalid_texture_arguments')
        else:
            output = self.output
    
        if self.output_shape:
            output_shape = (self.output_shape, ) * len(self.shape)
        else:
            output_shape = self.output_shape
    
        if xp == cupy:
            m = cupyx.scipy.ndimage.affine_transform
            matrix = cupy.array(matrix)
>           return m(a, matrix, output_shape=output_shape,
                     output=output, order=self.order,
                     mode=self.mode, texture_memory=True)

tests/cupyx_tests/scipy_tests/ndimage_tests/test_interpolation.py:398: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
cupyx/scipy/ndimage/interpolation.py:376: in affine_transform
    return _texture.affine_transformation(data=input,
cupyx/_texture.py:168: in affine_transformation
    texture_object = _create_texture_object(data,
cupyx/_texture.py:98: in _create_texture_object
    array = texture.CUDAarray(texture_fmt, *data.shape[::-1])
cupy/cuda/texture.pyx:296: in cupy.cuda.texture.CUDAarray.__init__
    self.ptr = runtime.malloc3DArray(desc.ptr, width, height, depth,
cupy_backends/cuda/api/runtime.pyx:593: in cupy_backends.cuda.api.runtime.malloc3DArray
    check_status(status)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

>   raise CUDARuntimeError(status)
E   AssertionError: Only cupy raises error
E   
E   Traceback (most recent call last):
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.hXnTrEAC7u/cupy/cupy/testing/_helper.py", line 47, in _call_func
E       result = impl(self, *args, **kw)
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.hXnTrEAC7u/cupy/tests/cupyx_tests/scipy_tests/ndimage_tests/test_interpolation.py", line 398, in test_affine_transform_texture_memory
E       return m(a, matrix, output_shape=output_shape,
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.hXnTrEAC7u/cupy/cupyx/scipy/ndimage/interpolation.py", line 376, in affine_transform
E       return _texture.affine_transformation(data=input,
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.hXnTrEAC7u/cupy/cupyx/_texture.py", line 168, in affine_transformation
E       texture_object = _create_texture_object(data,
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.hXnTrEAC7u/cupy/cupyx/_texture.py", line 98, in _create_texture_object
E       array = texture.CUDAarray(texture_fmt, *data.shape[::-1])
E     File "cupy/cuda/texture.pyx", line 296, in cupy.cuda.texture.CUDAarray.__init__
E       self.ptr = runtime.malloc3DArray(desc.ptr, width, height, depth,
E     File "cupy_backends/cuda/api/runtime.pyx", line 593, in cupy_backends.cuda.api.runtime.malloc3DArray
E       check_status(status)
E     File "cupy_backends/cuda/api/runtime.pyx", line 265, in cupy_backends.cuda.api.runtime.check_status
E       raise CUDARuntimeError(status)
E   cupy_backends.cuda.api.runtime.CUDARuntimeError: hipErrorUnknown: hipErrorUnknown

cupy_backends/cuda/api/runtime.pyx:265: AssertionError
----------------------------- Captured stderr call -----------------------------
Traceback (most recent call last):
  File "cupy_backends/cuda/api/runtime.pyx", line 644, in cupy_backends.cuda.api.runtime.freeArray
    check_status(status)
  File "cupy_backends/cuda/api/runtime.pyx", line 265, in cupy_backends.cuda.api.runtime.check_status
    raise CUDARuntimeError(status)
cupy_backends.cuda.api.runtime.CUDARuntimeError: hipErrorUnknown: hipErrorUnknown
_ TestAffineTransformTextureMemory.test_affine_transform_texture_memory[_param_243_{mode='nearest', order=0, output=float32, output_shape=10, shape=(100, 100), theta=270}] _

self = <<cupyx_tests.scipy_tests.ndimage_tests.test_interpolation.TestAffineTransformTextureMemory object at 0x7fab39c9e190> ...ode': 'nearest', 'order': 0, 'output': <class 'numpy.float32'>, 'output_shape': 10, 'shape': (100, 100), 'theta': 270}>
xp = <module 'cupy' from '/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.hXnTrEAC7u/cupy/cupy/__init__.py'>
scp = <module 'cupyx.scipy' from '/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.hXnTrEAC7u/cupy/cupyx/scipy/__init__.py'>

    @testing.numpy_cupy_allclose(atol=0.1, scipy_name='scp')
    def test_affine_transform_texture_memory(self, xp, scp):
        a = xp.ones(self.shape, dtype=xp.float32)
        center = numpy.divide(numpy.subtract(self.shape, 1), 2)
    
        if len(self.shape) == 2:
            matrix = self._2d_rotation_matrix(self.theta, center)
        elif len(self.shape) == 3:
            matrix = self._3d_rotation_matrix(self.theta, center)
        else:
            return pytest.xfail('Unsupported shape')
    
        if self.output == 'empty':
            output = xp.empty(self.shape, dtype=xp.float32)
            if self.output_shape:
                return pytest.skip('This combination is tested in '
                                   'test_invalid_texture_arguments')
        else:
            output = self.output
    
        if self.output_shape:
            output_shape = (self.output_shape, ) * len(self.shape)
        else:
            output_shape = self.output_shape
    
        if xp == cupy:
            m = cupyx.scipy.ndimage.affine_transform
            matrix = cupy.array(matrix)
>           return m(a, matrix, output_shape=output_shape,
                     output=output, order=self.order,
                     mode=self.mode, texture_memory=True)

tests/cupyx_tests/scipy_tests/ndimage_tests/test_interpolation.py:398: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
cupyx/scipy/ndimage/interpolation.py:376: in affine_transform
    return _texture.affine_transformation(data=input,
cupyx/_texture.py:168: in affine_transformation
    texture_object = _create_texture_object(data,
cupyx/_texture.py:98: in _create_texture_object
    array = texture.CUDAarray(texture_fmt, *data.shape[::-1])
cupy/cuda/texture.pyx:296: in cupy.cuda.texture.CUDAarray.__init__
    self.ptr = runtime.malloc3DArray(desc.ptr, width, height, depth,
cupy_backends/cuda/api/runtime.pyx:593: in cupy_backends.cuda.api.runtime.malloc3DArray
    check_status(status)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

>   raise CUDARuntimeError(status)
E   AssertionError: Only cupy raises error
E   
E   Traceback (most recent call last):
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.hXnTrEAC7u/cupy/cupy/testing/_helper.py", line 47, in _call_func
E       result = impl(self, *args, **kw)
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.hXnTrEAC7u/cupy/tests/cupyx_tests/scipy_tests/ndimage_tests/test_interpolation.py", line 398, in test_affine_transform_texture_memory
E       return m(a, matrix, output_shape=output_shape,
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.hXnTrEAC7u/cupy/cupyx/scipy/ndimage/interpolation.py", line 376, in affine_transform
E       return _texture.affine_transformation(data=input,
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.hXnTrEAC7u/cupy/cupyx/_texture.py", line 168, in affine_transformation
E       texture_object = _create_texture_object(data,
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.hXnTrEAC7u/cupy/cupyx/_texture.py", line 98, in _create_texture_object
E       array = texture.CUDAarray(texture_fmt, *data.shape[::-1])
E     File "cupy/cuda/texture.pyx", line 296, in cupy.cuda.texture.CUDAarray.__init__
E       self.ptr = runtime.malloc3DArray(desc.ptr, width, height, depth,
E     File "cupy_backends/cuda/api/runtime.pyx", line 593, in cupy_backends.cuda.api.runtime.malloc3DArray
E       check_status(status)
E     File "cupy_backends/cuda/api/runtime.pyx", line 265, in cupy_backends.cuda.api.runtime.check_status
E       raise CUDARuntimeError(status)
E   cupy_backends.cuda.api.runtime.CUDARuntimeError: hipErrorUnknown: hipErrorUnknown

cupy_backends/cuda/api/runtime.pyx:265: AssertionError
----------------------------- Captured stderr call -----------------------------
Traceback (most recent call last):
  File "cupy_backends/cuda/api/runtime.pyx", line 644, in cupy_backends.cuda.api.runtime.freeArray
    check_status(status)
  File "cupy_backends/cuda/api/runtime.pyx", line 265, in cupy_backends.cuda.api.runtime.check_status
    raise CUDARuntimeError(status)
cupy_backends.cuda.api.runtime.CUDARuntimeError: hipErrorUnknown: hipErrorUnknown
_ TestAffineTransformTextureMemory.test_affine_transform_texture_memory[_param_244_{mode='nearest', order=0, output=float32, output_shape=10, shape=(10, 20), theta=0}] _

self = <<cupyx_tests.scipy_tests.ndimage_tests.test_interpolation.TestAffineTransformTextureMemory object at 0x7fab36fd2a90> ... {'mode': 'nearest', 'order': 0, 'output': <class 'numpy.float32'>, 'output_shape': 10, 'shape': (10, 20), 'theta': 0}>
xp = <module 'cupy' from '/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.hXnTrEAC7u/cupy/cupy/__init__.py'>
scp = <module 'cupyx.scipy' from '/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.hXnTrEAC7u/cupy/cupyx/scipy/__init__.py'>

    @testing.numpy_cupy_allclose(atol=0.1, scipy_name='scp')
    def test_affine_transform_texture_memory(self, xp, scp):
        a = xp.ones(self.shape, dtype=xp.float32)
        center = numpy.divide(numpy.subtract(self.shape, 1), 2)
    
        if len(self.shape) == 2:
            matrix = self._2d_rotation_matrix(self.theta, center)
        elif len(self.shape) == 3:
            matrix = self._3d_rotation_matrix(self.theta, center)
        else:
            return pytest.xfail('Unsupported shape')
    
        if self.output == 'empty':
            output = xp.empty(self.shape, dtype=xp.float32)
            if self.output_shape:
                return pytest.skip('This combination is tested in '
                                   'test_invalid_texture_arguments')
        else:
            output = self.output
    
        if self.output_shape:
            output_shape = (self.output_shape, ) * len(self.shape)
        else:
            output_shape = self.output_shape
    
        if xp == cupy:
            m = cupyx.scipy.ndimage.affine_transform
            matrix = cupy.array(matrix)
>           return m(a, matrix, output_shape=output_shape,
                     output=output, order=self.order,
                     mode=self.mode, texture_memory=True)

tests/cupyx_tests/scipy_tests/ndimage_tests/test_interpolation.py:398: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
cupyx/scipy/ndimage/interpolation.py:376: in affine_transform
    return _texture.affine_transformation(data=input,
cupyx/_texture.py:168: in affine_transformation
    texture_object = _create_texture_object(data,
cupyx/_texture.py:98: in _create_texture_object
    array = texture.CUDAarray(texture_fmt, *data.shape[::-1])
cupy/cuda/texture.pyx:296: in cupy.cuda.texture.CUDAarray.__init__
    self.ptr = runtime.malloc3DArray(desc.ptr, width, height, depth,
cupy_backends/cuda/api/runtime.pyx:593: in cupy_backends.cuda.api.runtime.malloc3DArray
    check_status(status)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

>   raise CUDARuntimeError(status)
E   AssertionError: Only cupy raises error
E   
E   Traceback (most recent call last):
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.hXnTrEAC7u/cupy/cupy/testing/_helper.py", line 47, in _call_func
E       result = impl(self, *args, **kw)
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.hXnTrEAC7u/cupy/tests/cupyx_tests/scipy_tests/ndimage_tests/test_interpolation.py", line 398, in test_affine_transform_texture_memory
E       return m(a, matrix, output_shape=output_shape,
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.hXnTrEAC7u/cupy/cupyx/scipy/ndimage/interpolation.py", line 376, in affine_transform
E       return _texture.affine_transformation(data=input,
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.hXnTrEAC7u/cupy/cupyx/_texture.py", line 168, in affine_transformation
E       texture_object = _create_texture_object(data,
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.hXnTrEAC7u/cupy/cupyx/_texture.py", line 98, in _create_texture_object
E       array = texture.CUDAarray(texture_fmt, *data.shape[::-1])
E     File "cupy/cuda/texture.pyx", line 296, in cupy.cuda.texture.CUDAarray.__init__
E       self.ptr = runtime.malloc3DArray(desc.ptr, width, height, depth,
E     File "cupy_backends/cuda/api/runtime.pyx", line 593, in cupy_backends.cuda.api.runtime.malloc3DArray
E       check_status(status)
E     File "cupy_backends/cuda/api/runtime.pyx", line 265, in cupy_backends.cuda.api.runtime.check_status
E       raise CUDARuntimeError(status)
E   cupy_backends.cuda.api.runtime.CUDARuntimeError: hipErrorUnknown: hipErrorUnknown

cupy_backends/cuda/api/runtime.pyx:265: AssertionError
----------------------------- Captured stderr call -----------------------------
Traceback (most recent call last):
  File "cupy_backends/cuda/api/runtime.pyx", line 644, in cupy_backends.cuda.api.runtime.freeArray
    check_status(status)
  File "cupy_backends/cuda/api/runtime.pyx", line 265, in cupy_backends.cuda.api.runtime.check_status
    raise CUDARuntimeError(status)
cupy_backends.cuda.api.runtime.CUDARuntimeError: hipErrorUnknown: hipErrorUnknown
_ TestAffineTransformTextureMemory.test_affine_transform_texture_memory[_param_245_{mode='nearest', order=0, output=float32, output_shape=10, shape=(10, 20), theta=90}] _

self = <<cupyx_tests.scipy_tests.ndimage_tests.test_interpolation.TestAffineTransformTextureMemory object at 0x7fab370069d0> ...{'mode': 'nearest', 'order': 0, 'output': <class 'numpy.float32'>, 'output_shape': 10, 'shape': (10, 20), 'theta': 90}>
xp = <module 'cupy' from '/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.hXnTrEAC7u/cupy/cupy/__init__.py'>
scp = <module 'cupyx.scipy' from '/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.hXnTrEAC7u/cupy/cupyx/scipy/__init__.py'>

    @testing.numpy_cupy_allclose(atol=0.1, scipy_name='scp')
    def test_affine_transform_texture_memory(self, xp, scp):
        a = xp.ones(self.shape, dtype=xp.float32)
        center = numpy.divide(numpy.subtract(self.shape, 1), 2)
    
        if len(self.shape) == 2:
            matrix = self._2d_rotation_matrix(self.theta, center)
        elif len(self.shape) == 3:
            matrix = self._3d_rotation_matrix(self.theta, center)
        else:
            return pytest.xfail('Unsupported shape')
    
        if self.output == 'empty':
            output = xp.empty(self.shape, dtype=xp.float32)
            if self.output_shape:
                return pytest.skip('This combination is tested in '
                                   'test_invalid_texture_arguments')
        else:
            output = self.output
    
        if self.output_shape:
            output_shape = (self.output_shape, ) * len(self.shape)
        else:
            output_shape = self.output_shape
    
        if xp == cupy:
            m = cupyx.scipy.ndimage.affine_transform
            matrix = cupy.array(matrix)
>           return m(a, matrix, output_shape=output_shape,
                     output=output, order=self.order,
                     mode=self.mode, texture_memory=True)

tests/cupyx_tests/scipy_tests/ndimage_tests/test_interpolation.py:398: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
cupyx/scipy/ndimage/interpolation.py:376: in affine_transform
    return _texture.affine_transformation(data=input,
cupyx/_texture.py:168: in affine_transformation
    texture_object = _create_texture_object(data,
cupyx/_texture.py:98: in _create_texture_object
    array = texture.CUDAarray(texture_fmt, *data.shape[::-1])
cupy/cuda/texture.pyx:296: in cupy.cuda.texture.CUDAarray.__init__
    self.ptr = runtime.malloc3DArray(desc.ptr, width, height, depth,
cupy_backends/cuda/api/runtime.pyx:593: in cupy_backends.cuda.api.runtime.malloc3DArray
    check_status(status)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

>   raise CUDARuntimeError(status)
E   AssertionError: Only cupy raises error
E   
E   Traceback (most recent call last):
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.hXnTrEAC7u/cupy/cupy/testing/_helper.py", line 47, in _call_func
E       result = impl(self, *args, **kw)
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.hXnTrEAC7u/cupy/tests/cupyx_tests/scipy_tests/ndimage_tests/test_interpolation.py", line 398, in test_affine_transform_texture_memory
E       return m(a, matrix, output_shape=output_shape,
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.hXnTrEAC7u/cupy/cupyx/scipy/ndimage/interpolation.py", line 376, in affine_transform
E       return _texture.affine_transformation(data=input,
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.hXnTrEAC7u/cupy/cupyx/_texture.py", line 168, in affine_transformation
E       texture_object = _create_texture_object(data,
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.hXnTrEAC7u/cupy/cupyx/_texture.py", line 98, in _create_texture_object
E       array = texture.CUDAarray(texture_fmt, *data.shape[::-1])
E     File "cupy/cuda/texture.pyx", line 296, in cupy.cuda.texture.CUDAarray.__init__
E       self.ptr = runtime.malloc3DArray(desc.ptr, width, height, depth,
E     File "cupy_backends/cuda/api/runtime.pyx", line 593, in cupy_backends.cuda.api.runtime.malloc3DArray
E       check_status(status)
E     File "cupy_backends/cuda/api/runtime.pyx", line 265, in cupy_backends.cuda.api.runtime.check_status
E       raise CUDARuntimeError(status)
E   cupy_backends.cuda.api.runtime.CUDARuntimeError: hipErrorUnknown: hipErrorUnknown

cupy_backends/cuda/api/runtime.pyx:265: AssertionError
----------------------------- Captured stderr call -----------------------------
Traceback (most recent call last):
  File "cupy_backends/cuda/api/runtime.pyx", line 644, in cupy_backends.cuda.api.runtime.freeArray
    check_status(status)
  File "cupy_backends/cuda/api/runtime.pyx", line 265, in cupy_backends.cuda.api.runtime.check_status
    raise CUDARuntimeError(status)
cupy_backends.cuda.api.runtime.CUDARuntimeError: hipErrorUnknown: hipErrorUnknown
_ TestAffineTransformTextureMemory.test_affine_transform_texture_memory[_param_246_{mode='nearest', order=0, output=float32, output_shape=10, shape=(10, 20), theta=180}] _

self = <<cupyx_tests.scipy_tests.ndimage_tests.test_interpolation.TestAffineTransformTextureMemory object at 0x7fab37c807f0> ...'mode': 'nearest', 'order': 0, 'output': <class 'numpy.float32'>, 'output_shape': 10, 'shape': (10, 20), 'theta': 180}>
xp = <module 'cupy' from '/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.hXnTrEAC7u/cupy/cupy/__init__.py'>
scp = <module 'cupyx.scipy' from '/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.hXnTrEAC7u/cupy/cupyx/scipy/__init__.py'>

    @testing.numpy_cupy_allclose(atol=0.1, scipy_name='scp')
    def test_affine_transform_texture_memory(self, xp, scp):
        a = xp.ones(self.shape, dtype=xp.float32)
        center = numpy.divide(numpy.subtract(self.shape, 1), 2)
    
        if len(self.shape) == 2:
            matrix = self._2d_rotation_matrix(self.theta, center)
        elif len(self.shape) == 3:
            matrix = self._3d_rotation_matrix(self.theta, center)
        else:
            return pytest.xfail('Unsupported shape')
    
        if self.output == 'empty':
            output = xp.empty(self.shape, dtype=xp.float32)
            if self.output_shape:
                return pytest.skip('This combination is tested in '
                                   'test_invalid_texture_arguments')
        else:
            output = self.output
    
        if self.output_shape:
            output_shape = (self.output_shape, ) * len(self.shape)
        else:
            output_shape = self.output_shape
    
        if xp == cupy:
            m = cupyx.scipy.ndimage.affine_transform
            matrix = cupy.array(matrix)
>           return m(a, matrix, output_shape=output_shape,
                     output=output, order=self.order,
                     mode=self.mode, texture_memory=True)

tests/cupyx_tests/scipy_tests/ndimage_tests/test_interpolation.py:398: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
cupyx/scipy/ndimage/interpolation.py:376: in affine_transform
    return _texture.affine_transformation(data=input,
cupyx/_texture.py:168: in affine_transformation
    texture_object = _create_texture_object(data,
cupyx/_texture.py:98: in _create_texture_object
    array = texture.CUDAarray(texture_fmt, *data.shape[::-1])
cupy/cuda/texture.pyx:296: in cupy.cuda.texture.CUDAarray.__init__
    self.ptr = runtime.malloc3DArray(desc.ptr, width, height, depth,
cupy_backends/cuda/api/runtime.pyx:593: in cupy_backends.cuda.api.runtime.malloc3DArray
    check_status(status)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

>   raise CUDARuntimeError(status)
E   AssertionError: Only cupy raises error
E   
E   Traceback (most recent call last):
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.hXnTrEAC7u/cupy/cupy/testing/_helper.py", line 47, in _call_func
E       result = impl(self, *args, **kw)
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.hXnTrEAC7u/cupy/tests/cupyx_tests/scipy_tests/ndimage_tests/test_interpolation.py", line 398, in test_affine_transform_texture_memory
E       return m(a, matrix, output_shape=output_shape,
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.hXnTrEAC7u/cupy/cupyx/scipy/ndimage/interpolation.py", line 376, in affine_transform
E       return _texture.affine_transformation(data=input,
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.hXnTrEAC7u/cupy/cupyx/_texture.py", line 168, in affine_transformation
E       texture_object = _create_texture_object(data,
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.hXnTrEAC7u/cupy/cupyx/_texture.py", line 98, in _create_texture_object
E       array = texture.CUDAarray(texture_fmt, *data.shape[::-1])
E     File "cupy/cuda/texture.pyx", line 296, in cupy.cuda.texture.CUDAarray.__init__
E       self.ptr = runtime.malloc3DArray(desc.ptr, width, height, depth,
E     File "cupy_backends/cuda/api/runtime.pyx", line 593, in cupy_backends.cuda.api.runtime.malloc3DArray
E       check_status(status)
E     File "cupy_backends/cuda/api/runtime.pyx", line 265, in cupy_backends.cuda.api.runtime.check_status
E       raise CUDARuntimeError(status)
E   cupy_backends.cuda.api.runtime.CUDARuntimeError: hipErrorUnknown: hipErrorUnknown

cupy_backends/cuda/api/runtime.pyx:265: AssertionError
----------------------------- Captured stderr call -----------------------------
Traceback (most recent call last):
  File "cupy_backends/cuda/api/runtime.pyx", line 644, in cupy_backends.cuda.api.runtime.freeArray
    check_status(status)
  File "cupy_backends/cuda/api/runtime.pyx", line 265, in cupy_backends.cuda.api.runtime.check_status
    raise CUDARuntimeError(status)
cupy_backends.cuda.api.runtime.CUDARuntimeError: hipErrorUnknown: hipErrorUnknown
_ TestAffineTransformTextureMemory.test_affine_transform_texture_memory[_param_247_{mode='nearest', order=0, output=float32, output_shape=10, shape=(10, 20), theta=270}] _

self = <<cupyx_tests.scipy_tests.ndimage_tests.test_interpolation.TestAffineTransformTextureMemory object at 0x7fab3717b0a0> ...'mode': 'nearest', 'order': 0, 'output': <class 'numpy.float32'>, 'output_shape': 10, 'shape': (10, 20), 'theta': 270}>
xp = <module 'cupy' from '/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.hXnTrEAC7u/cupy/cupy/__init__.py'>
scp = <module 'cupyx.scipy' from '/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.hXnTrEAC7u/cupy/cupyx/scipy/__init__.py'>

    @testing.numpy_cupy_allclose(atol=0.1, scipy_name='scp')
    def test_affine_transform_texture_memory(self, xp, scp):
        a = xp.ones(self.shape, dtype=xp.float32)
        center = numpy.divide(numpy.subtract(self.shape, 1), 2)
    
        if len(self.shape) == 2:
            matrix = self._2d_rotation_matrix(self.theta, center)
        elif len(self.shape) == 3:
            matrix = self._3d_rotation_matrix(self.theta, center)
        else:
            return pytest.xfail('Unsupported shape')
    
        if self.output == 'empty':
            output = xp.empty(self.shape, dtype=xp.float32)
            if self.output_shape:
                return pytest.skip('This combination is tested in '
                                   'test_invalid_texture_arguments')
        else:
            output = self.output
    
        if self.output_shape:
            output_shape = (self.output_shape, ) * len(self.shape)
        else:
            output_shape = self.output_shape
    
        if xp == cupy:
            m = cupyx.scipy.ndimage.affine_transform
            matrix = cupy.array(matrix)
>           return m(a, matrix, output_shape=output_shape,
                     output=output, order=self.order,
                     mode=self.mode, texture_memory=True)

tests/cupyx_tests/scipy_tests/ndimage_tests/test_interpolation.py:398: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
cupyx/scipy/ndimage/interpolation.py:376: in affine_transform
    return _texture.affine_transformation(data=input,
cupyx/_texture.py:168: in affine_transformation
    texture_object = _create_texture_object(data,
cupyx/_texture.py:98: in _create_texture_object
    array = texture.CUDAarray(texture_fmt, *data.shape[::-1])
cupy/cuda/texture.pyx:296: in cupy.cuda.texture.CUDAarray.__init__
    self.ptr = runtime.malloc3DArray(desc.ptr, width, height, depth,
cupy_backends/cuda/api/runtime.pyx:593: in cupy_backends.cuda.api.runtime.malloc3DArray
    check_status(status)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

>   raise CUDARuntimeError(status)
E   AssertionError: Only cupy raises error
E   
E   Traceback (most recent call last):
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.hXnTrEAC7u/cupy/cupy/testing/_helper.py", line 47, in _call_func
E       result = impl(self, *args, **kw)
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.hXnTrEAC7u/cupy/tests/cupyx_tests/scipy_tests/ndimage_tests/test_interpolation.py", line 398, in test_affine_transform_texture_memory
E       return m(a, matrix, output_shape=output_shape,
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.hXnTrEAC7u/cupy/cupyx/scipy/ndimage/interpolation.py", line 376, in affine_transform
E       return _texture.affine_transformation(data=input,
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.hXnTrEAC7u/cupy/cupyx/_texture.py", line 168, in affine_transformation
E       texture_object = _create_texture_object(data,
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.hXnTrEAC7u/cupy/cupyx/_texture.py", line 98, in _create_texture_object
E       array = texture.CUDAarray(texture_fmt, *data.shape[::-1])
E     File "cupy/cuda/texture.pyx", line 296, in cupy.cuda.texture.CUDAarray.__init__
E       self.ptr = runtime.malloc3DArray(desc.ptr, width, height, depth,
E     File "cupy_backends/cuda/api/runtime.pyx", line 593, in cupy_backends.cuda.api.runtime.malloc3DArray
E       check_status(status)
E     File "cupy_backends/cuda/api/runtime.pyx", line 265, in cupy_backends.cuda.api.runtime.check_status
E       raise CUDARuntimeError(status)
E   cupy_backends.cuda.api.runtime.CUDARuntimeError: hipErrorUnknown: hipErrorUnknown

cupy_backends/cuda/api/runtime.pyx:265: AssertionError
----------------------------- Captured stderr call -----------------------------
Traceback (most recent call last):
  File "cupy_backends/cuda/api/runtime.pyx", line 644, in cupy_backends.cuda.api.runtime.freeArray
    check_status(status)
  File "cupy_backends/cuda/api/runtime.pyx", line 265, in cupy_backends.cuda.api.runtime.check_status
    raise CUDARuntimeError(status)
cupy_backends.cuda.api.runtime.CUDARuntimeError: hipErrorUnknown: hipErrorUnknown
_ TestAffineTransformTextureMemory.test_affine_transform_texture_memory[_param_248_{mode='nearest', order=0, output=float32, output_shape=10, shape=(10, 10, 10), theta=0}] _

self = <<cupyx_tests.scipy_tests.ndimage_tests.test_interpolation.TestAffineTransformTextureMemory object at 0x7fab36da5c40> ...ode': 'nearest', 'order': 0, 'output': <class 'numpy.float32'>, 'output_shape': 10, 'shape': (10, 10, 10), 'theta': 0}>
xp = <module 'cupy' from '/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.hXnTrEAC7u/cupy/cupy/__init__.py'>
scp = <module 'cupyx.scipy' from '/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.hXnTrEAC7u/cupy/cupyx/scipy/__init__.py'>

    @testing.numpy_cupy_allclose(atol=0.1, scipy_name='scp')
    def test_affine_transform_texture_memory(self, xp, scp):
        a = xp.ones(self.shape, dtype=xp.float32)
        center = numpy.divide(numpy.subtract(self.shape, 1), 2)
    
        if len(self.shape) == 2:
            matrix = self._2d_rotation_matrix(self.theta, center)
        elif len(self.shape) == 3:
            matrix = self._3d_rotation_matrix(self.theta, center)
        else:
            return pytest.xfail('Unsupported shape')
    
        if self.output == 'empty':
            output = xp.empty(self.shape, dtype=xp.float32)
            if self.output_shape:
                return pytest.skip('This combination is tested in '
                                   'test_invalid_texture_arguments')
        else:
            output = self.output
    
        if self.output_shape:
            output_shape = (self.output_shape, ) * len(self.shape)
        else:
            output_shape = self.output_shape
    
        if xp == cupy:
            m = cupyx.scipy.ndimage.affine_transform
            matrix = cupy.array(matrix)
>           return m(a, matrix, output_shape=output_shape,
                     output=output, order=self.order,
                     mode=self.mode, texture_memory=True)

tests/cupyx_tests/scipy_tests/ndimage_tests/test_interpolation.py:398: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
cupyx/scipy/ndimage/interpolation.py:376: in affine_transform
    return _texture.affine_transformation(data=input,
cupyx/_texture.py:168: in affine_transformation
    texture_object = _create_texture_object(data,
cupyx/_texture.py:98: in _create_texture_object
    array = texture.CUDAarray(texture_fmt, *data.shape[::-1])
cupy/cuda/texture.pyx:296: in cupy.cuda.texture.CUDAarray.__init__
    self.ptr = runtime.malloc3DArray(desc.ptr, width, height, depth,
cupy_backends/cuda/api/runtime.pyx:593: in cupy_backends.cuda.api.runtime.malloc3DArray
    check_status(status)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

>   raise CUDARuntimeError(status)
E   AssertionError: Only cupy raises error
E   
E   Traceback (most recent call last):
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.hXnTrEAC7u/cupy/cupy/testing/_helper.py", line 47, in _call_func
E       result = impl(self, *args, **kw)
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.hXnTrEAC7u/cupy/tests/cupyx_tests/scipy_tests/ndimage_tests/test_interpolation.py", line 398, in test_affine_transform_texture_memory
E       return m(a, matrix, output_shape=output_shape,
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.hXnTrEAC7u/cupy/cupyx/scipy/ndimage/interpolation.py", line 376, in affine_transform
E       return _texture.affine_transformation(data=input,
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.hXnTrEAC7u/cupy/cupyx/_texture.py", line 168, in affine_transformation
E       texture_object = _create_texture_object(data,
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.hXnTrEAC7u/cupy/cupyx/_texture.py", line 98, in _create_texture_object
E       array = texture.CUDAarray(texture_fmt, *data.shape[::-1])
E     File "cupy/cuda/texture.pyx", line 296, in cupy.cuda.texture.CUDAarray.__init__
E       self.ptr = runtime.malloc3DArray(desc.ptr, width, height, depth,
E     File "cupy_backends/cuda/api/runtime.pyx", line 593, in cupy_backends.cuda.api.runtime.malloc3DArray
E       check_status(status)
E     File "cupy_backends/cuda/api/runtime.pyx", line 265, in cupy_backends.cuda.api.runtime.check_status
E       raise CUDARuntimeError(status)
E   cupy_backends.cuda.api.runtime.CUDARuntimeError: hipErrorUnknown: hipErrorUnknown

cupy_backends/cuda/api/runtime.pyx:265: AssertionError
----------------------------- Captured stderr call -----------------------------
Traceback (most recent call last):
  File "cupy_backends/cuda/api/runtime.pyx", line 644, in cupy_backends.cuda.api.runtime.freeArray
    check_status(status)
  File "cupy_backends/cuda/api/runtime.pyx", line 265, in cupy_backends.cuda.api.runtime.check_status
    raise CUDARuntimeError(status)
cupy_backends.cuda.api.runtime.CUDARuntimeError: hipErrorUnknown: hipErrorUnknown
_ TestAffineTransformTextureMemory.test_affine_transform_texture_memory[_param_249_{mode='nearest', order=0, output=float32, output_shape=10, shape=(10, 10, 10), theta=90}] _

self = <<cupyx_tests.scipy_tests.ndimage_tests.test_interpolation.TestAffineTransformTextureMemory object at 0x7fab370613a0> ...de': 'nearest', 'order': 0, 'output': <class 'numpy.float32'>, 'output_shape': 10, 'shape': (10, 10, 10), 'theta': 90}>
xp = <module 'cupy' from '/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.hXnTrEAC7u/cupy/cupy/__init__.py'>
scp = <module 'cupyx.scipy' from '/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.hXnTrEAC7u/cupy/cupyx/scipy/__init__.py'>

    @testing.numpy_cupy_allclose(atol=0.1, scipy_name='scp')
    def test_affine_transform_texture_memory(self, xp, scp):
        a = xp.ones(self.shape, dtype=xp.float32)
        center = numpy.divide(numpy.subtract(self.shape, 1), 2)
    
        if len(self.shape) == 2:
            matrix = self._2d_rotation_matrix(self.theta, center)
        elif len(self.shape) == 3:
            matrix = self._3d_rotation_matrix(self.theta, center)
        else:
            return pytest.xfail('Unsupported shape')
    
        if self.output == 'empty':
            output = xp.empty(self.shape, dtype=xp.float32)
            if self.output_shape:
                return pytest.skip('This combination is tested in '
                                   'test_invalid_texture_arguments')
        else:
            output = self.output
    
        if self.output_shape:
            output_shape = (self.output_shape, ) * len(self.shape)
        else:
            output_shape = self.output_shape
    
        if xp == cupy:
            m = cupyx.scipy.ndimage.affine_transform
            matrix = cupy.array(matrix)
>           return m(a, matrix, output_shape=output_shape,
                     output=output, order=self.order,
                     mode=self.mode, texture_memory=True)

tests/cupyx_tests/scipy_tests/ndimage_tests/test_interpolation.py:398: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
cupyx/scipy/ndimage/interpolation.py:376: in affine_transform
    return _texture.affine_transformation(data=input,
cupyx/_texture.py:168: in affine_transformation
    texture_object = _create_texture_object(data,
cupyx/_texture.py:98: in _create_texture_object
    array = texture.CUDAarray(texture_fmt, *data.shape[::-1])
cupy/cuda/texture.pyx:296: in cupy.cuda.texture.CUDAarray.__init__
    self.ptr = runtime.malloc3DArray(desc.ptr, width, height, depth,
cupy_backends/cuda/api/runtime.pyx:593: in cupy_backends.cuda.api.runtime.malloc3DArray
    check_status(status)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

>   raise CUDARuntimeError(status)
E   AssertionError: Only cupy raises error
E   
E   Traceback (most recent call last):
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.hXnTrEAC7u/cupy/cupy/testing/_helper.py", line 47, in _call_func
E       result = impl(self, *args, **kw)
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.hXnTrEAC7u/cupy/tests/cupyx_tests/scipy_tests/ndimage_tests/test_interpolation.py", line 398, in test_affine_transform_texture_memory
E       return m(a, matrix, output_shape=output_shape,
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.hXnTrEAC7u/cupy/cupyx/scipy/ndimage/interpolation.py", line 376, in affine_transform
E       return _texture.affine_transformation(data=input,
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.hXnTrEAC7u/cupy/cupyx/_texture.py", line 168, in affine_transformation
E       texture_object = _create_texture_object(data,
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.hXnTrEAC7u/cupy/cupyx/_texture.py", line 98, in _create_texture_object
E       array = texture.CUDAarray(texture_fmt, *data.shape[::-1])
E     File "cupy/cuda/texture.pyx", line 296, in cupy.cuda.texture.CUDAarray.__init__
E       self.ptr = runtime.malloc3DArray(desc.ptr, width, height, depth,
E     File "cupy_backends/cuda/api/runtime.pyx", line 593, in cupy_backends.cuda.api.runtime.malloc3DArray
E       check_status(status)
E     File "cupy_backends/cuda/api/runtime.pyx", line 265, in cupy_backends.cuda.api.runtime.check_status
E       raise CUDARuntimeError(status)
E   cupy_backends.cuda.api.runtime.CUDARuntimeError: hipErrorUnknown: hipErrorUnknown

cupy_backends/cuda/api/runtime.pyx:265: AssertionError
----------------------------- Captured stderr call -----------------------------
Traceback (most recent call last):
  File "cupy_backends/cuda/api/runtime.pyx", line 644, in cupy_backends.cuda.api.runtime.freeArray
    check_status(status)
  File "cupy_backends/cuda/api/runtime.pyx", line 265, in cupy_backends.cuda.api.runtime.check_status
    raise CUDARuntimeError(status)
cupy_backends.cuda.api.runtime.CUDARuntimeError: hipErrorUnknown: hipErrorUnknown
_ TestAffineTransformTextureMemory.test_affine_transform_texture_memory[_param_250_{mode='nearest', order=0, output=float32, output_shape=10, shape=(10, 10, 10), theta=180}] _

self = <<cupyx_tests.scipy_tests.ndimage_tests.test_interpolation.TestAffineTransformTextureMemory object at 0x7fab3715ab20> ...e': 'nearest', 'order': 0, 'output': <class 'numpy.float32'>, 'output_shape': 10, 'shape': (10, 10, 10), 'theta': 180}>
xp = <module 'cupy' from '/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.hXnTrEAC7u/cupy/cupy/__init__.py'>
scp = <module 'cupyx.scipy' from '/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.hXnTrEAC7u/cupy/cupyx/scipy/__init__.py'>

    @testing.numpy_cupy_allclose(atol=0.1, scipy_name='scp')
    def test_affine_transform_texture_memory(self, xp, scp):
        a = xp.ones(self.shape, dtype=xp.float32)
        center = numpy.divide(numpy.subtract(self.shape, 1), 2)
    
        if len(self.shape) == 2:
            matrix = self._2d_rotation_matrix(self.theta, center)
        elif len(self.shape) == 3:
            matrix = self._3d_rotation_matrix(self.theta, center)
        else:
            return pytest.xfail('Unsupported shape')
    
        if self.output == 'empty':
            output = xp.empty(self.shape, dtype=xp.float32)
            if self.output_shape:
                return pytest.skip('This combination is tested in '
                                   'test_invalid_texture_arguments')
        else:
            output = self.output
    
        if self.output_shape:
            output_shape = (self.output_shape, ) * len(self.shape)
        else:
            output_shape = self.output_shape
    
        if xp == cupy:
            m = cupyx.scipy.ndimage.affine_transform
            matrix = cupy.array(matrix)
>           return m(a, matrix, output_shape=output_shape,
                     output=output, order=self.order,
                     mode=self.mode, texture_memory=True)

tests/cupyx_tests/scipy_tests/ndimage_tests/test_interpolation.py:398: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
cupyx/scipy/ndimage/interpolation.py:376: in affine_transform
    return _texture.affine_transformation(data=input,
cupyx/_texture.py:168: in affine_transformation
    texture_object = _create_texture_object(data,
cupyx/_texture.py:98: in _create_texture_object
    array = texture.CUDAarray(texture_fmt, *data.shape[::-1])
cupy/cuda/texture.pyx:296: in cupy.cuda.texture.CUDAarray.__init__
    self.ptr = runtime.malloc3DArray(desc.ptr, width, height, depth,
cupy_backends/cuda/api/runtime.pyx:593: in cupy_backends.cuda.api.runtime.malloc3DArray
    check_status(status)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

>   raise CUDARuntimeError(status)
E   AssertionError: Only cupy raises error
E   
E   Traceback (most recent call last):
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.hXnTrEAC7u/cupy/cupy/testing/_helper.py", line 47, in _call_func
E       result = impl(self, *args, **kw)
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.hXnTrEAC7u/cupy/tests/cupyx_tests/scipy_tests/ndimage_tests/test_interpolation.py", line 398, in test_affine_transform_texture_memory
E       return m(a, matrix, output_shape=output_shape,
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.hXnTrEAC7u/cupy/cupyx/scipy/ndimage/interpolation.py", line 376, in affine_transform
E       return _texture.affine_transformation(data=input,
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.hXnTrEAC7u/cupy/cupyx/_texture.py", line 168, in affine_transformation
E       texture_object = _create_texture_object(data,
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.hXnTrEAC7u/cupy/cupyx/_texture.py", line 98, in _create_texture_object
E       array = texture.CUDAarray(texture_fmt, *data.shape[::-1])
E     File "cupy/cuda/texture.pyx", line 296, in cupy.cuda.texture.CUDAarray.__init__
E       self.ptr = runtime.malloc3DArray(desc.ptr, width, height, depth,
E     File "cupy_backends/cuda/api/runtime.pyx", line 593, in cupy_backends.cuda.api.runtime.malloc3DArray
E       check_status(status)
E     File "cupy_backends/cuda/api/runtime.pyx", line 265, in cupy_backends.cuda.api.runtime.check_status
E       raise CUDARuntimeError(status)
E   cupy_backends.cuda.api.runtime.CUDARuntimeError: hipErrorUnknown: hipErrorUnknown

cupy_backends/cuda/api/runtime.pyx:265: AssertionError
----------------------------- Captured stderr call -----------------------------
Traceback (most recent call last):
  File "cupy_backends/cuda/api/runtime.pyx", line 644, in cupy_backends.cuda.api.runtime.freeArray
    check_status(status)
  File "cupy_backends/cuda/api/runtime.pyx", line 265, in cupy_backends.cuda.api.runtime.check_status
    raise CUDARuntimeError(status)
cupy_backends.cuda.api.runtime.CUDARuntimeError: hipErrorUnknown: hipErrorUnknown
_ TestAffineTransformTextureMemory.test_affine_transform_texture_memory[_param_251_{mode='nearest', order=0, output=float32, output_shape=10, shape=(10, 10, 10), theta=270}] _

self = <<cupyx_tests.scipy_tests.ndimage_tests.test_interpolation.TestAffineTransformTextureMemory object at 0x7fab37c52610> ...e': 'nearest', 'order': 0, 'output': <class 'numpy.float32'>, 'output_shape': 10, 'shape': (10, 10, 10), 'theta': 270}>
xp = <module 'cupy' from '/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.hXnTrEAC7u/cupy/cupy/__init__.py'>
scp = <module 'cupyx.scipy' from '/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.hXnTrEAC7u/cupy/cupyx/scipy/__init__.py'>

    @testing.numpy_cupy_allclose(atol=0.1, scipy_name='scp')
    def test_affine_transform_texture_memory(self, xp, scp):
        a = xp.ones(self.shape, dtype=xp.float32)
        center = numpy.divide(numpy.subtract(self.shape, 1), 2)
    
        if len(self.shape) == 2:
            matrix = self._2d_rotation_matrix(self.theta, center)
        elif len(self.shape) == 3:
            matrix = self._3d_rotation_matrix(self.theta, center)
        else:
            return pytest.xfail('Unsupported shape')
    
        if self.output == 'empty':
            output = xp.empty(self.shape, dtype=xp.float32)
            if self.output_shape:
                return pytest.skip('This combination is tested in '
                                   'test_invalid_texture_arguments')
        else:
            output = self.output
    
        if self.output_shape:
            output_shape = (self.output_shape, ) * len(self.shape)
        else:
            output_shape = self.output_shape
    
        if xp == cupy:
            m = cupyx.scipy.ndimage.affine_transform
            matrix = cupy.array(matrix)
>           return m(a, matrix, output_shape=output_shape,
                     output=output, order=self.order,
                     mode=self.mode, texture_memory=True)

tests/cupyx_tests/scipy_tests/ndimage_tests/test_interpolation.py:398: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
cupyx/scipy/ndimage/interpolation.py:376: in affine_transform
    return _texture.affine_transformation(data=input,
cupyx/_texture.py:168: in affine_transformation
    texture_object = _create_texture_object(data,
cupyx/_texture.py:98: in _create_texture_object
    array = texture.CUDAarray(texture_fmt, *data.shape[::-1])
cupy/cuda/texture.pyx:296: in cupy.cuda.texture.CUDAarray.__init__
    self.ptr = runtime.malloc3DArray(desc.ptr, width, height, depth,
cupy_backends/cuda/api/runtime.pyx:593: in cupy_backends.cuda.api.runtime.malloc3DArray
    check_status(status)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

>   raise CUDARuntimeError(status)
E   AssertionError: Only cupy raises error
E   
E   Traceback (most recent call last):
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.hXnTrEAC7u/cupy/cupy/testing/_helper.py", line 47, in _call_func
E       result = impl(self, *args, **kw)
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.hXnTrEAC7u/cupy/tests/cupyx_tests/scipy_tests/ndimage_tests/test_interpolation.py", line 398, in test_affine_transform_texture_memory
E       return m(a, matrix, output_shape=output_shape,
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.hXnTrEAC7u/cupy/cupyx/scipy/ndimage/interpolation.py", line 376, in affine_transform
E       return _texture.affine_transformation(data=input,
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.hXnTrEAC7u/cupy/cupyx/_texture.py", line 168, in affine_transformation
E       texture_object = _create_texture_object(data,
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.hXnTrEAC7u/cupy/cupyx/_texture.py", line 98, in _create_texture_object
E       array = texture.CUDAarray(texture_fmt, *data.shape[::-1])
E     File "cupy/cuda/texture.pyx", line 296, in cupy.cuda.texture.CUDAarray.__init__
E       self.ptr = runtime.malloc3DArray(desc.ptr, width, height, depth,
E     File "cupy_backends/cuda/api/runtime.pyx", line 593, in cupy_backends.cuda.api.runtime.malloc3DArray
E       check_status(status)
E     File "cupy_backends/cuda/api/runtime.pyx", line 265, in cupy_backends.cuda.api.runtime.check_status
E       raise CUDARuntimeError(status)
E   cupy_backends.cuda.api.runtime.CUDARuntimeError: hipErrorUnknown: hipErrorUnknown

cupy_backends/cuda/api/runtime.pyx:265: AssertionError
----------------------------- Captured stderr call -----------------------------
Traceback (most recent call last):
  File "cupy_backends/cuda/api/runtime.pyx", line 644, in cupy_backends.cuda.api.runtime.freeArray
    check_status(status)
  File "cupy_backends/cuda/api/runtime.pyx", line 265, in cupy_backends.cuda.api.runtime.check_status
    raise CUDARuntimeError(status)
cupy_backends.cuda.api.runtime.CUDARuntimeError: hipErrorUnknown: hipErrorUnknown
_ TestAffineTransformTextureMemory.test_affine_transform_texture_memory[_param_252_{mode='nearest', order=0, output=float32, output_shape=10, shape=(10, 20, 30), theta=0}] _

self = <<cupyx_tests.scipy_tests.ndimage_tests.test_interpolation.TestAffineTransformTextureMemory object at 0x7fab36e193d0> ...ode': 'nearest', 'order': 0, 'output': <class 'numpy.float32'>, 'output_shape': 10, 'shape': (10, 20, 30), 'theta': 0}>
xp = <module 'cupy' from '/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.hXnTrEAC7u/cupy/cupy/__init__.py'>
scp = <module 'cupyx.scipy' from '/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.hXnTrEAC7u/cupy/cupyx/scipy/__init__.py'>

    @testing.numpy_cupy_allclose(atol=0.1, scipy_name='scp')
    def test_affine_transform_texture_memory(self, xp, scp):
        a = xp.ones(self.shape, dtype=xp.float32)
        center = numpy.divide(numpy.subtract(self.shape, 1), 2)
    
        if len(self.shape) == 2:
            matrix = self._2d_rotation_matrix(self.theta, center)
        elif len(self.shape) == 3:
            matrix = self._3d_rotation_matrix(self.theta, center)
        else:
            return pytest.xfail('Unsupported shape')
    
        if self.output == 'empty':
            output = xp.empty(self.shape, dtype=xp.float32)
            if self.output_shape:
                return pytest.skip('This combination is tested in '
                                   'test_invalid_texture_arguments')
        else:
            output = self.output
    
        if self.output_shape:
            output_shape = (self.output_shape, ) * len(self.shape)
        else:
            output_shape = self.output_shape
    
        if xp == cupy:
            m = cupyx.scipy.ndimage.affine_transform
            matrix = cupy.array(matrix)
>           return m(a, matrix, output_shape=output_shape,
                     output=output, order=self.order,
                     mode=self.mode, texture_memory=True)

tests/cupyx_tests/scipy_tests/ndimage_tests/test_interpolation.py:398: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
cupyx/scipy/ndimage/interpolation.py:376: in affine_transform
    return _texture.affine_transformation(data=input,
cupyx/_texture.py:168: in affine_transformation
    texture_object = _create_texture_object(data,
cupyx/_texture.py:98: in _create_texture_object
    array = texture.CUDAarray(texture_fmt, *data.shape[::-1])
cupy/cuda/texture.pyx:296: in cupy.cuda.texture.CUDAarray.__init__
    self.ptr = runtime.malloc3DArray(desc.ptr, width, height, depth,
cupy_backends/cuda/api/runtime.pyx:593: in cupy_backends.cuda.api.runtime.malloc3DArray
    check_status(status)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

>   raise CUDARuntimeError(status)
E   AssertionError: Only cupy raises error
E   
E   Traceback (most recent call last):
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.hXnTrEAC7u/cupy/cupy/testing/_helper.py", line 47, in _call_func
E       result = impl(self, *args, **kw)
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.hXnTrEAC7u/cupy/tests/cupyx_tests/scipy_tests/ndimage_tests/test_interpolation.py", line 398, in test_affine_transform_texture_memory
E       return m(a, matrix, output_shape=output_shape,
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.hXnTrEAC7u/cupy/cupyx/scipy/ndimage/interpolation.py", line 376, in affine_transform
E       return _texture.affine_transformation(data=input,
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.hXnTrEAC7u/cupy/cupyx/_texture.py", line 168, in affine_transformation
E       texture_object = _create_texture_object(data,
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.hXnTrEAC7u/cupy/cupyx/_texture.py", line 98, in _create_texture_object
E       array = texture.CUDAarray(texture_fmt, *data.shape[::-1])
E     File "cupy/cuda/texture.pyx", line 296, in cupy.cuda.texture.CUDAarray.__init__
E       self.ptr = runtime.malloc3DArray(desc.ptr, width, height, depth,
E     File "cupy_backends/cuda/api/runtime.pyx", line 593, in cupy_backends.cuda.api.runtime.malloc3DArray
E       check_status(status)
E     File "cupy_backends/cuda/api/runtime.pyx", line 265, in cupy_backends.cuda.api.runtime.check_status
E       raise CUDARuntimeError(status)
E   cupy_backends.cuda.api.runtime.CUDARuntimeError: hipErrorUnknown: hipErrorUnknown

cupy_backends/cuda/api/runtime.pyx:265: AssertionError
----------------------------- Captured stderr call -----------------------------
Traceback (most recent call last):
  File "cupy_backends/cuda/api/runtime.pyx", line 644, in cupy_backends.cuda.api.runtime.freeArray
    check_status(status)
  File "cupy_backends/cuda/api/runtime.pyx", line 265, in cupy_backends.cuda.api.runtime.check_status
    raise CUDARuntimeError(status)
cupy_backends.cuda.api.runtime.CUDARuntimeError: hipErrorUnknown: hipErrorUnknown
_ TestAffineTransformTextureMemory.test_affine_transform_texture_memory[_param_253_{mode='nearest', order=0, output=float32, output_shape=10, shape=(10, 20, 30), theta=90}] _

self = <<cupyx_tests.scipy_tests.ndimage_tests.test_interpolation.TestAffineTransformTextureMemory object at 0x7fab371faa30> ...de': 'nearest', 'order': 0, 'output': <class 'numpy.float32'>, 'output_shape': 10, 'shape': (10, 20, 30), 'theta': 90}>
xp = <module 'cupy' from '/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.hXnTrEAC7u/cupy/cupy/__init__.py'>
scp = <module 'cupyx.scipy' from '/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.hXnTrEAC7u/cupy/cupyx/scipy/__init__.py'>

    @testing.numpy_cupy_allclose(atol=0.1, scipy_name='scp')
    def test_affine_transform_texture_memory(self, xp, scp):
        a = xp.ones(self.shape, dtype=xp.float32)
        center = numpy.divide(numpy.subtract(self.shape, 1), 2)
    
        if len(self.shape) == 2:
            matrix = self._2d_rotation_matrix(self.theta, center)
        elif len(self.shape) == 3:
            matrix = self._3d_rotation_matrix(self.theta, center)
        else:
            return pytest.xfail('Unsupported shape')
    
        if self.output == 'empty':
            output = xp.empty(self.shape, dtype=xp.float32)
            if self.output_shape:
                return pytest.skip('This combination is tested in '
                                   'test_invalid_texture_arguments')
        else:
            output = self.output
    
        if self.output_shape:
            output_shape = (self.output_shape, ) * len(self.shape)
        else:
            output_shape = self.output_shape
    
        if xp == cupy:
            m = cupyx.scipy.ndimage.affine_transform
            matrix = cupy.array(matrix)
>           return m(a, matrix, output_shape=output_shape,
                     output=output, order=self.order,
                     mode=self.mode, texture_memory=True)

tests/cupyx_tests/scipy_tests/ndimage_tests/test_interpolation.py:398: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
cupyx/scipy/ndimage/interpolation.py:376: in affine_transform
    return _texture.affine_transformation(data=input,
cupyx/_texture.py:168: in affine_transformation
    texture_object = _create_texture_object(data,
cupyx/_texture.py:98: in _create_texture_object
    array = texture.CUDAarray(texture_fmt, *data.shape[::-1])
cupy/cuda/texture.pyx:296: in cupy.cuda.texture.CUDAarray.__init__
    self.ptr = runtime.malloc3DArray(desc.ptr, width, height, depth,
cupy_backends/cuda/api/runtime.pyx:593: in cupy_backends.cuda.api.runtime.malloc3DArray
    check_status(status)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

>   raise CUDARuntimeError(status)
E   AssertionError: Only cupy raises error
E   
E   Traceback (most recent call last):
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.hXnTrEAC7u/cupy/cupy/testing/_helper.py", line 47, in _call_func
E       result = impl(self, *args, **kw)
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.hXnTrEAC7u/cupy/tests/cupyx_tests/scipy_tests/ndimage_tests/test_interpolation.py", line 398, in test_affine_transform_texture_memory
E       return m(a, matrix, output_shape=output_shape,
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.hXnTrEAC7u/cupy/cupyx/scipy/ndimage/interpolation.py", line 376, in affine_transform
E       return _texture.affine_transformation(data=input,
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.hXnTrEAC7u/cupy/cupyx/_texture.py", line 168, in affine_transformation
E       texture_object = _create_texture_object(data,
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.hXnTrEAC7u/cupy/cupyx/_texture.py", line 98, in _create_texture_object
E       array = texture.CUDAarray(texture_fmt, *data.shape[::-1])
E     File "cupy/cuda/texture.pyx", line 296, in cupy.cuda.texture.CUDAarray.__init__
E       self.ptr = runtime.malloc3DArray(desc.ptr, width, height, depth,
E     File "cupy_backends/cuda/api/runtime.pyx", line 593, in cupy_backends.cuda.api.runtime.malloc3DArray
E       check_status(status)
E     File "cupy_backends/cuda/api/runtime.pyx", line 265, in cupy_backends.cuda.api.runtime.check_status
E       raise CUDARuntimeError(status)
E   cupy_backends.cuda.api.runtime.CUDARuntimeError: hipErrorUnknown: hipErrorUnknown

cupy_backends/cuda/api/runtime.pyx:265: AssertionError
----------------------------- Captured stderr call -----------------------------
Traceback (most recent call last):
  File "cupy_backends/cuda/api/runtime.pyx", line 644, in cupy_backends.cuda.api.runtime.freeArray
    check_status(status)
  File "cupy_backends/cuda/api/runtime.pyx", line 265, in cupy_backends.cuda.api.runtime.check_status
    raise CUDARuntimeError(status)
cupy_backends.cuda.api.runtime.CUDARuntimeError: hipErrorUnknown: hipErrorUnknown
_ TestAffineTransformTextureMemory.test_affine_transform_texture_memory[_param_254_{mode='nearest', order=0, output=float32, output_shape=10, shape=(10, 20, 30), theta=180}] _

self = <<cupyx_tests.scipy_tests.ndimage_tests.test_interpolation.TestAffineTransformTextureMemory object at 0x7fac515079d0> ...e': 'nearest', 'order': 0, 'output': <class 'numpy.float32'>, 'output_shape': 10, 'shape': (10, 20, 30), 'theta': 180}>
xp = <module 'cupy' from '/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.hXnTrEAC7u/cupy/cupy/__init__.py'>
scp = <module 'cupyx.scipy' from '/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.hXnTrEAC7u/cupy/cupyx/scipy/__init__.py'>

    @testing.numpy_cupy_allclose(atol=0.1, scipy_name='scp')
    def test_affine_transform_texture_memory(self, xp, scp):
        a = xp.ones(self.shape, dtype=xp.float32)
        center = numpy.divide(numpy.subtract(self.shape, 1), 2)
    
        if len(self.shape) == 2:
            matrix = self._2d_rotation_matrix(self.theta, center)
        elif len(self.shape) == 3:
            matrix = self._3d_rotation_matrix(self.theta, center)
        else:
            return pytest.xfail('Unsupported shape')
    
        if self.output == 'empty':
            output = xp.empty(self.shape, dtype=xp.float32)
            if self.output_shape:
                return pytest.skip('This combination is tested in '
                                   'test_invalid_texture_arguments')
        else:
            output = self.output
    
        if self.output_shape:
            output_shape = (self.output_shape, ) * len(self.shape)
        else:
            output_shape = self.output_shape
    
        if xp == cupy:
            m = cupyx.scipy.ndimage.affine_transform
            matrix = cupy.array(matrix)
>           return m(a, matrix, output_shape=output_shape,
                     output=output, order=self.order,
                     mode=self.mode, texture_memory=True)

tests/cupyx_tests/scipy_tests/ndimage_tests/test_interpolation.py:398: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
cupyx/scipy/ndimage/interpolation.py:376: in affine_transform
    return _texture.affine_transformation(data=input,
cupyx/_texture.py:168: in affine_transformation
    texture_object = _create_texture_object(data,
cupyx/_texture.py:98: in _create_texture_object
    array = texture.CUDAarray(texture_fmt, *data.shape[::-1])
cupy/cuda/texture.pyx:296: in cupy.cuda.texture.CUDAarray.__init__
    self.ptr = runtime.malloc3DArray(desc.ptr, width, height, depth,
cupy_backends/cuda/api/runtime.pyx:593: in cupy_backends.cuda.api.runtime.malloc3DArray
    check_status(status)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

>   raise CUDARuntimeError(status)
E   AssertionError: Only cupy raises error
E   
E   Traceback (most recent call last):
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.hXnTrEAC7u/cupy/cupy/testing/_helper.py", line 47, in _call_func
E       result = impl(self, *args, **kw)
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.hXnTrEAC7u/cupy/tests/cupyx_tests/scipy_tests/ndimage_tests/test_interpolation.py", line 398, in test_affine_transform_texture_memory
E       return m(a, matrix, output_shape=output_shape,
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.hXnTrEAC7u/cupy/cupyx/scipy/ndimage/interpolation.py", line 376, in affine_transform
E       return _texture.affine_transformation(data=input,
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.hXnTrEAC7u/cupy/cupyx/_texture.py", line 168, in affine_transformation
E       texture_object = _create_texture_object(data,
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.hXnTrEAC7u/cupy/cupyx/_texture.py", line 98, in _create_texture_object
E       array = texture.CUDAarray(texture_fmt, *data.shape[::-1])
E     File "cupy/cuda/texture.pyx", line 296, in cupy.cuda.texture.CUDAarray.__init__
E       self.ptr = runtime.malloc3DArray(desc.ptr, width, height, depth,
E     File "cupy_backends/cuda/api/runtime.pyx", line 593, in cupy_backends.cuda.api.runtime.malloc3DArray
E       check_status(status)
E     File "cupy_backends/cuda/api/runtime.pyx", line 265, in cupy_backends.cuda.api.runtime.check_status
E       raise CUDARuntimeError(status)
E   cupy_backends.cuda.api.runtime.CUDARuntimeError: hipErrorUnknown: hipErrorUnknown

cupy_backends/cuda/api/runtime.pyx:265: AssertionError
----------------------------- Captured stderr call -----------------------------
Traceback (most recent call last):
  File "cupy_backends/cuda/api/runtime.pyx", line 644, in cupy_backends.cuda.api.runtime.freeArray
    check_status(status)
  File "cupy_backends/cuda/api/runtime.pyx", line 265, in cupy_backends.cuda.api.runtime.check_status
    raise CUDARuntimeError(status)
cupy_backends.cuda.api.runtime.CUDARuntimeError: hipErrorUnknown: hipErrorUnknown
_ TestAffineTransformTextureMemory.test_affine_transform_texture_memory[_param_255_{mode='nearest', order=0, output=float32, output_shape=10, shape=(10, 20, 30), theta=270}] _

self = <<cupyx_tests.scipy_tests.ndimage_tests.test_interpolation.TestAffineTransformTextureMemory object at 0x7fab36e22ee0> ...e': 'nearest', 'order': 0, 'output': <class 'numpy.float32'>, 'output_shape': 10, 'shape': (10, 20, 30), 'theta': 270}>
xp = <module 'cupy' from '/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.hXnTrEAC7u/cupy/cupy/__init__.py'>
scp = <module 'cupyx.scipy' from '/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.hXnTrEAC7u/cupy/cupyx/scipy/__init__.py'>

    @testing.numpy_cupy_allclose(atol=0.1, scipy_name='scp')
    def test_affine_transform_texture_memory(self, xp, scp):
        a = xp.ones(self.shape, dtype=xp.float32)
        center = numpy.divide(numpy.subtract(self.shape, 1), 2)
    
        if len(self.shape) == 2:
            matrix = self._2d_rotation_matrix(self.theta, center)
        elif len(self.shape) == 3:
            matrix = self._3d_rotation_matrix(self.theta, center)
        else:
            return pytest.xfail('Unsupported shape')
    
        if self.output == 'empty':
            output = xp.empty(self.shape, dtype=xp.float32)
            if self.output_shape:
                return pytest.skip('This combination is tested in '
                                   'test_invalid_texture_arguments')
        else:
            output = self.output
    
        if self.output_shape:
            output_shape = (self.output_shape, ) * len(self.shape)
        else:
            output_shape = self.output_shape
    
        if xp == cupy:
            m = cupyx.scipy.ndimage.affine_transform
            matrix = cupy.array(matrix)
>           return m(a, matrix, output_shape=output_shape,
                     output=output, order=self.order,
                     mode=self.mode, texture_memory=True)

tests/cupyx_tests/scipy_tests/ndimage_tests/test_interpolation.py:398: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
cupyx/scipy/ndimage/interpolation.py:376: in affine_transform
    return _texture.affine_transformation(data=input,
cupyx/_texture.py:168: in affine_transformation
    texture_object = _create_texture_object(data,
cupyx/_texture.py:98: in _create_texture_object
    array = texture.CUDAarray(texture_fmt, *data.shape[::-1])
cupy/cuda/texture.pyx:296: in cupy.cuda.texture.CUDAarray.__init__
    self.ptr = runtime.malloc3DArray(desc.ptr, width, height, depth,
cupy_backends/cuda/api/runtime.pyx:593: in cupy_backends.cuda.api.runtime.malloc3DArray
    check_status(status)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

>   raise CUDARuntimeError(status)
E   AssertionError: Only cupy raises error
E   
E   Traceback (most recent call last):
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.hXnTrEAC7u/cupy/cupy/testing/_helper.py", line 47, in _call_func
E       result = impl(self, *args, **kw)
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.hXnTrEAC7u/cupy/tests/cupyx_tests/scipy_tests/ndimage_tests/test_interpolation.py", line 398, in test_affine_transform_texture_memory
E       return m(a, matrix, output_shape=output_shape,
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.hXnTrEAC7u/cupy/cupyx/scipy/ndimage/interpolation.py", line 376, in affine_transform
E       return _texture.affine_transformation(data=input,
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.hXnTrEAC7u/cupy/cupyx/_texture.py", line 168, in affine_transformation
E       texture_object = _create_texture_object(data,
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.hXnTrEAC7u/cupy/cupyx/_texture.py", line 98, in _create_texture_object
E       array = texture.CUDAarray(texture_fmt, *data.shape[::-1])
E     File "cupy/cuda/texture.pyx", line 296, in cupy.cuda.texture.CUDAarray.__init__
E       self.ptr = runtime.malloc3DArray(desc.ptr, width, height, depth,
E     File "cupy_backends/cuda/api/runtime.pyx", line 593, in cupy_backends.cuda.api.runtime.malloc3DArray
E       check_status(status)
E     File "cupy_backends/cuda/api/runtime.pyx", line 265, in cupy_backends.cuda.api.runtime.check_status
E       raise CUDARuntimeError(status)
E   cupy_backends.cuda.api.runtime.CUDARuntimeError: hipErrorUnknown: hipErrorUnknown

cupy_backends/cuda/api/runtime.pyx:265: AssertionError
----------------------------- Captured stderr call -----------------------------
Traceback (most recent call last):
  File "cupy_backends/cuda/api/runtime.pyx", line 644, in cupy_backends.cuda.api.runtime.freeArray
    check_status(status)
  File "cupy_backends/cuda/api/runtime.pyx", line 265, in cupy_backends.cuda.api.runtime.check_status
    raise CUDARuntimeError(status)
cupy_backends.cuda.api.runtime.CUDARuntimeError: hipErrorUnknown: hipErrorUnknown
_ TestAffineTransformTextureMemory.test_affine_transform_texture_memory[_param_256_{mode='nearest', order=0, output='empty', output_shape=None, shape=(100, 100), theta=0}] _

self = <<cupyx_tests.scipy_tests.ndimage_tests.test_interpolation.TestAffineTransformTextureMemory object at 0x7fac514d40d0>  parameter: {'mode': 'nearest', 'order': 0, 'output': 'empty', 'output_shape': None, 'shape': (100, 100), 'theta': 0}>
xp = <module 'cupy' from '/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.hXnTrEAC7u/cupy/cupy/__init__.py'>
scp = <module 'cupyx.scipy' from '/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.hXnTrEAC7u/cupy/cupyx/scipy/__init__.py'>

    @testing.numpy_cupy_allclose(atol=0.1, scipy_name='scp')
    def test_affine_transform_texture_memory(self, xp, scp):
        a = xp.ones(self.shape, dtype=xp.float32)
        center = numpy.divide(numpy.subtract(self.shape, 1), 2)
    
        if len(self.shape) == 2:
            matrix = self._2d_rotation_matrix(self.theta, center)
        elif len(self.shape) == 3:
            matrix = self._3d_rotation_matrix(self.theta, center)
        else:
            return pytest.xfail('Unsupported shape')
    
        if self.output == 'empty':
            output = xp.empty(self.shape, dtype=xp.float32)
            if self.output_shape:
                return pytest.skip('This combination is tested in '
                                   'test_invalid_texture_arguments')
        else:
            output = self.output
    
        if self.output_shape:
            output_shape = (self.output_shape, ) * len(self.shape)
        else:
            output_shape = self.output_shape
    
        if xp == cupy:
            m = cupyx.scipy.ndimage.affine_transform
            matrix = cupy.array(matrix)
>           return m(a, matrix, output_shape=output_shape,
                     output=output, order=self.order,
                     mode=self.mode, texture_memory=True)

tests/cupyx_tests/scipy_tests/ndimage_tests/test_interpolation.py:398: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
cupyx/scipy/ndimage/interpolation.py:376: in affine_transform
    return _texture.affine_transformation(data=input,
cupyx/_texture.py:168: in affine_transformation
    texture_object = _create_texture_object(data,
cupyx/_texture.py:98: in _create_texture_object
    array = texture.CUDAarray(texture_fmt, *data.shape[::-1])
cupy/cuda/texture.pyx:296: in cupy.cuda.texture.CUDAarray.__init__
    self.ptr = runtime.malloc3DArray(desc.ptr, width, height, depth,
cupy_backends/cuda/api/runtime.pyx:593: in cupy_backends.cuda.api.runtime.malloc3DArray
    check_status(status)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

>   raise CUDARuntimeError(status)
E   AssertionError: Only cupy raises error
E   
E   Traceback (most recent call last):
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.hXnTrEAC7u/cupy/cupy/testing/_helper.py", line 47, in _call_func
E       result = impl(self, *args, **kw)
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.hXnTrEAC7u/cupy/tests/cupyx_tests/scipy_tests/ndimage_tests/test_interpolation.py", line 398, in test_affine_transform_texture_memory
E       return m(a, matrix, output_shape=output_shape,
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.hXnTrEAC7u/cupy/cupyx/scipy/ndimage/interpolation.py", line 376, in affine_transform
E       return _texture.affine_transformation(data=input,
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.hXnTrEAC7u/cupy/cupyx/_texture.py", line 168, in affine_transformation
E       texture_object = _create_texture_object(data,
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.hXnTrEAC7u/cupy/cupyx/_texture.py", line 98, in _create_texture_object
E       array = texture.CUDAarray(texture_fmt, *data.shape[::-1])
E     File "cupy/cuda/texture.pyx", line 296, in cupy.cuda.texture.CUDAarray.__init__
E       self.ptr = runtime.malloc3DArray(desc.ptr, width, height, depth,
E     File "cupy_backends/cuda/api/runtime.pyx", line 593, in cupy_backends.cuda.api.runtime.malloc3DArray
E       check_status(status)
E     File "cupy_backends/cuda/api/runtime.pyx", line 265, in cupy_backends.cuda.api.runtime.check_status
E       raise CUDARuntimeError(status)
E   cupy_backends.cuda.api.runtime.CUDARuntimeError: hipErrorUnknown: hipErrorUnknown

cupy_backends/cuda/api/runtime.pyx:265: AssertionError
----------------------------- Captured stderr call -----------------------------
Traceback (most recent call last):
  File "cupy_backends/cuda/api/runtime.pyx", line 644, in cupy_backends.cuda.api.runtime.freeArray
    check_status(status)
  File "cupy_backends/cuda/api/runtime.pyx", line 265, in cupy_backends.cuda.api.runtime.check_status
    raise CUDARuntimeError(status)
cupy_backends.cuda.api.runtime.CUDARuntimeError: hipErrorUnknown: hipErrorUnknown
_ TestAffineTransformTextureMemory.test_affine_transform_texture_memory[_param_257_{mode='nearest', order=0, output='empty', output_shape=None, shape=(100, 100), theta=90}] _

self = <<cupyx_tests.scipy_tests.ndimage_tests.test_interpolation.TestAffineTransformTextureMemory object at 0x7fab36ef6490>  parameter: {'mode': 'nearest', 'order': 0, 'output': 'empty', 'output_shape': None, 'shape': (100, 100), 'theta': 90}>
xp = <module 'cupy' from '/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.hXnTrEAC7u/cupy/cupy/__init__.py'>
scp = <module 'cupyx.scipy' from '/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.hXnTrEAC7u/cupy/cupyx/scipy/__init__.py'>

    @testing.numpy_cupy_allclose(atol=0.1, scipy_name='scp')
    def test_affine_transform_texture_memory(self, xp, scp):
        a = xp.ones(self.shape, dtype=xp.float32)
        center = numpy.divide(numpy.subtract(self.shape, 1), 2)
    
        if len(self.shape) == 2:
            matrix = self._2d_rotation_matrix(self.theta, center)
        elif len(self.shape) == 3:
            matrix = self._3d_rotation_matrix(self.theta, center)
        else:
            return pytest.xfail('Unsupported shape')
    
        if self.output == 'empty':
            output = xp.empty(self.shape, dtype=xp.float32)
            if self.output_shape:
                return pytest.skip('This combination is tested in '
                                   'test_invalid_texture_arguments')
        else:
            output = self.output
    
        if self.output_shape:
            output_shape = (self.output_shape, ) * len(self.shape)
        else:
            output_shape = self.output_shape
    
        if xp == cupy:
            m = cupyx.scipy.ndimage.affine_transform
            matrix = cupy.array(matrix)
>           return m(a, matrix, output_shape=output_shape,
                     output=output, order=self.order,
                     mode=self.mode, texture_memory=True)

tests/cupyx_tests/scipy_tests/ndimage_tests/test_interpolation.py:398: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
cupyx/scipy/ndimage/interpolation.py:376: in affine_transform
    return _texture.affine_transformation(data=input,
cupyx/_texture.py:168: in affine_transformation
    texture_object = _create_texture_object(data,
cupyx/_texture.py:98: in _create_texture_object
    array = texture.CUDAarray(texture_fmt, *data.shape[::-1])
cupy/cuda/texture.pyx:296: in cupy.cuda.texture.CUDAarray.__init__
    self.ptr = runtime.malloc3DArray(desc.ptr, width, height, depth,
cupy_backends/cuda/api/runtime.pyx:593: in cupy_backends.cuda.api.runtime.malloc3DArray
    check_status(status)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

>   raise CUDARuntimeError(status)
E   AssertionError: Only cupy raises error
E   
E   Traceback (most recent call last):
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.hXnTrEAC7u/cupy/cupy/testing/_helper.py", line 47, in _call_func
E       result = impl(self, *args, **kw)
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.hXnTrEAC7u/cupy/tests/cupyx_tests/scipy_tests/ndimage_tests/test_interpolation.py", line 398, in test_affine_transform_texture_memory
E       return m(a, matrix, output_shape=output_shape,
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.hXnTrEAC7u/cupy/cupyx/scipy/ndimage/interpolation.py", line 376, in affine_transform
E       return _texture.affine_transformation(data=input,
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.hXnTrEAC7u/cupy/cupyx/_texture.py", line 168, in affine_transformation
E       texture_object = _create_texture_object(data,
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.hXnTrEAC7u/cupy/cupyx/_texture.py", line 98, in _create_texture_object
E       array = texture.CUDAarray(texture_fmt, *data.shape[::-1])
E     File "cupy/cuda/texture.pyx", line 296, in cupy.cuda.texture.CUDAarray.__init__
E       self.ptr = runtime.malloc3DArray(desc.ptr, width, height, depth,
E     File "cupy_backends/cuda/api/runtime.pyx", line 593, in cupy_backends.cuda.api.runtime.malloc3DArray
E       check_status(status)
E     File "cupy_backends/cuda/api/runtime.pyx", line 265, in cupy_backends.cuda.api.runtime.check_status
E       raise CUDARuntimeError(status)
E   cupy_backends.cuda.api.runtime.CUDARuntimeError: hipErrorUnknown: hipErrorUnknown

cupy_backends/cuda/api/runtime.pyx:265: AssertionError
----------------------------- Captured stderr call -----------------------------
Traceback (most recent call last):
  File "cupy_backends/cuda/api/runtime.pyx", line 644, in cupy_backends.cuda.api.runtime.freeArray
    check_status(status)
  File "cupy_backends/cuda/api/runtime.pyx", line 265, in cupy_backends.cuda.api.runtime.check_status
    raise CUDARuntimeError(status)
cupy_backends.cuda.api.runtime.CUDARuntimeError: hipErrorUnknown: hipErrorUnknown
_ TestAffineTransformTextureMemory.test_affine_transform_texture_memory[_param_258_{mode='nearest', order=0, output='empty', output_shape=None, shape=(100, 100), theta=180}] _

self = <<cupyx_tests.scipy_tests.ndimage_tests.test_interpolation.TestAffineTransformTextureMemory object at 0x7fab36e103d0>  parameter: {'mode': 'nearest', 'order': 0, 'output': 'empty', 'output_shape': None, 'shape': (100, 100), 'theta': 180}>
xp = <module 'cupy' from '/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.hXnTrEAC7u/cupy/cupy/__init__.py'>
scp = <module 'cupyx.scipy' from '/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.hXnTrEAC7u/cupy/cupyx/scipy/__init__.py'>

    @testing.numpy_cupy_allclose(atol=0.1, scipy_name='scp')
    def test_affine_transform_texture_memory(self, xp, scp):
        a = xp.ones(self.shape, dtype=xp.float32)
        center = numpy.divide(numpy.subtract(self.shape, 1), 2)
    
        if len(self.shape) == 2:
            matrix = self._2d_rotation_matrix(self.theta, center)
        elif len(self.shape) == 3:
            matrix = self._3d_rotation_matrix(self.theta, center)
        else:
            return pytest.xfail('Unsupported shape')
    
        if self.output == 'empty':
            output = xp.empty(self.shape, dtype=xp.float32)
            if self.output_shape:
                return pytest.skip('This combination is tested in '
                                   'test_invalid_texture_arguments')
        else:
            output = self.output
    
        if self.output_shape:
            output_shape = (self.output_shape, ) * len(self.shape)
        else:
            output_shape = self.output_shape
    
        if xp == cupy:
            m = cupyx.scipy.ndimage.affine_transform
            matrix = cupy.array(matrix)
>           return m(a, matrix, output_shape=output_shape,
                     output=output, order=self.order,
                     mode=self.mode, texture_memory=True)

tests/cupyx_tests/scipy_tests/ndimage_tests/test_interpolation.py:398: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
cupyx/scipy/ndimage/interpolation.py:376: in affine_transform
    return _texture.affine_transformation(data=input,
cupyx/_texture.py:168: in affine_transformation
    texture_object = _create_texture_object(data,
cupyx/_texture.py:98: in _create_texture_object
    array = texture.CUDAarray(texture_fmt, *data.shape[::-1])
cupy/cuda/texture.pyx:296: in cupy.cuda.texture.CUDAarray.__init__
    self.ptr = runtime.malloc3DArray(desc.ptr, width, height, depth,
cupy_backends/cuda/api/runtime.pyx:593: in cupy_backends.cuda.api.runtime.malloc3DArray
    check_status(status)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

>   raise CUDARuntimeError(status)
E   AssertionError: Only cupy raises error
E   
E   Traceback (most recent call last):
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.hXnTrEAC7u/cupy/cupy/testing/_helper.py", line 47, in _call_func
E       result = impl(self, *args, **kw)
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.hXnTrEAC7u/cupy/tests/cupyx_tests/scipy_tests/ndimage_tests/test_interpolation.py", line 398, in test_affine_transform_texture_memory
E       return m(a, matrix, output_shape=output_shape,
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.hXnTrEAC7u/cupy/cupyx/scipy/ndimage/interpolation.py", line 376, in affine_transform
E       return _texture.affine_transformation(data=input,
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.hXnTrEAC7u/cupy/cupyx/_texture.py", line 168, in affine_transformation
E       texture_object = _create_texture_object(data,
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.hXnTrEAC7u/cupy/cupyx/_texture.py", line 98, in _create_texture_object
E       array = texture.CUDAarray(texture_fmt, *data.shape[::-1])
E     File "cupy/cuda/texture.pyx", line 296, in cupy.cuda.texture.CUDAarray.__init__
E       self.ptr = runtime.malloc3DArray(desc.ptr, width, height, depth,
E     File "cupy_backends/cuda/api/runtime.pyx", line 593, in cupy_backends.cuda.api.runtime.malloc3DArray
E       check_status(status)
E     File "cupy_backends/cuda/api/runtime.pyx", line 265, in cupy_backends.cuda.api.runtime.check_status
E       raise CUDARuntimeError(status)
E   cupy_backends.cuda.api.runtime.CUDARuntimeError: hipErrorUnknown: hipErrorUnknown

cupy_backends/cuda/api/runtime.pyx:265: AssertionError
----------------------------- Captured stderr call -----------------------------
Traceback (most recent call last):
  File "cupy_backends/cuda/api/runtime.pyx", line 644, in cupy_backends.cuda.api.runtime.freeArray
    check_status(status)
  File "cupy_backends/cuda/api/runtime.pyx", line 265, in cupy_backends.cuda.api.runtime.check_status
    raise CUDARuntimeError(status)
cupy_backends.cuda.api.runtime.CUDARuntimeError: hipErrorUnknown: hipErrorUnknown
_ TestAffineTransformTextureMemory.test_affine_transform_texture_memory[_param_259_{mode='nearest', order=0, output='empty', output_shape=None, shape=(100, 100), theta=270}] _

self = <<cupyx_tests.scipy_tests.ndimage_tests.test_interpolation.TestAffineTransformTextureMemory object at 0x7fac51549250>  parameter: {'mode': 'nearest', 'order': 0, 'output': 'empty', 'output_shape': None, 'shape': (100, 100), 'theta': 270}>
xp = <module 'cupy' from '/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.hXnTrEAC7u/cupy/cupy/__init__.py'>
scp = <module 'cupyx.scipy' from '/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.hXnTrEAC7u/cupy/cupyx/scipy/__init__.py'>

    @testing.numpy_cupy_allclose(atol=0.1, scipy_name='scp')
    def test_affine_transform_texture_memory(self, xp, scp):
        a = xp.ones(self.shape, dtype=xp.float32)
        center = numpy.divide(numpy.subtract(self.shape, 1), 2)
    
        if len(self.shape) == 2:
            matrix = self._2d_rotation_matrix(self.theta, center)
        elif len(self.shape) == 3:
            matrix = self._3d_rotation_matrix(self.theta, center)
        else:
            return pytest.xfail('Unsupported shape')
    
        if self.output == 'empty':
            output = xp.empty(self.shape, dtype=xp.float32)
            if self.output_shape:
                return pytest.skip('This combination is tested in '
                                   'test_invalid_texture_arguments')
        else:
            output = self.output
    
        if self.output_shape:
            output_shape = (self.output_shape, ) * len(self.shape)
        else:
            output_shape = self.output_shape
    
        if xp == cupy:
            m = cupyx.scipy.ndimage.affine_transform
            matrix = cupy.array(matrix)
>           return m(a, matrix, output_shape=output_shape,
                     output=output, order=self.order,
                     mode=self.mode, texture_memory=True)

tests/cupyx_tests/scipy_tests/ndimage_tests/test_interpolation.py:398: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
cupyx/scipy/ndimage/interpolation.py:376: in affine_transform
    return _texture.affine_transformation(data=input,
cupyx/_texture.py:168: in affine_transformation
    texture_object = _create_texture_object(data,
cupyx/_texture.py:98: in _create_texture_object
    array = texture.CUDAarray(texture_fmt, *data.shape[::-1])
cupy/cuda/texture.pyx:296: in cupy.cuda.texture.CUDAarray.__init__
    self.ptr = runtime.malloc3DArray(desc.ptr, width, height, depth,
cupy_backends/cuda/api/runtime.pyx:593: in cupy_backends.cuda.api.runtime.malloc3DArray
    check_status(status)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

>   raise CUDARuntimeError(status)
E   AssertionError: Only cupy raises error
E   
E   Traceback (most recent call last):
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.hXnTrEAC7u/cupy/cupy/testing/_helper.py", line 47, in _call_func
E       result = impl(self, *args, **kw)
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.hXnTrEAC7u/cupy/tests/cupyx_tests/scipy_tests/ndimage_tests/test_interpolation.py", line 398, in test_affine_transform_texture_memory
E       return m(a, matrix, output_shape=output_shape,
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.hXnTrEAC7u/cupy/cupyx/scipy/ndimage/interpolation.py", line 376, in affine_transform
E       return _texture.affine_transformation(data=input,
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.hXnTrEAC7u/cupy/cupyx/_texture.py", line 168, in affine_transformation
E       texture_object = _create_texture_object(data,
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.hXnTrEAC7u/cupy/cupyx/_texture.py", line 98, in _create_texture_object
E       array = texture.CUDAarray(texture_fmt, *data.shape[::-1])
E     File "cupy/cuda/texture.pyx", line 296, in cupy.cuda.texture.CUDAarray.__init__
E       self.ptr = runtime.malloc3DArray(desc.ptr, width, height, depth,
E     File "cupy_backends/cuda/api/runtime.pyx", line 593, in cupy_backends.cuda.api.runtime.malloc3DArray
E       check_status(status)
E     File "cupy_backends/cuda/api/runtime.pyx", line 265, in cupy_backends.cuda.api.runtime.check_status
E       raise CUDARuntimeError(status)
E   cupy_backends.cuda.api.runtime.CUDARuntimeError: hipErrorUnknown: hipErrorUnknown

cupy_backends/cuda/api/runtime.pyx:265: AssertionError
----------------------------- Captured stderr call -----------------------------
Traceback (most recent call last):
  File "cupy_backends/cuda/api/runtime.pyx", line 644, in cupy_backends.cuda.api.runtime.freeArray
    check_status(status)
  File "cupy_backends/cuda/api/runtime.pyx", line 265, in cupy_backends.cuda.api.runtime.check_status
    raise CUDARuntimeError(status)
cupy_backends.cuda.api.runtime.CUDARuntimeError: hipErrorUnknown: hipErrorUnknown
_ TestAffineTransformTextureMemory.test_affine_transform_texture_memory[_param_260_{mode='nearest', order=0, output='empty', output_shape=None, shape=(10, 20), theta=0}] _

self = <<cupyx_tests.scipy_tests.ndimage_tests.test_interpolation.TestAffineTransformTextureMemory object at 0x7fab36b989d0>  parameter: {'mode': 'nearest', 'order': 0, 'output': 'empty', 'output_shape': None, 'shape': (10, 20), 'theta': 0}>
xp = <module 'cupy' from '/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.hXnTrEAC7u/cupy/cupy/__init__.py'>
scp = <module 'cupyx.scipy' from '/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.hXnTrEAC7u/cupy/cupyx/scipy/__init__.py'>

    @testing.numpy_cupy_allclose(atol=0.1, scipy_name='scp')
    def test_affine_transform_texture_memory(self, xp, scp):
        a = xp.ones(self.shape, dtype=xp.float32)
        center = numpy.divide(numpy.subtract(self.shape, 1), 2)
    
        if len(self.shape) == 2:
            matrix = self._2d_rotation_matrix(self.theta, center)
        elif len(self.shape) == 3:
            matrix = self._3d_rotation_matrix(self.theta, center)
        else:
            return pytest.xfail('Unsupported shape')
    
        if self.output == 'empty':
            output = xp.empty(self.shape, dtype=xp.float32)
            if self.output_shape:
                return pytest.skip('This combination is tested in '
                                   'test_invalid_texture_arguments')
        else:
            output = self.output
    
        if self.output_shape:
            output_shape = (self.output_shape, ) * len(self.shape)
        else:
            output_shape = self.output_shape
    
        if xp == cupy:
            m = cupyx.scipy.ndimage.affine_transform
            matrix = cupy.array(matrix)
>           return m(a, matrix, output_shape=output_shape,
                     output=output, order=self.order,
                     mode=self.mode, texture_memory=True)

tests/cupyx_tests/scipy_tests/ndimage_tests/test_interpolation.py:398: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
cupyx/scipy/ndimage/interpolation.py:376: in affine_transform
    return _texture.affine_transformation(data=input,
cupyx/_texture.py:168: in affine_transformation
    texture_object = _create_texture_object(data,
cupyx/_texture.py:98: in _create_texture_object
    array = texture.CUDAarray(texture_fmt, *data.shape[::-1])
cupy/cuda/texture.pyx:296: in cupy.cuda.texture.CUDAarray.__init__
    self.ptr = runtime.malloc3DArray(desc.ptr, width, height, depth,
cupy_backends/cuda/api/runtime.pyx:593: in cupy_backends.cuda.api.runtime.malloc3DArray
    check_status(status)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

>   raise CUDARuntimeError(status)
E   AssertionError: Only cupy raises error
E   
E   Traceback (most recent call last):
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.hXnTrEAC7u/cupy/cupy/testing/_helper.py", line 47, in _call_func
E       result = impl(self, *args, **kw)
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.hXnTrEAC7u/cupy/tests/cupyx_tests/scipy_tests/ndimage_tests/test_interpolation.py", line 398, in test_affine_transform_texture_memory
E       return m(a, matrix, output_shape=output_shape,
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.hXnTrEAC7u/cupy/cupyx/scipy/ndimage/interpolation.py", line 376, in affine_transform
E       return _texture.affine_transformation(data=input,
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.hXnTrEAC7u/cupy/cupyx/_texture.py", line 168, in affine_transformation
E       texture_object = _create_texture_object(data,
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.hXnTrEAC7u/cupy/cupyx/_texture.py", line 98, in _create_texture_object
E       array = texture.CUDAarray(texture_fmt, *data.shape[::-1])
E     File "cupy/cuda/texture.pyx", line 296, in cupy.cuda.texture.CUDAarray.__init__
E       self.ptr = runtime.malloc3DArray(desc.ptr, width, height, depth,
E     File "cupy_backends/cuda/api/runtime.pyx", line 593, in cupy_backends.cuda.api.runtime.malloc3DArray
E       check_status(status)
E     File "cupy_backends/cuda/api/runtime.pyx", line 265, in cupy_backends.cuda.api.runtime.check_status
E       raise CUDARuntimeError(status)
E   cupy_backends.cuda.api.runtime.CUDARuntimeError: hipErrorUnknown: hipErrorUnknown

cupy_backends/cuda/api/runtime.pyx:265: AssertionError
----------------------------- Captured stderr call -----------------------------
Traceback (most recent call last):
  File "cupy_backends/cuda/api/runtime.pyx", line 644, in cupy_backends.cuda.api.runtime.freeArray
    check_status(status)
  File "cupy_backends/cuda/api/runtime.pyx", line 265, in cupy_backends.cuda.api.runtime.check_status
    raise CUDARuntimeError(status)
cupy_backends.cuda.api.runtime.CUDARuntimeError: hipErrorUnknown: hipErrorUnknown
_ TestAffineTransformTextureMemory.test_affine_transform_texture_memory[_param_261_{mode='nearest', order=0, output='empty', output_shape=None, shape=(10, 20), theta=90}] _

self = <<cupyx_tests.scipy_tests.ndimage_tests.test_interpolation.TestAffineTransformTextureMemory object at 0x7fab36db6a90>  parameter: {'mode': 'nearest', 'order': 0, 'output': 'empty', 'output_shape': None, 'shape': (10, 20), 'theta': 90}>
xp = <module 'cupy' from '/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.hXnTrEAC7u/cupy/cupy/__init__.py'>
scp = <module 'cupyx.scipy' from '/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.hXnTrEAC7u/cupy/cupyx/scipy/__init__.py'>

    @testing.numpy_cupy_allclose(atol=0.1, scipy_name='scp')
    def test_affine_transform_texture_memory(self, xp, scp):
        a = xp.ones(self.shape, dtype=xp.float32)
        center = numpy.divide(numpy.subtract(self.shape, 1), 2)
    
        if len(self.shape) == 2:
            matrix = self._2d_rotation_matrix(self.theta, center)
        elif len(self.shape) == 3:
            matrix = self._3d_rotation_matrix(self.theta, center)
        else:
            return pytest.xfail('Unsupported shape')
    
        if self.output == 'empty':
            output = xp.empty(self.shape, dtype=xp.float32)
            if self.output_shape:
                return pytest.skip('This combination is tested in '
                                   'test_invalid_texture_arguments')
        else:
            output = self.output
    
        if self.output_shape:
            output_shape = (self.output_shape, ) * len(self.shape)
        else:
            output_shape = self.output_shape
    
        if xp == cupy:
            m = cupyx.scipy.ndimage.affine_transform
            matrix = cupy.array(matrix)
>           return m(a, matrix, output_shape=output_shape,
                     output=output, order=self.order,
                     mode=self.mode, texture_memory=True)

tests/cupyx_tests/scipy_tests/ndimage_tests/test_interpolation.py:398: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
cupyx/scipy/ndimage/interpolation.py:376: in affine_transform
    return _texture.affine_transformation(data=input,
cupyx/_texture.py:168: in affine_transformation
    texture_object = _create_texture_object(data,
cupyx/_texture.py:98: in _create_texture_object
    array = texture.CUDAarray(texture_fmt, *data.shape[::-1])
cupy/cuda/texture.pyx:296: in cupy.cuda.texture.CUDAarray.__init__
    self.ptr = runtime.malloc3DArray(desc.ptr, width, height, depth,
cupy_backends/cuda/api/runtime.pyx:593: in cupy_backends.cuda.api.runtime.malloc3DArray
    check_status(status)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

>   raise CUDARuntimeError(status)
E   AssertionError: Only cupy raises error
E   
E   Traceback (most recent call last):
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.hXnTrEAC7u/cupy/cupy/testing/_helper.py", line 47, in _call_func
E       result = impl(self, *args, **kw)
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.hXnTrEAC7u/cupy/tests/cupyx_tests/scipy_tests/ndimage_tests/test_interpolation.py", line 398, in test_affine_transform_texture_memory
E       return m(a, matrix, output_shape=output_shape,
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.hXnTrEAC7u/cupy/cupyx/scipy/ndimage/interpolation.py", line 376, in affine_transform
E       return _texture.affine_transformation(data=input,
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.hXnTrEAC7u/cupy/cupyx/_texture.py", line 168, in affine_transformation
E       texture_object = _create_texture_object(data,
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.hXnTrEAC7u/cupy/cupyx/_texture.py", line 98, in _create_texture_object
E       array = texture.CUDAarray(texture_fmt, *data.shape[::-1])
E     File "cupy/cuda/texture.pyx", line 296, in cupy.cuda.texture.CUDAarray.__init__
E       self.ptr = runtime.malloc3DArray(desc.ptr, width, height, depth,
E     File "cupy_backends/cuda/api/runtime.pyx", line 593, in cupy_backends.cuda.api.runtime.malloc3DArray
E       check_status(status)
E     File "cupy_backends/cuda/api/runtime.pyx", line 265, in cupy_backends.cuda.api.runtime.check_status
E       raise CUDARuntimeError(status)
E   cupy_backends.cuda.api.runtime.CUDARuntimeError: hipErrorUnknown: hipErrorUnknown

cupy_backends/cuda/api/runtime.pyx:265: AssertionError
----------------------------- Captured stderr call -----------------------------
Traceback (most recent call last):
  File "cupy_backends/cuda/api/runtime.pyx", line 644, in cupy_backends.cuda.api.runtime.freeArray
    check_status(status)
  File "cupy_backends/cuda/api/runtime.pyx", line 265, in cupy_backends.cuda.api.runtime.check_status
    raise CUDARuntimeError(status)
cupy_backends.cuda.api.runtime.CUDARuntimeError: hipErrorUnknown: hipErrorUnknown
_ TestAffineTransformTextureMemory.test_affine_transform_texture_memory[_param_262_{mode='nearest', order=0, output='empty', output_shape=None, shape=(10, 20), theta=180}] _

self = <<cupyx_tests.scipy_tests.ndimage_tests.test_interpolation.TestAffineTransformTextureMemory object at 0x7fac510965e0>  parameter: {'mode': 'nearest', 'order': 0, 'output': 'empty', 'output_shape': None, 'shape': (10, 20), 'theta': 180}>
xp = <module 'cupy' from '/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.hXnTrEAC7u/cupy/cupy/__init__.py'>
scp = <module 'cupyx.scipy' from '/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.hXnTrEAC7u/cupy/cupyx/scipy/__init__.py'>

    @testing.numpy_cupy_allclose(atol=0.1, scipy_name='scp')
    def test_affine_transform_texture_memory(self, xp, scp):
        a = xp.ones(self.shape, dtype=xp.float32)
        center = numpy.divide(numpy.subtract(self.shape, 1), 2)
    
        if len(self.shape) == 2:
            matrix = self._2d_rotation_matrix(self.theta, center)
        elif len(self.shape) == 3:
            matrix = self._3d_rotation_matrix(self.theta, center)
        else:
            return pytest.xfail('Unsupported shape')
    
        if self.output == 'empty':
            output = xp.empty(self.shape, dtype=xp.float32)
            if self.output_shape:
                return pytest.skip('This combination is tested in '
                                   'test_invalid_texture_arguments')
        else:
            output = self.output
    
        if self.output_shape:
            output_shape = (self.output_shape, ) * len(self.shape)
        else:
            output_shape = self.output_shape
    
        if xp == cupy:
            m = cupyx.scipy.ndimage.affine_transform
            matrix = cupy.array(matrix)
>           return m(a, matrix, output_shape=output_shape,
                     output=output, order=self.order,
                     mode=self.mode, texture_memory=True)

tests/cupyx_tests/scipy_tests/ndimage_tests/test_interpolation.py:398: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
cupyx/scipy/ndimage/interpolation.py:376: in affine_transform
    return _texture.affine_transformation(data=input,
cupyx/_texture.py:168: in affine_transformation
    texture_object = _create_texture_object(data,
cupyx/_texture.py:98: in _create_texture_object
    array = texture.CUDAarray(texture_fmt, *data.shape[::-1])
cupy/cuda/texture.pyx:296: in cupy.cuda.texture.CUDAarray.__init__
    self.ptr = runtime.malloc3DArray(desc.ptr, width, height, depth,
cupy_backends/cuda/api/runtime.pyx:593: in cupy_backends.cuda.api.runtime.malloc3DArray
    check_status(status)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

>   raise CUDARuntimeError(status)
E   AssertionError: Only cupy raises error
E   
E   Traceback (most recent call last):
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.hXnTrEAC7u/cupy/cupy/testing/_helper.py", line 47, in _call_func
E       result = impl(self, *args, **kw)
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.hXnTrEAC7u/cupy/tests/cupyx_tests/scipy_tests/ndimage_tests/test_interpolation.py", line 398, in test_affine_transform_texture_memory
E       return m(a, matrix, output_shape=output_shape,
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.hXnTrEAC7u/cupy/cupyx/scipy/ndimage/interpolation.py", line 376, in affine_transform
E       return _texture.affine_transformation(data=input,
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.hXnTrEAC7u/cupy/cupyx/_texture.py", line 168, in affine_transformation
E       texture_object = _create_texture_object(data,
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.hXnTrEAC7u/cupy/cupyx/_texture.py", line 98, in _create_texture_object
E       array = texture.CUDAarray(texture_fmt, *data.shape[::-1])
E     File "cupy/cuda/texture.pyx", line 296, in cupy.cuda.texture.CUDAarray.__init__
E       self.ptr = runtime.malloc3DArray(desc.ptr, width, height, depth,
E     File "cupy_backends/cuda/api/runtime.pyx", line 593, in cupy_backends.cuda.api.runtime.malloc3DArray
E       check_status(status)
E     File "cupy_backends/cuda/api/runtime.pyx", line 265, in cupy_backends.cuda.api.runtime.check_status
E       raise CUDARuntimeError(status)
E   cupy_backends.cuda.api.runtime.CUDARuntimeError: hipErrorUnknown: hipErrorUnknown

cupy_backends/cuda/api/runtime.pyx:265: AssertionError
----------------------------- Captured stderr call -----------------------------
Traceback (most recent call last):
  File "cupy_backends/cuda/api/runtime.pyx", line 644, in cupy_backends.cuda.api.runtime.freeArray
    check_status(status)
  File "cupy_backends/cuda/api/runtime.pyx", line 265, in cupy_backends.cuda.api.runtime.check_status
    raise CUDARuntimeError(status)
cupy_backends.cuda.api.runtime.CUDARuntimeError: hipErrorUnknown: hipErrorUnknown
_ TestAffineTransformTextureMemory.test_affine_transform_texture_memory[_param_263_{mode='nearest', order=0, output='empty', output_shape=None, shape=(10, 20), theta=270}] _

self = <<cupyx_tests.scipy_tests.ndimage_tests.test_interpolation.TestAffineTransformTextureMemory object at 0x7fab38af5850>  parameter: {'mode': 'nearest', 'order': 0, 'output': 'empty', 'output_shape': None, 'shape': (10, 20), 'theta': 270}>
xp = <module 'cupy' from '/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.hXnTrEAC7u/cupy/cupy/__init__.py'>
scp = <module 'cupyx.scipy' from '/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.hXnTrEAC7u/cupy/cupyx/scipy/__init__.py'>

    @testing.numpy_cupy_allclose(atol=0.1, scipy_name='scp')
    def test_affine_transform_texture_memory(self, xp, scp):
        a = xp.ones(self.shape, dtype=xp.float32)
        center = numpy.divide(numpy.subtract(self.shape, 1), 2)
    
        if len(self.shape) == 2:
            matrix = self._2d_rotation_matrix(self.theta, center)
        elif len(self.shape) == 3:
            matrix = self._3d_rotation_matrix(self.theta, center)
        else:
            return pytest.xfail('Unsupported shape')
    
        if self.output == 'empty':
            output = xp.empty(self.shape, dtype=xp.float32)
            if self.output_shape:
                return pytest.skip('This combination is tested in '
                                   'test_invalid_texture_arguments')
        else:
            output = self.output
    
        if self.output_shape:
            output_shape = (self.output_shape, ) * len(self.shape)
        else:
            output_shape = self.output_shape
    
        if xp == cupy:
            m = cupyx.scipy.ndimage.affine_transform
            matrix = cupy.array(matrix)
>           return m(a, matrix, output_shape=output_shape,
                     output=output, order=self.order,
                     mode=self.mode, texture_memory=True)

tests/cupyx_tests/scipy_tests/ndimage_tests/test_interpolation.py:398: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
cupyx/scipy/ndimage/interpolation.py:376: in affine_transform
    return _texture.affine_transformation(data=input,
cupyx/_texture.py:168: in affine_transformation
    texture_object = _create_texture_object(data,
cupyx/_texture.py:98: in _create_texture_object
    array = texture.CUDAarray(texture_fmt, *data.shape[::-1])
cupy/cuda/texture.pyx:296: in cupy.cuda.texture.CUDAarray.__init__
    self.ptr = runtime.malloc3DArray(desc.ptr, width, height, depth,
cupy_backends/cuda/api/runtime.pyx:593: in cupy_backends.cuda.api.runtime.malloc3DArray
    check_status(status)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

>   raise CUDARuntimeError(status)
E   AssertionError: Only cupy raises error
E   
E   Traceback (most recent call last):
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.hXnTrEAC7u/cupy/cupy/testing/_helper.py", line 47, in _call_func
E       result = impl(self, *args, **kw)
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.hXnTrEAC7u/cupy/tests/cupyx_tests/scipy_tests/ndimage_tests/test_interpolation.py", line 398, in test_affine_transform_texture_memory
E       return m(a, matrix, output_shape=output_shape,
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.hXnTrEAC7u/cupy/cupyx/scipy/ndimage/interpolation.py", line 376, in affine_transform
E       return _texture.affine_transformation(data=input,
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.hXnTrEAC7u/cupy/cupyx/_texture.py", line 168, in affine_transformation
E       texture_object = _create_texture_object(data,
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.hXnTrEAC7u/cupy/cupyx/_texture.py", line 98, in _create_texture_object
E       array = texture.CUDAarray(texture_fmt, *data.shape[::-1])
E     File "cupy/cuda/texture.pyx", line 296, in cupy.cuda.texture.CUDAarray.__init__
E       self.ptr = runtime.malloc3DArray(desc.ptr, width, height, depth,
E     File "cupy_backends/cuda/api/runtime.pyx", line 593, in cupy_backends.cuda.api.runtime.malloc3DArray
E       check_status(status)
E     File "cupy_backends/cuda/api/runtime.pyx", line 265, in cupy_backends.cuda.api.runtime.check_status
E       raise CUDARuntimeError(status)
E   cupy_backends.cuda.api.runtime.CUDARuntimeError: hipErrorUnknown: hipErrorUnknown

cupy_backends/cuda/api/runtime.pyx:265: AssertionError
----------------------------- Captured stderr call -----------------------------
Traceback (most recent call last):
  File "cupy_backends/cuda/api/runtime.pyx", line 644, in cupy_backends.cuda.api.runtime.freeArray
    check_status(status)
  File "cupy_backends/cuda/api/runtime.pyx", line 265, in cupy_backends.cuda.api.runtime.check_status
    raise CUDARuntimeError(status)
cupy_backends.cuda.api.runtime.CUDARuntimeError: hipErrorUnknown: hipErrorUnknown
_ TestAffineTransformTextureMemory.test_affine_transform_texture_memory[_param_264_{mode='nearest', order=0, output='empty', output_shape=None, shape=(10, 10, 10), theta=0}] _

self = <<cupyx_tests.scipy_tests.ndimage_tests.test_interpolation.TestAffineTransformTextureMemory object at 0x7fab36f7f400>  parameter: {'mode': 'nearest', 'order': 0, 'output': 'empty', 'output_shape': None, 'shape': (10, 10, 10), 'theta': 0}>
xp = <module 'cupy' from '/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.hXnTrEAC7u/cupy/cupy/__init__.py'>
scp = <module 'cupyx.scipy' from '/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.hXnTrEAC7u/cupy/cupyx/scipy/__init__.py'>

    @testing.numpy_cupy_allclose(atol=0.1, scipy_name='scp')
    def test_affine_transform_texture_memory(self, xp, scp):
        a = xp.ones(self.shape, dtype=xp.float32)
        center = numpy.divide(numpy.subtract(self.shape, 1), 2)
    
        if len(self.shape) == 2:
            matrix = self._2d_rotation_matrix(self.theta, center)
        elif len(self.shape) == 3:
            matrix = self._3d_rotation_matrix(self.theta, center)
        else:
            return pytest.xfail('Unsupported shape')
    
        if self.output == 'empty':
            output = xp.empty(self.shape, dtype=xp.float32)
            if self.output_shape:
                return pytest.skip('This combination is tested in '
                                   'test_invalid_texture_arguments')
        else:
            output = self.output
    
        if self.output_shape:
            output_shape = (self.output_shape, ) * len(self.shape)
        else:
            output_shape = self.output_shape
    
        if xp == cupy:
            m = cupyx.scipy.ndimage.affine_transform
            matrix = cupy.array(matrix)
>           return m(a, matrix, output_shape=output_shape,
                     output=output, order=self.order,
                     mode=self.mode, texture_memory=True)

tests/cupyx_tests/scipy_tests/ndimage_tests/test_interpolation.py:398: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
cupyx/scipy/ndimage/interpolation.py:376: in affine_transform
    return _texture.affine_transformation(data=input,
cupyx/_texture.py:168: in affine_transformation
    texture_object = _create_texture_object(data,
cupyx/_texture.py:98: in _create_texture_object
    array = texture.CUDAarray(texture_fmt, *data.shape[::-1])
cupy/cuda/texture.pyx:296: in cupy.cuda.texture.CUDAarray.__init__
    self.ptr = runtime.malloc3DArray(desc.ptr, width, height, depth,
cupy_backends/cuda/api/runtime.pyx:593: in cupy_backends.cuda.api.runtime.malloc3DArray
    check_status(status)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

>   raise CUDARuntimeError(status)
E   AssertionError: Only cupy raises error
E   
E   Traceback (most recent call last):
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.hXnTrEAC7u/cupy/cupy/testing/_helper.py", line 47, in _call_func
E       result = impl(self, *args, **kw)
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.hXnTrEAC7u/cupy/tests/cupyx_tests/scipy_tests/ndimage_tests/test_interpolation.py", line 398, in test_affine_transform_texture_memory
E       return m(a, matrix, output_shape=output_shape,
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.hXnTrEAC7u/cupy/cupyx/scipy/ndimage/interpolation.py", line 376, in affine_transform
E       return _texture.affine_transformation(data=input,
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.hXnTrEAC7u/cupy/cupyx/_texture.py", line 168, in affine_transformation
E       texture_object = _create_texture_object(data,
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.hXnTrEAC7u/cupy/cupyx/_texture.py", line 98, in _create_texture_object
E       array = texture.CUDAarray(texture_fmt, *data.shape[::-1])
E     File "cupy/cuda/texture.pyx", line 296, in cupy.cuda.texture.CUDAarray.__init__
E       self.ptr = runtime.malloc3DArray(desc.ptr, width, height, depth,
E     File "cupy_backends/cuda/api/runtime.pyx", line 593, in cupy_backends.cuda.api.runtime.malloc3DArray
E       check_status(status)
E     File "cupy_backends/cuda/api/runtime.pyx", line 265, in cupy_backends.cuda.api.runtime.check_status
E       raise CUDARuntimeError(status)
E   cupy_backends.cuda.api.runtime.CUDARuntimeError: hipErrorUnknown: hipErrorUnknown

cupy_backends/cuda/api/runtime.pyx:265: AssertionError
----------------------------- Captured stderr call -----------------------------
Traceback (most recent call last):
  File "cupy_backends/cuda/api/runtime.pyx", line 644, in cupy_backends.cuda.api.runtime.freeArray
    check_status(status)
  File "cupy_backends/cuda/api/runtime.pyx", line 265, in cupy_backends.cuda.api.runtime.check_status
    raise CUDARuntimeError(status)
cupy_backends.cuda.api.runtime.CUDARuntimeError: hipErrorUnknown: hipErrorUnknown
_ TestAffineTransformTextureMemory.test_affine_transform_texture_memory[_param_265_{mode='nearest', order=0, output='empty', output_shape=None, shape=(10, 10, 10), theta=90}] _

self = <<cupyx_tests.scipy_tests.ndimage_tests.test_interpolation.TestAffineTransformTextureMemory object at 0x7fac510a32e0>  parameter: {'mode': 'nearest', 'order': 0, 'output': 'empty', 'output_shape': None, 'shape': (10, 10, 10), 'theta': 90}>
xp = <module 'cupy' from '/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.hXnTrEAC7u/cupy/cupy/__init__.py'>
scp = <module 'cupyx.scipy' from '/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.hXnTrEAC7u/cupy/cupyx/scipy/__init__.py'>

    @testing.numpy_cupy_allclose(atol=0.1, scipy_name='scp')
    def test_affine_transform_texture_memory(self, xp, scp):
        a = xp.ones(self.shape, dtype=xp.float32)
        center = numpy.divide(numpy.subtract(self.shape, 1), 2)
    
        if len(self.shape) == 2:
            matrix = self._2d_rotation_matrix(self.theta, center)
        elif len(self.shape) == 3:
            matrix = self._3d_rotation_matrix(self.theta, center)
        else:
            return pytest.xfail('Unsupported shape')
    
        if self.output == 'empty':
            output = xp.empty(self.shape, dtype=xp.float32)
            if self.output_shape:
                return pytest.skip('This combination is tested in '
                                   'test_invalid_texture_arguments')
        else:
            output = self.output
    
        if self.output_shape:
            output_shape = (self.output_shape, ) * len(self.shape)
        else:
            output_shape = self.output_shape
    
        if xp == cupy:
            m = cupyx.scipy.ndimage.affine_transform
            matrix = cupy.array(matrix)
>           return m(a, matrix, output_shape=output_shape,
                     output=output, order=self.order,
                     mode=self.mode, texture_memory=True)

tests/cupyx_tests/scipy_tests/ndimage_tests/test_interpolation.py:398: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
cupyx/scipy/ndimage/interpolation.py:376: in affine_transform
    return _texture.affine_transformation(data=input,
cupyx/_texture.py:168: in affine_transformation
    texture_object = _create_texture_object(data,
cupyx/_texture.py:98: in _create_texture_object
    array = texture.CUDAarray(texture_fmt, *data.shape[::-1])
cupy/cuda/texture.pyx:296: in cupy.cuda.texture.CUDAarray.__init__
    self.ptr = runtime.malloc3DArray(desc.ptr, width, height, depth,
cupy_backends/cuda/api/runtime.pyx:593: in cupy_backends.cuda.api.runtime.malloc3DArray
    check_status(status)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

>   raise CUDARuntimeError(status)
E   AssertionError: Only cupy raises error
E   
E   Traceback (most recent call last):
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.hXnTrEAC7u/cupy/cupy/testing/_helper.py", line 47, in _call_func
E       result = impl(self, *args, **kw)
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.hXnTrEAC7u/cupy/tests/cupyx_tests/scipy_tests/ndimage_tests/test_interpolation.py", line 398, in test_affine_transform_texture_memory
E       return m(a, matrix, output_shape=output_shape,
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.hXnTrEAC7u/cupy/cupyx/scipy/ndimage/interpolation.py", line 376, in affine_transform
E       return _texture.affine_transformation(data=input,
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.hXnTrEAC7u/cupy/cupyx/_texture.py", line 168, in affine_transformation
E       texture_object = _create_texture_object(data,
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.hXnTrEAC7u/cupy/cupyx/_texture.py", line 98, in _create_texture_object
E       array = texture.CUDAarray(texture_fmt, *data.shape[::-1])
E     File "cupy/cuda/texture.pyx", line 296, in cupy.cuda.texture.CUDAarray.__init__
E       self.ptr = runtime.malloc3DArray(desc.ptr, width, height, depth,
E     File "cupy_backends/cuda/api/runtime.pyx", line 593, in cupy_backends.cuda.api.runtime.malloc3DArray
E       check_status(status)
E     File "cupy_backends/cuda/api/runtime.pyx", line 265, in cupy_backends.cuda.api.runtime.check_status
E       raise CUDARuntimeError(status)
E   cupy_backends.cuda.api.runtime.CUDARuntimeError: hipErrorUnknown: hipErrorUnknown

cupy_backends/cuda/api/runtime.pyx:265: AssertionError
----------------------------- Captured stderr call -----------------------------
Traceback (most recent call last):
  File "cupy_backends/cuda/api/runtime.pyx", line 644, in cupy_backends.cuda.api.runtime.freeArray
    check_status(status)
  File "cupy_backends/cuda/api/runtime.pyx", line 265, in cupy_backends.cuda.api.runtime.check_status
    raise CUDARuntimeError(status)
cupy_backends.cuda.api.runtime.CUDARuntimeError: hipErrorUnknown: hipErrorUnknown
_ TestAffineTransformTextureMemory.test_affine_transform_texture_memory[_param_266_{mode='nearest', order=0, output='empty', output_shape=None, shape=(10, 10, 10), theta=180}] _

self = <<cupyx_tests.scipy_tests.ndimage_tests.test_interpolation.TestAffineTransformTextureMemory object at 0x7fab371a1ca0>  parameter: {'mode': 'nearest', 'order': 0, 'output': 'empty', 'output_shape': None, 'shape': (10, 10, 10), 'theta': 180}>
xp = <module 'cupy' from '/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.hXnTrEAC7u/cupy/cupy/__init__.py'>
scp = <module 'cupyx.scipy' from '/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.hXnTrEAC7u/cupy/cupyx/scipy/__init__.py'>

    @testing.numpy_cupy_allclose(atol=0.1, scipy_name='scp')
    def test_affine_transform_texture_memory(self, xp, scp):
        a = xp.ones(self.shape, dtype=xp.float32)
        center = numpy.divide(numpy.subtract(self.shape, 1), 2)
    
        if len(self.shape) == 2:
            matrix = self._2d_rotation_matrix(self.theta, center)
        elif len(self.shape) == 3:
            matrix = self._3d_rotation_matrix(self.theta, center)
        else:
            return pytest.xfail('Unsupported shape')
    
        if self.output == 'empty':
            output = xp.empty(self.shape, dtype=xp.float32)
            if self.output_shape:
                return pytest.skip('This combination is tested in '
                                   'test_invalid_texture_arguments')
        else:
            output = self.output
    
        if self.output_shape:
            output_shape = (self.output_shape, ) * len(self.shape)
        else:
            output_shape = self.output_shape
    
        if xp == cupy:
            m = cupyx.scipy.ndimage.affine_transform
            matrix = cupy.array(matrix)
>           return m(a, matrix, output_shape=output_shape,
                     output=output, order=self.order,
                     mode=self.mode, texture_memory=True)

tests/cupyx_tests/scipy_tests/ndimage_tests/test_interpolation.py:398: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
cupyx/scipy/ndimage/interpolation.py:376: in affine_transform
    return _texture.affine_transformation(data=input,
cupyx/_texture.py:168: in affine_transformation
    texture_object = _create_texture_object(data,
cupyx/_texture.py:98: in _create_texture_object
    array = texture.CUDAarray(texture_fmt, *data.shape[::-1])
cupy/cuda/texture.pyx:296: in cupy.cuda.texture.CUDAarray.__init__
    self.ptr = runtime.malloc3DArray(desc.ptr, width, height, depth,
cupy_backends/cuda/api/runtime.pyx:593: in cupy_backends.cuda.api.runtime.malloc3DArray
    check_status(status)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

>   raise CUDARuntimeError(status)
E   AssertionError: Only cupy raises error
E   
E   Traceback (most recent call last):
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.hXnTrEAC7u/cupy/cupy/testing/_helper.py", line 47, in _call_func
E       result = impl(self, *args, **kw)
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.hXnTrEAC7u/cupy/tests/cupyx_tests/scipy_tests/ndimage_tests/test_interpolation.py", line 398, in test_affine_transform_texture_memory
E       return m(a, matrix, output_shape=output_shape,
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.hXnTrEAC7u/cupy/cupyx/scipy/ndimage/interpolation.py", line 376, in affine_transform
E       return _texture.affine_transformation(data=input,
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.hXnTrEAC7u/cupy/cupyx/_texture.py", line 168, in affine_transformation
E       texture_object = _create_texture_object(data,
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.hXnTrEAC7u/cupy/cupyx/_texture.py", line 98, in _create_texture_object
E       array = texture.CUDAarray(texture_fmt, *data.shape[::-1])
E     File "cupy/cuda/texture.pyx", line 296, in cupy.cuda.texture.CUDAarray.__init__
E       self.ptr = runtime.malloc3DArray(desc.ptr, width, height, depth,
E     File "cupy_backends/cuda/api/runtime.pyx", line 593, in cupy_backends.cuda.api.runtime.malloc3DArray
E       check_status(status)
E     File "cupy_backends/cuda/api/runtime.pyx", line 265, in cupy_backends.cuda.api.runtime.check_status
E       raise CUDARuntimeError(status)
E   cupy_backends.cuda.api.runtime.CUDARuntimeError: hipErrorUnknown: hipErrorUnknown

cupy_backends/cuda/api/runtime.pyx:265: AssertionError
----------------------------- Captured stderr call -----------------------------
Traceback (most recent call last):
  File "cupy_backends/cuda/api/runtime.pyx", line 644, in cupy_backends.cuda.api.runtime.freeArray
    check_status(status)
  File "cupy_backends/cuda/api/runtime.pyx", line 265, in cupy_backends.cuda.api.runtime.check_status
    raise CUDARuntimeError(status)
cupy_backends.cuda.api.runtime.CUDARuntimeError: hipErrorUnknown: hipErrorUnknown
_ TestAffineTransformTextureMemory.test_affine_transform_texture_memory[_param_267_{mode='nearest', order=0, output='empty', output_shape=None, shape=(10, 10, 10), theta=270}] _

self = <<cupyx_tests.scipy_tests.ndimage_tests.test_interpolation.TestAffineTransformTextureMemory object at 0x7fab39e60220>  parameter: {'mode': 'nearest', 'order': 0, 'output': 'empty', 'output_shape': None, 'shape': (10, 10, 10), 'theta': 270}>
xp = <module 'cupy' from '/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.hXnTrEAC7u/cupy/cupy/__init__.py'>
scp = <module 'cupyx.scipy' from '/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.hXnTrEAC7u/cupy/cupyx/scipy/__init__.py'>

    @testing.numpy_cupy_allclose(atol=0.1, scipy_name='scp')
    def test_affine_transform_texture_memory(self, xp, scp):
        a = xp.ones(self.shape, dtype=xp.float32)
        center = numpy.divide(numpy.subtract(self.shape, 1), 2)
    
        if len(self.shape) == 2:
            matrix = self._2d_rotation_matrix(self.theta, center)
        elif len(self.shape) == 3:
            matrix = self._3d_rotation_matrix(self.theta, center)
        else:
            return pytest.xfail('Unsupported shape')
    
        if self.output == 'empty':
            output = xp.empty(self.shape, dtype=xp.float32)
            if self.output_shape:
                return pytest.skip('This combination is tested in '
                                   'test_invalid_texture_arguments')
        else:
            output = self.output
    
        if self.output_shape:
            output_shape = (self.output_shape, ) * len(self.shape)
        else:
            output_shape = self.output_shape
    
        if xp == cupy:
            m = cupyx.scipy.ndimage.affine_transform
            matrix = cupy.array(matrix)
>           return m(a, matrix, output_shape=output_shape,
                     output=output, order=self.order,
                     mode=self.mode, texture_memory=True)

tests/cupyx_tests/scipy_tests/ndimage_tests/test_interpolation.py:398: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
cupyx/scipy/ndimage/interpolation.py:376: in affine_transform
    return _texture.affine_transformation(data=input,
cupyx/_texture.py:168: in affine_transformation
    texture_object = _create_texture_object(data,
cupyx/_texture.py:98: in _create_texture_object
    array = texture.CUDAarray(texture_fmt, *data.shape[::-1])
cupy/cuda/texture.pyx:296: in cupy.cuda.texture.CUDAarray.__init__
    self.ptr = runtime.malloc3DArray(desc.ptr, width, height, depth,
cupy_backends/cuda/api/runtime.pyx:593: in cupy_backends.cuda.api.runtime.malloc3DArray
    check_status(status)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

>   raise CUDARuntimeError(status)
E   AssertionError: Only cupy raises error
E   
E   Traceback (most recent call last):
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.hXnTrEAC7u/cupy/cupy/testing/_helper.py", line 47, in _call_func
E       result = impl(self, *args, **kw)
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.hXnTrEAC7u/cupy/tests/cupyx_tests/scipy_tests/ndimage_tests/test_interpolation.py", line 398, in test_affine_transform_texture_memory
E       return m(a, matrix, output_shape=output_shape,
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.hXnTrEAC7u/cupy/cupyx/scipy/ndimage/interpolation.py", line 376, in affine_transform
E       return _texture.affine_transformation(data=input,
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.hXnTrEAC7u/cupy/cupyx/_texture.py", line 168, in affine_transformation
E       texture_object = _create_texture_object(data,
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.hXnTrEAC7u/cupy/cupyx/_texture.py", line 98, in _create_texture_object
E       array = texture.CUDAarray(texture_fmt, *data.shape[::-1])
E     File "cupy/cuda/texture.pyx", line 296, in cupy.cuda.texture.CUDAarray.__init__
E       self.ptr = runtime.malloc3DArray(desc.ptr, width, height, depth,
E     File "cupy_backends/cuda/api/runtime.pyx", line 593, in cupy_backends.cuda.api.runtime.malloc3DArray
E       check_status(status)
E     File "cupy_backends/cuda/api/runtime.pyx", line 265, in cupy_backends.cuda.api.runtime.check_status
E       raise CUDARuntimeError(status)
E   cupy_backends.cuda.api.runtime.CUDARuntimeError: hipErrorUnknown: hipErrorUnknown

cupy_backends/cuda/api/runtime.pyx:265: AssertionError
----------------------------- Captured stderr call -----------------------------
Traceback (most recent call last):
  File "cupy_backends/cuda/api/runtime.pyx", line 644, in cupy_backends.cuda.api.runtime.freeArray
    check_status(status)
  File "cupy_backends/cuda/api/runtime.pyx", line 265, in cupy_backends.cuda.api.runtime.check_status
    raise CUDARuntimeError(status)
cupy_backends.cuda.api.runtime.CUDARuntimeError: hipErrorUnknown: hipErrorUnknown
_ TestAffineTransformTextureMemory.test_affine_transform_texture_memory[_param_268_{mode='nearest', order=0, output='empty', output_shape=None, shape=(10, 20, 30), theta=0}] _

self = <<cupyx_tests.scipy_tests.ndimage_tests.test_interpolation.TestAffineTransformTextureMemory object at 0x7fab38ebe340>  parameter: {'mode': 'nearest', 'order': 0, 'output': 'empty', 'output_shape': None, 'shape': (10, 20, 30), 'theta': 0}>
xp = <module 'cupy' from '/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.hXnTrEAC7u/cupy/cupy/__init__.py'>
scp = <module 'cupyx.scipy' from '/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.hXnTrEAC7u/cupy/cupyx/scipy/__init__.py'>

    @testing.numpy_cupy_allclose(atol=0.1, scipy_name='scp')
    def test_affine_transform_texture_memory(self, xp, scp):
        a = xp.ones(self.shape, dtype=xp.float32)
        center = numpy.divide(numpy.subtract(self.shape, 1), 2)
    
        if len(self.shape) == 2:
            matrix = self._2d_rotation_matrix(self.theta, center)
        elif len(self.shape) == 3:
            matrix = self._3d_rotation_matrix(self.theta, center)
        else:
            return pytest.xfail('Unsupported shape')
    
        if self.output == 'empty':
            output = xp.empty(self.shape, dtype=xp.float32)
            if self.output_shape:
                return pytest.skip('This combination is tested in '
                                   'test_invalid_texture_arguments')
        else:
            output = self.output
    
        if self.output_shape:
            output_shape = (self.output_shape, ) * len(self.shape)
        else:
            output_shape = self.output_shape
    
        if xp == cupy:
            m = cupyx.scipy.ndimage.affine_transform
            matrix = cupy.array(matrix)
>           return m(a, matrix, output_shape=output_shape,
                     output=output, order=self.order,
                     mode=self.mode, texture_memory=True)

tests/cupyx_tests/scipy_tests/ndimage_tests/test_interpolation.py:398: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
cupyx/scipy/ndimage/interpolation.py:376: in affine_transform
    return _texture.affine_transformation(data=input,
cupyx/_texture.py:168: in affine_transformation
    texture_object = _create_texture_object(data,
cupyx/_texture.py:98: in _create_texture_object
    array = texture.CUDAarray(texture_fmt, *data.shape[::-1])
cupy/cuda/texture.pyx:296: in cupy.cuda.texture.CUDAarray.__init__
    self.ptr = runtime.malloc3DArray(desc.ptr, width, height, depth,
cupy_backends/cuda/api/runtime.pyx:593: in cupy_backends.cuda.api.runtime.malloc3DArray
    check_status(status)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

>   raise CUDARuntimeError(status)
E   AssertionError: Only cupy raises error
E   
E   Traceback (most recent call last):
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.hXnTrEAC7u/cupy/cupy/testing/_helper.py", line 47, in _call_func
E       result = impl(self, *args, **kw)
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.hXnTrEAC7u/cupy/tests/cupyx_tests/scipy_tests/ndimage_tests/test_interpolation.py", line 398, in test_affine_transform_texture_memory
E       return m(a, matrix, output_shape=output_shape,
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.hXnTrEAC7u/cupy/cupyx/scipy/ndimage/interpolation.py", line 376, in affine_transform
E       return _texture.affine_transformation(data=input,
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.hXnTrEAC7u/cupy/cupyx/_texture.py", line 168, in affine_transformation
E       texture_object = _create_texture_object(data,
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.hXnTrEAC7u/cupy/cupyx/_texture.py", line 98, in _create_texture_object
E       array = texture.CUDAarray(texture_fmt, *data.shape[::-1])
E     File "cupy/cuda/texture.pyx", line 296, in cupy.cuda.texture.CUDAarray.__init__
E       self.ptr = runtime.malloc3DArray(desc.ptr, width, height, depth,
E     File "cupy_backends/cuda/api/runtime.pyx", line 593, in cupy_backends.cuda.api.runtime.malloc3DArray
E       check_status(status)
E     File "cupy_backends/cuda/api/runtime.pyx", line 265, in cupy_backends.cuda.api.runtime.check_status
E       raise CUDARuntimeError(status)
E   cupy_backends.cuda.api.runtime.CUDARuntimeError: hipErrorUnknown: hipErrorUnknown

cupy_backends/cuda/api/runtime.pyx:265: AssertionError
----------------------------- Captured stderr call -----------------------------
Traceback (most recent call last):
  File "cupy_backends/cuda/api/runtime.pyx", line 644, in cupy_backends.cuda.api.runtime.freeArray
    check_status(status)
  File "cupy_backends/cuda/api/runtime.pyx", line 265, in cupy_backends.cuda.api.runtime.check_status
    raise CUDARuntimeError(status)
cupy_backends.cuda.api.runtime.CUDARuntimeError: hipErrorUnknown: hipErrorUnknown
_ TestAffineTransformTextureMemory.test_affine_transform_texture_memory[_param_269_{mode='nearest', order=0, output='empty', output_shape=None, shape=(10, 20, 30), theta=90}] _

self = <<cupyx_tests.scipy_tests.ndimage_tests.test_interpolation.TestAffineTransformTextureMemory object at 0x7fab36da98e0>  parameter: {'mode': 'nearest', 'order': 0, 'output': 'empty', 'output_shape': None, 'shape': (10, 20, 30), 'theta': 90}>
xp = <module 'cupy' from '/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.hXnTrEAC7u/cupy/cupy/__init__.py'>
scp = <module 'cupyx.scipy' from '/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.hXnTrEAC7u/cupy/cupyx/scipy/__init__.py'>

    @testing.numpy_cupy_allclose(atol=0.1, scipy_name='scp')
    def test_affine_transform_texture_memory(self, xp, scp):
        a = xp.ones(self.shape, dtype=xp.float32)
        center = numpy.divide(numpy.subtract(self.shape, 1), 2)
    
        if len(self.shape) == 2:
            matrix = self._2d_rotation_matrix(self.theta, center)
        elif len(self.shape) == 3:
            matrix = self._3d_rotation_matrix(self.theta, center)
        else:
            return pytest.xfail('Unsupported shape')
    
        if self.output == 'empty':
            output = xp.empty(self.shape, dtype=xp.float32)
            if self.output_shape:
                return pytest.skip('This combination is tested in '
                                   'test_invalid_texture_arguments')
        else:
            output = self.output
    
        if self.output_shape:
            output_shape = (self.output_shape, ) * len(self.shape)
        else:
            output_shape = self.output_shape
    
        if xp == cupy:
            m = cupyx.scipy.ndimage.affine_transform
            matrix = cupy.array(matrix)
>           return m(a, matrix, output_shape=output_shape,
                     output=output, order=self.order,
                     mode=self.mode, texture_memory=True)

tests/cupyx_tests/scipy_tests/ndimage_tests/test_interpolation.py:398: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
cupyx/scipy/ndimage/interpolation.py:376: in affine_transform
    return _texture.affine_transformation(data=input,
cupyx/_texture.py:168: in affine_transformation
    texture_object = _create_texture_object(data,
cupyx/_texture.py:98: in _create_texture_object
    array = texture.CUDAarray(texture_fmt, *data.shape[::-1])
cupy/cuda/texture.pyx:296: in cupy.cuda.texture.CUDAarray.__init__
    self.ptr = runtime.malloc3DArray(desc.ptr, width, height, depth,
cupy_backends/cuda/api/runtime.pyx:593: in cupy_backends.cuda.api.runtime.malloc3DArray
    check_status(status)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

>   raise CUDARuntimeError(status)
E   AssertionError: Only cupy raises error
E   
E   Traceback (most recent call last):
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.hXnTrEAC7u/cupy/cupy/testing/_helper.py", line 47, in _call_func
E       result = impl(self, *args, **kw)
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.hXnTrEAC7u/cupy/tests/cupyx_tests/scipy_tests/ndimage_tests/test_interpolation.py", line 398, in test_affine_transform_texture_memory
E       return m(a, matrix, output_shape=output_shape,
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.hXnTrEAC7u/cupy/cupyx/scipy/ndimage/interpolation.py", line 376, in affine_transform
E       return _texture.affine_transformation(data=input,
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.hXnTrEAC7u/cupy/cupyx/_texture.py", line 168, in affine_transformation
E       texture_object = _create_texture_object(data,
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.hXnTrEAC7u/cupy/cupyx/_texture.py", line 98, in _create_texture_object
E       array = texture.CUDAarray(texture_fmt, *data.shape[::-1])
E     File "cupy/cuda/texture.pyx", line 296, in cupy.cuda.texture.CUDAarray.__init__
E       self.ptr = runtime.malloc3DArray(desc.ptr, width, height, depth,
E     File "cupy_backends/cuda/api/runtime.pyx", line 593, in cupy_backends.cuda.api.runtime.malloc3DArray
E       check_status(status)
E     File "cupy_backends/cuda/api/runtime.pyx", line 265, in cupy_backends.cuda.api.runtime.check_status
E       raise CUDARuntimeError(status)
E   cupy_backends.cuda.api.runtime.CUDARuntimeError: hipErrorUnknown: hipErrorUnknown

cupy_backends/cuda/api/runtime.pyx:265: AssertionError
----------------------------- Captured stderr call -----------------------------
Traceback (most recent call last):
  File "cupy_backends/cuda/api/runtime.pyx", line 644, in cupy_backends.cuda.api.runtime.freeArray
    check_status(status)
  File "cupy_backends/cuda/api/runtime.pyx", line 265, in cupy_backends.cuda.api.runtime.check_status
    raise CUDARuntimeError(status)
cupy_backends.cuda.api.runtime.CUDARuntimeError: hipErrorUnknown: hipErrorUnknown
_ TestAffineTransformTextureMemory.test_affine_transform_texture_memory[_param_270_{mode='nearest', order=0, output='empty', output_shape=None, shape=(10, 20, 30), theta=180}] _

self = <<cupyx_tests.scipy_tests.ndimage_tests.test_interpolation.TestAffineTransformTextureMemory object at 0x7fab370a12e0>  parameter: {'mode': 'nearest', 'order': 0, 'output': 'empty', 'output_shape': None, 'shape': (10, 20, 30), 'theta': 180}>
xp = <module 'cupy' from '/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.hXnTrEAC7u/cupy/cupy/__init__.py'>
scp = <module 'cupyx.scipy' from '/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.hXnTrEAC7u/cupy/cupyx/scipy/__init__.py'>

    @testing.numpy_cupy_allclose(atol=0.1, scipy_name='scp')
    def test_affine_transform_texture_memory(self, xp, scp):
        a = xp.ones(self.shape, dtype=xp.float32)
        center = numpy.divide(numpy.subtract(self.shape, 1), 2)
    
        if len(self.shape) == 2:
            matrix = self._2d_rotation_matrix(self.theta, center)
        elif len(self.shape) == 3:
            matrix = self._3d_rotation_matrix(self.theta, center)
        else:
            return pytest.xfail('Unsupported shape')
    
        if self.output == 'empty':
            output = xp.empty(self.shape, dtype=xp.float32)
            if self.output_shape:
                return pytest.skip('This combination is tested in '
                                   'test_invalid_texture_arguments')
        else:
            output = self.output
    
        if self.output_shape:
            output_shape = (self.output_shape, ) * len(self.shape)
        else:
            output_shape = self.output_shape
    
        if xp == cupy:
            m = cupyx.scipy.ndimage.affine_transform
            matrix = cupy.array(matrix)
>           return m(a, matrix, output_shape=output_shape,
                     output=output, order=self.order,
                     mode=self.mode, texture_memory=True)

tests/cupyx_tests/scipy_tests/ndimage_tests/test_interpolation.py:398: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
cupyx/scipy/ndimage/interpolation.py:376: in affine_transform
    return _texture.affine_transformation(data=input,
cupyx/_texture.py:168: in affine_transformation
    texture_object = _create_texture_object(data,
cupyx/_texture.py:98: in _create_texture_object
    array = texture.CUDAarray(texture_fmt, *data.shape[::-1])
cupy/cuda/texture.pyx:296: in cupy.cuda.texture.CUDAarray.__init__
    self.ptr = runtime.malloc3DArray(desc.ptr, width, height, depth,
cupy_backends/cuda/api/runtime.pyx:593: in cupy_backends.cuda.api.runtime.malloc3DArray
    check_status(status)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

>   raise CUDARuntimeError(status)
E   AssertionError: Only cupy raises error
E   
E   Traceback (most recent call last):
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.hXnTrEAC7u/cupy/cupy/testing/_helper.py", line 47, in _call_func
E       result = impl(self, *args, **kw)
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.hXnTrEAC7u/cupy/tests/cupyx_tests/scipy_tests/ndimage_tests/test_interpolation.py", line 398, in test_affine_transform_texture_memory
E       return m(a, matrix, output_shape=output_shape,
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.hXnTrEAC7u/cupy/cupyx/scipy/ndimage/interpolation.py", line 376, in affine_transform
E       return _texture.affine_transformation(data=input,
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.hXnTrEAC7u/cupy/cupyx/_texture.py", line 168, in affine_transformation
E       texture_object = _create_texture_object(data,
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.hXnTrEAC7u/cupy/cupyx/_texture.py", line 98, in _create_texture_object
E       array = texture.CUDAarray(texture_fmt, *data.shape[::-1])
E     File "cupy/cuda/texture.pyx", line 296, in cupy.cuda.texture.CUDAarray.__init__
E       self.ptr = runtime.malloc3DArray(desc.ptr, width, height, depth,
E     File "cupy_backends/cuda/api/runtime.pyx", line 593, in cupy_backends.cuda.api.runtime.malloc3DArray
E       check_status(status)
E     File "cupy_backends/cuda/api/runtime.pyx", line 265, in cupy_backends.cuda.api.runtime.check_status
E       raise CUDARuntimeError(status)
E   cupy_backends.cuda.api.runtime.CUDARuntimeError: hipErrorUnknown: hipErrorUnknown

cupy_backends/cuda/api/runtime.pyx:265: AssertionError
----------------------------- Captured stderr call -----------------------------
Traceback (most recent call last):
  File "cupy_backends/cuda/api/runtime.pyx", line 644, in cupy_backends.cuda.api.runtime.freeArray
    check_status(status)
  File "cupy_backends/cuda/api/runtime.pyx", line 265, in cupy_backends.cuda.api.runtime.check_status
    raise CUDARuntimeError(status)
cupy_backends.cuda.api.runtime.CUDARuntimeError: hipErrorUnknown: hipErrorUnknown
_ TestAffineTransformTextureMemory.test_affine_transform_texture_memory[_param_271_{mode='nearest', order=0, output='empty', output_shape=None, shape=(10, 20, 30), theta=270}] _

self = <<cupyx_tests.scipy_tests.ndimage_tests.test_interpolation.TestAffineTransformTextureMemory object at 0x7fab391de760>  parameter: {'mode': 'nearest', 'order': 0, 'output': 'empty', 'output_shape': None, 'shape': (10, 20, 30), 'theta': 270}>
xp = <module 'cupy' from '/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.hXnTrEAC7u/cupy/cupy/__init__.py'>
scp = <module 'cupyx.scipy' from '/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.hXnTrEAC7u/cupy/cupyx/scipy/__init__.py'>

    @testing.numpy_cupy_allclose(atol=0.1, scipy_name='scp')
    def test_affine_transform_texture_memory(self, xp, scp):
        a = xp.ones(self.shape, dtype=xp.float32)
        center = numpy.divide(numpy.subtract(self.shape, 1), 2)
    
        if len(self.shape) == 2:
            matrix = self._2d_rotation_matrix(self.theta, center)
        elif len(self.shape) == 3:
            matrix = self._3d_rotation_matrix(self.theta, center)
        else:
            return pytest.xfail('Unsupported shape')
    
        if self.output == 'empty':
            output = xp.empty(self.shape, dtype=xp.float32)
            if self.output_shape:
                return pytest.skip('This combination is tested in '
                                   'test_invalid_texture_arguments')
        else:
            output = self.output
    
        if self.output_shape:
            output_shape = (self.output_shape, ) * len(self.shape)
        else:
            output_shape = self.output_shape
    
        if xp == cupy:
            m = cupyx.scipy.ndimage.affine_transform
            matrix = cupy.array(matrix)
>           return m(a, matrix, output_shape=output_shape,
                     output=output, order=self.order,
                     mode=self.mode, texture_memory=True)

tests/cupyx_tests/scipy_tests/ndimage_tests/test_interpolation.py:398: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
cupyx/scipy/ndimage/interpolation.py:376: in affine_transform
    return _texture.affine_transformation(data=input,
cupyx/_texture.py:168: in affine_transformation
    texture_object = _create_texture_object(data,
cupyx/_texture.py:98: in _create_texture_object
    array = texture.CUDAarray(texture_fmt, *data.shape[::-1])
cupy/cuda/texture.pyx:296: in cupy.cuda.texture.CUDAarray.__init__
    self.ptr = runtime.malloc3DArray(desc.ptr, width, height, depth,
cupy_backends/cuda/api/runtime.pyx:593: in cupy_backends.cuda.api.runtime.malloc3DArray
    check_status(status)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

>   raise CUDARuntimeError(status)
E   AssertionError: Only cupy raises error
E   
E   Traceback (most recent call last):
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.hXnTrEAC7u/cupy/cupy/testing/_helper.py", line 47, in _call_func
E       result = impl(self, *args, **kw)
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.hXnTrEAC7u/cupy/tests/cupyx_tests/scipy_tests/ndimage_tests/test_interpolation.py", line 398, in test_affine_transform_texture_memory
E       return m(a, matrix, output_shape=output_shape,
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.hXnTrEAC7u/cupy/cupyx/scipy/ndimage/interpolation.py", line 376, in affine_transform
E       return _texture.affine_transformation(data=input,
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.hXnTrEAC7u/cupy/cupyx/_texture.py", line 168, in affine_transformation
E       texture_object = _create_texture_object(data,
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.hXnTrEAC7u/cupy/cupyx/_texture.py", line 98, in _create_texture_object
E       array = texture.CUDAarray(texture_fmt, *data.shape[::-1])
E     File "cupy/cuda/texture.pyx", line 296, in cupy.cuda.texture.CUDAarray.__init__
E       self.ptr = runtime.malloc3DArray(desc.ptr, width, height, depth,
E     File "cupy_backends/cuda/api/runtime.pyx", line 593, in cupy_backends.cuda.api.runtime.malloc3DArray
E       check_status(status)
E     File "cupy_backends/cuda/api/runtime.pyx", line 265, in cupy_backends.cuda.api.runtime.check_status
E       raise CUDARuntimeError(status)
E   cupy_backends.cuda.api.runtime.CUDARuntimeError: hipErrorUnknown: hipErrorUnknown

cupy_backends/cuda/api/runtime.pyx:265: AssertionError
----------------------------- Captured stderr call -----------------------------
Traceback (most recent call last):
  File "cupy_backends/cuda/api/runtime.pyx", line 644, in cupy_backends.cuda.api.runtime.freeArray
    check_status(status)
  File "cupy_backends/cuda/api/runtime.pyx", line 265, in cupy_backends.cuda.api.runtime.check_status
    raise CUDARuntimeError(status)
cupy_backends.cuda.api.runtime.CUDARuntimeError: hipErrorUnknown: hipErrorUnknown
_ TestAffineTransformTextureMemory.test_affine_transform_texture_memory[_param_288_{mode='nearest', order=1, output=None, output_shape=None, shape=(100, 100), theta=0}] _

self = <<cupyx_tests.scipy_tests.ndimage_tests.test_interpolation.TestAffineTransformTextureMemory object at 0x7fab37165250>  parameter: {'mode': 'nearest', 'order': 1, 'output': None, 'output_shape': None, 'shape': (100, 100), 'theta': 0}>
xp = <module 'cupy' from '/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.hXnTrEAC7u/cupy/cupy/__init__.py'>
scp = <module 'cupyx.scipy' from '/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.hXnTrEAC7u/cupy/cupyx/scipy/__init__.py'>

    @testing.numpy_cupy_allclose(atol=0.1, scipy_name='scp')
    def test_affine_transform_texture_memory(self, xp, scp):
        a = xp.ones(self.shape, dtype=xp.float32)
        center = numpy.divide(numpy.subtract(self.shape, 1), 2)
    
        if len(self.shape) == 2:
            matrix = self._2d_rotation_matrix(self.theta, center)
        elif len(self.shape) == 3:
            matrix = self._3d_rotation_matrix(self.theta, center)
        else:
            return pytest.xfail('Unsupported shape')
    
        if self.output == 'empty':
            output = xp.empty(self.shape, dtype=xp.float32)
            if self.output_shape:
                return pytest.skip('This combination is tested in '
                                   'test_invalid_texture_arguments')
        else:
            output = self.output
    
        if self.output_shape:
            output_shape = (self.output_shape, ) * len(self.shape)
        else:
            output_shape = self.output_shape
    
        if xp == cupy:
            m = cupyx.scipy.ndimage.affine_transform
            matrix = cupy.array(matrix)
>           return m(a, matrix, output_shape=output_shape,
                     output=output, order=self.order,
                     mode=self.mode, texture_memory=True)

tests/cupyx_tests/scipy_tests/ndimage_tests/test_interpolation.py:398: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
cupyx/scipy/ndimage/interpolation.py:376: in affine_transform
    return _texture.affine_transformation(data=input,
cupyx/_texture.py:168: in affine_transformation
    texture_object = _create_texture_object(data,
cupyx/_texture.py:98: in _create_texture_object
    array = texture.CUDAarray(texture_fmt, *data.shape[::-1])
cupy/cuda/texture.pyx:296: in cupy.cuda.texture.CUDAarray.__init__
    self.ptr = runtime.malloc3DArray(desc.ptr, width, height, depth,
cupy_backends/cuda/api/runtime.pyx:593: in cupy_backends.cuda.api.runtime.malloc3DArray
    check_status(status)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

>   raise CUDARuntimeError(status)
E   AssertionError: Only cupy raises error
E   
E   Traceback (most recent call last):
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.hXnTrEAC7u/cupy/cupy/testing/_helper.py", line 47, in _call_func
E       result = impl(self, *args, **kw)
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.hXnTrEAC7u/cupy/tests/cupyx_tests/scipy_tests/ndimage_tests/test_interpolation.py", line 398, in test_affine_transform_texture_memory
E       return m(a, matrix, output_shape=output_shape,
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.hXnTrEAC7u/cupy/cupyx/scipy/ndimage/interpolation.py", line 376, in affine_transform
E       return _texture.affine_transformation(data=input,
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.hXnTrEAC7u/cupy/cupyx/_texture.py", line 168, in affine_transformation
E       texture_object = _create_texture_object(data,
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.hXnTrEAC7u/cupy/cupyx/_texture.py", line 98, in _create_texture_object
E       array = texture.CUDAarray(texture_fmt, *data.shape[::-1])
E     File "cupy/cuda/texture.pyx", line 296, in cupy.cuda.texture.CUDAarray.__init__
E       self.ptr = runtime.malloc3DArray(desc.ptr, width, height, depth,
E     File "cupy_backends/cuda/api/runtime.pyx", line 593, in cupy_backends.cuda.api.runtime.malloc3DArray
E       check_status(status)
E     File "cupy_backends/cuda/api/runtime.pyx", line 265, in cupy_backends.cuda.api.runtime.check_status
E       raise CUDARuntimeError(status)
E   cupy_backends.cuda.api.runtime.CUDARuntimeError: hipErrorUnknown: hipErrorUnknown

cupy_backends/cuda/api/runtime.pyx:265: AssertionError
----------------------------- Captured stderr call -----------------------------
Traceback (most recent call last):
  File "cupy_backends/cuda/api/runtime.pyx", line 644, in cupy_backends.cuda.api.runtime.freeArray
    check_status(status)
  File "cupy_backends/cuda/api/runtime.pyx", line 265, in cupy_backends.cuda.api.runtime.check_status
    raise CUDARuntimeError(status)
cupy_backends.cuda.api.runtime.CUDARuntimeError: hipErrorUnknown: hipErrorUnknown
_ TestAffineTransformTextureMemory.test_affine_transform_texture_memory[_param_289_{mode='nearest', order=1, output=None, output_shape=None, shape=(100, 100), theta=90}] _

self = <<cupyx_tests.scipy_tests.ndimage_tests.test_interpolation.TestAffineTransformTextureMemory object at 0x7fab37007d90>  parameter: {'mode': 'nearest', 'order': 1, 'output': None, 'output_shape': None, 'shape': (100, 100), 'theta': 90}>
xp = <module 'cupy' from '/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.hXnTrEAC7u/cupy/cupy/__init__.py'>
scp = <module 'cupyx.scipy' from '/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.hXnTrEAC7u/cupy/cupyx/scipy/__init__.py'>

    @testing.numpy_cupy_allclose(atol=0.1, scipy_name='scp')
    def test_affine_transform_texture_memory(self, xp, scp):
        a = xp.ones(self.shape, dtype=xp.float32)
        center = numpy.divide(numpy.subtract(self.shape, 1), 2)
    
        if len(self.shape) == 2:
            matrix = self._2d_rotation_matrix(self.theta, center)
        elif len(self.shape) == 3:
            matrix = self._3d_rotation_matrix(self.theta, center)
        else:
            return pytest.xfail('Unsupported shape')
    
        if self.output == 'empty':
            output = xp.empty(self.shape, dtype=xp.float32)
            if self.output_shape:
                return pytest.skip('This combination is tested in '
                                   'test_invalid_texture_arguments')
        else:
            output = self.output
    
        if self.output_shape:
            output_shape = (self.output_shape, ) * len(self.shape)
        else:
            output_shape = self.output_shape
    
        if xp == cupy:
            m = cupyx.scipy.ndimage.affine_transform
            matrix = cupy.array(matrix)
>           return m(a, matrix, output_shape=output_shape,
                     output=output, order=self.order,
                     mode=self.mode, texture_memory=True)

tests/cupyx_tests/scipy_tests/ndimage_tests/test_interpolation.py:398: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
cupyx/scipy/ndimage/interpolation.py:376: in affine_transform
    return _texture.affine_transformation(data=input,
cupyx/_texture.py:168: in affine_transformation
    texture_object = _create_texture_object(data,
cupyx/_texture.py:98: in _create_texture_object
    array = texture.CUDAarray(texture_fmt, *data.shape[::-1])
cupy/cuda/texture.pyx:296: in cupy.cuda.texture.CUDAarray.__init__
    self.ptr = runtime.malloc3DArray(desc.ptr, width, height, depth,
cupy_backends/cuda/api/runtime.pyx:593: in cupy_backends.cuda.api.runtime.malloc3DArray
    check_status(status)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

>   raise CUDARuntimeError(status)
E   AssertionError: Only cupy raises error
E   
E   Traceback (most recent call last):
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.hXnTrEAC7u/cupy/cupy/testing/_helper.py", line 47, in _call_func
E       result = impl(self, *args, **kw)
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.hXnTrEAC7u/cupy/tests/cupyx_tests/scipy_tests/ndimage_tests/test_interpolation.py", line 398, in test_affine_transform_texture_memory
E       return m(a, matrix, output_shape=output_shape,
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.hXnTrEAC7u/cupy/cupyx/scipy/ndimage/interpolation.py", line 376, in affine_transform
E       return _texture.affine_transformation(data=input,
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.hXnTrEAC7u/cupy/cupyx/_texture.py", line 168, in affine_transformation
E       texture_object = _create_texture_object(data,
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.hXnTrEAC7u/cupy/cupyx/_texture.py", line 98, in _create_texture_object
E       array = texture.CUDAarray(texture_fmt, *data.shape[::-1])
E     File "cupy/cuda/texture.pyx", line 296, in cupy.cuda.texture.CUDAarray.__init__
E       self.ptr = runtime.malloc3DArray(desc.ptr, width, height, depth,
E     File "cupy_backends/cuda/api/runtime.pyx", line 593, in cupy_backends.cuda.api.runtime.malloc3DArray
E       check_status(status)
E     File "cupy_backends/cuda/api/runtime.pyx", line 265, in cupy_backends.cuda.api.runtime.check_status
E       raise CUDARuntimeError(status)
E   cupy_backends.cuda.api.runtime.CUDARuntimeError: hipErrorUnknown: hipErrorUnknown

cupy_backends/cuda/api/runtime.pyx:265: AssertionError
----------------------------- Captured stderr call -----------------------------
Traceback (most recent call last):
  File "cupy_backends/cuda/api/runtime.pyx", line 644, in cupy_backends.cuda.api.runtime.freeArray
    check_status(status)
  File "cupy_backends/cuda/api/runtime.pyx", line 265, in cupy_backends.cuda.api.runtime.check_status
    raise CUDARuntimeError(status)
cupy_backends.cuda.api.runtime.CUDARuntimeError: hipErrorUnknown: hipErrorUnknown
_ TestAffineTransformTextureMemory.test_affine_transform_texture_memory[_param_290_{mode='nearest', order=1, output=None, output_shape=None, shape=(100, 100), theta=180}] _

self = <<cupyx_tests.scipy_tests.ndimage_tests.test_interpolation.TestAffineTransformTextureMemory object at 0x7fab36f9ea60>  parameter: {'mode': 'nearest', 'order': 1, 'output': None, 'output_shape': None, 'shape': (100, 100), 'theta': 180}>
xp = <module 'cupy' from '/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.hXnTrEAC7u/cupy/cupy/__init__.py'>
scp = <module 'cupyx.scipy' from '/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.hXnTrEAC7u/cupy/cupyx/scipy/__init__.py'>

    @testing.numpy_cupy_allclose(atol=0.1, scipy_name='scp')
    def test_affine_transform_texture_memory(self, xp, scp):
        a = xp.ones(self.shape, dtype=xp.float32)
        center = numpy.divide(numpy.subtract(self.shape, 1), 2)
    
        if len(self.shape) == 2:
            matrix = self._2d_rotation_matrix(self.theta, center)
        elif len(self.shape) == 3:
            matrix = self._3d_rotation_matrix(self.theta, center)
        else:
            return pytest.xfail('Unsupported shape')
    
        if self.output == 'empty':
            output = xp.empty(self.shape, dtype=xp.float32)
            if self.output_shape:
                return pytest.skip('This combination is tested in '
                                   'test_invalid_texture_arguments')
        else:
            output = self.output
    
        if self.output_shape:
            output_shape = (self.output_shape, ) * len(self.shape)
        else:
            output_shape = self.output_shape
    
        if xp == cupy:
            m = cupyx.scipy.ndimage.affine_transform
            matrix = cupy.array(matrix)
>           return m(a, matrix, output_shape=output_shape,
                     output=output, order=self.order,
                     mode=self.mode, texture_memory=True)

tests/cupyx_tests/scipy_tests/ndimage_tests/test_interpolation.py:398: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
cupyx/scipy/ndimage/interpolation.py:376: in affine_transform
    return _texture.affine_transformation(data=input,
cupyx/_texture.py:168: in affine_transformation
    texture_object = _create_texture_object(data,
cupyx/_texture.py:98: in _create_texture_object
    array = texture.CUDAarray(texture_fmt, *data.shape[::-1])
cupy/cuda/texture.pyx:296: in cupy.cuda.texture.CUDAarray.__init__
    self.ptr = runtime.malloc3DArray(desc.ptr, width, height, depth,
cupy_backends/cuda/api/runtime.pyx:593: in cupy_backends.cuda.api.runtime.malloc3DArray
    check_status(status)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

>   raise CUDARuntimeError(status)
E   AssertionError: Only cupy raises error
E   
E   Traceback (most recent call last):
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.hXnTrEAC7u/cupy/cupy/testing/_helper.py", line 47, in _call_func
E       result = impl(self, *args, **kw)
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.hXnTrEAC7u/cupy/tests/cupyx_tests/scipy_tests/ndimage_tests/test_interpolation.py", line 398, in test_affine_transform_texture_memory
E       return m(a, matrix, output_shape=output_shape,
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.hXnTrEAC7u/cupy/cupyx/scipy/ndimage/interpolation.py", line 376, in affine_transform
E       return _texture.affine_transformation(data=input,
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.hXnTrEAC7u/cupy/cupyx/_texture.py", line 168, in affine_transformation
E       texture_object = _create_texture_object(data,
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.hXnTrEAC7u/cupy/cupyx/_texture.py", line 98, in _create_texture_object
E       array = texture.CUDAarray(texture_fmt, *data.shape[::-1])
E     File "cupy/cuda/texture.pyx", line 296, in cupy.cuda.texture.CUDAarray.__init__
E       self.ptr = runtime.malloc3DArray(desc.ptr, width, height, depth,
E     File "cupy_backends/cuda/api/runtime.pyx", line 593, in cupy_backends.cuda.api.runtime.malloc3DArray
E       check_status(status)
E     File "cupy_backends/cuda/api/runtime.pyx", line 265, in cupy_backends.cuda.api.runtime.check_status
E       raise CUDARuntimeError(status)
E   cupy_backends.cuda.api.runtime.CUDARuntimeError: hipErrorUnknown: hipErrorUnknown

cupy_backends/cuda/api/runtime.pyx:265: AssertionError
----------------------------- Captured stderr call -----------------------------
Traceback (most recent call last):
  File "cupy_backends/cuda/api/runtime.pyx", line 644, in cupy_backends.cuda.api.runtime.freeArray
    check_status(status)
  File "cupy_backends/cuda/api/runtime.pyx", line 265, in cupy_backends.cuda.api.runtime.check_status
    raise CUDARuntimeError(status)
cupy_backends.cuda.api.runtime.CUDARuntimeError: hipErrorUnknown: hipErrorUnknown
_ TestAffineTransformTextureMemory.test_affine_transform_texture_memory[_param_291_{mode='nearest', order=1, output=None, output_shape=None, shape=(100, 100), theta=270}] _

self = <<cupyx_tests.scipy_tests.ndimage_tests.test_interpolation.TestAffineTransformTextureMemory object at 0x7fab372a4d60>  parameter: {'mode': 'nearest', 'order': 1, 'output': None, 'output_shape': None, 'shape': (100, 100), 'theta': 270}>
xp = <module 'cupy' from '/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.hXnTrEAC7u/cupy/cupy/__init__.py'>
scp = <module 'cupyx.scipy' from '/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.hXnTrEAC7u/cupy/cupyx/scipy/__init__.py'>

    @testing.numpy_cupy_allclose(atol=0.1, scipy_name='scp')
    def test_affine_transform_texture_memory(self, xp, scp):
        a = xp.ones(self.shape, dtype=xp.float32)
        center = numpy.divide(numpy.subtract(self.shape, 1), 2)
    
        if len(self.shape) == 2:
            matrix = self._2d_rotation_matrix(self.theta, center)
        elif len(self.shape) == 3:
            matrix = self._3d_rotation_matrix(self.theta, center)
        else:
            return pytest.xfail('Unsupported shape')
    
        if self.output == 'empty':
            output = xp.empty(self.shape, dtype=xp.float32)
            if self.output_shape:
                return pytest.skip('This combination is tested in '
                                   'test_invalid_texture_arguments')
        else:
            output = self.output
    
        if self.output_shape:
            output_shape = (self.output_shape, ) * len(self.shape)
        else:
            output_shape = self.output_shape
    
        if xp == cupy:
            m = cupyx.scipy.ndimage.affine_transform
            matrix = cupy.array(matrix)
>           return m(a, matrix, output_shape=output_shape,
                     output=output, order=self.order,
                     mode=self.mode, texture_memory=True)

tests/cupyx_tests/scipy_tests/ndimage_tests/test_interpolation.py:398: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
cupyx/scipy/ndimage/interpolation.py:376: in affine_transform
    return _texture.affine_transformation(data=input,
cupyx/_texture.py:168: in affine_transformation
    texture_object = _create_texture_object(data,
cupyx/_texture.py:98: in _create_texture_object
    array = texture.CUDAarray(texture_fmt, *data.shape[::-1])
cupy/cuda/texture.pyx:296: in cupy.cuda.texture.CUDAarray.__init__
    self.ptr = runtime.malloc3DArray(desc.ptr, width, height, depth,
cupy_backends/cuda/api/runtime.pyx:593: in cupy_backends.cuda.api.runtime.malloc3DArray
    check_status(status)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

>   raise CUDARuntimeError(status)
E   AssertionError: Only cupy raises error
E   
E   Traceback (most recent call last):
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.hXnTrEAC7u/cupy/cupy/testing/_helper.py", line 47, in _call_func
E       result = impl(self, *args, **kw)
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.hXnTrEAC7u/cupy/tests/cupyx_tests/scipy_tests/ndimage_tests/test_interpolation.py", line 398, in test_affine_transform_texture_memory
E       return m(a, matrix, output_shape=output_shape,
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.hXnTrEAC7u/cupy/cupyx/scipy/ndimage/interpolation.py", line 376, in affine_transform
E       return _texture.affine_transformation(data=input,
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.hXnTrEAC7u/cupy/cupyx/_texture.py", line 168, in affine_transformation
E       texture_object = _create_texture_object(data,
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.hXnTrEAC7u/cupy/cupyx/_texture.py", line 98, in _create_texture_object
E       array = texture.CUDAarray(texture_fmt, *data.shape[::-1])
E     File "cupy/cuda/texture.pyx", line 296, in cupy.cuda.texture.CUDAarray.__init__
E       self.ptr = runtime.malloc3DArray(desc.ptr, width, height, depth,
E     File "cupy_backends/cuda/api/runtime.pyx", line 593, in cupy_backends.cuda.api.runtime.malloc3DArray
E       check_status(status)
E     File "cupy_backends/cuda/api/runtime.pyx", line 265, in cupy_backends.cuda.api.runtime.check_status
E       raise CUDARuntimeError(status)
E   cupy_backends.cuda.api.runtime.CUDARuntimeError: hipErrorUnknown: hipErrorUnknown

cupy_backends/cuda/api/runtime.pyx:265: AssertionError
----------------------------- Captured stderr call -----------------------------
Traceback (most recent call last):
  File "cupy_backends/cuda/api/runtime.pyx", line 644, in cupy_backends.cuda.api.runtime.freeArray
    check_status(status)
  File "cupy_backends/cuda/api/runtime.pyx", line 265, in cupy_backends.cuda.api.runtime.check_status
    raise CUDARuntimeError(status)
cupy_backends.cuda.api.runtime.CUDARuntimeError: hipErrorUnknown: hipErrorUnknown
_ TestAffineTransformTextureMemory.test_affine_transform_texture_memory[_param_292_{mode='nearest', order=1, output=None, output_shape=None, shape=(10, 20), theta=0}] _

self = <<cupyx_tests.scipy_tests.ndimage_tests.test_interpolation.TestAffineTransformTextureMemory object at 0x7fab38e85d30>  parameter: {'mode': 'nearest', 'order': 1, 'output': None, 'output_shape': None, 'shape': (10, 20), 'theta': 0}>
xp = <module 'cupy' from '/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.hXnTrEAC7u/cupy/cupy/__init__.py'>
scp = <module 'cupyx.scipy' from '/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.hXnTrEAC7u/cupy/cupyx/scipy/__init__.py'>

    @testing.numpy_cupy_allclose(atol=0.1, scipy_name='scp')
    def test_affine_transform_texture_memory(self, xp, scp):
        a = xp.ones(self.shape, dtype=xp.float32)
        center = numpy.divide(numpy.subtract(self.shape, 1), 2)
    
        if len(self.shape) == 2:
            matrix = self._2d_rotation_matrix(self.theta, center)
        elif len(self.shape) == 3:
            matrix = self._3d_rotation_matrix(self.theta, center)
        else:
            return pytest.xfail('Unsupported shape')
    
        if self.output == 'empty':
            output = xp.empty(self.shape, dtype=xp.float32)
            if self.output_shape:
                return pytest.skip('This combination is tested in '
                                   'test_invalid_texture_arguments')
        else:
            output = self.output
    
        if self.output_shape:
            output_shape = (self.output_shape, ) * len(self.shape)
        else:
            output_shape = self.output_shape
    
        if xp == cupy:
            m = cupyx.scipy.ndimage.affine_transform
            matrix = cupy.array(matrix)
>           return m(a, matrix, output_shape=output_shape,
                     output=output, order=self.order,
                     mode=self.mode, texture_memory=True)

tests/cupyx_tests/scipy_tests/ndimage_tests/test_interpolation.py:398: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
cupyx/scipy/ndimage/interpolation.py:376: in affine_transform
    return _texture.affine_transformation(data=input,
cupyx/_texture.py:168: in affine_transformation
    texture_object = _create_texture_object(data,
cupyx/_texture.py:98: in _create_texture_object
    array = texture.CUDAarray(texture_fmt, *data.shape[::-1])
cupy/cuda/texture.pyx:296: in cupy.cuda.texture.CUDAarray.__init__
    self.ptr = runtime.malloc3DArray(desc.ptr, width, height, depth,
cupy_backends/cuda/api/runtime.pyx:593: in cupy_backends.cuda.api.runtime.malloc3DArray
    check_status(status)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

>   raise CUDARuntimeError(status)
E   AssertionError: Only cupy raises error
E   
E   Traceback (most recent call last):
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.hXnTrEAC7u/cupy/cupy/testing/_helper.py", line 47, in _call_func
E       result = impl(self, *args, **kw)
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.hXnTrEAC7u/cupy/tests/cupyx_tests/scipy_tests/ndimage_tests/test_interpolation.py", line 398, in test_affine_transform_texture_memory
E       return m(a, matrix, output_shape=output_shape,
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.hXnTrEAC7u/cupy/cupyx/scipy/ndimage/interpolation.py", line 376, in affine_transform
E       return _texture.affine_transformation(data=input,
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.hXnTrEAC7u/cupy/cupyx/_texture.py", line 168, in affine_transformation
E       texture_object = _create_texture_object(data,
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.hXnTrEAC7u/cupy/cupyx/_texture.py", line 98, in _create_texture_object
E       array = texture.CUDAarray(texture_fmt, *data.shape[::-1])
E     File "cupy/cuda/texture.pyx", line 296, in cupy.cuda.texture.CUDAarray.__init__
E       self.ptr = runtime.malloc3DArray(desc.ptr, width, height, depth,
E     File "cupy_backends/cuda/api/runtime.pyx", line 593, in cupy_backends.cuda.api.runtime.malloc3DArray
E       check_status(status)
E     File "cupy_backends/cuda/api/runtime.pyx", line 265, in cupy_backends.cuda.api.runtime.check_status
E       raise CUDARuntimeError(status)
E   cupy_backends.cuda.api.runtime.CUDARuntimeError: hipErrorUnknown: hipErrorUnknown

cupy_backends/cuda/api/runtime.pyx:265: AssertionError
----------------------------- Captured stderr call -----------------------------
Traceback (most recent call last):
  File "cupy_backends/cuda/api/runtime.pyx", line 644, in cupy_backends.cuda.api.runtime.freeArray
    check_status(status)
  File "cupy_backends/cuda/api/runtime.pyx", line 265, in cupy_backends.cuda.api.runtime.check_status
    raise CUDARuntimeError(status)
cupy_backends.cuda.api.runtime.CUDARuntimeError: hipErrorUnknown: hipErrorUnknown
_ TestAffineTransformTextureMemory.test_affine_transform_texture_memory[_param_293_{mode='nearest', order=1, output=None, output_shape=None, shape=(10, 20), theta=90}] _

self = <<cupyx_tests.scipy_tests.ndimage_tests.test_interpolation.TestAffineTransformTextureMemory object at 0x7fab3717be50>  parameter: {'mode': 'nearest', 'order': 1, 'output': None, 'output_shape': None, 'shape': (10, 20), 'theta': 90}>
xp = <module 'cupy' from '/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.hXnTrEAC7u/cupy/cupy/__init__.py'>
scp = <module 'cupyx.scipy' from '/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.hXnTrEAC7u/cupy/cupyx/scipy/__init__.py'>

    @testing.numpy_cupy_allclose(atol=0.1, scipy_name='scp')
    def test_affine_transform_texture_memory(self, xp, scp):
        a = xp.ones(self.shape, dtype=xp.float32)
        center = numpy.divide(numpy.subtract(self.shape, 1), 2)
    
        if len(self.shape) == 2:
            matrix = self._2d_rotation_matrix(self.theta, center)
        elif len(self.shape) == 3:
            matrix = self._3d_rotation_matrix(self.theta, center)
        else:
            return pytest.xfail('Unsupported shape')
    
        if self.output == 'empty':
            output = xp.empty(self.shape, dtype=xp.float32)
            if self.output_shape:
                return pytest.skip('This combination is tested in '
                                   'test_invalid_texture_arguments')
        else:
            output = self.output
    
        if self.output_shape:
            output_shape = (self.output_shape, ) * len(self.shape)
        else:
            output_shape = self.output_shape
    
        if xp == cupy:
            m = cupyx.scipy.ndimage.affine_transform
            matrix = cupy.array(matrix)
>           return m(a, matrix, output_shape=output_shape,
                     output=output, order=self.order,
                     mode=self.mode, texture_memory=True)

tests/cupyx_tests/scipy_tests/ndimage_tests/test_interpolation.py:398: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
cupyx/scipy/ndimage/interpolation.py:376: in affine_transform
    return _texture.affine_transformation(data=input,
cupyx/_texture.py:168: in affine_transformation
    texture_object = _create_texture_object(data,
cupyx/_texture.py:98: in _create_texture_object
    array = texture.CUDAarray(texture_fmt, *data.shape[::-1])
cupy/cuda/texture.pyx:296: in cupy.cuda.texture.CUDAarray.__init__
    self.ptr = runtime.malloc3DArray(desc.ptr, width, height, depth,
cupy_backends/cuda/api/runtime.pyx:593: in cupy_backends.cuda.api.runtime.malloc3DArray
    check_status(status)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

>   raise CUDARuntimeError(status)
E   AssertionError: Only cupy raises error
E   
E   Traceback (most recent call last):
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.hXnTrEAC7u/cupy/cupy/testing/_helper.py", line 47, in _call_func
E       result = impl(self, *args, **kw)
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.hXnTrEAC7u/cupy/tests/cupyx_tests/scipy_tests/ndimage_tests/test_interpolation.py", line 398, in test_affine_transform_texture_memory
E       return m(a, matrix, output_shape=output_shape,
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.hXnTrEAC7u/cupy/cupyx/scipy/ndimage/interpolation.py", line 376, in affine_transform
E       return _texture.affine_transformation(data=input,
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.hXnTrEAC7u/cupy/cupyx/_texture.py", line 168, in affine_transformation
E       texture_object = _create_texture_object(data,
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.hXnTrEAC7u/cupy/cupyx/_texture.py", line 98, in _create_texture_object
E       array = texture.CUDAarray(texture_fmt, *data.shape[::-1])
E     File "cupy/cuda/texture.pyx", line 296, in cupy.cuda.texture.CUDAarray.__init__
E       self.ptr = runtime.malloc3DArray(desc.ptr, width, height, depth,
E     File "cupy_backends/cuda/api/runtime.pyx", line 593, in cupy_backends.cuda.api.runtime.malloc3DArray
E       check_status(status)
E     File "cupy_backends/cuda/api/runtime.pyx", line 265, in cupy_backends.cuda.api.runtime.check_status
E       raise CUDARuntimeError(status)
E   cupy_backends.cuda.api.runtime.CUDARuntimeError: hipErrorUnknown: hipErrorUnknown

cupy_backends/cuda/api/runtime.pyx:265: AssertionError
----------------------------- Captured stderr call -----------------------------
Traceback (most recent call last):
  File "cupy_backends/cuda/api/runtime.pyx", line 644, in cupy_backends.cuda.api.runtime.freeArray
    check_status(status)
  File "cupy_backends/cuda/api/runtime.pyx", line 265, in cupy_backends.cuda.api.runtime.check_status
    raise CUDARuntimeError(status)
cupy_backends.cuda.api.runtime.CUDARuntimeError: hipErrorUnknown: hipErrorUnknown
_ TestAffineTransformTextureMemory.test_affine_transform_texture_memory[_param_294_{mode='nearest', order=1, output=None, output_shape=None, shape=(10, 20), theta=180}] _

self = <<cupyx_tests.scipy_tests.ndimage_tests.test_interpolation.TestAffineTransformTextureMemory object at 0x7fac51128220>  parameter: {'mode': 'nearest', 'order': 1, 'output': None, 'output_shape': None, 'shape': (10, 20), 'theta': 180}>
xp = <module 'cupy' from '/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.hXnTrEAC7u/cupy/cupy/__init__.py'>
scp = <module 'cupyx.scipy' from '/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.hXnTrEAC7u/cupy/cupyx/scipy/__init__.py'>

    @testing.numpy_cupy_allclose(atol=0.1, scipy_name='scp')
    def test_affine_transform_texture_memory(self, xp, scp):
        a = xp.ones(self.shape, dtype=xp.float32)
        center = numpy.divide(numpy.subtract(self.shape, 1), 2)
    
        if len(self.shape) == 2:
            matrix = self._2d_rotation_matrix(self.theta, center)
        elif len(self.shape) == 3:
            matrix = self._3d_rotation_matrix(self.theta, center)
        else:
            return pytest.xfail('Unsupported shape')
    
        if self.output == 'empty':
            output = xp.empty(self.shape, dtype=xp.float32)
            if self.output_shape:
                return pytest.skip('This combination is tested in '
                                   'test_invalid_texture_arguments')
        else:
            output = self.output
    
        if self.output_shape:
            output_shape = (self.output_shape, ) * len(self.shape)
        else:
            output_shape = self.output_shape
    
        if xp == cupy:
            m = cupyx.scipy.ndimage.affine_transform
            matrix = cupy.array(matrix)
>           return m(a, matrix, output_shape=output_shape,
                     output=output, order=self.order,
                     mode=self.mode, texture_memory=True)

tests/cupyx_tests/scipy_tests/ndimage_tests/test_interpolation.py:398: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
cupyx/scipy/ndimage/interpolation.py:376: in affine_transform
    return _texture.affine_transformation(data=input,
cupyx/_texture.py:168: in affine_transformation
    texture_object = _create_texture_object(data,
cupyx/_texture.py:98: in _create_texture_object
    array = texture.CUDAarray(texture_fmt, *data.shape[::-1])
cupy/cuda/texture.pyx:296: in cupy.cuda.texture.CUDAarray.__init__
    self.ptr = runtime.malloc3DArray(desc.ptr, width, height, depth,
cupy_backends/cuda/api/runtime.pyx:593: in cupy_backends.cuda.api.runtime.malloc3DArray
    check_status(status)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

>   raise CUDARuntimeError(status)
E   AssertionError: Only cupy raises error
E   
E   Traceback (most recent call last):
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.hXnTrEAC7u/cupy/cupy/testing/_helper.py", line 47, in _call_func
E       result = impl(self, *args, **kw)
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.hXnTrEAC7u/cupy/tests/cupyx_tests/scipy_tests/ndimage_tests/test_interpolation.py", line 398, in test_affine_transform_texture_memory
E       return m(a, matrix, output_shape=output_shape,
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.hXnTrEAC7u/cupy/cupyx/scipy/ndimage/interpolation.py", line 376, in affine_transform
E       return _texture.affine_transformation(data=input,
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.hXnTrEAC7u/cupy/cupyx/_texture.py", line 168, in affine_transformation
E       texture_object = _create_texture_object(data,
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.hXnTrEAC7u/cupy/cupyx/_texture.py", line 98, in _create_texture_object
E       array = texture.CUDAarray(texture_fmt, *data.shape[::-1])
E     File "cupy/cuda/texture.pyx", line 296, in cupy.cuda.texture.CUDAarray.__init__
E       self.ptr = runtime.malloc3DArray(desc.ptr, width, height, depth,
E     File "cupy_backends/cuda/api/runtime.pyx", line 593, in cupy_backends.cuda.api.runtime.malloc3DArray
E       check_status(status)
E     File "cupy_backends/cuda/api/runtime.pyx", line 265, in cupy_backends.cuda.api.runtime.check_status
E       raise CUDARuntimeError(status)
E   cupy_backends.cuda.api.runtime.CUDARuntimeError: hipErrorUnknown: hipErrorUnknown

cupy_backends/cuda/api/runtime.pyx:265: AssertionError
----------------------------- Captured stderr call -----------------------------
Traceback (most recent call last):
  File "cupy_backends/cuda/api/runtime.pyx", line 644, in cupy_backends.cuda.api.runtime.freeArray
    check_status(status)
  File "cupy_backends/cuda/api/runtime.pyx", line 265, in cupy_backends.cuda.api.runtime.check_status
    raise CUDARuntimeError(status)
cupy_backends.cuda.api.runtime.CUDARuntimeError: hipErrorUnknown: hipErrorUnknown
_ TestAffineTransformTextureMemory.test_affine_transform_texture_memory[_param_295_{mode='nearest', order=1, output=None, output_shape=None, shape=(10, 20), theta=270}] _

self = <<cupyx_tests.scipy_tests.ndimage_tests.test_interpolation.TestAffineTransformTextureMemory object at 0x7fab371f7310>  parameter: {'mode': 'nearest', 'order': 1, 'output': None, 'output_shape': None, 'shape': (10, 20), 'theta': 270}>
xp = <module 'cupy' from '/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.hXnTrEAC7u/cupy/cupy/__init__.py'>
scp = <module 'cupyx.scipy' from '/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.hXnTrEAC7u/cupy/cupyx/scipy/__init__.py'>

    @testing.numpy_cupy_allclose(atol=0.1, scipy_name='scp')
    def test_affine_transform_texture_memory(self, xp, scp):
        a = xp.ones(self.shape, dtype=xp.float32)
        center = numpy.divide(numpy.subtract(self.shape, 1), 2)
    
        if len(self.shape) == 2:
            matrix = self._2d_rotation_matrix(self.theta, center)
        elif len(self.shape) == 3:
            matrix = self._3d_rotation_matrix(self.theta, center)
        else:
            return pytest.xfail('Unsupported shape')
    
        if self.output == 'empty':
            output = xp.empty(self.shape, dtype=xp.float32)
            if self.output_shape:
                return pytest.skip('This combination is tested in '
                                   'test_invalid_texture_arguments')
        else:
            output = self.output
    
        if self.output_shape:
            output_shape = (self.output_shape, ) * len(self.shape)
        else:
            output_shape = self.output_shape
    
        if xp == cupy:
            m = cupyx.scipy.ndimage.affine_transform
            matrix = cupy.array(matrix)
>           return m(a, matrix, output_shape=output_shape,
                     output=output, order=self.order,
                     mode=self.mode, texture_memory=True)

tests/cupyx_tests/scipy_tests/ndimage_tests/test_interpolation.py:398: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
cupyx/scipy/ndimage/interpolation.py:376: in affine_transform
    return _texture.affine_transformation(data=input,
cupyx/_texture.py:168: in affine_transformation
    texture_object = _create_texture_object(data,
cupyx/_texture.py:98: in _create_texture_object
    array = texture.CUDAarray(texture_fmt, *data.shape[::-1])
cupy/cuda/texture.pyx:296: in cupy.cuda.texture.CUDAarray.__init__
    self.ptr = runtime.malloc3DArray(desc.ptr, width, height, depth,
cupy_backends/cuda/api/runtime.pyx:593: in cupy_backends.cuda.api.runtime.malloc3DArray
    check_status(status)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

>   raise CUDARuntimeError(status)
E   AssertionError: Only cupy raises error
E   
E   Traceback (most recent call last):
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.hXnTrEAC7u/cupy/cupy/testing/_helper.py", line 47, in _call_func
E       result = impl(self, *args, **kw)
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.hXnTrEAC7u/cupy/tests/cupyx_tests/scipy_tests/ndimage_tests/test_interpolation.py", line 398, in test_affine_transform_texture_memory
E       return m(a, matrix, output_shape=output_shape,
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.hXnTrEAC7u/cupy/cupyx/scipy/ndimage/interpolation.py", line 376, in affine_transform
E       return _texture.affine_transformation(data=input,
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.hXnTrEAC7u/cupy/cupyx/_texture.py", line 168, in affine_transformation
E       texture_object = _create_texture_object(data,
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.hXnTrEAC7u/cupy/cupyx/_texture.py", line 98, in _create_texture_object
E       array = texture.CUDAarray(texture_fmt, *data.shape[::-1])
E     File "cupy/cuda/texture.pyx", line 296, in cupy.cuda.texture.CUDAarray.__init__
E       self.ptr = runtime.malloc3DArray(desc.ptr, width, height, depth,
E     File "cupy_backends/cuda/api/runtime.pyx", line 593, in cupy_backends.cuda.api.runtime.malloc3DArray
E       check_status(status)
E     File "cupy_backends/cuda/api/runtime.pyx", line 265, in cupy_backends.cuda.api.runtime.check_status
E       raise CUDARuntimeError(status)
E   cupy_backends.cuda.api.runtime.CUDARuntimeError: hipErrorUnknown: hipErrorUnknown

cupy_backends/cuda/api/runtime.pyx:265: AssertionError
----------------------------- Captured stderr call -----------------------------
Traceback (most recent call last):
  File "cupy_backends/cuda/api/runtime.pyx", line 644, in cupy_backends.cuda.api.runtime.freeArray
    check_status(status)
  File "cupy_backends/cuda/api/runtime.pyx", line 265, in cupy_backends.cuda.api.runtime.check_status
    raise CUDARuntimeError(status)
cupy_backends.cuda.api.runtime.CUDARuntimeError: hipErrorUnknown: hipErrorUnknown
_ TestAffineTransformTextureMemory.test_affine_transform_texture_memory[_param_296_{mode='nearest', order=1, output=None, output_shape=None, shape=(10, 10, 10), theta=0}] _

self = <<cupyx_tests.scipy_tests.ndimage_tests.test_interpolation.TestAffineTransformTextureMemory object at 0x7fab36f9a460>  parameter: {'mode': 'nearest', 'order': 1, 'output': None, 'output_shape': None, 'shape': (10, 10, 10), 'theta': 0}>
xp = <module 'cupy' from '/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.hXnTrEAC7u/cupy/cupy/__init__.py'>
scp = <module 'cupyx.scipy' from '/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.hXnTrEAC7u/cupy/cupyx/scipy/__init__.py'>

    @testing.numpy_cupy_allclose(atol=0.1, scipy_name='scp')
    def test_affine_transform_texture_memory(self, xp, scp):
        a = xp.ones(self.shape, dtype=xp.float32)
        center = numpy.divide(numpy.subtract(self.shape, 1), 2)
    
        if len(self.shape) == 2:
            matrix = self._2d_rotation_matrix(self.theta, center)
        elif len(self.shape) == 3:
            matrix = self._3d_rotation_matrix(self.theta, center)
        else:
            return pytest.xfail('Unsupported shape')
    
        if self.output == 'empty':
            output = xp.empty(self.shape, dtype=xp.float32)
            if self.output_shape:
                return pytest.skip('This combination is tested in '
                                   'test_invalid_texture_arguments')
        else:
            output = self.output
    
        if self.output_shape:
            output_shape = (self.output_shape, ) * len(self.shape)
        else:
            output_shape = self.output_shape
    
        if xp == cupy:
            m = cupyx.scipy.ndimage.affine_transform
            matrix = cupy.array(matrix)
>           return m(a, matrix, output_shape=output_shape,
                     output=output, order=self.order,
                     mode=self.mode, texture_memory=True)

tests/cupyx_tests/scipy_tests/ndimage_tests/test_interpolation.py:398: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
cupyx/scipy/ndimage/interpolation.py:376: in affine_transform
    return _texture.affine_transformation(data=input,
cupyx/_texture.py:168: in affine_transformation
    texture_object = _create_texture_object(data,
cupyx/_texture.py:98: in _create_texture_object
    array = texture.CUDAarray(texture_fmt, *data.shape[::-1])
cupy/cuda/texture.pyx:296: in cupy.cuda.texture.CUDAarray.__init__
    self.ptr = runtime.malloc3DArray(desc.ptr, width, height, depth,
cupy_backends/cuda/api/runtime.pyx:593: in cupy_backends.cuda.api.runtime.malloc3DArray
    check_status(status)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

>   raise CUDARuntimeError(status)
E   AssertionError: Only cupy raises error
E   
E   Traceback (most recent call last):
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.hXnTrEAC7u/cupy/cupy/testing/_helper.py", line 47, in _call_func
E       result = impl(self, *args, **kw)
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.hXnTrEAC7u/cupy/tests/cupyx_tests/scipy_tests/ndimage_tests/test_interpolation.py", line 398, in test_affine_transform_texture_memory
E       return m(a, matrix, output_shape=output_shape,
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.hXnTrEAC7u/cupy/cupyx/scipy/ndimage/interpolation.py", line 376, in affine_transform
E       return _texture.affine_transformation(data=input,
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.hXnTrEAC7u/cupy/cupyx/_texture.py", line 168, in affine_transformation
E       texture_object = _create_texture_object(data,
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.hXnTrEAC7u/cupy/cupyx/_texture.py", line 98, in _create_texture_object
E       array = texture.CUDAarray(texture_fmt, *data.shape[::-1])
E     File "cupy/cuda/texture.pyx", line 296, in cupy.cuda.texture.CUDAarray.__init__
E       self.ptr = runtime.malloc3DArray(desc.ptr, width, height, depth,
E     File "cupy_backends/cuda/api/runtime.pyx", line 593, in cupy_backends.cuda.api.runtime.malloc3DArray
E       check_status(status)
E     File "cupy_backends/cuda/api/runtime.pyx", line 265, in cupy_backends.cuda.api.runtime.check_status
E       raise CUDARuntimeError(status)
E   cupy_backends.cuda.api.runtime.CUDARuntimeError: hipErrorUnknown: hipErrorUnknown

cupy_backends/cuda/api/runtime.pyx:265: AssertionError
----------------------------- Captured stderr call -----------------------------
Traceback (most recent call last):
  File "cupy_backends/cuda/api/runtime.pyx", line 644, in cupy_backends.cuda.api.runtime.freeArray
    check_status(status)
  File "cupy_backends/cuda/api/runtime.pyx", line 265, in cupy_backends.cuda.api.runtime.check_status
    raise CUDARuntimeError(status)
cupy_backends.cuda.api.runtime.CUDARuntimeError: hipErrorUnknown: hipErrorUnknown
_ TestAffineTransformTextureMemory.test_affine_transform_texture_memory[_param_297_{mode='nearest', order=1, output=None, output_shape=None, shape=(10, 10, 10), theta=90}] _

self = <<cupyx_tests.scipy_tests.ndimage_tests.test_interpolation.TestAffineTransformTextureMemory object at 0x7fab37185dc0>  parameter: {'mode': 'nearest', 'order': 1, 'output': None, 'output_shape': None, 'shape': (10, 10, 10), 'theta': 90}>
xp = <module 'cupy' from '/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.hXnTrEAC7u/cupy/cupy/__init__.py'>
scp = <module 'cupyx.scipy' from '/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.hXnTrEAC7u/cupy/cupyx/scipy/__init__.py'>

    @testing.numpy_cupy_allclose(atol=0.1, scipy_name='scp')
    def test_affine_transform_texture_memory(self, xp, scp):
        a = xp.ones(self.shape, dtype=xp.float32)
        center = numpy.divide(numpy.subtract(self.shape, 1), 2)
    
        if len(self.shape) == 2:
            matrix = self._2d_rotation_matrix(self.theta, center)
        elif len(self.shape) == 3:
            matrix = self._3d_rotation_matrix(self.theta, center)
        else:
            return pytest.xfail('Unsupported shape')
    
        if self.output == 'empty':
            output = xp.empty(self.shape, dtype=xp.float32)
            if self.output_shape:
                return pytest.skip('This combination is tested in '
                                   'test_invalid_texture_arguments')
        else:
            output = self.output
    
        if self.output_shape:
            output_shape = (self.output_shape, ) * len(self.shape)
        else:
            output_shape = self.output_shape
    
        if xp == cupy:
            m = cupyx.scipy.ndimage.affine_transform
            matrix = cupy.array(matrix)
>           return m(a, matrix, output_shape=output_shape,
                     output=output, order=self.order,
                     mode=self.mode, texture_memory=True)

tests/cupyx_tests/scipy_tests/ndimage_tests/test_interpolation.py:398: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
cupyx/scipy/ndimage/interpolation.py:376: in affine_transform
    return _texture.affine_transformation(data=input,
cupyx/_texture.py:168: in affine_transformation
    texture_object = _create_texture_object(data,
cupyx/_texture.py:98: in _create_texture_object
    array = texture.CUDAarray(texture_fmt, *data.shape[::-1])
cupy/cuda/texture.pyx:296: in cupy.cuda.texture.CUDAarray.__init__
    self.ptr = runtime.malloc3DArray(desc.ptr, width, height, depth,
cupy_backends/cuda/api/runtime.pyx:593: in cupy_backends.cuda.api.runtime.malloc3DArray
    check_status(status)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

>   raise CUDARuntimeError(status)
E   AssertionError: Only cupy raises error
E   
E   Traceback (most recent call last):
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.hXnTrEAC7u/cupy/cupy/testing/_helper.py", line 47, in _call_func
E       result = impl(self, *args, **kw)
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.hXnTrEAC7u/cupy/tests/cupyx_tests/scipy_tests/ndimage_tests/test_interpolation.py", line 398, in test_affine_transform_texture_memory
E       return m(a, matrix, output_shape=output_shape,
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.hXnTrEAC7u/cupy/cupyx/scipy/ndimage/interpolation.py", line 376, in affine_transform
E       return _texture.affine_transformation(data=input,
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.hXnTrEAC7u/cupy/cupyx/_texture.py", line 168, in affine_transformation
E       texture_object = _create_texture_object(data,
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.hXnTrEAC7u/cupy/cupyx/_texture.py", line 98, in _create_texture_object
E       array = texture.CUDAarray(texture_fmt, *data.shape[::-1])
E     File "cupy/cuda/texture.pyx", line 296, in cupy.cuda.texture.CUDAarray.__init__
E       self.ptr = runtime.malloc3DArray(desc.ptr, width, height, depth,
E     File "cupy_backends/cuda/api/runtime.pyx", line 593, in cupy_backends.cuda.api.runtime.malloc3DArray
E       check_status(status)
E     File "cupy_backends/cuda/api/runtime.pyx", line 265, in cupy_backends.cuda.api.runtime.check_status
E       raise CUDARuntimeError(status)
E   cupy_backends.cuda.api.runtime.CUDARuntimeError: hipErrorUnknown: hipErrorUnknown

cupy_backends/cuda/api/runtime.pyx:265: AssertionError
----------------------------- Captured stderr call -----------------------------
Traceback (most recent call last):
  File "cupy_backends/cuda/api/runtime.pyx", line 644, in cupy_backends.cuda.api.runtime.freeArray
    check_status(status)
  File "cupy_backends/cuda/api/runtime.pyx", line 265, in cupy_backends.cuda.api.runtime.check_status
    raise CUDARuntimeError(status)
cupy_backends.cuda.api.runtime.CUDARuntimeError: hipErrorUnknown: hipErrorUnknown
_ TestAffineTransformTextureMemory.test_affine_transform_texture_memory[_param_298_{mode='nearest', order=1, output=None, output_shape=None, shape=(10, 10, 10), theta=180}] _

self = <<cupyx_tests.scipy_tests.ndimage_tests.test_interpolation.TestAffineTransformTextureMemory object at 0x7fab36e19bb0>  parameter: {'mode': 'nearest', 'order': 1, 'output': None, 'output_shape': None, 'shape': (10, 10, 10), 'theta': 180}>
xp = <module 'cupy' from '/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.hXnTrEAC7u/cupy/cupy/__init__.py'>
scp = <module 'cupyx.scipy' from '/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.hXnTrEAC7u/cupy/cupyx/scipy/__init__.py'>

    @testing.numpy_cupy_allclose(atol=0.1, scipy_name='scp')
    def test_affine_transform_texture_memory(self, xp, scp):
        a = xp.ones(self.shape, dtype=xp.float32)
        center = numpy.divide(numpy.subtract(self.shape, 1), 2)
    
        if len(self.shape) == 2:
            matrix = self._2d_rotation_matrix(self.theta, center)
        elif len(self.shape) == 3:
            matrix = self._3d_rotation_matrix(self.theta, center)
        else:
            return pytest.xfail('Unsupported shape')
    
        if self.output == 'empty':
            output = xp.empty(self.shape, dtype=xp.float32)
            if self.output_shape:
                return pytest.skip('This combination is tested in '
                                   'test_invalid_texture_arguments')
        else:
            output = self.output
    
        if self.output_shape:
            output_shape = (self.output_shape, ) * len(self.shape)
        else:
            output_shape = self.output_shape
    
        if xp == cupy:
            m = cupyx.scipy.ndimage.affine_transform
            matrix = cupy.array(matrix)
>           return m(a, matrix, output_shape=output_shape,
                     output=output, order=self.order,
                     mode=self.mode, texture_memory=True)

tests/cupyx_tests/scipy_tests/ndimage_tests/test_interpolation.py:398: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
cupyx/scipy/ndimage/interpolation.py:376: in affine_transform
    return _texture.affine_transformation(data=input,
cupyx/_texture.py:168: in affine_transformation
    texture_object = _create_texture_object(data,
cupyx/_texture.py:98: in _create_texture_object
    array = texture.CUDAarray(texture_fmt, *data.shape[::-1])
cupy/cuda/texture.pyx:296: in cupy.cuda.texture.CUDAarray.__init__
    self.ptr = runtime.malloc3DArray(desc.ptr, width, height, depth,
cupy_backends/cuda/api/runtime.pyx:593: in cupy_backends.cuda.api.runtime.malloc3DArray
    check_status(status)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

>   raise CUDARuntimeError(status)
E   AssertionError: Only cupy raises error
E   
E   Traceback (most recent call last):
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.hXnTrEAC7u/cupy/cupy/testing/_helper.py", line 47, in _call_func
E       result = impl(self, *args, **kw)
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.hXnTrEAC7u/cupy/tests/cupyx_tests/scipy_tests/ndimage_tests/test_interpolation.py", line 398, in test_affine_transform_texture_memory
E       return m(a, matrix, output_shape=output_shape,
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.hXnTrEAC7u/cupy/cupyx/scipy/ndimage/interpolation.py", line 376, in affine_transform
E       return _texture.affine_transformation(data=input,
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.hXnTrEAC7u/cupy/cupyx/_texture.py", line 168, in affine_transformation
E       texture_object = _create_texture_object(data,
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.hXnTrEAC7u/cupy/cupyx/_texture.py", line 98, in _create_texture_object
E       array = texture.CUDAarray(texture_fmt, *data.shape[::-1])
E     File "cupy/cuda/texture.pyx", line 296, in cupy.cuda.texture.CUDAarray.__init__
E       self.ptr = runtime.malloc3DArray(desc.ptr, width, height, depth,
E     File "cupy_backends/cuda/api/runtime.pyx", line 593, in cupy_backends.cuda.api.runtime.malloc3DArray
E       check_status(status)
E     File "cupy_backends/cuda/api/runtime.pyx", line 265, in cupy_backends.cuda.api.runtime.check_status
E       raise CUDARuntimeError(status)
E   cupy_backends.cuda.api.runtime.CUDARuntimeError: hipErrorUnknown: hipErrorUnknown

cupy_backends/cuda/api/runtime.pyx:265: AssertionError
----------------------------- Captured stderr call -----------------------------
Traceback (most recent call last):
  File "cupy_backends/cuda/api/runtime.pyx", line 644, in cupy_backends.cuda.api.runtime.freeArray
    check_status(status)
  File "cupy_backends/cuda/api/runtime.pyx", line 265, in cupy_backends.cuda.api.runtime.check_status
    raise CUDARuntimeError(status)
cupy_backends.cuda.api.runtime.CUDARuntimeError: hipErrorUnknown: hipErrorUnknown
_ TestAffineTransformTextureMemory.test_affine_transform_texture_memory[_param_299_{mode='nearest', order=1, output=None, output_shape=None, shape=(10, 10, 10), theta=270}] _

self = <<cupyx_tests.scipy_tests.ndimage_tests.test_interpolation.TestAffineTransformTextureMemory object at 0x7fab3714d4c0>  parameter: {'mode': 'nearest', 'order': 1, 'output': None, 'output_shape': None, 'shape': (10, 10, 10), 'theta': 270}>
xp = <module 'cupy' from '/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.hXnTrEAC7u/cupy/cupy/__init__.py'>
scp = <module 'cupyx.scipy' from '/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.hXnTrEAC7u/cupy/cupyx/scipy/__init__.py'>

    @testing.numpy_cupy_allclose(atol=0.1, scipy_name='scp')
    def test_affine_transform_texture_memory(self, xp, scp):
        a = xp.ones(self.shape, dtype=xp.float32)
        center = numpy.divide(numpy.subtract(self.shape, 1), 2)
    
        if len(self.shape) == 2:
            matrix = self._2d_rotation_matrix(self.theta, center)
        elif len(self.shape) == 3:
            matrix = self._3d_rotation_matrix(self.theta, center)
        else:
            return pytest.xfail('Unsupported shape')
    
        if self.output == 'empty':
            output = xp.empty(self.shape, dtype=xp.float32)
            if self.output_shape:
                return pytest.skip('This combination is tested in '
                                   'test_invalid_texture_arguments')
        else:
            output = self.output
    
        if self.output_shape:
            output_shape = (self.output_shape, ) * len(self.shape)
        else:
            output_shape = self.output_shape
    
        if xp == cupy:
            m = cupyx.scipy.ndimage.affine_transform
            matrix = cupy.array(matrix)
>           return m(a, matrix, output_shape=output_shape,
                     output=output, order=self.order,
                     mode=self.mode, texture_memory=True)

tests/cupyx_tests/scipy_tests/ndimage_tests/test_interpolation.py:398: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
cupyx/scipy/ndimage/interpolation.py:376: in affine_transform
    return _texture.affine_transformation(data=input,
cupyx/_texture.py:168: in affine_transformation
    texture_object = _create_texture_object(data,
cupyx/_texture.py:98: in _create_texture_object
    array = texture.CUDAarray(texture_fmt, *data.shape[::-1])
cupy/cuda/texture.pyx:296: in cupy.cuda.texture.CUDAarray.__init__
    self.ptr = runtime.malloc3DArray(desc.ptr, width, height, depth,
cupy_backends/cuda/api/runtime.pyx:593: in cupy_backends.cuda.api.runtime.malloc3DArray
    check_status(status)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

>   raise CUDARuntimeError(status)
E   AssertionError: Only cupy raises error
E   
E   Traceback (most recent call last):
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.hXnTrEAC7u/cupy/cupy/testing/_helper.py", line 47, in _call_func
E       result = impl(self, *args, **kw)
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.hXnTrEAC7u/cupy/tests/cupyx_tests/scipy_tests/ndimage_tests/test_interpolation.py", line 398, in test_affine_transform_texture_memory
E       return m(a, matrix, output_shape=output_shape,
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.hXnTrEAC7u/cupy/cupyx/scipy/ndimage/interpolation.py", line 376, in affine_transform
E       return _texture.affine_transformation(data=input,
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.hXnTrEAC7u/cupy/cupyx/_texture.py", line 168, in affine_transformation
E       texture_object = _create_texture_object(data,
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.hXnTrEAC7u/cupy/cupyx/_texture.py", line 98, in _create_texture_object
E       array = texture.CUDAarray(texture_fmt, *data.shape[::-1])
E     File "cupy/cuda/texture.pyx", line 296, in cupy.cuda.texture.CUDAarray.__init__
E       self.ptr = runtime.malloc3DArray(desc.ptr, width, height, depth,
E     File "cupy_backends/cuda/api/runtime.pyx", line 593, in cupy_backends.cuda.api.runtime.malloc3DArray
E       check_status(status)
E     File "cupy_backends/cuda/api/runtime.pyx", line 265, in cupy_backends.cuda.api.runtime.check_status
E       raise CUDARuntimeError(status)
E   cupy_backends.cuda.api.runtime.CUDARuntimeError: hipErrorUnknown: hipErrorUnknown

cupy_backends/cuda/api/runtime.pyx:265: AssertionError
----------------------------- Captured stderr call -----------------------------
Traceback (most recent call last):
  File "cupy_backends/cuda/api/runtime.pyx", line 644, in cupy_backends.cuda.api.runtime.freeArray
    check_status(status)
  File "cupy_backends/cuda/api/runtime.pyx", line 265, in cupy_backends.cuda.api.runtime.check_status
    raise CUDARuntimeError(status)
cupy_backends.cuda.api.runtime.CUDARuntimeError: hipErrorUnknown: hipErrorUnknown
_ TestAffineTransformTextureMemory.test_affine_transform_texture_memory[_param_300_{mode='nearest', order=1, output=None, output_shape=None, shape=(10, 20, 30), theta=0}] _

self = <<cupyx_tests.scipy_tests.ndimage_tests.test_interpolation.TestAffineTransformTextureMemory object at 0x7fab36bb80d0>  parameter: {'mode': 'nearest', 'order': 1, 'output': None, 'output_shape': None, 'shape': (10, 20, 30), 'theta': 0}>
xp = <module 'cupy' from '/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.hXnTrEAC7u/cupy/cupy/__init__.py'>
scp = <module 'cupyx.scipy' from '/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.hXnTrEAC7u/cupy/cupyx/scipy/__init__.py'>

    @testing.numpy_cupy_allclose(atol=0.1, scipy_name='scp')
    def test_affine_transform_texture_memory(self, xp, scp):
        a = xp.ones(self.shape, dtype=xp.float32)
        center = numpy.divide(numpy.subtract(self.shape, 1), 2)
    
        if len(self.shape) == 2:
            matrix = self._2d_rotation_matrix(self.theta, center)
        elif len(self.shape) == 3:
            matrix = self._3d_rotation_matrix(self.theta, center)
        else:
            return pytest.xfail('Unsupported shape')
    
        if self.output == 'empty':
            output = xp.empty(self.shape, dtype=xp.float32)
            if self.output_shape:
                return pytest.skip('This combination is tested in '
                                   'test_invalid_texture_arguments')
        else:
            output = self.output
    
        if self.output_shape:
            output_shape = (self.output_shape, ) * len(self.shape)
        else:
            output_shape = self.output_shape
    
        if xp == cupy:
            m = cupyx.scipy.ndimage.affine_transform
            matrix = cupy.array(matrix)
>           return m(a, matrix, output_shape=output_shape,
                     output=output, order=self.order,
                     mode=self.mode, texture_memory=True)

tests/cupyx_tests/scipy_tests/ndimage_tests/test_interpolation.py:398: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
cupyx/scipy/ndimage/interpolation.py:376: in affine_transform
    return _texture.affine_transformation(data=input,
cupyx/_texture.py:168: in affine_transformation
    texture_object = _create_texture_object(data,
cupyx/_texture.py:98: in _create_texture_object
    array = texture.CUDAarray(texture_fmt, *data.shape[::-1])
cupy/cuda/texture.pyx:296: in cupy.cuda.texture.CUDAarray.__init__
    self.ptr = runtime.malloc3DArray(desc.ptr, width, height, depth,
cupy_backends/cuda/api/runtime.pyx:593: in cupy_backends.cuda.api.runtime.malloc3DArray
    check_status(status)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

>   raise CUDARuntimeError(status)
E   AssertionError: Only cupy raises error
E   
E   Traceback (most recent call last):
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.hXnTrEAC7u/cupy/cupy/testing/_helper.py", line 47, in _call_func
E       result = impl(self, *args, **kw)
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.hXnTrEAC7u/cupy/tests/cupyx_tests/scipy_tests/ndimage_tests/test_interpolation.py", line 398, in test_affine_transform_texture_memory
E       return m(a, matrix, output_shape=output_shape,
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.hXnTrEAC7u/cupy/cupyx/scipy/ndimage/interpolation.py", line 376, in affine_transform
E       return _texture.affine_transformation(data=input,
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.hXnTrEAC7u/cupy/cupyx/_texture.py", line 168, in affine_transformation
E       texture_object = _create_texture_object(data,
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.hXnTrEAC7u/cupy/cupyx/_texture.py", line 98, in _create_texture_object
E       array = texture.CUDAarray(texture_fmt, *data.shape[::-1])
E     File "cupy/cuda/texture.pyx", line 296, in cupy.cuda.texture.CUDAarray.__init__
E       self.ptr = runtime.malloc3DArray(desc.ptr, width, height, depth,
E     File "cupy_backends/cuda/api/runtime.pyx", line 593, in cupy_backends.cuda.api.runtime.malloc3DArray
E       check_status(status)
E     File "cupy_backends/cuda/api/runtime.pyx", line 265, in cupy_backends.cuda.api.runtime.check_status
E       raise CUDARuntimeError(status)
E   cupy_backends.cuda.api.runtime.CUDARuntimeError: hipErrorUnknown: hipErrorUnknown

cupy_backends/cuda/api/runtime.pyx:265: AssertionError
----------------------------- Captured stderr call -----------------------------
Traceback (most recent call last):
  File "cupy_backends/cuda/api/runtime.pyx", line 644, in cupy_backends.cuda.api.runtime.freeArray
    check_status(status)
  File "cupy_backends/cuda/api/runtime.pyx", line 265, in cupy_backends.cuda.api.runtime.check_status
    raise CUDARuntimeError(status)
cupy_backends.cuda.api.runtime.CUDARuntimeError: hipErrorUnknown: hipErrorUnknown
_ TestAffineTransformTextureMemory.test_affine_transform_texture_memory[_param_301_{mode='nearest', order=1, output=None, output_shape=None, shape=(10, 20, 30), theta=90}] _

self = <<cupyx_tests.scipy_tests.ndimage_tests.test_interpolation.TestAffineTransformTextureMemory object at 0x7fab3879f400>  parameter: {'mode': 'nearest', 'order': 1, 'output': None, 'output_shape': None, 'shape': (10, 20, 30), 'theta': 90}>
xp = <module 'cupy' from '/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.hXnTrEAC7u/cupy/cupy/__init__.py'>
scp = <module 'cupyx.scipy' from '/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.hXnTrEAC7u/cupy/cupyx/scipy/__init__.py'>

    @testing.numpy_cupy_allclose(atol=0.1, scipy_name='scp')
    def test_affine_transform_texture_memory(self, xp, scp):
        a = xp.ones(self.shape, dtype=xp.float32)
        center = numpy.divide(numpy.subtract(self.shape, 1), 2)
    
        if len(self.shape) == 2:
            matrix = self._2d_rotation_matrix(self.theta, center)
        elif len(self.shape) == 3:
            matrix = self._3d_rotation_matrix(self.theta, center)
        else:
            return pytest.xfail('Unsupported shape')
    
        if self.output == 'empty':
            output = xp.empty(self.shape, dtype=xp.float32)
            if self.output_shape:
                return pytest.skip('This combination is tested in '
                                   'test_invalid_texture_arguments')
        else:
            output = self.output
    
        if self.output_shape:
            output_shape = (self.output_shape, ) * len(self.shape)
        else:
            output_shape = self.output_shape
    
        if xp == cupy:
            m = cupyx.scipy.ndimage.affine_transform
            matrix = cupy.array(matrix)
>           return m(a, matrix, output_shape=output_shape,
                     output=output, order=self.order,
                     mode=self.mode, texture_memory=True)

tests/cupyx_tests/scipy_tests/ndimage_tests/test_interpolation.py:398: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
cupyx/scipy/ndimage/interpolation.py:376: in affine_transform
    return _texture.affine_transformation(data=input,
cupyx/_texture.py:168: in affine_transformation
    texture_object = _create_texture_object(data,
cupyx/_texture.py:98: in _create_texture_object
    array = texture.CUDAarray(texture_fmt, *data.shape[::-1])
cupy/cuda/texture.pyx:296: in cupy.cuda.texture.CUDAarray.__init__
    self.ptr = runtime.malloc3DArray(desc.ptr, width, height, depth,
cupy_backends/cuda/api/runtime.pyx:593: in cupy_backends.cuda.api.runtime.malloc3DArray
    check_status(status)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

>   raise CUDARuntimeError(status)
E   AssertionError: Only cupy raises error
E   
E   Traceback (most recent call last):
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.hXnTrEAC7u/cupy/cupy/testing/_helper.py", line 47, in _call_func
E       result = impl(self, *args, **kw)
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.hXnTrEAC7u/cupy/tests/cupyx_tests/scipy_tests/ndimage_tests/test_interpolation.py", line 398, in test_affine_transform_texture_memory
E       return m(a, matrix, output_shape=output_shape,
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.hXnTrEAC7u/cupy/cupyx/scipy/ndimage/interpolation.py", line 376, in affine_transform
E       return _texture.affine_transformation(data=input,
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.hXnTrEAC7u/cupy/cupyx/_texture.py", line 168, in affine_transformation
E       texture_object = _create_texture_object(data,
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.hXnTrEAC7u/cupy/cupyx/_texture.py", line 98, in _create_texture_object
E       array = texture.CUDAarray(texture_fmt, *data.shape[::-1])
E     File "cupy/cuda/texture.pyx", line 296, in cupy.cuda.texture.CUDAarray.__init__
E       self.ptr = runtime.malloc3DArray(desc.ptr, width, height, depth,
E     File "cupy_backends/cuda/api/runtime.pyx", line 593, in cupy_backends.cuda.api.runtime.malloc3DArray
E       check_status(status)
E     File "cupy_backends/cuda/api/runtime.pyx", line 265, in cupy_backends.cuda.api.runtime.check_status
E       raise CUDARuntimeError(status)
E   cupy_backends.cuda.api.runtime.CUDARuntimeError: hipErrorUnknown: hipErrorUnknown

cupy_backends/cuda/api/runtime.pyx:265: AssertionError
----------------------------- Captured stderr call -----------------------------
Traceback (most recent call last):
  File "cupy_backends/cuda/api/runtime.pyx", line 644, in cupy_backends.cuda.api.runtime.freeArray
    check_status(status)
  File "cupy_backends/cuda/api/runtime.pyx", line 265, in cupy_backends.cuda.api.runtime.check_status
    raise CUDARuntimeError(status)
cupy_backends.cuda.api.runtime.CUDARuntimeError: hipErrorUnknown: hipErrorUnknown
_ TestAffineTransformTextureMemory.test_affine_transform_texture_memory[_param_302_{mode='nearest', order=1, output=None, output_shape=None, shape=(10, 20, 30), theta=180}] _

self = <<cupyx_tests.scipy_tests.ndimage_tests.test_interpolation.TestAffineTransformTextureMemory object at 0x7fab3718f130>  parameter: {'mode': 'nearest', 'order': 1, 'output': None, 'output_shape': None, 'shape': (10, 20, 30), 'theta': 180}>
xp = <module 'cupy' from '/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.hXnTrEAC7u/cupy/cupy/__init__.py'>
scp = <module 'cupyx.scipy' from '/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.hXnTrEAC7u/cupy/cupyx/scipy/__init__.py'>

    @testing.numpy_cupy_allclose(atol=0.1, scipy_name='scp')
    def test_affine_transform_texture_memory(self, xp, scp):
        a = xp.ones(self.shape, dtype=xp.float32)
        center = numpy.divide(numpy.subtract(self.shape, 1), 2)
    
        if len(self.shape) == 2:
            matrix = self._2d_rotation_matrix(self.theta, center)
        elif len(self.shape) == 3:
            matrix = self._3d_rotation_matrix(self.theta, center)
        else:
            return pytest.xfail('Unsupported shape')
    
        if self.output == 'empty':
            output = xp.empty(self.shape, dtype=xp.float32)
            if self.output_shape:
                return pytest.skip('This combination is tested in '
                                   'test_invalid_texture_arguments')
        else:
            output = self.output
    
        if self.output_shape:
            output_shape = (self.output_shape, ) * len(self.shape)
        else:
            output_shape = self.output_shape
    
        if xp == cupy:
            m = cupyx.scipy.ndimage.affine_transform
            matrix = cupy.array(matrix)
>           return m(a, matrix, output_shape=output_shape,
                     output=output, order=self.order,
                     mode=self.mode, texture_memory=True)

tests/cupyx_tests/scipy_tests/ndimage_tests/test_interpolation.py:398: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
cupyx/scipy/ndimage/interpolation.py:376: in affine_transform
    return _texture.affine_transformation(data=input,
cupyx/_texture.py:168: in affine_transformation
    texture_object = _create_texture_object(data,
cupyx/_texture.py:98: in _create_texture_object
    array = texture.CUDAarray(texture_fmt, *data.shape[::-1])
cupy/cuda/texture.pyx:296: in cupy.cuda.texture.CUDAarray.__init__
    self.ptr = runtime.malloc3DArray(desc.ptr, width, height, depth,
cupy_backends/cuda/api/runtime.pyx:593: in cupy_backends.cuda.api.runtime.malloc3DArray
    check_status(status)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

>   raise CUDARuntimeError(status)
E   AssertionError: Only cupy raises error
E   
E   Traceback (most recent call last):
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.hXnTrEAC7u/cupy/cupy/testing/_helper.py", line 47, in _call_func
E       result = impl(self, *args, **kw)
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.hXnTrEAC7u/cupy/tests/cupyx_tests/scipy_tests/ndimage_tests/test_interpolation.py", line 398, in test_affine_transform_texture_memory
E       return m(a, matrix, output_shape=output_shape,
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.hXnTrEAC7u/cupy/cupyx/scipy/ndimage/interpolation.py", line 376, in affine_transform
E       return _texture.affine_transformation(data=input,
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.hXnTrEAC7u/cupy/cupyx/_texture.py", line 168, in affine_transformation
E       texture_object = _create_texture_object(data,
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.hXnTrEAC7u/cupy/cupyx/_texture.py", line 98, in _create_texture_object
E       array = texture.CUDAarray(texture_fmt, *data.shape[::-1])
E     File "cupy/cuda/texture.pyx", line 296, in cupy.cuda.texture.CUDAarray.__init__
E       self.ptr = runtime.malloc3DArray(desc.ptr, width, height, depth,
E     File "cupy_backends/cuda/api/runtime.pyx", line 593, in cupy_backends.cuda.api.runtime.malloc3DArray
E       check_status(status)
E     File "cupy_backends/cuda/api/runtime.pyx", line 265, in cupy_backends.cuda.api.runtime.check_status
E       raise CUDARuntimeError(status)
E   cupy_backends.cuda.api.runtime.CUDARuntimeError: hipErrorUnknown: hipErrorUnknown

cupy_backends/cuda/api/runtime.pyx:265: AssertionError
----------------------------- Captured stderr call -----------------------------
Traceback (most recent call last):
  File "cupy_backends/cuda/api/runtime.pyx", line 644, in cupy_backends.cuda.api.runtime.freeArray
    check_status(status)
  File "cupy_backends/cuda/api/runtime.pyx", line 265, in cupy_backends.cuda.api.runtime.check_status
    raise CUDARuntimeError(status)
cupy_backends.cuda.api.runtime.CUDARuntimeError: hipErrorUnknown: hipErrorUnknown
_ TestAffineTransformTextureMemory.test_affine_transform_texture_memory[_param_303_{mode='nearest', order=1, output=None, output_shape=None, shape=(10, 20, 30), theta=270}] _

self = <<cupyx_tests.scipy_tests.ndimage_tests.test_interpolation.TestAffineTransformTextureMemory object at 0x7fab36de76a0>  parameter: {'mode': 'nearest', 'order': 1, 'output': None, 'output_shape': None, 'shape': (10, 20, 30), 'theta': 270}>
xp = <module 'cupy' from '/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.hXnTrEAC7u/cupy/cupy/__init__.py'>
scp = <module 'cupyx.scipy' from '/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.hXnTrEAC7u/cupy/cupyx/scipy/__init__.py'>

    @testing.numpy_cupy_allclose(atol=0.1, scipy_name='scp')
    def test_affine_transform_texture_memory(self, xp, scp):
        a = xp.ones(self.shape, dtype=xp.float32)
        center = numpy.divide(numpy.subtract(self.shape, 1), 2)
    
        if len(self.shape) == 2:
            matrix = self._2d_rotation_matrix(self.theta, center)
        elif len(self.shape) == 3:
            matrix = self._3d_rotation_matrix(self.theta, center)
        else:
            return pytest.xfail('Unsupported shape')
    
        if self.output == 'empty':
            output = xp.empty(self.shape, dtype=xp.float32)
            if self.output_shape:
                return pytest.skip('This combination is tested in '
                                   'test_invalid_texture_arguments')
        else:
            output = self.output
    
        if self.output_shape:
            output_shape = (self.output_shape, ) * len(self.shape)
        else:
            output_shape = self.output_shape
    
        if xp == cupy:
            m = cupyx.scipy.ndimage.affine_transform
            matrix = cupy.array(matrix)
>           return m(a, matrix, output_shape=output_shape,
                     output=output, order=self.order,
                     mode=self.mode, texture_memory=True)

tests/cupyx_tests/scipy_tests/ndimage_tests/test_interpolation.py:398: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
cupyx/scipy/ndimage/interpolation.py:376: in affine_transform
    return _texture.affine_transformation(data=input,
cupyx/_texture.py:168: in affine_transformation
    texture_object = _create_texture_object(data,
cupyx/_texture.py:98: in _create_texture_object
    array = texture.CUDAarray(texture_fmt, *data.shape[::-1])
cupy/cuda/texture.pyx:296: in cupy.cuda.texture.CUDAarray.__init__
    self.ptr = runtime.malloc3DArray(desc.ptr, width, height, depth,
cupy_backends/cuda/api/runtime.pyx:593: in cupy_backends.cuda.api.runtime.malloc3DArray
    check_status(status)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

>   raise CUDARuntimeError(status)
E   AssertionError: Only cupy raises error
E   
E   Traceback (most recent call last):
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.hXnTrEAC7u/cupy/cupy/testing/_helper.py", line 47, in _call_func
E       result = impl(self, *args, **kw)
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.hXnTrEAC7u/cupy/tests/cupyx_tests/scipy_tests/ndimage_tests/test_interpolation.py", line 398, in test_affine_transform_texture_memory
E       return m(a, matrix, output_shape=output_shape,
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.hXnTrEAC7u/cupy/cupyx/scipy/ndimage/interpolation.py", line 376, in affine_transform
E       return _texture.affine_transformation(data=input,
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.hXnTrEAC7u/cupy/cupyx/_texture.py", line 168, in affine_transformation
E       texture_object = _create_texture_object(data,
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.hXnTrEAC7u/cupy/cupyx/_texture.py", line 98, in _create_texture_object
E       array = texture.CUDAarray(texture_fmt, *data.shape[::-1])
E     File "cupy/cuda/texture.pyx", line 296, in cupy.cuda.texture.CUDAarray.__init__
E       self.ptr = runtime.malloc3DArray(desc.ptr, width, height, depth,
E     File "cupy_backends/cuda/api/runtime.pyx", line 593, in cupy_backends.cuda.api.runtime.malloc3DArray
E       check_status(status)
E     File "cupy_backends/cuda/api/runtime.pyx", line 265, in cupy_backends.cuda.api.runtime.check_status
E       raise CUDARuntimeError(status)
E   cupy_backends.cuda.api.runtime.CUDARuntimeError: hipErrorUnknown: hipErrorUnknown

cupy_backends/cuda/api/runtime.pyx:265: AssertionError
----------------------------- Captured stderr call -----------------------------
Traceback (most recent call last):
  File "cupy_backends/cuda/api/runtime.pyx", line 644, in cupy_backends.cuda.api.runtime.freeArray
    check_status(status)
  File "cupy_backends/cuda/api/runtime.pyx", line 265, in cupy_backends.cuda.api.runtime.check_status
    raise CUDARuntimeError(status)
cupy_backends.cuda.api.runtime.CUDARuntimeError: hipErrorUnknown: hipErrorUnknown
_ TestAffineTransformTextureMemory.test_affine_transform_texture_memory[_param_304_{mode='nearest', order=1, output=None, output_shape=10, shape=(100, 100), theta=0}] _

self = <<cupyx_tests.scipy_tests.ndimage_tests.test_interpolation.TestAffineTransformTextureMemory object at 0x7fab372577f0>  parameter: {'mode': 'nearest', 'order': 1, 'output': None, 'output_shape': 10, 'shape': (100, 100), 'theta': 0}>
xp = <module 'cupy' from '/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.hXnTrEAC7u/cupy/cupy/__init__.py'>
scp = <module 'cupyx.scipy' from '/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.hXnTrEAC7u/cupy/cupyx/scipy/__init__.py'>

    @testing.numpy_cupy_allclose(atol=0.1, scipy_name='scp')
    def test_affine_transform_texture_memory(self, xp, scp):
        a = xp.ones(self.shape, dtype=xp.float32)
        center = numpy.divide(numpy.subtract(self.shape, 1), 2)
    
        if len(self.shape) == 2:
            matrix = self._2d_rotation_matrix(self.theta, center)
        elif len(self.shape) == 3:
            matrix = self._3d_rotation_matrix(self.theta, center)
        else:
            return pytest.xfail('Unsupported shape')
    
        if self.output == 'empty':
            output = xp.empty(self.shape, dtype=xp.float32)
            if self.output_shape:
                return pytest.skip('This combination is tested in '
                                   'test_invalid_texture_arguments')
        else:
            output = self.output
    
        if self.output_shape:
            output_shape = (self.output_shape, ) * len(self.shape)
        else:
            output_shape = self.output_shape
    
        if xp == cupy:
            m = cupyx.scipy.ndimage.affine_transform
            matrix = cupy.array(matrix)
>           return m(a, matrix, output_shape=output_shape,
                     output=output, order=self.order,
                     mode=self.mode, texture_memory=True)

tests/cupyx_tests/scipy_tests/ndimage_tests/test_interpolation.py:398: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
cupyx/scipy/ndimage/interpolation.py:376: in affine_transform
    return _texture.affine_transformation(data=input,
cupyx/_texture.py:168: in affine_transformation
    texture_object = _create_texture_object(data,
cupyx/_texture.py:98: in _create_texture_object
    array = texture.CUDAarray(texture_fmt, *data.shape[::-1])
cupy/cuda/texture.pyx:296: in cupy.cuda.texture.CUDAarray.__init__
    self.ptr = runtime.malloc3DArray(desc.ptr, width, height, depth,
cupy_backends/cuda/api/runtime.pyx:593: in cupy_backends.cuda.api.runtime.malloc3DArray
    check_status(status)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

>   raise CUDARuntimeError(status)
E   AssertionError: Only cupy raises error
E   
E   Traceback (most recent call last):
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.hXnTrEAC7u/cupy/cupy/testing/_helper.py", line 47, in _call_func
E       result = impl(self, *args, **kw)
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.hXnTrEAC7u/cupy/tests/cupyx_tests/scipy_tests/ndimage_tests/test_interpolation.py", line 398, in test_affine_transform_texture_memory
E       return m(a, matrix, output_shape=output_shape,
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.hXnTrEAC7u/cupy/cupyx/scipy/ndimage/interpolation.py", line 376, in affine_transform
E       return _texture.affine_transformation(data=input,
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.hXnTrEAC7u/cupy/cupyx/_texture.py", line 168, in affine_transformation
E       texture_object = _create_texture_object(data,
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.hXnTrEAC7u/cupy/cupyx/_texture.py", line 98, in _create_texture_object
E       array = texture.CUDAarray(texture_fmt, *data.shape[::-1])
E     File "cupy/cuda/texture.pyx", line 296, in cupy.cuda.texture.CUDAarray.__init__
E       self.ptr = runtime.malloc3DArray(desc.ptr, width, height, depth,
E     File "cupy_backends/cuda/api/runtime.pyx", line 593, in cupy_backends.cuda.api.runtime.malloc3DArray
E       check_status(status)
E     File "cupy_backends/cuda/api/runtime.pyx", line 265, in cupy_backends.cuda.api.runtime.check_status
E       raise CUDARuntimeError(status)
E   cupy_backends.cuda.api.runtime.CUDARuntimeError: hipErrorUnknown: hipErrorUnknown

cupy_backends/cuda/api/runtime.pyx:265: AssertionError
----------------------------- Captured stderr call -----------------------------
Traceback (most recent call last):
  File "cupy_backends/cuda/api/runtime.pyx", line 644, in cupy_backends.cuda.api.runtime.freeArray
    check_status(status)
  File "cupy_backends/cuda/api/runtime.pyx", line 265, in cupy_backends.cuda.api.runtime.check_status
    raise CUDARuntimeError(status)
cupy_backends.cuda.api.runtime.CUDARuntimeError: hipErrorUnknown: hipErrorUnknown
_ TestAffineTransformTextureMemory.test_affine_transform_texture_memory[_param_305_{mode='nearest', order=1, output=None, output_shape=10, shape=(100, 100), theta=90}] _

self = <<cupyx_tests.scipy_tests.ndimage_tests.test_interpolation.TestAffineTransformTextureMemory object at 0x7fac51109ca0>  parameter: {'mode': 'nearest', 'order': 1, 'output': None, 'output_shape': 10, 'shape': (100, 100), 'theta': 90}>
xp = <module 'cupy' from '/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.hXnTrEAC7u/cupy/cupy/__init__.py'>
scp = <module 'cupyx.scipy' from '/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.hXnTrEAC7u/cupy/cupyx/scipy/__init__.py'>

    @testing.numpy_cupy_allclose(atol=0.1, scipy_name='scp')
    def test_affine_transform_texture_memory(self, xp, scp):
        a = xp.ones(self.shape, dtype=xp.float32)
        center = numpy.divide(numpy.subtract(self.shape, 1), 2)
    
        if len(self.shape) == 2:
            matrix = self._2d_rotation_matrix(self.theta, center)
        elif len(self.shape) == 3:
            matrix = self._3d_rotation_matrix(self.theta, center)
        else:
            return pytest.xfail('Unsupported shape')
    
        if self.output == 'empty':
            output = xp.empty(self.shape, dtype=xp.float32)
            if self.output_shape:
                return pytest.skip('This combination is tested in '
                                   'test_invalid_texture_arguments')
        else:
            output = self.output
    
        if self.output_shape:
            output_shape = (self.output_shape, ) * len(self.shape)
        else:
            output_shape = self.output_shape
    
        if xp == cupy:
            m = cupyx.scipy.ndimage.affine_transform
            matrix = cupy.array(matrix)
>           return m(a, matrix, output_shape=output_shape,
                     output=output, order=self.order,
                     mode=self.mode, texture_memory=True)

tests/cupyx_tests/scipy_tests/ndimage_tests/test_interpolation.py:398: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
cupyx/scipy/ndimage/interpolation.py:376: in affine_transform
    return _texture.affine_transformation(data=input,
cupyx/_texture.py:168: in affine_transformation
    texture_object = _create_texture_object(data,
cupyx/_texture.py:98: in _create_texture_object
    array = texture.CUDAarray(texture_fmt, *data.shape[::-1])
cupy/cuda/texture.pyx:296: in cupy.cuda.texture.CUDAarray.__init__
    self.ptr = runtime.malloc3DArray(desc.ptr, width, height, depth,
cupy_backends/cuda/api/runtime.pyx:593: in cupy_backends.cuda.api.runtime.malloc3DArray
    check_status(status)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

>   raise CUDARuntimeError(status)
E   AssertionError: Only cupy raises error
E   
E   Traceback (most recent call last):
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.hXnTrEAC7u/cupy/cupy/testing/_helper.py", line 47, in _call_func
E       result = impl(self, *args, **kw)
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.hXnTrEAC7u/cupy/tests/cupyx_tests/scipy_tests/ndimage_tests/test_interpolation.py", line 398, in test_affine_transform_texture_memory
E       return m(a, matrix, output_shape=output_shape,
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.hXnTrEAC7u/cupy/cupyx/scipy/ndimage/interpolation.py", line 376, in affine_transform
E       return _texture.affine_transformation(data=input,
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.hXnTrEAC7u/cupy/cupyx/_texture.py", line 168, in affine_transformation
E       texture_object = _create_texture_object(data,
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.hXnTrEAC7u/cupy/cupyx/_texture.py", line 98, in _create_texture_object
E       array = texture.CUDAarray(texture_fmt, *data.shape[::-1])
E     File "cupy/cuda/texture.pyx", line 296, in cupy.cuda.texture.CUDAarray.__init__
E       self.ptr = runtime.malloc3DArray(desc.ptr, width, height, depth,
E     File "cupy_backends/cuda/api/runtime.pyx", line 593, in cupy_backends.cuda.api.runtime.malloc3DArray
E       check_status(status)
E     File "cupy_backends/cuda/api/runtime.pyx", line 265, in cupy_backends.cuda.api.runtime.check_status
E       raise CUDARuntimeError(status)
E   cupy_backends.cuda.api.runtime.CUDARuntimeError: hipErrorUnknown: hipErrorUnknown

cupy_backends/cuda/api/runtime.pyx:265: AssertionError
----------------------------- Captured stderr call -----------------------------
Traceback (most recent call last):
  File "cupy_backends/cuda/api/runtime.pyx", line 644, in cupy_backends.cuda.api.runtime.freeArray
    check_status(status)
  File "cupy_backends/cuda/api/runtime.pyx", line 265, in cupy_backends.cuda.api.runtime.check_status
    raise CUDARuntimeError(status)
cupy_backends.cuda.api.runtime.CUDARuntimeError: hipErrorUnknown: hipErrorUnknown
_ TestAffineTransformTextureMemory.test_affine_transform_texture_memory[_param_306_{mode='nearest', order=1, output=None, output_shape=10, shape=(100, 100), theta=180}] _

self = <<cupyx_tests.scipy_tests.ndimage_tests.test_interpolation.TestAffineTransformTextureMemory object at 0x7fab389a7310>  parameter: {'mode': 'nearest', 'order': 1, 'output': None, 'output_shape': 10, 'shape': (100, 100), 'theta': 180}>
xp = <module 'cupy' from '/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.hXnTrEAC7u/cupy/cupy/__init__.py'>
scp = <module 'cupyx.scipy' from '/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.hXnTrEAC7u/cupy/cupyx/scipy/__init__.py'>

    @testing.numpy_cupy_allclose(atol=0.1, scipy_name='scp')
    def test_affine_transform_texture_memory(self, xp, scp):
        a = xp.ones(self.shape, dtype=xp.float32)
        center = numpy.divide(numpy.subtract(self.shape, 1), 2)
    
        if len(self.shape) == 2:
            matrix = self._2d_rotation_matrix(self.theta, center)
        elif len(self.shape) == 3:
            matrix = self._3d_rotation_matrix(self.theta, center)
        else:
            return pytest.xfail('Unsupported shape')
    
        if self.output == 'empty':
            output = xp.empty(self.shape, dtype=xp.float32)
            if self.output_shape:
                return pytest.skip('This combination is tested in '
                                   'test_invalid_texture_arguments')
        else:
            output = self.output
    
        if self.output_shape:
            output_shape = (self.output_shape, ) * len(self.shape)
        else:
            output_shape = self.output_shape
    
        if xp == cupy:
            m = cupyx.scipy.ndimage.affine_transform
            matrix = cupy.array(matrix)
>           return m(a, matrix, output_shape=output_shape,
                     output=output, order=self.order,
                     mode=self.mode, texture_memory=True)

tests/cupyx_tests/scipy_tests/ndimage_tests/test_interpolation.py:398: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
cupyx/scipy/ndimage/interpolation.py:376: in affine_transform
    return _texture.affine_transformation(data=input,
cupyx/_texture.py:168: in affine_transformation
    texture_object = _create_texture_object(data,
cupyx/_texture.py:98: in _create_texture_object
    array = texture.CUDAarray(texture_fmt, *data.shape[::-1])
cupy/cuda/texture.pyx:296: in cupy.cuda.texture.CUDAarray.__init__
    self.ptr = runtime.malloc3DArray(desc.ptr, width, height, depth,
cupy_backends/cuda/api/runtime.pyx:593: in cupy_backends.cuda.api.runtime.malloc3DArray
    check_status(status)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

>   raise CUDARuntimeError(status)
E   AssertionError: Only cupy raises error
E   
E   Traceback (most recent call last):
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.hXnTrEAC7u/cupy/cupy/testing/_helper.py", line 47, in _call_func
E       result = impl(self, *args, **kw)
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.hXnTrEAC7u/cupy/tests/cupyx_tests/scipy_tests/ndimage_tests/test_interpolation.py", line 398, in test_affine_transform_texture_memory
E       return m(a, matrix, output_shape=output_shape,
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.hXnTrEAC7u/cupy/cupyx/scipy/ndimage/interpolation.py", line 376, in affine_transform
E       return _texture.affine_transformation(data=input,
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.hXnTrEAC7u/cupy/cupyx/_texture.py", line 168, in affine_transformation
E       texture_object = _create_texture_object(data,
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.hXnTrEAC7u/cupy/cupyx/_texture.py", line 98, in _create_texture_object
E       array = texture.CUDAarray(texture_fmt, *data.shape[::-1])
E     File "cupy/cuda/texture.pyx", line 296, in cupy.cuda.texture.CUDAarray.__init__
E       self.ptr = runtime.malloc3DArray(desc.ptr, width, height, depth,
E     File "cupy_backends/cuda/api/runtime.pyx", line 593, in cupy_backends.cuda.api.runtime.malloc3DArray
E       check_status(status)
E     File "cupy_backends/cuda/api/runtime.pyx", line 265, in cupy_backends.cuda.api.runtime.check_status
E       raise CUDARuntimeError(status)
E   cupy_backends.cuda.api.runtime.CUDARuntimeError: hipErrorUnknown: hipErrorUnknown

cupy_backends/cuda/api/runtime.pyx:265: AssertionError
----------------------------- Captured stderr call -----------------------------
Traceback (most recent call last):
  File "cupy_backends/cuda/api/runtime.pyx", line 644, in cupy_backends.cuda.api.runtime.freeArray
    check_status(status)
  File "cupy_backends/cuda/api/runtime.pyx", line 265, in cupy_backends.cuda.api.runtime.check_status
    raise CUDARuntimeError(status)
cupy_backends.cuda.api.runtime.CUDARuntimeError: hipErrorUnknown: hipErrorUnknown
_ TestAffineTransformTextureMemory.test_affine_transform_texture_memory[_param_307_{mode='nearest', order=1, output=None, output_shape=10, shape=(100, 100), theta=270}] _

self = <<cupyx_tests.scipy_tests.ndimage_tests.test_interpolation.TestAffineTransformTextureMemory object at 0x7fab3727bbe0>  parameter: {'mode': 'nearest', 'order': 1, 'output': None, 'output_shape': 10, 'shape': (100, 100), 'theta': 270}>
xp = <module 'cupy' from '/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.hXnTrEAC7u/cupy/cupy/__init__.py'>
scp = <module 'cupyx.scipy' from '/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.hXnTrEAC7u/cupy/cupyx/scipy/__init__.py'>

    @testing.numpy_cupy_allclose(atol=0.1, scipy_name='scp')
    def test_affine_transform_texture_memory(self, xp, scp):
        a = xp.ones(self.shape, dtype=xp.float32)
        center = numpy.divide(numpy.subtract(self.shape, 1), 2)
    
        if len(self.shape) == 2:
            matrix = self._2d_rotation_matrix(self.theta, center)
        elif len(self.shape) == 3:
            matrix = self._3d_rotation_matrix(self.theta, center)
        else:
            return pytest.xfail('Unsupported shape')
    
        if self.output == 'empty':
            output = xp.empty(self.shape, dtype=xp.float32)
            if self.output_shape:
                return pytest.skip('This combination is tested in '
                                   'test_invalid_texture_arguments')
        else:
            output = self.output
    
        if self.output_shape:
            output_shape = (self.output_shape, ) * len(self.shape)
        else:
            output_shape = self.output_shape
    
        if xp == cupy:
            m = cupyx.scipy.ndimage.affine_transform
            matrix = cupy.array(matrix)
>           return m(a, matrix, output_shape=output_shape,
                     output=output, order=self.order,
                     mode=self.mode, texture_memory=True)

tests/cupyx_tests/scipy_tests/ndimage_tests/test_interpolation.py:398: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
cupyx/scipy/ndimage/interpolation.py:376: in affine_transform
    return _texture.affine_transformation(data=input,
cupyx/_texture.py:168: in affine_transformation
    texture_object = _create_texture_object(data,
cupyx/_texture.py:98: in _create_texture_object
    array = texture.CUDAarray(texture_fmt, *data.shape[::-1])
cupy/cuda/texture.pyx:296: in cupy.cuda.texture.CUDAarray.__init__
    self.ptr = runtime.malloc3DArray(desc.ptr, width, height, depth,
cupy_backends/cuda/api/runtime.pyx:593: in cupy_backends.cuda.api.runtime.malloc3DArray
    check_status(status)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

>   raise CUDARuntimeError(status)
E   AssertionError: Only cupy raises error
E   
E   Traceback (most recent call last):
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.hXnTrEAC7u/cupy/cupy/testing/_helper.py", line 47, in _call_func
E       result = impl(self, *args, **kw)
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.hXnTrEAC7u/cupy/tests/cupyx_tests/scipy_tests/ndimage_tests/test_interpolation.py", line 398, in test_affine_transform_texture_memory
E       return m(a, matrix, output_shape=output_shape,
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.hXnTrEAC7u/cupy/cupyx/scipy/ndimage/interpolation.py", line 376, in affine_transform
E       return _texture.affine_transformation(data=input,
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.hXnTrEAC7u/cupy/cupyx/_texture.py", line 168, in affine_transformation
E       texture_object = _create_texture_object(data,
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.hXnTrEAC7u/cupy/cupyx/_texture.py", line 98, in _create_texture_object
E       array = texture.CUDAarray(texture_fmt, *data.shape[::-1])
E     File "cupy/cuda/texture.pyx", line 296, in cupy.cuda.texture.CUDAarray.__init__
E       self.ptr = runtime.malloc3DArray(desc.ptr, width, height, depth,
E     File "cupy_backends/cuda/api/runtime.pyx", line 593, in cupy_backends.cuda.api.runtime.malloc3DArray
E       check_status(status)
E     File "cupy_backends/cuda/api/runtime.pyx", line 265, in cupy_backends.cuda.api.runtime.check_status
E       raise CUDARuntimeError(status)
E   cupy_backends.cuda.api.runtime.CUDARuntimeError: hipErrorUnknown: hipErrorUnknown

cupy_backends/cuda/api/runtime.pyx:265: AssertionError
----------------------------- Captured stderr call -----------------------------
Traceback (most recent call last):
  File "cupy_backends/cuda/api/runtime.pyx", line 644, in cupy_backends.cuda.api.runtime.freeArray
    check_status(status)
  File "cupy_backends/cuda/api/runtime.pyx", line 265, in cupy_backends.cuda.api.runtime.check_status
    raise CUDARuntimeError(status)
cupy_backends.cuda.api.runtime.CUDARuntimeError: hipErrorUnknown: hipErrorUnknown
_ TestAffineTransformTextureMemory.test_affine_transform_texture_memory[_param_308_{mode='nearest', order=1, output=None, output_shape=10, shape=(10, 20), theta=0}] _

self = <<cupyx_tests.scipy_tests.ndimage_tests.test_interpolation.TestAffineTransformTextureMemory object at 0x7fab37197130>  parameter: {'mode': 'nearest', 'order': 1, 'output': None, 'output_shape': 10, 'shape': (10, 20), 'theta': 0}>
xp = <module 'cupy' from '/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.hXnTrEAC7u/cupy/cupy/__init__.py'>
scp = <module 'cupyx.scipy' from '/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.hXnTrEAC7u/cupy/cupyx/scipy/__init__.py'>

    @testing.numpy_cupy_allclose(atol=0.1, scipy_name='scp')
    def test_affine_transform_texture_memory(self, xp, scp):
        a = xp.ones(self.shape, dtype=xp.float32)
        center = numpy.divide(numpy.subtract(self.shape, 1), 2)
    
        if len(self.shape) == 2:
            matrix = self._2d_rotation_matrix(self.theta, center)
        elif len(self.shape) == 3:
            matrix = self._3d_rotation_matrix(self.theta, center)
        else:
            return pytest.xfail('Unsupported shape')
    
        if self.output == 'empty':
            output = xp.empty(self.shape, dtype=xp.float32)
            if self.output_shape:
                return pytest.skip('This combination is tested in '
                                   'test_invalid_texture_arguments')
        else:
            output = self.output
    
        if self.output_shape:
            output_shape = (self.output_shape, ) * len(self.shape)
        else:
            output_shape = self.output_shape
    
        if xp == cupy:
            m = cupyx.scipy.ndimage.affine_transform
            matrix = cupy.array(matrix)
>           return m(a, matrix, output_shape=output_shape,
                     output=output, order=self.order,
                     mode=self.mode, texture_memory=True)

tests/cupyx_tests/scipy_tests/ndimage_tests/test_interpolation.py:398: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
cupyx/scipy/ndimage/interpolation.py:376: in affine_transform
    return _texture.affine_transformation(data=input,
cupyx/_texture.py:168: in affine_transformation
    texture_object = _create_texture_object(data,
cupyx/_texture.py:98: in _create_texture_object
    array = texture.CUDAarray(texture_fmt, *data.shape[::-1])
cupy/cuda/texture.pyx:296: in cupy.cuda.texture.CUDAarray.__init__
    self.ptr = runtime.malloc3DArray(desc.ptr, width, height, depth,
cupy_backends/cuda/api/runtime.pyx:593: in cupy_backends.cuda.api.runtime.malloc3DArray
    check_status(status)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

>   raise CUDARuntimeError(status)
E   AssertionError: Only cupy raises error
E   
E   Traceback (most recent call last):
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.hXnTrEAC7u/cupy/cupy/testing/_helper.py", line 47, in _call_func
E       result = impl(self, *args, **kw)
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.hXnTrEAC7u/cupy/tests/cupyx_tests/scipy_tests/ndimage_tests/test_interpolation.py", line 398, in test_affine_transform_texture_memory
E       return m(a, matrix, output_shape=output_shape,
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.hXnTrEAC7u/cupy/cupyx/scipy/ndimage/interpolation.py", line 376, in affine_transform
E       return _texture.affine_transformation(data=input,
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.hXnTrEAC7u/cupy/cupyx/_texture.py", line 168, in affine_transformation
E       texture_object = _create_texture_object(data,
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.hXnTrEAC7u/cupy/cupyx/_texture.py", line 98, in _create_texture_object
E       array = texture.CUDAarray(texture_fmt, *data.shape[::-1])
E     File "cupy/cuda/texture.pyx", line 296, in cupy.cuda.texture.CUDAarray.__init__
E       self.ptr = runtime.malloc3DArray(desc.ptr, width, height, depth,
E     File "cupy_backends/cuda/api/runtime.pyx", line 593, in cupy_backends.cuda.api.runtime.malloc3DArray
E       check_status(status)
E     File "cupy_backends/cuda/api/runtime.pyx", line 265, in cupy_backends.cuda.api.runtime.check_status
E       raise CUDARuntimeError(status)
E   cupy_backends.cuda.api.runtime.CUDARuntimeError: hipErrorUnknown: hipErrorUnknown

cupy_backends/cuda/api/runtime.pyx:265: AssertionError
----------------------------- Captured stderr call -----------------------------
Traceback (most recent call last):
  File "cupy_backends/cuda/api/runtime.pyx", line 644, in cupy_backends.cuda.api.runtime.freeArray
    check_status(status)
  File "cupy_backends/cuda/api/runtime.pyx", line 265, in cupy_backends.cuda.api.runtime.check_status
    raise CUDARuntimeError(status)
cupy_backends.cuda.api.runtime.CUDARuntimeError: hipErrorUnknown: hipErrorUnknown
_ TestAffineTransformTextureMemory.test_affine_transform_texture_memory[_param_309_{mode='nearest', order=1, output=None, output_shape=10, shape=(10, 20), theta=90}] _

self = <<cupyx_tests.scipy_tests.ndimage_tests.test_interpolation.TestAffineTransformTextureMemory object at 0x7fab3708f1f0>  parameter: {'mode': 'nearest', 'order': 1, 'output': None, 'output_shape': 10, 'shape': (10, 20), 'theta': 90}>
xp = <module 'cupy' from '/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.hXnTrEAC7u/cupy/cupy/__init__.py'>
scp = <module 'cupyx.scipy' from '/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.hXnTrEAC7u/cupy/cupyx/scipy/__init__.py'>

    @testing.numpy_cupy_allclose(atol=0.1, scipy_name='scp')
    def test_affine_transform_texture_memory(self, xp, scp):
        a = xp.ones(self.shape, dtype=xp.float32)
        center = numpy.divide(numpy.subtract(self.shape, 1), 2)
    
        if len(self.shape) == 2:
            matrix = self._2d_rotation_matrix(self.theta, center)
        elif len(self.shape) == 3:
            matrix = self._3d_rotation_matrix(self.theta, center)
        else:
            return pytest.xfail('Unsupported shape')
    
        if self.output == 'empty':
            output = xp.empty(self.shape, dtype=xp.float32)
            if self.output_shape:
                return pytest.skip('This combination is tested in '
                                   'test_invalid_texture_arguments')
        else:
            output = self.output
    
        if self.output_shape:
            output_shape = (self.output_shape, ) * len(self.shape)
        else:
            output_shape = self.output_shape
    
        if xp == cupy:
            m = cupyx.scipy.ndimage.affine_transform
            matrix = cupy.array(matrix)
>           return m(a, matrix, output_shape=output_shape,
                     output=output, order=self.order,
                     mode=self.mode, texture_memory=True)

tests/cupyx_tests/scipy_tests/ndimage_tests/test_interpolation.py:398: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
cupyx/scipy/ndimage/interpolation.py:376: in affine_transform
    return _texture.affine_transformation(data=input,
cupyx/_texture.py:168: in affine_transformation
    texture_object = _create_texture_object(data,
cupyx/_texture.py:98: in _create_texture_object
    array = texture.CUDAarray(texture_fmt, *data.shape[::-1])
cupy/cuda/texture.pyx:296: in cupy.cuda.texture.CUDAarray.__init__
    self.ptr = runtime.malloc3DArray(desc.ptr, width, height, depth,
cupy_backends/cuda/api/runtime.pyx:593: in cupy_backends.cuda.api.runtime.malloc3DArray
    check_status(status)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

>   raise CUDARuntimeError(status)
E   AssertionError: Only cupy raises error
E   
E   Traceback (most recent call last):
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.hXnTrEAC7u/cupy/cupy/testing/_helper.py", line 47, in _call_func
E       result = impl(self, *args, **kw)
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.hXnTrEAC7u/cupy/tests/cupyx_tests/scipy_tests/ndimage_tests/test_interpolation.py", line 398, in test_affine_transform_texture_memory
E       return m(a, matrix, output_shape=output_shape,
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.hXnTrEAC7u/cupy/cupyx/scipy/ndimage/interpolation.py", line 376, in affine_transform
E       return _texture.affine_transformation(data=input,
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.hXnTrEAC7u/cupy/cupyx/_texture.py", line 168, in affine_transformation
E       texture_object = _create_texture_object(data,
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.hXnTrEAC7u/cupy/cupyx/_texture.py", line 98, in _create_texture_object
E       array = texture.CUDAarray(texture_fmt, *data.shape[::-1])
E     File "cupy/cuda/texture.pyx", line 296, in cupy.cuda.texture.CUDAarray.__init__
E       self.ptr = runtime.malloc3DArray(desc.ptr, width, height, depth,
E     File "cupy_backends/cuda/api/runtime.pyx", line 593, in cupy_backends.cuda.api.runtime.malloc3DArray
E       check_status(status)
E     File "cupy_backends/cuda/api/runtime.pyx", line 265, in cupy_backends.cuda.api.runtime.check_status
E       raise CUDARuntimeError(status)
E   cupy_backends.cuda.api.runtime.CUDARuntimeError: hipErrorUnknown: hipErrorUnknown

cupy_backends/cuda/api/runtime.pyx:265: AssertionError
----------------------------- Captured stderr call -----------------------------
Traceback (most recent call last):
  File "cupy_backends/cuda/api/runtime.pyx", line 644, in cupy_backends.cuda.api.runtime.freeArray
    check_status(status)
  File "cupy_backends/cuda/api/runtime.pyx", line 265, in cupy_backends.cuda.api.runtime.check_status
    raise CUDARuntimeError(status)
cupy_backends.cuda.api.runtime.CUDARuntimeError: hipErrorUnknown: hipErrorUnknown
_ TestAffineTransformTextureMemory.test_affine_transform_texture_memory[_param_310_{mode='nearest', order=1, output=None, output_shape=10, shape=(10, 20), theta=180}] _

self = <<cupyx_tests.scipy_tests.ndimage_tests.test_interpolation.TestAffineTransformTextureMemory object at 0x7fab36fcf670>  parameter: {'mode': 'nearest', 'order': 1, 'output': None, 'output_shape': 10, 'shape': (10, 20), 'theta': 180}>
xp = <module 'cupy' from '/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.hXnTrEAC7u/cupy/cupy/__init__.py'>
scp = <module 'cupyx.scipy' from '/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.hXnTrEAC7u/cupy/cupyx/scipy/__init__.py'>

    @testing.numpy_cupy_allclose(atol=0.1, scipy_name='scp')
    def test_affine_transform_texture_memory(self, xp, scp):
        a = xp.ones(self.shape, dtype=xp.float32)
        center = numpy.divide(numpy.subtract(self.shape, 1), 2)
    
        if len(self.shape) == 2:
            matrix = self._2d_rotation_matrix(self.theta, center)
        elif len(self.shape) == 3:
            matrix = self._3d_rotation_matrix(self.theta, center)
        else:
            return pytest.xfail('Unsupported shape')
    
        if self.output == 'empty':
            output = xp.empty(self.shape, dtype=xp.float32)
            if self.output_shape:
                return pytest.skip('This combination is tested in '
                                   'test_invalid_texture_arguments')
        else:
            output = self.output
    
        if self.output_shape:
            output_shape = (self.output_shape, ) * len(self.shape)
        else:
            output_shape = self.output_shape
    
        if xp == cupy:
            m = cupyx.scipy.ndimage.affine_transform
            matrix = cupy.array(matrix)
>           return m(a, matrix, output_shape=output_shape,
                     output=output, order=self.order,
                     mode=self.mode, texture_memory=True)

tests/cupyx_tests/scipy_tests/ndimage_tests/test_interpolation.py:398: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
cupyx/scipy/ndimage/interpolation.py:376: in affine_transform
    return _texture.affine_transformation(data=input,
cupyx/_texture.py:168: in affine_transformation
    texture_object = _create_texture_object(data,
cupyx/_texture.py:98: in _create_texture_object
    array = texture.CUDAarray(texture_fmt, *data.shape[::-1])
cupy/cuda/texture.pyx:296: in cupy.cuda.texture.CUDAarray.__init__
    self.ptr = runtime.malloc3DArray(desc.ptr, width, height, depth,
cupy_backends/cuda/api/runtime.pyx:593: in cupy_backends.cuda.api.runtime.malloc3DArray
    check_status(status)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

>   raise CUDARuntimeError(status)
E   AssertionError: Only cupy raises error
E   
E   Traceback (most recent call last):
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.hXnTrEAC7u/cupy/cupy/testing/_helper.py", line 47, in _call_func
E       result = impl(self, *args, **kw)
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.hXnTrEAC7u/cupy/tests/cupyx_tests/scipy_tests/ndimage_tests/test_interpolation.py", line 398, in test_affine_transform_texture_memory
E       return m(a, matrix, output_shape=output_shape,
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.hXnTrEAC7u/cupy/cupyx/scipy/ndimage/interpolation.py", line 376, in affine_transform
E       return _texture.affine_transformation(data=input,
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.hXnTrEAC7u/cupy/cupyx/_texture.py", line 168, in affine_transformation
E       texture_object = _create_texture_object(data,
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.hXnTrEAC7u/cupy/cupyx/_texture.py", line 98, in _create_texture_object
E       array = texture.CUDAarray(texture_fmt, *data.shape[::-1])
E     File "cupy/cuda/texture.pyx", line 296, in cupy.cuda.texture.CUDAarray.__init__
E       self.ptr = runtime.malloc3DArray(desc.ptr, width, height, depth,
E     File "cupy_backends/cuda/api/runtime.pyx", line 593, in cupy_backends.cuda.api.runtime.malloc3DArray
E       check_status(status)
E     File "cupy_backends/cuda/api/runtime.pyx", line 265, in cupy_backends.cuda.api.runtime.check_status
E       raise CUDARuntimeError(status)
E   cupy_backends.cuda.api.runtime.CUDARuntimeError: hipErrorUnknown: hipErrorUnknown

cupy_backends/cuda/api/runtime.pyx:265: AssertionError
----------------------------- Captured stderr call -----------------------------
Traceback (most recent call last):
  File "cupy_backends/cuda/api/runtime.pyx", line 644, in cupy_backends.cuda.api.runtime.freeArray
    check_status(status)
  File "cupy_backends/cuda/api/runtime.pyx", line 265, in cupy_backends.cuda.api.runtime.check_status
    raise CUDARuntimeError(status)
cupy_backends.cuda.api.runtime.CUDARuntimeError: hipErrorUnknown: hipErrorUnknown
_ TestAffineTransformTextureMemory.test_affine_transform_texture_memory[_param_311_{mode='nearest', order=1, output=None, output_shape=10, shape=(10, 20), theta=270}] _

self = <<cupyx_tests.scipy_tests.ndimage_tests.test_interpolation.TestAffineTransformTextureMemory object at 0x7fab36eaa490>  parameter: {'mode': 'nearest', 'order': 1, 'output': None, 'output_shape': 10, 'shape': (10, 20), 'theta': 270}>
xp = <module 'cupy' from '/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.hXnTrEAC7u/cupy/cupy/__init__.py'>
scp = <module 'cupyx.scipy' from '/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.hXnTrEAC7u/cupy/cupyx/scipy/__init__.py'>

    @testing.numpy_cupy_allclose(atol=0.1, scipy_name='scp')
    def test_affine_transform_texture_memory(self, xp, scp):
        a = xp.ones(self.shape, dtype=xp.float32)
        center = numpy.divide(numpy.subtract(self.shape, 1), 2)
    
        if len(self.shape) == 2:
            matrix = self._2d_rotation_matrix(self.theta, center)
        elif len(self.shape) == 3:
            matrix = self._3d_rotation_matrix(self.theta, center)
        else:
            return pytest.xfail('Unsupported shape')
    
        if self.output == 'empty':
            output = xp.empty(self.shape, dtype=xp.float32)
            if self.output_shape:
                return pytest.skip('This combination is tested in '
                                   'test_invalid_texture_arguments')
        else:
            output = self.output
    
        if self.output_shape:
            output_shape = (self.output_shape, ) * len(self.shape)
        else:
            output_shape = self.output_shape
    
        if xp == cupy:
            m = cupyx.scipy.ndimage.affine_transform
            matrix = cupy.array(matrix)
>           return m(a, matrix, output_shape=output_shape,
                     output=output, order=self.order,
                     mode=self.mode, texture_memory=True)

tests/cupyx_tests/scipy_tests/ndimage_tests/test_interpolation.py:398: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
cupyx/scipy/ndimage/interpolation.py:376: in affine_transform
    return _texture.affine_transformation(data=input,
cupyx/_texture.py:168: in affine_transformation
    texture_object = _create_texture_object(data,
cupyx/_texture.py:98: in _create_texture_object
    array = texture.CUDAarray(texture_fmt, *data.shape[::-1])
cupy/cuda/texture.pyx:296: in cupy.cuda.texture.CUDAarray.__init__
    self.ptr = runtime.malloc3DArray(desc.ptr, width, height, depth,
cupy_backends/cuda/api/runtime.pyx:593: in cupy_backends.cuda.api.runtime.malloc3DArray
    check_status(status)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

>   raise CUDARuntimeError(status)
E   AssertionError: Only cupy raises error
E   
E   Traceback (most recent call last):
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.hXnTrEAC7u/cupy/cupy/testing/_helper.py", line 47, in _call_func
E       result = impl(self, *args, **kw)
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.hXnTrEAC7u/cupy/tests/cupyx_tests/scipy_tests/ndimage_tests/test_interpolation.py", line 398, in test_affine_transform_texture_memory
E       return m(a, matrix, output_shape=output_shape,
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.hXnTrEAC7u/cupy/cupyx/scipy/ndimage/interpolation.py", line 376, in affine_transform
E       return _texture.affine_transformation(data=input,
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.hXnTrEAC7u/cupy/cupyx/_texture.py", line 168, in affine_transformation
E       texture_object = _create_texture_object(data,
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.hXnTrEAC7u/cupy/cupyx/_texture.py", line 98, in _create_texture_object
E       array = texture.CUDAarray(texture_fmt, *data.shape[::-1])
E     File "cupy/cuda/texture.pyx", line 296, in cupy.cuda.texture.CUDAarray.__init__
E       self.ptr = runtime.malloc3DArray(desc.ptr, width, height, depth,
E     File "cupy_backends/cuda/api/runtime.pyx", line 593, in cupy_backends.cuda.api.runtime.malloc3DArray
E       check_status(status)
E     File "cupy_backends/cuda/api/runtime.pyx", line 265, in cupy_backends.cuda.api.runtime.check_status
E       raise CUDARuntimeError(status)
E   cupy_backends.cuda.api.runtime.CUDARuntimeError: hipErrorUnknown: hipErrorUnknown

cupy_backends/cuda/api/runtime.pyx:265: AssertionError
----------------------------- Captured stderr call -----------------------------
Traceback (most recent call last):
  File "cupy_backends/cuda/api/runtime.pyx", line 644, in cupy_backends.cuda.api.runtime.freeArray
    check_status(status)
  File "cupy_backends/cuda/api/runtime.pyx", line 265, in cupy_backends.cuda.api.runtime.check_status
    raise CUDARuntimeError(status)
cupy_backends.cuda.api.runtime.CUDARuntimeError: hipErrorUnknown: hipErrorUnknown
_ TestAffineTransformTextureMemory.test_affine_transform_texture_memory[_param_312_{mode='nearest', order=1, output=None, output_shape=10, shape=(10, 10, 10), theta=0}] _

self = <<cupyx_tests.scipy_tests.ndimage_tests.test_interpolation.TestAffineTransformTextureMemory object at 0x7fab36f7f6d0>  parameter: {'mode': 'nearest', 'order': 1, 'output': None, 'output_shape': 10, 'shape': (10, 10, 10), 'theta': 0}>
xp = <module 'cupy' from '/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.hXnTrEAC7u/cupy/cupy/__init__.py'>
scp = <module 'cupyx.scipy' from '/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.hXnTrEAC7u/cupy/cupyx/scipy/__init__.py'>

    @testing.numpy_cupy_allclose(atol=0.1, scipy_name='scp')
    def test_affine_transform_texture_memory(self, xp, scp):
        a = xp.ones(self.shape, dtype=xp.float32)
        center = numpy.divide(numpy.subtract(self.shape, 1), 2)
    
        if len(self.shape) == 2:
            matrix = self._2d_rotation_matrix(self.theta, center)
        elif len(self.shape) == 3:
            matrix = self._3d_rotation_matrix(self.theta, center)
        else:
            return pytest.xfail('Unsupported shape')
    
        if self.output == 'empty':
            output = xp.empty(self.shape, dtype=xp.float32)
            if self.output_shape:
                return pytest.skip('This combination is tested in '
                                   'test_invalid_texture_arguments')
        else:
            output = self.output
    
        if self.output_shape:
            output_shape = (self.output_shape, ) * len(self.shape)
        else:
            output_shape = self.output_shape
    
        if xp == cupy:
            m = cupyx.scipy.ndimage.affine_transform
            matrix = cupy.array(matrix)
>           return m(a, matrix, output_shape=output_shape,
                     output=output, order=self.order,
                     mode=self.mode, texture_memory=True)

tests/cupyx_tests/scipy_tests/ndimage_tests/test_interpolation.py:398: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
cupyx/scipy/ndimage/interpolation.py:376: in affine_transform
    return _texture.affine_transformation(data=input,
cupyx/_texture.py:168: in affine_transformation
    texture_object = _create_texture_object(data,
cupyx/_texture.py:98: in _create_texture_object
    array = texture.CUDAarray(texture_fmt, *data.shape[::-1])
cupy/cuda/texture.pyx:296: in cupy.cuda.texture.CUDAarray.__init__
    self.ptr = runtime.malloc3DArray(desc.ptr, width, height, depth,
cupy_backends/cuda/api/runtime.pyx:593: in cupy_backends.cuda.api.runtime.malloc3DArray
    check_status(status)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

>   raise CUDARuntimeError(status)
E   AssertionError: Only cupy raises error
E   
E   Traceback (most recent call last):
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.hXnTrEAC7u/cupy/cupy/testing/_helper.py", line 47, in _call_func
E       result = impl(self, *args, **kw)
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.hXnTrEAC7u/cupy/tests/cupyx_tests/scipy_tests/ndimage_tests/test_interpolation.py", line 398, in test_affine_transform_texture_memory
E       return m(a, matrix, output_shape=output_shape,
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.hXnTrEAC7u/cupy/cupyx/scipy/ndimage/interpolation.py", line 376, in affine_transform
E       return _texture.affine_transformation(data=input,
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.hXnTrEAC7u/cupy/cupyx/_texture.py", line 168, in affine_transformation
E       texture_object = _create_texture_object(data,
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.hXnTrEAC7u/cupy/cupyx/_texture.py", line 98, in _create_texture_object
E       array = texture.CUDAarray(texture_fmt, *data.shape[::-1])
E     File "cupy/cuda/texture.pyx", line 296, in cupy.cuda.texture.CUDAarray.__init__
E       self.ptr = runtime.malloc3DArray(desc.ptr, width, height, depth,
E     File "cupy_backends/cuda/api/runtime.pyx", line 593, in cupy_backends.cuda.api.runtime.malloc3DArray
E       check_status(status)
E     File "cupy_backends/cuda/api/runtime.pyx", line 265, in cupy_backends.cuda.api.runtime.check_status
E       raise CUDARuntimeError(status)
E   cupy_backends.cuda.api.runtime.CUDARuntimeError: hipErrorUnknown: hipErrorUnknown

cupy_backends/cuda/api/runtime.pyx:265: AssertionError
----------------------------- Captured stderr call -----------------------------
Traceback (most recent call last):
  File "cupy_backends/cuda/api/runtime.pyx", line 644, in cupy_backends.cuda.api.runtime.freeArray
    check_status(status)
  File "cupy_backends/cuda/api/runtime.pyx", line 265, in cupy_backends.cuda.api.runtime.check_status
    raise CUDARuntimeError(status)
cupy_backends.cuda.api.runtime.CUDARuntimeError: hipErrorUnknown: hipErrorUnknown
_ TestAffineTransformTextureMemory.test_affine_transform_texture_memory[_param_313_{mode='nearest', order=1, output=None, output_shape=10, shape=(10, 10, 10), theta=90}] _

self = <<cupyx_tests.scipy_tests.ndimage_tests.test_interpolation.TestAffineTransformTextureMemory object at 0x7fab38af5670>  parameter: {'mode': 'nearest', 'order': 1, 'output': None, 'output_shape': 10, 'shape': (10, 10, 10), 'theta': 90}>
xp = <module 'cupy' from '/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.hXnTrEAC7u/cupy/cupy/__init__.py'>
scp = <module 'cupyx.scipy' from '/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.hXnTrEAC7u/cupy/cupyx/scipy/__init__.py'>

    @testing.numpy_cupy_allclose(atol=0.1, scipy_name='scp')
    def test_affine_transform_texture_memory(self, xp, scp):
        a = xp.ones(self.shape, dtype=xp.float32)
        center = numpy.divide(numpy.subtract(self.shape, 1), 2)
    
        if len(self.shape) == 2:
            matrix = self._2d_rotation_matrix(self.theta, center)
        elif len(self.shape) == 3:
            matrix = self._3d_rotation_matrix(self.theta, center)
        else:
            return pytest.xfail('Unsupported shape')
    
        if self.output == 'empty':
            output = xp.empty(self.shape, dtype=xp.float32)
            if self.output_shape:
                return pytest.skip('This combination is tested in '
                                   'test_invalid_texture_arguments')
        else:
            output = self.output
    
        if self.output_shape:
            output_shape = (self.output_shape, ) * len(self.shape)
        else:
            output_shape = self.output_shape
    
        if xp == cupy:
            m = cupyx.scipy.ndimage.affine_transform
            matrix = cupy.array(matrix)
>           return m(a, matrix, output_shape=output_shape,
                     output=output, order=self.order,
                     mode=self.mode, texture_memory=True)

tests/cupyx_tests/scipy_tests/ndimage_tests/test_interpolation.py:398: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
cupyx/scipy/ndimage/interpolation.py:376: in affine_transform
    return _texture.affine_transformation(data=input,
cupyx/_texture.py:168: in affine_transformation
    texture_object = _create_texture_object(data,
cupyx/_texture.py:98: in _create_texture_object
    array = texture.CUDAarray(texture_fmt, *data.shape[::-1])
cupy/cuda/texture.pyx:296: in cupy.cuda.texture.CUDAarray.__init__
    self.ptr = runtime.malloc3DArray(desc.ptr, width, height, depth,
cupy_backends/cuda/api/runtime.pyx:593: in cupy_backends.cuda.api.runtime.malloc3DArray
    check_status(status)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

>   raise CUDARuntimeError(status)
E   AssertionError: Only cupy raises error
E   
E   Traceback (most recent call last):
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.hXnTrEAC7u/cupy/cupy/testing/_helper.py", line 47, in _call_func
E       result = impl(self, *args, **kw)
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.hXnTrEAC7u/cupy/tests/cupyx_tests/scipy_tests/ndimage_tests/test_interpolation.py", line 398, in test_affine_transform_texture_memory
E       return m(a, matrix, output_shape=output_shape,
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.hXnTrEAC7u/cupy/cupyx/scipy/ndimage/interpolation.py", line 376, in affine_transform
E       return _texture.affine_transformation(data=input,
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.hXnTrEAC7u/cupy/cupyx/_texture.py", line 168, in affine_transformation
E       texture_object = _create_texture_object(data,
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.hXnTrEAC7u/cupy/cupyx/_texture.py", line 98, in _create_texture_object
E       array = texture.CUDAarray(texture_fmt, *data.shape[::-1])
E     File "cupy/cuda/texture.pyx", line 296, in cupy.cuda.texture.CUDAarray.__init__
E       self.ptr = runtime.malloc3DArray(desc.ptr, width, height, depth,
E     File "cupy_backends/cuda/api/runtime.pyx", line 593, in cupy_backends.cuda.api.runtime.malloc3DArray
E       check_status(status)
E     File "cupy_backends/cuda/api/runtime.pyx", line 265, in cupy_backends.cuda.api.runtime.check_status
E       raise CUDARuntimeError(status)
E   cupy_backends.cuda.api.runtime.CUDARuntimeError: hipErrorUnknown: hipErrorUnknown

cupy_backends/cuda/api/runtime.pyx:265: AssertionError
----------------------------- Captured stderr call -----------------------------
Traceback (most recent call last):
  File "cupy_backends/cuda/api/runtime.pyx", line 644, in cupy_backends.cuda.api.runtime.freeArray
    check_status(status)
  File "cupy_backends/cuda/api/runtime.pyx", line 265, in cupy_backends.cuda.api.runtime.check_status
    raise CUDARuntimeError(status)
cupy_backends.cuda.api.runtime.CUDARuntimeError: hipErrorUnknown: hipErrorUnknown
_ TestAffineTransformTextureMemory.test_affine_transform_texture_memory[_param_314_{mode='nearest', order=1, output=None, output_shape=10, shape=(10, 10, 10), theta=180}] _

self = <<cupyx_tests.scipy_tests.ndimage_tests.test_interpolation.TestAffineTransformTextureMemory object at 0x7fac510daee0>  parameter: {'mode': 'nearest', 'order': 1, 'output': None, 'output_shape': 10, 'shape': (10, 10, 10), 'theta': 180}>
xp = <module 'cupy' from '/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.hXnTrEAC7u/cupy/cupy/__init__.py'>
scp = <module 'cupyx.scipy' from '/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.hXnTrEAC7u/cupy/cupyx/scipy/__init__.py'>

    @testing.numpy_cupy_allclose(atol=0.1, scipy_name='scp')
    def test_affine_transform_texture_memory(self, xp, scp):
        a = xp.ones(self.shape, dtype=xp.float32)
        center = numpy.divide(numpy.subtract(self.shape, 1), 2)
    
        if len(self.shape) == 2:
            matrix = self._2d_rotation_matrix(self.theta, center)
        elif len(self.shape) == 3:
            matrix = self._3d_rotation_matrix(self.theta, center)
        else:
            return pytest.xfail('Unsupported shape')
    
        if self.output == 'empty':
            output = xp.empty(self.shape, dtype=xp.float32)
            if self.output_shape:
                return pytest.skip('This combination is tested in '
                                   'test_invalid_texture_arguments')
        else:
            output = self.output
    
        if self.output_shape:
            output_shape = (self.output_shape, ) * len(self.shape)
        else:
            output_shape = self.output_shape
    
        if xp == cupy:
            m = cupyx.scipy.ndimage.affine_transform
            matrix = cupy.array(matrix)
>           return m(a, matrix, output_shape=output_shape,
                     output=output, order=self.order,
                     mode=self.mode, texture_memory=True)

tests/cupyx_tests/scipy_tests/ndimage_tests/test_interpolation.py:398: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
cupyx/scipy/ndimage/interpolation.py:376: in affine_transform
    return _texture.affine_transformation(data=input,
cupyx/_texture.py:168: in affine_transformation
    texture_object = _create_texture_object(data,
cupyx/_texture.py:98: in _create_texture_object
    array = texture.CUDAarray(texture_fmt, *data.shape[::-1])
cupy/cuda/texture.pyx:296: in cupy.cuda.texture.CUDAarray.__init__
    self.ptr = runtime.malloc3DArray(desc.ptr, width, height, depth,
cupy_backends/cuda/api/runtime.pyx:593: in cupy_backends.cuda.api.runtime.malloc3DArray
    check_status(status)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

>   raise CUDARuntimeError(status)
E   AssertionError: Only cupy raises error
E   
E   Traceback (most recent call last):
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.hXnTrEAC7u/cupy/cupy/testing/_helper.py", line 47, in _call_func
E       result = impl(self, *args, **kw)
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.hXnTrEAC7u/cupy/tests/cupyx_tests/scipy_tests/ndimage_tests/test_interpolation.py", line 398, in test_affine_transform_texture_memory
E       return m(a, matrix, output_shape=output_shape,
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.hXnTrEAC7u/cupy/cupyx/scipy/ndimage/interpolation.py", line 376, in affine_transform
E       return _texture.affine_transformation(data=input,
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.hXnTrEAC7u/cupy/cupyx/_texture.py", line 168, in affine_transformation
E       texture_object = _create_texture_object(data,
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.hXnTrEAC7u/cupy/cupyx/_texture.py", line 98, in _create_texture_object
E       array = texture.CUDAarray(texture_fmt, *data.shape[::-1])
E     File "cupy/cuda/texture.pyx", line 296, in cupy.cuda.texture.CUDAarray.__init__
E       self.ptr = runtime.malloc3DArray(desc.ptr, width, height, depth,
E     File "cupy_backends/cuda/api/runtime.pyx", line 593, in cupy_backends.cuda.api.runtime.malloc3DArray
E       check_status(status)
E     File "cupy_backends/cuda/api/runtime.pyx", line 265, in cupy_backends.cuda.api.runtime.check_status
E       raise CUDARuntimeError(status)
E   cupy_backends.cuda.api.runtime.CUDARuntimeError: hipErrorUnknown: hipErrorUnknown

cupy_backends/cuda/api/runtime.pyx:265: AssertionError
----------------------------- Captured stderr call -----------------------------
Traceback (most recent call last):
  File "cupy_backends/cuda/api/runtime.pyx", line 644, in cupy_backends.cuda.api.runtime.freeArray
    check_status(status)
  File "cupy_backends/cuda/api/runtime.pyx", line 265, in cupy_backends.cuda.api.runtime.check_status
    raise CUDARuntimeError(status)
cupy_backends.cuda.api.runtime.CUDARuntimeError: hipErrorUnknown: hipErrorUnknown
_ TestAffineTransformTextureMemory.test_affine_transform_texture_memory[_param_315_{mode='nearest', order=1, output=None, output_shape=10, shape=(10, 10, 10), theta=270}] _

self = <<cupyx_tests.scipy_tests.ndimage_tests.test_interpolation.TestAffineTransformTextureMemory object at 0x7fab37129bb0>  parameter: {'mode': 'nearest', 'order': 1, 'output': None, 'output_shape': 10, 'shape': (10, 10, 10), 'theta': 270}>
xp = <module 'cupy' from '/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.hXnTrEAC7u/cupy/cupy/__init__.py'>
scp = <module 'cupyx.scipy' from '/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.hXnTrEAC7u/cupy/cupyx/scipy/__init__.py'>

    @testing.numpy_cupy_allclose(atol=0.1, scipy_name='scp')
    def test_affine_transform_texture_memory(self, xp, scp):
        a = xp.ones(self.shape, dtype=xp.float32)
        center = numpy.divide(numpy.subtract(self.shape, 1), 2)
    
        if len(self.shape) == 2:
            matrix = self._2d_rotation_matrix(self.theta, center)
        elif len(self.shape) == 3:
            matrix = self._3d_rotation_matrix(self.theta, center)
        else:
            return pytest.xfail('Unsupported shape')
    
        if self.output == 'empty':
            output = xp.empty(self.shape, dtype=xp.float32)
            if self.output_shape:
                return pytest.skip('This combination is tested in '
                                   'test_invalid_texture_arguments')
        else:
            output = self.output
    
        if self.output_shape:
            output_shape = (self.output_shape, ) * len(self.shape)
        else:
            output_shape = self.output_shape
    
        if xp == cupy:
            m = cupyx.scipy.ndimage.affine_transform
            matrix = cupy.array(matrix)
>           return m(a, matrix, output_shape=output_shape,
                     output=output, order=self.order,
                     mode=self.mode, texture_memory=True)

tests/cupyx_tests/scipy_tests/ndimage_tests/test_interpolation.py:398: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
cupyx/scipy/ndimage/interpolation.py:376: in affine_transform
    return _texture.affine_transformation(data=input,
cupyx/_texture.py:168: in affine_transformation
    texture_object = _create_texture_object(data,
cupyx/_texture.py:98: in _create_texture_object
    array = texture.CUDAarray(texture_fmt, *data.shape[::-1])
cupy/cuda/texture.pyx:296: in cupy.cuda.texture.CUDAarray.__init__
    self.ptr = runtime.malloc3DArray(desc.ptr, width, height, depth,
cupy_backends/cuda/api/runtime.pyx:593: in cupy_backends.cuda.api.runtime.malloc3DArray
    check_status(status)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

>   raise CUDARuntimeError(status)
E   AssertionError: Only cupy raises error
E   
E   Traceback (most recent call last):
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.hXnTrEAC7u/cupy/cupy/testing/_helper.py", line 47, in _call_func
E       result = impl(self, *args, **kw)
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.hXnTrEAC7u/cupy/tests/cupyx_tests/scipy_tests/ndimage_tests/test_interpolation.py", line 398, in test_affine_transform_texture_memory
E       return m(a, matrix, output_shape=output_shape,
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.hXnTrEAC7u/cupy/cupyx/scipy/ndimage/interpolation.py", line 376, in affine_transform
E       return _texture.affine_transformation(data=input,
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.hXnTrEAC7u/cupy/cupyx/_texture.py", line 168, in affine_transformation
E       texture_object = _create_texture_object(data,
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.hXnTrEAC7u/cupy/cupyx/_texture.py", line 98, in _create_texture_object
E       array = texture.CUDAarray(texture_fmt, *data.shape[::-1])
E     File "cupy/cuda/texture.pyx", line 296, in cupy.cuda.texture.CUDAarray.__init__
E       self.ptr = runtime.malloc3DArray(desc.ptr, width, height, depth,
E     File "cupy_backends/cuda/api/runtime.pyx", line 593, in cupy_backends.cuda.api.runtime.malloc3DArray
E       check_status(status)
E     File "cupy_backends/cuda/api/runtime.pyx", line 265, in cupy_backends.cuda.api.runtime.check_status
E       raise CUDARuntimeError(status)
E   cupy_backends.cuda.api.runtime.CUDARuntimeError: hipErrorUnknown: hipErrorUnknown

cupy_backends/cuda/api/runtime.pyx:265: AssertionError
----------------------------- Captured stderr call -----------------------------
Traceback (most recent call last):
  File "cupy_backends/cuda/api/runtime.pyx", line 644, in cupy_backends.cuda.api.runtime.freeArray
    check_status(status)
  File "cupy_backends/cuda/api/runtime.pyx", line 265, in cupy_backends.cuda.api.runtime.check_status
    raise CUDARuntimeError(status)
cupy_backends.cuda.api.runtime.CUDARuntimeError: hipErrorUnknown: hipErrorUnknown
_ TestAffineTransformTextureMemory.test_affine_transform_texture_memory[_param_316_{mode='nearest', order=1, output=None, output_shape=10, shape=(10, 20, 30), theta=0}] _

self = <<cupyx_tests.scipy_tests.ndimage_tests.test_interpolation.TestAffineTransformTextureMemory object at 0x7fab371b1340>  parameter: {'mode': 'nearest', 'order': 1, 'output': None, 'output_shape': 10, 'shape': (10, 20, 30), 'theta': 0}>
xp = <module 'cupy' from '/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.hXnTrEAC7u/cupy/cupy/__init__.py'>
scp = <module 'cupyx.scipy' from '/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.hXnTrEAC7u/cupy/cupyx/scipy/__init__.py'>

    @testing.numpy_cupy_allclose(atol=0.1, scipy_name='scp')
    def test_affine_transform_texture_memory(self, xp, scp):
        a = xp.ones(self.shape, dtype=xp.float32)
        center = numpy.divide(numpy.subtract(self.shape, 1), 2)
    
        if len(self.shape) == 2:
            matrix = self._2d_rotation_matrix(self.theta, center)
        elif len(self.shape) == 3:
            matrix = self._3d_rotation_matrix(self.theta, center)
        else:
            return pytest.xfail('Unsupported shape')
    
        if self.output == 'empty':
            output = xp.empty(self.shape, dtype=xp.float32)
            if self.output_shape:
                return pytest.skip('This combination is tested in '
                                   'test_invalid_texture_arguments')
        else:
            output = self.output
    
        if self.output_shape:
            output_shape = (self.output_shape, ) * len(self.shape)
        else:
            output_shape = self.output_shape
    
        if xp == cupy:
            m = cupyx.scipy.ndimage.affine_transform
            matrix = cupy.array(matrix)
>           return m(a, matrix, output_shape=output_shape,
                     output=output, order=self.order,
                     mode=self.mode, texture_memory=True)

tests/cupyx_tests/scipy_tests/ndimage_tests/test_interpolation.py:398: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
cupyx/scipy/ndimage/interpolation.py:376: in affine_transform
    return _texture.affine_transformation(data=input,
cupyx/_texture.py:168: in affine_transformation
    texture_object = _create_texture_object(data,
cupyx/_texture.py:98: in _create_texture_object
    array = texture.CUDAarray(texture_fmt, *data.shape[::-1])
cupy/cuda/texture.pyx:296: in cupy.cuda.texture.CUDAarray.__init__
    self.ptr = runtime.malloc3DArray(desc.ptr, width, height, depth,
cupy_backends/cuda/api/runtime.pyx:593: in cupy_backends.cuda.api.runtime.malloc3DArray
    check_status(status)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

>   raise CUDARuntimeError(status)
E   AssertionError: Only cupy raises error
E   
E   Traceback (most recent call last):
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.hXnTrEAC7u/cupy/cupy/testing/_helper.py", line 47, in _call_func
E       result = impl(self, *args, **kw)
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.hXnTrEAC7u/cupy/tests/cupyx_tests/scipy_tests/ndimage_tests/test_interpolation.py", line 398, in test_affine_transform_texture_memory
E       return m(a, matrix, output_shape=output_shape,
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.hXnTrEAC7u/cupy/cupyx/scipy/ndimage/interpolation.py", line 376, in affine_transform
E       return _texture.affine_transformation(data=input,
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.hXnTrEAC7u/cupy/cupyx/_texture.py", line 168, in affine_transformation
E       texture_object = _create_texture_object(data,
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.hXnTrEAC7u/cupy/cupyx/_texture.py", line 98, in _create_texture_object
E       array = texture.CUDAarray(texture_fmt, *data.shape[::-1])
E     File "cupy/cuda/texture.pyx", line 296, in cupy.cuda.texture.CUDAarray.__init__
E       self.ptr = runtime.malloc3DArray(desc.ptr, width, height, depth,
E     File "cupy_backends/cuda/api/runtime.pyx", line 593, in cupy_backends.cuda.api.runtime.malloc3DArray
E       check_status(status)
E     File "cupy_backends/cuda/api/runtime.pyx", line 265, in cupy_backends.cuda.api.runtime.check_status
E       raise CUDARuntimeError(status)
E   cupy_backends.cuda.api.runtime.CUDARuntimeError: hipErrorUnknown: hipErrorUnknown

cupy_backends/cuda/api/runtime.pyx:265: AssertionError
----------------------------- Captured stderr call -----------------------------
Traceback (most recent call last):
  File "cupy_backends/cuda/api/runtime.pyx", line 644, in cupy_backends.cuda.api.runtime.freeArray
    check_status(status)
  File "cupy_backends/cuda/api/runtime.pyx", line 265, in cupy_backends.cuda.api.runtime.check_status
    raise CUDARuntimeError(status)
cupy_backends.cuda.api.runtime.CUDARuntimeError: hipErrorUnknown: hipErrorUnknown
_ TestAffineTransformTextureMemory.test_affine_transform_texture_memory[_param_317_{mode='nearest', order=1, output=None, output_shape=10, shape=(10, 20, 30), theta=90}] _

self = <<cupyx_tests.scipy_tests.ndimage_tests.test_interpolation.TestAffineTransformTextureMemory object at 0x7fab36dce730>  parameter: {'mode': 'nearest', 'order': 1, 'output': None, 'output_shape': 10, 'shape': (10, 20, 30), 'theta': 90}>
xp = <module 'cupy' from '/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.hXnTrEAC7u/cupy/cupy/__init__.py'>
scp = <module 'cupyx.scipy' from '/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.hXnTrEAC7u/cupy/cupyx/scipy/__init__.py'>

    @testing.numpy_cupy_allclose(atol=0.1, scipy_name='scp')
    def test_affine_transform_texture_memory(self, xp, scp):
        a = xp.ones(self.shape, dtype=xp.float32)
        center = numpy.divide(numpy.subtract(self.shape, 1), 2)
    
        if len(self.shape) == 2:
            matrix = self._2d_rotation_matrix(self.theta, center)
        elif len(self.shape) == 3:
            matrix = self._3d_rotation_matrix(self.theta, center)
        else:
            return pytest.xfail('Unsupported shape')
    
        if self.output == 'empty':
            output = xp.empty(self.shape, dtype=xp.float32)
            if self.output_shape:
                return pytest.skip('This combination is tested in '
                                   'test_invalid_texture_arguments')
        else:
            output = self.output
    
        if self.output_shape:
            output_shape = (self.output_shape, ) * len(self.shape)
        else:
            output_shape = self.output_shape
    
        if xp == cupy:
            m = cupyx.scipy.ndimage.affine_transform
            matrix = cupy.array(matrix)
>           return m(a, matrix, output_shape=output_shape,
                     output=output, order=self.order,
                     mode=self.mode, texture_memory=True)

tests/cupyx_tests/scipy_tests/ndimage_tests/test_interpolation.py:398: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
cupyx/scipy/ndimage/interpolation.py:376: in affine_transform
    return _texture.affine_transformation(data=input,
cupyx/_texture.py:168: in affine_transformation
    texture_object = _create_texture_object(data,
cupyx/_texture.py:98: in _create_texture_object
    array = texture.CUDAarray(texture_fmt, *data.shape[::-1])
cupy/cuda/texture.pyx:296: in cupy.cuda.texture.CUDAarray.__init__
    self.ptr = runtime.malloc3DArray(desc.ptr, width, height, depth,
cupy_backends/cuda/api/runtime.pyx:593: in cupy_backends.cuda.api.runtime.malloc3DArray
    check_status(status)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

>   raise CUDARuntimeError(status)
E   AssertionError: Only cupy raises error
E   
E   Traceback (most recent call last):
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.hXnTrEAC7u/cupy/cupy/testing/_helper.py", line 47, in _call_func
E       result = impl(self, *args, **kw)
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.hXnTrEAC7u/cupy/tests/cupyx_tests/scipy_tests/ndimage_tests/test_interpolation.py", line 398, in test_affine_transform_texture_memory
E       return m(a, matrix, output_shape=output_shape,
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.hXnTrEAC7u/cupy/cupyx/scipy/ndimage/interpolation.py", line 376, in affine_transform
E       return _texture.affine_transformation(data=input,
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.hXnTrEAC7u/cupy/cupyx/_texture.py", line 168, in affine_transformation
E       texture_object = _create_texture_object(data,
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.hXnTrEAC7u/cupy/cupyx/_texture.py", line 98, in _create_texture_object
E       array = texture.CUDAarray(texture_fmt, *data.shape[::-1])
E     File "cupy/cuda/texture.pyx", line 296, in cupy.cuda.texture.CUDAarray.__init__
E       self.ptr = runtime.malloc3DArray(desc.ptr, width, height, depth,
E     File "cupy_backends/cuda/api/runtime.pyx", line 593, in cupy_backends.cuda.api.runtime.malloc3DArray
E       check_status(status)
E     File "cupy_backends/cuda/api/runtime.pyx", line 265, in cupy_backends.cuda.api.runtime.check_status
E       raise CUDARuntimeError(status)
E   cupy_backends.cuda.api.runtime.CUDARuntimeError: hipErrorUnknown: hipErrorUnknown

cupy_backends/cuda/api/runtime.pyx:265: AssertionError
----------------------------- Captured stderr call -----------------------------
Traceback (most recent call last):
  File "cupy_backends/cuda/api/runtime.pyx", line 644, in cupy_backends.cuda.api.runtime.freeArray
    check_status(status)
  File "cupy_backends/cuda/api/runtime.pyx", line 265, in cupy_backends.cuda.api.runtime.check_status
    raise CUDARuntimeError(status)
cupy_backends.cuda.api.runtime.CUDARuntimeError: hipErrorUnknown: hipErrorUnknown
_ TestAffineTransformTextureMemory.test_affine_transform_texture_memory[_param_318_{mode='nearest', order=1, output=None, output_shape=10, shape=(10, 20, 30), theta=180}] _

self = <<cupyx_tests.scipy_tests.ndimage_tests.test_interpolation.TestAffineTransformTextureMemory object at 0x7fab37d542b0>  parameter: {'mode': 'nearest', 'order': 1, 'output': None, 'output_shape': 10, 'shape': (10, 20, 30), 'theta': 180}>
xp = <module 'cupy' from '/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.hXnTrEAC7u/cupy/cupy/__init__.py'>
scp = <module 'cupyx.scipy' from '/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.hXnTrEAC7u/cupy/cupyx/scipy/__init__.py'>

    @testing.numpy_cupy_allclose(atol=0.1, scipy_name='scp')
    def test_affine_transform_texture_memory(self, xp, scp):
        a = xp.ones(self.shape, dtype=xp.float32)
        center = numpy.divide(numpy.subtract(self.shape, 1), 2)
    
        if len(self.shape) == 2:
            matrix = self._2d_rotation_matrix(self.theta, center)
        elif len(self.shape) == 3:
            matrix = self._3d_rotation_matrix(self.theta, center)
        else:
            return pytest.xfail('Unsupported shape')
    
        if self.output == 'empty':
            output = xp.empty(self.shape, dtype=xp.float32)
            if self.output_shape:
                return pytest.skip('This combination is tested in '
                                   'test_invalid_texture_arguments')
        else:
            output = self.output
    
        if self.output_shape:
            output_shape = (self.output_shape, ) * len(self.shape)
        else:
            output_shape = self.output_shape
    
        if xp == cupy:
            m = cupyx.scipy.ndimage.affine_transform
            matrix = cupy.array(matrix)
>           return m(a, matrix, output_shape=output_shape,
                     output=output, order=self.order,
                     mode=self.mode, texture_memory=True)

tests/cupyx_tests/scipy_tests/ndimage_tests/test_interpolation.py:398: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
cupyx/scipy/ndimage/interpolation.py:376: in affine_transform
    return _texture.affine_transformation(data=input,
cupyx/_texture.py:168: in affine_transformation
    texture_object = _create_texture_object(data,
cupyx/_texture.py:98: in _create_texture_object
    array = texture.CUDAarray(texture_fmt, *data.shape[::-1])
cupy/cuda/texture.pyx:296: in cupy.cuda.texture.CUDAarray.__init__
    self.ptr = runtime.malloc3DArray(desc.ptr, width, height, depth,
cupy_backends/cuda/api/runtime.pyx:593: in cupy_backends.cuda.api.runtime.malloc3DArray
    check_status(status)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

>   raise CUDARuntimeError(status)
E   AssertionError: Only cupy raises error
E   
E   Traceback (most recent call last):
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.hXnTrEAC7u/cupy/cupy/testing/_helper.py", line 47, in _call_func
E       result = impl(self, *args, **kw)
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.hXnTrEAC7u/cupy/tests/cupyx_tests/scipy_tests/ndimage_tests/test_interpolation.py", line 398, in test_affine_transform_texture_memory
E       return m(a, matrix, output_shape=output_shape,
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.hXnTrEAC7u/cupy/cupyx/scipy/ndimage/interpolation.py", line 376, in affine_transform
E       return _texture.affine_transformation(data=input,
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.hXnTrEAC7u/cupy/cupyx/_texture.py", line 168, in affine_transformation
E       texture_object = _create_texture_object(data,
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.hXnTrEAC7u/cupy/cupyx/_texture.py", line 98, in _create_texture_object
E       array = texture.CUDAarray(texture_fmt, *data.shape[::-1])
E     File "cupy/cuda/texture.pyx", line 296, in cupy.cuda.texture.CUDAarray.__init__
E       self.ptr = runtime.malloc3DArray(desc.ptr, width, height, depth,
E     File "cupy_backends/cuda/api/runtime.pyx", line 593, in cupy_backends.cuda.api.runtime.malloc3DArray
E       check_status(status)
E     File "cupy_backends/cuda/api/runtime.pyx", line 265, in cupy_backends.cuda.api.runtime.check_status
E       raise CUDARuntimeError(status)
E   cupy_backends.cuda.api.runtime.CUDARuntimeError: hipErrorUnknown: hipErrorUnknown

cupy_backends/cuda/api/runtime.pyx:265: AssertionError
----------------------------- Captured stderr call -----------------------------
Traceback (most recent call last):
  File "cupy_backends/cuda/api/runtime.pyx", line 644, in cupy_backends.cuda.api.runtime.freeArray
    check_status(status)
  File "cupy_backends/cuda/api/runtime.pyx", line 265, in cupy_backends.cuda.api.runtime.check_status
    raise CUDARuntimeError(status)
cupy_backends.cuda.api.runtime.CUDARuntimeError: hipErrorUnknown: hipErrorUnknown
_ TestAffineTransformTextureMemory.test_affine_transform_texture_memory[_param_319_{mode='nearest', order=1, output=None, output_shape=10, shape=(10, 20, 30), theta=270}] _

self = <<cupyx_tests.scipy_tests.ndimage_tests.test_interpolation.TestAffineTransformTextureMemory object at 0x7fab36eb1eb0>  parameter: {'mode': 'nearest', 'order': 1, 'output': None, 'output_shape': 10, 'shape': (10, 20, 30), 'theta': 270}>
xp = <module 'cupy' from '/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.hXnTrEAC7u/cupy/cupy/__init__.py'>
scp = <module 'cupyx.scipy' from '/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.hXnTrEAC7u/cupy/cupyx/scipy/__init__.py'>

    @testing.numpy_cupy_allclose(atol=0.1, scipy_name='scp')
    def test_affine_transform_texture_memory(self, xp, scp):
        a = xp.ones(self.shape, dtype=xp.float32)
        center = numpy.divide(numpy.subtract(self.shape, 1), 2)
    
        if len(self.shape) == 2:
            matrix = self._2d_rotation_matrix(self.theta, center)
        elif len(self.shape) == 3:
            matrix = self._3d_rotation_matrix(self.theta, center)
        else:
            return pytest.xfail('Unsupported shape')
    
        if self.output == 'empty':
            output = xp.empty(self.shape, dtype=xp.float32)
            if self.output_shape:
                return pytest.skip('This combination is tested in '
                                   'test_invalid_texture_arguments')
        else:
            output = self.output
    
        if self.output_shape:
            output_shape = (self.output_shape, ) * len(self.shape)
        else:
            output_shape = self.output_shape
    
        if xp == cupy:
            m = cupyx.scipy.ndimage.affine_transform
            matrix = cupy.array(matrix)
>           return m(a, matrix, output_shape=output_shape,
                     output=output, order=self.order,
                     mode=self.mode, texture_memory=True)

tests/cupyx_tests/scipy_tests/ndimage_tests/test_interpolation.py:398: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
cupyx/scipy/ndimage/interpolation.py:376: in affine_transform
    return _texture.affine_transformation(data=input,
cupyx/_texture.py:168: in affine_transformation
    texture_object = _create_texture_object(data,
cupyx/_texture.py:98: in _create_texture_object
    array = texture.CUDAarray(texture_fmt, *data.shape[::-1])
cupy/cuda/texture.pyx:296: in cupy.cuda.texture.CUDAarray.__init__
    self.ptr = runtime.malloc3DArray(desc.ptr, width, height, depth,
cupy_backends/cuda/api/runtime.pyx:593: in cupy_backends.cuda.api.runtime.malloc3DArray
    check_status(status)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

>   raise CUDARuntimeError(status)
E   AssertionError: Only cupy raises error
E   
E   Traceback (most recent call last):
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.hXnTrEAC7u/cupy/cupy/testing/_helper.py", line 47, in _call_func
E       result = impl(self, *args, **kw)
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.hXnTrEAC7u/cupy/tests/cupyx_tests/scipy_tests/ndimage_tests/test_interpolation.py", line 398, in test_affine_transform_texture_memory
E       return m(a, matrix, output_shape=output_shape,
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.hXnTrEAC7u/cupy/cupyx/scipy/ndimage/interpolation.py", line 376, in affine_transform
E       return _texture.affine_transformation(data=input,
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.hXnTrEAC7u/cupy/cupyx/_texture.py", line 168, in affine_transformation
E       texture_object = _create_texture_object(data,
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.hXnTrEAC7u/cupy/cupyx/_texture.py", line 98, in _create_texture_object
E       array = texture.CUDAarray(texture_fmt, *data.shape[::-1])
E     File "cupy/cuda/texture.pyx", line 296, in cupy.cuda.texture.CUDAarray.__init__
E       self.ptr = runtime.malloc3DArray(desc.ptr, width, height, depth,
E     File "cupy_backends/cuda/api/runtime.pyx", line 593, in cupy_backends.cuda.api.runtime.malloc3DArray
E       check_status(status)
E     File "cupy_backends/cuda/api/runtime.pyx", line 265, in cupy_backends.cuda.api.runtime.check_status
E       raise CUDARuntimeError(status)
E   cupy_backends.cuda.api.runtime.CUDARuntimeError: hipErrorUnknown: hipErrorUnknown

cupy_backends/cuda/api/runtime.pyx:265: AssertionError
----------------------------- Captured stderr call -----------------------------
Traceback (most recent call last):
  File "cupy_backends/cuda/api/runtime.pyx", line 644, in cupy_backends.cuda.api.runtime.freeArray
    check_status(status)
  File "cupy_backends/cuda/api/runtime.pyx", line 265, in cupy_backends.cuda.api.runtime.check_status
    raise CUDARuntimeError(status)
cupy_backends.cuda.api.runtime.CUDARuntimeError: hipErrorUnknown: hipErrorUnknown
_ TestAffineTransformTextureMemory.test_affine_transform_texture_memory[_param_320_{mode='nearest', order=1, output=float32, output_shape=None, shape=(100, 100), theta=0}] _

self = <<cupyx_tests.scipy_tests.ndimage_tests.test_interpolation.TestAffineTransformTextureMemory object at 0x7fab3721eb20> ...ode': 'nearest', 'order': 1, 'output': <class 'numpy.float32'>, 'output_shape': None, 'shape': (100, 100), 'theta': 0}>
xp = <module 'cupy' from '/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.hXnTrEAC7u/cupy/cupy/__init__.py'>
scp = <module 'cupyx.scipy' from '/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.hXnTrEAC7u/cupy/cupyx/scipy/__init__.py'>

    @testing.numpy_cupy_allclose(atol=0.1, scipy_name='scp')
    def test_affine_transform_texture_memory(self, xp, scp):
        a = xp.ones(self.shape, dtype=xp.float32)
        center = numpy.divide(numpy.subtract(self.shape, 1), 2)
    
        if len(self.shape) == 2:
            matrix = self._2d_rotation_matrix(self.theta, center)
        elif len(self.shape) == 3:
            matrix = self._3d_rotation_matrix(self.theta, center)
        else:
            return pytest.xfail('Unsupported shape')
    
        if self.output == 'empty':
            output = xp.empty(self.shape, dtype=xp.float32)
            if self.output_shape:
                return pytest.skip('This combination is tested in '
                                   'test_invalid_texture_arguments')
        else:
            output = self.output
    
        if self.output_shape:
            output_shape = (self.output_shape, ) * len(self.shape)
        else:
            output_shape = self.output_shape
    
        if xp == cupy:
            m = cupyx.scipy.ndimage.affine_transform
            matrix = cupy.array(matrix)
>           return m(a, matrix, output_shape=output_shape,
                     output=output, order=self.order,
                     mode=self.mode, texture_memory=True)

tests/cupyx_tests/scipy_tests/ndimage_tests/test_interpolation.py:398: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
cupyx/scipy/ndimage/interpolation.py:376: in affine_transform
    return _texture.affine_transformation(data=input,
cupyx/_texture.py:168: in affine_transformation
    texture_object = _create_texture_object(data,
cupyx/_texture.py:98: in _create_texture_object
    array = texture.CUDAarray(texture_fmt, *data.shape[::-1])
cupy/cuda/texture.pyx:296: in cupy.cuda.texture.CUDAarray.__init__
    self.ptr = runtime.malloc3DArray(desc.ptr, width, height, depth,
cupy_backends/cuda/api/runtime.pyx:593: in cupy_backends.cuda.api.runtime.malloc3DArray
    check_status(status)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

>   raise CUDARuntimeError(status)
E   AssertionError: Only cupy raises error
E   
E   Traceback (most recent call last):
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.hXnTrEAC7u/cupy/cupy/testing/_helper.py", line 47, in _call_func
E       result = impl(self, *args, **kw)
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.hXnTrEAC7u/cupy/tests/cupyx_tests/scipy_tests/ndimage_tests/test_interpolation.py", line 398, in test_affine_transform_texture_memory
E       return m(a, matrix, output_shape=output_shape,
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.hXnTrEAC7u/cupy/cupyx/scipy/ndimage/interpolation.py", line 376, in affine_transform
E       return _texture.affine_transformation(data=input,
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.hXnTrEAC7u/cupy/cupyx/_texture.py", line 168, in affine_transformation
E       texture_object = _create_texture_object(data,
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.hXnTrEAC7u/cupy/cupyx/_texture.py", line 98, in _create_texture_object
E       array = texture.CUDAarray(texture_fmt, *data.shape[::-1])
E     File "cupy/cuda/texture.pyx", line 296, in cupy.cuda.texture.CUDAarray.__init__
E       self.ptr = runtime.malloc3DArray(desc.ptr, width, height, depth,
E     File "cupy_backends/cuda/api/runtime.pyx", line 593, in cupy_backends.cuda.api.runtime.malloc3DArray
E       check_status(status)
E     File "cupy_backends/cuda/api/runtime.pyx", line 265, in cupy_backends.cuda.api.runtime.check_status
E       raise CUDARuntimeError(status)
E   cupy_backends.cuda.api.runtime.CUDARuntimeError: hipErrorUnknown: hipErrorUnknown

cupy_backends/cuda/api/runtime.pyx:265: AssertionError
----------------------------- Captured stderr call -----------------------------
Traceback (most recent call last):
  File "cupy_backends/cuda/api/runtime.pyx", line 644, in cupy_backends.cuda.api.runtime.freeArray
    check_status(status)
  File "cupy_backends/cuda/api/runtime.pyx", line 265, in cupy_backends.cuda.api.runtime.check_status
    raise CUDARuntimeError(status)
cupy_backends.cuda.api.runtime.CUDARuntimeError: hipErrorUnknown: hipErrorUnknown
_ TestAffineTransformTextureMemory.test_affine_transform_texture_memory[_param_321_{mode='nearest', order=1, output=float32, output_shape=None, shape=(100, 100), theta=90}] _

self = <<cupyx_tests.scipy_tests.ndimage_tests.test_interpolation.TestAffineTransformTextureMemory object at 0x7fab37c43dc0> ...de': 'nearest', 'order': 1, 'output': <class 'numpy.float32'>, 'output_shape': None, 'shape': (100, 100), 'theta': 90}>
xp = <module 'cupy' from '/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.hXnTrEAC7u/cupy/cupy/__init__.py'>
scp = <module 'cupyx.scipy' from '/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.hXnTrEAC7u/cupy/cupyx/scipy/__init__.py'>

    @testing.numpy_cupy_allclose(atol=0.1, scipy_name='scp')
    def test_affine_transform_texture_memory(self, xp, scp):
        a = xp.ones(self.shape, dtype=xp.float32)
        center = numpy.divide(numpy.subtract(self.shape, 1), 2)
    
        if len(self.shape) == 2:
            matrix = self._2d_rotation_matrix(self.theta, center)
        elif len(self.shape) == 3:
            matrix = self._3d_rotation_matrix(self.theta, center)
        else:
            return pytest.xfail('Unsupported shape')
    
        if self.output == 'empty':
            output = xp.empty(self.shape, dtype=xp.float32)
            if self.output_shape:
                return pytest.skip('This combination is tested in '
                                   'test_invalid_texture_arguments')
        else:
            output = self.output
    
        if self.output_shape:
            output_shape = (self.output_shape, ) * len(self.shape)
        else:
            output_shape = self.output_shape
    
        if xp == cupy:
            m = cupyx.scipy.ndimage.affine_transform
            matrix = cupy.array(matrix)
>           return m(a, matrix, output_shape=output_shape,
                     output=output, order=self.order,
                     mode=self.mode, texture_memory=True)

tests/cupyx_tests/scipy_tests/ndimage_tests/test_interpolation.py:398: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
cupyx/scipy/ndimage/interpolation.py:376: in affine_transform
    return _texture.affine_transformation(data=input,
cupyx/_texture.py:168: in affine_transformation
    texture_object = _create_texture_object(data,
cupyx/_texture.py:98: in _create_texture_object
    array = texture.CUDAarray(texture_fmt, *data.shape[::-1])
cupy/cuda/texture.pyx:296: in cupy.cuda.texture.CUDAarray.__init__
    self.ptr = runtime.malloc3DArray(desc.ptr, width, height, depth,
cupy_backends/cuda/api/runtime.pyx:593: in cupy_backends.cuda.api.runtime.malloc3DArray
    check_status(status)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

>   raise CUDARuntimeError(status)
E   AssertionError: Only cupy raises error
E   
E   Traceback (most recent call last):
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.hXnTrEAC7u/cupy/cupy/testing/_helper.py", line 47, in _call_func
E       result = impl(self, *args, **kw)
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.hXnTrEAC7u/cupy/tests/cupyx_tests/scipy_tests/ndimage_tests/test_interpolation.py", line 398, in test_affine_transform_texture_memory
E       return m(a, matrix, output_shape=output_shape,
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.hXnTrEAC7u/cupy/cupyx/scipy/ndimage/interpolation.py", line 376, in affine_transform
E       return _texture.affine_transformation(data=input,
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.hXnTrEAC7u/cupy/cupyx/_texture.py", line 168, in affine_transformation
E       texture_object = _create_texture_object(data,
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.hXnTrEAC7u/cupy/cupyx/_texture.py", line 98, in _create_texture_object
E       array = texture.CUDAarray(texture_fmt, *data.shape[::-1])
E     File "cupy/cuda/texture.pyx", line 296, in cupy.cuda.texture.CUDAarray.__init__
E       self.ptr = runtime.malloc3DArray(desc.ptr, width, height, depth,
E     File "cupy_backends/cuda/api/runtime.pyx", line 593, in cupy_backends.cuda.api.runtime.malloc3DArray
E       check_status(status)
E     File "cupy_backends/cuda/api/runtime.pyx", line 265, in cupy_backends.cuda.api.runtime.check_status
E       raise CUDARuntimeError(status)
E   cupy_backends.cuda.api.runtime.CUDARuntimeError: hipErrorUnknown: hipErrorUnknown

cupy_backends/cuda/api/runtime.pyx:265: AssertionError
----------------------------- Captured stderr call -----------------------------
Traceback (most recent call last):
  File "cupy_backends/cuda/api/runtime.pyx", line 644, in cupy_backends.cuda.api.runtime.freeArray
    check_status(status)
  File "cupy_backends/cuda/api/runtime.pyx", line 265, in cupy_backends.cuda.api.runtime.check_status
    raise CUDARuntimeError(status)
cupy_backends.cuda.api.runtime.CUDARuntimeError: hipErrorUnknown: hipErrorUnknown
_ TestAffineTransformTextureMemory.test_affine_transform_texture_memory[_param_322_{mode='nearest', order=1, output=float32, output_shape=None, shape=(100, 100), theta=180}] _

self = <<cupyx_tests.scipy_tests.ndimage_tests.test_interpolation.TestAffineTransformTextureMemory object at 0x7fab39d4be20> ...e': 'nearest', 'order': 1, 'output': <class 'numpy.float32'>, 'output_shape': None, 'shape': (100, 100), 'theta': 180}>
xp = <module 'cupy' from '/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.hXnTrEAC7u/cupy/cupy/__init__.py'>
scp = <module 'cupyx.scipy' from '/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.hXnTrEAC7u/cupy/cupyx/scipy/__init__.py'>

    @testing.numpy_cupy_allclose(atol=0.1, scipy_name='scp')
    def test_affine_transform_texture_memory(self, xp, scp):
        a = xp.ones(self.shape, dtype=xp.float32)
        center = numpy.divide(numpy.subtract(self.shape, 1), 2)
    
        if len(self.shape) == 2:
            matrix = self._2d_rotation_matrix(self.theta, center)
        elif len(self.shape) == 3:
            matrix = self._3d_rotation_matrix(self.theta, center)
        else:
            return pytest.xfail('Unsupported shape')
    
        if self.output == 'empty':
            output = xp.empty(self.shape, dtype=xp.float32)
            if self.output_shape:
                return pytest.skip('This combination is tested in '
                                   'test_invalid_texture_arguments')
        else:
            output = self.output
    
        if self.output_shape:
            output_shape = (self.output_shape, ) * len(self.shape)
        else:
            output_shape = self.output_shape
    
        if xp == cupy:
            m = cupyx.scipy.ndimage.affine_transform
            matrix = cupy.array(matrix)
>           return m(a, matrix, output_shape=output_shape,
                     output=output, order=self.order,
                     mode=self.mode, texture_memory=True)

tests/cupyx_tests/scipy_tests/ndimage_tests/test_interpolation.py:398: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
cupyx/scipy/ndimage/interpolation.py:376: in affine_transform
    return _texture.affine_transformation(data=input,
cupyx/_texture.py:168: in affine_transformation
    texture_object = _create_texture_object(data,
cupyx/_texture.py:98: in _create_texture_object
    array = texture.CUDAarray(texture_fmt, *data.shape[::-1])
cupy/cuda/texture.pyx:296: in cupy.cuda.texture.CUDAarray.__init__
    self.ptr = runtime.malloc3DArray(desc.ptr, width, height, depth,
cupy_backends/cuda/api/runtime.pyx:593: in cupy_backends.cuda.api.runtime.malloc3DArray
    check_status(status)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

>   raise CUDARuntimeError(status)
E   AssertionError: Only cupy raises error
E   
E   Traceback (most recent call last):
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.hXnTrEAC7u/cupy/cupy/testing/_helper.py", line 47, in _call_func
E       result = impl(self, *args, **kw)
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.hXnTrEAC7u/cupy/tests/cupyx_tests/scipy_tests/ndimage_tests/test_interpolation.py", line 398, in test_affine_transform_texture_memory
E       return m(a, matrix, output_shape=output_shape,
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.hXnTrEAC7u/cupy/cupyx/scipy/ndimage/interpolation.py", line 376, in affine_transform
E       return _texture.affine_transformation(data=input,
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.hXnTrEAC7u/cupy/cupyx/_texture.py", line 168, in affine_transformation
E       texture_object = _create_texture_object(data,
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.hXnTrEAC7u/cupy/cupyx/_texture.py", line 98, in _create_texture_object
E       array = texture.CUDAarray(texture_fmt, *data.shape[::-1])
E     File "cupy/cuda/texture.pyx", line 296, in cupy.cuda.texture.CUDAarray.__init__
E       self.ptr = runtime.malloc3DArray(desc.ptr, width, height, depth,
E     File "cupy_backends/cuda/api/runtime.pyx", line 593, in cupy_backends.cuda.api.runtime.malloc3DArray
E       check_status(status)
E     File "cupy_backends/cuda/api/runtime.pyx", line 265, in cupy_backends.cuda.api.runtime.check_status
E       raise CUDARuntimeError(status)
E   cupy_backends.cuda.api.runtime.CUDARuntimeError: hipErrorUnknown: hipErrorUnknown

cupy_backends/cuda/api/runtime.pyx:265: AssertionError
----------------------------- Captured stderr call -----------------------------
Traceback (most recent call last):
  File "cupy_backends/cuda/api/runtime.pyx", line 644, in cupy_backends.cuda.api.runtime.freeArray
    check_status(status)
  File "cupy_backends/cuda/api/runtime.pyx", line 265, in cupy_backends.cuda.api.runtime.check_status
    raise CUDARuntimeError(status)
cupy_backends.cuda.api.runtime.CUDARuntimeError: hipErrorUnknown: hipErrorUnknown
_ TestAffineTransformTextureMemory.test_affine_transform_texture_memory[_param_323_{mode='nearest', order=1, output=float32, output_shape=None, shape=(100, 100), theta=270}] _

self = <<cupyx_tests.scipy_tests.ndimage_tests.test_interpolation.TestAffineTransformTextureMemory object at 0x7fab36ef64c0> ...e': 'nearest', 'order': 1, 'output': <class 'numpy.float32'>, 'output_shape': None, 'shape': (100, 100), 'theta': 270}>
xp = <module 'cupy' from '/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.hXnTrEAC7u/cupy/cupy/__init__.py'>
scp = <module 'cupyx.scipy' from '/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.hXnTrEAC7u/cupy/cupyx/scipy/__init__.py'>

    @testing.numpy_cupy_allclose(atol=0.1, scipy_name='scp')
    def test_affine_transform_texture_memory(self, xp, scp):
        a = xp.ones(self.shape, dtype=xp.float32)
        center = numpy.divide(numpy.subtract(self.shape, 1), 2)
    
        if len(self.shape) == 2:
            matrix = self._2d_rotation_matrix(self.theta, center)
        elif len(self.shape) == 3:
            matrix = self._3d_rotation_matrix(self.theta, center)
        else:
            return pytest.xfail('Unsupported shape')
    
        if self.output == 'empty':
            output = xp.empty(self.shape, dtype=xp.float32)
            if self.output_shape:
                return pytest.skip('This combination is tested in '
                                   'test_invalid_texture_arguments')
        else:
            output = self.output
    
        if self.output_shape:
            output_shape = (self.output_shape, ) * len(self.shape)
        else:
            output_shape = self.output_shape
    
        if xp == cupy:
            m = cupyx.scipy.ndimage.affine_transform
            matrix = cupy.array(matrix)
>           return m(a, matrix, output_shape=output_shape,
                     output=output, order=self.order,
                     mode=self.mode, texture_memory=True)

tests/cupyx_tests/scipy_tests/ndimage_tests/test_interpolation.py:398: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
cupyx/scipy/ndimage/interpolation.py:376: in affine_transform
    return _texture.affine_transformation(data=input,
cupyx/_texture.py:168: in affine_transformation
    texture_object = _create_texture_object(data,
cupyx/_texture.py:98: in _create_texture_object
    array = texture.CUDAarray(texture_fmt, *data.shape[::-1])
cupy/cuda/texture.pyx:296: in cupy.cuda.texture.CUDAarray.__init__
    self.ptr = runtime.malloc3DArray(desc.ptr, width, height, depth,
cupy_backends/cuda/api/runtime.pyx:593: in cupy_backends.cuda.api.runtime.malloc3DArray
    check_status(status)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

>   raise CUDARuntimeError(status)
E   AssertionError: Only cupy raises error
E   
E   Traceback (most recent call last):
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.hXnTrEAC7u/cupy/cupy/testing/_helper.py", line 47, in _call_func
E       result = impl(self, *args, **kw)
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.hXnTrEAC7u/cupy/tests/cupyx_tests/scipy_tests/ndimage_tests/test_interpolation.py", line 398, in test_affine_transform_texture_memory
E       return m(a, matrix, output_shape=output_shape,
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.hXnTrEAC7u/cupy/cupyx/scipy/ndimage/interpolation.py", line 376, in affine_transform
E       return _texture.affine_transformation(data=input,
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.hXnTrEAC7u/cupy/cupyx/_texture.py", line 168, in affine_transformation
E       texture_object = _create_texture_object(data,
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.hXnTrEAC7u/cupy/cupyx/_texture.py", line 98, in _create_texture_object
E       array = texture.CUDAarray(texture_fmt, *data.shape[::-1])
E     File "cupy/cuda/texture.pyx", line 296, in cupy.cuda.texture.CUDAarray.__init__
E       self.ptr = runtime.malloc3DArray(desc.ptr, width, height, depth,
E     File "cupy_backends/cuda/api/runtime.pyx", line 593, in cupy_backends.cuda.api.runtime.malloc3DArray
E       check_status(status)
E     File "cupy_backends/cuda/api/runtime.pyx", line 265, in cupy_backends.cuda.api.runtime.check_status
E       raise CUDARuntimeError(status)
E   cupy_backends.cuda.api.runtime.CUDARuntimeError: hipErrorUnknown: hipErrorUnknown

cupy_backends/cuda/api/runtime.pyx:265: AssertionError
----------------------------- Captured stderr call -----------------------------
Traceback (most recent call last):
  File "cupy_backends/cuda/api/runtime.pyx", line 644, in cupy_backends.cuda.api.runtime.freeArray
    check_status(status)
  File "cupy_backends/cuda/api/runtime.pyx", line 265, in cupy_backends.cuda.api.runtime.check_status
    raise CUDARuntimeError(status)
cupy_backends.cuda.api.runtime.CUDARuntimeError: hipErrorUnknown: hipErrorUnknown
_ TestAffineTransformTextureMemory.test_affine_transform_texture_memory[_param_324_{mode='nearest', order=1, output=float32, output_shape=None, shape=(10, 20), theta=0}] _

self = <<cupyx_tests.scipy_tests.ndimage_tests.test_interpolation.TestAffineTransformTextureMemory object at 0x7fab36fbc460> ...'mode': 'nearest', 'order': 1, 'output': <class 'numpy.float32'>, 'output_shape': None, 'shape': (10, 20), 'theta': 0}>
xp = <module 'cupy' from '/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.hXnTrEAC7u/cupy/cupy/__init__.py'>
scp = <module 'cupyx.scipy' from '/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.hXnTrEAC7u/cupy/cupyx/scipy/__init__.py'>

    @testing.numpy_cupy_allclose(atol=0.1, scipy_name='scp')
    def test_affine_transform_texture_memory(self, xp, scp):
        a = xp.ones(self.shape, dtype=xp.float32)
        center = numpy.divide(numpy.subtract(self.shape, 1), 2)
    
        if len(self.shape) == 2:
            matrix = self._2d_rotation_matrix(self.theta, center)
        elif len(self.shape) == 3:
            matrix = self._3d_rotation_matrix(self.theta, center)
        else:
            return pytest.xfail('Unsupported shape')
    
        if self.output == 'empty':
            output = xp.empty(self.shape, dtype=xp.float32)
            if self.output_shape:
                return pytest.skip('This combination is tested in '
                                   'test_invalid_texture_arguments')
        else:
            output = self.output
    
        if self.output_shape:
            output_shape = (self.output_shape, ) * len(self.shape)
        else:
            output_shape = self.output_shape
    
        if xp == cupy:
            m = cupyx.scipy.ndimage.affine_transform
            matrix = cupy.array(matrix)
>           return m(a, matrix, output_shape=output_shape,
                     output=output, order=self.order,
                     mode=self.mode, texture_memory=True)

tests/cupyx_tests/scipy_tests/ndimage_tests/test_interpolation.py:398: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
cupyx/scipy/ndimage/interpolation.py:376: in affine_transform
    return _texture.affine_transformation(data=input,
cupyx/_texture.py:168: in affine_transformation
    texture_object = _create_texture_object(data,
cupyx/_texture.py:98: in _create_texture_object
    array = texture.CUDAarray(texture_fmt, *data.shape[::-1])
cupy/cuda/texture.pyx:296: in cupy.cuda.texture.CUDAarray.__init__
    self.ptr = runtime.malloc3DArray(desc.ptr, width, height, depth,
cupy_backends/cuda/api/runtime.pyx:593: in cupy_backends.cuda.api.runtime.malloc3DArray
    check_status(status)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

>   raise CUDARuntimeError(status)
E   AssertionError: Only cupy raises error
E   
E   Traceback (most recent call last):
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.hXnTrEAC7u/cupy/cupy/testing/_helper.py", line 47, in _call_func
E       result = impl(self, *args, **kw)
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.hXnTrEAC7u/cupy/tests/cupyx_tests/scipy_tests/ndimage_tests/test_interpolation.py", line 398, in test_affine_transform_texture_memory
E       return m(a, matrix, output_shape=output_shape,
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.hXnTrEAC7u/cupy/cupyx/scipy/ndimage/interpolation.py", line 376, in affine_transform
E       return _texture.affine_transformation(data=input,
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.hXnTrEAC7u/cupy/cupyx/_texture.py", line 168, in affine_transformation
E       texture_object = _create_texture_object(data,
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.hXnTrEAC7u/cupy/cupyx/_texture.py", line 98, in _create_texture_object
E       array = texture.CUDAarray(texture_fmt, *data.shape[::-1])
E     File "cupy/cuda/texture.pyx", line 296, in cupy.cuda.texture.CUDAarray.__init__
E       self.ptr = runtime.malloc3DArray(desc.ptr, width, height, depth,
E     File "cupy_backends/cuda/api/runtime.pyx", line 593, in cupy_backends.cuda.api.runtime.malloc3DArray
E       check_status(status)
E     File "cupy_backends/cuda/api/runtime.pyx", line 265, in cupy_backends.cuda.api.runtime.check_status
E       raise CUDARuntimeError(status)
E   cupy_backends.cuda.api.runtime.CUDARuntimeError: hipErrorUnknown: hipErrorUnknown

cupy_backends/cuda/api/runtime.pyx:265: AssertionError
----------------------------- Captured stderr call -----------------------------
Traceback (most recent call last):
  File "cupy_backends/cuda/api/runtime.pyx", line 644, in cupy_backends.cuda.api.runtime.freeArray
    check_status(status)
  File "cupy_backends/cuda/api/runtime.pyx", line 265, in cupy_backends.cuda.api.runtime.check_status
    raise CUDARuntimeError(status)
cupy_backends.cuda.api.runtime.CUDARuntimeError: hipErrorUnknown: hipErrorUnknown
_ TestAffineTransformTextureMemory.test_affine_transform_texture_memory[_param_325_{mode='nearest', order=1, output=float32, output_shape=None, shape=(10, 20), theta=90}] _

self = <<cupyx_tests.scipy_tests.ndimage_tests.test_interpolation.TestAffineTransformTextureMemory object at 0x7fab36dd8df0> ...mode': 'nearest', 'order': 1, 'output': <class 'numpy.float32'>, 'output_shape': None, 'shape': (10, 20), 'theta': 90}>
xp = <module 'cupy' from '/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.hXnTrEAC7u/cupy/cupy/__init__.py'>
scp = <module 'cupyx.scipy' from '/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.hXnTrEAC7u/cupy/cupyx/scipy/__init__.py'>

    @testing.numpy_cupy_allclose(atol=0.1, scipy_name='scp')
    def test_affine_transform_texture_memory(self, xp, scp):
        a = xp.ones(self.shape, dtype=xp.float32)
        center = numpy.divide(numpy.subtract(self.shape, 1), 2)
    
        if len(self.shape) == 2:
            matrix = self._2d_rotation_matrix(self.theta, center)
        elif len(self.shape) == 3:
            matrix = self._3d_rotation_matrix(self.theta, center)
        else:
            return pytest.xfail('Unsupported shape')
    
        if self.output == 'empty':
            output = xp.empty(self.shape, dtype=xp.float32)
            if self.output_shape:
                return pytest.skip('This combination is tested in '
                                   'test_invalid_texture_arguments')
        else:
            output = self.output
    
        if self.output_shape:
            output_shape = (self.output_shape, ) * len(self.shape)
        else:
            output_shape = self.output_shape
    
        if xp == cupy:
            m = cupyx.scipy.ndimage.affine_transform
            matrix = cupy.array(matrix)
>           return m(a, matrix, output_shape=output_shape,
                     output=output, order=self.order,
                     mode=self.mode, texture_memory=True)

tests/cupyx_tests/scipy_tests/ndimage_tests/test_interpolation.py:398: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
cupyx/scipy/ndimage/interpolation.py:376: in affine_transform
    return _texture.affine_transformation(data=input,
cupyx/_texture.py:168: in affine_transformation
    texture_object = _create_texture_object(data,
cupyx/_texture.py:98: in _create_texture_object
    array = texture.CUDAarray(texture_fmt, *data.shape[::-1])
cupy/cuda/texture.pyx:296: in cupy.cuda.texture.CUDAarray.__init__
    self.ptr = runtime.malloc3DArray(desc.ptr, width, height, depth,
cupy_backends/cuda/api/runtime.pyx:593: in cupy_backends.cuda.api.runtime.malloc3DArray
    check_status(status)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

>   raise CUDARuntimeError(status)
E   AssertionError: Only cupy raises error
E   
E   Traceback (most recent call last):
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.hXnTrEAC7u/cupy/cupy/testing/_helper.py", line 47, in _call_func
E       result = impl(self, *args, **kw)
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.hXnTrEAC7u/cupy/tests/cupyx_tests/scipy_tests/ndimage_tests/test_interpolation.py", line 398, in test_affine_transform_texture_memory
E       return m(a, matrix, output_shape=output_shape,
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.hXnTrEAC7u/cupy/cupyx/scipy/ndimage/interpolation.py", line 376, in affine_transform
E       return _texture.affine_transformation(data=input,
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.hXnTrEAC7u/cupy/cupyx/_texture.py", line 168, in affine_transformation
E       texture_object = _create_texture_object(data,
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.hXnTrEAC7u/cupy/cupyx/_texture.py", line 98, in _create_texture_object
E       array = texture.CUDAarray(texture_fmt, *data.shape[::-1])
E     File "cupy/cuda/texture.pyx", line 296, in cupy.cuda.texture.CUDAarray.__init__
E       self.ptr = runtime.malloc3DArray(desc.ptr, width, height, depth,
E     File "cupy_backends/cuda/api/runtime.pyx", line 593, in cupy_backends.cuda.api.runtime.malloc3DArray
E       check_status(status)
E     File "cupy_backends/cuda/api/runtime.pyx", line 265, in cupy_backends.cuda.api.runtime.check_status
E       raise CUDARuntimeError(status)
E   cupy_backends.cuda.api.runtime.CUDARuntimeError: hipErrorUnknown: hipErrorUnknown

cupy_backends/cuda/api/runtime.pyx:265: AssertionError
----------------------------- Captured stderr call -----------------------------
Traceback (most recent call last):
  File "cupy_backends/cuda/api/runtime.pyx", line 644, in cupy_backends.cuda.api.runtime.freeArray
    check_status(status)
  File "cupy_backends/cuda/api/runtime.pyx", line 265, in cupy_backends.cuda.api.runtime.check_status
    raise CUDARuntimeError(status)
cupy_backends.cuda.api.runtime.CUDARuntimeError: hipErrorUnknown: hipErrorUnknown
_ TestAffineTransformTextureMemory.test_affine_transform_texture_memory[_param_326_{mode='nearest', order=1, output=float32, output_shape=None, shape=(10, 20), theta=180}] _

self = <<cupyx_tests.scipy_tests.ndimage_tests.test_interpolation.TestAffineTransformTextureMemory object at 0x7fac51128e20> ...ode': 'nearest', 'order': 1, 'output': <class 'numpy.float32'>, 'output_shape': None, 'shape': (10, 20), 'theta': 180}>
xp = <module 'cupy' from '/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.hXnTrEAC7u/cupy/cupy/__init__.py'>
scp = <module 'cupyx.scipy' from '/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.hXnTrEAC7u/cupy/cupyx/scipy/__init__.py'>

    @testing.numpy_cupy_allclose(atol=0.1, scipy_name='scp')
    def test_affine_transform_texture_memory(self, xp, scp):
        a = xp.ones(self.shape, dtype=xp.float32)
        center = numpy.divide(numpy.subtract(self.shape, 1), 2)
    
        if len(self.shape) == 2:
            matrix = self._2d_rotation_matrix(self.theta, center)
        elif len(self.shape) == 3:
            matrix = self._3d_rotation_matrix(self.theta, center)
        else:
            return pytest.xfail('Unsupported shape')
    
        if self.output == 'empty':
            output = xp.empty(self.shape, dtype=xp.float32)
            if self.output_shape:
                return pytest.skip('This combination is tested in '
                                   'test_invalid_texture_arguments')
        else:
            output = self.output
    
        if self.output_shape:
            output_shape = (self.output_shape, ) * len(self.shape)
        else:
            output_shape = self.output_shape
    
        if xp == cupy:
            m = cupyx.scipy.ndimage.affine_transform
            matrix = cupy.array(matrix)
>           return m(a, matrix, output_shape=output_shape,
                     output=output, order=self.order,
                     mode=self.mode, texture_memory=True)

tests/cupyx_tests/scipy_tests/ndimage_tests/test_interpolation.py:398: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
cupyx/scipy/ndimage/interpolation.py:376: in affine_transform
    return _texture.affine_transformation(data=input,
cupyx/_texture.py:168: in affine_transformation
    texture_object = _create_texture_object(data,
cupyx/_texture.py:98: in _create_texture_object
    array = texture.CUDAarray(texture_fmt, *data.shape[::-1])
cupy/cuda/texture.pyx:296: in cupy.cuda.texture.CUDAarray.__init__
    self.ptr = runtime.malloc3DArray(desc.ptr, width, height, depth,
cupy_backends/cuda/api/runtime.pyx:593: in cupy_backends.cuda.api.runtime.malloc3DArray
    check_status(status)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

>   raise CUDARuntimeError(status)
E   AssertionError: Only cupy raises error
E   
E   Traceback (most recent call last):
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.hXnTrEAC7u/cupy/cupy/testing/_helper.py", line 47, in _call_func
E       result = impl(self, *args, **kw)
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.hXnTrEAC7u/cupy/tests/cupyx_tests/scipy_tests/ndimage_tests/test_interpolation.py", line 398, in test_affine_transform_texture_memory
E       return m(a, matrix, output_shape=output_shape,
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.hXnTrEAC7u/cupy/cupyx/scipy/ndimage/interpolation.py", line 376, in affine_transform
E       return _texture.affine_transformation(data=input,
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.hXnTrEAC7u/cupy/cupyx/_texture.py", line 168, in affine_transformation
E       texture_object = _create_texture_object(data,
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.hXnTrEAC7u/cupy/cupyx/_texture.py", line 98, in _create_texture_object
E       array = texture.CUDAarray(texture_fmt, *data.shape[::-1])
E     File "cupy/cuda/texture.pyx", line 296, in cupy.cuda.texture.CUDAarray.__init__
E       self.ptr = runtime.malloc3DArray(desc.ptr, width, height, depth,
E     File "cupy_backends/cuda/api/runtime.pyx", line 593, in cupy_backends.cuda.api.runtime.malloc3DArray
E       check_status(status)
E     File "cupy_backends/cuda/api/runtime.pyx", line 265, in cupy_backends.cuda.api.runtime.check_status
E       raise CUDARuntimeError(status)
E   cupy_backends.cuda.api.runtime.CUDARuntimeError: hipErrorUnknown: hipErrorUnknown

cupy_backends/cuda/api/runtime.pyx:265: AssertionError
----------------------------- Captured stderr call -----------------------------
Traceback (most recent call last):
  File "cupy_backends/cuda/api/runtime.pyx", line 644, in cupy_backends.cuda.api.runtime.freeArray
    check_status(status)
  File "cupy_backends/cuda/api/runtime.pyx", line 265, in cupy_backends.cuda.api.runtime.check_status
    raise CUDARuntimeError(status)
cupy_backends.cuda.api.runtime.CUDARuntimeError: hipErrorUnknown: hipErrorUnknown
_ TestAffineTransformTextureMemory.test_affine_transform_texture_memory[_param_327_{mode='nearest', order=1, output=float32, output_shape=None, shape=(10, 20), theta=270}] _

self = <<cupyx_tests.scipy_tests.ndimage_tests.test_interpolation.TestAffineTransformTextureMemory object at 0x7fab371fa040> ...ode': 'nearest', 'order': 1, 'output': <class 'numpy.float32'>, 'output_shape': None, 'shape': (10, 20), 'theta': 270}>
xp = <module 'cupy' from '/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.hXnTrEAC7u/cupy/cupy/__init__.py'>
scp = <module 'cupyx.scipy' from '/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.hXnTrEAC7u/cupy/cupyx/scipy/__init__.py'>

    @testing.numpy_cupy_allclose(atol=0.1, scipy_name='scp')
    def test_affine_transform_texture_memory(self, xp, scp):
        a = xp.ones(self.shape, dtype=xp.float32)
        center = numpy.divide(numpy.subtract(self.shape, 1), 2)
    
        if len(self.shape) == 2:
            matrix = self._2d_rotation_matrix(self.theta, center)
        elif len(self.shape) == 3:
            matrix = self._3d_rotation_matrix(self.theta, center)
        else:
            return pytest.xfail('Unsupported shape')
    
        if self.output == 'empty':
            output = xp.empty(self.shape, dtype=xp.float32)
            if self.output_shape:
                return pytest.skip('This combination is tested in '
                                   'test_invalid_texture_arguments')
        else:
            output = self.output
    
        if self.output_shape:
            output_shape = (self.output_shape, ) * len(self.shape)
        else:
            output_shape = self.output_shape
    
        if xp == cupy:
            m = cupyx.scipy.ndimage.affine_transform
            matrix = cupy.array(matrix)
>           return m(a, matrix, output_shape=output_shape,
                     output=output, order=self.order,
                     mode=self.mode, texture_memory=True)

tests/cupyx_tests/scipy_tests/ndimage_tests/test_interpolation.py:398: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
cupyx/scipy/ndimage/interpolation.py:376: in affine_transform
    return _texture.affine_transformation(data=input,
cupyx/_texture.py:168: in affine_transformation
    texture_object = _create_texture_object(data,
cupyx/_texture.py:98: in _create_texture_object
    array = texture.CUDAarray(texture_fmt, *data.shape[::-1])
cupy/cuda/texture.pyx:296: in cupy.cuda.texture.CUDAarray.__init__
    self.ptr = runtime.malloc3DArray(desc.ptr, width, height, depth,
cupy_backends/cuda/api/runtime.pyx:593: in cupy_backends.cuda.api.runtime.malloc3DArray
    check_status(status)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

>   raise CUDARuntimeError(status)
E   AssertionError: Only cupy raises error
E   
E   Traceback (most recent call last):
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.hXnTrEAC7u/cupy/cupy/testing/_helper.py", line 47, in _call_func
E       result = impl(self, *args, **kw)
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.hXnTrEAC7u/cupy/tests/cupyx_tests/scipy_tests/ndimage_tests/test_interpolation.py", line 398, in test_affine_transform_texture_memory
E       return m(a, matrix, output_shape=output_shape,
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.hXnTrEAC7u/cupy/cupyx/scipy/ndimage/interpolation.py", line 376, in affine_transform
E       return _texture.affine_transformation(data=input,
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.hXnTrEAC7u/cupy/cupyx/_texture.py", line 168, in affine_transformation
E       texture_object = _create_texture_object(data,
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.hXnTrEAC7u/cupy/cupyx/_texture.py", line 98, in _create_texture_object
E       array = texture.CUDAarray(texture_fmt, *data.shape[::-1])
E     File "cupy/cuda/texture.pyx", line 296, in cupy.cuda.texture.CUDAarray.__init__
E       self.ptr = runtime.malloc3DArray(desc.ptr, width, height, depth,
E     File "cupy_backends/cuda/api/runtime.pyx", line 593, in cupy_backends.cuda.api.runtime.malloc3DArray
E       check_status(status)
E     File "cupy_backends/cuda/api/runtime.pyx", line 265, in cupy_backends.cuda.api.runtime.check_status
E       raise CUDARuntimeError(status)
E   cupy_backends.cuda.api.runtime.CUDARuntimeError: hipErrorUnknown: hipErrorUnknown

cupy_backends/cuda/api/runtime.pyx:265: AssertionError
----------------------------- Captured stderr call -----------------------------
Traceback (most recent call last):
  File "cupy_backends/cuda/api/runtime.pyx", line 644, in cupy_backends.cuda.api.runtime.freeArray
    check_status(status)
  File "cupy_backends/cuda/api/runtime.pyx", line 265, in cupy_backends.cuda.api.runtime.check_status
    raise CUDARuntimeError(status)
cupy_backends.cuda.api.runtime.CUDARuntimeError: hipErrorUnknown: hipErrorUnknown
_ TestAffineTransformTextureMemory.test_affine_transform_texture_memory[_param_328_{mode='nearest', order=1, output=float32, output_shape=None, shape=(10, 10, 10), theta=0}] _

self = <<cupyx_tests.scipy_tests.ndimage_tests.test_interpolation.TestAffineTransformTextureMemory object at 0x7fab36ff9e20> ...e': 'nearest', 'order': 1, 'output': <class 'numpy.float32'>, 'output_shape': None, 'shape': (10, 10, 10), 'theta': 0}>
xp = <module 'cupy' from '/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.hXnTrEAC7u/cupy/cupy/__init__.py'>
scp = <module 'cupyx.scipy' from '/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.hXnTrEAC7u/cupy/cupyx/scipy/__init__.py'>

    @testing.numpy_cupy_allclose(atol=0.1, scipy_name='scp')
    def test_affine_transform_texture_memory(self, xp, scp):
        a = xp.ones(self.shape, dtype=xp.float32)
        center = numpy.divide(numpy.subtract(self.shape, 1), 2)
    
        if len(self.shape) == 2:
            matrix = self._2d_rotation_matrix(self.theta, center)
        elif len(self.shape) == 3:
            matrix = self._3d_rotation_matrix(self.theta, center)
        else:
            return pytest.xfail('Unsupported shape')
    
        if self.output == 'empty':
            output = xp.empty(self.shape, dtype=xp.float32)
            if self.output_shape:
                return pytest.skip('This combination is tested in '
                                   'test_invalid_texture_arguments')
        else:
            output = self.output
    
        if self.output_shape:
            output_shape = (self.output_shape, ) * len(self.shape)
        else:
            output_shape = self.output_shape
    
        if xp == cupy:
            m = cupyx.scipy.ndimage.affine_transform
            matrix = cupy.array(matrix)
>           return m(a, matrix, output_shape=output_shape,
                     output=output, order=self.order,
                     mode=self.mode, texture_memory=True)

tests/cupyx_tests/scipy_tests/ndimage_tests/test_interpolation.py:398: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
cupyx/scipy/ndimage/interpolation.py:376: in affine_transform
    return _texture.affine_transformation(data=input,
cupyx/_texture.py:168: in affine_transformation
    texture_object = _create_texture_object(data,
cupyx/_texture.py:98: in _create_texture_object
    array = texture.CUDAarray(texture_fmt, *data.shape[::-1])
cupy/cuda/texture.pyx:296: in cupy.cuda.texture.CUDAarray.__init__
    self.ptr = runtime.malloc3DArray(desc.ptr, width, height, depth,
cupy_backends/cuda/api/runtime.pyx:593: in cupy_backends.cuda.api.runtime.malloc3DArray
    check_status(status)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

>   raise CUDARuntimeError(status)
E   AssertionError: Only cupy raises error
E   
E   Traceback (most recent call last):
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.hXnTrEAC7u/cupy/cupy/testing/_helper.py", line 47, in _call_func
E       result = impl(self, *args, **kw)
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.hXnTrEAC7u/cupy/tests/cupyx_tests/scipy_tests/ndimage_tests/test_interpolation.py", line 398, in test_affine_transform_texture_memory
E       return m(a, matrix, output_shape=output_shape,
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.hXnTrEAC7u/cupy/cupyx/scipy/ndimage/interpolation.py", line 376, in affine_transform
E       return _texture.affine_transformation(data=input,
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.hXnTrEAC7u/cupy/cupyx/_texture.py", line 168, in affine_transformation
E       texture_object = _create_texture_object(data,
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.hXnTrEAC7u/cupy/cupyx/_texture.py", line 98, in _create_texture_object
E       array = texture.CUDAarray(texture_fmt, *data.shape[::-1])
E     File "cupy/cuda/texture.pyx", line 296, in cupy.cuda.texture.CUDAarray.__init__
E       self.ptr = runtime.malloc3DArray(desc.ptr, width, height, depth,
E     File "cupy_backends/cuda/api/runtime.pyx", line 593, in cupy_backends.cuda.api.runtime.malloc3DArray
E       check_status(status)
E     File "cupy_backends/cuda/api/runtime.pyx", line 265, in cupy_backends.cuda.api.runtime.check_status
E       raise CUDARuntimeError(status)
E   cupy_backends.cuda.api.runtime.CUDARuntimeError: hipErrorUnknown: hipErrorUnknown

cupy_backends/cuda/api/runtime.pyx:265: AssertionError
----------------------------- Captured stderr call -----------------------------
Traceback (most recent call last):
  File "cupy_backends/cuda/api/runtime.pyx", line 644, in cupy_backends.cuda.api.runtime.freeArray
    check_status(status)
  File "cupy_backends/cuda/api/runtime.pyx", line 265, in cupy_backends.cuda.api.runtime.check_status
    raise CUDARuntimeError(status)
cupy_backends.cuda.api.runtime.CUDARuntimeError: hipErrorUnknown: hipErrorUnknown
_ TestAffineTransformTextureMemory.test_affine_transform_texture_memory[_param_329_{mode='nearest', order=1, output=float32, output_shape=None, shape=(10, 10, 10), theta=90}] _

self = <<cupyx_tests.scipy_tests.ndimage_tests.test_interpolation.TestAffineTransformTextureMemory object at 0x7fab371dd550> ...': 'nearest', 'order': 1, 'output': <class 'numpy.float32'>, 'output_shape': None, 'shape': (10, 10, 10), 'theta': 90}>
xp = <module 'cupy' from '/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.hXnTrEAC7u/cupy/cupy/__init__.py'>
scp = <module 'cupyx.scipy' from '/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.hXnTrEAC7u/cupy/cupyx/scipy/__init__.py'>

    @testing.numpy_cupy_allclose(atol=0.1, scipy_name='scp')
    def test_affine_transform_texture_memory(self, xp, scp):
        a = xp.ones(self.shape, dtype=xp.float32)
        center = numpy.divide(numpy.subtract(self.shape, 1), 2)
    
        if len(self.shape) == 2:
            matrix = self._2d_rotation_matrix(self.theta, center)
        elif len(self.shape) == 3:
            matrix = self._3d_rotation_matrix(self.theta, center)
        else:
            return pytest.xfail('Unsupported shape')
    
        if self.output == 'empty':
            output = xp.empty(self.shape, dtype=xp.float32)
            if self.output_shape:
                return pytest.skip('This combination is tested in '
                                   'test_invalid_texture_arguments')
        else:
            output = self.output
    
        if self.output_shape:
            output_shape = (self.output_shape, ) * len(self.shape)
        else:
            output_shape = self.output_shape
    
        if xp == cupy:
            m = cupyx.scipy.ndimage.affine_transform
            matrix = cupy.array(matrix)
>           return m(a, matrix, output_shape=output_shape,
                     output=output, order=self.order,
                     mode=self.mode, texture_memory=True)

tests/cupyx_tests/scipy_tests/ndimage_tests/test_interpolation.py:398: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
cupyx/scipy/ndimage/interpolation.py:376: in affine_transform
    return _texture.affine_transformation(data=input,
cupyx/_texture.py:168: in affine_transformation
    texture_object = _create_texture_object(data,
cupyx/_texture.py:98: in _create_texture_object
    array = texture.CUDAarray(texture_fmt, *data.shape[::-1])
cupy/cuda/texture.pyx:296: in cupy.cuda.texture.CUDAarray.__init__
    self.ptr = runtime.malloc3DArray(desc.ptr, width, height, depth,
cupy_backends/cuda/api/runtime.pyx:593: in cupy_backends.cuda.api.runtime.malloc3DArray
    check_status(status)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

>   raise CUDARuntimeError(status)
E   AssertionError: Only cupy raises error
E   
E   Traceback (most recent call last):
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.hXnTrEAC7u/cupy/cupy/testing/_helper.py", line 47, in _call_func
E       result = impl(self, *args, **kw)
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.hXnTrEAC7u/cupy/tests/cupyx_tests/scipy_tests/ndimage_tests/test_interpolation.py", line 398, in test_affine_transform_texture_memory
E       return m(a, matrix, output_shape=output_shape,
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.hXnTrEAC7u/cupy/cupyx/scipy/ndimage/interpolation.py", line 376, in affine_transform
E       return _texture.affine_transformation(data=input,
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.hXnTrEAC7u/cupy/cupyx/_texture.py", line 168, in affine_transformation
E       texture_object = _create_texture_object(data,
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.hXnTrEAC7u/cupy/cupyx/_texture.py", line 98, in _create_texture_object
E       array = texture.CUDAarray(texture_fmt, *data.shape[::-1])
E     File "cupy/cuda/texture.pyx", line 296, in cupy.cuda.texture.CUDAarray.__init__
E       self.ptr = runtime.malloc3DArray(desc.ptr, width, height, depth,
E     File "cupy_backends/cuda/api/runtime.pyx", line 593, in cupy_backends.cuda.api.runtime.malloc3DArray
E       check_status(status)
E     File "cupy_backends/cuda/api/runtime.pyx", line 265, in cupy_backends.cuda.api.runtime.check_status
E       raise CUDARuntimeError(status)
E   cupy_backends.cuda.api.runtime.CUDARuntimeError: hipErrorUnknown: hipErrorUnknown

cupy_backends/cuda/api/runtime.pyx:265: AssertionError
----------------------------- Captured stderr call -----------------------------
Traceback (most recent call last):
  File "cupy_backends/cuda/api/runtime.pyx", line 644, in cupy_backends.cuda.api.runtime.freeArray
    check_status(status)
  File "cupy_backends/cuda/api/runtime.pyx", line 265, in cupy_backends.cuda.api.runtime.check_status
    raise CUDARuntimeError(status)
cupy_backends.cuda.api.runtime.CUDARuntimeError: hipErrorUnknown: hipErrorUnknown
_ TestAffineTransformTextureMemory.test_affine_transform_texture_memory[_param_330_{mode='nearest', order=1, output=float32, output_shape=None, shape=(10, 10, 10), theta=180}] _

self = <<cupyx_tests.scipy_tests.ndimage_tests.test_interpolation.TestAffineTransformTextureMemory object at 0x7fab3717fb50> ...: 'nearest', 'order': 1, 'output': <class 'numpy.float32'>, 'output_shape': None, 'shape': (10, 10, 10), 'theta': 180}>
xp = <module 'cupy' from '/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.hXnTrEAC7u/cupy/cupy/__init__.py'>
scp = <module 'cupyx.scipy' from '/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.hXnTrEAC7u/cupy/cupyx/scipy/__init__.py'>

    @testing.numpy_cupy_allclose(atol=0.1, scipy_name='scp')
    def test_affine_transform_texture_memory(self, xp, scp):
        a = xp.ones(self.shape, dtype=xp.float32)
        center = numpy.divide(numpy.subtract(self.shape, 1), 2)
    
        if len(self.shape) == 2:
            matrix = self._2d_rotation_matrix(self.theta, center)
        elif len(self.shape) == 3:
            matrix = self._3d_rotation_matrix(self.theta, center)
        else:
            return pytest.xfail('Unsupported shape')
    
        if self.output == 'empty':
            output = xp.empty(self.shape, dtype=xp.float32)
            if self.output_shape:
                return pytest.skip('This combination is tested in '
                                   'test_invalid_texture_arguments')
        else:
            output = self.output
    
        if self.output_shape:
            output_shape = (self.output_shape, ) * len(self.shape)
        else:
            output_shape = self.output_shape
    
        if xp == cupy:
            m = cupyx.scipy.ndimage.affine_transform
            matrix = cupy.array(matrix)
>           return m(a, matrix, output_shape=output_shape,
                     output=output, order=self.order,
                     mode=self.mode, texture_memory=True)

tests/cupyx_tests/scipy_tests/ndimage_tests/test_interpolation.py:398: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
cupyx/scipy/ndimage/interpolation.py:376: in affine_transform
    return _texture.affine_transformation(data=input,
cupyx/_texture.py:168: in affine_transformation
    texture_object = _create_texture_object(data,
cupyx/_texture.py:98: in _create_texture_object
    array = texture.CUDAarray(texture_fmt, *data.shape[::-1])
cupy/cuda/texture.pyx:296: in cupy.cuda.texture.CUDAarray.__init__
    self.ptr = runtime.malloc3DArray(desc.ptr, width, height, depth,
cupy_backends/cuda/api/runtime.pyx:593: in cupy_backends.cuda.api.runtime.malloc3DArray
    check_status(status)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

>   raise CUDARuntimeError(status)
E   AssertionError: Only cupy raises error
E   
E   Traceback (most recent call last):
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.hXnTrEAC7u/cupy/cupy/testing/_helper.py", line 47, in _call_func
E       result = impl(self, *args, **kw)
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.hXnTrEAC7u/cupy/tests/cupyx_tests/scipy_tests/ndimage_tests/test_interpolation.py", line 398, in test_affine_transform_texture_memory
E       return m(a, matrix, output_shape=output_shape,
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.hXnTrEAC7u/cupy/cupyx/scipy/ndimage/interpolation.py", line 376, in affine_transform
E       return _texture.affine_transformation(data=input,
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.hXnTrEAC7u/cupy/cupyx/_texture.py", line 168, in affine_transformation
E       texture_object = _create_texture_object(data,
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.hXnTrEAC7u/cupy/cupyx/_texture.py", line 98, in _create_texture_object
E       array = texture.CUDAarray(texture_fmt, *data.shape[::-1])
E     File "cupy/cuda/texture.pyx", line 296, in cupy.cuda.texture.CUDAarray.__init__
E       self.ptr = runtime.malloc3DArray(desc.ptr, width, height, depth,
E     File "cupy_backends/cuda/api/runtime.pyx", line 593, in cupy_backends.cuda.api.runtime.malloc3DArray
E       check_status(status)
E     File "cupy_backends/cuda/api/runtime.pyx", line 265, in cupy_backends.cuda.api.runtime.check_status
E       raise CUDARuntimeError(status)
E   cupy_backends.cuda.api.runtime.CUDARuntimeError: hipErrorUnknown: hipErrorUnknown

cupy_backends/cuda/api/runtime.pyx:265: AssertionError
----------------------------- Captured stderr call -----------------------------
Traceback (most recent call last):
  File "cupy_backends/cuda/api/runtime.pyx", line 644, in cupy_backends.cuda.api.runtime.freeArray
    check_status(status)
  File "cupy_backends/cuda/api/runtime.pyx", line 265, in cupy_backends.cuda.api.runtime.check_status
    raise CUDARuntimeError(status)
cupy_backends.cuda.api.runtime.CUDARuntimeError: hipErrorUnknown: hipErrorUnknown
_ TestAffineTransformTextureMemory.test_affine_transform_texture_memory[_param_331_{mode='nearest', order=1, output=float32, output_shape=None, shape=(10, 10, 10), theta=270}] _

self = <<cupyx_tests.scipy_tests.ndimage_tests.test_interpolation.TestAffineTransformTextureMemory object at 0x7fab39e3de80> ...: 'nearest', 'order': 1, 'output': <class 'numpy.float32'>, 'output_shape': None, 'shape': (10, 10, 10), 'theta': 270}>
xp = <module 'cupy' from '/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.hXnTrEAC7u/cupy/cupy/__init__.py'>
scp = <module 'cupyx.scipy' from '/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.hXnTrEAC7u/cupy/cupyx/scipy/__init__.py'>

    @testing.numpy_cupy_allclose(atol=0.1, scipy_name='scp')
    def test_affine_transform_texture_memory(self, xp, scp):
        a = xp.ones(self.shape, dtype=xp.float32)
        center = numpy.divide(numpy.subtract(self.shape, 1), 2)
    
        if len(self.shape) == 2:
            matrix = self._2d_rotation_matrix(self.theta, center)
        elif len(self.shape) == 3:
            matrix = self._3d_rotation_matrix(self.theta, center)
        else:
            return pytest.xfail('Unsupported shape')
    
        if self.output == 'empty':
            output = xp.empty(self.shape, dtype=xp.float32)
            if self.output_shape:
                return pytest.skip('This combination is tested in '
                                   'test_invalid_texture_arguments')
        else:
            output = self.output
    
        if self.output_shape:
            output_shape = (self.output_shape, ) * len(self.shape)
        else:
            output_shape = self.output_shape
    
        if xp == cupy:
            m = cupyx.scipy.ndimage.affine_transform
            matrix = cupy.array(matrix)
>           return m(a, matrix, output_shape=output_shape,
                     output=output, order=self.order,
                     mode=self.mode, texture_memory=True)

tests/cupyx_tests/scipy_tests/ndimage_tests/test_interpolation.py:398: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
cupyx/scipy/ndimage/interpolation.py:376: in affine_transform
    return _texture.affine_transformation(data=input,
cupyx/_texture.py:168: in affine_transformation
    texture_object = _create_texture_object(data,
cupyx/_texture.py:98: in _create_texture_object
    array = texture.CUDAarray(texture_fmt, *data.shape[::-1])
cupy/cuda/texture.pyx:296: in cupy.cuda.texture.CUDAarray.__init__
    self.ptr = runtime.malloc3DArray(desc.ptr, width, height, depth,
cupy_backends/cuda/api/runtime.pyx:593: in cupy_backends.cuda.api.runtime.malloc3DArray
    check_status(status)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

>   raise CUDARuntimeError(status)
E   AssertionError: Only cupy raises error
E   
E   Traceback (most recent call last):
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.hXnTrEAC7u/cupy/cupy/testing/_helper.py", line 47, in _call_func
E       result = impl(self, *args, **kw)
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.hXnTrEAC7u/cupy/tests/cupyx_tests/scipy_tests/ndimage_tests/test_interpolation.py", line 398, in test_affine_transform_texture_memory
E       return m(a, matrix, output_shape=output_shape,
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.hXnTrEAC7u/cupy/cupyx/scipy/ndimage/interpolation.py", line 376, in affine_transform
E       return _texture.affine_transformation(data=input,
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.hXnTrEAC7u/cupy/cupyx/_texture.py", line 168, in affine_transformation
E       texture_object = _create_texture_object(data,
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.hXnTrEAC7u/cupy/cupyx/_texture.py", line 98, in _create_texture_object
E       array = texture.CUDAarray(texture_fmt, *data.shape[::-1])
E     File "cupy/cuda/texture.pyx", line 296, in cupy.cuda.texture.CUDAarray.__init__
E       self.ptr = runtime.malloc3DArray(desc.ptr, width, height, depth,
E     File "cupy_backends/cuda/api/runtime.pyx", line 593, in cupy_backends.cuda.api.runtime.malloc3DArray
E       check_status(status)
E     File "cupy_backends/cuda/api/runtime.pyx", line 265, in cupy_backends.cuda.api.runtime.check_status
E       raise CUDARuntimeError(status)
E   cupy_backends.cuda.api.runtime.CUDARuntimeError: hipErrorUnknown: hipErrorUnknown

cupy_backends/cuda/api/runtime.pyx:265: AssertionError
----------------------------- Captured stderr call -----------------------------
Traceback (most recent call last):
  File "cupy_backends/cuda/api/runtime.pyx", line 644, in cupy_backends.cuda.api.runtime.freeArray
    check_status(status)
  File "cupy_backends/cuda/api/runtime.pyx", line 265, in cupy_backends.cuda.api.runtime.check_status
    raise CUDARuntimeError(status)
cupy_backends.cuda.api.runtime.CUDARuntimeError: hipErrorUnknown: hipErrorUnknown
_ TestAffineTransformTextureMemory.test_affine_transform_texture_memory[_param_332_{mode='nearest', order=1, output=float32, output_shape=None, shape=(10, 20, 30), theta=0}] _

self = <<cupyx_tests.scipy_tests.ndimage_tests.test_interpolation.TestAffineTransformTextureMemory object at 0x7fab37163940> ...e': 'nearest', 'order': 1, 'output': <class 'numpy.float32'>, 'output_shape': None, 'shape': (10, 20, 30), 'theta': 0}>
xp = <module 'cupy' from '/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.hXnTrEAC7u/cupy/cupy/__init__.py'>
scp = <module 'cupyx.scipy' from '/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.hXnTrEAC7u/cupy/cupyx/scipy/__init__.py'>

    @testing.numpy_cupy_allclose(atol=0.1, scipy_name='scp')
    def test_affine_transform_texture_memory(self, xp, scp):
        a = xp.ones(self.shape, dtype=xp.float32)
        center = numpy.divide(numpy.subtract(self.shape, 1), 2)
    
        if len(self.shape) == 2:
            matrix = self._2d_rotation_matrix(self.theta, center)
        elif len(self.shape) == 3:
            matrix = self._3d_rotation_matrix(self.theta, center)
        else:
            return pytest.xfail('Unsupported shape')
    
        if self.output == 'empty':
            output = xp.empty(self.shape, dtype=xp.float32)
            if self.output_shape:
                return pytest.skip('This combination is tested in '
                                   'test_invalid_texture_arguments')
        else:
            output = self.output
    
        if self.output_shape:
            output_shape = (self.output_shape, ) * len(self.shape)
        else:
            output_shape = self.output_shape
    
        if xp == cupy:
            m = cupyx.scipy.ndimage.affine_transform
            matrix = cupy.array(matrix)
>           return m(a, matrix, output_shape=output_shape,
                     output=output, order=self.order,
                     mode=self.mode, texture_memory=True)

tests/cupyx_tests/scipy_tests/ndimage_tests/test_interpolation.py:398: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
cupyx/scipy/ndimage/interpolation.py:376: in affine_transform
    return _texture.affine_transformation(data=input,
cupyx/_texture.py:168: in affine_transformation
    texture_object = _create_texture_object(data,
cupyx/_texture.py:98: in _create_texture_object
    array = texture.CUDAarray(texture_fmt, *data.shape[::-1])
cupy/cuda/texture.pyx:296: in cupy.cuda.texture.CUDAarray.__init__
    self.ptr = runtime.malloc3DArray(desc.ptr, width, height, depth,
cupy_backends/cuda/api/runtime.pyx:593: in cupy_backends.cuda.api.runtime.malloc3DArray
    check_status(status)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

>   raise CUDARuntimeError(status)
E   AssertionError: Only cupy raises error
E   
E   Traceback (most recent call last):
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.hXnTrEAC7u/cupy/cupy/testing/_helper.py", line 47, in _call_func
E       result = impl(self, *args, **kw)
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.hXnTrEAC7u/cupy/tests/cupyx_tests/scipy_tests/ndimage_tests/test_interpolation.py", line 398, in test_affine_transform_texture_memory
E       return m(a, matrix, output_shape=output_shape,
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.hXnTrEAC7u/cupy/cupyx/scipy/ndimage/interpolation.py", line 376, in affine_transform
E       return _texture.affine_transformation(data=input,
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.hXnTrEAC7u/cupy/cupyx/_texture.py", line 168, in affine_transformation
E       texture_object = _create_texture_object(data,
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.hXnTrEAC7u/cupy/cupyx/_texture.py", line 98, in _create_texture_object
E       array = texture.CUDAarray(texture_fmt, *data.shape[::-1])
E     File "cupy/cuda/texture.pyx", line 296, in cupy.cuda.texture.CUDAarray.__init__
E       self.ptr = runtime.malloc3DArray(desc.ptr, width, height, depth,
E     File "cupy_backends/cuda/api/runtime.pyx", line 593, in cupy_backends.cuda.api.runtime.malloc3DArray
E       check_status(status)
E     File "cupy_backends/cuda/api/runtime.pyx", line 265, in cupy_backends.cuda.api.runtime.check_status
E       raise CUDARuntimeError(status)
E   cupy_backends.cuda.api.runtime.CUDARuntimeError: hipErrorUnknown: hipErrorUnknown

cupy_backends/cuda/api/runtime.pyx:265: AssertionError
----------------------------- Captured stderr call -----------------------------
Traceback (most recent call last):
  File "cupy_backends/cuda/api/runtime.pyx", line 644, in cupy_backends.cuda.api.runtime.freeArray
    check_status(status)
  File "cupy_backends/cuda/api/runtime.pyx", line 265, in cupy_backends.cuda.api.runtime.check_status
    raise CUDARuntimeError(status)
cupy_backends.cuda.api.runtime.CUDARuntimeError: hipErrorUnknown: hipErrorUnknown
_ TestAffineTransformTextureMemory.test_affine_transform_texture_memory[_param_333_{mode='nearest', order=1, output=float32, output_shape=None, shape=(10, 20, 30), theta=90}] _

self = <<cupyx_tests.scipy_tests.ndimage_tests.test_interpolation.TestAffineTransformTextureMemory object at 0x7fab36f5f430> ...': 'nearest', 'order': 1, 'output': <class 'numpy.float32'>, 'output_shape': None, 'shape': (10, 20, 30), 'theta': 90}>
xp = <module 'cupy' from '/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.hXnTrEAC7u/cupy/cupy/__init__.py'>
scp = <module 'cupyx.scipy' from '/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.hXnTrEAC7u/cupy/cupyx/scipy/__init__.py'>

    @testing.numpy_cupy_allclose(atol=0.1, scipy_name='scp')
    def test_affine_transform_texture_memory(self, xp, scp):
        a = xp.ones(self.shape, dtype=xp.float32)
        center = numpy.divide(numpy.subtract(self.shape, 1), 2)
    
        if len(self.shape) == 2:
            matrix = self._2d_rotation_matrix(self.theta, center)
        elif len(self.shape) == 3:
            matrix = self._3d_rotation_matrix(self.theta, center)
        else:
            return pytest.xfail('Unsupported shape')
    
        if self.output == 'empty':
            output = xp.empty(self.shape, dtype=xp.float32)
            if self.output_shape:
                return pytest.skip('This combination is tested in '
                                   'test_invalid_texture_arguments')
        else:
            output = self.output
    
        if self.output_shape:
            output_shape = (self.output_shape, ) * len(self.shape)
        else:
            output_shape = self.output_shape
    
        if xp == cupy:
            m = cupyx.scipy.ndimage.affine_transform
            matrix = cupy.array(matrix)
>           return m(a, matrix, output_shape=output_shape,
                     output=output, order=self.order,
                     mode=self.mode, texture_memory=True)

tests/cupyx_tests/scipy_tests/ndimage_tests/test_interpolation.py:398: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
cupyx/scipy/ndimage/interpolation.py:376: in affine_transform
    return _texture.affine_transformation(data=input,
cupyx/_texture.py:168: in affine_transformation
    texture_object = _create_texture_object(data,
cupyx/_texture.py:98: in _create_texture_object
    array = texture.CUDAarray(texture_fmt, *data.shape[::-1])
cupy/cuda/texture.pyx:296: in cupy.cuda.texture.CUDAarray.__init__
    self.ptr = runtime.malloc3DArray(desc.ptr, width, height, depth,
cupy_backends/cuda/api/runtime.pyx:593: in cupy_backends.cuda.api.runtime.malloc3DArray
    check_status(status)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

>   raise CUDARuntimeError(status)
E   AssertionError: Only cupy raises error
E   
E   Traceback (most recent call last):
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.hXnTrEAC7u/cupy/cupy/testing/_helper.py", line 47, in _call_func
E       result = impl(self, *args, **kw)
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.hXnTrEAC7u/cupy/tests/cupyx_tests/scipy_tests/ndimage_tests/test_interpolation.py", line 398, in test_affine_transform_texture_memory
E       return m(a, matrix, output_shape=output_shape,
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.hXnTrEAC7u/cupy/cupyx/scipy/ndimage/interpolation.py", line 376, in affine_transform
E       return _texture.affine_transformation(data=input,
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.hXnTrEAC7u/cupy/cupyx/_texture.py", line 168, in affine_transformation
E       texture_object = _create_texture_object(data,
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.hXnTrEAC7u/cupy/cupyx/_texture.py", line 98, in _create_texture_object
E       array = texture.CUDAarray(texture_fmt, *data.shape[::-1])
E     File "cupy/cuda/texture.pyx", line 296, in cupy.cuda.texture.CUDAarray.__init__
E       self.ptr = runtime.malloc3DArray(desc.ptr, width, height, depth,
E     File "cupy_backends/cuda/api/runtime.pyx", line 593, in cupy_backends.cuda.api.runtime.malloc3DArray
E       check_status(status)
E     File "cupy_backends/cuda/api/runtime.pyx", line 265, in cupy_backends.cuda.api.runtime.check_status
E       raise CUDARuntimeError(status)
E   cupy_backends.cuda.api.runtime.CUDARuntimeError: hipErrorUnknown: hipErrorUnknown

cupy_backends/cuda/api/runtime.pyx:265: AssertionError
----------------------------- Captured stderr call -----------------------------
Traceback (most recent call last):
  File "cupy_backends/cuda/api/runtime.pyx", line 644, in cupy_backends.cuda.api.runtime.freeArray
    check_status(status)
  File "cupy_backends/cuda/api/runtime.pyx", line 265, in cupy_backends.cuda.api.runtime.check_status
    raise CUDARuntimeError(status)
cupy_backends.cuda.api.runtime.CUDARuntimeError: hipErrorUnknown: hipErrorUnknown
_ TestAffineTransformTextureMemory.test_affine_transform_texture_memory[_param_334_{mode='nearest', order=1, output=float32, output_shape=None, shape=(10, 20, 30), theta=180}] _

self = <<cupyx_tests.scipy_tests.ndimage_tests.test_interpolation.TestAffineTransformTextureMemory object at 0x7fab371a23d0> ...: 'nearest', 'order': 1, 'output': <class 'numpy.float32'>, 'output_shape': None, 'shape': (10, 20, 30), 'theta': 180}>
xp = <module 'cupy' from '/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.hXnTrEAC7u/cupy/cupy/__init__.py'>
scp = <module 'cupyx.scipy' from '/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.hXnTrEAC7u/cupy/cupyx/scipy/__init__.py'>

    @testing.numpy_cupy_allclose(atol=0.1, scipy_name='scp')
    def test_affine_transform_texture_memory(self, xp, scp):
        a = xp.ones(self.shape, dtype=xp.float32)
        center = numpy.divide(numpy.subtract(self.shape, 1), 2)
    
        if len(self.shape) == 2:
            matrix = self._2d_rotation_matrix(self.theta, center)
        elif len(self.shape) == 3:
            matrix = self._3d_rotation_matrix(self.theta, center)
        else:
            return pytest.xfail('Unsupported shape')
    
        if self.output == 'empty':
            output = xp.empty(self.shape, dtype=xp.float32)
            if self.output_shape:
                return pytest.skip('This combination is tested in '
                                   'test_invalid_texture_arguments')
        else:
            output = self.output
    
        if self.output_shape:
            output_shape = (self.output_shape, ) * len(self.shape)
        else:
            output_shape = self.output_shape
    
        if xp == cupy:
            m = cupyx.scipy.ndimage.affine_transform
            matrix = cupy.array(matrix)
>           return m(a, matrix, output_shape=output_shape,
                     output=output, order=self.order,
                     mode=self.mode, texture_memory=True)

tests/cupyx_tests/scipy_tests/ndimage_tests/test_interpolation.py:398: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
cupyx/scipy/ndimage/interpolation.py:376: in affine_transform
    return _texture.affine_transformation(data=input,
cupyx/_texture.py:168: in affine_transformation
    texture_object = _create_texture_object(data,
cupyx/_texture.py:98: in _create_texture_object
    array = texture.CUDAarray(texture_fmt, *data.shape[::-1])
cupy/cuda/texture.pyx:296: in cupy.cuda.texture.CUDAarray.__init__
    self.ptr = runtime.malloc3DArray(desc.ptr, width, height, depth,
cupy_backends/cuda/api/runtime.pyx:593: in cupy_backends.cuda.api.runtime.malloc3DArray
    check_status(status)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

>   raise CUDARuntimeError(status)
E   AssertionError: Only cupy raises error
E   
E   Traceback (most recent call last):
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.hXnTrEAC7u/cupy/cupy/testing/_helper.py", line 47, in _call_func
E       result = impl(self, *args, **kw)
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.hXnTrEAC7u/cupy/tests/cupyx_tests/scipy_tests/ndimage_tests/test_interpolation.py", line 398, in test_affine_transform_texture_memory
E       return m(a, matrix, output_shape=output_shape,
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.hXnTrEAC7u/cupy/cupyx/scipy/ndimage/interpolation.py", line 376, in affine_transform
E       return _texture.affine_transformation(data=input,
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.hXnTrEAC7u/cupy/cupyx/_texture.py", line 168, in affine_transformation
E       texture_object = _create_texture_object(data,
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.hXnTrEAC7u/cupy/cupyx/_texture.py", line 98, in _create_texture_object
E       array = texture.CUDAarray(texture_fmt, *data.shape[::-1])
E     File "cupy/cuda/texture.pyx", line 296, in cupy.cuda.texture.CUDAarray.__init__
E       self.ptr = runtime.malloc3DArray(desc.ptr, width, height, depth,
E     File "cupy_backends/cuda/api/runtime.pyx", line 593, in cupy_backends.cuda.api.runtime.malloc3DArray
E       check_status(status)
E     File "cupy_backends/cuda/api/runtime.pyx", line 265, in cupy_backends.cuda.api.runtime.check_status
E       raise CUDARuntimeError(status)
E   cupy_backends.cuda.api.runtime.CUDARuntimeError: hipErrorUnknown: hipErrorUnknown

cupy_backends/cuda/api/runtime.pyx:265: AssertionError
----------------------------- Captured stderr call -----------------------------
Traceback (most recent call last):
  File "cupy_backends/cuda/api/runtime.pyx", line 644, in cupy_backends.cuda.api.runtime.freeArray
    check_status(status)
  File "cupy_backends/cuda/api/runtime.pyx", line 265, in cupy_backends.cuda.api.runtime.check_status
    raise CUDARuntimeError(status)
cupy_backends.cuda.api.runtime.CUDARuntimeError: hipErrorUnknown: hipErrorUnknown
_ TestAffineTransformTextureMemory.test_affine_transform_texture_memory[_param_335_{mode='nearest', order=1, output=float32, output_shape=None, shape=(10, 20, 30), theta=270}] _

self = <<cupyx_tests.scipy_tests.ndimage_tests.test_interpolation.TestAffineTransformTextureMemory object at 0x7fab36c41400> ...: 'nearest', 'order': 1, 'output': <class 'numpy.float32'>, 'output_shape': None, 'shape': (10, 20, 30), 'theta': 270}>
xp = <module 'cupy' from '/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.hXnTrEAC7u/cupy/cupy/__init__.py'>
scp = <module 'cupyx.scipy' from '/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.hXnTrEAC7u/cupy/cupyx/scipy/__init__.py'>

    @testing.numpy_cupy_allclose(atol=0.1, scipy_name='scp')
    def test_affine_transform_texture_memory(self, xp, scp):
        a = xp.ones(self.shape, dtype=xp.float32)
        center = numpy.divide(numpy.subtract(self.shape, 1), 2)
    
        if len(self.shape) == 2:
            matrix = self._2d_rotation_matrix(self.theta, center)
        elif len(self.shape) == 3:
            matrix = self._3d_rotation_matrix(self.theta, center)
        else:
            return pytest.xfail('Unsupported shape')
    
        if self.output == 'empty':
            output = xp.empty(self.shape, dtype=xp.float32)
            if self.output_shape:
                return pytest.skip('This combination is tested in '
                                   'test_invalid_texture_arguments')
        else:
            output = self.output
    
        if self.output_shape:
            output_shape = (self.output_shape, ) * len(self.shape)
        else:
            output_shape = self.output_shape
    
        if xp == cupy:
            m = cupyx.scipy.ndimage.affine_transform
            matrix = cupy.array(matrix)
>           return m(a, matrix, output_shape=output_shape,
                     output=output, order=self.order,
                     mode=self.mode, texture_memory=True)

tests/cupyx_tests/scipy_tests/ndimage_tests/test_interpolation.py:398: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
cupyx/scipy/ndimage/interpolation.py:376: in affine_transform
    return _texture.affine_transformation(data=input,
cupyx/_texture.py:168: in affine_transformation
    texture_object = _create_texture_object(data,
cupyx/_texture.py:98: in _create_texture_object
    array = texture.CUDAarray(texture_fmt, *data.shape[::-1])
cupy/cuda/texture.pyx:296: in cupy.cuda.texture.CUDAarray.__init__
    self.ptr = runtime.malloc3DArray(desc.ptr, width, height, depth,
cupy_backends/cuda/api/runtime.pyx:593: in cupy_backends.cuda.api.runtime.malloc3DArray
    check_status(status)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

>   raise CUDARuntimeError(status)
E   AssertionError: Only cupy raises error
E   
E   Traceback (most recent call last):
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.hXnTrEAC7u/cupy/cupy/testing/_helper.py", line 47, in _call_func
E       result = impl(self, *args, **kw)
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.hXnTrEAC7u/cupy/tests/cupyx_tests/scipy_tests/ndimage_tests/test_interpolation.py", line 398, in test_affine_transform_texture_memory
E       return m(a, matrix, output_shape=output_shape,
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.hXnTrEAC7u/cupy/cupyx/scipy/ndimage/interpolation.py", line 376, in affine_transform
E       return _texture.affine_transformation(data=input,
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.hXnTrEAC7u/cupy/cupyx/_texture.py", line 168, in affine_transformation
E       texture_object = _create_texture_object(data,
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.hXnTrEAC7u/cupy/cupyx/_texture.py", line 98, in _create_texture_object
E       array = texture.CUDAarray(texture_fmt, *data.shape[::-1])
E     File "cupy/cuda/texture.pyx", line 296, in cupy.cuda.texture.CUDAarray.__init__
E       self.ptr = runtime.malloc3DArray(desc.ptr, width, height, depth,
E     File "cupy_backends/cuda/api/runtime.pyx", line 593, in cupy_backends.cuda.api.runtime.malloc3DArray
E       check_status(status)
E     File "cupy_backends/cuda/api/runtime.pyx", line 265, in cupy_backends.cuda.api.runtime.check_status
E       raise CUDARuntimeError(status)
E   cupy_backends.cuda.api.runtime.CUDARuntimeError: hipErrorUnknown: hipErrorUnknown

cupy_backends/cuda/api/runtime.pyx:265: AssertionError
----------------------------- Captured stderr call -----------------------------
Traceback (most recent call last):
  File "cupy_backends/cuda/api/runtime.pyx", line 644, in cupy_backends.cuda.api.runtime.freeArray
    check_status(status)
  File "cupy_backends/cuda/api/runtime.pyx", line 265, in cupy_backends.cuda.api.runtime.check_status
    raise CUDARuntimeError(status)
cupy_backends.cuda.api.runtime.CUDARuntimeError: hipErrorUnknown: hipErrorUnknown
_ TestAffineTransformTextureMemory.test_affine_transform_texture_memory[_param_336_{mode='nearest', order=1, output=float32, output_shape=10, shape=(100, 100), theta=0}] _

self = <<cupyx_tests.scipy_tests.ndimage_tests.test_interpolation.TestAffineTransformTextureMemory object at 0x7fab3710a100> ...'mode': 'nearest', 'order': 1, 'output': <class 'numpy.float32'>, 'output_shape': 10, 'shape': (100, 100), 'theta': 0}>
xp = <module 'cupy' from '/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.hXnTrEAC7u/cupy/cupy/__init__.py'>
scp = <module 'cupyx.scipy' from '/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.hXnTrEAC7u/cupy/cupyx/scipy/__init__.py'>

    @testing.numpy_cupy_allclose(atol=0.1, scipy_name='scp')
    def test_affine_transform_texture_memory(self, xp, scp):
        a = xp.ones(self.shape, dtype=xp.float32)
        center = numpy.divide(numpy.subtract(self.shape, 1), 2)
    
        if len(self.shape) == 2:
            matrix = self._2d_rotation_matrix(self.theta, center)
        elif len(self.shape) == 3:
            matrix = self._3d_rotation_matrix(self.theta, center)
        else:
            return pytest.xfail('Unsupported shape')
    
        if self.output == 'empty':
            output = xp.empty(self.shape, dtype=xp.float32)
            if self.output_shape:
                return pytest.skip('This combination is tested in '
                                   'test_invalid_texture_arguments')
        else:
            output = self.output
    
        if self.output_shape:
            output_shape = (self.output_shape, ) * len(self.shape)
        else:
            output_shape = self.output_shape
    
        if xp == cupy:
            m = cupyx.scipy.ndimage.affine_transform
            matrix = cupy.array(matrix)
>           return m(a, matrix, output_shape=output_shape,
                     output=output, order=self.order,
                     mode=self.mode, texture_memory=True)

tests/cupyx_tests/scipy_tests/ndimage_tests/test_interpolation.py:398: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
cupyx/scipy/ndimage/interpolation.py:376: in affine_transform
    return _texture.affine_transformation(data=input,
cupyx/_texture.py:168: in affine_transformation
    texture_object = _create_texture_object(data,
cupyx/_texture.py:98: in _create_texture_object
    array = texture.CUDAarray(texture_fmt, *data.shape[::-1])
cupy/cuda/texture.pyx:296: in cupy.cuda.texture.CUDAarray.__init__
    self.ptr = runtime.malloc3DArray(desc.ptr, width, height, depth,
cupy_backends/cuda/api/runtime.pyx:593: in cupy_backends.cuda.api.runtime.malloc3DArray
    check_status(status)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

>   raise CUDARuntimeError(status)
E   AssertionError: Only cupy raises error
E   
E   Traceback (most recent call last):
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.hXnTrEAC7u/cupy/cupy/testing/_helper.py", line 47, in _call_func
E       result = impl(self, *args, **kw)
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.hXnTrEAC7u/cupy/tests/cupyx_tests/scipy_tests/ndimage_tests/test_interpolation.py", line 398, in test_affine_transform_texture_memory
E       return m(a, matrix, output_shape=output_shape,
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.hXnTrEAC7u/cupy/cupyx/scipy/ndimage/interpolation.py", line 376, in affine_transform
E       return _texture.affine_transformation(data=input,
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.hXnTrEAC7u/cupy/cupyx/_texture.py", line 168, in affine_transformation
E       texture_object = _create_texture_object(data,
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.hXnTrEAC7u/cupy/cupyx/_texture.py", line 98, in _create_texture_object
E       array = texture.CUDAarray(texture_fmt, *data.shape[::-1])
E     File "cupy/cuda/texture.pyx", line 296, in cupy.cuda.texture.CUDAarray.__init__
E       self.ptr = runtime.malloc3DArray(desc.ptr, width, height, depth,
E     File "cupy_backends/cuda/api/runtime.pyx", line 593, in cupy_backends.cuda.api.runtime.malloc3DArray
E       check_status(status)
E     File "cupy_backends/cuda/api/runtime.pyx", line 265, in cupy_backends.cuda.api.runtime.check_status
E       raise CUDARuntimeError(status)
E   cupy_backends.cuda.api.runtime.CUDARuntimeError: hipErrorUnknown: hipErrorUnknown

cupy_backends/cuda/api/runtime.pyx:265: AssertionError
----------------------------- Captured stderr call -----------------------------
Traceback (most recent call last):
  File "cupy_backends/cuda/api/runtime.pyx", line 644, in cupy_backends.cuda.api.runtime.freeArray
    check_status(status)
  File "cupy_backends/cuda/api/runtime.pyx", line 265, in cupy_backends.cuda.api.runtime.check_status
    raise CUDARuntimeError(status)
cupy_backends.cuda.api.runtime.CUDARuntimeError: hipErrorUnknown: hipErrorUnknown
_ TestAffineTransformTextureMemory.test_affine_transform_texture_memory[_param_337_{mode='nearest', order=1, output=float32, output_shape=10, shape=(100, 100), theta=90}] _

self = <<cupyx_tests.scipy_tests.ndimage_tests.test_interpolation.TestAffineTransformTextureMemory object at 0x7fab36ffd0d0> ...mode': 'nearest', 'order': 1, 'output': <class 'numpy.float32'>, 'output_shape': 10, 'shape': (100, 100), 'theta': 90}>
xp = <module 'cupy' from '/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.hXnTrEAC7u/cupy/cupy/__init__.py'>
scp = <module 'cupyx.scipy' from '/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.hXnTrEAC7u/cupy/cupyx/scipy/__init__.py'>

    @testing.numpy_cupy_allclose(atol=0.1, scipy_name='scp')
    def test_affine_transform_texture_memory(self, xp, scp):
        a = xp.ones(self.shape, dtype=xp.float32)
        center = numpy.divide(numpy.subtract(self.shape, 1), 2)
    
        if len(self.shape) == 2:
            matrix = self._2d_rotation_matrix(self.theta, center)
        elif len(self.shape) == 3:
            matrix = self._3d_rotation_matrix(self.theta, center)
        else:
            return pytest.xfail('Unsupported shape')
    
        if self.output == 'empty':
            output = xp.empty(self.shape, dtype=xp.float32)
            if self.output_shape:
                return pytest.skip('This combination is tested in '
                                   'test_invalid_texture_arguments')
        else:
            output = self.output
    
        if self.output_shape:
            output_shape = (self.output_shape, ) * len(self.shape)
        else:
            output_shape = self.output_shape
    
        if xp == cupy:
            m = cupyx.scipy.ndimage.affine_transform
            matrix = cupy.array(matrix)
>           return m(a, matrix, output_shape=output_shape,
                     output=output, order=self.order,
                     mode=self.mode, texture_memory=True)

tests/cupyx_tests/scipy_tests/ndimage_tests/test_interpolation.py:398: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
cupyx/scipy/ndimage/interpolation.py:376: in affine_transform
    return _texture.affine_transformation(data=input,
cupyx/_texture.py:168: in affine_transformation
    texture_object = _create_texture_object(data,
cupyx/_texture.py:98: in _create_texture_object
    array = texture.CUDAarray(texture_fmt, *data.shape[::-1])
cupy/cuda/texture.pyx:296: in cupy.cuda.texture.CUDAarray.__init__
    self.ptr = runtime.malloc3DArray(desc.ptr, width, height, depth,
cupy_backends/cuda/api/runtime.pyx:593: in cupy_backends.cuda.api.runtime.malloc3DArray
    check_status(status)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

>   raise CUDARuntimeError(status)
E   AssertionError: Only cupy raises error
E   
E   Traceback (most recent call last):
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.hXnTrEAC7u/cupy/cupy/testing/_helper.py", line 47, in _call_func
E       result = impl(self, *args, **kw)
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.hXnTrEAC7u/cupy/tests/cupyx_tests/scipy_tests/ndimage_tests/test_interpolation.py", line 398, in test_affine_transform_texture_memory
E       return m(a, matrix, output_shape=output_shape,
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.hXnTrEAC7u/cupy/cupyx/scipy/ndimage/interpolation.py", line 376, in affine_transform
E       return _texture.affine_transformation(data=input,
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.hXnTrEAC7u/cupy/cupyx/_texture.py", line 168, in affine_transformation
E       texture_object = _create_texture_object(data,
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.hXnTrEAC7u/cupy/cupyx/_texture.py", line 98, in _create_texture_object
E       array = texture.CUDAarray(texture_fmt, *data.shape[::-1])
E     File "cupy/cuda/texture.pyx", line 296, in cupy.cuda.texture.CUDAarray.__init__
E       self.ptr = runtime.malloc3DArray(desc.ptr, width, height, depth,
E     File "cupy_backends/cuda/api/runtime.pyx", line 593, in cupy_backends.cuda.api.runtime.malloc3DArray
E       check_status(status)
E     File "cupy_backends/cuda/api/runtime.pyx", line 265, in cupy_backends.cuda.api.runtime.check_status
E       raise CUDARuntimeError(status)
E   cupy_backends.cuda.api.runtime.CUDARuntimeError: hipErrorUnknown: hipErrorUnknown

cupy_backends/cuda/api/runtime.pyx:265: AssertionError
----------------------------- Captured stderr call -----------------------------
Traceback (most recent call last):
  File "cupy_backends/cuda/api/runtime.pyx", line 644, in cupy_backends.cuda.api.runtime.freeArray
    check_status(status)
  File "cupy_backends/cuda/api/runtime.pyx", line 265, in cupy_backends.cuda.api.runtime.check_status
    raise CUDARuntimeError(status)
cupy_backends.cuda.api.runtime.CUDARuntimeError: hipErrorUnknown: hipErrorUnknown
_ TestAffineTransformTextureMemory.test_affine_transform_texture_memory[_param_338_{mode='nearest', order=1, output=float32, output_shape=10, shape=(100, 100), theta=180}] _

self = <<cupyx_tests.scipy_tests.ndimage_tests.test_interpolation.TestAffineTransformTextureMemory object at 0x7fab372a41f0> ...ode': 'nearest', 'order': 1, 'output': <class 'numpy.float32'>, 'output_shape': 10, 'shape': (100, 100), 'theta': 180}>
xp = <module 'cupy' from '/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.hXnTrEAC7u/cupy/cupy/__init__.py'>
scp = <module 'cupyx.scipy' from '/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.hXnTrEAC7u/cupy/cupyx/scipy/__init__.py'>

    @testing.numpy_cupy_allclose(atol=0.1, scipy_name='scp')
    def test_affine_transform_texture_memory(self, xp, scp):
        a = xp.ones(self.shape, dtype=xp.float32)
        center = numpy.divide(numpy.subtract(self.shape, 1), 2)
    
        if len(self.shape) == 2:
            matrix = self._2d_rotation_matrix(self.theta, center)
        elif len(self.shape) == 3:
            matrix = self._3d_rotation_matrix(self.theta, center)
        else:
            return pytest.xfail('Unsupported shape')
    
        if self.output == 'empty':
            output = xp.empty(self.shape, dtype=xp.float32)
            if self.output_shape:
                return pytest.skip('This combination is tested in '
                                   'test_invalid_texture_arguments')
        else:
            output = self.output
    
        if self.output_shape:
            output_shape = (self.output_shape, ) * len(self.shape)
        else:
            output_shape = self.output_shape
    
        if xp == cupy:
            m = cupyx.scipy.ndimage.affine_transform
            matrix = cupy.array(matrix)
>           return m(a, matrix, output_shape=output_shape,
                     output=output, order=self.order,
                     mode=self.mode, texture_memory=True)

tests/cupyx_tests/scipy_tests/ndimage_tests/test_interpolation.py:398: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
cupyx/scipy/ndimage/interpolation.py:376: in affine_transform
    return _texture.affine_transformation(data=input,
cupyx/_texture.py:168: in affine_transformation
    texture_object = _create_texture_object(data,
cupyx/_texture.py:98: in _create_texture_object
    array = texture.CUDAarray(texture_fmt, *data.shape[::-1])
cupy/cuda/texture.pyx:296: in cupy.cuda.texture.CUDAarray.__init__
    self.ptr = runtime.malloc3DArray(desc.ptr, width, height, depth,
cupy_backends/cuda/api/runtime.pyx:593: in cupy_backends.cuda.api.runtime.malloc3DArray
    check_status(status)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

>   raise CUDARuntimeError(status)
E   AssertionError: Only cupy raises error
E   
E   Traceback (most recent call last):
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.hXnTrEAC7u/cupy/cupy/testing/_helper.py", line 47, in _call_func
E       result = impl(self, *args, **kw)
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.hXnTrEAC7u/cupy/tests/cupyx_tests/scipy_tests/ndimage_tests/test_interpolation.py", line 398, in test_affine_transform_texture_memory
E       return m(a, matrix, output_shape=output_shape,
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.hXnTrEAC7u/cupy/cupyx/scipy/ndimage/interpolation.py", line 376, in affine_transform
E       return _texture.affine_transformation(data=input,
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.hXnTrEAC7u/cupy/cupyx/_texture.py", line 168, in affine_transformation
E       texture_object = _create_texture_object(data,
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.hXnTrEAC7u/cupy/cupyx/_texture.py", line 98, in _create_texture_object
E       array = texture.CUDAarray(texture_fmt, *data.shape[::-1])
E     File "cupy/cuda/texture.pyx", line 296, in cupy.cuda.texture.CUDAarray.__init__
E       self.ptr = runtime.malloc3DArray(desc.ptr, width, height, depth,
E     File "cupy_backends/cuda/api/runtime.pyx", line 593, in cupy_backends.cuda.api.runtime.malloc3DArray
E       check_status(status)
E     File "cupy_backends/cuda/api/runtime.pyx", line 265, in cupy_backends.cuda.api.runtime.check_status
E       raise CUDARuntimeError(status)
E   cupy_backends.cuda.api.runtime.CUDARuntimeError: hipErrorUnknown: hipErrorUnknown

cupy_backends/cuda/api/runtime.pyx:265: AssertionError
----------------------------- Captured stderr call -----------------------------
Traceback (most recent call last):
  File "cupy_backends/cuda/api/runtime.pyx", line 644, in cupy_backends.cuda.api.runtime.freeArray
    check_status(status)
  File "cupy_backends/cuda/api/runtime.pyx", line 265, in cupy_backends.cuda.api.runtime.check_status
    raise CUDARuntimeError(status)
cupy_backends.cuda.api.runtime.CUDARuntimeError: hipErrorUnknown: hipErrorUnknown
_ TestAffineTransformTextureMemory.test_affine_transform_texture_memory[_param_339_{mode='nearest', order=1, output=float32, output_shape=10, shape=(100, 100), theta=270}] _

self = <<cupyx_tests.scipy_tests.ndimage_tests.test_interpolation.TestAffineTransformTextureMemory object at 0x7fab36eb1100> ...ode': 'nearest', 'order': 1, 'output': <class 'numpy.float32'>, 'output_shape': 10, 'shape': (100, 100), 'theta': 270}>
xp = <module 'cupy' from '/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.hXnTrEAC7u/cupy/cupy/__init__.py'>
scp = <module 'cupyx.scipy' from '/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.hXnTrEAC7u/cupy/cupyx/scipy/__init__.py'>

    @testing.numpy_cupy_allclose(atol=0.1, scipy_name='scp')
    def test_affine_transform_texture_memory(self, xp, scp):
        a = xp.ones(self.shape, dtype=xp.float32)
        center = numpy.divide(numpy.subtract(self.shape, 1), 2)
    
        if len(self.shape) == 2:
            matrix = self._2d_rotation_matrix(self.theta, center)
        elif len(self.shape) == 3:
            matrix = self._3d_rotation_matrix(self.theta, center)
        else:
            return pytest.xfail('Unsupported shape')
    
        if self.output == 'empty':
            output = xp.empty(self.shape, dtype=xp.float32)
            if self.output_shape:
                return pytest.skip('This combination is tested in '
                                   'test_invalid_texture_arguments')
        else:
            output = self.output
    
        if self.output_shape:
            output_shape = (self.output_shape, ) * len(self.shape)
        else:
            output_shape = self.output_shape
    
        if xp == cupy:
            m = cupyx.scipy.ndimage.affine_transform
            matrix = cupy.array(matrix)
>           return m(a, matrix, output_shape=output_shape,
                     output=output, order=self.order,
                     mode=self.mode, texture_memory=True)

tests/cupyx_tests/scipy_tests/ndimage_tests/test_interpolation.py:398: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
cupyx/scipy/ndimage/interpolation.py:376: in affine_transform
    return _texture.affine_transformation(data=input,
cupyx/_texture.py:168: in affine_transformation
    texture_object = _create_texture_object(data,
cupyx/_texture.py:98: in _create_texture_object
    array = texture.CUDAarray(texture_fmt, *data.shape[::-1])
cupy/cuda/texture.pyx:296: in cupy.cuda.texture.CUDAarray.__init__
    self.ptr = runtime.malloc3DArray(desc.ptr, width, height, depth,
cupy_backends/cuda/api/runtime.pyx:593: in cupy_backends.cuda.api.runtime.malloc3DArray
    check_status(status)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

>   raise CUDARuntimeError(status)
E   AssertionError: Only cupy raises error
E   
E   Traceback (most recent call last):
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.hXnTrEAC7u/cupy/cupy/testing/_helper.py", line 47, in _call_func
E       result = impl(self, *args, **kw)
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.hXnTrEAC7u/cupy/tests/cupyx_tests/scipy_tests/ndimage_tests/test_interpolation.py", line 398, in test_affine_transform_texture_memory
E       return m(a, matrix, output_shape=output_shape,
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.hXnTrEAC7u/cupy/cupyx/scipy/ndimage/interpolation.py", line 376, in affine_transform
E       return _texture.affine_transformation(data=input,
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.hXnTrEAC7u/cupy/cupyx/_texture.py", line 168, in affine_transformation
E       texture_object = _create_texture_object(data,
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.hXnTrEAC7u/cupy/cupyx/_texture.py", line 98, in _create_texture_object
E       array = texture.CUDAarray(texture_fmt, *data.shape[::-1])
E     File "cupy/cuda/texture.pyx", line 296, in cupy.cuda.texture.CUDAarray.__init__
E       self.ptr = runtime.malloc3DArray(desc.ptr, width, height, depth,
E     File "cupy_backends/cuda/api/runtime.pyx", line 593, in cupy_backends.cuda.api.runtime.malloc3DArray
E       check_status(status)
E     File "cupy_backends/cuda/api/runtime.pyx", line 265, in cupy_backends.cuda.api.runtime.check_status
E       raise CUDARuntimeError(status)
E   cupy_backends.cuda.api.runtime.CUDARuntimeError: hipErrorUnknown: hipErrorUnknown

cupy_backends/cuda/api/runtime.pyx:265: AssertionError
----------------------------- Captured stderr call -----------------------------
Traceback (most recent call last):
  File "cupy_backends/cuda/api/runtime.pyx", line 644, in cupy_backends.cuda.api.runtime.freeArray
    check_status(status)
  File "cupy_backends/cuda/api/runtime.pyx", line 265, in cupy_backends.cuda.api.runtime.check_status
    raise CUDARuntimeError(status)
cupy_backends.cuda.api.runtime.CUDARuntimeError: hipErrorUnknown: hipErrorUnknown
_ TestAffineTransformTextureMemory.test_affine_transform_texture_memory[_param_340_{mode='nearest', order=1, output=float32, output_shape=10, shape=(10, 20), theta=0}] _

self = <<cupyx_tests.scipy_tests.ndimage_tests.test_interpolation.TestAffineTransformTextureMemory object at 0x7fab370c8280> ... {'mode': 'nearest', 'order': 1, 'output': <class 'numpy.float32'>, 'output_shape': 10, 'shape': (10, 20), 'theta': 0}>
xp = <module 'cupy' from '/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.hXnTrEAC7u/cupy/cupy/__init__.py'>
scp = <module 'cupyx.scipy' from '/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.hXnTrEAC7u/cupy/cupyx/scipy/__init__.py'>

    @testing.numpy_cupy_allclose(atol=0.1, scipy_name='scp')
    def test_affine_transform_texture_memory(self, xp, scp):
        a = xp.ones(self.shape, dtype=xp.float32)
        center = numpy.divide(numpy.subtract(self.shape, 1), 2)
    
        if len(self.shape) == 2:
            matrix = self._2d_rotation_matrix(self.theta, center)
        elif len(self.shape) == 3:
            matrix = self._3d_rotation_matrix(self.theta, center)
        else:
            return pytest.xfail('Unsupported shape')
    
        if self.output == 'empty':
            output = xp.empty(self.shape, dtype=xp.float32)
            if self.output_shape:
                return pytest.skip('This combination is tested in '
                                   'test_invalid_texture_arguments')
        else:
            output = self.output
    
        if self.output_shape:
            output_shape = (self.output_shape, ) * len(self.shape)
        else:
            output_shape = self.output_shape
    
        if xp == cupy:
            m = cupyx.scipy.ndimage.affine_transform
            matrix = cupy.array(matrix)
>           return m(a, matrix, output_shape=output_shape,
                     output=output, order=self.order,
                     mode=self.mode, texture_memory=True)

tests/cupyx_tests/scipy_tests/ndimage_tests/test_interpolation.py:398: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
cupyx/scipy/ndimage/interpolation.py:376: in affine_transform
    return _texture.affine_transformation(data=input,
cupyx/_texture.py:168: in affine_transformation
    texture_object = _create_texture_object(data,
cupyx/_texture.py:98: in _create_texture_object
    array = texture.CUDAarray(texture_fmt, *data.shape[::-1])
cupy/cuda/texture.pyx:296: in cupy.cuda.texture.CUDAarray.__init__
    self.ptr = runtime.malloc3DArray(desc.ptr, width, height, depth,
cupy_backends/cuda/api/runtime.pyx:593: in cupy_backends.cuda.api.runtime.malloc3DArray
    check_status(status)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

>   raise CUDARuntimeError(status)
E   AssertionError: Only cupy raises error
E   
E   Traceback (most recent call last):
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.hXnTrEAC7u/cupy/cupy/testing/_helper.py", line 47, in _call_func
E       result = impl(self, *args, **kw)
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.hXnTrEAC7u/cupy/tests/cupyx_tests/scipy_tests/ndimage_tests/test_interpolation.py", line 398, in test_affine_transform_texture_memory
E       return m(a, matrix, output_shape=output_shape,
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.hXnTrEAC7u/cupy/cupyx/scipy/ndimage/interpolation.py", line 376, in affine_transform
E       return _texture.affine_transformation(data=input,
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.hXnTrEAC7u/cupy/cupyx/_texture.py", line 168, in affine_transformation
E       texture_object = _create_texture_object(data,
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.hXnTrEAC7u/cupy/cupyx/_texture.py", line 98, in _create_texture_object
E       array = texture.CUDAarray(texture_fmt, *data.shape[::-1])
E     File "cupy/cuda/texture.pyx", line 296, in cupy.cuda.texture.CUDAarray.__init__
E       self.ptr = runtime.malloc3DArray(desc.ptr, width, height, depth,
E     File "cupy_backends/cuda/api/runtime.pyx", line 593, in cupy_backends.cuda.api.runtime.malloc3DArray
E       check_status(status)
E     File "cupy_backends/cuda/api/runtime.pyx", line 265, in cupy_backends.cuda.api.runtime.check_status
E       raise CUDARuntimeError(status)
E   cupy_backends.cuda.api.runtime.CUDARuntimeError: hipErrorUnknown: hipErrorUnknown

cupy_backends/cuda/api/runtime.pyx:265: AssertionError
----------------------------- Captured stderr call -----------------------------
Traceback (most recent call last):
  File "cupy_backends/cuda/api/runtime.pyx", line 644, in cupy_backends.cuda.api.runtime.freeArray
    check_status(status)
  File "cupy_backends/cuda/api/runtime.pyx", line 265, in cupy_backends.cuda.api.runtime.check_status
    raise CUDARuntimeError(status)
cupy_backends.cuda.api.runtime.CUDARuntimeError: hipErrorUnknown: hipErrorUnknown
_ TestAffineTransformTextureMemory.test_affine_transform_texture_memory[_param_341_{mode='nearest', order=1, output=float32, output_shape=10, shape=(10, 20), theta=90}] _

self = <<cupyx_tests.scipy_tests.ndimage_tests.test_interpolation.TestAffineTransformTextureMemory object at 0x7fac510bb9a0> ...{'mode': 'nearest', 'order': 1, 'output': <class 'numpy.float32'>, 'output_shape': 10, 'shape': (10, 20), 'theta': 90}>
xp = <module 'cupy' from '/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.hXnTrEAC7u/cupy/cupy/__init__.py'>
scp = <module 'cupyx.scipy' from '/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.hXnTrEAC7u/cupy/cupyx/scipy/__init__.py'>

    @testing.numpy_cupy_allclose(atol=0.1, scipy_name='scp')
    def test_affine_transform_texture_memory(self, xp, scp):
        a = xp.ones(self.shape, dtype=xp.float32)
        center = numpy.divide(numpy.subtract(self.shape, 1), 2)
    
        if len(self.shape) == 2:
            matrix = self._2d_rotation_matrix(self.theta, center)
        elif len(self.shape) == 3:
            matrix = self._3d_rotation_matrix(self.theta, center)
        else:
            return pytest.xfail('Unsupported shape')
    
        if self.output == 'empty':
            output = xp.empty(self.shape, dtype=xp.float32)
            if self.output_shape:
                return pytest.skip('This combination is tested in '
                                   'test_invalid_texture_arguments')
        else:
            output = self.output
    
        if self.output_shape:
            output_shape = (self.output_shape, ) * len(self.shape)
        else:
            output_shape = self.output_shape
    
        if xp == cupy:
            m = cupyx.scipy.ndimage.affine_transform
            matrix = cupy.array(matrix)
>           return m(a, matrix, output_shape=output_shape,
                     output=output, order=self.order,
                     mode=self.mode, texture_memory=True)

tests/cupyx_tests/scipy_tests/ndimage_tests/test_interpolation.py:398: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
cupyx/scipy/ndimage/interpolation.py:376: in affine_transform
    return _texture.affine_transformation(data=input,
cupyx/_texture.py:168: in affine_transformation
    texture_object = _create_texture_object(data,
cupyx/_texture.py:98: in _create_texture_object
    array = texture.CUDAarray(texture_fmt, *data.shape[::-1])
cupy/cuda/texture.pyx:296: in cupy.cuda.texture.CUDAarray.__init__
    self.ptr = runtime.malloc3DArray(desc.ptr, width, height, depth,
cupy_backends/cuda/api/runtime.pyx:593: in cupy_backends.cuda.api.runtime.malloc3DArray
    check_status(status)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

>   raise CUDARuntimeError(status)
E   AssertionError: Only cupy raises error
E   
E   Traceback (most recent call last):
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.hXnTrEAC7u/cupy/cupy/testing/_helper.py", line 47, in _call_func
E       result = impl(self, *args, **kw)
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.hXnTrEAC7u/cupy/tests/cupyx_tests/scipy_tests/ndimage_tests/test_interpolation.py", line 398, in test_affine_transform_texture_memory
E       return m(a, matrix, output_shape=output_shape,
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.hXnTrEAC7u/cupy/cupyx/scipy/ndimage/interpolation.py", line 376, in affine_transform
E       return _texture.affine_transformation(data=input,
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.hXnTrEAC7u/cupy/cupyx/_texture.py", line 168, in affine_transformation
E       texture_object = _create_texture_object(data,
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.hXnTrEAC7u/cupy/cupyx/_texture.py", line 98, in _create_texture_object
E       array = texture.CUDAarray(texture_fmt, *data.shape[::-1])
E     File "cupy/cuda/texture.pyx", line 296, in cupy.cuda.texture.CUDAarray.__init__
E       self.ptr = runtime.malloc3DArray(desc.ptr, width, height, depth,
E     File "cupy_backends/cuda/api/runtime.pyx", line 593, in cupy_backends.cuda.api.runtime.malloc3DArray
E       check_status(status)
E     File "cupy_backends/cuda/api/runtime.pyx", line 265, in cupy_backends.cuda.api.runtime.check_status
E       raise CUDARuntimeError(status)
E   cupy_backends.cuda.api.runtime.CUDARuntimeError: hipErrorUnknown: hipErrorUnknown

cupy_backends/cuda/api/runtime.pyx:265: AssertionError
----------------------------- Captured stderr call -----------------------------
Traceback (most recent call last):
  File "cupy_backends/cuda/api/runtime.pyx", line 644, in cupy_backends.cuda.api.runtime.freeArray
    check_status(status)
  File "cupy_backends/cuda/api/runtime.pyx", line 265, in cupy_backends.cuda.api.runtime.check_status
    raise CUDARuntimeError(status)
cupy_backends.cuda.api.runtime.CUDARuntimeError: hipErrorUnknown: hipErrorUnknown
_ TestAffineTransformTextureMemory.test_affine_transform_texture_memory[_param_342_{mode='nearest', order=1, output=float32, output_shape=10, shape=(10, 20), theta=180}] _

self = <<cupyx_tests.scipy_tests.ndimage_tests.test_interpolation.TestAffineTransformTextureMemory object at 0x7fab36dd81c0> ...'mode': 'nearest', 'order': 1, 'output': <class 'numpy.float32'>, 'output_shape': 10, 'shape': (10, 20), 'theta': 180}>
xp = <module 'cupy' from '/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.hXnTrEAC7u/cupy/cupy/__init__.py'>
scp = <module 'cupyx.scipy' from '/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.hXnTrEAC7u/cupy/cupyx/scipy/__init__.py'>

    @testing.numpy_cupy_allclose(atol=0.1, scipy_name='scp')
    def test_affine_transform_texture_memory(self, xp, scp):
        a = xp.ones(self.shape, dtype=xp.float32)
        center = numpy.divide(numpy.subtract(self.shape, 1), 2)
    
        if len(self.shape) == 2:
            matrix = self._2d_rotation_matrix(self.theta, center)
        elif len(self.shape) == 3:
            matrix = self._3d_rotation_matrix(self.theta, center)
        else:
            return pytest.xfail('Unsupported shape')
    
        if self.output == 'empty':
            output = xp.empty(self.shape, dtype=xp.float32)
            if self.output_shape:
                return pytest.skip('This combination is tested in '
                                   'test_invalid_texture_arguments')
        else:
            output = self.output
    
        if self.output_shape:
            output_shape = (self.output_shape, ) * len(self.shape)
        else:
            output_shape = self.output_shape
    
        if xp == cupy:
            m = cupyx.scipy.ndimage.affine_transform
            matrix = cupy.array(matrix)
>           return m(a, matrix, output_shape=output_shape,
                     output=output, order=self.order,
                     mode=self.mode, texture_memory=True)

tests/cupyx_tests/scipy_tests/ndimage_tests/test_interpolation.py:398: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
cupyx/scipy/ndimage/interpolation.py:376: in affine_transform
    return _texture.affine_transformation(data=input,
cupyx/_texture.py:168: in affine_transformation
    texture_object = _create_texture_object(data,
cupyx/_texture.py:98: in _create_texture_object
    array = texture.CUDAarray(texture_fmt, *data.shape[::-1])
cupy/cuda/texture.pyx:296: in cupy.cuda.texture.CUDAarray.__init__
    self.ptr = runtime.malloc3DArray(desc.ptr, width, height, depth,
cupy_backends/cuda/api/runtime.pyx:593: in cupy_backends.cuda.api.runtime.malloc3DArray
    check_status(status)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

>   raise CUDARuntimeError(status)
E   AssertionError: Only cupy raises error
E   
E   Traceback (most recent call last):
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.hXnTrEAC7u/cupy/cupy/testing/_helper.py", line 47, in _call_func
E       result = impl(self, *args, **kw)
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.hXnTrEAC7u/cupy/tests/cupyx_tests/scipy_tests/ndimage_tests/test_interpolation.py", line 398, in test_affine_transform_texture_memory
E       return m(a, matrix, output_shape=output_shape,
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.hXnTrEAC7u/cupy/cupyx/scipy/ndimage/interpolation.py", line 376, in affine_transform
E       return _texture.affine_transformation(data=input,
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.hXnTrEAC7u/cupy/cupyx/_texture.py", line 168, in affine_transformation
E       texture_object = _create_texture_object(data,
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.hXnTrEAC7u/cupy/cupyx/_texture.py", line 98, in _create_texture_object
E       array = texture.CUDAarray(texture_fmt, *data.shape[::-1])
E     File "cupy/cuda/texture.pyx", line 296, in cupy.cuda.texture.CUDAarray.__init__
E       self.ptr = runtime.malloc3DArray(desc.ptr, width, height, depth,
E     File "cupy_backends/cuda/api/runtime.pyx", line 593, in cupy_backends.cuda.api.runtime.malloc3DArray
E       check_status(status)
E     File "cupy_backends/cuda/api/runtime.pyx", line 265, in cupy_backends.cuda.api.runtime.check_status
E       raise CUDARuntimeError(status)
E   cupy_backends.cuda.api.runtime.CUDARuntimeError: hipErrorUnknown: hipErrorUnknown

cupy_backends/cuda/api/runtime.pyx:265: AssertionError
----------------------------- Captured stderr call -----------------------------
Traceback (most recent call last):
  File "cupy_backends/cuda/api/runtime.pyx", line 644, in cupy_backends.cuda.api.runtime.freeArray
    check_status(status)
  File "cupy_backends/cuda/api/runtime.pyx", line 265, in cupy_backends.cuda.api.runtime.check_status
    raise CUDARuntimeError(status)
cupy_backends.cuda.api.runtime.CUDARuntimeError: hipErrorUnknown: hipErrorUnknown
_ TestAffineTransformTextureMemory.test_affine_transform_texture_memory[_param_343_{mode='nearest', order=1, output=float32, output_shape=10, shape=(10, 20), theta=270}] _

self = <<cupyx_tests.scipy_tests.ndimage_tests.test_interpolation.TestAffineTransformTextureMemory object at 0x7fab36ed89a0> ...'mode': 'nearest', 'order': 1, 'output': <class 'numpy.float32'>, 'output_shape': 10, 'shape': (10, 20), 'theta': 270}>
xp = <module 'cupy' from '/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.hXnTrEAC7u/cupy/cupy/__init__.py'>
scp = <module 'cupyx.scipy' from '/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.hXnTrEAC7u/cupy/cupyx/scipy/__init__.py'>

    @testing.numpy_cupy_allclose(atol=0.1, scipy_name='scp')
    def test_affine_transform_texture_memory(self, xp, scp):
        a = xp.ones(self.shape, dtype=xp.float32)
        center = numpy.divide(numpy.subtract(self.shape, 1), 2)
    
        if len(self.shape) == 2:
            matrix = self._2d_rotation_matrix(self.theta, center)
        elif len(self.shape) == 3:
            matrix = self._3d_rotation_matrix(self.theta, center)
        else:
            return pytest.xfail('Unsupported shape')
    
        if self.output == 'empty':
            output = xp.empty(self.shape, dtype=xp.float32)
            if self.output_shape:
                return pytest.skip('This combination is tested in '
                                   'test_invalid_texture_arguments')
        else:
            output = self.output
    
        if self.output_shape:
            output_shape = (self.output_shape, ) * len(self.shape)
        else:
            output_shape = self.output_shape
    
        if xp == cupy:
            m = cupyx.scipy.ndimage.affine_transform
            matrix = cupy.array(matrix)
>           return m(a, matrix, output_shape=output_shape,
                     output=output, order=self.order,
                     mode=self.mode, texture_memory=True)

tests/cupyx_tests/scipy_tests/ndimage_tests/test_interpolation.py:398: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
cupyx/scipy/ndimage/interpolation.py:376: in affine_transform
    return _texture.affine_transformation(data=input,
cupyx/_texture.py:168: in affine_transformation
    texture_object = _create_texture_object(data,
cupyx/_texture.py:98: in _create_texture_object
    array = texture.CUDAarray(texture_fmt, *data.shape[::-1])
cupy/cuda/texture.pyx:296: in cupy.cuda.texture.CUDAarray.__init__
    self.ptr = runtime.malloc3DArray(desc.ptr, width, height, depth,
cupy_backends/cuda/api/runtime.pyx:593: in cupy_backends.cuda.api.runtime.malloc3DArray
    check_status(status)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

>   raise CUDARuntimeError(status)
E   AssertionError: Only cupy raises error
E   
E   Traceback (most recent call last):
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.hXnTrEAC7u/cupy/cupy/testing/_helper.py", line 47, in _call_func
E       result = impl(self, *args, **kw)
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.hXnTrEAC7u/cupy/tests/cupyx_tests/scipy_tests/ndimage_tests/test_interpolation.py", line 398, in test_affine_transform_texture_memory
E       return m(a, matrix, output_shape=output_shape,
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.hXnTrEAC7u/cupy/cupyx/scipy/ndimage/interpolation.py", line 376, in affine_transform
E       return _texture.affine_transformation(data=input,
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.hXnTrEAC7u/cupy/cupyx/_texture.py", line 168, in affine_transformation
E       texture_object = _create_texture_object(data,
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.hXnTrEAC7u/cupy/cupyx/_texture.py", line 98, in _create_texture_object
E       array = texture.CUDAarray(texture_fmt, *data.shape[::-1])
E     File "cupy/cuda/texture.pyx", line 296, in cupy.cuda.texture.CUDAarray.__init__
E       self.ptr = runtime.malloc3DArray(desc.ptr, width, height, depth,
E     File "cupy_backends/cuda/api/runtime.pyx", line 593, in cupy_backends.cuda.api.runtime.malloc3DArray
E       check_status(status)
E     File "cupy_backends/cuda/api/runtime.pyx", line 265, in cupy_backends.cuda.api.runtime.check_status
E       raise CUDARuntimeError(status)
E   cupy_backends.cuda.api.runtime.CUDARuntimeError: hipErrorUnknown: hipErrorUnknown

cupy_backends/cuda/api/runtime.pyx:265: AssertionError
----------------------------- Captured stderr call -----------------------------
Traceback (most recent call last):
  File "cupy_backends/cuda/api/runtime.pyx", line 644, in cupy_backends.cuda.api.runtime.freeArray
    check_status(status)
  File "cupy_backends/cuda/api/runtime.pyx", line 265, in cupy_backends.cuda.api.runtime.check_status
    raise CUDARuntimeError(status)
cupy_backends.cuda.api.runtime.CUDARuntimeError: hipErrorUnknown: hipErrorUnknown
_ TestAffineTransformTextureMemory.test_affine_transform_texture_memory[_param_344_{mode='nearest', order=1, output=float32, output_shape=10, shape=(10, 10, 10), theta=0}] _

self = <<cupyx_tests.scipy_tests.ndimage_tests.test_interpolation.TestAffineTransformTextureMemory object at 0x7fab37d54460> ...ode': 'nearest', 'order': 1, 'output': <class 'numpy.float32'>, 'output_shape': 10, 'shape': (10, 10, 10), 'theta': 0}>
xp = <module 'cupy' from '/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.hXnTrEAC7u/cupy/cupy/__init__.py'>
scp = <module 'cupyx.scipy' from '/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.hXnTrEAC7u/cupy/cupyx/scipy/__init__.py'>

    @testing.numpy_cupy_allclose(atol=0.1, scipy_name='scp')
    def test_affine_transform_texture_memory(self, xp, scp):
        a = xp.ones(self.shape, dtype=xp.float32)
        center = numpy.divide(numpy.subtract(self.shape, 1), 2)
    
        if len(self.shape) == 2:
            matrix = self._2d_rotation_matrix(self.theta, center)
        elif len(self.shape) == 3:
            matrix = self._3d_rotation_matrix(self.theta, center)
        else:
            return pytest.xfail('Unsupported shape')
    
        if self.output == 'empty':
            output = xp.empty(self.shape, dtype=xp.float32)
            if self.output_shape:
                return pytest.skip('This combination is tested in '
                                   'test_invalid_texture_arguments')
        else:
            output = self.output
    
        if self.output_shape:
            output_shape = (self.output_shape, ) * len(self.shape)
        else:
            output_shape = self.output_shape
    
        if xp == cupy:
            m = cupyx.scipy.ndimage.affine_transform
            matrix = cupy.array(matrix)
>           return m(a, matrix, output_shape=output_shape,
                     output=output, order=self.order,
                     mode=self.mode, texture_memory=True)

tests/cupyx_tests/scipy_tests/ndimage_tests/test_interpolation.py:398: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
cupyx/scipy/ndimage/interpolation.py:376: in affine_transform
    return _texture.affine_transformation(data=input,
cupyx/_texture.py:168: in affine_transformation
    texture_object = _create_texture_object(data,
cupyx/_texture.py:98: in _create_texture_object
    array = texture.CUDAarray(texture_fmt, *data.shape[::-1])
cupy/cuda/texture.pyx:296: in cupy.cuda.texture.CUDAarray.__init__
    self.ptr = runtime.malloc3DArray(desc.ptr, width, height, depth,
cupy_backends/cuda/api/runtime.pyx:593: in cupy_backends.cuda.api.runtime.malloc3DArray
    check_status(status)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

>   raise CUDARuntimeError(status)
E   AssertionError: Only cupy raises error
E   
E   Traceback (most recent call last):
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.hXnTrEAC7u/cupy/cupy/testing/_helper.py", line 47, in _call_func
E       result = impl(self, *args, **kw)
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.hXnTrEAC7u/cupy/tests/cupyx_tests/scipy_tests/ndimage_tests/test_interpolation.py", line 398, in test_affine_transform_texture_memory
E       return m(a, matrix, output_shape=output_shape,
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.hXnTrEAC7u/cupy/cupyx/scipy/ndimage/interpolation.py", line 376, in affine_transform
E       return _texture.affine_transformation(data=input,
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.hXnTrEAC7u/cupy/cupyx/_texture.py", line 168, in affine_transformation
E       texture_object = _create_texture_object(data,
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.hXnTrEAC7u/cupy/cupyx/_texture.py", line 98, in _create_texture_object
E       array = texture.CUDAarray(texture_fmt, *data.shape[::-1])
E     File "cupy/cuda/texture.pyx", line 296, in cupy.cuda.texture.CUDAarray.__init__
E       self.ptr = runtime.malloc3DArray(desc.ptr, width, height, depth,
E     File "cupy_backends/cuda/api/runtime.pyx", line 593, in cupy_backends.cuda.api.runtime.malloc3DArray
E       check_status(status)
E     File "cupy_backends/cuda/api/runtime.pyx", line 265, in cupy_backends.cuda.api.runtime.check_status
E       raise CUDARuntimeError(status)
E   cupy_backends.cuda.api.runtime.CUDARuntimeError: hipErrorUnknown: hipErrorUnknown

cupy_backends/cuda/api/runtime.pyx:265: AssertionError
----------------------------- Captured stderr call -----------------------------
Traceback (most recent call last):
  File "cupy_backends/cuda/api/runtime.pyx", line 644, in cupy_backends.cuda.api.runtime.freeArray
    check_status(status)
  File "cupy_backends/cuda/api/runtime.pyx", line 265, in cupy_backends.cuda.api.runtime.check_status
    raise CUDARuntimeError(status)
cupy_backends.cuda.api.runtime.CUDARuntimeError: hipErrorUnknown: hipErrorUnknown
_ TestAffineTransformTextureMemory.test_affine_transform_texture_memory[_param_345_{mode='nearest', order=1, output=float32, output_shape=10, shape=(10, 10, 10), theta=90}] _

self = <<cupyx_tests.scipy_tests.ndimage_tests.test_interpolation.TestAffineTransformTextureMemory object at 0x7fab3714d160> ...de': 'nearest', 'order': 1, 'output': <class 'numpy.float32'>, 'output_shape': 10, 'shape': (10, 10, 10), 'theta': 90}>
xp = <module 'cupy' from '/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.hXnTrEAC7u/cupy/cupy/__init__.py'>
scp = <module 'cupyx.scipy' from '/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.hXnTrEAC7u/cupy/cupyx/scipy/__init__.py'>

    @testing.numpy_cupy_allclose(atol=0.1, scipy_name='scp')
    def test_affine_transform_texture_memory(self, xp, scp):
        a = xp.ones(self.shape, dtype=xp.float32)
        center = numpy.divide(numpy.subtract(self.shape, 1), 2)
    
        if len(self.shape) == 2:
            matrix = self._2d_rotation_matrix(self.theta, center)
        elif len(self.shape) == 3:
            matrix = self._3d_rotation_matrix(self.theta, center)
        else:
            return pytest.xfail('Unsupported shape')
    
        if self.output == 'empty':
            output = xp.empty(self.shape, dtype=xp.float32)
            if self.output_shape:
                return pytest.skip('This combination is tested in '
                                   'test_invalid_texture_arguments')
        else:
            output = self.output
    
        if self.output_shape:
            output_shape = (self.output_shape, ) * len(self.shape)
        else:
            output_shape = self.output_shape
    
        if xp == cupy:
            m = cupyx.scipy.ndimage.affine_transform
            matrix = cupy.array(matrix)
>           return m(a, matrix, output_shape=output_shape,
                     output=output, order=self.order,
                     mode=self.mode, texture_memory=True)

tests/cupyx_tests/scipy_tests/ndimage_tests/test_interpolation.py:398: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
cupyx/scipy/ndimage/interpolation.py:376: in affine_transform
    return _texture.affine_transformation(data=input,
cupyx/_texture.py:168: in affine_transformation
    texture_object = _create_texture_object(data,
cupyx/_texture.py:98: in _create_texture_object
    array = texture.CUDAarray(texture_fmt, *data.shape[::-1])
cupy/cuda/texture.pyx:296: in cupy.cuda.texture.CUDAarray.__init__
    self.ptr = runtime.malloc3DArray(desc.ptr, width, height, depth,
cupy_backends/cuda/api/runtime.pyx:593: in cupy_backends.cuda.api.runtime.malloc3DArray
    check_status(status)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

>   raise CUDARuntimeError(status)
E   AssertionError: Only cupy raises error
E   
E   Traceback (most recent call last):
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.hXnTrEAC7u/cupy/cupy/testing/_helper.py", line 47, in _call_func
E       result = impl(self, *args, **kw)
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.hXnTrEAC7u/cupy/tests/cupyx_tests/scipy_tests/ndimage_tests/test_interpolation.py", line 398, in test_affine_transform_texture_memory
E       return m(a, matrix, output_shape=output_shape,
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.hXnTrEAC7u/cupy/cupyx/scipy/ndimage/interpolation.py", line 376, in affine_transform
E       return _texture.affine_transformation(data=input,
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.hXnTrEAC7u/cupy/cupyx/_texture.py", line 168, in affine_transformation
E       texture_object = _create_texture_object(data,
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.hXnTrEAC7u/cupy/cupyx/_texture.py", line 98, in _create_texture_object
E       array = texture.CUDAarray(texture_fmt, *data.shape[::-1])
E     File "cupy/cuda/texture.pyx", line 296, in cupy.cuda.texture.CUDAarray.__init__
E       self.ptr = runtime.malloc3DArray(desc.ptr, width, height, depth,
E     File "cupy_backends/cuda/api/runtime.pyx", line 593, in cupy_backends.cuda.api.runtime.malloc3DArray
E       check_status(status)
E     File "cupy_backends/cuda/api/runtime.pyx", line 265, in cupy_backends.cuda.api.runtime.check_status
E       raise CUDARuntimeError(status)
E   cupy_backends.cuda.api.runtime.CUDARuntimeError: hipErrorUnknown: hipErrorUnknown

cupy_backends/cuda/api/runtime.pyx:265: AssertionError
----------------------------- Captured stderr call -----------------------------
Traceback (most recent call last):
  File "cupy_backends/cuda/api/runtime.pyx", line 644, in cupy_backends.cuda.api.runtime.freeArray
    check_status(status)
  File "cupy_backends/cuda/api/runtime.pyx", line 265, in cupy_backends.cuda.api.runtime.check_status
    raise CUDARuntimeError(status)
cupy_backends.cuda.api.runtime.CUDARuntimeError: hipErrorUnknown: hipErrorUnknown
_ TestAffineTransformTextureMemory.test_affine_transform_texture_memory[_param_346_{mode='nearest', order=1, output=float32, output_shape=10, shape=(10, 10, 10), theta=180}] _

self = <<cupyx_tests.scipy_tests.ndimage_tests.test_interpolation.TestAffineTransformTextureMemory object at 0x7fab395becd0> ...e': 'nearest', 'order': 1, 'output': <class 'numpy.float32'>, 'output_shape': 10, 'shape': (10, 10, 10), 'theta': 180}>
xp = <module 'cupy' from '/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.hXnTrEAC7u/cupy/cupy/__init__.py'>
scp = <module 'cupyx.scipy' from '/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.hXnTrEAC7u/cupy/cupyx/scipy/__init__.py'>

    @testing.numpy_cupy_allclose(atol=0.1, scipy_name='scp')
    def test_affine_transform_texture_memory(self, xp, scp):
        a = xp.ones(self.shape, dtype=xp.float32)
        center = numpy.divide(numpy.subtract(self.shape, 1), 2)
    
        if len(self.shape) == 2:
            matrix = self._2d_rotation_matrix(self.theta, center)
        elif len(self.shape) == 3:
            matrix = self._3d_rotation_matrix(self.theta, center)
        else:
            return pytest.xfail('Unsupported shape')
    
        if self.output == 'empty':
            output = xp.empty(self.shape, dtype=xp.float32)
            if self.output_shape:
                return pytest.skip('This combination is tested in '
                                   'test_invalid_texture_arguments')
        else:
            output = self.output
    
        if self.output_shape:
            output_shape = (self.output_shape, ) * len(self.shape)
        else:
            output_shape = self.output_shape
    
        if xp == cupy:
            m = cupyx.scipy.ndimage.affine_transform
            matrix = cupy.array(matrix)
>           return m(a, matrix, output_shape=output_shape,
                     output=output, order=self.order,
                     mode=self.mode, texture_memory=True)

tests/cupyx_tests/scipy_tests/ndimage_tests/test_interpolation.py:398: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
cupyx/scipy/ndimage/interpolation.py:376: in affine_transform
    return _texture.affine_transformation(data=input,
cupyx/_texture.py:168: in affine_transformation
    texture_object = _create_texture_object(data,
cupyx/_texture.py:98: in _create_texture_object
    array = texture.CUDAarray(texture_fmt, *data.shape[::-1])
cupy/cuda/texture.pyx:296: in cupy.cuda.texture.CUDAarray.__init__
    self.ptr = runtime.malloc3DArray(desc.ptr, width, height, depth,
cupy_backends/cuda/api/runtime.pyx:593: in cupy_backends.cuda.api.runtime.malloc3DArray
    check_status(status)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

>   raise CUDARuntimeError(status)
E   AssertionError: Only cupy raises error
E   
E   Traceback (most recent call last):
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.hXnTrEAC7u/cupy/cupy/testing/_helper.py", line 47, in _call_func
E       result = impl(self, *args, **kw)
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.hXnTrEAC7u/cupy/tests/cupyx_tests/scipy_tests/ndimage_tests/test_interpolation.py", line 398, in test_affine_transform_texture_memory
E       return m(a, matrix, output_shape=output_shape,
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.hXnTrEAC7u/cupy/cupyx/scipy/ndimage/interpolation.py", line 376, in affine_transform
E       return _texture.affine_transformation(data=input,
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.hXnTrEAC7u/cupy/cupyx/_texture.py", line 168, in affine_transformation
E       texture_object = _create_texture_object(data,
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.hXnTrEAC7u/cupy/cupyx/_texture.py", line 98, in _create_texture_object
E       array = texture.CUDAarray(texture_fmt, *data.shape[::-1])
E     File "cupy/cuda/texture.pyx", line 296, in cupy.cuda.texture.CUDAarray.__init__
E       self.ptr = runtime.malloc3DArray(desc.ptr, width, height, depth,
E     File "cupy_backends/cuda/api/runtime.pyx", line 593, in cupy_backends.cuda.api.runtime.malloc3DArray
E       check_status(status)
E     File "cupy_backends/cuda/api/runtime.pyx", line 265, in cupy_backends.cuda.api.runtime.check_status
E       raise CUDARuntimeError(status)
E   cupy_backends.cuda.api.runtime.CUDARuntimeError: hipErrorUnknown: hipErrorUnknown

cupy_backends/cuda/api/runtime.pyx:265: AssertionError
----------------------------- Captured stderr call -----------------------------
Traceback (most recent call last):
  File "cupy_backends/cuda/api/runtime.pyx", line 644, in cupy_backends.cuda.api.runtime.freeArray
    check_status(status)
  File "cupy_backends/cuda/api/runtime.pyx", line 265, in cupy_backends.cuda.api.runtime.check_status
    raise CUDARuntimeError(status)
cupy_backends.cuda.api.runtime.CUDARuntimeError: hipErrorUnknown: hipErrorUnknown
_ TestAffineTransformTextureMemory.test_affine_transform_texture_memory[_param_347_{mode='nearest', order=1, output=float32, output_shape=10, shape=(10, 10, 10), theta=270}] _

self = <<cupyx_tests.scipy_tests.ndimage_tests.test_interpolation.TestAffineTransformTextureMemory object at 0x7fab36ddb8b0> ...e': 'nearest', 'order': 1, 'output': <class 'numpy.float32'>, 'output_shape': 10, 'shape': (10, 10, 10), 'theta': 270}>
xp = <module 'cupy' from '/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.hXnTrEAC7u/cupy/cupy/__init__.py'>
scp = <module 'cupyx.scipy' from '/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.hXnTrEAC7u/cupy/cupyx/scipy/__init__.py'>

    @testing.numpy_cupy_allclose(atol=0.1, scipy_name='scp')
    def test_affine_transform_texture_memory(self, xp, scp):
        a = xp.ones(self.shape, dtype=xp.float32)
        center = numpy.divide(numpy.subtract(self.shape, 1), 2)
    
        if len(self.shape) == 2:
            matrix = self._2d_rotation_matrix(self.theta, center)
        elif len(self.shape) == 3:
            matrix = self._3d_rotation_matrix(self.theta, center)
        else:
            return pytest.xfail('Unsupported shape')
    
        if self.output == 'empty':
            output = xp.empty(self.shape, dtype=xp.float32)
            if self.output_shape:
                return pytest.skip('This combination is tested in '
                                   'test_invalid_texture_arguments')
        else:
            output = self.output
    
        if self.output_shape:
            output_shape = (self.output_shape, ) * len(self.shape)
        else:
            output_shape = self.output_shape
    
        if xp == cupy:
            m = cupyx.scipy.ndimage.affine_transform
            matrix = cupy.array(matrix)
>           return m(a, matrix, output_shape=output_shape,
                     output=output, order=self.order,
                     mode=self.mode, texture_memory=True)

tests/cupyx_tests/scipy_tests/ndimage_tests/test_interpolation.py:398: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
cupyx/scipy/ndimage/interpolation.py:376: in affine_transform
    return _texture.affine_transformation(data=input,
cupyx/_texture.py:168: in affine_transformation
    texture_object = _create_texture_object(data,
cupyx/_texture.py:98: in _create_texture_object
    array = texture.CUDAarray(texture_fmt, *data.shape[::-1])
cupy/cuda/texture.pyx:296: in cupy.cuda.texture.CUDAarray.__init__
    self.ptr = runtime.malloc3DArray(desc.ptr, width, height, depth,
cupy_backends/cuda/api/runtime.pyx:593: in cupy_backends.cuda.api.runtime.malloc3DArray
    check_status(status)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

>   raise CUDARuntimeError(status)
E   AssertionError: Only cupy raises error
E   
E   Traceback (most recent call last):
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.hXnTrEAC7u/cupy/cupy/testing/_helper.py", line 47, in _call_func
E       result = impl(self, *args, **kw)
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.hXnTrEAC7u/cupy/tests/cupyx_tests/scipy_tests/ndimage_tests/test_interpolation.py", line 398, in test_affine_transform_texture_memory
E       return m(a, matrix, output_shape=output_shape,
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.hXnTrEAC7u/cupy/cupyx/scipy/ndimage/interpolation.py", line 376, in affine_transform
E       return _texture.affine_transformation(data=input,
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.hXnTrEAC7u/cupy/cupyx/_texture.py", line 168, in affine_transformation
E       texture_object = _create_texture_object(data,
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.hXnTrEAC7u/cupy/cupyx/_texture.py", line 98, in _create_texture_object
E       array = texture.CUDAarray(texture_fmt, *data.shape[::-1])
E     File "cupy/cuda/texture.pyx", line 296, in cupy.cuda.texture.CUDAarray.__init__
E       self.ptr = runtime.malloc3DArray(desc.ptr, width, height, depth,
E     File "cupy_backends/cuda/api/runtime.pyx", line 593, in cupy_backends.cuda.api.runtime.malloc3DArray
E       check_status(status)
E     File "cupy_backends/cuda/api/runtime.pyx", line 265, in cupy_backends.cuda.api.runtime.check_status
E       raise CUDARuntimeError(status)
E   cupy_backends.cuda.api.runtime.CUDARuntimeError: hipErrorUnknown: hipErrorUnknown

cupy_backends/cuda/api/runtime.pyx:265: AssertionError
----------------------------- Captured stderr call -----------------------------
Traceback (most recent call last):
  File "cupy_backends/cuda/api/runtime.pyx", line 644, in cupy_backends.cuda.api.runtime.freeArray
    check_status(status)
  File "cupy_backends/cuda/api/runtime.pyx", line 265, in cupy_backends.cuda.api.runtime.check_status
    raise CUDARuntimeError(status)
cupy_backends.cuda.api.runtime.CUDARuntimeError: hipErrorUnknown: hipErrorUnknown
_ TestAffineTransformTextureMemory.test_affine_transform_texture_memory[_param_348_{mode='nearest', order=1, output=float32, output_shape=10, shape=(10, 20, 30), theta=0}] _

self = <<cupyx_tests.scipy_tests.ndimage_tests.test_interpolation.TestAffineTransformTextureMemory object at 0x7fab36bc1040> ...ode': 'nearest', 'order': 1, 'output': <class 'numpy.float32'>, 'output_shape': 10, 'shape': (10, 20, 30), 'theta': 0}>
xp = <module 'cupy' from '/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.hXnTrEAC7u/cupy/cupy/__init__.py'>
scp = <module 'cupyx.scipy' from '/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.hXnTrEAC7u/cupy/cupyx/scipy/__init__.py'>

    @testing.numpy_cupy_allclose(atol=0.1, scipy_name='scp')
    def test_affine_transform_texture_memory(self, xp, scp):
        a = xp.ones(self.shape, dtype=xp.float32)
        center = numpy.divide(numpy.subtract(self.shape, 1), 2)
    
        if len(self.shape) == 2:
            matrix = self._2d_rotation_matrix(self.theta, center)
        elif len(self.shape) == 3:
            matrix = self._3d_rotation_matrix(self.theta, center)
        else:
            return pytest.xfail('Unsupported shape')
    
        if self.output == 'empty':
            output = xp.empty(self.shape, dtype=xp.float32)
            if self.output_shape:
                return pytest.skip('This combination is tested in '
                                   'test_invalid_texture_arguments')
        else:
            output = self.output
    
        if self.output_shape:
            output_shape = (self.output_shape, ) * len(self.shape)
        else:
            output_shape = self.output_shape
    
        if xp == cupy:
            m = cupyx.scipy.ndimage.affine_transform
            matrix = cupy.array(matrix)
>           return m(a, matrix, output_shape=output_shape,
                     output=output, order=self.order,
                     mode=self.mode, texture_memory=True)

tests/cupyx_tests/scipy_tests/ndimage_tests/test_interpolation.py:398: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
cupyx/scipy/ndimage/interpolation.py:376: in affine_transform
    return _texture.affine_transformation(data=input,
cupyx/_texture.py:168: in affine_transformation
    texture_object = _create_texture_object(data,
cupyx/_texture.py:98: in _create_texture_object
    array = texture.CUDAarray(texture_fmt, *data.shape[::-1])
cupy/cuda/texture.pyx:296: in cupy.cuda.texture.CUDAarray.__init__
    self.ptr = runtime.malloc3DArray(desc.ptr, width, height, depth,
cupy_backends/cuda/api/runtime.pyx:593: in cupy_backends.cuda.api.runtime.malloc3DArray
    check_status(status)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

>   raise CUDARuntimeError(status)
E   AssertionError: Only cupy raises error
E   
E   Traceback (most recent call last):
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.hXnTrEAC7u/cupy/cupy/testing/_helper.py", line 47, in _call_func
E       result = impl(self, *args, **kw)
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.hXnTrEAC7u/cupy/tests/cupyx_tests/scipy_tests/ndimage_tests/test_interpolation.py", line 398, in test_affine_transform_texture_memory
E       return m(a, matrix, output_shape=output_shape,
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.hXnTrEAC7u/cupy/cupyx/scipy/ndimage/interpolation.py", line 376, in affine_transform
E       return _texture.affine_transformation(data=input,
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.hXnTrEAC7u/cupy/cupyx/_texture.py", line 168, in affine_transformation
E       texture_object = _create_texture_object(data,
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.hXnTrEAC7u/cupy/cupyx/_texture.py", line 98, in _create_texture_object
E       array = texture.CUDAarray(texture_fmt, *data.shape[::-1])
E     File "cupy/cuda/texture.pyx", line 296, in cupy.cuda.texture.CUDAarray.__init__
E       self.ptr = runtime.malloc3DArray(desc.ptr, width, height, depth,
E     File "cupy_backends/cuda/api/runtime.pyx", line 593, in cupy_backends.cuda.api.runtime.malloc3DArray
E       check_status(status)
E     File "cupy_backends/cuda/api/runtime.pyx", line 265, in cupy_backends.cuda.api.runtime.check_status
E       raise CUDARuntimeError(status)
E   cupy_backends.cuda.api.runtime.CUDARuntimeError: hipErrorUnknown: hipErrorUnknown

cupy_backends/cuda/api/runtime.pyx:265: AssertionError
----------------------------- Captured stderr call -----------------------------
Traceback (most recent call last):
  File "cupy_backends/cuda/api/runtime.pyx", line 644, in cupy_backends.cuda.api.runtime.freeArray
    check_status(status)
  File "cupy_backends/cuda/api/runtime.pyx", line 265, in cupy_backends.cuda.api.runtime.check_status
    raise CUDARuntimeError(status)
cupy_backends.cuda.api.runtime.CUDARuntimeError: hipErrorUnknown: hipErrorUnknown
_ TestAffineTransformTextureMemory.test_affine_transform_texture_memory[_param_349_{mode='nearest', order=1, output=float32, output_shape=10, shape=(10, 20, 30), theta=90}] _

self = <<cupyx_tests.scipy_tests.ndimage_tests.test_interpolation.TestAffineTransformTextureMemory object at 0x7fab38b78b20> ...de': 'nearest', 'order': 1, 'output': <class 'numpy.float32'>, 'output_shape': 10, 'shape': (10, 20, 30), 'theta': 90}>
xp = <module 'cupy' from '/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.hXnTrEAC7u/cupy/cupy/__init__.py'>
scp = <module 'cupyx.scipy' from '/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.hXnTrEAC7u/cupy/cupyx/scipy/__init__.py'>

    @testing.numpy_cupy_allclose(atol=0.1, scipy_name='scp')
    def test_affine_transform_texture_memory(self, xp, scp):
        a = xp.ones(self.shape, dtype=xp.float32)
        center = numpy.divide(numpy.subtract(self.shape, 1), 2)
    
        if len(self.shape) == 2:
            matrix = self._2d_rotation_matrix(self.theta, center)
        elif len(self.shape) == 3:
            matrix = self._3d_rotation_matrix(self.theta, center)
        else:
            return pytest.xfail('Unsupported shape')
    
        if self.output == 'empty':
            output = xp.empty(self.shape, dtype=xp.float32)
            if self.output_shape:
                return pytest.skip('This combination is tested in '
                                   'test_invalid_texture_arguments')
        else:
            output = self.output
    
        if self.output_shape:
            output_shape = (self.output_shape, ) * len(self.shape)
        else:
            output_shape = self.output_shape
    
        if xp == cupy:
            m = cupyx.scipy.ndimage.affine_transform
            matrix = cupy.array(matrix)
>           return m(a, matrix, output_shape=output_shape,
                     output=output, order=self.order,
                     mode=self.mode, texture_memory=True)

tests/cupyx_tests/scipy_tests/ndimage_tests/test_interpolation.py:398: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
cupyx/scipy/ndimage/interpolation.py:376: in affine_transform
    return _texture.affine_transformation(data=input,
cupyx/_texture.py:168: in affine_transformation
    texture_object = _create_texture_object(data,
cupyx/_texture.py:98: in _create_texture_object
    array = texture.CUDAarray(texture_fmt, *data.shape[::-1])
cupy/cuda/texture.pyx:296: in cupy.cuda.texture.CUDAarray.__init__
    self.ptr = runtime.malloc3DArray(desc.ptr, width, height, depth,
cupy_backends/cuda/api/runtime.pyx:593: in cupy_backends.cuda.api.runtime.malloc3DArray
    check_status(status)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

>   raise CUDARuntimeError(status)
E   AssertionError: Only cupy raises error
E   
E   Traceback (most recent call last):
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.hXnTrEAC7u/cupy/cupy/testing/_helper.py", line 47, in _call_func
E       result = impl(self, *args, **kw)
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.hXnTrEAC7u/cupy/tests/cupyx_tests/scipy_tests/ndimage_tests/test_interpolation.py", line 398, in test_affine_transform_texture_memory
E       return m(a, matrix, output_shape=output_shape,
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.hXnTrEAC7u/cupy/cupyx/scipy/ndimage/interpolation.py", line 376, in affine_transform
E       return _texture.affine_transformation(data=input,
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.hXnTrEAC7u/cupy/cupyx/_texture.py", line 168, in affine_transformation
E       texture_object = _create_texture_object(data,
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.hXnTrEAC7u/cupy/cupyx/_texture.py", line 98, in _create_texture_object
E       array = texture.CUDAarray(texture_fmt, *data.shape[::-1])
E     File "cupy/cuda/texture.pyx", line 296, in cupy.cuda.texture.CUDAarray.__init__
E       self.ptr = runtime.malloc3DArray(desc.ptr, width, height, depth,
E     File "cupy_backends/cuda/api/runtime.pyx", line 593, in cupy_backends.cuda.api.runtime.malloc3DArray
E       check_status(status)
E     File "cupy_backends/cuda/api/runtime.pyx", line 265, in cupy_backends.cuda.api.runtime.check_status
E       raise CUDARuntimeError(status)
E   cupy_backends.cuda.api.runtime.CUDARuntimeError: hipErrorUnknown: hipErrorUnknown

cupy_backends/cuda/api/runtime.pyx:265: AssertionError
----------------------------- Captured stderr call -----------------------------
Traceback (most recent call last):
  File "cupy_backends/cuda/api/runtime.pyx", line 644, in cupy_backends.cuda.api.runtime.freeArray
    check_status(status)
  File "cupy_backends/cuda/api/runtime.pyx", line 265, in cupy_backends.cuda.api.runtime.check_status
    raise CUDARuntimeError(status)
cupy_backends.cuda.api.runtime.CUDARuntimeError: hipErrorUnknown: hipErrorUnknown
_ TestAffineTransformTextureMemory.test_affine_transform_texture_memory[_param_350_{mode='nearest', order=1, output=float32, output_shape=10, shape=(10, 20, 30), theta=180}] _

self = <<cupyx_tests.scipy_tests.ndimage_tests.test_interpolation.TestAffineTransformTextureMemory object at 0x7fab36f5f730> ...e': 'nearest', 'order': 1, 'output': <class 'numpy.float32'>, 'output_shape': 10, 'shape': (10, 20, 30), 'theta': 180}>
xp = <module 'cupy' from '/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.hXnTrEAC7u/cupy/cupy/__init__.py'>
scp = <module 'cupyx.scipy' from '/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.hXnTrEAC7u/cupy/cupyx/scipy/__init__.py'>

    @testing.numpy_cupy_allclose(atol=0.1, scipy_name='scp')
    def test_affine_transform_texture_memory(self, xp, scp):
        a = xp.ones(self.shape, dtype=xp.float32)
        center = numpy.divide(numpy.subtract(self.shape, 1), 2)
    
        if len(self.shape) == 2:
            matrix = self._2d_rotation_matrix(self.theta, center)
        elif len(self.shape) == 3:
            matrix = self._3d_rotation_matrix(self.theta, center)
        else:
            return pytest.xfail('Unsupported shape')
    
        if self.output == 'empty':
            output = xp.empty(self.shape, dtype=xp.float32)
            if self.output_shape:
                return pytest.skip('This combination is tested in '
                                   'test_invalid_texture_arguments')
        else:
            output = self.output
    
        if self.output_shape:
            output_shape = (self.output_shape, ) * len(self.shape)
        else:
            output_shape = self.output_shape
    
        if xp == cupy:
            m = cupyx.scipy.ndimage.affine_transform
            matrix = cupy.array(matrix)
>           return m(a, matrix, output_shape=output_shape,
                     output=output, order=self.order,
                     mode=self.mode, texture_memory=True)

tests/cupyx_tests/scipy_tests/ndimage_tests/test_interpolation.py:398: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
cupyx/scipy/ndimage/interpolation.py:376: in affine_transform
    return _texture.affine_transformation(data=input,
cupyx/_texture.py:168: in affine_transformation
    texture_object = _create_texture_object(data,
cupyx/_texture.py:98: in _create_texture_object
    array = texture.CUDAarray(texture_fmt, *data.shape[::-1])
cupy/cuda/texture.pyx:296: in cupy.cuda.texture.CUDAarray.__init__
    self.ptr = runtime.malloc3DArray(desc.ptr, width, height, depth,
cupy_backends/cuda/api/runtime.pyx:593: in cupy_backends.cuda.api.runtime.malloc3DArray
    check_status(status)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

>   raise CUDARuntimeError(status)
E   AssertionError: Only cupy raises error
E   
E   Traceback (most recent call last):
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.hXnTrEAC7u/cupy/cupy/testing/_helper.py", line 47, in _call_func
E       result = impl(self, *args, **kw)
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.hXnTrEAC7u/cupy/tests/cupyx_tests/scipy_tests/ndimage_tests/test_interpolation.py", line 398, in test_affine_transform_texture_memory
E       return m(a, matrix, output_shape=output_shape,
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.hXnTrEAC7u/cupy/cupyx/scipy/ndimage/interpolation.py", line 376, in affine_transform
E       return _texture.affine_transformation(data=input,
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.hXnTrEAC7u/cupy/cupyx/_texture.py", line 168, in affine_transformation
E       texture_object = _create_texture_object(data,
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.hXnTrEAC7u/cupy/cupyx/_texture.py", line 98, in _create_texture_object
E       array = texture.CUDAarray(texture_fmt, *data.shape[::-1])
E     File "cupy/cuda/texture.pyx", line 296, in cupy.cuda.texture.CUDAarray.__init__
E       self.ptr = runtime.malloc3DArray(desc.ptr, width, height, depth,
E     File "cupy_backends/cuda/api/runtime.pyx", line 593, in cupy_backends.cuda.api.runtime.malloc3DArray
E       check_status(status)
E     File "cupy_backends/cuda/api/runtime.pyx", line 265, in cupy_backends.cuda.api.runtime.check_status
E       raise CUDARuntimeError(status)
E   cupy_backends.cuda.api.runtime.CUDARuntimeError: hipErrorUnknown: hipErrorUnknown

cupy_backends/cuda/api/runtime.pyx:265: AssertionError
----------------------------- Captured stderr call -----------------------------
Traceback (most recent call last):
  File "cupy_backends/cuda/api/runtime.pyx", line 644, in cupy_backends.cuda.api.runtime.freeArray
    check_status(status)
  File "cupy_backends/cuda/api/runtime.pyx", line 265, in cupy_backends.cuda.api.runtime.check_status
    raise CUDARuntimeError(status)
cupy_backends.cuda.api.runtime.CUDARuntimeError: hipErrorUnknown: hipErrorUnknown
_ TestAffineTransformTextureMemory.test_affine_transform_texture_memory[_param_351_{mode='nearest', order=1, output=float32, output_shape=10, shape=(10, 20, 30), theta=270}] _

self = <<cupyx_tests.scipy_tests.ndimage_tests.test_interpolation.TestAffineTransformTextureMemory object at 0x7fab36fbcca0> ...e': 'nearest', 'order': 1, 'output': <class 'numpy.float32'>, 'output_shape': 10, 'shape': (10, 20, 30), 'theta': 270}>
xp = <module 'cupy' from '/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.hXnTrEAC7u/cupy/cupy/__init__.py'>
scp = <module 'cupyx.scipy' from '/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.hXnTrEAC7u/cupy/cupyx/scipy/__init__.py'>

    @testing.numpy_cupy_allclose(atol=0.1, scipy_name='scp')
    def test_affine_transform_texture_memory(self, xp, scp):
        a = xp.ones(self.shape, dtype=xp.float32)
        center = numpy.divide(numpy.subtract(self.shape, 1), 2)
    
        if len(self.shape) == 2:
            matrix = self._2d_rotation_matrix(self.theta, center)
        elif len(self.shape) == 3:
            matrix = self._3d_rotation_matrix(self.theta, center)
        else:
            return pytest.xfail('Unsupported shape')
    
        if self.output == 'empty':
            output = xp.empty(self.shape, dtype=xp.float32)
            if self.output_shape:
                return pytest.skip('This combination is tested in '
                                   'test_invalid_texture_arguments')
        else:
            output = self.output
    
        if self.output_shape:
            output_shape = (self.output_shape, ) * len(self.shape)
        else:
            output_shape = self.output_shape
    
        if xp == cupy:
            m = cupyx.scipy.ndimage.affine_transform
            matrix = cupy.array(matrix)
>           return m(a, matrix, output_shape=output_shape,
                     output=output, order=self.order,
                     mode=self.mode, texture_memory=True)

tests/cupyx_tests/scipy_tests/ndimage_tests/test_interpolation.py:398: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
cupyx/scipy/ndimage/interpolation.py:376: in affine_transform
    return _texture.affine_transformation(data=input,
cupyx/_texture.py:168: in affine_transformation
    texture_object = _create_texture_object(data,
cupyx/_texture.py:98: in _create_texture_object
    array = texture.CUDAarray(texture_fmt, *data.shape[::-1])
cupy/cuda/texture.pyx:296: in cupy.cuda.texture.CUDAarray.__init__
    self.ptr = runtime.malloc3DArray(desc.ptr, width, height, depth,
cupy_backends/cuda/api/runtime.pyx:593: in cupy_backends.cuda.api.runtime.malloc3DArray
    check_status(status)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

>   raise CUDARuntimeError(status)
E   AssertionError: Only cupy raises error
E   
E   Traceback (most recent call last):
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.hXnTrEAC7u/cupy/cupy/testing/_helper.py", line 47, in _call_func
E       result = impl(self, *args, **kw)
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.hXnTrEAC7u/cupy/tests/cupyx_tests/scipy_tests/ndimage_tests/test_interpolation.py", line 398, in test_affine_transform_texture_memory
E       return m(a, matrix, output_shape=output_shape,
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.hXnTrEAC7u/cupy/cupyx/scipy/ndimage/interpolation.py", line 376, in affine_transform
E       return _texture.affine_transformation(data=input,
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.hXnTrEAC7u/cupy/cupyx/_texture.py", line 168, in affine_transformation
E       texture_object = _create_texture_object(data,
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.hXnTrEAC7u/cupy/cupyx/_texture.py", line 98, in _create_texture_object
E       array = texture.CUDAarray(texture_fmt, *data.shape[::-1])
E     File "cupy/cuda/texture.pyx", line 296, in cupy.cuda.texture.CUDAarray.__init__
E       self.ptr = runtime.malloc3DArray(desc.ptr, width, height, depth,
E     File "cupy_backends/cuda/api/runtime.pyx", line 593, in cupy_backends.cuda.api.runtime.malloc3DArray
E       check_status(status)
E     File "cupy_backends/cuda/api/runtime.pyx", line 265, in cupy_backends.cuda.api.runtime.check_status
E       raise CUDARuntimeError(status)
E   cupy_backends.cuda.api.runtime.CUDARuntimeError: hipErrorUnknown: hipErrorUnknown

cupy_backends/cuda/api/runtime.pyx:265: AssertionError
----------------------------- Captured stderr call -----------------------------
Traceback (most recent call last):
  File "cupy_backends/cuda/api/runtime.pyx", line 644, in cupy_backends.cuda.api.runtime.freeArray
    check_status(status)
  File "cupy_backends/cuda/api/runtime.pyx", line 265, in cupy_backends.cuda.api.runtime.check_status
    raise CUDARuntimeError(status)
cupy_backends.cuda.api.runtime.CUDARuntimeError: hipErrorUnknown: hipErrorUnknown
_ TestAffineTransformTextureMemory.test_affine_transform_texture_memory[_param_352_{mode='nearest', order=1, output='empty', output_shape=None, shape=(100, 100), theta=0}] _

self = <<cupyx_tests.scipy_tests.ndimage_tests.test_interpolation.TestAffineTransformTextureMemory object at 0x7fab39d4bd90>  parameter: {'mode': 'nearest', 'order': 1, 'output': 'empty', 'output_shape': None, 'shape': (100, 100), 'theta': 0}>
xp = <module 'cupy' from '/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.hXnTrEAC7u/cupy/cupy/__init__.py'>
scp = <module 'cupyx.scipy' from '/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.hXnTrEAC7u/cupy/cupyx/scipy/__init__.py'>

    @testing.numpy_cupy_allclose(atol=0.1, scipy_name='scp')
    def test_affine_transform_texture_memory(self, xp, scp):
        a = xp.ones(self.shape, dtype=xp.float32)
        center = numpy.divide(numpy.subtract(self.shape, 1), 2)
    
        if len(self.shape) == 2:
            matrix = self._2d_rotation_matrix(self.theta, center)
        elif len(self.shape) == 3:
            matrix = self._3d_rotation_matrix(self.theta, center)
        else:
            return pytest.xfail('Unsupported shape')
    
        if self.output == 'empty':
            output = xp.empty(self.shape, dtype=xp.float32)
            if self.output_shape:
                return pytest.skip('This combination is tested in '
                                   'test_invalid_texture_arguments')
        else:
            output = self.output
    
        if self.output_shape:
            output_shape = (self.output_shape, ) * len(self.shape)
        else:
            output_shape = self.output_shape
    
        if xp == cupy:
            m = cupyx.scipy.ndimage.affine_transform
            matrix = cupy.array(matrix)
>           return m(a, matrix, output_shape=output_shape,
                     output=output, order=self.order,
                     mode=self.mode, texture_memory=True)

tests/cupyx_tests/scipy_tests/ndimage_tests/test_interpolation.py:398: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
cupyx/scipy/ndimage/interpolation.py:376: in affine_transform
    return _texture.affine_transformation(data=input,
cupyx/_texture.py:168: in affine_transformation
    texture_object = _create_texture_object(data,
cupyx/_texture.py:98: in _create_texture_object
    array = texture.CUDAarray(texture_fmt, *data.shape[::-1])
cupy/cuda/texture.pyx:296: in cupy.cuda.texture.CUDAarray.__init__
    self.ptr = runtime.malloc3DArray(desc.ptr, width, height, depth,
cupy_backends/cuda/api/runtime.pyx:593: in cupy_backends.cuda.api.runtime.malloc3DArray
    check_status(status)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

>   raise CUDARuntimeError(status)
E   AssertionError: Only cupy raises error
E   
E   Traceback (most recent call last):
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.hXnTrEAC7u/cupy/cupy/testing/_helper.py", line 47, in _call_func
E       result = impl(self, *args, **kw)
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.hXnTrEAC7u/cupy/tests/cupyx_tests/scipy_tests/ndimage_tests/test_interpolation.py", line 398, in test_affine_transform_texture_memory
E       return m(a, matrix, output_shape=output_shape,
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.hXnTrEAC7u/cupy/cupyx/scipy/ndimage/interpolation.py", line 376, in affine_transform
E       return _texture.affine_transformation(data=input,
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.hXnTrEAC7u/cupy/cupyx/_texture.py", line 168, in affine_transformation
E       texture_object = _create_texture_object(data,
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.hXnTrEAC7u/cupy/cupyx/_texture.py", line 98, in _create_texture_object
E       array = texture.CUDAarray(texture_fmt, *data.shape[::-1])
E     File "cupy/cuda/texture.pyx", line 296, in cupy.cuda.texture.CUDAarray.__init__
E       self.ptr = runtime.malloc3DArray(desc.ptr, width, height, depth,
E     File "cupy_backends/cuda/api/runtime.pyx", line 593, in cupy_backends.cuda.api.runtime.malloc3DArray
E       check_status(status)
E     File "cupy_backends/cuda/api/runtime.pyx", line 265, in cupy_backends.cuda.api.runtime.check_status
E       raise CUDARuntimeError(status)
E   cupy_backends.cuda.api.runtime.CUDARuntimeError: hipErrorUnknown: hipErrorUnknown

cupy_backends/cuda/api/runtime.pyx:265: AssertionError
----------------------------- Captured stderr call -----------------------------
Traceback (most recent call last):
  File "cupy_backends/cuda/api/runtime.pyx", line 644, in cupy_backends.cuda.api.runtime.freeArray
    check_status(status)
  File "cupy_backends/cuda/api/runtime.pyx", line 265, in cupy_backends.cuda.api.runtime.check_status
    raise CUDARuntimeError(status)
cupy_backends.cuda.api.runtime.CUDARuntimeError: hipErrorUnknown: hipErrorUnknown
_ TestAffineTransformTextureMemory.test_affine_transform_texture_memory[_param_353_{mode='nearest', order=1, output='empty', output_shape=None, shape=(100, 100), theta=90}] _

self = <<cupyx_tests.scipy_tests.ndimage_tests.test_interpolation.TestAffineTransformTextureMemory object at 0x7fab37207dc0>  parameter: {'mode': 'nearest', 'order': 1, 'output': 'empty', 'output_shape': None, 'shape': (100, 100), 'theta': 90}>
xp = <module 'cupy' from '/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.hXnTrEAC7u/cupy/cupy/__init__.py'>
scp = <module 'cupyx.scipy' from '/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.hXnTrEAC7u/cupy/cupyx/scipy/__init__.py'>

    @testing.numpy_cupy_allclose(atol=0.1, scipy_name='scp')
    def test_affine_transform_texture_memory(self, xp, scp):
        a = xp.ones(self.shape, dtype=xp.float32)
        center = numpy.divide(numpy.subtract(self.shape, 1), 2)
    
        if len(self.shape) == 2:
            matrix = self._2d_rotation_matrix(self.theta, center)
        elif len(self.shape) == 3:
            matrix = self._3d_rotation_matrix(self.theta, center)
        else:
            return pytest.xfail('Unsupported shape')
    
        if self.output == 'empty':
            output = xp.empty(self.shape, dtype=xp.float32)
            if self.output_shape:
                return pytest.skip('This combination is tested in '
                                   'test_invalid_texture_arguments')
        else:
            output = self.output
    
        if self.output_shape:
            output_shape = (self.output_shape, ) * len(self.shape)
        else:
            output_shape = self.output_shape
    
        if xp == cupy:
            m = cupyx.scipy.ndimage.affine_transform
            matrix = cupy.array(matrix)
>           return m(a, matrix, output_shape=output_shape,
                     output=output, order=self.order,
                     mode=self.mode, texture_memory=True)

tests/cupyx_tests/scipy_tests/ndimage_tests/test_interpolation.py:398: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
cupyx/scipy/ndimage/interpolation.py:376: in affine_transform
    return _texture.affine_transformation(data=input,
cupyx/_texture.py:168: in affine_transformation
    texture_object = _create_texture_object(data,
cupyx/_texture.py:98: in _create_texture_object
    array = texture.CUDAarray(texture_fmt, *data.shape[::-1])
cupy/cuda/texture.pyx:296: in cupy.cuda.texture.CUDAarray.__init__
    self.ptr = runtime.malloc3DArray(desc.ptr, width, height, depth,
cupy_backends/cuda/api/runtime.pyx:593: in cupy_backends.cuda.api.runtime.malloc3DArray
    check_status(status)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

>   raise CUDARuntimeError(status)
E   AssertionError: Only cupy raises error
E   
E   Traceback (most recent call last):
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.hXnTrEAC7u/cupy/cupy/testing/_helper.py", line 47, in _call_func
E       result = impl(self, *args, **kw)
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.hXnTrEAC7u/cupy/tests/cupyx_tests/scipy_tests/ndimage_tests/test_interpolation.py", line 398, in test_affine_transform_texture_memory
E       return m(a, matrix, output_shape=output_shape,
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.hXnTrEAC7u/cupy/cupyx/scipy/ndimage/interpolation.py", line 376, in affine_transform
E       return _texture.affine_transformation(data=input,
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.hXnTrEAC7u/cupy/cupyx/_texture.py", line 168, in affine_transformation
E       texture_object = _create_texture_object(data,
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.hXnTrEAC7u/cupy/cupyx/_texture.py", line 98, in _create_texture_object
E       array = texture.CUDAarray(texture_fmt, *data.shape[::-1])
E     File "cupy/cuda/texture.pyx", line 296, in cupy.cuda.texture.CUDAarray.__init__
E       self.ptr = runtime.malloc3DArray(desc.ptr, width, height, depth,
E     File "cupy_backends/cuda/api/runtime.pyx", line 593, in cupy_backends.cuda.api.runtime.malloc3DArray
E       check_status(status)
E     File "cupy_backends/cuda/api/runtime.pyx", line 265, in cupy_backends.cuda.api.runtime.check_status
E       raise CUDARuntimeError(status)
E   cupy_backends.cuda.api.runtime.CUDARuntimeError: hipErrorUnknown: hipErrorUnknown

cupy_backends/cuda/api/runtime.pyx:265: AssertionError
----------------------------- Captured stderr call -----------------------------
Traceback (most recent call last):
  File "cupy_backends/cuda/api/runtime.pyx", line 644, in cupy_backends.cuda.api.runtime.freeArray
    check_status(status)
  File "cupy_backends/cuda/api/runtime.pyx", line 265, in cupy_backends.cuda.api.runtime.check_status
    raise CUDARuntimeError(status)
cupy_backends.cuda.api.runtime.CUDARuntimeError: hipErrorUnknown: hipErrorUnknown
_ TestAffineTransformTextureMemory.test_affine_transform_texture_memory[_param_354_{mode='nearest', order=1, output='empty', output_shape=None, shape=(100, 100), theta=180}] _

self = <<cupyx_tests.scipy_tests.ndimage_tests.test_interpolation.TestAffineTransformTextureMemory object at 0x7fab372a6400>  parameter: {'mode': 'nearest', 'order': 1, 'output': 'empty', 'output_shape': None, 'shape': (100, 100), 'theta': 180}>
xp = <module 'cupy' from '/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.hXnTrEAC7u/cupy/cupy/__init__.py'>
scp = <module 'cupyx.scipy' from '/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.hXnTrEAC7u/cupy/cupyx/scipy/__init__.py'>

    @testing.numpy_cupy_allclose(atol=0.1, scipy_name='scp')
    def test_affine_transform_texture_memory(self, xp, scp):
        a = xp.ones(self.shape, dtype=xp.float32)
        center = numpy.divide(numpy.subtract(self.shape, 1), 2)
    
        if len(self.shape) == 2:
            matrix = self._2d_rotation_matrix(self.theta, center)
        elif len(self.shape) == 3:
            matrix = self._3d_rotation_matrix(self.theta, center)
        else:
            return pytest.xfail('Unsupported shape')
    
        if self.output == 'empty':
            output = xp.empty(self.shape, dtype=xp.float32)
            if self.output_shape:
                return pytest.skip('This combination is tested in '
                                   'test_invalid_texture_arguments')
        else:
            output = self.output
    
        if self.output_shape:
            output_shape = (self.output_shape, ) * len(self.shape)
        else:
            output_shape = self.output_shape
    
        if xp == cupy:
            m = cupyx.scipy.ndimage.affine_transform
            matrix = cupy.array(matrix)
>           return m(a, matrix, output_shape=output_shape,
                     output=output, order=self.order,
                     mode=self.mode, texture_memory=True)

tests/cupyx_tests/scipy_tests/ndimage_tests/test_interpolation.py:398: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
cupyx/scipy/ndimage/interpolation.py:376: in affine_transform
    return _texture.affine_transformation(data=input,
cupyx/_texture.py:168: in affine_transformation
    texture_object = _create_texture_object(data,
cupyx/_texture.py:98: in _create_texture_object
    array = texture.CUDAarray(texture_fmt, *data.shape[::-1])
cupy/cuda/texture.pyx:296: in cupy.cuda.texture.CUDAarray.__init__
    self.ptr = runtime.malloc3DArray(desc.ptr, width, height, depth,
cupy_backends/cuda/api/runtime.pyx:593: in cupy_backends.cuda.api.runtime.malloc3DArray
    check_status(status)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

>   raise CUDARuntimeError(status)
E   AssertionError: Only cupy raises error
E   
E   Traceback (most recent call last):
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.hXnTrEAC7u/cupy/cupy/testing/_helper.py", line 47, in _call_func
E       result = impl(self, *args, **kw)
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.hXnTrEAC7u/cupy/tests/cupyx_tests/scipy_tests/ndimage_tests/test_interpolation.py", line 398, in test_affine_transform_texture_memory
E       return m(a, matrix, output_shape=output_shape,
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.hXnTrEAC7u/cupy/cupyx/scipy/ndimage/interpolation.py", line 376, in affine_transform
E       return _texture.affine_transformation(data=input,
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.hXnTrEAC7u/cupy/cupyx/_texture.py", line 168, in affine_transformation
E       texture_object = _create_texture_object(data,
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.hXnTrEAC7u/cupy/cupyx/_texture.py", line 98, in _create_texture_object
E       array = texture.CUDAarray(texture_fmt, *data.shape[::-1])
E     File "cupy/cuda/texture.pyx", line 296, in cupy.cuda.texture.CUDAarray.__init__
E       self.ptr = runtime.malloc3DArray(desc.ptr, width, height, depth,
E     File "cupy_backends/cuda/api/runtime.pyx", line 593, in cupy_backends.cuda.api.runtime.malloc3DArray
E       check_status(status)
E     File "cupy_backends/cuda/api/runtime.pyx", line 265, in cupy_backends.cuda.api.runtime.check_status
E       raise CUDARuntimeError(status)
E   cupy_backends.cuda.api.runtime.CUDARuntimeError: hipErrorUnknown: hipErrorUnknown

cupy_backends/cuda/api/runtime.pyx:265: AssertionError
----------------------------- Captured stderr call -----------------------------
Traceback (most recent call last):
  File "cupy_backends/cuda/api/runtime.pyx", line 644, in cupy_backends.cuda.api.runtime.freeArray
    check_status(status)
  File "cupy_backends/cuda/api/runtime.pyx", line 265, in cupy_backends.cuda.api.runtime.check_status
    raise CUDARuntimeError(status)
cupy_backends.cuda.api.runtime.CUDARuntimeError: hipErrorUnknown: hipErrorUnknown
_ TestAffineTransformTextureMemory.test_affine_transform_texture_memory[_param_355_{mode='nearest', order=1, output='empty', output_shape=None, shape=(100, 100), theta=270}] _

self = <<cupyx_tests.scipy_tests.ndimage_tests.test_interpolation.TestAffineTransformTextureMemory object at 0x7fab36e67550>  parameter: {'mode': 'nearest', 'order': 1, 'output': 'empty', 'output_shape': None, 'shape': (100, 100), 'theta': 270}>
xp = <module 'cupy' from '/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.hXnTrEAC7u/cupy/cupy/__init__.py'>
scp = <module 'cupyx.scipy' from '/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.hXnTrEAC7u/cupy/cupyx/scipy/__init__.py'>

    @testing.numpy_cupy_allclose(atol=0.1, scipy_name='scp')
    def test_affine_transform_texture_memory(self, xp, scp):
        a = xp.ones(self.shape, dtype=xp.float32)
        center = numpy.divide(numpy.subtract(self.shape, 1), 2)
    
        if len(self.shape) == 2:
            matrix = self._2d_rotation_matrix(self.theta, center)
        elif len(self.shape) == 3:
            matrix = self._3d_rotation_matrix(self.theta, center)
        else:
            return pytest.xfail('Unsupported shape')
    
        if self.output == 'empty':
            output = xp.empty(self.shape, dtype=xp.float32)
            if self.output_shape:
                return pytest.skip('This combination is tested in '
                                   'test_invalid_texture_arguments')
        else:
            output = self.output
    
        if self.output_shape:
            output_shape = (self.output_shape, ) * len(self.shape)
        else:
            output_shape = self.output_shape
    
        if xp == cupy:
            m = cupyx.scipy.ndimage.affine_transform
            matrix = cupy.array(matrix)
>           return m(a, matrix, output_shape=output_shape,
                     output=output, order=self.order,
                     mode=self.mode, texture_memory=True)

tests/cupyx_tests/scipy_tests/ndimage_tests/test_interpolation.py:398: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
cupyx/scipy/ndimage/interpolation.py:376: in affine_transform
    return _texture.affine_transformation(data=input,
cupyx/_texture.py:168: in affine_transformation
    texture_object = _create_texture_object(data,
cupyx/_texture.py:98: in _create_texture_object
    array = texture.CUDAarray(texture_fmt, *data.shape[::-1])
cupy/cuda/texture.pyx:296: in cupy.cuda.texture.CUDAarray.__init__
    self.ptr = runtime.malloc3DArray(desc.ptr, width, height, depth,
cupy_backends/cuda/api/runtime.pyx:593: in cupy_backends.cuda.api.runtime.malloc3DArray
    check_status(status)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

>   raise CUDARuntimeError(status)
E   AssertionError: Only cupy raises error
E   
E   Traceback (most recent call last):
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.hXnTrEAC7u/cupy/cupy/testing/_helper.py", line 47, in _call_func
E       result = impl(self, *args, **kw)
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.hXnTrEAC7u/cupy/tests/cupyx_tests/scipy_tests/ndimage_tests/test_interpolation.py", line 398, in test_affine_transform_texture_memory
E       return m(a, matrix, output_shape=output_shape,
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.hXnTrEAC7u/cupy/cupyx/scipy/ndimage/interpolation.py", line 376, in affine_transform
E       return _texture.affine_transformation(data=input,
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.hXnTrEAC7u/cupy/cupyx/_texture.py", line 168, in affine_transformation
E       texture_object = _create_texture_object(data,
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.hXnTrEAC7u/cupy/cupyx/_texture.py", line 98, in _create_texture_object
E       array = texture.CUDAarray(texture_fmt, *data.shape[::-1])
E     File "cupy/cuda/texture.pyx", line 296, in cupy.cuda.texture.CUDAarray.__init__
E       self.ptr = runtime.malloc3DArray(desc.ptr, width, height, depth,
E     File "cupy_backends/cuda/api/runtime.pyx", line 593, in cupy_backends.cuda.api.runtime.malloc3DArray
E       check_status(status)
E     File "cupy_backends/cuda/api/runtime.pyx", line 265, in cupy_backends.cuda.api.runtime.check_status
E       raise CUDARuntimeError(status)
E   cupy_backends.cuda.api.runtime.CUDARuntimeError: hipErrorUnknown: hipErrorUnknown

cupy_backends/cuda/api/runtime.pyx:265: AssertionError
----------------------------- Captured stderr call -----------------------------
Traceback (most recent call last):
  File "cupy_backends/cuda/api/runtime.pyx", line 644, in cupy_backends.cuda.api.runtime.freeArray
    check_status(status)
  File "cupy_backends/cuda/api/runtime.pyx", line 265, in cupy_backends.cuda.api.runtime.check_status
    raise CUDARuntimeError(status)
cupy_backends.cuda.api.runtime.CUDARuntimeError: hipErrorUnknown: hipErrorUnknown
_ TestAffineTransformTextureMemory.test_affine_transform_texture_memory[_param_356_{mode='nearest', order=1, output='empty', output_shape=None, shape=(10, 20), theta=0}] _

self = <<cupyx_tests.scipy_tests.ndimage_tests.test_interpolation.TestAffineTransformTextureMemory object at 0x7fab36bba6d0>  parameter: {'mode': 'nearest', 'order': 1, 'output': 'empty', 'output_shape': None, 'shape': (10, 20), 'theta': 0}>
xp = <module 'cupy' from '/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.hXnTrEAC7u/cupy/cupy/__init__.py'>
scp = <module 'cupyx.scipy' from '/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.hXnTrEAC7u/cupy/cupyx/scipy/__init__.py'>

    @testing.numpy_cupy_allclose(atol=0.1, scipy_name='scp')
    def test_affine_transform_texture_memory(self, xp, scp):
        a = xp.ones(self.shape, dtype=xp.float32)
        center = numpy.divide(numpy.subtract(self.shape, 1), 2)
    
        if len(self.shape) == 2:
            matrix = self._2d_rotation_matrix(self.theta, center)
        elif len(self.shape) == 3:
            matrix = self._3d_rotation_matrix(self.theta, center)
        else:
            return pytest.xfail('Unsupported shape')
    
        if self.output == 'empty':
            output = xp.empty(self.shape, dtype=xp.float32)
            if self.output_shape:
                return pytest.skip('This combination is tested in '
                                   'test_invalid_texture_arguments')
        else:
            output = self.output
    
        if self.output_shape:
            output_shape = (self.output_shape, ) * len(self.shape)
        else:
            output_shape = self.output_shape
    
        if xp == cupy:
            m = cupyx.scipy.ndimage.affine_transform
            matrix = cupy.array(matrix)
>           return m(a, matrix, output_shape=output_shape,
                     output=output, order=self.order,
                     mode=self.mode, texture_memory=True)

tests/cupyx_tests/scipy_tests/ndimage_tests/test_interpolation.py:398: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
cupyx/scipy/ndimage/interpolation.py:376: in affine_transform
    return _texture.affine_transformation(data=input,
cupyx/_texture.py:168: in affine_transformation
    texture_object = _create_texture_object(data,
cupyx/_texture.py:98: in _create_texture_object
    array = texture.CUDAarray(texture_fmt, *data.shape[::-1])
cupy/cuda/texture.pyx:296: in cupy.cuda.texture.CUDAarray.__init__
    self.ptr = runtime.malloc3DArray(desc.ptr, width, height, depth,
cupy_backends/cuda/api/runtime.pyx:593: in cupy_backends.cuda.api.runtime.malloc3DArray
    check_status(status)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

>   raise CUDARuntimeError(status)
E   AssertionError: Only cupy raises error
E   
E   Traceback (most recent call last):
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.hXnTrEAC7u/cupy/cupy/testing/_helper.py", line 47, in _call_func
E       result = impl(self, *args, **kw)
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.hXnTrEAC7u/cupy/tests/cupyx_tests/scipy_tests/ndimage_tests/test_interpolation.py", line 398, in test_affine_transform_texture_memory
E       return m(a, matrix, output_shape=output_shape,
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.hXnTrEAC7u/cupy/cupyx/scipy/ndimage/interpolation.py", line 376, in affine_transform
E       return _texture.affine_transformation(data=input,
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.hXnTrEAC7u/cupy/cupyx/_texture.py", line 168, in affine_transformation
E       texture_object = _create_texture_object(data,
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.hXnTrEAC7u/cupy/cupyx/_texture.py", line 98, in _create_texture_object
E       array = texture.CUDAarray(texture_fmt, *data.shape[::-1])
E     File "cupy/cuda/texture.pyx", line 296, in cupy.cuda.texture.CUDAarray.__init__
E       self.ptr = runtime.malloc3DArray(desc.ptr, width, height, depth,
E     File "cupy_backends/cuda/api/runtime.pyx", line 593, in cupy_backends.cuda.api.runtime.malloc3DArray
E       check_status(status)
E     File "cupy_backends/cuda/api/runtime.pyx", line 265, in cupy_backends.cuda.api.runtime.check_status
E       raise CUDARuntimeError(status)
E   cupy_backends.cuda.api.runtime.CUDARuntimeError: hipErrorUnknown: hipErrorUnknown

cupy_backends/cuda/api/runtime.pyx:265: AssertionError
----------------------------- Captured stderr call -----------------------------
Traceback (most recent call last):
  File "cupy_backends/cuda/api/runtime.pyx", line 644, in cupy_backends.cuda.api.runtime.freeArray
    check_status(status)
  File "cupy_backends/cuda/api/runtime.pyx", line 265, in cupy_backends.cuda.api.runtime.check_status
    raise CUDARuntimeError(status)
cupy_backends.cuda.api.runtime.CUDARuntimeError: hipErrorUnknown: hipErrorUnknown
_ TestAffineTransformTextureMemory.test_affine_transform_texture_memory[_param_357_{mode='nearest', order=1, output='empty', output_shape=None, shape=(10, 20), theta=90}] _

self = <<cupyx_tests.scipy_tests.ndimage_tests.test_interpolation.TestAffineTransformTextureMemory object at 0x7fab36b98040>  parameter: {'mode': 'nearest', 'order': 1, 'output': 'empty', 'output_shape': None, 'shape': (10, 20), 'theta': 90}>
xp = <module 'cupy' from '/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.hXnTrEAC7u/cupy/cupy/__init__.py'>
scp = <module 'cupyx.scipy' from '/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.hXnTrEAC7u/cupy/cupyx/scipy/__init__.py'>

    @testing.numpy_cupy_allclose(atol=0.1, scipy_name='scp')
    def test_affine_transform_texture_memory(self, xp, scp):
        a = xp.ones(self.shape, dtype=xp.float32)
        center = numpy.divide(numpy.subtract(self.shape, 1), 2)
    
        if len(self.shape) == 2:
            matrix = self._2d_rotation_matrix(self.theta, center)
        elif len(self.shape) == 3:
            matrix = self._3d_rotation_matrix(self.theta, center)
        else:
            return pytest.xfail('Unsupported shape')
    
        if self.output == 'empty':
            output = xp.empty(self.shape, dtype=xp.float32)
            if self.output_shape:
                return pytest.skip('This combination is tested in '
                                   'test_invalid_texture_arguments')
        else:
            output = self.output
    
        if self.output_shape:
            output_shape = (self.output_shape, ) * len(self.shape)
        else:
            output_shape = self.output_shape
    
        if xp == cupy:
            m = cupyx.scipy.ndimage.affine_transform
            matrix = cupy.array(matrix)
>           return m(a, matrix, output_shape=output_shape,
                     output=output, order=self.order,
                     mode=self.mode, texture_memory=True)

tests/cupyx_tests/scipy_tests/ndimage_tests/test_interpolation.py:398: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
cupyx/scipy/ndimage/interpolation.py:376: in affine_transform
    return _texture.affine_transformation(data=input,
cupyx/_texture.py:168: in affine_transformation
    texture_object = _create_texture_object(data,
cupyx/_texture.py:98: in _create_texture_object
    array = texture.CUDAarray(texture_fmt, *data.shape[::-1])
cupy/cuda/texture.pyx:296: in cupy.cuda.texture.CUDAarray.__init__
    self.ptr = runtime.malloc3DArray(desc.ptr, width, height, depth,
cupy_backends/cuda/api/runtime.pyx:593: in cupy_backends.cuda.api.runtime.malloc3DArray
    check_status(status)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

>   raise CUDARuntimeError(status)
E   AssertionError: Only cupy raises error
E   
E   Traceback (most recent call last):
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.hXnTrEAC7u/cupy/cupy/testing/_helper.py", line 47, in _call_func
E       result = impl(self, *args, **kw)
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.hXnTrEAC7u/cupy/tests/cupyx_tests/scipy_tests/ndimage_tests/test_interpolation.py", line 398, in test_affine_transform_texture_memory
E       return m(a, matrix, output_shape=output_shape,
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.hXnTrEAC7u/cupy/cupyx/scipy/ndimage/interpolation.py", line 376, in affine_transform
E       return _texture.affine_transformation(data=input,
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.hXnTrEAC7u/cupy/cupyx/_texture.py", line 168, in affine_transformation
E       texture_object = _create_texture_object(data,
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.hXnTrEAC7u/cupy/cupyx/_texture.py", line 98, in _create_texture_object
E       array = texture.CUDAarray(texture_fmt, *data.shape[::-1])
E     File "cupy/cuda/texture.pyx", line 296, in cupy.cuda.texture.CUDAarray.__init__
E       self.ptr = runtime.malloc3DArray(desc.ptr, width, height, depth,
E     File "cupy_backends/cuda/api/runtime.pyx", line 593, in cupy_backends.cuda.api.runtime.malloc3DArray
E       check_status(status)
E     File "cupy_backends/cuda/api/runtime.pyx", line 265, in cupy_backends.cuda.api.runtime.check_status
E       raise CUDARuntimeError(status)
E   cupy_backends.cuda.api.runtime.CUDARuntimeError: hipErrorUnknown: hipErrorUnknown

cupy_backends/cuda/api/runtime.pyx:265: AssertionError
----------------------------- Captured stderr call -----------------------------
Traceback (most recent call last):
  File "cupy_backends/cuda/api/runtime.pyx", line 644, in cupy_backends.cuda.api.runtime.freeArray
    check_status(status)
  File "cupy_backends/cuda/api/runtime.pyx", line 265, in cupy_backends.cuda.api.runtime.check_status
    raise CUDARuntimeError(status)
cupy_backends.cuda.api.runtime.CUDARuntimeError: hipErrorUnknown: hipErrorUnknown
_ TestAffineTransformTextureMemory.test_affine_transform_texture_memory[_param_358_{mode='nearest', order=1, output='empty', output_shape=None, shape=(10, 20), theta=180}] _

self = <<cupyx_tests.scipy_tests.ndimage_tests.test_interpolation.TestAffineTransformTextureMemory object at 0x7fab371e2280>  parameter: {'mode': 'nearest', 'order': 1, 'output': 'empty', 'output_shape': None, 'shape': (10, 20), 'theta': 180}>
xp = <module 'cupy' from '/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.hXnTrEAC7u/cupy/cupy/__init__.py'>
scp = <module 'cupyx.scipy' from '/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.hXnTrEAC7u/cupy/cupyx/scipy/__init__.py'>

    @testing.numpy_cupy_allclose(atol=0.1, scipy_name='scp')
    def test_affine_transform_texture_memory(self, xp, scp):
        a = xp.ones(self.shape, dtype=xp.float32)
        center = numpy.divide(numpy.subtract(self.shape, 1), 2)
    
        if len(self.shape) == 2:
            matrix = self._2d_rotation_matrix(self.theta, center)
        elif len(self.shape) == 3:
            matrix = self._3d_rotation_matrix(self.theta, center)
        else:
            return pytest.xfail('Unsupported shape')
    
        if self.output == 'empty':
            output = xp.empty(self.shape, dtype=xp.float32)
            if self.output_shape:
                return pytest.skip('This combination is tested in '
                                   'test_invalid_texture_arguments')
        else:
            output = self.output
    
        if self.output_shape:
            output_shape = (self.output_shape, ) * len(self.shape)
        else:
            output_shape = self.output_shape
    
        if xp == cupy:
            m = cupyx.scipy.ndimage.affine_transform
            matrix = cupy.array(matrix)
>           return m(a, matrix, output_shape=output_shape,
                     output=output, order=self.order,
                     mode=self.mode, texture_memory=True)

tests/cupyx_tests/scipy_tests/ndimage_tests/test_interpolation.py:398: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
cupyx/scipy/ndimage/interpolation.py:376: in affine_transform
    return _texture.affine_transformation(data=input,
cupyx/_texture.py:168: in affine_transformation
    texture_object = _create_texture_object(data,
cupyx/_texture.py:98: in _create_texture_object
    array = texture.CUDAarray(texture_fmt, *data.shape[::-1])
cupy/cuda/texture.pyx:296: in cupy.cuda.texture.CUDAarray.__init__
    self.ptr = runtime.malloc3DArray(desc.ptr, width, height, depth,
cupy_backends/cuda/api/runtime.pyx:593: in cupy_backends.cuda.api.runtime.malloc3DArray
    check_status(status)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

>   raise CUDARuntimeError(status)
E   AssertionError: Only cupy raises error
E   
E   Traceback (most recent call last):
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.hXnTrEAC7u/cupy/cupy/testing/_helper.py", line 47, in _call_func
E       result = impl(self, *args, **kw)
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.hXnTrEAC7u/cupy/tests/cupyx_tests/scipy_tests/ndimage_tests/test_interpolation.py", line 398, in test_affine_transform_texture_memory
E       return m(a, matrix, output_shape=output_shape,
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.hXnTrEAC7u/cupy/cupyx/scipy/ndimage/interpolation.py", line 376, in affine_transform
E       return _texture.affine_transformation(data=input,
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.hXnTrEAC7u/cupy/cupyx/_texture.py", line 168, in affine_transformation
E       texture_object = _create_texture_object(data,
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.hXnTrEAC7u/cupy/cupyx/_texture.py", line 98, in _create_texture_object
E       array = texture.CUDAarray(texture_fmt, *data.shape[::-1])
E     File "cupy/cuda/texture.pyx", line 296, in cupy.cuda.texture.CUDAarray.__init__
E       self.ptr = runtime.malloc3DArray(desc.ptr, width, height, depth,
E     File "cupy_backends/cuda/api/runtime.pyx", line 593, in cupy_backends.cuda.api.runtime.malloc3DArray
E       check_status(status)
E     File "cupy_backends/cuda/api/runtime.pyx", line 265, in cupy_backends.cuda.api.runtime.check_status
E       raise CUDARuntimeError(status)
E   cupy_backends.cuda.api.runtime.CUDARuntimeError: hipErrorUnknown: hipErrorUnknown

cupy_backends/cuda/api/runtime.pyx:265: AssertionError
----------------------------- Captured stderr call -----------------------------
Traceback (most recent call last):
  File "cupy_backends/cuda/api/runtime.pyx", line 644, in cupy_backends.cuda.api.runtime.freeArray
    check_status(status)
  File "cupy_backends/cuda/api/runtime.pyx", line 265, in cupy_backends.cuda.api.runtime.check_status
    raise CUDARuntimeError(status)
cupy_backends.cuda.api.runtime.CUDARuntimeError: hipErrorUnknown: hipErrorUnknown
_ TestAffineTransformTextureMemory.test_affine_transform_texture_memory[_param_359_{mode='nearest', order=1, output='empty', output_shape=None, shape=(10, 20), theta=270}] _

self = <<cupyx_tests.scipy_tests.ndimage_tests.test_interpolation.TestAffineTransformTextureMemory object at 0x7fab3726c730>  parameter: {'mode': 'nearest', 'order': 1, 'output': 'empty', 'output_shape': None, 'shape': (10, 20), 'theta': 270}>
xp = <module 'cupy' from '/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.hXnTrEAC7u/cupy/cupy/__init__.py'>
scp = <module 'cupyx.scipy' from '/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.hXnTrEAC7u/cupy/cupyx/scipy/__init__.py'>

    @testing.numpy_cupy_allclose(atol=0.1, scipy_name='scp')
    def test_affine_transform_texture_memory(self, xp, scp):
        a = xp.ones(self.shape, dtype=xp.float32)
        center = numpy.divide(numpy.subtract(self.shape, 1), 2)
    
        if len(self.shape) == 2:
            matrix = self._2d_rotation_matrix(self.theta, center)
        elif len(self.shape) == 3:
            matrix = self._3d_rotation_matrix(self.theta, center)
        else:
            return pytest.xfail('Unsupported shape')
    
        if self.output == 'empty':
            output = xp.empty(self.shape, dtype=xp.float32)
            if self.output_shape:
                return pytest.skip('This combination is tested in '
                                   'test_invalid_texture_arguments')
        else:
            output = self.output
    
        if self.output_shape:
            output_shape = (self.output_shape, ) * len(self.shape)
        else:
            output_shape = self.output_shape
    
        if xp == cupy:
            m = cupyx.scipy.ndimage.affine_transform
            matrix = cupy.array(matrix)
>           return m(a, matrix, output_shape=output_shape,
                     output=output, order=self.order,
                     mode=self.mode, texture_memory=True)

tests/cupyx_tests/scipy_tests/ndimage_tests/test_interpolation.py:398: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
cupyx/scipy/ndimage/interpolation.py:376: in affine_transform
    return _texture.affine_transformation(data=input,
cupyx/_texture.py:168: in affine_transformation
    texture_object = _create_texture_object(data,
cupyx/_texture.py:98: in _create_texture_object
    array = texture.CUDAarray(texture_fmt, *data.shape[::-1])
cupy/cuda/texture.pyx:296: in cupy.cuda.texture.CUDAarray.__init__
    self.ptr = runtime.malloc3DArray(desc.ptr, width, height, depth,
cupy_backends/cuda/api/runtime.pyx:593: in cupy_backends.cuda.api.runtime.malloc3DArray
    check_status(status)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

>   raise CUDARuntimeError(status)
E   AssertionError: Only cupy raises error
E   
E   Traceback (most recent call last):
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.hXnTrEAC7u/cupy/cupy/testing/_helper.py", line 47, in _call_func
E       result = impl(self, *args, **kw)
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.hXnTrEAC7u/cupy/tests/cupyx_tests/scipy_tests/ndimage_tests/test_interpolation.py", line 398, in test_affine_transform_texture_memory
E       return m(a, matrix, output_shape=output_shape,
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.hXnTrEAC7u/cupy/cupyx/scipy/ndimage/interpolation.py", line 376, in affine_transform
E       return _texture.affine_transformation(data=input,
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.hXnTrEAC7u/cupy/cupyx/_texture.py", line 168, in affine_transformation
E       texture_object = _create_texture_object(data,
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.hXnTrEAC7u/cupy/cupyx/_texture.py", line 98, in _create_texture_object
E       array = texture.CUDAarray(texture_fmt, *data.shape[::-1])
E     File "cupy/cuda/texture.pyx", line 296, in cupy.cuda.texture.CUDAarray.__init__
E       self.ptr = runtime.malloc3DArray(desc.ptr, width, height, depth,
E     File "cupy_backends/cuda/api/runtime.pyx", line 593, in cupy_backends.cuda.api.runtime.malloc3DArray
E       check_status(status)
E     File "cupy_backends/cuda/api/runtime.pyx", line 265, in cupy_backends.cuda.api.runtime.check_status
E       raise CUDARuntimeError(status)
E   cupy_backends.cuda.api.runtime.CUDARuntimeError: hipErrorUnknown: hipErrorUnknown

cupy_backends/cuda/api/runtime.pyx:265: AssertionError
----------------------------- Captured stderr call -----------------------------
Traceback (most recent call last):
  File "cupy_backends/cuda/api/runtime.pyx", line 644, in cupy_backends.cuda.api.runtime.freeArray
    check_status(status)
  File "cupy_backends/cuda/api/runtime.pyx", line 265, in cupy_backends.cuda.api.runtime.check_status
    raise CUDARuntimeError(status)
cupy_backends.cuda.api.runtime.CUDARuntimeError: hipErrorUnknown: hipErrorUnknown
_ TestAffineTransformTextureMemory.test_affine_transform_texture_memory[_param_360_{mode='nearest', order=1, output='empty', output_shape=None, shape=(10, 10, 10), theta=0}] _

self = <<cupyx_tests.scipy_tests.ndimage_tests.test_interpolation.TestAffineTransformTextureMemory object at 0x7fab36ed4b80>  parameter: {'mode': 'nearest', 'order': 1, 'output': 'empty', 'output_shape': None, 'shape': (10, 10, 10), 'theta': 0}>
xp = <module 'cupy' from '/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.hXnTrEAC7u/cupy/cupy/__init__.py'>
scp = <module 'cupyx.scipy' from '/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.hXnTrEAC7u/cupy/cupyx/scipy/__init__.py'>

    @testing.numpy_cupy_allclose(atol=0.1, scipy_name='scp')
    def test_affine_transform_texture_memory(self, xp, scp):
        a = xp.ones(self.shape, dtype=xp.float32)
        center = numpy.divide(numpy.subtract(self.shape, 1), 2)
    
        if len(self.shape) == 2:
            matrix = self._2d_rotation_matrix(self.theta, center)
        elif len(self.shape) == 3:
            matrix = self._3d_rotation_matrix(self.theta, center)
        else:
            return pytest.xfail('Unsupported shape')
    
        if self.output == 'empty':
            output = xp.empty(self.shape, dtype=xp.float32)
            if self.output_shape:
                return pytest.skip('This combination is tested in '
                                   'test_invalid_texture_arguments')
        else:
            output = self.output
    
        if self.output_shape:
            output_shape = (self.output_shape, ) * len(self.shape)
        else:
            output_shape = self.output_shape
    
        if xp == cupy:
            m = cupyx.scipy.ndimage.affine_transform
            matrix = cupy.array(matrix)
>           return m(a, matrix, output_shape=output_shape,
                     output=output, order=self.order,
                     mode=self.mode, texture_memory=True)

tests/cupyx_tests/scipy_tests/ndimage_tests/test_interpolation.py:398: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
cupyx/scipy/ndimage/interpolation.py:376: in affine_transform
    return _texture.affine_transformation(data=input,
cupyx/_texture.py:168: in affine_transformation
    texture_object = _create_texture_object(data,
cupyx/_texture.py:98: in _create_texture_object
    array = texture.CUDAarray(texture_fmt, *data.shape[::-1])
cupy/cuda/texture.pyx:296: in cupy.cuda.texture.CUDAarray.__init__
    self.ptr = runtime.malloc3DArray(desc.ptr, width, height, depth,
cupy_backends/cuda/api/runtime.pyx:593: in cupy_backends.cuda.api.runtime.malloc3DArray
    check_status(status)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

>   raise CUDARuntimeError(status)
E   AssertionError: Only cupy raises error
E   
E   Traceback (most recent call last):
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.hXnTrEAC7u/cupy/cupy/testing/_helper.py", line 47, in _call_func
E       result = impl(self, *args, **kw)
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.hXnTrEAC7u/cupy/tests/cupyx_tests/scipy_tests/ndimage_tests/test_interpolation.py", line 398, in test_affine_transform_texture_memory
E       return m(a, matrix, output_shape=output_shape,
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.hXnTrEAC7u/cupy/cupyx/scipy/ndimage/interpolation.py", line 376, in affine_transform
E       return _texture.affine_transformation(data=input,
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.hXnTrEAC7u/cupy/cupyx/_texture.py", line 168, in affine_transformation
E       texture_object = _create_texture_object(data,
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.hXnTrEAC7u/cupy/cupyx/_texture.py", line 98, in _create_texture_object
E       array = texture.CUDAarray(texture_fmt, *data.shape[::-1])
E     File "cupy/cuda/texture.pyx", line 296, in cupy.cuda.texture.CUDAarray.__init__
E       self.ptr = runtime.malloc3DArray(desc.ptr, width, height, depth,
E     File "cupy_backends/cuda/api/runtime.pyx", line 593, in cupy_backends.cuda.api.runtime.malloc3DArray
E       check_status(status)
E     File "cupy_backends/cuda/api/runtime.pyx", line 265, in cupy_backends.cuda.api.runtime.check_status
E       raise CUDARuntimeError(status)
E   cupy_backends.cuda.api.runtime.CUDARuntimeError: hipErrorUnknown: hipErrorUnknown

cupy_backends/cuda/api/runtime.pyx:265: AssertionError
----------------------------- Captured stderr call -----------------------------
Traceback (most recent call last):
  File "cupy_backends/cuda/api/runtime.pyx", line 644, in cupy_backends.cuda.api.runtime.freeArray
    check_status(status)
  File "cupy_backends/cuda/api/runtime.pyx", line 265, in cupy_backends.cuda.api.runtime.check_status
    raise CUDARuntimeError(status)
cupy_backends.cuda.api.runtime.CUDARuntimeError: hipErrorUnknown: hipErrorUnknown
_ TestAffineTransformTextureMemory.test_affine_transform_texture_memory[_param_361_{mode='nearest', order=1, output='empty', output_shape=None, shape=(10, 10, 10), theta=90}] _

self = <<cupyx_tests.scipy_tests.ndimage_tests.test_interpolation.TestAffineTransformTextureMemory object at 0x7fab391ab250>  parameter: {'mode': 'nearest', 'order': 1, 'output': 'empty', 'output_shape': None, 'shape': (10, 10, 10), 'theta': 90}>
xp = <module 'cupy' from '/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.hXnTrEAC7u/cupy/cupy/__init__.py'>
scp = <module 'cupyx.scipy' from '/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.hXnTrEAC7u/cupy/cupyx/scipy/__init__.py'>

    @testing.numpy_cupy_allclose(atol=0.1, scipy_name='scp')
    def test_affine_transform_texture_memory(self, xp, scp):
        a = xp.ones(self.shape, dtype=xp.float32)
        center = numpy.divide(numpy.subtract(self.shape, 1), 2)
    
        if len(self.shape) == 2:
            matrix = self._2d_rotation_matrix(self.theta, center)
        elif len(self.shape) == 3:
            matrix = self._3d_rotation_matrix(self.theta, center)
        else:
            return pytest.xfail('Unsupported shape')
    
        if self.output == 'empty':
            output = xp.empty(self.shape, dtype=xp.float32)
            if self.output_shape:
                return pytest.skip('This combination is tested in '
                                   'test_invalid_texture_arguments')
        else:
            output = self.output
    
        if self.output_shape:
            output_shape = (self.output_shape, ) * len(self.shape)
        else:
            output_shape = self.output_shape
    
        if xp == cupy:
            m = cupyx.scipy.ndimage.affine_transform
            matrix = cupy.array(matrix)
>           return m(a, matrix, output_shape=output_shape,
                     output=output, order=self.order,
                     mode=self.mode, texture_memory=True)

tests/cupyx_tests/scipy_tests/ndimage_tests/test_interpolation.py:398: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
cupyx/scipy/ndimage/interpolation.py:376: in affine_transform
    return _texture.affine_transformation(data=input,
cupyx/_texture.py:168: in affine_transformation
    texture_object = _create_texture_object(data,
cupyx/_texture.py:98: in _create_texture_object
    array = texture.CUDAarray(texture_fmt, *data.shape[::-1])
cupy/cuda/texture.pyx:296: in cupy.cuda.texture.CUDAarray.__init__
    self.ptr = runtime.malloc3DArray(desc.ptr, width, height, depth,
cupy_backends/cuda/api/runtime.pyx:593: in cupy_backends.cuda.api.runtime.malloc3DArray
    check_status(status)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

>   raise CUDARuntimeError(status)
E   AssertionError: Only cupy raises error
E   
E   Traceback (most recent call last):
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.hXnTrEAC7u/cupy/cupy/testing/_helper.py", line 47, in _call_func
E       result = impl(self, *args, **kw)
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.hXnTrEAC7u/cupy/tests/cupyx_tests/scipy_tests/ndimage_tests/test_interpolation.py", line 398, in test_affine_transform_texture_memory
E       return m(a, matrix, output_shape=output_shape,
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.hXnTrEAC7u/cupy/cupyx/scipy/ndimage/interpolation.py", line 376, in affine_transform
E       return _texture.affine_transformation(data=input,
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.hXnTrEAC7u/cupy/cupyx/_texture.py", line 168, in affine_transformation
E       texture_object = _create_texture_object(data,
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.hXnTrEAC7u/cupy/cupyx/_texture.py", line 98, in _create_texture_object
E       array = texture.CUDAarray(texture_fmt, *data.shape[::-1])
E     File "cupy/cuda/texture.pyx", line 296, in cupy.cuda.texture.CUDAarray.__init__
E       self.ptr = runtime.malloc3DArray(desc.ptr, width, height, depth,
E     File "cupy_backends/cuda/api/runtime.pyx", line 593, in cupy_backends.cuda.api.runtime.malloc3DArray
E       check_status(status)
E     File "cupy_backends/cuda/api/runtime.pyx", line 265, in cupy_backends.cuda.api.runtime.check_status
E       raise CUDARuntimeError(status)
E   cupy_backends.cuda.api.runtime.CUDARuntimeError: hipErrorUnknown: hipErrorUnknown

cupy_backends/cuda/api/runtime.pyx:265: AssertionError
----------------------------- Captured stderr call -----------------------------
Traceback (most recent call last):
  File "cupy_backends/cuda/api/runtime.pyx", line 644, in cupy_backends.cuda.api.runtime.freeArray
    check_status(status)
  File "cupy_backends/cuda/api/runtime.pyx", line 265, in cupy_backends.cuda.api.runtime.check_status
    raise CUDARuntimeError(status)
cupy_backends.cuda.api.runtime.CUDARuntimeError: hipErrorUnknown: hipErrorUnknown
_ TestAffineTransformTextureMemory.test_affine_transform_texture_memory[_param_362_{mode='nearest', order=1, output='empty', output_shape=None, shape=(10, 10, 10), theta=180}] _

self = <<cupyx_tests.scipy_tests.ndimage_tests.test_interpolation.TestAffineTransformTextureMemory object at 0x7fab36e10400>  parameter: {'mode': 'nearest', 'order': 1, 'output': 'empty', 'output_shape': None, 'shape': (10, 10, 10), 'theta': 180}>
xp = <module 'cupy' from '/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.hXnTrEAC7u/cupy/cupy/__init__.py'>
scp = <module 'cupyx.scipy' from '/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.hXnTrEAC7u/cupy/cupyx/scipy/__init__.py'>

    @testing.numpy_cupy_allclose(atol=0.1, scipy_name='scp')
    def test_affine_transform_texture_memory(self, xp, scp):
        a = xp.ones(self.shape, dtype=xp.float32)
        center = numpy.divide(numpy.subtract(self.shape, 1), 2)
    
        if len(self.shape) == 2:
            matrix = self._2d_rotation_matrix(self.theta, center)
        elif len(self.shape) == 3:
            matrix = self._3d_rotation_matrix(self.theta, center)
        else:
            return pytest.xfail('Unsupported shape')
    
        if self.output == 'empty':
            output = xp.empty(self.shape, dtype=xp.float32)
            if self.output_shape:
                return pytest.skip('This combination is tested in '
                                   'test_invalid_texture_arguments')
        else:
            output = self.output
    
        if self.output_shape:
            output_shape = (self.output_shape, ) * len(self.shape)
        else:
            output_shape = self.output_shape
    
        if xp == cupy:
            m = cupyx.scipy.ndimage.affine_transform
            matrix = cupy.array(matrix)
>           return m(a, matrix, output_shape=output_shape,
                     output=output, order=self.order,
                     mode=self.mode, texture_memory=True)

tests/cupyx_tests/scipy_tests/ndimage_tests/test_interpolation.py:398: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
cupyx/scipy/ndimage/interpolation.py:376: in affine_transform
    return _texture.affine_transformation(data=input,
cupyx/_texture.py:168: in affine_transformation
    texture_object = _create_texture_object(data,
cupyx/_texture.py:98: in _create_texture_object
    array = texture.CUDAarray(texture_fmt, *data.shape[::-1])
cupy/cuda/texture.pyx:296: in cupy.cuda.texture.CUDAarray.__init__
    self.ptr = runtime.malloc3DArray(desc.ptr, width, height, depth,
cupy_backends/cuda/api/runtime.pyx:593: in cupy_backends.cuda.api.runtime.malloc3DArray
    check_status(status)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

>   raise CUDARuntimeError(status)
E   AssertionError: Only cupy raises error
E   
E   Traceback (most recent call last):
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.hXnTrEAC7u/cupy/cupy/testing/_helper.py", line 47, in _call_func
E       result = impl(self, *args, **kw)
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.hXnTrEAC7u/cupy/tests/cupyx_tests/scipy_tests/ndimage_tests/test_interpolation.py", line 398, in test_affine_transform_texture_memory
E       return m(a, matrix, output_shape=output_shape,
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.hXnTrEAC7u/cupy/cupyx/scipy/ndimage/interpolation.py", line 376, in affine_transform
E       return _texture.affine_transformation(data=input,
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.hXnTrEAC7u/cupy/cupyx/_texture.py", line 168, in affine_transformation
E       texture_object = _create_texture_object(data,
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.hXnTrEAC7u/cupy/cupyx/_texture.py", line 98, in _create_texture_object
E       array = texture.CUDAarray(texture_fmt, *data.shape[::-1])
E     File "cupy/cuda/texture.pyx", line 296, in cupy.cuda.texture.CUDAarray.__init__
E       self.ptr = runtime.malloc3DArray(desc.ptr, width, height, depth,
E     File "cupy_backends/cuda/api/runtime.pyx", line 593, in cupy_backends.cuda.api.runtime.malloc3DArray
E       check_status(status)
E     File "cupy_backends/cuda/api/runtime.pyx", line 265, in cupy_backends.cuda.api.runtime.check_status
E       raise CUDARuntimeError(status)
E   cupy_backends.cuda.api.runtime.CUDARuntimeError: hipErrorUnknown: hipErrorUnknown

cupy_backends/cuda/api/runtime.pyx:265: AssertionError
----------------------------- Captured stderr call -----------------------------
Traceback (most recent call last):
  File "cupy_backends/cuda/api/runtime.pyx", line 644, in cupy_backends.cuda.api.runtime.freeArray
    check_status(status)
  File "cupy_backends/cuda/api/runtime.pyx", line 265, in cupy_backends.cuda.api.runtime.check_status
    raise CUDARuntimeError(status)
cupy_backends.cuda.api.runtime.CUDARuntimeError: hipErrorUnknown: hipErrorUnknown
_ TestAffineTransformTextureMemory.test_affine_transform_texture_memory[_param_363_{mode='nearest', order=1, output='empty', output_shape=None, shape=(10, 10, 10), theta=270}] _

self = <<cupyx_tests.scipy_tests.ndimage_tests.test_interpolation.TestAffineTransformTextureMemory object at 0x7fab36dcb8b0>  parameter: {'mode': 'nearest', 'order': 1, 'output': 'empty', 'output_shape': None, 'shape': (10, 10, 10), 'theta': 270}>
xp = <module 'cupy' from '/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.hXnTrEAC7u/cupy/cupy/__init__.py'>
scp = <module 'cupyx.scipy' from '/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.hXnTrEAC7u/cupy/cupyx/scipy/__init__.py'>

    @testing.numpy_cupy_allclose(atol=0.1, scipy_name='scp')
    def test_affine_transform_texture_memory(self, xp, scp):
        a = xp.ones(self.shape, dtype=xp.float32)
        center = numpy.divide(numpy.subtract(self.shape, 1), 2)
    
        if len(self.shape) == 2:
            matrix = self._2d_rotation_matrix(self.theta, center)
        elif len(self.shape) == 3:
            matrix = self._3d_rotation_matrix(self.theta, center)
        else:
            return pytest.xfail('Unsupported shape')
    
        if self.output == 'empty':
            output = xp.empty(self.shape, dtype=xp.float32)
            if self.output_shape:
                return pytest.skip('This combination is tested in '
                                   'test_invalid_texture_arguments')
        else:
            output = self.output
    
        if self.output_shape:
            output_shape = (self.output_shape, ) * len(self.shape)
        else:
            output_shape = self.output_shape
    
        if xp == cupy:
            m = cupyx.scipy.ndimage.affine_transform
            matrix = cupy.array(matrix)
>           return m(a, matrix, output_shape=output_shape,
                     output=output, order=self.order,
                     mode=self.mode, texture_memory=True)

tests/cupyx_tests/scipy_tests/ndimage_tests/test_interpolation.py:398: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
cupyx/scipy/ndimage/interpolation.py:376: in affine_transform
    return _texture.affine_transformation(data=input,
cupyx/_texture.py:168: in affine_transformation
    texture_object = _create_texture_object(data,
cupyx/_texture.py:98: in _create_texture_object
    array = texture.CUDAarray(texture_fmt, *data.shape[::-1])
cupy/cuda/texture.pyx:296: in cupy.cuda.texture.CUDAarray.__init__
    self.ptr = runtime.malloc3DArray(desc.ptr, width, height, depth,
cupy_backends/cuda/api/runtime.pyx:593: in cupy_backends.cuda.api.runtime.malloc3DArray
    check_status(status)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

>   raise CUDARuntimeError(status)
E   AssertionError: Only cupy raises error
E   
E   Traceback (most recent call last):
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.hXnTrEAC7u/cupy/cupy/testing/_helper.py", line 47, in _call_func
E       result = impl(self, *args, **kw)
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.hXnTrEAC7u/cupy/tests/cupyx_tests/scipy_tests/ndimage_tests/test_interpolation.py", line 398, in test_affine_transform_texture_memory
E       return m(a, matrix, output_shape=output_shape,
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.hXnTrEAC7u/cupy/cupyx/scipy/ndimage/interpolation.py", line 376, in affine_transform
E       return _texture.affine_transformation(data=input,
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.hXnTrEAC7u/cupy/cupyx/_texture.py", line 168, in affine_transformation
E       texture_object = _create_texture_object(data,
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.hXnTrEAC7u/cupy/cupyx/_texture.py", line 98, in _create_texture_object
E       array = texture.CUDAarray(texture_fmt, *data.shape[::-1])
E     File "cupy/cuda/texture.pyx", line 296, in cupy.cuda.texture.CUDAarray.__init__
E       self.ptr = runtime.malloc3DArray(desc.ptr, width, height, depth,
E     File "cupy_backends/cuda/api/runtime.pyx", line 593, in cupy_backends.cuda.api.runtime.malloc3DArray
E       check_status(status)
E     File "cupy_backends/cuda/api/runtime.pyx", line 265, in cupy_backends.cuda.api.runtime.check_status
E       raise CUDARuntimeError(status)
E   cupy_backends.cuda.api.runtime.CUDARuntimeError: hipErrorUnknown: hipErrorUnknown

cupy_backends/cuda/api/runtime.pyx:265: AssertionError
----------------------------- Captured stderr call -----------------------------
Traceback (most recent call last):
  File "cupy_backends/cuda/api/runtime.pyx", line 644, in cupy_backends.cuda.api.runtime.freeArray
    check_status(status)
  File "cupy_backends/cuda/api/runtime.pyx", line 265, in cupy_backends.cuda.api.runtime.check_status
    raise CUDARuntimeError(status)
cupy_backends.cuda.api.runtime.CUDARuntimeError: hipErrorUnknown: hipErrorUnknown
_ TestAffineTransformTextureMemory.test_affine_transform_texture_memory[_param_364_{mode='nearest', order=1, output='empty', output_shape=None, shape=(10, 20, 30), theta=0}] _

self = <<cupyx_tests.scipy_tests.ndimage_tests.test_interpolation.TestAffineTransformTextureMemory object at 0x7fab38b80f70>  parameter: {'mode': 'nearest', 'order': 1, 'output': 'empty', 'output_shape': None, 'shape': (10, 20, 30), 'theta': 0}>
xp = <module 'cupy' from '/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.hXnTrEAC7u/cupy/cupy/__init__.py'>
scp = <module 'cupyx.scipy' from '/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.hXnTrEAC7u/cupy/cupyx/scipy/__init__.py'>

    @testing.numpy_cupy_allclose(atol=0.1, scipy_name='scp')
    def test_affine_transform_texture_memory(self, xp, scp):
        a = xp.ones(self.shape, dtype=xp.float32)
        center = numpy.divide(numpy.subtract(self.shape, 1), 2)
    
        if len(self.shape) == 2:
            matrix = self._2d_rotation_matrix(self.theta, center)
        elif len(self.shape) == 3:
            matrix = self._3d_rotation_matrix(self.theta, center)
        else:
            return pytest.xfail('Unsupported shape')
    
        if self.output == 'empty':
            output = xp.empty(self.shape, dtype=xp.float32)
            if self.output_shape:
                return pytest.skip('This combination is tested in '
                                   'test_invalid_texture_arguments')
        else:
            output = self.output
    
        if self.output_shape:
            output_shape = (self.output_shape, ) * len(self.shape)
        else:
            output_shape = self.output_shape
    
        if xp == cupy:
            m = cupyx.scipy.ndimage.affine_transform
            matrix = cupy.array(matrix)
>           return m(a, matrix, output_shape=output_shape,
                     output=output, order=self.order,
                     mode=self.mode, texture_memory=True)

tests/cupyx_tests/scipy_tests/ndimage_tests/test_interpolation.py:398: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
cupyx/scipy/ndimage/interpolation.py:376: in affine_transform
    return _texture.affine_transformation(data=input,
cupyx/_texture.py:168: in affine_transformation
    texture_object = _create_texture_object(data,
cupyx/_texture.py:98: in _create_texture_object
    array = texture.CUDAarray(texture_fmt, *data.shape[::-1])
cupy/cuda/texture.pyx:296: in cupy.cuda.texture.CUDAarray.__init__
    self.ptr = runtime.malloc3DArray(desc.ptr, width, height, depth,
cupy_backends/cuda/api/runtime.pyx:593: in cupy_backends.cuda.api.runtime.malloc3DArray
    check_status(status)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

>   raise CUDARuntimeError(status)
E   AssertionError: Only cupy raises error
E   
E   Traceback (most recent call last):
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.hXnTrEAC7u/cupy/cupy/testing/_helper.py", line 47, in _call_func
E       result = impl(self, *args, **kw)
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.hXnTrEAC7u/cupy/tests/cupyx_tests/scipy_tests/ndimage_tests/test_interpolation.py", line 398, in test_affine_transform_texture_memory
E       return m(a, matrix, output_shape=output_shape,
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.hXnTrEAC7u/cupy/cupyx/scipy/ndimage/interpolation.py", line 376, in affine_transform
E       return _texture.affine_transformation(data=input,
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.hXnTrEAC7u/cupy/cupyx/_texture.py", line 168, in affine_transformation
E       texture_object = _create_texture_object(data,
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.hXnTrEAC7u/cupy/cupyx/_texture.py", line 98, in _create_texture_object
E       array = texture.CUDAarray(texture_fmt, *data.shape[::-1])
E     File "cupy/cuda/texture.pyx", line 296, in cupy.cuda.texture.CUDAarray.__init__
E       self.ptr = runtime.malloc3DArray(desc.ptr, width, height, depth,
E     File "cupy_backends/cuda/api/runtime.pyx", line 593, in cupy_backends.cuda.api.runtime.malloc3DArray
E       check_status(status)
E     File "cupy_backends/cuda/api/runtime.pyx", line 265, in cupy_backends.cuda.api.runtime.check_status
E       raise CUDARuntimeError(status)
E   cupy_backends.cuda.api.runtime.CUDARuntimeError: hipErrorUnknown: hipErrorUnknown

cupy_backends/cuda/api/runtime.pyx:265: AssertionError
----------------------------- Captured stderr call -----------------------------
Traceback (most recent call last):
  File "cupy_backends/cuda/api/runtime.pyx", line 644, in cupy_backends.cuda.api.runtime.freeArray
    check_status(status)
  File "cupy_backends/cuda/api/runtime.pyx", line 265, in cupy_backends.cuda.api.runtime.check_status
    raise CUDARuntimeError(status)
cupy_backends.cuda.api.runtime.CUDARuntimeError: hipErrorUnknown: hipErrorUnknown
_ TestAffineTransformTextureMemory.test_affine_transform_texture_memory[_param_365_{mode='nearest', order=1, output='empty', output_shape=None, shape=(10, 20, 30), theta=90}] _

self = <<cupyx_tests.scipy_tests.ndimage_tests.test_interpolation.TestAffineTransformTextureMemory object at 0x7fab39c9e160>  parameter: {'mode': 'nearest', 'order': 1, 'output': 'empty', 'output_shape': None, 'shape': (10, 20, 30), 'theta': 90}>
xp = <module 'cupy' from '/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.hXnTrEAC7u/cupy/cupy/__init__.py'>
scp = <module 'cupyx.scipy' from '/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.hXnTrEAC7u/cupy/cupyx/scipy/__init__.py'>

    @testing.numpy_cupy_allclose(atol=0.1, scipy_name='scp')
    def test_affine_transform_texture_memory(self, xp, scp):
        a = xp.ones(self.shape, dtype=xp.float32)
        center = numpy.divide(numpy.subtract(self.shape, 1), 2)
    
        if len(self.shape) == 2:
            matrix = self._2d_rotation_matrix(self.theta, center)
        elif len(self.shape) == 3:
            matrix = self._3d_rotation_matrix(self.theta, center)
        else:
            return pytest.xfail('Unsupported shape')
    
        if self.output == 'empty':
            output = xp.empty(self.shape, dtype=xp.float32)
            if self.output_shape:
                return pytest.skip('This combination is tested in '
                                   'test_invalid_texture_arguments')
        else:
            output = self.output
    
        if self.output_shape:
            output_shape = (self.output_shape, ) * len(self.shape)
        else:
            output_shape = self.output_shape
    
        if xp == cupy:
            m = cupyx.scipy.ndimage.affine_transform
            matrix = cupy.array(matrix)
>           return m(a, matrix, output_shape=output_shape,
                     output=output, order=self.order,
                     mode=self.mode, texture_memory=True)

tests/cupyx_tests/scipy_tests/ndimage_tests/test_interpolation.py:398: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
cupyx/scipy/ndimage/interpolation.py:376: in affine_transform
    return _texture.affine_transformation(data=input,
cupyx/_texture.py:168: in affine_transformation
    texture_object = _create_texture_object(data,
cupyx/_texture.py:98: in _create_texture_object
    array = texture.CUDAarray(texture_fmt, *data.shape[::-1])
cupy/cuda/texture.pyx:296: in cupy.cuda.texture.CUDAarray.__init__
    self.ptr = runtime.malloc3DArray(desc.ptr, width, height, depth,
cupy_backends/cuda/api/runtime.pyx:593: in cupy_backends.cuda.api.runtime.malloc3DArray
    check_status(status)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

>   raise CUDARuntimeError(status)
E   AssertionError: Only cupy raises error
E   
E   Traceback (most recent call last):
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.hXnTrEAC7u/cupy/cupy/testing/_helper.py", line 47, in _call_func
E       result = impl(self, *args, **kw)
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.hXnTrEAC7u/cupy/tests/cupyx_tests/scipy_tests/ndimage_tests/test_interpolation.py", line 398, in test_affine_transform_texture_memory
E       return m(a, matrix, output_shape=output_shape,
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.hXnTrEAC7u/cupy/cupyx/scipy/ndimage/interpolation.py", line 376, in affine_transform
E       return _texture.affine_transformation(data=input,
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.hXnTrEAC7u/cupy/cupyx/_texture.py", line 168, in affine_transformation
E       texture_object = _create_texture_object(data,
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.hXnTrEAC7u/cupy/cupyx/_texture.py", line 98, in _create_texture_object
E       array = texture.CUDAarray(texture_fmt, *data.shape[::-1])
E     File "cupy/cuda/texture.pyx", line 296, in cupy.cuda.texture.CUDAarray.__init__
E       self.ptr = runtime.malloc3DArray(desc.ptr, width, height, depth,
E     File "cupy_backends/cuda/api/runtime.pyx", line 593, in cupy_backends.cuda.api.runtime.malloc3DArray
E       check_status(status)
E     File "cupy_backends/cuda/api/runtime.pyx", line 265, in cupy_backends.cuda.api.runtime.check_status
E       raise CUDARuntimeError(status)
E   cupy_backends.cuda.api.runtime.CUDARuntimeError: hipErrorUnknown: hipErrorUnknown

cupy_backends/cuda/api/runtime.pyx:265: AssertionError
----------------------------- Captured stderr call -----------------------------
Traceback (most recent call last):
  File "cupy_backends/cuda/api/runtime.pyx", line 644, in cupy_backends.cuda.api.runtime.freeArray
    check_status(status)
  File "cupy_backends/cuda/api/runtime.pyx", line 265, in cupy_backends.cuda.api.runtime.check_status
    raise CUDARuntimeError(status)
cupy_backends.cuda.api.runtime.CUDARuntimeError: hipErrorUnknown: hipErrorUnknown
_ TestAffineTransformTextureMemory.test_affine_transform_texture_memory[_param_366_{mode='nearest', order=1, output='empty', output_shape=None, shape=(10, 20, 30), theta=180}] _

self = <<cupyx_tests.scipy_tests.ndimage_tests.test_interpolation.TestAffineTransformTextureMemory object at 0x7fab38f457f0>  parameter: {'mode': 'nearest', 'order': 1, 'output': 'empty', 'output_shape': None, 'shape': (10, 20, 30), 'theta': 180}>
xp = <module 'cupy' from '/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.hXnTrEAC7u/cupy/cupy/__init__.py'>
scp = <module 'cupyx.scipy' from '/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.hXnTrEAC7u/cupy/cupyx/scipy/__init__.py'>

    @testing.numpy_cupy_allclose(atol=0.1, scipy_name='scp')
    def test_affine_transform_texture_memory(self, xp, scp):
        a = xp.ones(self.shape, dtype=xp.float32)
        center = numpy.divide(numpy.subtract(self.shape, 1), 2)
    
        if len(self.shape) == 2:
            matrix = self._2d_rotation_matrix(self.theta, center)
        elif len(self.shape) == 3:
            matrix = self._3d_rotation_matrix(self.theta, center)
        else:
            return pytest.xfail('Unsupported shape')
    
        if self.output == 'empty':
            output = xp.empty(self.shape, dtype=xp.float32)
            if self.output_shape:
                return pytest.skip('This combination is tested in '
                                   'test_invalid_texture_arguments')
        else:
            output = self.output
    
        if self.output_shape:
            output_shape = (self.output_shape, ) * len(self.shape)
        else:
            output_shape = self.output_shape
    
        if xp == cupy:
            m = cupyx.scipy.ndimage.affine_transform
            matrix = cupy.array(matrix)
>           return m(a, matrix, output_shape=output_shape,
                     output=output, order=self.order,
                     mode=self.mode, texture_memory=True)

tests/cupyx_tests/scipy_tests/ndimage_tests/test_interpolation.py:398: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
cupyx/scipy/ndimage/interpolation.py:376: in affine_transform
    return _texture.affine_transformation(data=input,
cupyx/_texture.py:168: in affine_transformation
    texture_object = _create_texture_object(data,
cupyx/_texture.py:98: in _create_texture_object
    array = texture.CUDAarray(texture_fmt, *data.shape[::-1])
cupy/cuda/texture.pyx:296: in cupy.cuda.texture.CUDAarray.__init__
    self.ptr = runtime.malloc3DArray(desc.ptr, width, height, depth,
cupy_backends/cuda/api/runtime.pyx:593: in cupy_backends.cuda.api.runtime.malloc3DArray
    check_status(status)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

>   raise CUDARuntimeError(status)
E   AssertionError: Only cupy raises error
E   
E   Traceback (most recent call last):
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.hXnTrEAC7u/cupy/cupy/testing/_helper.py", line 47, in _call_func
E       result = impl(self, *args, **kw)
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.hXnTrEAC7u/cupy/tests/cupyx_tests/scipy_tests/ndimage_tests/test_interpolation.py", line 398, in test_affine_transform_texture_memory
E       return m(a, matrix, output_shape=output_shape,
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.hXnTrEAC7u/cupy/cupyx/scipy/ndimage/interpolation.py", line 376, in affine_transform
E       return _texture.affine_transformation(data=input,
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.hXnTrEAC7u/cupy/cupyx/_texture.py", line 168, in affine_transformation
E       texture_object = _create_texture_object(data,
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.hXnTrEAC7u/cupy/cupyx/_texture.py", line 98, in _create_texture_object
E       array = texture.CUDAarray(texture_fmt, *data.shape[::-1])
E     File "cupy/cuda/texture.pyx", line 296, in cupy.cuda.texture.CUDAarray.__init__
E       self.ptr = runtime.malloc3DArray(desc.ptr, width, height, depth,
E     File "cupy_backends/cuda/api/runtime.pyx", line 593, in cupy_backends.cuda.api.runtime.malloc3DArray
E       check_status(status)
E     File "cupy_backends/cuda/api/runtime.pyx", line 265, in cupy_backends.cuda.api.runtime.check_status
E       raise CUDARuntimeError(status)
E   cupy_backends.cuda.api.runtime.CUDARuntimeError: hipErrorUnknown: hipErrorUnknown

cupy_backends/cuda/api/runtime.pyx:265: AssertionError
----------------------------- Captured stderr call -----------------------------
Traceback (most recent call last):
  File "cupy_backends/cuda/api/runtime.pyx", line 644, in cupy_backends.cuda.api.runtime.freeArray
    check_status(status)
  File "cupy_backends/cuda/api/runtime.pyx", line 265, in cupy_backends.cuda.api.runtime.check_status
    raise CUDARuntimeError(status)
cupy_backends.cuda.api.runtime.CUDARuntimeError: hipErrorUnknown: hipErrorUnknown
_ TestAffineTransformTextureMemory.test_affine_transform_texture_memory[_param_367_{mode='nearest', order=1, output='empty', output_shape=None, shape=(10, 20, 30), theta=270}] _

self = <<cupyx_tests.scipy_tests.ndimage_tests.test_interpolation.TestAffineTransformTextureMemory object at 0x7fab3700bfa0>  parameter: {'mode': 'nearest', 'order': 1, 'output': 'empty', 'output_shape': None, 'shape': (10, 20, 30), 'theta': 270}>
xp = <module 'cupy' from '/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.hXnTrEAC7u/cupy/cupy/__init__.py'>
scp = <module 'cupyx.scipy' from '/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.hXnTrEAC7u/cupy/cupyx/scipy/__init__.py'>

    @testing.numpy_cupy_allclose(atol=0.1, scipy_name='scp')
    def test_affine_transform_texture_memory(self, xp, scp):
        a = xp.ones(self.shape, dtype=xp.float32)
        center = numpy.divide(numpy.subtract(self.shape, 1), 2)
    
        if len(self.shape) == 2:
            matrix = self._2d_rotation_matrix(self.theta, center)
        elif len(self.shape) == 3:
            matrix = self._3d_rotation_matrix(self.theta, center)
        else:
            return pytest.xfail('Unsupported shape')
    
        if self.output == 'empty':
            output = xp.empty(self.shape, dtype=xp.float32)
            if self.output_shape:
                return pytest.skip('This combination is tested in '
                                   'test_invalid_texture_arguments')
        else:
            output = self.output
    
        if self.output_shape:
            output_shape = (self.output_shape, ) * len(self.shape)
        else:
            output_shape = self.output_shape
    
        if xp == cupy:
            m = cupyx.scipy.ndimage.affine_transform
            matrix = cupy.array(matrix)
>           return m(a, matrix, output_shape=output_shape,
                     output=output, order=self.order,
                     mode=self.mode, texture_memory=True)

tests/cupyx_tests/scipy_tests/ndimage_tests/test_interpolation.py:398: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
cupyx/scipy/ndimage/interpolation.py:376: in affine_transform
    return _texture.affine_transformation(data=input,
cupyx/_texture.py:168: in affine_transformation
    texture_object = _create_texture_object(data,
cupyx/_texture.py:98: in _create_texture_object
    array = texture.CUDAarray(texture_fmt, *data.shape[::-1])
cupy/cuda/texture.pyx:296: in cupy.cuda.texture.CUDAarray.__init__
    self.ptr = runtime.malloc3DArray(desc.ptr, width, height, depth,
cupy_backends/cuda/api/runtime.pyx:593: in cupy_backends.cuda.api.runtime.malloc3DArray
    check_status(status)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

>   raise CUDARuntimeError(status)
E   AssertionError: Only cupy raises error
E   
E   Traceback (most recent call last):
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.hXnTrEAC7u/cupy/cupy/testing/_helper.py", line 47, in _call_func
E       result = impl(self, *args, **kw)
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.hXnTrEAC7u/cupy/tests/cupyx_tests/scipy_tests/ndimage_tests/test_interpolation.py", line 398, in test_affine_transform_texture_memory
E       return m(a, matrix, output_shape=output_shape,
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.hXnTrEAC7u/cupy/cupyx/scipy/ndimage/interpolation.py", line 376, in affine_transform
E       return _texture.affine_transformation(data=input,
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.hXnTrEAC7u/cupy/cupyx/_texture.py", line 168, in affine_transformation
E       texture_object = _create_texture_object(data,
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.hXnTrEAC7u/cupy/cupyx/_texture.py", line 98, in _create_texture_object
E       array = texture.CUDAarray(texture_fmt, *data.shape[::-1])
E     File "cupy/cuda/texture.pyx", line 296, in cupy.cuda.texture.CUDAarray.__init__
E       self.ptr = runtime.malloc3DArray(desc.ptr, width, height, depth,
E     File "cupy_backends/cuda/api/runtime.pyx", line 593, in cupy_backends.cuda.api.runtime.malloc3DArray
E       check_status(status)
E     File "cupy_backends/cuda/api/runtime.pyx", line 265, in cupy_backends.cuda.api.runtime.check_status
E       raise CUDARuntimeError(status)
E   cupy_backends.cuda.api.runtime.CUDARuntimeError: hipErrorUnknown: hipErrorUnknown

cupy_backends/cuda/api/runtime.pyx:265: AssertionError
----------------------------- Captured stderr call -----------------------------
Traceback (most recent call last):
  File "cupy_backends/cuda/api/runtime.pyx", line 644, in cupy_backends.cuda.api.runtime.freeArray
    check_status(status)
  File "cupy_backends/cuda/api/runtime.pyx", line 265, in cupy_backends.cuda.api.runtime.check_status
    raise CUDARuntimeError(status)
cupy_backends.cuda.api.runtime.CUDARuntimeError: hipErrorUnknown: hipErrorUnknown
_ TestZoomOutputSize1.test_zoom_output_size1[_param_4_{grid_mode=False, mode='constant', order=4, shape=(5, 5, 2), zoom=(2, 2, 0.5)}] _

self = <<cupyx_tests.scipy_tests.ndimage_tests.test_interpolation.TestZoomOutputSize1 object at 0x7fab36d286d0>  parameter: {'grid_mode': False, 'mode': 'constant', 'order': 4, 'shape': (5, 5, 2), 'zoom': (2, 2, 0.5)}>
args = (), kw = {'dtype': <class 'numpy.float32'>}
dtype = <class 'numpy.float32'>

    @_wraps_partial(impl, name)
    def test_func(self, *args, **kw):
        for dtype in dtypes:
            try:
                kw[name] = numpy.dtype(dtype).type
>               impl(self, *args, **kw)

cupy/testing/_helper.py:825: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
cupy/testing/_helper.py:343: in test_func
    check_func(cupy_r, numpy_r)
cupy/testing/_helper.py:495: in check_func
    _array.assert_allclose(c, n, rtol1, atol1, err_msg, verbose)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

actual = array([[[-9.26215027e-04],
        [-7.12910551e-05],
        [-1.04548770e-03],
        [ 6.02170185e-04],
        [ ...   [-1.58413204e-05],
        [-2.26292832e-05],
        [-1.52809316e-05],
        [-2.62873400e-05]]], dtype=float32)
desired = array([[[-1.91677706e-16],
        [ 6.02007280e-16],
        [ 7.39644969e-18],
        [ 9.42839520e-17],
        [-...   [ 2.49078413e-18],
        [-6.86374620e-18],
        [-2.01807717e-17],
        [-1.36889723e-17]]], dtype=float32)
rtol = 1e-07, atol = 1e-05, err_msg = '', verbose = True

    def assert_allclose(actual, desired, rtol=1e-7, atol=0, err_msg='',
                        verbose=True):
        """Raises an AssertionError if objects are not equal up to desired tolerance.
    
        Args:
             actual(numpy.ndarray or cupy.ndarray): The actual object to check.
             desired(numpy.ndarray or cupy.ndarray): The desired, expected object.
             rtol(float): Relative tolerance.
             atol(float): Absolute tolerance.
             err_msg(str): The error message to be printed in case of failure.
             verbose(bool): If ``True``, the conflicting
                 values are appended to the error message.
    
        .. seealso:: :func:`numpy.testing.assert_allclose`
    
        """  # NOQA
>       numpy.testing.assert_allclose(
            cupy.asnumpy(actual), cupy.asnumpy(desired),
            rtol=rtol, atol=atol, err_msg=err_msg, verbose=verbose)
E       AssertionError: 
E       Not equal to tolerance rtol=1e-07, atol=1e-05
E       
E       Mismatched elements: 95 / 100 (95%)
E       Max absolute difference: 0.00124037
E       Max relative difference: 1.6367563e+14
E        x: array([[[-9.262150e-04],
E               [-7.129106e-05],
E               [-1.045488e-03],...
E        y: array([[[-1.916777e-16],
E               [ 6.020073e-16],
E               [ 7.396450e-18],...

cupy/testing/_array.py:24: AssertionError
----------------------------- Captured stdout call -----------------------------
dtype is <class 'numpy.float32'>
_ TestZoomOutputSize1.test_zoom_output_size1[_param_5_{grid_mode=False, mode='constant', order=5, shape=(5, 5, 2), zoom=(2, 2, 0.5)}] _

self = <<cupyx_tests.scipy_tests.ndimage_tests.test_interpolation.TestZoomOutputSize1 object at 0x7fab34e16340>  parameter: {'grid_mode': False, 'mode': 'constant', 'order': 5, 'shape': (5, 5, 2), 'zoom': (2, 2, 0.5)}>
args = (), kw = {'dtype': <class 'numpy.float32'>}
dtype = <class 'numpy.float32'>

    @_wraps_partial(impl, name)
    def test_func(self, *args, **kw):
        for dtype in dtypes:
            try:
                kw[name] = numpy.dtype(dtype).type
>               impl(self, *args, **kw)

cupy/testing/_helper.py:825: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
cupy/testing/_helper.py:343: in test_func
    check_func(cupy_r, numpy_r)
cupy/testing/_helper.py:495: in check_func
    _array.assert_allclose(c, n, rtol1, atol1, err_msg, verbose)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

actual = array([[[-6.23873319e-04],
        [-6.52701594e-04],
        [-5.34185849e-04],
        [-7.05319864e-04],
        [-...   [-2.50156190e-05],
        [ 9.55036171e-07],
        [-1.27298597e-06],
        [-4.17136789e-06]]], dtype=float32)
desired = array([[[ 2.1000416e-16],
        [-7.7505151e-16],
        [-6.6172874e-17],
        [-6.5140899e-16],
        [ 7.95...       [-1.5922411e-17],
        [ 3.1236140e-17],
        [-5.3157008e-17],
        [-1.3124647e-17]]], dtype=float32)
rtol = 1e-07, atol = 1e-05, err_msg = '', verbose = True

    def assert_allclose(actual, desired, rtol=1e-7, atol=0, err_msg='',
                        verbose=True):
        """Raises an AssertionError if objects are not equal up to desired tolerance.
    
        Args:
             actual(numpy.ndarray or cupy.ndarray): The actual object to check.
             desired(numpy.ndarray or cupy.ndarray): The desired, expected object.
             rtol(float): Relative tolerance.
             atol(float): Absolute tolerance.
             err_msg(str): The error message to be printed in case of failure.
             verbose(bool): If ``True``, the conflicting
                 values are appended to the error message.
    
        .. seealso:: :func:`numpy.testing.assert_allclose`
    
        """  # NOQA
>       numpy.testing.assert_allclose(
            cupy.asnumpy(actual), cupy.asnumpy(desired),
            rtol=rtol, atol=atol, err_msg=err_msg, verbose=verbose)
E       AssertionError: 
E       Not equal to tolerance rtol=1e-07, atol=1e-05
E       
E       Mismatched elements: 85 / 100 (85%)
E       Max absolute difference: 0.00084527
E       Max relative difference: 1.881553e+13
E        x: array([[[-6.238733e-04],
E               [-6.527016e-04],
E               [-5.341858e-04],...
E        y: array([[[ 2.100042e-16],
E               [-7.750515e-16],
E               [-6.617287e-17],...

cupy/testing/_array.py:24: AssertionError
----------------------------- Captured stdout call -----------------------------
dtype is <class 'numpy.float32'>
_ TestZoomOutputSize1.test_zoom_output_size1[_param_16_{grid_mode=False, mode='mirror', order=4, shape=(5, 5, 2), zoom=(2, 2, 0.5)}] _

self = <<cupyx_tests.scipy_tests.ndimage_tests.test_interpolation.TestZoomOutputSize1 object at 0x7fab34e25340>  parameter: {'grid_mode': False, 'mode': 'mirror', 'order': 4, 'shape': (5, 5, 2), 'zoom': (2, 2, 0.5)}>
args = (), kw = {'dtype': <class 'numpy.float32'>}
dtype = <class 'numpy.float32'>

    @_wraps_partial(impl, name)
    def test_func(self, *args, **kw):
        for dtype in dtypes:
            try:
                kw[name] = numpy.dtype(dtype).type
>               impl(self, *args, **kw)

cupy/testing/_helper.py:825: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
cupy/testing/_helper.py:343: in test_func
    check_func(cupy_r, numpy_r)
cupy/testing/_helper.py:495: in check_func
    _array.assert_allclose(c, n, rtol1, atol1, err_msg, verbose)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

actual = array([[[-9.26215027e-04],
        [-7.12910551e-05],
        [-1.04548770e-03],
        [ 6.02170185e-04],
        [ ...   [-1.58413204e-05],
        [-2.26292832e-05],
        [-1.52809316e-05],
        [-2.62873400e-05]]], dtype=float32)
desired = array([[[-1.91677706e-16],
        [ 6.02007280e-16],
        [ 7.39644969e-18],
        [ 9.42839520e-17],
        [-...   [ 2.49078413e-18],
        [-6.86374620e-18],
        [-2.01807717e-17],
        [-1.36889723e-17]]], dtype=float32)
rtol = 1e-07, atol = 1e-05, err_msg = '', verbose = True

    def assert_allclose(actual, desired, rtol=1e-7, atol=0, err_msg='',
                        verbose=True):
        """Raises an AssertionError if objects are not equal up to desired tolerance.
    
        Args:
             actual(numpy.ndarray or cupy.ndarray): The actual object to check.
             desired(numpy.ndarray or cupy.ndarray): The desired, expected object.
             rtol(float): Relative tolerance.
             atol(float): Absolute tolerance.
             err_msg(str): The error message to be printed in case of failure.
             verbose(bool): If ``True``, the conflicting
                 values are appended to the error message.
    
        .. seealso:: :func:`numpy.testing.assert_allclose`
    
        """  # NOQA
>       numpy.testing.assert_allclose(
            cupy.asnumpy(actual), cupy.asnumpy(desired),
            rtol=rtol, atol=atol, err_msg=err_msg, verbose=verbose)
E       AssertionError: 
E       Not equal to tolerance rtol=1e-07, atol=1e-05
E       
E       Mismatched elements: 95 / 100 (95%)
E       Max absolute difference: 0.00124037
E       Max relative difference: 1.6367563e+14
E        x: array([[[-9.262150e-04],
E               [-7.129106e-05],
E               [-1.045488e-03],...
E        y: array([[[-1.916777e-16],
E               [ 6.020073e-16],
E               [ 7.396450e-18],...

cupy/testing/_array.py:24: AssertionError
----------------------------- Captured stdout call -----------------------------
dtype is <class 'numpy.float32'>
_ TestZoomOutputSize1.test_zoom_output_size1[_param_17_{grid_mode=False, mode='mirror', order=5, shape=(5, 5, 2), zoom=(2, 2, 0.5)}] _

self = <<cupyx_tests.scipy_tests.ndimage_tests.test_interpolation.TestZoomOutputSize1 object at 0x7fab33f49220>  parameter: {'grid_mode': False, 'mode': 'mirror', 'order': 5, 'shape': (5, 5, 2), 'zoom': (2, 2, 0.5)}>
args = (), kw = {'dtype': <class 'numpy.float32'>}
dtype = <class 'numpy.float32'>

    @_wraps_partial(impl, name)
    def test_func(self, *args, **kw):
        for dtype in dtypes:
            try:
                kw[name] = numpy.dtype(dtype).type
>               impl(self, *args, **kw)

cupy/testing/_helper.py:825: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
cupy/testing/_helper.py:343: in test_func
    check_func(cupy_r, numpy_r)
cupy/testing/_helper.py:495: in check_func
    _array.assert_allclose(c, n, rtol1, atol1, err_msg, verbose)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

actual = array([[[-6.23873319e-04],
        [-6.52701594e-04],
        [-5.34185849e-04],
        [-7.05319864e-04],
        [-...   [-2.50156190e-05],
        [ 9.55036171e-07],
        [-1.27298597e-06],
        [-4.17136789e-06]]], dtype=float32)
desired = array([[[ 2.1000416e-16],
        [-7.7505151e-16],
        [-6.6172874e-17],
        [-6.5140899e-16],
        [ 7.95...       [-1.5922411e-17],
        [ 3.1236140e-17],
        [-5.3157008e-17],
        [-1.3124647e-17]]], dtype=float32)
rtol = 1e-07, atol = 1e-05, err_msg = '', verbose = True

    def assert_allclose(actual, desired, rtol=1e-7, atol=0, err_msg='',
                        verbose=True):
        """Raises an AssertionError if objects are not equal up to desired tolerance.
    
        Args:
             actual(numpy.ndarray or cupy.ndarray): The actual object to check.
             desired(numpy.ndarray or cupy.ndarray): The desired, expected object.
             rtol(float): Relative tolerance.
             atol(float): Absolute tolerance.
             err_msg(str): The error message to be printed in case of failure.
             verbose(bool): If ``True``, the conflicting
                 values are appended to the error message.
    
        .. seealso:: :func:`numpy.testing.assert_allclose`
    
        """  # NOQA
>       numpy.testing.assert_allclose(
            cupy.asnumpy(actual), cupy.asnumpy(desired),
            rtol=rtol, atol=atol, err_msg=err_msg, verbose=verbose)
E       AssertionError: 
E       Not equal to tolerance rtol=1e-07, atol=1e-05
E       
E       Mismatched elements: 85 / 100 (85%)
E       Max absolute difference: 0.00084527
E       Max relative difference: 1.881553e+13
E        x: array([[[-6.238733e-04],
E               [-6.527016e-04],
E               [-5.341858e-04],...
E        y: array([[[ 2.100042e-16],
E               [-7.750515e-16],
E               [-6.617287e-17],...

cupy/testing/_array.py:24: AssertionError
----------------------------- Captured stdout call -----------------------------
dtype is <class 'numpy.float32'>
_ TestZoomOutputSize1.test_zoom_output_size1[_param_22_{grid_mode=False, mode='wrap', order=4, shape=(5, 5, 2), zoom=(2, 2, 0.5)}] _

self = <<cupyx_tests.scipy_tests.ndimage_tests.test_interpolation.TestZoomOutputSize1 object at 0x7fab33fc66a0>  parameter: {'grid_mode': False, 'mode': 'wrap', 'order': 4, 'shape': (5, 5, 2), 'zoom': (2, 2, 0.5)}>
args = (), kw = {'dtype': <class 'numpy.float32'>}
dtype = <class 'numpy.float32'>

    @_wraps_partial(impl, name)
    def test_func(self, *args, **kw):
        for dtype in dtypes:
            try:
                kw[name] = numpy.dtype(dtype).type
>               impl(self, *args, **kw)

cupy/testing/_helper.py:825: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
cupy/testing/_helper.py:343: in test_func
    check_func(cupy_r, numpy_r)
cupy/testing/_helper.py:495: in check_func
    _array.assert_allclose(c, n, rtol1, atol1, err_msg, verbose)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

actual = array([[[-9.26215027e-04],
        [-7.12910551e-05],
        [-1.04548770e-03],
        [ 6.02170185e-04],
        [ ...   [-1.58413204e-05],
        [-2.26292832e-05],
        [-1.52809316e-05],
        [-2.62873400e-05]]], dtype=float32)
desired = array([[[-1.91677706e-16],
        [ 6.02007280e-16],
        [ 7.39644969e-18],
        [ 9.42839520e-17],
        [-...   [ 2.49078413e-18],
        [-6.86374620e-18],
        [-2.01807717e-17],
        [-1.36889723e-17]]], dtype=float32)
rtol = 1e-07, atol = 1e-05, err_msg = '', verbose = True

    def assert_allclose(actual, desired, rtol=1e-7, atol=0, err_msg='',
                        verbose=True):
        """Raises an AssertionError if objects are not equal up to desired tolerance.
    
        Args:
             actual(numpy.ndarray or cupy.ndarray): The actual object to check.
             desired(numpy.ndarray or cupy.ndarray): The desired, expected object.
             rtol(float): Relative tolerance.
             atol(float): Absolute tolerance.
             err_msg(str): The error message to be printed in case of failure.
             verbose(bool): If ``True``, the conflicting
                 values are appended to the error message.
    
        .. seealso:: :func:`numpy.testing.assert_allclose`
    
        """  # NOQA
>       numpy.testing.assert_allclose(
            cupy.asnumpy(actual), cupy.asnumpy(desired),
            rtol=rtol, atol=atol, err_msg=err_msg, verbose=verbose)
E       AssertionError: 
E       Not equal to tolerance rtol=1e-07, atol=1e-05
E       
E       Mismatched elements: 95 / 100 (95%)
E       Max absolute difference: 0.00124037
E       Max relative difference: 1.6367563e+14
E        x: array([[[-9.262150e-04],
E               [-7.129106e-05],
E               [-1.045488e-03],...
E        y: array([[[-1.916777e-16],
E               [ 6.020073e-16],
E               [ 7.396450e-18],...

cupy/testing/_array.py:24: AssertionError
----------------------------- Captured stdout call -----------------------------
dtype is <class 'numpy.float32'>
_ TestZoomOutputSize1.test_zoom_output_size1[_param_23_{grid_mode=False, mode='wrap', order=5, shape=(5, 5, 2), zoom=(2, 2, 0.5)}] _

self = <<cupyx_tests.scipy_tests.ndimage_tests.test_interpolation.TestZoomOutputSize1 object at 0x7fab33f1e100>  parameter: {'grid_mode': False, 'mode': 'wrap', 'order': 5, 'shape': (5, 5, 2), 'zoom': (2, 2, 0.5)}>
args = (), kw = {'dtype': <class 'numpy.float32'>}
dtype = <class 'numpy.float32'>

    @_wraps_partial(impl, name)
    def test_func(self, *args, **kw):
        for dtype in dtypes:
            try:
                kw[name] = numpy.dtype(dtype).type
>               impl(self, *args, **kw)

cupy/testing/_helper.py:825: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
cupy/testing/_helper.py:343: in test_func
    check_func(cupy_r, numpy_r)
cupy/testing/_helper.py:495: in check_func
    _array.assert_allclose(c, n, rtol1, atol1, err_msg, verbose)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

actual = array([[[-6.23873319e-04],
        [-6.52701594e-04],
        [-5.34185849e-04],
        [-7.05319864e-04],
        [-...   [-2.50156190e-05],
        [ 9.55036171e-07],
        [-1.27298597e-06],
        [-4.17136789e-06]]], dtype=float32)
desired = array([[[ 2.1000416e-16],
        [-7.7505151e-16],
        [-6.6172874e-17],
        [-6.5140899e-16],
        [ 7.95...       [-1.5922411e-17],
        [ 3.1236140e-17],
        [-5.3157008e-17],
        [-1.3124647e-17]]], dtype=float32)
rtol = 1e-07, atol = 1e-05, err_msg = '', verbose = True

    def assert_allclose(actual, desired, rtol=1e-7, atol=0, err_msg='',
                        verbose=True):
        """Raises an AssertionError if objects are not equal up to desired tolerance.
    
        Args:
             actual(numpy.ndarray or cupy.ndarray): The actual object to check.
             desired(numpy.ndarray or cupy.ndarray): The desired, expected object.
             rtol(float): Relative tolerance.
             atol(float): Absolute tolerance.
             err_msg(str): The error message to be printed in case of failure.
             verbose(bool): If ``True``, the conflicting
                 values are appended to the error message.
    
        .. seealso:: :func:`numpy.testing.assert_allclose`
    
        """  # NOQA
>       numpy.testing.assert_allclose(
            cupy.asnumpy(actual), cupy.asnumpy(desired),
            rtol=rtol, atol=atol, err_msg=err_msg, verbose=verbose)
E       AssertionError: 
E       Not equal to tolerance rtol=1e-07, atol=1e-05
E       
E       Mismatched elements: 85 / 100 (85%)
E       Max absolute difference: 0.00084527
E       Max relative difference: 1.881553e+13
E        x: array([[[-6.238733e-04],
E               [-6.527016e-04],
E               [-5.341858e-04],...
E        y: array([[[ 2.100042e-16],
E               [-7.750515e-16],
E               [-6.617287e-17],...

cupy/testing/_array.py:24: AssertionError
----------------------------- Captured stdout call -----------------------------
dtype is <class 'numpy.float32'>
_ TestZoomOutputSize1.test_zoom_output_size1[_param_46_{grid_mode=False, mode='grid-constant', order=4, shape=(5, 5, 2), zoom=(2, 2, 0.5)}] _

self = <<cupyx_tests.scipy_tests.ndimage_tests.test_interpolation.TestZoomOutputSize1 object at 0x7fab33f491f0>  parameter: {'grid_mode': False, 'mode': 'grid-constant', 'order': 4, 'shape': (5, 5, 2), 'zoom': (2, 2, 0.5)}>
args = (), kw = {'dtype': <class 'numpy.float32'>}
dtype = <class 'numpy.float32'>

    @_wraps_partial(impl, name)
    def test_func(self, *args, **kw):
        for dtype in dtypes:
            try:
                kw[name] = numpy.dtype(dtype).type
>               impl(self, *args, **kw)

cupy/testing/_helper.py:825: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
cupy/testing/_helper.py:343: in test_func
    check_func(cupy_r, numpy_r)
cupy/testing/_helper.py:495: in check_func
    _array.assert_allclose(c, n, rtol1, atol1, err_msg, verbose)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

actual = array([[[-1.6466675e-04],
        [-3.1765160e-06],
        [-2.8256103e-04],
        [ 1.0465207e-04],
        [-5.02...       [-1.4928388e-06],
        [-5.8970027e-06],
        [-2.4932410e-06],
        [-3.5395026e-06]]], dtype=float32)
desired = array([[[-8.12850668e-17],
        [-9.62678620e-17],
        [-7.64445911e-17],
        [ 6.90388762e-17],
        [-...   [-1.31306278e-18],
        [-2.34584224e-18],
        [-1.16198641e-18],
        [-3.16820747e-19]]], dtype=float32)
rtol = 1e-07, atol = 1e-05, err_msg = '', verbose = True

    def assert_allclose(actual, desired, rtol=1e-7, atol=0, err_msg='',
                        verbose=True):
        """Raises an AssertionError if objects are not equal up to desired tolerance.
    
        Args:
             actual(numpy.ndarray or cupy.ndarray): The actual object to check.
             desired(numpy.ndarray or cupy.ndarray): The desired, expected object.
             rtol(float): Relative tolerance.
             atol(float): Absolute tolerance.
             err_msg(str): The error message to be printed in case of failure.
             verbose(bool): If ``True``, the conflicting
                 values are appended to the error message.
    
        .. seealso:: :func:`numpy.testing.assert_allclose`
    
        """  # NOQA
>       numpy.testing.assert_allclose(
            cupy.asnumpy(actual), cupy.asnumpy(desired),
            rtol=rtol, atol=atol, err_msg=err_msg, verbose=verbose)
E       AssertionError: 
E       Not equal to tolerance rtol=1e-07, atol=1e-05
E       
E       Mismatched elements: 75 / 100 (75%)
E       Max absolute difference: 0.00034115
E       Max relative difference: 2.5044335e+14
E        x: array([[[-1.646668e-04],
E               [-3.176516e-06],
E               [-2.825610e-04],...
E        y: array([[[-8.128507e-17],
E               [-9.626786e-17],
E               [-7.644459e-17],...

cupy/testing/_array.py:24: AssertionError
----------------------------- Captured stdout call -----------------------------
dtype is <class 'numpy.float32'>
_ TestZoomOutputSize1.test_zoom_output_size1[_param_47_{grid_mode=False, mode='grid-constant', order=5, shape=(5, 5, 2), zoom=(2, 2, 0.5)}] _

self = <<cupyx_tests.scipy_tests.ndimage_tests.test_interpolation.TestZoomOutputSize1 object at 0x7fab33feb310>  parameter: {'grid_mode': False, 'mode': 'grid-constant', 'order': 5, 'shape': (5, 5, 2), 'zoom': (2, 2, 0.5)}>
args = (), kw = {'dtype': <class 'numpy.float32'>}
dtype = <class 'numpy.float32'>

    @_wraps_partial(impl, name)
    def test_func(self, *args, **kw):
        for dtype in dtypes:
            try:
                kw[name] = numpy.dtype(dtype).type
>               impl(self, *args, **kw)

cupy/testing/_helper.py:825: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
cupy/testing/_helper.py:343: in test_func
    check_func(cupy_r, numpy_r)
cupy/testing/_helper.py:495: in check_func
    _array.assert_allclose(c, n, rtol1, atol1, err_msg, verbose)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

actual = array([[[ 1.46576144e-06],
        [-1.07652804e-05],
        [ 1.48250510e-05],
        [-2.88788979e-05],
        [-...   [ 3.59045725e-06],
        [ 3.90473633e-06],
        [ 2.02454498e-06],
        [ 1.08106917e-06]]], dtype=float32)
desired = array([[[-5.28892732e-17],
        [-4.68497761e-17],
        [-1.70810335e-16],
        [-1.91986781e-16],
        [-...   [-3.94138989e-18],
        [-8.65396191e-18],
        [ 1.07858407e-18],
        [-2.29544853e-18]]], dtype=float32)
rtol = 1e-07, atol = 1e-05, err_msg = '', verbose = True

    def assert_allclose(actual, desired, rtol=1e-7, atol=0, err_msg='',
                        verbose=True):
        """Raises an AssertionError if objects are not equal up to desired tolerance.
    
        Args:
             actual(numpy.ndarray or cupy.ndarray): The actual object to check.
             desired(numpy.ndarray or cupy.ndarray): The desired, expected object.
             rtol(float): Relative tolerance.
             atol(float): Absolute tolerance.
             err_msg(str): The error message to be printed in case of failure.
             verbose(bool): If ``True``, the conflicting
                 values are appended to the error message.
    
        .. seealso:: :func:`numpy.testing.assert_allclose`
    
        """  # NOQA
>       numpy.testing.assert_allclose(
            cupy.asnumpy(actual), cupy.asnumpy(desired),
            rtol=rtol, atol=atol, err_msg=err_msg, verbose=verbose)
E       AssertionError: 
E       Not equal to tolerance rtol=1e-07, atol=1e-05
E       
E       Mismatched elements: 40 / 100 (40%)
E       Max absolute difference: 0.00011814
E       Max relative difference: 9.6834375e+13
E        x: array([[[ 1.465761e-06],
E               [-1.076528e-05],
E               [ 1.482505e-05],...
E        y: array([[[-5.288927e-17],
E               [-4.684978e-17],
E               [-1.708103e-16],...

cupy/testing/_array.py:24: AssertionError
----------------------------- Captured stdout call -----------------------------
dtype is <class 'numpy.float32'>
_ TestZoomOutputSize1.test_zoom_output_size1[_param_52_{grid_mode=True, mode='constant', order=4, shape=(5, 5, 2), zoom=(2, 2, 0.5)}] _

self = <<cupyx_tests.scipy_tests.ndimage_tests.test_interpolation.TestZoomOutputSize1 object at 0x7fab33f4f340>  parameter: {'grid_mode': True, 'mode': 'constant', 'order': 4, 'shape': (5, 5, 2), 'zoom': (2, 2, 0.5)}>
args = (), kw = {'dtype': <class 'numpy.float64'>}
dtype = <class 'numpy.float64'>

    @_wraps_partial(impl, name)
    def test_func(self, *args, **kw):
        for dtype in dtypes:
            try:
                kw[name] = numpy.dtype(dtype).type
>               impl(self, *args, **kw)

cupy/testing/_helper.py:825: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
cupy/testing/_helper.py:343: in test_func
    check_func(cupy_r, numpy_r)
cupy/testing/_helper.py:495: in check_func
    _array.assert_allclose(c, n, rtol1, atol1, err_msg, verbose)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

actual = array([[[   0.        ],
        [   0.        ],
        [   0.        ],
        [   0.        ],
        [   0.    ... [   0.        ],
        [   0.        ],
        [   0.        ],
        [   0.        ],
        [   0.        ]]])
desired = array([[[ 0.00000000e+00],
        [ 0.00000000e+00],
        [ 0.00000000e+00],
        [ 0.00000000e+00],
        [ ...000e+00],
        [ 0.00000000e+00],
        [ 0.00000000e+00],
        [ 0.00000000e+00],
        [ 0.00000000e+00]]])
rtol = 1e-07, atol = 1e-05, err_msg = '', verbose = True

    def assert_allclose(actual, desired, rtol=1e-7, atol=0, err_msg='',
                        verbose=True):
        """Raises an AssertionError if objects are not equal up to desired tolerance.
    
        Args:
             actual(numpy.ndarray or cupy.ndarray): The actual object to check.
             desired(numpy.ndarray or cupy.ndarray): The desired, expected object.
             rtol(float): Relative tolerance.
             atol(float): Absolute tolerance.
             err_msg(str): The error message to be printed in case of failure.
             verbose(bool): If ``True``, the conflicting
                 values are appended to the error message.
    
        .. seealso:: :func:`numpy.testing.assert_allclose`
    
        """  # NOQA
>       numpy.testing.assert_allclose(
            cupy.asnumpy(actual), cupy.asnumpy(desired),
            rtol=rtol, atol=atol, err_msg=err_msg, verbose=verbose)
E       AssertionError: 
E       Not equal to tolerance rtol=1e-07, atol=1e-05
E       
E       Mismatched elements: 64 / 100 (64%)
E       Max absolute difference: 2336.52632552
E       Max relative difference: 629887.8879561
E        x: array([[[   0.      ],
E               [   0.      ],
E               [   0.      ],...
E        y: array([[[ 0.000000e+00],
E               [ 0.000000e+00],
E               [ 0.000000e+00],...

cupy/testing/_array.py:24: AssertionError
----------------------------- Captured stdout call -----------------------------
dtype is <class 'numpy.float64'>
_ TestZoomOutputSize1.test_zoom_output_size1[_param_53_{grid_mode=True, mode='constant', order=5, shape=(5, 5, 2), zoom=(2, 2, 0.5)}] _

self = <<cupyx_tests.scipy_tests.ndimage_tests.test_interpolation.TestZoomOutputSize1 object at 0x7fab33f6bc40>  parameter: {'grid_mode': True, 'mode': 'constant', 'order': 5, 'shape': (5, 5, 2), 'zoom': (2, 2, 0.5)}>
args = (), kw = {'dtype': <class 'numpy.float64'>}
dtype = <class 'numpy.float64'>

    @_wraps_partial(impl, name)
    def test_func(self, *args, **kw):
        for dtype in dtypes:
            try:
                kw[name] = numpy.dtype(dtype).type
>               impl(self, *args, **kw)

cupy/testing/_helper.py:825: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
cupy/testing/_helper.py:343: in test_func
    check_func(cupy_r, numpy_r)
cupy/testing/_helper.py:495: in check_func
    _array.assert_allclose(c, n, rtol1, atol1, err_msg, verbose)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

actual = array([[[ 0.00000000e+00],
        [ 0.00000000e+00],
        [ 0.00000000e+00],
        [ 0.00000000e+00],
        [ ...000e+00],
        [ 0.00000000e+00],
        [ 0.00000000e+00],
        [ 0.00000000e+00],
        [ 0.00000000e+00]]])
desired = array([[[ 0.00000000e+00],
        [ 0.00000000e+00],
        [ 0.00000000e+00],
        [ 0.00000000e+00],
        [ ...000e+00],
        [ 0.00000000e+00],
        [ 0.00000000e+00],
        [ 0.00000000e+00],
        [ 0.00000000e+00]]])
rtol = 1e-07, atol = 1e-05, err_msg = '', verbose = True

    def assert_allclose(actual, desired, rtol=1e-7, atol=0, err_msg='',
                        verbose=True):
        """Raises an AssertionError if objects are not equal up to desired tolerance.
    
        Args:
             actual(numpy.ndarray or cupy.ndarray): The actual object to check.
             desired(numpy.ndarray or cupy.ndarray): The desired, expected object.
             rtol(float): Relative tolerance.
             atol(float): Absolute tolerance.
             err_msg(str): The error message to be printed in case of failure.
             verbose(bool): If ``True``, the conflicting
                 values are appended to the error message.
    
        .. seealso:: :func:`numpy.testing.assert_allclose`
    
        """  # NOQA
>       numpy.testing.assert_allclose(
            cupy.asnumpy(actual), cupy.asnumpy(desired),
            rtol=rtol, atol=atol, err_msg=err_msg, verbose=verbose)
E       AssertionError: 
E       Not equal to tolerance rtol=1e-07, atol=1e-05
E       
E       Mismatched elements: 64 / 100 (64%)
E       Max absolute difference: 233.83963068
E       Max relative difference: 148867.79248851
E        x: array([[[ 0.000000e+00],
E               [ 0.000000e+00],
E               [ 0.000000e+00],...
E        y: array([[[ 0.000000e+00],
E               [ 0.000000e+00],
E               [ 0.000000e+00],...

cupy/testing/_array.py:24: AssertionError
----------------------------- Captured stdout call -----------------------------
dtype is <class 'numpy.float64'>
_ TestZoomOutputSize1.test_zoom_output_size1[_param_64_{grid_mode=True, mode='mirror', order=4, shape=(5, 5, 2), zoom=(2, 2, 0.5)}] _

self = <<cupyx_tests.scipy_tests.ndimage_tests.test_interpolation.TestZoomOutputSize1 object at 0x7fab33fda2b0>  parameter: {'grid_mode': True, 'mode': 'mirror', 'order': 4, 'shape': (5, 5, 2), 'zoom': (2, 2, 0.5)}>
args = (), kw = {'dtype': <class 'numpy.float64'>}
dtype = <class 'numpy.float64'>

    @_wraps_partial(impl, name)
    def test_func(self, *args, **kw):
        for dtype in dtypes:
            try:
                kw[name] = numpy.dtype(dtype).type
>               impl(self, *args, **kw)

cupy/testing/_helper.py:825: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
cupy/testing/_helper.py:343: in test_func
    check_func(cupy_r, numpy_r)
cupy/testing/_helper.py:495: in check_func
    _array.assert_allclose(c, n, rtol1, atol1, err_msg, verbose)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

actual = array([[[  48.82195577],
        [  48.82195577],
        [ 290.39318135],
        [ 337.78017528],
        [ 112.1240... [ -53.24969236],
        [ -21.88859247],
        [  44.15090669],
        [  53.29762289],
        [  53.29762289]]])
desired = array([[[ 8.54663183e-03],
        [ 8.54663183e-03],
        [ 5.30645857e-02],
        [ 6.15797757e-02],
        [ ...126e-03],
        [-5.57818230e-04],
        [ 2.89445841e-04],
        [ 8.46143247e-05],
        [ 8.46143247e-05]]])
rtol = 1e-07, atol = 1e-05, err_msg = '', verbose = True

    def assert_allclose(actual, desired, rtol=1e-7, atol=0, err_msg='',
                        verbose=True):
        """Raises an AssertionError if objects are not equal up to desired tolerance.
    
        Args:
             actual(numpy.ndarray or cupy.ndarray): The actual object to check.
             desired(numpy.ndarray or cupy.ndarray): The desired, expected object.
             rtol(float): Relative tolerance.
             atol(float): Absolute tolerance.
             err_msg(str): The error message to be printed in case of failure.
             verbose(bool): If ``True``, the conflicting
                 values are appended to the error message.
    
        .. seealso:: :func:`numpy.testing.assert_allclose`
    
        """  # NOQA
>       numpy.testing.assert_allclose(
            cupy.asnumpy(actual), cupy.asnumpy(desired),
            rtol=rtol, atol=atol, err_msg=err_msg, verbose=verbose)
E       AssertionError: 
E       Not equal to tolerance rtol=1e-07, atol=1e-05
E       
E       Mismatched elements: 100 / 100 (100%)
E       Max absolute difference: 2336.52632552
E       Max relative difference: 629887.88795612
E        x: array([[[  48.821956],
E               [  48.821956],
E               [ 290.393181],...
E        y: array([[[ 8.546632e-03],
E               [ 8.546632e-03],
E               [ 5.306459e-02],...

cupy/testing/_array.py:24: AssertionError
----------------------------- Captured stdout call -----------------------------
dtype is <class 'numpy.float64'>
_ TestZoomOutputSize1.test_zoom_output_size1[_param_65_{grid_mode=True, mode='mirror', order=5, shape=(5, 5, 2), zoom=(2, 2, 0.5)}] _

self = <<cupyx_tests.scipy_tests.ndimage_tests.test_interpolation.TestZoomOutputSize1 object at 0x7fab338601c0>  parameter: {'grid_mode': True, 'mode': 'mirror', 'order': 5, 'shape': (5, 5, 2), 'zoom': (2, 2, 0.5)}>
args = (), kw = {'dtype': <class 'numpy.float64'>}
dtype = <class 'numpy.float64'>

    @_wraps_partial(impl, name)
    def test_func(self, *args, **kw):
        for dtype in dtypes:
            try:
                kw[name] = numpy.dtype(dtype).type
>               impl(self, *args, **kw)

cupy/testing/_helper.py:825: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
cupy/testing/_helper.py:343: in test_func
    check_func(cupy_r, numpy_r)
cupy/testing/_helper.py:495: in check_func
    _array.assert_allclose(c, n, rtol1, atol1, err_msg, verbose)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

actual = array([[[ 4.71685805e+00],
        [ 4.71685805e+00],
        [ 2.76221015e+01],
        [ 3.32433453e+01],
        [ ...958e+00],
        [-1.62349834e+00],
        [ 1.50933488e+01],
        [ 1.97919669e+01],
        [ 1.97919669e+01]]])
desired = array([[[ 8.60075856e-03],
        [ 8.60075856e-03],
        [ 5.25533883e-02],
        [ 6.23449044e-02],
        [ ...600e-03],
        [-8.00397905e-04],
        [ 4.16976616e-04],
        [ 1.32949066e-04],
        [ 1.32949066e-04]]])
rtol = 1e-07, atol = 1e-05, err_msg = '', verbose = True

    def assert_allclose(actual, desired, rtol=1e-7, atol=0, err_msg='',
                        verbose=True):
        """Raises an AssertionError if objects are not equal up to desired tolerance.
    
        Args:
             actual(numpy.ndarray or cupy.ndarray): The actual object to check.
             desired(numpy.ndarray or cupy.ndarray): The desired, expected object.
             rtol(float): Relative tolerance.
             atol(float): Absolute tolerance.
             err_msg(str): The error message to be printed in case of failure.
             verbose(bool): If ``True``, the conflicting
                 values are appended to the error message.
    
        .. seealso:: :func:`numpy.testing.assert_allclose`
    
        """  # NOQA
>       numpy.testing.assert_allclose(
            cupy.asnumpy(actual), cupy.asnumpy(desired),
            rtol=rtol, atol=atol, err_msg=err_msg, verbose=verbose)
E       AssertionError: 
E       Not equal to tolerance rtol=1e-07, atol=1e-05
E       
E       Mismatched elements: 100 / 100 (100%)
E       Max absolute difference: 233.83963068
E       Max relative difference: 148867.79248854
E        x: array([[[ 4.716858e+00],
E               [ 4.716858e+00],
E               [ 2.762210e+01],...
E        y: array([[[ 8.600759e-03],
E               [ 8.600759e-03],
E               [ 5.255339e-02],...

cupy/testing/_array.py:24: AssertionError
----------------------------- Captured stdout call -----------------------------
dtype is <class 'numpy.float64'>
_ TestZoomOutputSize1.test_zoom_output_size1[_param_70_{grid_mode=True, mode='wrap', order=4, shape=(5, 5, 2), zoom=(2, 2, 0.5)}] _

self = <<cupyx_tests.scipy_tests.ndimage_tests.test_interpolation.TestZoomOutputSize1 object at 0x7fab33cea670>  parameter: {'grid_mode': True, 'mode': 'wrap', 'order': 4, 'shape': (5, 5, 2), 'zoom': (2, 2, 0.5)}>
args = (), kw = {'dtype': <class 'numpy.float64'>}
dtype = <class 'numpy.float64'>

    @_wraps_partial(impl, name)
    def test_func(self, *args, **kw):
        for dtype in dtypes:
            try:
                kw[name] = numpy.dtype(dtype).type
>               impl(self, *args, **kw)

cupy/testing/_helper.py:825: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
cupy/testing/_helper.py:343: in test_func
    check_func(cupy_r, numpy_r)
cupy/testing/_helper.py:495: in check_func
    _array.assert_allclose(c, n, rtol1, atol1, err_msg, verbose)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

actual = array([[[  53.29762289],
        [  51.0107262 ],
        [ 303.41199632],
        [ 352.92342892],
        [ 117.1507... [ -50.96485228],
        [ -20.9493958 ],
        [  42.25647769],
        [  51.0107262 ],
        [  48.82195577]]])
desired = array([[[ 8.46143247e-05],
        [ 8.50392545e-04],
        [ 5.27994291e-03],
        [ 6.12720698e-03],
        [ ...636e-02],
        [-5.60619571e-03],
        [ 2.90899427e-03],
        [ 8.50392545e-04],
        [ 8.54663183e-03]]])
rtol = 1e-07, atol = 1e-05, err_msg = '', verbose = True

    def assert_allclose(actual, desired, rtol=1e-7, atol=0, err_msg='',
                        verbose=True):
        """Raises an AssertionError if objects are not equal up to desired tolerance.
    
        Args:
             actual(numpy.ndarray or cupy.ndarray): The actual object to check.
             desired(numpy.ndarray or cupy.ndarray): The desired, expected object.
             rtol(float): Relative tolerance.
             atol(float): Absolute tolerance.
             err_msg(str): The error message to be printed in case of failure.
             verbose(bool): If ``True``, the conflicting
                 values are appended to the error message.
    
        .. seealso:: :func:`numpy.testing.assert_allclose`
    
        """  # NOQA
>       numpy.testing.assert_allclose(
            cupy.asnumpy(actual), cupy.asnumpy(desired),
            rtol=rtol, atol=atol, err_msg=err_msg, verbose=verbose)
E       AssertionError: 
E       Not equal to tolerance rtol=1e-07, atol=1e-05
E       
E       Mismatched elements: 100 / 100 (100%)
E       Max absolute difference: 2336.52632552
E       Max relative difference: 629887.8879561
E        x: array([[[  53.297623],
E               [  51.010726],
E               [ 303.411996],...
E        y: array([[[ 8.461432e-05],
E               [ 8.503925e-04],
E               [ 5.279943e-03],...

cupy/testing/_array.py:24: AssertionError
----------------------------- Captured stdout call -----------------------------
dtype is <class 'numpy.float64'>
_ TestZoomOutputSize1.test_zoom_output_size1[_param_71_{grid_mode=True, mode='wrap', order=5, shape=(5, 5, 2), zoom=(2, 2, 0.5)}] _

self = <<cupyx_tests.scipy_tests.ndimage_tests.test_interpolation.TestZoomOutputSize1 object at 0x7fab33dd0b50>  parameter: {'grid_mode': True, 'mode': 'wrap', 'order': 5, 'shape': (5, 5, 2), 'zoom': (2, 2, 0.5)}>
args = (), kw = {'dtype': <class 'numpy.float64'>}
dtype = <class 'numpy.float64'>

    @_wraps_partial(impl, name)
    def test_func(self, *args, **kw):
        for dtype in dtypes:
            try:
                kw[name] = numpy.dtype(dtype).type
>               impl(self, *args, **kw)

cupy/testing/_helper.py:825: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
cupy/testing/_helper.py:343: in test_func
    check_func(cupy_r, numpy_r)
cupy/testing/_helper.py:495: in check_func
    _array.assert_allclose(c, n, rtol1, atol1, err_msg, verbose)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

actual = array([[[ 1.97919669e+01],
        [ 9.66208561e+00],
        [ 5.65815436e+01],
        [ 6.80961870e+01],
        [ ...577e+00],
        [-7.92562963e-01],
        [ 7.36830399e+00],
        [ 9.66208561e+00],
        [ 4.71685805e+00]]])
desired = array([[[ 1.32949066e-04],
        [ 1.06932821e-03],
        [ 6.53393769e-03],
        [ 7.75131221e-03],
        [ ...718e-02],
        [-6.43771396e-03],
        [ 3.35380211e-03],
        [ 1.06932821e-03],
        [ 8.60075856e-03]]])
rtol = 1e-07, atol = 1e-05, err_msg = '', verbose = True

    def assert_allclose(actual, desired, rtol=1e-7, atol=0, err_msg='',
                        verbose=True):
        """Raises an AssertionError if objects are not equal up to desired tolerance.
    
        Args:
             actual(numpy.ndarray or cupy.ndarray): The actual object to check.
             desired(numpy.ndarray or cupy.ndarray): The desired, expected object.
             rtol(float): Relative tolerance.
             atol(float): Absolute tolerance.
             err_msg(str): The error message to be printed in case of failure.
             verbose(bool): If ``True``, the conflicting
                 values are appended to the error message.
    
        .. seealso:: :func:`numpy.testing.assert_allclose`
    
        """  # NOQA
>       numpy.testing.assert_allclose(
            cupy.asnumpy(actual), cupy.asnumpy(desired),
            rtol=rtol, atol=atol, err_msg=err_msg, verbose=verbose)
E       AssertionError: 
E       Not equal to tolerance rtol=1e-07, atol=1e-05
E       
E       Mismatched elements: 100 / 100 (100%)
E       Max absolute difference: 233.83963068
E       Max relative difference: 148867.79248851
E        x: array([[[ 1.979197e+01],
E               [ 9.662086e+00],
E               [ 5.658154e+01],...
E        y: array([[[ 1.329491e-04],
E               [ 1.069328e-03],
E               [ 6.533938e-03],...

cupy/testing/_array.py:24: AssertionError
----------------------------- Captured stdout call -----------------------------
dtype is <class 'numpy.float64'>
_ TestZoomOutputSize1.test_zoom_output_size1[_param_94_{grid_mode=True, mode='grid-constant', order=4, shape=(5, 5, 2), zoom=(2, 2, 0.5)}] _

self = <<cupyx_tests.scipy_tests.ndimage_tests.test_interpolation.TestZoomOutputSize1 object at 0x7fab33c0e520>  parameter: {'grid_mode': True, 'mode': 'grid-constant', 'order': 4, 'shape': (5, 5, 2), 'zoom': (2, 2, 0.5)}>
args = (), kw = {'dtype': <class 'numpy.float64'>}
dtype = <class 'numpy.float64'>

    @_wraps_partial(impl, name)
    def test_func(self, *args, **kw):
        for dtype in dtypes:
            try:
                kw[name] = numpy.dtype(dtype).type
>               impl(self, *args, **kw)

cupy/testing/_helper.py:825: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
cupy/testing/_helper.py:343: in test_func
    check_func(cupy_r, numpy_r)
cupy/testing/_helper.py:495: in check_func
    _array.assert_allclose(c, n, rtol1, atol1, err_msg, verbose)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

actual = array([[[ 5.63055219e+01],
        [-1.22528405e+02],
        [-3.83476709e+02],
        [-3.83476709e+02],
        [-...021e+00],
        [ 4.40535983e+00],
        [-2.69124172e+00],
        [-1.59183812e+00],
        [ 9.72456581e-01]]])
desired = array([[[ 1.27949283e-02],
        [-2.43606830e-02],
        [-7.91692940e-02],
        [-7.91692940e-02],
        [-...333e-03],
        [ 9.13158865e-04],
        [-5.54269262e-04],
        [-3.27391850e-04],
        [ 1.99955080e-04]]])
rtol = 1e-07, atol = 1e-05, err_msg = '', verbose = True

    def assert_allclose(actual, desired, rtol=1e-7, atol=0, err_msg='',
                        verbose=True):
        """Raises an AssertionError if objects are not equal up to desired tolerance.
    
        Args:
             actual(numpy.ndarray or cupy.ndarray): The actual object to check.
             desired(numpy.ndarray or cupy.ndarray): The desired, expected object.
             rtol(float): Relative tolerance.
             atol(float): Absolute tolerance.
             err_msg(str): The error message to be printed in case of failure.
             verbose(bool): If ``True``, the conflicting
                 values are appended to the error message.
    
        .. seealso:: :func:`numpy.testing.assert_allclose`
    
        """  # NOQA
>       numpy.testing.assert_allclose(
            cupy.asnumpy(actual), cupy.asnumpy(desired),
            rtol=rtol, atol=atol, err_msg=err_msg, verbose=verbose)
E       AssertionError: 
E       Not equal to tolerance rtol=1e-07, atol=1e-05
E       
E       Mismatched elements: 100 / 100 (100%)
E       Max absolute difference: 2611.23242921
E       Max relative difference: 5747.85704324
E        x: array([[[ 5.630552e+01],
E               [-1.225284e+02],
E               [-3.834767e+02],...
E        y: array([[[ 1.279493e-02],
E               [-2.436068e-02],
E               [-7.916929e-02],...

cupy/testing/_array.py:24: AssertionError
----------------------------- Captured stdout call -----------------------------
dtype is <class 'numpy.float64'>
_ TestZoomOutputSize1.test_zoom_output_size1[_param_95_{grid_mode=True, mode='grid-constant', order=5, shape=(5, 5, 2), zoom=(2, 2, 0.5)}] _

self = <<cupyx_tests.scipy_tests.ndimage_tests.test_interpolation.TestZoomOutputSize1 object at 0x7fab33fda370>  parameter: {'grid_mode': True, 'mode': 'grid-constant', 'order': 5, 'shape': (5, 5, 2), 'zoom': (2, 2, 0.5)}>
args = (), kw = {'dtype': <class 'numpy.float64'>}
dtype = <class 'numpy.float64'>

    @_wraps_partial(impl, name)
    def test_func(self, *args, **kw):
        for dtype in dtypes:
            try:
                kw[name] = numpy.dtype(dtype).type
>               impl(self, *args, **kw)

cupy/testing/_helper.py:825: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
cupy/testing/_helper.py:343: in test_func
    check_func(cupy_r, numpy_r)
cupy/testing/_helper.py:495: in check_func
    _array.assert_allclose(c, n, rtol1, atol1, err_msg, verbose)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

actual = array([[[ 4.16965077e+00],
        [-1.18699209e+01],
        [-3.36177788e+01],
        [-3.36177788e+01],
        [-...671e-01],
        [ 6.07624141e-01],
        [-3.96545295e-01],
        [-2.61764771e-01],
        [ 1.70742628e-01]]])
desired = array([[[ 1.44354197e-02],
        [-2.67893098e-02],
        [-8.45564959e-02],
        [-8.45564959e-02],
        [-...699e-03],
        [ 1.49724992e-03],
        [-9.55056276e-04],
        [-6.25982935e-04],
        [ 4.07383783e-04]]])
rtol = 1e-07, atol = 1e-05, err_msg = '', verbose = True

    def assert_allclose(actual, desired, rtol=1e-7, atol=0, err_msg='',
                        verbose=True):
        """Raises an AssertionError if objects are not equal up to desired tolerance.
    
        Args:
             actual(numpy.ndarray or cupy.ndarray): The actual object to check.
             desired(numpy.ndarray or cupy.ndarray): The desired, expected object.
             rtol(float): Relative tolerance.
             atol(float): Absolute tolerance.
             err_msg(str): The error message to be printed in case of failure.
             verbose(bool): If ``True``, the conflicting
                 values are appended to the error message.
    
        .. seealso:: :func:`numpy.testing.assert_allclose`
    
        """  # NOQA
>       numpy.testing.assert_allclose(
            cupy.asnumpy(actual), cupy.asnumpy(desired),
            rtol=rtol, atol=atol, err_msg=err_msg, verbose=verbose)
E       AssertionError: 
E       Not equal to tolerance rtol=1e-07, atol=1e-05
E       
E       Mismatched elements: 100 / 100 (100%)
E       Max absolute difference: 270.54779997
E       Max relative difference: 678.67662434
E        x: array([[[ 4.169651e+00],
E               [-1.186992e+01],
E               [-3.361778e+01],...
E        y: array([[[ 1.443542e-02],
E               [-2.678931e-02],
E               [-8.455650e-02],...

cupy/testing/_array.py:24: AssertionError
----------------------------- Captured stdout call -----------------------------
dtype is <class 'numpy.float64'>
_ TestFFTConvolve_param_44_{mode='valid', size1=(3, 4, 10), size2=3}.test_convolve_fft _
cupy/testing/_helper.py:825: in test_func
    impl(self, *args, **kw)
cupy/testing/_helper.py:343: in test_func
    check_func(cupy_r, numpy_r)
cupy/testing/_helper.py:495: in check_func
    _array.assert_allclose(c, n, rtol1, atol1, err_msg, verbose)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

actual = array([[[  90,   51,    0,  -16,  -43,  -26,  -60,  -14],
        [-119,   39,  -26,  -10,   32,  -44,  -18,   11]]], dtype=int8)
desired = array([[[-120,  -49,   32,   -7,  -73,   64,   74, -107],
        [ -58,  -13, -125,   43,  -48,   69,  -99,  -58]]], dtype=int8)
rtol = 1e-08, atol = 1e-08, err_msg = '', verbose = True

    def assert_allclose(actual, desired, rtol=1e-7, atol=0, err_msg='',
                        verbose=True):
        """Raises an AssertionError if objects are not equal up to desired tolerance.
    
        Args:
             actual(numpy.ndarray or cupy.ndarray): The actual object to check.
             desired(numpy.ndarray or cupy.ndarray): The desired, expected object.
             rtol(float): Relative tolerance.
             atol(float): Absolute tolerance.
             err_msg(str): The error message to be printed in case of failure.
             verbose(bool): If ``True``, the conflicting
                 values are appended to the error message.
    
        .. seealso:: :func:`numpy.testing.assert_allclose`
    
        """  # NOQA
>       numpy.testing.assert_allclose(
            cupy.asnumpy(actual), cupy.asnumpy(desired),
            rtol=rtol, atol=atol, err_msg=err_msg, verbose=verbose)
E       AssertionError: 
E       Not equal to tolerance rtol=1e-08, atol=1e-08
E       
E       Mismatched elements: 16 / 16 (100%)
E       Max absolute difference: 122
E       Max relative difference: 4.
E        x: array([[[  90,   51,    0,  -16,  -43,  -26,  -60,  -14],
E               [-119,   39,  -26,  -10,   32,  -44,  -18,   11]]], dtype=int8)
E        y: array([[[-120,  -49,   32,   -7,  -73,   64,   74, -107],
E               [ -58,  -13, -125,   43,  -48,   69,  -99,  -58]]], dtype=int8)

cupy/testing/_array.py:24: AssertionError
----------------------------- Captured stdout call -----------------------------
dtype is <class 'numpy.int8'>
_ TestFFTConvolve_param_44_{mode='valid', size1=(3, 4, 10), size2=3}.test_correlate_fft _
cupy/testing/_helper.py:825: in test_func
    impl(self, *args, **kw)
cupy/testing/_helper.py:343: in test_func
    check_func(cupy_r, numpy_r)
cupy/testing/_helper.py:495: in check_func
    _array.assert_allclose(c, n, rtol1, atol1, err_msg, verbose)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

actual = array([[[118.4968113 ,  56.36191499,   1.11057584,  80.2028948 ,
          14.333809  , -60.84183561, -40.39587059,  -...70289912,   2.43211651,   4.90135318, -23.06795916,
         -18.95214393, -63.92480688, -31.8982594 ,   6.95259898]]])
desired = array([[[769.3882749 , 870.2517745 , 690.45745826, 663.33230526,
         616.83114243, 616.80803284, 813.82732923, 74...88102391, 916.32163619, 682.1934435 , 597.21565739,
         541.73100685, 733.96042109, 800.44986839, 863.62552053]]])
rtol = 1e-08, atol = 1e-08, err_msg = '', verbose = True

    def assert_allclose(actual, desired, rtol=1e-7, atol=0, err_msg='',
                        verbose=True):
        """Raises an AssertionError if objects are not equal up to desired tolerance.
    
        Args:
             actual(numpy.ndarray or cupy.ndarray): The actual object to check.
             desired(numpy.ndarray or cupy.ndarray): The desired, expected object.
             rtol(float): Relative tolerance.
             atol(float): Absolute tolerance.
             err_msg(str): The error message to be printed in case of failure.
             verbose(bool): If ``True``, the conflicting
                 values are appended to the error message.
    
        .. seealso:: :func:`numpy.testing.assert_allclose`
    
        """  # NOQA
>       numpy.testing.assert_allclose(
            cupy.asnumpy(actual), cupy.asnumpy(desired),
            rtol=rtol, atol=atol, err_msg=err_msg, verbose=verbose)
E       AssertionError: 
E       Not equal to tolerance rtol=1e-08, atol=1e-08
E       
E       Mismatched elements: 16 / 16 (100%)
E       Max absolute difference: 913.88951968
E       Max relative difference: 1.09863982
E        x: array([[[118.496811,  56.361915,   1.110576,  80.202895,  14.333809,
E                -60.841836, -40.395871,  -1.660346],
E               [ 58.702899,   2.432117,   4.901353, -23.067959, -18.952144,
E                -63.924807, -31.898259,   6.952599]]])
E        y: array([[[769.388275, 870.251774, 690.457458, 663.332305, 616.831142,
E                616.808033, 813.827329, 745.607402],
E               [869.881024, 916.321636, 682.193443, 597.215657, 541.731007,
E                733.960421, 800.449868, 863.625521]]])

cupy/testing/_array.py:24: AssertionError
----------------------------- Captured stdout call -----------------------------
dtype is <class 'numpy.float64'>
_ TestFFTConvolve_param_44_{mode='valid', size1=(3, 4, 10), size2=3}.test_fftconvolve _
cupy/testing/_helper.py:825: in test_func
    impl(self, *args, **kw)
cupy/testing/_helper.py:343: in test_func
    check_func(cupy_r, numpy_r)
cupy/testing/_helper.py:495: in check_func
    _array.assert_allclose(c, n, rtol1, atol1, err_msg, verbose)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

actual = array([[[114.56263823,  64.62474115,   6.02170598,  -9.57051679,
         -46.56011624, -34.55112548, -75.45544228, -1...19935403,  46.75385614, -25.92309434, -11.10290943,
          36.7895061 , -48.66523332, -21.09281824,  12.41247906]]])
desired = array([[[800.51063884, 862.97485863, 683.19938084, 644.7455668 ,
         573.72374126, 714.88524965, 728.84981796, 80...74148182, 920.51448428, 785.24073245, 688.98377411,
         587.26448895, 719.43755651, 815.77499972, 851.23709194]]])
rtol = 1e-08, atol = 1e-08, err_msg = '', verbose = True

    def assert_allclose(actual, desired, rtol=1e-7, atol=0, err_msg='',
                        verbose=True):
        """Raises an AssertionError if objects are not equal up to desired tolerance.
    
        Args:
             actual(numpy.ndarray or cupy.ndarray): The actual object to check.
             desired(numpy.ndarray or cupy.ndarray): The desired, expected object.
             rtol(float): Relative tolerance.
             atol(float): Absolute tolerance.
             err_msg(str): The error message to be printed in case of failure.
             verbose(bool): If ``True``, the conflicting
                 values are appended to the error message.
    
        .. seealso:: :func:`numpy.testing.assert_allclose`
    
        """  # NOQA
>       numpy.testing.assert_allclose(
            cupy.asnumpy(actual), cupy.asnumpy(desired),
            rtol=rtol, atol=atol, err_msg=err_msg, verbose=verbose)
E       AssertionError: 
E       Not equal to tolerance rtol=1e-08, atol=1e-08
E       
E       Mismatched elements: 16 / 16 (100%)
E       Max absolute difference: 873.76062814
E       Max relative difference: 1.10352674
E        x: array([[[114.562638,  64.624741,   6.021706,  -9.570517, -46.560116,
E                -34.551125, -75.455442, -13.291055],
E               [158.199354,  46.753856, -25.923094, -11.102909,  36.789506,
E                -48.665233, -21.092818,  12.412479]]])
E        y: array([[[800.510639, 862.974859, 683.199381, 644.745567, 573.723741,
E                714.88525 , 728.849818, 808.565173],
E               [879.741482, 920.514484, 785.240732, 688.983774, 587.264489,
E                719.437557, 815.775   , 851.237092]]])

cupy/testing/_array.py:24: AssertionError
----------------------------- Captured stdout call -----------------------------
dtype is <class 'numpy.float64'>
____________________ TestCustomStruct.test_builtin_vectors _____________________

self = <example_tests.test_custom_struct.TestCustomStruct testMethod=test_builtin_vectors>

    def test_builtin_vectors(self):
>       output = example_test.run_example('custom_struct/builtin_vectors.py')

tests/example_tests/test_custom_struct.py:10: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
tests/example_tests/example_test.py:12: in run_example
    return subprocess.check_output(
/home/kmaeh/.pyenv/versions/3.8.7/lib/python3.8/subprocess.py:411: in check_output
    return run(*popenargs, stdout=PIPE, timeout=timeout, check=True,
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

input = None, capture_output = False, timeout = None, check = True
popenargs = (('/home/kmaeh/.pyenv/versions/rocm-ci/bin/python', '/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.hXnTrEAC7u/cupy/tests/example_tests/../../examples/custom_struct/builtin_vectors.py'),)
kwargs = {'stderr': -2, 'stdout': -1}
process = <subprocess.Popen object at 0x7fab20b065b0>
stdout = b'Traceback (most recent call last):\n  File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.hXnTrEAC7u/cupy/te...e. Here we allow only arrays of size one so that users do not\nTypeError: Unsupported type <class \'numpy.ndarray\'>\n'
stderr = None, retcode = 1

    def run(*popenargs,
            input=None, capture_output=False, timeout=None, check=False, **kwargs):
        """Run command with arguments and return a CompletedProcess instance.
    
        The returned instance will have attributes args, returncode, stdout and
        stderr. By default, stdout and stderr are not captured, and those attributes
        will be None. Pass stdout=PIPE and/or stderr=PIPE in order to capture them.
    
        If check is True and the exit code was non-zero, it raises a
        CalledProcessError. The CalledProcessError object will have the return code
        in the returncode attribute, and output & stderr attributes if those streams
        were captured.
    
        If timeout is given, and the process takes too long, a TimeoutExpired
        exception will be raised.
    
        There is an optional argument "input", allowing you to
        pass bytes or a string to the subprocess's stdin.  If you use this argument
        you may not also use the Popen constructor's "stdin" argument, as
        it will be used internally.
    
        By default, all communication is in bytes, and therefore any "input" should
        be bytes, and the stdout and stderr will be bytes. If in text mode, any
        "input" should be a string, and stdout and stderr will be strings decoded
        according to locale encoding, or by "encoding" if set. Text mode is
        triggered by setting any of text, encoding, errors or universal_newlines.
    
        The other arguments are the same as for the Popen constructor.
        """
        if input is not None:
            if kwargs.get('stdin') is not None:
                raise ValueError('stdin and input arguments may not both be used.')
            kwargs['stdin'] = PIPE
    
        if capture_output:
            if kwargs.get('stdout') is not None or kwargs.get('stderr') is not None:
                raise ValueError('stdout and stderr arguments may not be used '
                                 'with capture_output.')
            kwargs['stdout'] = PIPE
            kwargs['stderr'] = PIPE
    
        with Popen(*popenargs, **kwargs) as process:
            try:
                stdout, stderr = process.communicate(input, timeout=timeout)
            except TimeoutExpired as exc:
                process.kill()
                if _mswindows:
                    # Windows accumulates the output in a single blocking
                    # read() call run on child threads, with the timeout
                    # being done in a join() on those threads.  communicate()
                    # _after_ kill() is required to collect that and add it
                    # to the exception.
                    exc.stdout, exc.stderr = process.communicate()
                else:
                    # POSIX _communicate already populated the output so
                    # far into the TimeoutExpired exception.
                    process.wait()
                raise
            except:  # Including KeyboardInterrupt, communicate handled that.
                process.kill()
                # We don't call process.wait() as .__exit__ does that for us.
                raise
            retcode = process.poll()
            if check and retcode:
>               raise CalledProcessError(retcode, process.args,
                                         output=stdout, stderr=stderr)
E               subprocess.CalledProcessError: Command '('/home/kmaeh/.pyenv/versions/rocm-ci/bin/python', '/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.hXnTrEAC7u/cupy/tests/example_tests/../../examples/custom_struct/builtin_vectors.py')' returned non-zero exit status 1.

/home/kmaeh/.pyenv/versions/3.8.7/lib/python3.8/subprocess.py:512: CalledProcessError
----------------------------- Captured stdout call -----------------------------
Original error message:
Traceback (most recent call last):
  File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.hXnTrEAC7u/cupy/tests/example_tests/../../examples/custom_struct/builtin_vectors.py", line 48, in <module>
    sys.exit(main())
  File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.hXnTrEAC7u/cupy/tests/example_tests/../../examples/custom_struct/builtin_vectors.py", line 40, in main
    kernel((1,), (N,), args)
  File "cupy/_core/raw.pyx", line 89, in cupy._core.raw.RawKernel.__call__
    self.kernel(
  File "cupy/cuda/function.pyx", line 201, in cupy.cuda.function.Function.__call__
    format(grid0, grid1, grid2, max_grid_size))
  File "cupy/cuda/function.pyx", line 155, in cupy.cuda.function._launch
    if itemsize == 8:
  File "cupy/cuda/function.pyx", line 123, in cupy.cuda.function._pointer
    # value. Here we allow only arrays of size one so that users do not
TypeError: Unsupported type <class 'numpy.ndarray'>

_____________________ TestCustomStruct.test_complex_struct _____________________

self = <example_tests.test_custom_struct.TestCustomStruct testMethod=test_complex_struct>

    def test_complex_struct(self):
>       output = example_test.run_example('custom_struct/complex_struct.py')

tests/example_tests/test_custom_struct.py:25: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
tests/example_tests/example_test.py:12: in run_example
    return subprocess.check_output(
/home/kmaeh/.pyenv/versions/3.8.7/lib/python3.8/subprocess.py:411: in check_output
    return run(*popenargs, stdout=PIPE, timeout=timeout, check=True,
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

input = None, capture_output = False, timeout = None, check = True
popenargs = (('/home/kmaeh/.pyenv/versions/rocm-ci/bin/python', '/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.hXnTrEAC7u/cupy/tests/example_tests/../../examples/custom_struct/complex_struct.py'),)
kwargs = {'stderr': -2, 'stdout': -1}
process = <subprocess.Popen object at 0x7faba6342550>
stdout = b'Overall structure itemsize: 80 bytes\nStructure members itemsize: [16  1 16  2 24]\nStructure members offsets: [ 0 1...e. Here we allow only arrays of size one so that users do not\nTypeError: Unsupported type <class \'numpy.ndarray\'>\n'
stderr = None, retcode = 1

    def run(*popenargs,
            input=None, capture_output=False, timeout=None, check=False, **kwargs):
        """Run command with arguments and return a CompletedProcess instance.
    
        The returned instance will have attributes args, returncode, stdout and
        stderr. By default, stdout and stderr are not captured, and those attributes
        will be None. Pass stdout=PIPE and/or stderr=PIPE in order to capture them.
    
        If check is True and the exit code was non-zero, it raises a
        CalledProcessError. The CalledProcessError object will have the return code
        in the returncode attribute, and output & stderr attributes if those streams
        were captured.
    
        If timeout is given, and the process takes too long, a TimeoutExpired
        exception will be raised.
    
        There is an optional argument "input", allowing you to
        pass bytes or a string to the subprocess's stdin.  If you use this argument
        you may not also use the Popen constructor's "stdin" argument, as
        it will be used internally.
    
        By default, all communication is in bytes, and therefore any "input" should
        be bytes, and the stdout and stderr will be bytes. If in text mode, any
        "input" should be a string, and stdout and stderr will be strings decoded
        according to locale encoding, or by "encoding" if set. Text mode is
        triggered by setting any of text, encoding, errors or universal_newlines.
    
        The other arguments are the same as for the Popen constructor.
        """
        if input is not None:
            if kwargs.get('stdin') is not None:
                raise ValueError('stdin and input arguments may not both be used.')
            kwargs['stdin'] = PIPE
    
        if capture_output:
            if kwargs.get('stdout') is not None or kwargs.get('stderr') is not None:
                raise ValueError('stdout and stderr arguments may not be used '
                                 'with capture_output.')
            kwargs['stdout'] = PIPE
            kwargs['stderr'] = PIPE
    
        with Popen(*popenargs, **kwargs) as process:
            try:
                stdout, stderr = process.communicate(input, timeout=timeout)
            except TimeoutExpired as exc:
                process.kill()
                if _mswindows:
                    # Windows accumulates the output in a single blocking
                    # read() call run on child threads, with the timeout
                    # being done in a join() on those threads.  communicate()
                    # _after_ kill() is required to collect that and add it
                    # to the exception.
                    exc.stdout, exc.stderr = process.communicate()
                else:
                    # POSIX _communicate already populated the output so
                    # far into the TimeoutExpired exception.
                    process.wait()
                raise
            except:  # Including KeyboardInterrupt, communicate handled that.
                process.kill()
                # We don't call process.wait() as .__exit__ does that for us.
                raise
            retcode = process.poll()
            if check and retcode:
>               raise CalledProcessError(retcode, process.args,
                                         output=stdout, stderr=stderr)
E               subprocess.CalledProcessError: Command '('/home/kmaeh/.pyenv/versions/rocm-ci/bin/python', '/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.hXnTrEAC7u/cupy/tests/example_tests/../../examples/custom_struct/complex_struct.py')' returned non-zero exit status 1.

/home/kmaeh/.pyenv/versions/3.8.7/lib/python3.8/subprocess.py:512: CalledProcessError
----------------------------- Captured stdout call -----------------------------
Original error message:
Overall structure itemsize: 80 bytes
Structure members itemsize: [16  1 16  2 24]
Structure members offsets: [ 0 16 24 40 48]
Complex structure value:
  [((0, 1, 2, 3), (4,), (5., 6.), (7,), (8, 9, 10))]
Traceback (most recent call last):
  File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.hXnTrEAC7u/cupy/tests/example_tests/../../examples/custom_struct/complex_struct.py", line 132, in <module>
    sys.exit(main())
  File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.hXnTrEAC7u/cupy/tests/example_tests/../../examples/custom_struct/complex_struct.py", line 122, in main
    kernel((1,), (N,), (s, out))
  File "cupy/_core/raw.pyx", line 89, in cupy._core.raw.RawKernel.__call__
    self.kernel(
  File "cupy/cuda/function.pyx", line 201, in cupy.cuda.function.Function.__call__
    format(grid0, grid1, grid2, max_grid_size))
  File "cupy/cuda/function.pyx", line 155, in cupy.cuda.function._launch
    if itemsize == 8:
  File "cupy/cuda/function.pyx", line 123, in cupy.cuda.function._pointer
    # value. Here we allow only arrays of size one so that users do not
TypeError: Unsupported type <class 'numpy.ndarray'>

_____________________ TestCustomStruct.test_packed_matrix ______________________

self = <example_tests.test_custom_struct.TestCustomStruct testMethod=test_packed_matrix>

    def test_packed_matrix(self):
>       output = example_test.run_example('custom_struct/packed_matrix.py')

tests/example_tests/test_custom_struct.py:17: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
tests/example_tests/example_test.py:12: in run_example
    return subprocess.check_output(
/home/kmaeh/.pyenv/versions/3.8.7/lib/python3.8/subprocess.py:411: in check_output
    return run(*popenargs, stdout=PIPE, timeout=timeout, check=True,
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

input = None, capture_output = False, timeout = None, check = True
popenargs = (('/home/kmaeh/.pyenv/versions/rocm-ci/bin/python', '/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.hXnTrEAC7u/cupy/tests/example_tests/../../examples/custom_struct/packed_matrix.py'),)
kwargs = {'stderr': -2, 'stdout': -1}
process = <subprocess.Popen object at 0x7fab20b06d00>
stdout = b'Traceback (most recent call last):\n  File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.hXnTrEAC7u/cupy/te...e. Here we allow only arrays of size one so that users do not\nTypeError: Unsupported type <class \'numpy.ndarray\'>\n'
stderr = None, retcode = 1

    def run(*popenargs,
            input=None, capture_output=False, timeout=None, check=False, **kwargs):
        """Run command with arguments and return a CompletedProcess instance.
    
        The returned instance will have attributes args, returncode, stdout and
        stderr. By default, stdout and stderr are not captured, and those attributes
        will be None. Pass stdout=PIPE and/or stderr=PIPE in order to capture them.
    
        If check is True and the exit code was non-zero, it raises a
        CalledProcessError. The CalledProcessError object will have the return code
        in the returncode attribute, and output & stderr attributes if those streams
        were captured.
    
        If timeout is given, and the process takes too long, a TimeoutExpired
        exception will be raised.
    
        There is an optional argument "input", allowing you to
        pass bytes or a string to the subprocess's stdin.  If you use this argument
        you may not also use the Popen constructor's "stdin" argument, as
        it will be used internally.
    
        By default, all communication is in bytes, and therefore any "input" should
        be bytes, and the stdout and stderr will be bytes. If in text mode, any
        "input" should be a string, and stdout and stderr will be strings decoded
        according to locale encoding, or by "encoding" if set. Text mode is
        triggered by setting any of text, encoding, errors or universal_newlines.
    
        The other arguments are the same as for the Popen constructor.
        """
        if input is not None:
            if kwargs.get('stdin') is not None:
                raise ValueError('stdin and input arguments may not both be used.')
            kwargs['stdin'] = PIPE
    
        if capture_output:
            if kwargs.get('stdout') is not None or kwargs.get('stderr') is not None:
                raise ValueError('stdout and stderr arguments may not be used '
                                 'with capture_output.')
            kwargs['stdout'] = PIPE
            kwargs['stderr'] = PIPE
    
        with Popen(*popenargs, **kwargs) as process:
            try:
                stdout, stderr = process.communicate(input, timeout=timeout)
            except TimeoutExpired as exc:
                process.kill()
                if _mswindows:
                    # Windows accumulates the output in a single blocking
                    # read() call run on child threads, with the timeout
                    # being done in a join() on those threads.  communicate()
                    # _after_ kill() is required to collect that and add it
                    # to the exception.
                    exc.stdout, exc.stderr = process.communicate()
                else:
                    # POSIX _communicate already populated the output so
                    # far into the TimeoutExpired exception.
                    process.wait()
                raise
            except:  # Including KeyboardInterrupt, communicate handled that.
                process.kill()
                # We don't call process.wait() as .__exit__ does that for us.
                raise
            retcode = process.poll()
            if check and retcode:
>               raise CalledProcessError(retcode, process.args,
                                         output=stdout, stderr=stderr)
E               subprocess.CalledProcessError: Command '('/home/kmaeh/.pyenv/versions/rocm-ci/bin/python', '/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.hXnTrEAC7u/cupy/tests/example_tests/../../examples/custom_struct/packed_matrix.py')' returned non-zero exit status 1.

/home/kmaeh/.pyenv/versions/3.8.7/lib/python3.8/subprocess.py:512: CalledProcessError
----------------------------- Captured stdout call -----------------------------
Original error message:
Traceback (most recent call last):
  File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.hXnTrEAC7u/cupy/tests/example_tests/../../examples/custom_struct/packed_matrix.py", line 91, in <module>
    sys.exit(main())
  File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.hXnTrEAC7u/cupy/tests/example_tests/../../examples/custom_struct/packed_matrix.py", line 81, in main
    kernel((1,), (N,), args)
  File "cupy/_core/raw.pyx", line 89, in cupy._core.raw.RawKernel.__call__
    self.kernel(
  File "cupy/cuda/function.pyx", line 201, in cupy.cuda.function.Function.__call__
    format(grid0, grid1, grid2, max_grid_size))
  File "cupy/cuda/function.pyx", line 155, in cupy.cuda.function._launch
    if itemsize == 8:
  File "cupy/cuda/function.pyx", line 123, in cupy.cuda.function._pointer
    # value. Here we allow only arrays of size one so that users do not
TypeError: Unsupported type <class 'numpy.ndarray'>

=============================== warnings summary ===============================
tests/cupy_tests/core_tests/fusion_tests/test_array.py: 1 warning
tests/cupy_tests/math_tests/test_sumprod.py: 19 warnings
  /home/kmaeh/.pyenv/versions/rocm-ci/lib/python3.8/site-packages/numpy/core/_methods.py:51: RuntimeWarning: overflow encountered in reduce
    return umr_prod(a, axis, dtype, out, keepdims, initial, where)

tests/cupy_tests/core_tests/fusion_tests/test_routines.py::TestFusionNumericalReduction_param_1_{func='prod'}::test_reduction
tests/cupy_tests/math_tests/test_sumprod.py::TestNansumNanprodLong_param_11_{axis=0, func='nanprod', keepdims=True, shape=(20, 30, 40), transpose_axes=False}::test_nansum_all
tests/cupy_tests/math_tests/test_sumprod.py::TestNansumNanprodLong_param_11_{axis=0, func='nanprod', keepdims=True, shape=(20, 30, 40), transpose_axes=False}::test_nansum_axis_transposed
tests/cupy_tests/math_tests/test_sumprod.py::TestNansumNanprodLong_param_15_{axis=0, func='nanprod', keepdims=False, shape=(20, 30, 40), transpose_axes=False}::test_nansum_all
tests/cupy_tests/math_tests/test_sumprod.py::TestNansumNanprodLong_param_15_{axis=0, func='nanprod', keepdims=False, shape=(20, 30, 40), transpose_axes=False}::test_nansum_axis_transposed
  /home/kmaeh/.pyenv/versions/rocm-ci/lib/python3.8/site-packages/numpy/core/fromnumeric.py:87: RuntimeWarning: overflow encountered in reduce
    return ufunc.reduce(obj, axis, dtype, out, **passkwargs)

tests/cupy_tests/lib_tests/test_polynomial.py::TestPolyval_param_0_{type_l='poly1d', type_r='ndarray'}::test_polyval
tests/cupy_tests/lib_tests/test_polynomial.py::TestPolyval_param_3_{type_l='ndarray', type_r='ndarray'}::test_polyval
tests/cupy_tests/lib_tests/test_polynomial.py::TestPolyvalDtypesCombination::test_polyval_diff_types_array_array
  /home/kmaeh/.pyenv/versions/rocm-ci/lib/python3.8/site-packages/numpy/lib/polynomial.py:734: RuntimeWarning: overflow encountered in multiply
    y = y * x + p[i]

tests/cupy_tests/lib_tests/test_polynomial.py::TestPolyval_param_1_{type_l='poly1d', type_r='numpy_scalar'}::test_polyval
tests/cupy_tests/lib_tests/test_polynomial.py::TestPolyval_param_4_{type_l='ndarray', type_r='numpy_scalar'}::test_polyval
tests/cupy_tests/lib_tests/test_polynomial.py::TestPolyvalDtypesCombination::test_polyval_diff_types_array_scalar
  /home/kmaeh/.pyenv/versions/rocm-ci/lib/python3.8/site-packages/numpy/lib/polynomial.py:734: RuntimeWarning: overflow encountered in half_scalars
    y = y * x + p[i]

tests/cupy_tests/lib_tests/test_polynomial.py::TestPolyval_param_1_{type_l='poly1d', type_r='numpy_scalar'}::test_polyval
tests/cupy_tests/lib_tests/test_polynomial.py::TestPolyval_param_4_{type_l='ndarray', type_r='numpy_scalar'}::test_polyval
tests/cupy_tests/lib_tests/test_polynomial.py::TestPolyvalDtypesCombination::test_polyval_diff_types_array_scalar
  /home/kmaeh/.pyenv/versions/rocm-ci/lib/python3.8/site-packages/numpy/lib/polynomial.py:734: RuntimeWarning: overflow encountered in byte_scalars
    y = y * x + p[i]

tests/cupy_tests/lib_tests/test_polynomial.py::TestPolyval_param_1_{type_l='poly1d', type_r='numpy_scalar'}::test_polyval
tests/cupy_tests/lib_tests/test_polynomial.py::TestPolyval_param_4_{type_l='ndarray', type_r='numpy_scalar'}::test_polyval
tests/cupy_tests/lib_tests/test_polynomial.py::TestPolyvalDtypesCombination::test_polyval_diff_types_array_scalar
  /home/kmaeh/.pyenv/versions/rocm-ci/lib/python3.8/site-packages/numpy/lib/polynomial.py:734: RuntimeWarning: overflow encountered in short_scalars
    y = y * x + p[i]

tests/cupy_tests/lib_tests/test_polynomial.py::TestPolyval_param_1_{type_l='poly1d', type_r='numpy_scalar'}::test_polyval
tests/cupy_tests/lib_tests/test_polynomial.py::TestPolyval_param_4_{type_l='ndarray', type_r='numpy_scalar'}::test_polyval
tests/cupy_tests/lib_tests/test_polynomial.py::TestPolyvalDtypesCombination::test_polyval_diff_types_array_scalar
  /home/kmaeh/.pyenv/versions/rocm-ci/lib/python3.8/site-packages/numpy/lib/polynomial.py:734: RuntimeWarning: overflow encountered in ubyte_scalars
    y = y * x + p[i]

tests/cupy_tests/lib_tests/test_polynomial.py::TestPolyval_param_1_{type_l='poly1d', type_r='numpy_scalar'}::test_polyval
tests/cupy_tests/lib_tests/test_polynomial.py::TestPolyval_param_4_{type_l='ndarray', type_r='numpy_scalar'}::test_polyval
tests/cupy_tests/lib_tests/test_polynomial.py::TestPolyvalDtypesCombination::test_polyval_diff_types_array_scalar
  /home/kmaeh/.pyenv/versions/rocm-ci/lib/python3.8/site-packages/numpy/lib/polynomial.py:734: RuntimeWarning: overflow encountered in ushort_scalars
    y = y * x + p[i]

tests/cupy_tests/linalg_tests/test_norms.py: 14 warnings
  /home/kmaeh/.pyenv/versions/rocm-ci/lib/python3.8/site-packages/numpy/linalg/linalg.py:2568: RuntimeWarning: divide by zero encountered in power
    absx **= ord

tests/cupy_tests/linalg_tests/test_norms.py: 14 warnings
  /home/kmaeh/.pyenv/versions/rocm-ci/lib/python3.8/site-packages/numpy/linalg/linalg.py:2568: RuntimeWarning: divide by zero encountered in reciprocal
    absx **= ord

tests/cupy_tests/math_tests/test_misc.py::TestMisc::test_nan_to_num_inf
tests/cupy_tests/math_tests/test_misc.py::TestMisc::test_nan_to_num_inf_nan
  /home/kmaeh/.pyenv/versions/rocm-ci/lib/python3.8/site-packages/numpy/core/numeric.py:2276: RuntimeWarning: overflow encountered in absolute
    return less_equal(abs(x-y), atol + rtol * abs(y))

tests/cupy_tests/math_tests/test_sumprod.py: 15 warnings
  /home/kmaeh/.pyenv/versions/rocm-ci/lib/python3.8/site-packages/numpy/core/_methods.py:51: RuntimeWarning: invalid value encountered in reduce
    return umr_prod(a, axis, dtype, out, keepdims, initial, where)

tests/cupy_tests/math_tests/test_sumprod.py::TestNansumNanprodLong_param_11_{axis=0, func='nanprod', keepdims=True, shape=(20, 30, 40), transpose_axes=False}::test_nansum_all
tests/cupy_tests/math_tests/test_sumprod.py::TestNansumNanprodLong_param_11_{axis=0, func='nanprod', keepdims=True, shape=(20, 30, 40), transpose_axes=False}::test_nansum_axis_transposed
tests/cupy_tests/math_tests/test_sumprod.py::TestNansumNanprodLong_param_15_{axis=0, func='nanprod', keepdims=False, shape=(20, 30, 40), transpose_axes=False}::test_nansum_all
tests/cupy_tests/math_tests/test_sumprod.py::TestNansumNanprodLong_param_15_{axis=0, func='nanprod', keepdims=False, shape=(20, 30, 40), transpose_axes=False}::test_nansum_axis_transposed
  /home/kmaeh/.pyenv/versions/rocm-ci/lib/python3.8/site-packages/numpy/core/fromnumeric.py:87: RuntimeWarning: invalid value encountered in reduce
    return ufunc.reduce(obj, axis, dtype, out, **passkwargs)

tests/cupy_tests/math_tests/test_sumprod.py: 32 warnings
  /home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.hXnTrEAC7u/cupy/tests/cupy_tests/math_tests/test_sumprod.py:800: RuntimeWarning: invalid value encountered in true_divide
    a = a / a

tests/cupy_tests/math_tests/test_sumprod.py::TestSumprod::test_sum_all2
tests/cupy_tests/math_tests/test_sumprod.py::TestSumprod::test_sum_all_transposed2
tests/cupy_tests/math_tests/test_sumprod.py::TestSumprod::test_sum_axes2
tests/cupy_tests/math_tests/test_sumprod.py::TestSumprod::test_sum_axes4
tests/cupy_tests/math_tests/test_sumprod.py::TestSumprod::test_sum_axis_transposed2
tests/cupyx_tests/scipy_tests/ndimage_tests/test_measurements.py::TestStats::test_only_input[_param_2_{op='variance'}]
tests/cupyx_tests/scipy_tests/ndimage_tests/test_measurements.py::TestStats::test_only_input[_param_3_{op='standard_deviation'}]
  /home/kmaeh/.pyenv/versions/rocm-ci/lib/python3.8/site-packages/numpy/core/_methods.py:47: RuntimeWarning: overflow encountered in reduce
    return umr_sum(a, axis, dtype, out, keepdims, initial, where)

tests/cupy_tests/statistics_tests/test_meanvar.py: 32 warnings
  /home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.hXnTrEAC7u/cupy/tests/cupy_tests/statistics_tests/test_meanvar.py:114: RuntimeWarning: invalid value encountered in true_divide
    a = a / a

tests/cupy_tests/statistics_tests/test_meanvar.py::TestNanMedian_param_4_{axis=0, keepdims=True, overwrite_input=True, shape=(3, 4, 5)}::test_nanmedian
tests/cupy_tests/statistics_tests/test_meanvar.py::TestNanMedian_param_5_{axis=0, keepdims=True, overwrite_input=False, shape=(3, 4, 5)}::test_nanmedian
tests/cupy_tests/statistics_tests/test_meanvar.py::TestNanMedian_param_6_{axis=0, keepdims=False, overwrite_input=True, shape=(3, 4, 5)}::test_nanmedian
tests/cupy_tests/statistics_tests/test_meanvar.py::TestNanMedian_param_7_{axis=0, keepdims=False, overwrite_input=False, shape=(3, 4, 5)}::test_nanmedian
tests/cupy_tests/statistics_tests/test_meanvar.py::TestNanMedian_param_8_{axis=1, keepdims=True, overwrite_input=True, shape=(3, 4, 5)}::test_nanmedian
tests/cupy_tests/statistics_tests/test_meanvar.py::TestNanMedian_param_9_{axis=1, keepdims=True, overwrite_input=False, shape=(3, 4, 5)}::test_nanmedian
tests/cupy_tests/statistics_tests/test_meanvar.py::TestNanMedian_param_10_{axis=1, keepdims=False, overwrite_input=True, shape=(3, 4, 5)}::test_nanmedian
tests/cupy_tests/statistics_tests/test_meanvar.py::TestNanMedian_param_11_{axis=1, keepdims=False, overwrite_input=False, shape=(3, 4, 5)}::test_nanmedian
  /home/kmaeh/.pyenv/versions/rocm-ci/lib/python3.8/site-packages/numpy/lib/nanfunctions.py:1113: RuntimeWarning: All-NaN slice encountered
    r, k = function_base._ureduce(a, func=_nanmedian, axis=axis, out=out,

tests/cupy_tests/statistics_tests/test_meanvar.py::TestProductZeroLength_param_1_{func='mean', params=((0,), None)}::test_external_mean_zero_len
tests/cupy_tests/statistics_tests/test_meanvar.py::TestProductZeroLength_param_2_{func='mean', params=((0, 0), None)}::test_external_mean_zero_len
tests/cupy_tests/statistics_tests/test_meanvar.py::TestProductZeroLength_param_3_{func='mean', params=((0, 0), 1)}::test_external_mean_zero_len
tests/cupy_tests/statistics_tests/test_meanvar.py::TestProductZeroLength_param_4_{func='mean', params=((0, 0, 0), None)}::test_external_mean_zero_len
tests/cupy_tests/statistics_tests/test_meanvar.py::TestProductZeroLength_param_5_{func='mean', params=((0, 0, 0), (0, 2))}::test_external_mean_zero_len
  /home/kmaeh/.pyenv/versions/rocm-ci/lib/python3.8/site-packages/numpy/core/fromnumeric.py:3372: RuntimeWarning: Mean of empty slice.
    return _methods._mean(a, axis=axis, dtype=dtype,

tests/cupy_tests/statistics_tests/test_meanvar.py::TestProductZeroLength_param_1_{func='mean', params=((0,), None)}::test_external_mean_zero_len
tests/cupy_tests/statistics_tests/test_meanvar.py::TestProductZeroLength_param_2_{func='mean', params=((0, 0), None)}::test_external_mean_zero_len
tests/cupy_tests/statistics_tests/test_meanvar.py::TestProductZeroLength_param_4_{func='mean', params=((0, 0, 0), None)}::test_external_mean_zero_len
  /home/kmaeh/.pyenv/versions/rocm-ci/lib/python3.8/site-packages/numpy/core/_methods.py:170: RuntimeWarning: invalid value encountered in double_scalars
    ret = ret.dtype.type(ret / rcount)

tests/cupy_tests/statistics_tests/test_meanvar.py::TestProductZeroLength_param_1_{func='mean', params=((0,), None)}::test_external_mean_zero_len
tests/cupy_tests/statistics_tests/test_meanvar.py::TestProductZeroLength_param_2_{func='mean', params=((0, 0), None)}::test_external_mean_zero_len
tests/cupy_tests/statistics_tests/test_meanvar.py::TestProductZeroLength_param_4_{func='mean', params=((0, 0, 0), None)}::test_external_mean_zero_len
  /home/kmaeh/.pyenv/versions/rocm-ci/lib/python3.8/site-packages/numpy/core/_methods.py:170: RuntimeWarning: invalid value encountered in true_divide
    ret = ret.dtype.type(ret / rcount)

tests/cupy_tests/statistics_tests/test_meanvar.py::TestProductZeroLength_param_1_{func='mean', params=((0,), None)}::test_external_mean_zero_len
tests/cupy_tests/statistics_tests/test_meanvar.py::TestProductZeroLength_param_2_{func='mean', params=((0, 0), None)}::test_external_mean_zero_len
tests/cupy_tests/statistics_tests/test_meanvar.py::TestProductZeroLength_param_4_{func='mean', params=((0, 0, 0), None)}::test_external_mean_zero_len
  /home/kmaeh/.pyenv/versions/rocm-ci/lib/python3.8/site-packages/numpy/core/_methods.py:168: RuntimeWarning: invalid value encountered in true_divide
    ret = arr.dtype.type(ret / rcount)

tests/cupy_tests/statistics_tests/test_meanvar.py::TestProductZeroLength_param_7_{func='std', params=((0,), None)}::test_external_mean_zero_len
tests/cupy_tests/statistics_tests/test_meanvar.py::TestProductZeroLength_param_8_{func='std', params=((0, 0), None)}::test_external_mean_zero_len
tests/cupy_tests/statistics_tests/test_meanvar.py::TestProductZeroLength_param_9_{func='std', params=((0, 0), 1)}::test_external_mean_zero_len
tests/cupy_tests/statistics_tests/test_meanvar.py::TestProductZeroLength_param_10_{func='std', params=((0, 0, 0), None)}::test_external_mean_zero_len
tests/cupy_tests/statistics_tests/test_meanvar.py::TestProductZeroLength_param_11_{func='std', params=((0, 0, 0), (0, 2))}::test_external_mean_zero_len
  /home/kmaeh/.pyenv/versions/rocm-ci/lib/python3.8/site-packages/numpy/core/_methods.py:233: RuntimeWarning: Degrees of freedom <= 0 for slice
    ret = _var(a, axis=axis, dtype=dtype, out=out, ddof=ddof,

tests/cupy_tests/statistics_tests/test_meanvar.py::TestProductZeroLength_param_7_{func='std', params=((0,), None)}::test_external_mean_zero_len
tests/cupy_tests/statistics_tests/test_meanvar.py::TestProductZeroLength_param_8_{func='std', params=((0, 0), None)}::test_external_mean_zero_len
tests/cupy_tests/statistics_tests/test_meanvar.py::TestProductZeroLength_param_10_{func='std', params=((0, 0, 0), None)}::test_external_mean_zero_len
tests/cupy_tests/statistics_tests/test_meanvar.py::TestProductZeroLength_param_13_{func='var', params=((0,), None)}::test_external_mean_zero_len
tests/cupy_tests/statistics_tests/test_meanvar.py::TestProductZeroLength_param_14_{func='var', params=((0, 0), None)}::test_external_mean_zero_len
tests/cupy_tests/statistics_tests/test_meanvar.py::TestProductZeroLength_param_16_{func='var', params=((0, 0, 0), None)}::test_external_mean_zero_len
  /home/kmaeh/.pyenv/versions/rocm-ci/lib/python3.8/site-packages/numpy/core/_methods.py:194: RuntimeWarning: invalid value encountered in true_divide
    arrmean = um.true_divide(

tests/cupy_tests/statistics_tests/test_meanvar.py::TestProductZeroLength_param_7_{func='std', params=((0,), None)}::test_external_mean_zero_len
tests/cupy_tests/statistics_tests/test_meanvar.py::TestProductZeroLength_param_8_{func='std', params=((0, 0), None)}::test_external_mean_zero_len
tests/cupy_tests/statistics_tests/test_meanvar.py::TestProductZeroLength_param_10_{func='std', params=((0, 0, 0), None)}::test_external_mean_zero_len
tests/cupy_tests/statistics_tests/test_meanvar.py::TestProductZeroLength_param_13_{func='var', params=((0,), None)}::test_external_mean_zero_len
tests/cupy_tests/statistics_tests/test_meanvar.py::TestProductZeroLength_param_14_{func='var', params=((0, 0), None)}::test_external_mean_zero_len
tests/cupy_tests/statistics_tests/test_meanvar.py::TestProductZeroLength_param_16_{func='var', params=((0, 0, 0), None)}::test_external_mean_zero_len
  /home/kmaeh/.pyenv/versions/rocm-ci/lib/python3.8/site-packages/numpy/core/_methods.py:226: RuntimeWarning: invalid value encountered in double_scalars
    ret = ret.dtype.type(ret / rcount)

tests/cupy_tests/statistics_tests/test_meanvar.py::TestProductZeroLength_param_7_{func='std', params=((0,), None)}::test_external_mean_zero_len
tests/cupy_tests/statistics_tests/test_meanvar.py::TestProductZeroLength_param_8_{func='std', params=((0, 0), None)}::test_external_mean_zero_len
tests/cupy_tests/statistics_tests/test_meanvar.py::TestProductZeroLength_param_10_{func='std', params=((0, 0, 0), None)}::test_external_mean_zero_len
tests/cupy_tests/statistics_tests/test_meanvar.py::TestProductZeroLength_param_13_{func='var', params=((0,), None)}::test_external_mean_zero_len
tests/cupy_tests/statistics_tests/test_meanvar.py::TestProductZeroLength_param_14_{func='var', params=((0, 0), None)}::test_external_mean_zero_len
tests/cupy_tests/statistics_tests/test_meanvar.py::TestProductZeroLength_param_16_{func='var', params=((0, 0, 0), None)}::test_external_mean_zero_len
  /home/kmaeh/.pyenv/versions/rocm-ci/lib/python3.8/site-packages/numpy/core/_methods.py:226: RuntimeWarning: invalid value encountered in true_divide
    ret = ret.dtype.type(ret / rcount)

tests/cupy_tests/statistics_tests/test_meanvar.py::TestProductZeroLength_param_13_{func='var', params=((0,), None)}::test_external_mean_zero_len
tests/cupy_tests/statistics_tests/test_meanvar.py::TestProductZeroLength_param_14_{func='var', params=((0, 0), None)}::test_external_mean_zero_len
tests/cupy_tests/statistics_tests/test_meanvar.py::TestProductZeroLength_param_15_{func='var', params=((0, 0), 1)}::test_external_mean_zero_len
tests/cupy_tests/statistics_tests/test_meanvar.py::TestProductZeroLength_param_16_{func='var', params=((0, 0, 0), None)}::test_external_mean_zero_len
tests/cupy_tests/statistics_tests/test_meanvar.py::TestProductZeroLength_param_17_{func='var', params=((0, 0, 0), (0, 2))}::test_external_mean_zero_len
  /home/kmaeh/.pyenv/versions/rocm-ci/lib/python3.8/site-packages/numpy/core/fromnumeric.py:3621: RuntimeWarning: Degrees of freedom <= 0 for slice
    return _methods._var(a, axis=axis, dtype=dtype, out=out, ddof=ddof,

tests/cupyx_tests/jit_tests/test_raw.py: 21 warnings
  /home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.hXnTrEAC7u/cupy/cupyx/jit/_builtin_funcs.py:319: RuntimeWarning: mask 4294967295 is ignored on HIP
    warnings.warn(f'mask {mask} is ignored on HIP', RuntimeWarning)

tests/cupyx_tests/jit_tests/test_raw.py::TestRaw::test_syncwarp_mask
  /home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.hXnTrEAC7u/cupy/cupyx/jit/_builtin_funcs.py:131: RuntimeWarning: mask <Data code = "m", type = int> is ignored on HIP
    warnings.warn(f'mask {mask} is ignored on HIP', RuntimeWarning)

tests/cupyx_tests/scipy_tests/ndimage_tests/test_interpolation.py::TestShift::test_shift_int[_param_217_{cval=nan, mode='constant', order=0, output=float64, prefilter=True, shift=0.1}]
tests/cupyx_tests/scipy_tests/ndimage_tests/test_interpolation.py::TestShift::test_shift_int[_param_220_{cval=nan, mode='constant', order=1, output=float64, prefilter=True, shift=0.1}]
tests/cupyx_tests/scipy_tests/ndimage_tests/test_interpolation.py::TestShift::test_shift_int[_param_223_{cval=nan, mode='constant', order=3, output=float64, prefilter=True, shift=0.1}]
tests/cupyx_tests/scipy_tests/ndimage_tests/test_interpolation.py::TestShift::test_shift_int[_param_226_{cval=inf, mode='constant', order=0, output=float64, prefilter=True, shift=0.1}]
tests/cupyx_tests/scipy_tests/ndimage_tests/test_interpolation.py::TestShift::test_shift_int[_param_229_{cval=inf, mode='constant', order=1, output=float64, prefilter=True, shift=0.1}]
tests/cupyx_tests/scipy_tests/ndimage_tests/test_interpolation.py::TestShift::test_shift_int[_param_232_{cval=inf, mode='constant', order=3, output=float64, prefilter=True, shift=0.1}]
tests/cupyx_tests/scipy_tests/ndimage_tests/test_interpolation.py::TestShift::test_shift_int[_param_235_{cval=-inf, mode='constant', order=0, output=float64, prefilter=True, shift=0.1}]
tests/cupyx_tests/scipy_tests/ndimage_tests/test_interpolation.py::TestShift::test_shift_int[_param_238_{cval=-inf, mode='constant', order=1, output=float64, prefilter=True, shift=0.1}]
tests/cupyx_tests/scipy_tests/ndimage_tests/test_interpolation.py::TestShift::test_shift_int[_param_241_{cval=-inf, mode='constant', order=3, output=float64, prefilter=True, shift=0.1}]
  /home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.hXnTrEAC7u/cupy/tests/cupyx_tests/scipy_tests/ndimage_tests/test_interpolation.py:665: RuntimeWarning: invalid value encountered in remainder
    float_out = self._shift(xp, scp, a.astype(xp.float64)) % 1

tests/cupyx_tests/scipy_tests/ndimage_tests/test_measurements.py: 14 warnings
  /home/kmaeh/.pyenv/versions/rocm-ci/lib/python3.8/site-packages/scipy/ndimage/measurements.py:684: RuntimeWarning: invalid value encountered in true_divide
    return sum / numpy.asanyarray(count).astype(numpy.float64)

tests/cupyx_tests/scipy_tests/ndimage_tests/test_measurements.py: 28 warnings
  /home/kmaeh/.pyenv/versions/rocm-ci/lib/python3.8/site-packages/scipy/ndimage/measurements.py:736: RuntimeWarning: invalid value encountered in true_divide
    return sum_c_sq / np.asanyarray(count).astype(float)

tests/cupyx_tests/scipy_tests/signal_tests/test_signaltools.py::TestWiener_param_0_{im=(10,), mysize=3, noise=False}::test_wiener
tests/cupyx_tests/scipy_tests/signal_tests/test_signaltools.py::TestWiener_param_1_{im=(10,), mysize=3, noise=True}::test_wiener
tests/cupyx_tests/scipy_tests/signal_tests/test_signaltools.py::TestWiener_param_2_{im=(10,), mysize=4, noise=False}::test_wiener
tests/cupyx_tests/scipy_tests/signal_tests/test_signaltools.py::TestWiener_param_3_{im=(10,), mysize=4, noise=True}::test_wiener
tests/cupyx_tests/scipy_tests/signal_tests/test_signaltools.py::TestWiener_param_4_{im=(10,), mysize=(3, 4, 5), noise=False}::test_wiener
tests/cupyx_tests/scipy_tests/signal_tests/test_signaltools.py::TestWiener_param_5_{im=(10,), mysize=(3, 4, 5), noise=True}::test_wiener
  /home/kmaeh/.pyenv/versions/rocm-ci/lib/python3.8/site-packages/scipy/signal/signaltools.py:1598: RuntimeWarning: divide by zero encountered in true_divide
    res *= (1 - noise / lVar)

tests/cupyx_tests/scipy_tests/signal_tests/test_signaltools.py::TestWiener_param_0_{im=(10,), mysize=3, noise=False}::test_wiener
tests/cupyx_tests/scipy_tests/signal_tests/test_signaltools.py::TestWiener_param_1_{im=(10,), mysize=3, noise=True}::test_wiener
tests/cupyx_tests/scipy_tests/signal_tests/test_signaltools.py::TestWiener_param_2_{im=(10,), mysize=4, noise=False}::test_wiener
tests/cupyx_tests/scipy_tests/signal_tests/test_signaltools.py::TestWiener_param_3_{im=(10,), mysize=4, noise=True}::test_wiener
tests/cupyx_tests/scipy_tests/signal_tests/test_signaltools.py::TestWiener_param_4_{im=(10,), mysize=(3, 4, 5), noise=False}::test_wiener
tests/cupyx_tests/scipy_tests/signal_tests/test_signaltools.py::TestWiener_param_5_{im=(10,), mysize=(3, 4, 5), noise=True}::test_wiener
  /home/kmaeh/.pyenv/versions/rocm-ci/lib/python3.8/site-packages/scipy/signal/signaltools.py:1598: RuntimeWarning: invalid value encountered in multiply
    res *= (1 - noise / lVar)

-- Docs: https://docs.pytest.org/en/stable/warnings.html
- generated html file: file:///home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.hXnTrEAC7u/cupy/_output/report.html -
=========================== short test summary info ============================
FAILED tests/cupy_tests/core_tests/test_dlpack.py::TestNewDLPackConversion::test_conversion
FAILED tests/cupy_tests/core_tests/test_ndarray.py::TestNdarrayCopy::test_copy_multi_device_with_stream
FAILED tests/cupy_tests/core_tests/test_ndarray_unary_op.py::TestArrayBoolOp::test_bool_one_element
FAILED tests/cupy_tests/functional_tests/test_vectorize.py::TestVectorize::test_vectorize_arithmetic_ops
FAILED tests/cupy_tests/indexing_tests/test_generate.py::TestIX_::test_ix_ndarray
FAILED tests/cupy_tests/math_tests/test_misc.py::TestConvolve_param_0_{mode='valid'}::test_convolve_diff_types
FAILED tests/cupy_tests/math_tests/test_misc.py::TestConvolve_param_1_{mode='same'}::test_convolve_diff_types
FAILED tests/cupy_tests/math_tests/test_misc.py::TestConvolve_param_2_{mode='full'}::test_convolve_diff_types
FAILED tests/cupy_tests/random_tests/test_distributions.py::TestDistributionsPoissonInvalid::test_none_lam_generator
FAILED tests/cupy_tests/random_tests/test_distributions.py::TestDistributionsStandardGammaInvalid::test_none_shape_generator
FAILED tests/cupy_tests/statistics_tests/test_correlation.py::TestCorrelate_param_0_{mode='valid'}::test_correlate_diff_types
FAILED tests/cupy_tests/statistics_tests/test_correlation.py::TestCorrelate_param_1_{mode='full'}::test_correlate_diff_types
FAILED tests/cupy_tests/statistics_tests/test_correlation.py::TestCorrelate_param_2_{mode='same'}::test_correlate_diff_types
FAILED tests/cupyx_tests/test_scatter.py::TestScatter::test_scatter_add - Ass...
FAILED tests/cupyx_tests/scipy_tests/linalg_tests/test_decomp_lu.py::TestLUSolve_param_4_{shapes=((5, 5), (5, 2)), trans=1}::test_lu_solve
FAILED tests/cupyx_tests/scipy_tests/linalg_tests/test_decomp_lu.py::TestLUSolve_param_5_{shapes=((5, 5), (5, 2)), trans=2}::test_lu_solve
FAILED tests/cupyx_tests/scipy_tests/ndimage_tests/test_interpolation.py::TestMapCoordinatesHalfInteger::test_map_coordinates_float[_param_46_{mode='grid-constant', order=4}]
FAILED tests/cupyx_tests/scipy_tests/ndimage_tests/test_interpolation.py::TestMapCoordinatesHalfInteger::test_map_coordinates_float[_param_47_{mode='grid-constant', order=5}]
FAILED tests/cupyx_tests/scipy_tests/ndimage_tests/test_interpolation.py::TestAffineTransformTextureMemory::test_affine_transform_texture_memory[_param_0_{mode='constant', order=0, output=None, output_shape=None, shape=(100, 100), theta=0}]
FAILED tests/cupyx_tests/scipy_tests/ndimage_tests/test_interpolation.py::TestAffineTransformTextureMemory::test_affine_transform_texture_memory[_param_1_{mode='constant', order=0, output=None, output_shape=None, shape=(100, 100), theta=90}]
FAILED tests/cupyx_tests/scipy_tests/ndimage_tests/test_interpolation.py::TestAffineTransformTextureMemory::test_affine_transform_texture_memory[_param_2_{mode='constant', order=0, output=None, output_shape=None, shape=(100, 100), theta=180}]
FAILED tests/cupyx_tests/scipy_tests/ndimage_tests/test_interpolation.py::TestAffineTransformTextureMemory::test_affine_transform_texture_memory[_param_3_{mode='constant', order=0, output=None, output_shape=None, shape=(100, 100), theta=270}]
FAILED tests/cupyx_tests/scipy_tests/ndimage_tests/test_interpolation.py::TestAffineTransformTextureMemory::test_affine_transform_texture_memory[_param_4_{mode='constant', order=0, output=None, output_shape=None, shape=(10, 20), theta=0}]
FAILED tests/cupyx_tests/scipy_tests/ndimage_tests/test_interpolation.py::TestAffineTransformTextureMemory::test_affine_transform_texture_memory[_param_5_{mode='constant', order=0, output=None, output_shape=None, shape=(10, 20), theta=90}]
FAILED tests/cupyx_tests/scipy_tests/ndimage_tests/test_interpolation.py::TestAffineTransformTextureMemory::test_affine_transform_texture_memory[_param_6_{mode='constant', order=0, output=None, output_shape=None, shape=(10, 20), theta=180}]
FAILED tests/cupyx_tests/scipy_tests/ndimage_tests/test_interpolation.py::TestAffineTransformTextureMemory::test_affine_transform_texture_memory[_param_7_{mode='constant', order=0, output=None, output_shape=None, shape=(10, 20), theta=270}]
FAILED tests/cupyx_tests/scipy_tests/ndimage_tests/test_interpolation.py::TestAffineTransformTextureMemory::test_affine_transform_texture_memory[_param_8_{mode='constant', order=0, output=None, output_shape=None, shape=(10, 10, 10), theta=0}]
FAILED tests/cupyx_tests/scipy_tests/ndimage_tests/test_interpolation.py::TestAffineTransformTextureMemory::test_affine_transform_texture_memory[_param_9_{mode='constant', order=0, output=None, output_shape=None, shape=(10, 10, 10), theta=90}]
FAILED tests/cupyx_tests/scipy_tests/ndimage_tests/test_interpolation.py::TestAffineTransformTextureMemory::test_affine_transform_texture_memory[_param_10_{mode='constant', order=0, output=None, output_shape=None, shape=(10, 10, 10), theta=180}]
FAILED tests/cupyx_tests/scipy_tests/ndimage_tests/test_interpolation.py::TestAffineTransformTextureMemory::test_affine_transform_texture_memory[_param_11_{mode='constant', order=0, output=None, output_shape=None, shape=(10, 10, 10), theta=270}]
FAILED tests/cupyx_tests/scipy_tests/ndimage_tests/test_interpolation.py::TestAffineTransformTextureMemory::test_affine_transform_texture_memory[_param_12_{mode='constant', order=0, output=None, output_shape=None, shape=(10, 20, 30), theta=0}]
FAILED tests/cupyx_tests/scipy_tests/ndimage_tests/test_interpolation.py::TestAffineTransformTextureMemory::test_affine_transform_texture_memory[_param_13_{mode='constant', order=0, output=None, output_shape=None, shape=(10, 20, 30), theta=90}]
FAILED tests/cupyx_tests/scipy_tests/ndimage_tests/test_interpolation.py::TestAffineTransformTextureMemory::test_affine_transform_texture_memory[_param_14_{mode='constant', order=0, output=None, output_shape=None, shape=(10, 20, 30), theta=180}]
FAILED tests/cupyx_tests/scipy_tests/ndimage_tests/test_interpolation.py::TestAffineTransformTextureMemory::test_affine_transform_texture_memory[_param_15_{mode='constant', order=0, output=None, output_shape=None, shape=(10, 20, 30), theta=270}]
FAILED tests/cupyx_tests/scipy_tests/ndimage_tests/test_interpolation.py::TestAffineTransformTextureMemory::test_affine_transform_texture_memory[_param_16_{mode='constant', order=0, output=None, output_shape=10, shape=(100, 100), theta=0}]
FAILED tests/cupyx_tests/scipy_tests/ndimage_tests/test_interpolation.py::TestAffineTransformTextureMemory::test_affine_transform_texture_memory[_param_17_{mode='constant', order=0, output=None, output_shape=10, shape=(100, 100), theta=90}]
FAILED tests/cupyx_tests/scipy_tests/ndimage_tests/test_interpolation.py::TestAffineTransformTextureMemory::test_affine_transform_texture_memory[_param_18_{mode='constant', order=0, output=None, output_shape=10, shape=(100, 100), theta=180}]
FAILED tests/cupyx_tests/scipy_tests/ndimage_tests/test_interpolation.py::TestAffineTransformTextureMemory::test_affine_transform_texture_memory[_param_19_{mode='constant', order=0, output=None, output_shape=10, shape=(100, 100), theta=270}]
FAILED tests/cupyx_tests/scipy_tests/ndimage_tests/test_interpolation.py::TestAffineTransformTextureMemory::test_affine_transform_texture_memory[_param_20_{mode='constant', order=0, output=None, output_shape=10, shape=(10, 20), theta=0}]
FAILED tests/cupyx_tests/scipy_tests/ndimage_tests/test_interpolation.py::TestAffineTransformTextureMemory::test_affine_transform_texture_memory[_param_21_{mode='constant', order=0, output=None, output_shape=10, shape=(10, 20), theta=90}]
FAILED tests/cupyx_tests/scipy_tests/ndimage_tests/test_interpolation.py::TestAffineTransformTextureMemory::test_affine_transform_texture_memory[_param_22_{mode='constant', order=0, output=None, output_shape=10, shape=(10, 20), theta=180}]
FAILED tests/cupyx_tests/scipy_tests/ndimage_tests/test_interpolation.py::TestAffineTransformTextureMemory::test_affine_transform_texture_memory[_param_23_{mode='constant', order=0, output=None, output_shape=10, shape=(10, 20), theta=270}]
FAILED tests/cupyx_tests/scipy_tests/ndimage_tests/test_interpolation.py::TestAffineTransformTextureMemory::test_affine_transform_texture_memory[_param_24_{mode='constant', order=0, output=None, output_shape=10, shape=(10, 10, 10), theta=0}]
FAILED tests/cupyx_tests/scipy_tests/ndimage_tests/test_interpolation.py::TestAffineTransformTextureMemory::test_affine_transform_texture_memory[_param_25_{mode='constant', order=0, output=None, output_shape=10, shape=(10, 10, 10), theta=90}]
FAILED tests/cupyx_tests/scipy_tests/ndimage_tests/test_interpolation.py::TestAffineTransformTextureMemory::test_affine_transform_texture_memory[_param_26_{mode='constant', order=0, output=None, output_shape=10, shape=(10, 10, 10), theta=180}]
FAILED tests/cupyx_tests/scipy_tests/ndimage_tests/test_interpolation.py::TestAffineTransformTextureMemory::test_affine_transform_texture_memory[_param_27_{mode='constant', order=0, output=None, output_shape=10, shape=(10, 10, 10), theta=270}]
FAILED tests/cupyx_tests/scipy_tests/ndimage_tests/test_interpolation.py::TestAffineTransformTextureMemory::test_affine_transform_texture_memory[_param_28_{mode='constant', order=0, output=None, output_shape=10, shape=(10, 20, 30), theta=0}]
FAILED tests/cupyx_tests/scipy_tests/ndimage_tests/test_interpolation.py::TestAffineTransformTextureMemory::test_affine_transform_texture_memory[_param_29_{mode='constant', order=0, output=None, output_shape=10, shape=(10, 20, 30), theta=90}]
FAILED tests/cupyx_tests/scipy_tests/ndimage_tests/test_interpolation.py::TestAffineTransformTextureMemory::test_affine_transform_texture_memory[_param_30_{mode='constant', order=0, output=None, output_shape=10, shape=(10, 20, 30), theta=180}]
FAILED tests/cupyx_tests/scipy_tests/ndimage_tests/test_interpolation.py::TestAffineTransformTextureMemory::test_affine_transform_texture_memory[_param_31_{mode='constant', order=0, output=None, output_shape=10, shape=(10, 20, 30), theta=270}]
FAILED tests/cupyx_tests/scipy_tests/ndimage_tests/test_interpolation.py::TestAffineTransformTextureMemory::test_affine_transform_texture_memory[_param_32_{mode='constant', order=0, output=float32, output_shape=None, shape=(100, 100), theta=0}]
FAILED tests/cupyx_tests/scipy_tests/ndimage_tests/test_interpolation.py::TestAffineTransformTextureMemory::test_affine_transform_texture_memory[_param_33_{mode='constant', order=0, output=float32, output_shape=None, shape=(100, 100), theta=90}]
FAILED tests/cupyx_tests/scipy_tests/ndimage_tests/test_interpolation.py::TestAffineTransformTextureMemory::test_affine_transform_texture_memory[_param_34_{mode='constant', order=0, output=float32, output_shape=None, shape=(100, 100), theta=180}]
FAILED tests/cupyx_tests/scipy_tests/ndimage_tests/test_interpolation.py::TestAffineTransformTextureMemory::test_affine_transform_texture_memory[_param_35_{mode='constant', order=0, output=float32, output_shape=None, shape=(100, 100), theta=270}]
FAILED tests/cupyx_tests/scipy_tests/ndimage_tests/test_interpolation.py::TestAffineTransformTextureMemory::test_affine_transform_texture_memory[_param_36_{mode='constant', order=0, output=float32, output_shape=None, shape=(10, 20), theta=0}]
FAILED tests/cupyx_tests/scipy_tests/ndimage_tests/test_interpolation.py::TestAffineTransformTextureMemory::test_affine_transform_texture_memory[_param_37_{mode='constant', order=0, output=float32, output_shape=None, shape=(10, 20), theta=90}]
FAILED tests/cupyx_tests/scipy_tests/ndimage_tests/test_interpolation.py::TestAffineTransformTextureMemory::test_affine_transform_texture_memory[_param_38_{mode='constant', order=0, output=float32, output_shape=None, shape=(10, 20), theta=180}]
FAILED tests/cupyx_tests/scipy_tests/ndimage_tests/test_interpolation.py::TestAffineTransformTextureMemory::test_affine_transform_texture_memory[_param_39_{mode='constant', order=0, output=float32, output_shape=None, shape=(10, 20), theta=270}]
FAILED tests/cupyx_tests/scipy_tests/ndimage_tests/test_interpolation.py::TestAffineTransformTextureMemory::test_affine_transform_texture_memory[_param_40_{mode='constant', order=0, output=float32, output_shape=None, shape=(10, 10, 10), theta=0}]
FAILED tests/cupyx_tests/scipy_tests/ndimage_tests/test_interpolation.py::TestAffineTransformTextureMemory::test_affine_transform_texture_memory[_param_41_{mode='constant', order=0, output=float32, output_shape=None, shape=(10, 10, 10), theta=90}]
FAILED tests/cupyx_tests/scipy_tests/ndimage_tests/test_interpolation.py::TestAffineTransformTextureMemory::test_affine_transform_texture_memory[_param_42_{mode='constant', order=0, output=float32, output_shape=None, shape=(10, 10, 10), theta=180}]
FAILED tests/cupyx_tests/scipy_tests/ndimage_tests/test_interpolation.py::TestAffineTransformTextureMemory::test_affine_transform_texture_memory[_param_43_{mode='constant', order=0, output=float32, output_shape=None, shape=(10, 10, 10), theta=270}]
FAILED tests/cupyx_tests/scipy_tests/ndimage_tests/test_interpolation.py::TestAffineTransformTextureMemory::test_affine_transform_texture_memory[_param_44_{mode='constant', order=0, output=float32, output_shape=None, shape=(10, 20, 30), theta=0}]
FAILED tests/cupyx_tests/scipy_tests/ndimage_tests/test_interpolation.py::TestAffineTransformTextureMemory::test_affine_transform_texture_memory[_param_45_{mode='constant', order=0, output=float32, output_shape=None, shape=(10, 20, 30), theta=90}]
FAILED tests/cupyx_tests/scipy_tests/ndimage_tests/test_interpolation.py::TestAffineTransformTextureMemory::test_affine_transform_texture_memory[_param_46_{mode='constant', order=0, output=float32, output_shape=None, shape=(10, 20, 30), theta=180}]
FAILED tests/cupyx_tests/scipy_tests/ndimage_tests/test_interpolation.py::TestAffineTransformTextureMemory::test_affine_transform_texture_memory[_param_47_{mode='constant', order=0, output=float32, output_shape=None, shape=(10, 20, 30), theta=270}]
FAILED tests/cupyx_tests/scipy_tests/ndimage_tests/test_interpolation.py::TestAffineTransformTextureMemory::test_affine_transform_texture_memory[_param_48_{mode='constant', order=0, output=float32, output_shape=10, shape=(100, 100), theta=0}]
FAILED tests/cupyx_tests/scipy_tests/ndimage_tests/test_interpolation.py::TestAffineTransformTextureMemory::test_affine_transform_texture_memory[_param_49_{mode='constant', order=0, output=float32, output_shape=10, shape=(100, 100), theta=90}]
FAILED tests/cupyx_tests/scipy_tests/ndimage_tests/test_interpolation.py::TestAffineTransformTextureMemory::test_affine_transform_texture_memory[_param_50_{mode='constant', order=0, output=float32, output_shape=10, shape=(100, 100), theta=180}]
FAILED tests/cupyx_tests/scipy_tests/ndimage_tests/test_interpolation.py::TestAffineTransformTextureMemory::test_affine_transform_texture_memory[_param_51_{mode='constant', order=0, output=float32, output_shape=10, shape=(100, 100), theta=270}]
FAILED tests/cupyx_tests/scipy_tests/ndimage_tests/test_interpolation.py::TestAffineTransformTextureMemory::test_affine_transform_texture_memory[_param_52_{mode='constant', order=0, output=float32, output_shape=10, shape=(10, 20), theta=0}]
FAILED tests/cupyx_tests/scipy_tests/ndimage_tests/test_interpolation.py::TestAffineTransformTextureMemory::test_affine_transform_texture_memory[_param_53_{mode='constant', order=0, output=float32, output_shape=10, shape=(10, 20), theta=90}]
FAILED tests/cupyx_tests/scipy_tests/ndimage_tests/test_interpolation.py::TestAffineTransformTextureMemory::test_affine_transform_texture_memory[_param_54_{mode='constant', order=0, output=float32, output_shape=10, shape=(10, 20), theta=180}]
FAILED tests/cupyx_tests/scipy_tests/ndimage_tests/test_interpolation.py::TestAffineTransformTextureMemory::test_affine_transform_texture_memory[_param_55_{mode='constant', order=0, output=float32, output_shape=10, shape=(10, 20), theta=270}]
FAILED tests/cupyx_tests/scipy_tests/ndimage_tests/test_interpolation.py::TestAffineTransformTextureMemory::test_affine_transform_texture_memory[_param_56_{mode='constant', order=0, output=float32, output_shape=10, shape=(10, 10, 10), theta=0}]
FAILED tests/cupyx_tests/scipy_tests/ndimage_tests/test_interpolation.py::TestAffineTransformTextureMemory::test_affine_transform_texture_memory[_param_57_{mode='constant', order=0, output=float32, output_shape=10, shape=(10, 10, 10), theta=90}]
FAILED tests/cupyx_tests/scipy_tests/ndimage_tests/test_interpolation.py::TestAffineTransformTextureMemory::test_affine_transform_texture_memory[_param_58_{mode='constant', order=0, output=float32, output_shape=10, shape=(10, 10, 10), theta=180}]
FAILED tests/cupyx_tests/scipy_tests/ndimage_tests/test_interpolation.py::TestAffineTransformTextureMemory::test_affine_transform_texture_memory[_param_59_{mode='constant', order=0, output=float32, output_shape=10, shape=(10, 10, 10), theta=270}]
FAILED tests/cupyx_tests/scipy_tests/ndimage_tests/test_interpolation.py::TestAffineTransformTextureMemory::test_affine_transform_texture_memory[_param_60_{mode='constant', order=0, output=float32, output_shape=10, shape=(10, 20, 30), theta=0}]
FAILED tests/cupyx_tests/scipy_tests/ndimage_tests/test_interpolation.py::TestAffineTransformTextureMemory::test_affine_transform_texture_memory[_param_61_{mode='constant', order=0, output=float32, output_shape=10, shape=(10, 20, 30), theta=90}]
FAILED tests/cupyx_tests/scipy_tests/ndimage_tests/test_interpolation.py::TestAffineTransformTextureMemory::test_affine_transform_texture_memory[_param_62_{mode='constant', order=0, output=float32, output_shape=10, shape=(10, 20, 30), theta=180}]
FAILED tests/cupyx_tests/scipy_tests/ndimage_tests/test_interpolation.py::TestAffineTransformTextureMemory::test_affine_transform_texture_memory[_param_63_{mode='constant', order=0, output=float32, output_shape=10, shape=(10, 20, 30), theta=270}]
FAILED tests/cupyx_tests/scipy_tests/ndimage_tests/test_interpolation.py::TestAffineTransformTextureMemory::test_affine_transform_texture_memory[_param_64_{mode='constant', order=0, output='empty', output_shape=None, shape=(100, 100), theta=0}]
FAILED tests/cupyx_tests/scipy_tests/ndimage_tests/test_interpolation.py::TestAffineTransformTextureMemory::test_affine_transform_texture_memory[_param_65_{mode='constant', order=0, output='empty', output_shape=None, shape=(100, 100), theta=90}]
FAILED tests/cupyx_tests/scipy_tests/ndimage_tests/test_interpolation.py::TestAffineTransformTextureMemory::test_affine_transform_texture_memory[_param_66_{mode='constant', order=0, output='empty', output_shape=None, shape=(100, 100), theta=180}]
FAILED tests/cupyx_tests/scipy_tests/ndimage_tests/test_interpolation.py::TestAffineTransformTextureMemory::test_affine_transform_texture_memory[_param_67_{mode='constant', order=0, output='empty', output_shape=None, shape=(100, 100), theta=270}]
FAILED tests/cupyx_tests/scipy_tests/ndimage_tests/test_interpolation.py::TestAffineTransformTextureMemory::test_affine_transform_texture_memory[_param_68_{mode='constant', order=0, output='empty', output_shape=None, shape=(10, 20), theta=0}]
FAILED tests/cupyx_tests/scipy_tests/ndimage_tests/test_interpolation.py::TestAffineTransformTextureMemory::test_affine_transform_texture_memory[_param_69_{mode='constant', order=0, output='empty', output_shape=None, shape=(10, 20), theta=90}]
FAILED tests/cupyx_tests/scipy_tests/ndimage_tests/test_interpolation.py::TestAffineTransformTextureMemory::test_affine_transform_texture_memory[_param_70_{mode='constant', order=0, output='empty', output_shape=None, shape=(10, 20), theta=180}]
FAILED tests/cupyx_tests/scipy_tests/ndimage_tests/test_interpolation.py::TestAffineTransformTextureMemory::test_affine_transform_texture_memory[_param_71_{mode='constant', order=0, output='empty', output_shape=None, shape=(10, 20), theta=270}]
FAILED tests/cupyx_tests/scipy_tests/ndimage_tests/test_interpolation.py::TestAffineTransformTextureMemory::test_affine_transform_texture_memory[_param_72_{mode='constant', order=0, output='empty', output_shape=None, shape=(10, 10, 10), theta=0}]
FAILED tests/cupyx_tests/scipy_tests/ndimage_tests/test_interpolation.py::TestAffineTransformTextureMemory::test_affine_transform_texture_memory[_param_73_{mode='constant', order=0, output='empty', output_shape=None, shape=(10, 10, 10), theta=90}]
FAILED tests/cupyx_tests/scipy_tests/ndimage_tests/test_interpolation.py::TestAffineTransformTextureMemory::test_affine_transform_texture_memory[_param_74_{mode='constant', order=0, output='empty', output_shape=None, shape=(10, 10, 10), theta=180}]
FAILED tests/cupyx_tests/scipy_tests/ndimage_tests/test_interpolation.py::TestAffineTransformTextureMemory::test_affine_transform_texture_memory[_param_75_{mode='constant', order=0, output='empty', output_shape=None, shape=(10, 10, 10), theta=270}]
FAILED tests/cupyx_tests/scipy_tests/ndimage_tests/test_interpolation.py::TestAffineTransformTextureMemory::test_affine_transform_texture_memory[_param_76_{mode='constant', order=0, output='empty', output_shape=None, shape=(10, 20, 30), theta=0}]
FAILED tests/cupyx_tests/scipy_tests/ndimage_tests/test_interpolation.py::TestAffineTransformTextureMemory::test_affine_transform_texture_memory[_param_77_{mode='constant', order=0, output='empty', output_shape=None, shape=(10, 20, 30), theta=90}]
FAILED tests/cupyx_tests/scipy_tests/ndimage_tests/test_interpolation.py::TestAffineTransformTextureMemory::test_affine_transform_texture_memory[_param_78_{mode='constant', order=0, output='empty', output_shape=None, shape=(10, 20, 30), theta=180}]
FAILED tests/cupyx_tests/scipy_tests/ndimage_tests/test_interpolation.py::TestAffineTransformTextureMemory::test_affine_transform_texture_memory[_param_79_{mode='constant', order=0, output='empty', output_shape=None, shape=(10, 20, 30), theta=270}]
FAILED tests/cupyx_tests/scipy_tests/ndimage_tests/test_interpolation.py::TestAffineTransformTextureMemory::test_affine_transform_texture_memory[_param_96_{mode='constant', order=1, output=None, output_shape=None, shape=(100, 100), theta=0}]
FAILED tests/cupyx_tests/scipy_tests/ndimage_tests/test_interpolation.py::TestAffineTransformTextureMemory::test_affine_transform_texture_memory[_param_97_{mode='constant', order=1, output=None, output_shape=None, shape=(100, 100), theta=90}]
FAILED tests/cupyx_tests/scipy_tests/ndimage_tests/test_interpolation.py::TestAffineTransformTextureMemory::test_affine_transform_texture_memory[_param_98_{mode='constant', order=1, output=None, output_shape=None, shape=(100, 100), theta=180}]
FAILED tests/cupyx_tests/scipy_tests/ndimage_tests/test_interpolation.py::TestAffineTransformTextureMemory::test_affine_transform_texture_memory[_param_99_{mode='constant', order=1, output=None, output_shape=None, shape=(100, 100), theta=270}]
FAILED tests/cupyx_tests/scipy_tests/ndimage_tests/test_interpolation.py::TestAffineTransformTextureMemory::test_affine_transform_texture_memory[_param_100_{mode='constant', order=1, output=None, output_shape=None, shape=(10, 20), theta=0}]
FAILED tests/cupyx_tests/scipy_tests/ndimage_tests/test_interpolation.py::TestAffineTransformTextureMemory::test_affine_transform_texture_memory[_param_101_{mode='constant', order=1, output=None, output_shape=None, shape=(10, 20), theta=90}]
FAILED tests/cupyx_tests/scipy_tests/ndimage_tests/test_interpolation.py::TestAffineTransformTextureMemory::test_affine_transform_texture_memory[_param_102_{mode='constant', order=1, output=None, output_shape=None, shape=(10, 20), theta=180}]
FAILED tests/cupyx_tests/scipy_tests/ndimage_tests/test_interpolation.py::TestAffineTransformTextureMemory::test_affine_transform_texture_memory[_param_103_{mode='constant', order=1, output=None, output_shape=None, shape=(10, 20), theta=270}]
FAILED tests/cupyx_tests/scipy_tests/ndimage_tests/test_interpolation.py::TestAffineTransformTextureMemory::test_affine_transform_texture_memory[_param_104_{mode='constant', order=1, output=None, output_shape=None, shape=(10, 10, 10), theta=0}]
FAILED tests/cupyx_tests/scipy_tests/ndimage_tests/test_interpolation.py::TestAffineTransformTextureMemory::test_affine_transform_texture_memory[_param_105_{mode='constant', order=1, output=None, output_shape=None, shape=(10, 10, 10), theta=90}]
FAILED tests/cupyx_tests/scipy_tests/ndimage_tests/test_interpolation.py::TestAffineTransformTextureMemory::test_affine_transform_texture_memory[_param_106_{mode='constant', order=1, output=None, output_shape=None, shape=(10, 10, 10), theta=180}]
FAILED tests/cupyx_tests/scipy_tests/ndimage_tests/test_interpolation.py::TestAffineTransformTextureMemory::test_affine_transform_texture_memory[_param_107_{mode='constant', order=1, output=None, output_shape=None, shape=(10, 10, 10), theta=270}]
FAILED tests/cupyx_tests/scipy_tests/ndimage_tests/test_interpolation.py::TestAffineTransformTextureMemory::test_affine_transform_texture_memory[_param_108_{mode='constant', order=1, output=None, output_shape=None, shape=(10, 20, 30), theta=0}]
FAILED tests/cupyx_tests/scipy_tests/ndimage_tests/test_interpolation.py::TestAffineTransformTextureMemory::test_affine_transform_texture_memory[_param_109_{mode='constant', order=1, output=None, output_shape=None, shape=(10, 20, 30), theta=90}]
FAILED tests/cupyx_tests/scipy_tests/ndimage_tests/test_interpolation.py::TestAffineTransformTextureMemory::test_affine_transform_texture_memory[_param_110_{mode='constant', order=1, output=None, output_shape=None, shape=(10, 20, 30), theta=180}]
FAILED tests/cupyx_tests/scipy_tests/ndimage_tests/test_interpolation.py::TestAffineTransformTextureMemory::test_affine_transform_texture_memory[_param_111_{mode='constant', order=1, output=None, output_shape=None, shape=(10, 20, 30), theta=270}]
FAILED tests/cupyx_tests/scipy_tests/ndimage_tests/test_interpolation.py::TestAffineTransformTextureMemory::test_affine_transform_texture_memory[_param_112_{mode='constant', order=1, output=None, output_shape=10, shape=(100, 100), theta=0}]
FAILED tests/cupyx_tests/scipy_tests/ndimage_tests/test_interpolation.py::TestAffineTransformTextureMemory::test_affine_transform_texture_memory[_param_113_{mode='constant', order=1, output=None, output_shape=10, shape=(100, 100), theta=90}]
FAILED tests/cupyx_tests/scipy_tests/ndimage_tests/test_interpolation.py::TestAffineTransformTextureMemory::test_affine_transform_texture_memory[_param_114_{mode='constant', order=1, output=None, output_shape=10, shape=(100, 100), theta=180}]
FAILED tests/cupyx_tests/scipy_tests/ndimage_tests/test_interpolation.py::TestAffineTransformTextureMemory::test_affine_transform_texture_memory[_param_115_{mode='constant', order=1, output=None, output_shape=10, shape=(100, 100), theta=270}]
FAILED tests/cupyx_tests/scipy_tests/ndimage_tests/test_interpolation.py::TestAffineTransformTextureMemory::test_affine_transform_texture_memory[_param_116_{mode='constant', order=1, output=None, output_shape=10, shape=(10, 20), theta=0}]
FAILED tests/cupyx_tests/scipy_tests/ndimage_tests/test_interpolation.py::TestAffineTransformTextureMemory::test_affine_transform_texture_memory[_param_117_{mode='constant', order=1, output=None, output_shape=10, shape=(10, 20), theta=90}]
FAILED tests/cupyx_tests/scipy_tests/ndimage_tests/test_interpolation.py::TestAffineTransformTextureMemory::test_affine_transform_texture_memory[_param_118_{mode='constant', order=1, output=None, output_shape=10, shape=(10, 20), theta=180}]
FAILED tests/cupyx_tests/scipy_tests/ndimage_tests/test_interpolation.py::TestAffineTransformTextureMemory::test_affine_transform_texture_memory[_param_119_{mode='constant', order=1, output=None, output_shape=10, shape=(10, 20), theta=270}]
FAILED tests/cupyx_tests/scipy_tests/ndimage_tests/test_interpolation.py::TestAffineTransformTextureMemory::test_affine_transform_texture_memory[_param_120_{mode='constant', order=1, output=None, output_shape=10, shape=(10, 10, 10), theta=0}]
FAILED tests/cupyx_tests/scipy_tests/ndimage_tests/test_interpolation.py::TestAffineTransformTextureMemory::test_affine_transform_texture_memory[_param_121_{mode='constant', order=1, output=None, output_shape=10, shape=(10, 10, 10), theta=90}]
FAILED tests/cupyx_tests/scipy_tests/ndimage_tests/test_interpolation.py::TestAffineTransformTextureMemory::test_affine_transform_texture_memory[_param_122_{mode='constant', order=1, output=None, output_shape=10, shape=(10, 10, 10), theta=180}]
FAILED tests/cupyx_tests/scipy_tests/ndimage_tests/test_interpolation.py::TestAffineTransformTextureMemory::test_affine_transform_texture_memory[_param_123_{mode='constant', order=1, output=None, output_shape=10, shape=(10, 10, 10), theta=270}]
FAILED tests/cupyx_tests/scipy_tests/ndimage_tests/test_interpolation.py::TestAffineTransformTextureMemory::test_affine_transform_texture_memory[_param_124_{mode='constant', order=1, output=None, output_shape=10, shape=(10, 20, 30), theta=0}]
FAILED tests/cupyx_tests/scipy_tests/ndimage_tests/test_interpolation.py::TestAffineTransformTextureMemory::test_affine_transform_texture_memory[_param_125_{mode='constant', order=1, output=None, output_shape=10, shape=(10, 20, 30), theta=90}]
FAILED tests/cupyx_tests/scipy_tests/ndimage_tests/test_interpolation.py::TestAffineTransformTextureMemory::test_affine_transform_texture_memory[_param_126_{mode='constant', order=1, output=None, output_shape=10, shape=(10, 20, 30), theta=180}]
FAILED tests/cupyx_tests/scipy_tests/ndimage_tests/test_interpolation.py::TestAffineTransformTextureMemory::test_affine_transform_texture_memory[_param_127_{mode='constant', order=1, output=None, output_shape=10, shape=(10, 20, 30), theta=270}]
FAILED tests/cupyx_tests/scipy_tests/ndimage_tests/test_interpolation.py::TestAffineTransformTextureMemory::test_affine_transform_texture_memory[_param_128_{mode='constant', order=1, output=float32, output_shape=None, shape=(100, 100), theta=0}]
FAILED tests/cupyx_tests/scipy_tests/ndimage_tests/test_interpolation.py::TestAffineTransformTextureMemory::test_affine_transform_texture_memory[_param_129_{mode='constant', order=1, output=float32, output_shape=None, shape=(100, 100), theta=90}]
FAILED tests/cupyx_tests/scipy_tests/ndimage_tests/test_interpolation.py::TestAffineTransformTextureMemory::test_affine_transform_texture_memory[_param_130_{mode='constant', order=1, output=float32, output_shape=None, shape=(100, 100), theta=180}]
FAILED tests/cupyx_tests/scipy_tests/ndimage_tests/test_interpolation.py::TestAffineTransformTextureMemory::test_affine_transform_texture_memory[_param_131_{mode='constant', order=1, output=float32, output_shape=None, shape=(100, 100), theta=270}]
FAILED tests/cupyx_tests/scipy_tests/ndimage_tests/test_interpolation.py::TestAffineTransformTextureMemory::test_affine_transform_texture_memory[_param_132_{mode='constant', order=1, output=float32, output_shape=None, shape=(10, 20), theta=0}]
FAILED tests/cupyx_tests/scipy_tests/ndimage_tests/test_interpolation.py::TestAffineTransformTextureMemory::test_affine_transform_texture_memory[_param_133_{mode='constant', order=1, output=float32, output_shape=None, shape=(10, 20), theta=90}]
FAILED tests/cupyx_tests/scipy_tests/ndimage_tests/test_interpolation.py::TestAffineTransformTextureMemory::test_affine_transform_texture_memory[_param_134_{mode='constant', order=1, output=float32, output_shape=None, shape=(10, 20), theta=180}]
FAILED tests/cupyx_tests/scipy_tests/ndimage_tests/test_interpolation.py::TestAffineTransformTextureMemory::test_affine_transform_texture_memory[_param_135_{mode='constant', order=1, output=float32, output_shape=None, shape=(10, 20), theta=270}]
FAILED tests/cupyx_tests/scipy_tests/ndimage_tests/test_interpolation.py::TestAffineTransformTextureMemory::test_affine_transform_texture_memory[_param_136_{mode='constant', order=1, output=float32, output_shape=None, shape=(10, 10, 10), theta=0}]
FAILED tests/cupyx_tests/scipy_tests/ndimage_tests/test_interpolation.py::TestAffineTransformTextureMemory::test_affine_transform_texture_memory[_param_137_{mode='constant', order=1, output=float32, output_shape=None, shape=(10, 10, 10), theta=90}]
FAILED tests/cupyx_tests/scipy_tests/ndimage_tests/test_interpolation.py::TestAffineTransformTextureMemory::test_affine_transform_texture_memory[_param_138_{mode='constant', order=1, output=float32, output_shape=None, shape=(10, 10, 10), theta=180}]
FAILED tests/cupyx_tests/scipy_tests/ndimage_tests/test_interpolation.py::TestAffineTransformTextureMemory::test_affine_transform_texture_memory[_param_139_{mode='constant', order=1, output=float32, output_shape=None, shape=(10, 10, 10), theta=270}]
FAILED tests/cupyx_tests/scipy_tests/ndimage_tests/test_interpolation.py::TestAffineTransformTextureMemory::test_affine_transform_texture_memory[_param_140_{mode='constant', order=1, output=float32, output_shape=None, shape=(10, 20, 30), theta=0}]
FAILED tests/cupyx_tests/scipy_tests/ndimage_tests/test_interpolation.py::TestAffineTransformTextureMemory::test_affine_transform_texture_memory[_param_141_{mode='constant', order=1, output=float32, output_shape=None, shape=(10, 20, 30), theta=90}]
FAILED tests/cupyx_tests/scipy_tests/ndimage_tests/test_interpolation.py::TestAffineTransformTextureMemory::test_affine_transform_texture_memory[_param_142_{mode='constant', order=1, output=float32, output_shape=None, shape=(10, 20, 30), theta=180}]
FAILED tests/cupyx_tests/scipy_tests/ndimage_tests/test_interpolation.py::TestAffineTransformTextureMemory::test_affine_transform_texture_memory[_param_143_{mode='constant', order=1, output=float32, output_shape=None, shape=(10, 20, 30), theta=270}]
FAILED tests/cupyx_tests/scipy_tests/ndimage_tests/test_interpolation.py::TestAffineTransformTextureMemory::test_affine_transform_texture_memory[_param_144_{mode='constant', order=1, output=float32, output_shape=10, shape=(100, 100), theta=0}]
FAILED tests/cupyx_tests/scipy_tests/ndimage_tests/test_interpolation.py::TestAffineTransformTextureMemory::test_affine_transform_texture_memory[_param_145_{mode='constant', order=1, output=float32, output_shape=10, shape=(100, 100), theta=90}]
FAILED tests/cupyx_tests/scipy_tests/ndimage_tests/test_interpolation.py::TestAffineTransformTextureMemory::test_affine_transform_texture_memory[_param_146_{mode='constant', order=1, output=float32, output_shape=10, shape=(100, 100), theta=180}]
FAILED tests/cupyx_tests/scipy_tests/ndimage_tests/test_interpolation.py::TestAffineTransformTextureMemory::test_affine_transform_texture_memory[_param_147_{mode='constant', order=1, output=float32, output_shape=10, shape=(100, 100), theta=270}]
FAILED tests/cupyx_tests/scipy_tests/ndimage_tests/test_interpolation.py::TestAffineTransformTextureMemory::test_affine_transform_texture_memory[_param_148_{mode='constant', order=1, output=float32, output_shape=10, shape=(10, 20), theta=0}]
FAILED tests/cupyx_tests/scipy_tests/ndimage_tests/test_interpolation.py::TestAffineTransformTextureMemory::test_affine_transform_texture_memory[_param_149_{mode='constant', order=1, output=float32, output_shape=10, shape=(10, 20), theta=90}]
FAILED tests/cupyx_tests/scipy_tests/ndimage_tests/test_interpolation.py::TestAffineTransformTextureMemory::test_affine_transform_texture_memory[_param_150_{mode='constant', order=1, output=float32, output_shape=10, shape=(10, 20), theta=180}]
FAILED tests/cupyx_tests/scipy_tests/ndimage_tests/test_interpolation.py::TestAffineTransformTextureMemory::test_affine_transform_texture_memory[_param_151_{mode='constant', order=1, output=float32, output_shape=10, shape=(10, 20), theta=270}]
FAILED tests/cupyx_tests/scipy_tests/ndimage_tests/test_interpolation.py::TestAffineTransformTextureMemory::test_affine_transform_texture_memory[_param_152_{mode='constant', order=1, output=float32, output_shape=10, shape=(10, 10, 10), theta=0}]
FAILED tests/cupyx_tests/scipy_tests/ndimage_tests/test_interpolation.py::TestAffineTransformTextureMemory::test_affine_transform_texture_memory[_param_153_{mode='constant', order=1, output=float32, output_shape=10, shape=(10, 10, 10), theta=90}]
FAILED tests/cupyx_tests/scipy_tests/ndimage_tests/test_interpolation.py::TestAffineTransformTextureMemory::test_affine_transform_texture_memory[_param_154_{mode='constant', order=1, output=float32, output_shape=10, shape=(10, 10, 10), theta=180}]
FAILED tests/cupyx_tests/scipy_tests/ndimage_tests/test_interpolation.py::TestAffineTransformTextureMemory::test_affine_transform_texture_memory[_param_155_{mode='constant', order=1, output=float32, output_shape=10, shape=(10, 10, 10), theta=270}]
FAILED tests/cupyx_tests/scipy_tests/ndimage_tests/test_interpolation.py::TestAffineTransformTextureMemory::test_affine_transform_texture_memory[_param_156_{mode='constant', order=1, output=float32, output_shape=10, shape=(10, 20, 30), theta=0}]
FAILED tests/cupyx_tests/scipy_tests/ndimage_tests/test_interpolation.py::TestAffineTransformTextureMemory::test_affine_transform_texture_memory[_param_157_{mode='constant', order=1, output=float32, output_shape=10, shape=(10, 20, 30), theta=90}]
FAILED tests/cupyx_tests/scipy_tests/ndimage_tests/test_interpolation.py::TestAffineTransformTextureMemory::test_affine_transform_texture_memory[_param_158_{mode='constant', order=1, output=float32, output_shape=10, shape=(10, 20, 30), theta=180}]
FAILED tests/cupyx_tests/scipy_tests/ndimage_tests/test_interpolation.py::TestAffineTransformTextureMemory::test_affine_transform_texture_memory[_param_159_{mode='constant', order=1, output=float32, output_shape=10, shape=(10, 20, 30), theta=270}]
FAILED tests/cupyx_tests/scipy_tests/ndimage_tests/test_interpolation.py::TestAffineTransformTextureMemory::test_affine_transform_texture_memory[_param_160_{mode='constant', order=1, output='empty', output_shape=None, shape=(100, 100), theta=0}]
FAILED tests/cupyx_tests/scipy_tests/ndimage_tests/test_interpolation.py::TestAffineTransformTextureMemory::test_affine_transform_texture_memory[_param_161_{mode='constant', order=1, output='empty', output_shape=None, shape=(100, 100), theta=90}]
FAILED tests/cupyx_tests/scipy_tests/ndimage_tests/test_interpolation.py::TestAffineTransformTextureMemory::test_affine_transform_texture_memory[_param_162_{mode='constant', order=1, output='empty', output_shape=None, shape=(100, 100), theta=180}]
FAILED tests/cupyx_tests/scipy_tests/ndimage_tests/test_interpolation.py::TestAffineTransformTextureMemory::test_affine_transform_texture_memory[_param_163_{mode='constant', order=1, output='empty', output_shape=None, shape=(100, 100), theta=270}]
FAILED tests/cupyx_tests/scipy_tests/ndimage_tests/test_interpolation.py::TestAffineTransformTextureMemory::test_affine_transform_texture_memory[_param_164_{mode='constant', order=1, output='empty', output_shape=None, shape=(10, 20), theta=0}]
FAILED tests/cupyx_tests/scipy_tests/ndimage_tests/test_interpolation.py::TestAffineTransformTextureMemory::test_affine_transform_texture_memory[_param_165_{mode='constant', order=1, output='empty', output_shape=None, shape=(10, 20), theta=90}]
FAILED tests/cupyx_tests/scipy_tests/ndimage_tests/test_interpolation.py::TestAffineTransformTextureMemory::test_affine_transform_texture_memory[_param_166_{mode='constant', order=1, output='empty', output_shape=None, shape=(10, 20), theta=180}]
FAILED tests/cupyx_tests/scipy_tests/ndimage_tests/test_interpolation.py::TestAffineTransformTextureMemory::test_affine_transform_texture_memory[_param_167_{mode='constant', order=1, output='empty', output_shape=None, shape=(10, 20), theta=270}]
FAILED tests/cupyx_tests/scipy_tests/ndimage_tests/test_interpolation.py::TestAffineTransformTextureMemory::test_affine_transform_texture_memory[_param_168_{mode='constant', order=1, output='empty', output_shape=None, shape=(10, 10, 10), theta=0}]
FAILED tests/cupyx_tests/scipy_tests/ndimage_tests/test_interpolation.py::TestAffineTransformTextureMemory::test_affine_transform_texture_memory[_param_169_{mode='constant', order=1, output='empty', output_shape=None, shape=(10, 10, 10), theta=90}]
FAILED tests/cupyx_tests/scipy_tests/ndimage_tests/test_interpolation.py::TestAffineTransformTextureMemory::test_affine_transform_texture_memory[_param_170_{mode='constant', order=1, output='empty', output_shape=None, shape=(10, 10, 10), theta=180}]
FAILED tests/cupyx_tests/scipy_tests/ndimage_tests/test_interpolation.py::TestAffineTransformTextureMemory::test_affine_transform_texture_memory[_param_171_{mode='constant', order=1, output='empty', output_shape=None, shape=(10, 10, 10), theta=270}]
FAILED tests/cupyx_tests/scipy_tests/ndimage_tests/test_interpolation.py::TestAffineTransformTextureMemory::test_affine_transform_texture_memory[_param_172_{mode='constant', order=1, output='empty', output_shape=None, shape=(10, 20, 30), theta=0}]
FAILED tests/cupyx_tests/scipy_tests/ndimage_tests/test_interpolation.py::TestAffineTransformTextureMemory::test_affine_transform_texture_memory[_param_173_{mode='constant', order=1, output='empty', output_shape=None, shape=(10, 20, 30), theta=90}]
FAILED tests/cupyx_tests/scipy_tests/ndimage_tests/test_interpolation.py::TestAffineTransformTextureMemory::test_affine_transform_texture_memory[_param_174_{mode='constant', order=1, output='empty', output_shape=None, shape=(10, 20, 30), theta=180}]
FAILED tests/cupyx_tests/scipy_tests/ndimage_tests/test_interpolation.py::TestAffineTransformTextureMemory::test_affine_transform_texture_memory[_param_175_{mode='constant', order=1, output='empty', output_shape=None, shape=(10, 20, 30), theta=270}]
FAILED tests/cupyx_tests/scipy_tests/ndimage_tests/test_interpolation.py::TestAffineTransformTextureMemory::test_affine_transform_texture_memory[_param_192_{mode='nearest', order=0, output=None, output_shape=None, shape=(100, 100), theta=0}]
FAILED tests/cupyx_tests/scipy_tests/ndimage_tests/test_interpolation.py::TestAffineTransformTextureMemory::test_affine_transform_texture_memory[_param_193_{mode='nearest', order=0, output=None, output_shape=None, shape=(100, 100), theta=90}]
FAILED tests/cupyx_tests/scipy_tests/ndimage_tests/test_interpolation.py::TestAffineTransformTextureMemory::test_affine_transform_texture_memory[_param_194_{mode='nearest', order=0, output=None, output_shape=None, shape=(100, 100), theta=180}]
FAILED tests/cupyx_tests/scipy_tests/ndimage_tests/test_interpolation.py::TestAffineTransformTextureMemory::test_affine_transform_texture_memory[_param_195_{mode='nearest', order=0, output=None, output_shape=None, shape=(100, 100), theta=270}]
FAILED tests/cupyx_tests/scipy_tests/ndimage_tests/test_interpolation.py::TestAffineTransformTextureMemory::test_affine_transform_texture_memory[_param_196_{mode='nearest', order=0, output=None, output_shape=None, shape=(10, 20), theta=0}]
FAILED tests/cupyx_tests/scipy_tests/ndimage_tests/test_interpolation.py::TestAffineTransformTextureMemory::test_affine_transform_texture_memory[_param_197_{mode='nearest', order=0, output=None, output_shape=None, shape=(10, 20), theta=90}]
FAILED tests/cupyx_tests/scipy_tests/ndimage_tests/test_interpolation.py::TestAffineTransformTextureMemory::test_affine_transform_texture_memory[_param_198_{mode='nearest', order=0, output=None, output_shape=None, shape=(10, 20), theta=180}]
FAILED tests/cupyx_tests/scipy_tests/ndimage_tests/test_interpolation.py::TestAffineTransformTextureMemory::test_affine_transform_texture_memory[_param_199_{mode='nearest', order=0, output=None, output_shape=None, shape=(10, 20), theta=270}]
FAILED tests/cupyx_tests/scipy_tests/ndimage_tests/test_interpolation.py::TestAffineTransformTextureMemory::test_affine_transform_texture_memory[_param_200_{mode='nearest', order=0, output=None, output_shape=None, shape=(10, 10, 10), theta=0}]
FAILED tests/cupyx_tests/scipy_tests/ndimage_tests/test_interpolation.py::TestAffineTransformTextureMemory::test_affine_transform_texture_memory[_param_201_{mode='nearest', order=0, output=None, output_shape=None, shape=(10, 10, 10), theta=90}]
FAILED tests/cupyx_tests/scipy_tests/ndimage_tests/test_interpolation.py::TestAffineTransformTextureMemory::test_affine_transform_texture_memory[_param_202_{mode='nearest', order=0, output=None, output_shape=None, shape=(10, 10, 10), theta=180}]
FAILED tests/cupyx_tests/scipy_tests/ndimage_tests/test_interpolation.py::TestAffineTransformTextureMemory::test_affine_transform_texture_memory[_param_203_{mode='nearest', order=0, output=None, output_shape=None, shape=(10, 10, 10), theta=270}]
FAILED tests/cupyx_tests/scipy_tests/ndimage_tests/test_interpolation.py::TestAffineTransformTextureMemory::test_affine_transform_texture_memory[_param_204_{mode='nearest', order=0, output=None, output_shape=None, shape=(10, 20, 30), theta=0}]
FAILED tests/cupyx_tests/scipy_tests/ndimage_tests/test_interpolation.py::TestAffineTransformTextureMemory::test_affine_transform_texture_memory[_param_205_{mode='nearest', order=0, output=None, output_shape=None, shape=(10, 20, 30), theta=90}]
FAILED tests/cupyx_tests/scipy_tests/ndimage_tests/test_interpolation.py::TestAffineTransformTextureMemory::test_affine_transform_texture_memory[_param_206_{mode='nearest', order=0, output=None, output_shape=None, shape=(10, 20, 30), theta=180}]
FAILED tests/cupyx_tests/scipy_tests/ndimage_tests/test_interpolation.py::TestAffineTransformTextureMemory::test_affine_transform_texture_memory[_param_207_{mode='nearest', order=0, output=None, output_shape=None, shape=(10, 20, 30), theta=270}]
FAILED tests/cupyx_tests/scipy_tests/ndimage_tests/test_interpolation.py::TestAffineTransformTextureMemory::test_affine_transform_texture_memory[_param_208_{mode='nearest', order=0, output=None, output_shape=10, shape=(100, 100), theta=0}]
FAILED tests/cupyx_tests/scipy_tests/ndimage_tests/test_interpolation.py::TestAffineTransformTextureMemory::test_affine_transform_texture_memory[_param_209_{mode='nearest', order=0, output=None, output_shape=10, shape=(100, 100), theta=90}]
FAILED tests/cupyx_tests/scipy_tests/ndimage_tests/test_interpolation.py::TestAffineTransformTextureMemory::test_affine_transform_texture_memory[_param_210_{mode='nearest', order=0, output=None, output_shape=10, shape=(100, 100), theta=180}]
FAILED tests/cupyx_tests/scipy_tests/ndimage_tests/test_interpolation.py::TestAffineTransformTextureMemory::test_affine_transform_texture_memory[_param_211_{mode='nearest', order=0, output=None, output_shape=10, shape=(100, 100), theta=270}]
FAILED tests/cupyx_tests/scipy_tests/ndimage_tests/test_interpolation.py::TestAffineTransformTextureMemory::test_affine_transform_texture_memory[_param_212_{mode='nearest', order=0, output=None, output_shape=10, shape=(10, 20), theta=0}]
FAILED tests/cupyx_tests/scipy_tests/ndimage_tests/test_interpolation.py::TestAffineTransformTextureMemory::test_affine_transform_texture_memory[_param_213_{mode='nearest', order=0, output=None, output_shape=10, shape=(10, 20), theta=90}]
FAILED tests/cupyx_tests/scipy_tests/ndimage_tests/test_interpolation.py::TestAffineTransformTextureMemory::test_affine_transform_texture_memory[_param_214_{mode='nearest', order=0, output=None, output_shape=10, shape=(10, 20), theta=180}]
FAILED tests/cupyx_tests/scipy_tests/ndimage_tests/test_interpolation.py::TestAffineTransformTextureMemory::test_affine_transform_texture_memory[_param_215_{mode='nearest', order=0, output=None, output_shape=10, shape=(10, 20), theta=270}]
FAILED tests/cupyx_tests/scipy_tests/ndimage_tests/test_interpolation.py::TestAffineTransformTextureMemory::test_affine_transform_texture_memory[_param_216_{mode='nearest', order=0, output=None, output_shape=10, shape=(10, 10, 10), theta=0}]
FAILED tests/cupyx_tests/scipy_tests/ndimage_tests/test_interpolation.py::TestAffineTransformTextureMemory::test_affine_transform_texture_memory[_param_217_{mode='nearest', order=0, output=None, output_shape=10, shape=(10, 10, 10), theta=90}]
FAILED tests/cupyx_tests/scipy_tests/ndimage_tests/test_interpolation.py::TestAffineTransformTextureMemory::test_affine_transform_texture_memory[_param_218_{mode='nearest', order=0, output=None, output_shape=10, shape=(10, 10, 10), theta=180}]
FAILED tests/cupyx_tests/scipy_tests/ndimage_tests/test_interpolation.py::TestAffineTransformTextureMemory::test_affine_transform_texture_memory[_param_219_{mode='nearest', order=0, output=None, output_shape=10, shape=(10, 10, 10), theta=270}]
FAILED tests/cupyx_tests/scipy_tests/ndimage_tests/test_interpolation.py::TestAffineTransformTextureMemory::test_affine_transform_texture_memory[_param_220_{mode='nearest', order=0, output=None, output_shape=10, shape=(10, 20, 30), theta=0}]
FAILED tests/cupyx_tests/scipy_tests/ndimage_tests/test_interpolation.py::TestAffineTransformTextureMemory::test_affine_transform_texture_memory[_param_221_{mode='nearest', order=0, output=None, output_shape=10, shape=(10, 20, 30), theta=90}]
FAILED tests/cupyx_tests/scipy_tests/ndimage_tests/test_interpolation.py::TestAffineTransformTextureMemory::test_affine_transform_texture_memory[_param_222_{mode='nearest', order=0, output=None, output_shape=10, shape=(10, 20, 30), theta=180}]
FAILED tests/cupyx_tests/scipy_tests/ndimage_tests/test_interpolation.py::TestAffineTransformTextureMemory::test_affine_transform_texture_memory[_param_223_{mode='nearest', order=0, output=None, output_shape=10, shape=(10, 20, 30), theta=270}]
FAILED tests/cupyx_tests/scipy_tests/ndimage_tests/test_interpolation.py::TestAffineTransformTextureMemory::test_affine_transform_texture_memory[_param_224_{mode='nearest', order=0, output=float32, output_shape=None, shape=(100, 100), theta=0}]
FAILED tests/cupyx_tests/scipy_tests/ndimage_tests/test_interpolation.py::TestAffineTransformTextureMemory::test_affine_transform_texture_memory[_param_225_{mode='nearest', order=0, output=float32, output_shape=None, shape=(100, 100), theta=90}]
FAILED tests/cupyx_tests/scipy_tests/ndimage_tests/test_interpolation.py::TestAffineTransformTextureMemory::test_affine_transform_texture_memory[_param_226_{mode='nearest', order=0, output=float32, output_shape=None, shape=(100, 100), theta=180}]
FAILED tests/cupyx_tests/scipy_tests/ndimage_tests/test_interpolation.py::TestAffineTransformTextureMemory::test_affine_transform_texture_memory[_param_227_{mode='nearest', order=0, output=float32, output_shape=None, shape=(100, 100), theta=270}]
FAILED tests/cupyx_tests/scipy_tests/ndimage_tests/test_interpolation.py::TestAffineTransformTextureMemory::test_affine_transform_texture_memory[_param_228_{mode='nearest', order=0, output=float32, output_shape=None, shape=(10, 20), theta=0}]
FAILED tests/cupyx_tests/scipy_tests/ndimage_tests/test_interpolation.py::TestAffineTransformTextureMemory::test_affine_transform_texture_memory[_param_229_{mode='nearest', order=0, output=float32, output_shape=None, shape=(10, 20), theta=90}]
FAILED tests/cupyx_tests/scipy_tests/ndimage_tests/test_interpolation.py::TestAffineTransformTextureMemory::test_affine_transform_texture_memory[_param_230_{mode='nearest', order=0, output=float32, output_shape=None, shape=(10, 20), theta=180}]
FAILED tests/cupyx_tests/scipy_tests/ndimage_tests/test_interpolation.py::TestAffineTransformTextureMemory::test_affine_transform_texture_memory[_param_231_{mode='nearest', order=0, output=float32, output_shape=None, shape=(10, 20), theta=270}]
FAILED tests/cupyx_tests/scipy_tests/ndimage_tests/test_interpolation.py::TestAffineTransformTextureMemory::test_affine_transform_texture_memory[_param_232_{mode='nearest', order=0, output=float32, output_shape=None, shape=(10, 10, 10), theta=0}]
FAILED tests/cupyx_tests/scipy_tests/ndimage_tests/test_interpolation.py::TestAffineTransformTextureMemory::test_affine_transform_texture_memory[_param_233_{mode='nearest', order=0, output=float32, output_shape=None, shape=(10, 10, 10), theta=90}]
FAILED tests/cupyx_tests/scipy_tests/ndimage_tests/test_interpolation.py::TestAffineTransformTextureMemory::test_affine_transform_texture_memory[_param_234_{mode='nearest', order=0, output=float32, output_shape=None, shape=(10, 10, 10), theta=180}]
FAILED tests/cupyx_tests/scipy_tests/ndimage_tests/test_interpolation.py::TestAffineTransformTextureMemory::test_affine_transform_texture_memory[_param_235_{mode='nearest', order=0, output=float32, output_shape=None, shape=(10, 10, 10), theta=270}]
FAILED tests/cupyx_tests/scipy_tests/ndimage_tests/test_interpolation.py::TestAffineTransformTextureMemory::test_affine_transform_texture_memory[_param_236_{mode='nearest', order=0, output=float32, output_shape=None, shape=(10, 20, 30), theta=0}]
FAILED tests/cupyx_tests/scipy_tests/ndimage_tests/test_interpolation.py::TestAffineTransformTextureMemory::test_affine_transform_texture_memory[_param_237_{mode='nearest', order=0, output=float32, output_shape=None, shape=(10, 20, 30), theta=90}]
FAILED tests/cupyx_tests/scipy_tests/ndimage_tests/test_interpolation.py::TestAffineTransformTextureMemory::test_affine_transform_texture_memory[_param_238_{mode='nearest', order=0, output=float32, output_shape=None, shape=(10, 20, 30), theta=180}]
FAILED tests/cupyx_tests/scipy_tests/ndimage_tests/test_interpolation.py::TestAffineTransformTextureMemory::test_affine_transform_texture_memory[_param_239_{mode='nearest', order=0, output=float32, output_shape=None, shape=(10, 20, 30), theta=270}]
FAILED tests/cupyx_tests/scipy_tests/ndimage_tests/test_interpolation.py::TestAffineTransformTextureMemory::test_affine_transform_texture_memory[_param_240_{mode='nearest', order=0, output=float32, output_shape=10, shape=(100, 100), theta=0}]
FAILED tests/cupyx_tests/scipy_tests/ndimage_tests/test_interpolation.py::TestAffineTransformTextureMemory::test_affine_transform_texture_memory[_param_241_{mode='nearest', order=0, output=float32, output_shape=10, shape=(100, 100), theta=90}]
FAILED tests/cupyx_tests/scipy_tests/ndimage_tests/test_interpolation.py::TestAffineTransformTextureMemory::test_affine_transform_texture_memory[_param_242_{mode='nearest', order=0, output=float32, output_shape=10, shape=(100, 100), theta=180}]
FAILED tests/cupyx_tests/scipy_tests/ndimage_tests/test_interpolation.py::TestAffineTransformTextureMemory::test_affine_transform_texture_memory[_param_243_{mode='nearest', order=0, output=float32, output_shape=10, shape=(100, 100), theta=270}]
FAILED tests/cupyx_tests/scipy_tests/ndimage_tests/test_interpolation.py::TestAffineTransformTextureMemory::test_affine_transform_texture_memory[_param_244_{mode='nearest', order=0, output=float32, output_shape=10, shape=(10, 20), theta=0}]
FAILED tests/cupyx_tests/scipy_tests/ndimage_tests/test_interpolation.py::TestAffineTransformTextureMemory::test_affine_transform_texture_memory[_param_245_{mode='nearest', order=0, output=float32, output_shape=10, shape=(10, 20), theta=90}]
FAILED tests/cupyx_tests/scipy_tests/ndimage_tests/test_interpolation.py::TestAffineTransformTextureMemory::test_affine_transform_texture_memory[_param_246_{mode='nearest', order=0, output=float32, output_shape=10, shape=(10, 20), theta=180}]
FAILED tests/cupyx_tests/scipy_tests/ndimage_tests/test_interpolation.py::TestAffineTransformTextureMemory::test_affine_transform_texture_memory[_param_247_{mode='nearest', order=0, output=float32, output_shape=10, shape=(10, 20), theta=270}]
FAILED tests/cupyx_tests/scipy_tests/ndimage_tests/test_interpolation.py::TestAffineTransformTextureMemory::test_affine_transform_texture_memory[_param_248_{mode='nearest', order=0, output=float32, output_shape=10, shape=(10, 10, 10), theta=0}]
FAILED tests/cupyx_tests/scipy_tests/ndimage_tests/test_interpolation.py::TestAffineTransformTextureMemory::test_affine_transform_texture_memory[_param_249_{mode='nearest', order=0, output=float32, output_shape=10, shape=(10, 10, 10), theta=90}]
FAILED tests/cupyx_tests/scipy_tests/ndimage_tests/test_interpolation.py::TestAffineTransformTextureMemory::test_affine_transform_texture_memory[_param_250_{mode='nearest', order=0, output=float32, output_shape=10, shape=(10, 10, 10), theta=180}]
FAILED tests/cupyx_tests/scipy_tests/ndimage_tests/test_interpolation.py::TestAffineTransformTextureMemory::test_affine_transform_texture_memory[_param_251_{mode='nearest', order=0, output=float32, output_shape=10, shape=(10, 10, 10), theta=270}]
FAILED tests/cupyx_tests/scipy_tests/ndimage_tests/test_interpolation.py::TestAffineTransformTextureMemory::test_affine_transform_texture_memory[_param_252_{mode='nearest', order=0, output=float32, output_shape=10, shape=(10, 20, 30), theta=0}]
FAILED tests/cupyx_tests/scipy_tests/ndimage_tests/test_interpolation.py::TestAffineTransformTextureMemory::test_affine_transform_texture_memory[_param_253_{mode='nearest', order=0, output=float32, output_shape=10, shape=(10, 20, 30), theta=90}]
FAILED tests/cupyx_tests/scipy_tests/ndimage_tests/test_interpolation.py::TestAffineTransformTextureMemory::test_affine_transform_texture_memory[_param_254_{mode='nearest', order=0, output=float32, output_shape=10, shape=(10, 20, 30), theta=180}]
FAILED tests/cupyx_tests/scipy_tests/ndimage_tests/test_interpolation.py::TestAffineTransformTextureMemory::test_affine_transform_texture_memory[_param_255_{mode='nearest', order=0, output=float32, output_shape=10, shape=(10, 20, 30), theta=270}]
FAILED tests/cupyx_tests/scipy_tests/ndimage_tests/test_interpolation.py::TestAffineTransformTextureMemory::test_affine_transform_texture_memory[_param_256_{mode='nearest', order=0, output='empty', output_shape=None, shape=(100, 100), theta=0}]
FAILED tests/cupyx_tests/scipy_tests/ndimage_tests/test_interpolation.py::TestAffineTransformTextureMemory::test_affine_transform_texture_memory[_param_257_{mode='nearest', order=0, output='empty', output_shape=None, shape=(100, 100), theta=90}]
FAILED tests/cupyx_tests/scipy_tests/ndimage_tests/test_interpolation.py::TestAffineTransformTextureMemory::test_affine_transform_texture_memory[_param_258_{mode='nearest', order=0, output='empty', output_shape=None, shape=(100, 100), theta=180}]
FAILED tests/cupyx_tests/scipy_tests/ndimage_tests/test_interpolation.py::TestAffineTransformTextureMemory::test_affine_transform_texture_memory[_param_259_{mode='nearest', order=0, output='empty', output_shape=None, shape=(100, 100), theta=270}]
FAILED tests/cupyx_tests/scipy_tests/ndimage_tests/test_interpolation.py::TestAffineTransformTextureMemory::test_affine_transform_texture_memory[_param_260_{mode='nearest', order=0, output='empty', output_shape=None, shape=(10, 20), theta=0}]
FAILED tests/cupyx_tests/scipy_tests/ndimage_tests/test_interpolation.py::TestAffineTransformTextureMemory::test_affine_transform_texture_memory[_param_261_{mode='nearest', order=0, output='empty', output_shape=None, shape=(10, 20), theta=90}]
FAILED tests/cupyx_tests/scipy_tests/ndimage_tests/test_interpolation.py::TestAffineTransformTextureMemory::test_affine_transform_texture_memory[_param_262_{mode='nearest', order=0, output='empty', output_shape=None, shape=(10, 20), theta=180}]
FAILED tests/cupyx_tests/scipy_tests/ndimage_tests/test_interpolation.py::TestAffineTransformTextureMemory::test_affine_transform_texture_memory[_param_263_{mode='nearest', order=0, output='empty', output_shape=None, shape=(10, 20), theta=270}]
FAILED tests/cupyx_tests/scipy_tests/ndimage_tests/test_interpolation.py::TestAffineTransformTextureMemory::test_affine_transform_texture_memory[_param_264_{mode='nearest', order=0, output='empty', output_shape=None, shape=(10, 10, 10), theta=0}]
FAILED tests/cupyx_tests/scipy_tests/ndimage_tests/test_interpolation.py::TestAffineTransformTextureMemory::test_affine_transform_texture_memory[_param_265_{mode='nearest', order=0, output='empty', output_shape=None, shape=(10, 10, 10), theta=90}]
FAILED tests/cupyx_tests/scipy_tests/ndimage_tests/test_interpolation.py::TestAffineTransformTextureMemory::test_affine_transform_texture_memory[_param_266_{mode='nearest', order=0, output='empty', output_shape=None, shape=(10, 10, 10), theta=180}]
FAILED tests/cupyx_tests/scipy_tests/ndimage_tests/test_interpolation.py::TestAffineTransformTextureMemory::test_affine_transform_texture_memory[_param_267_{mode='nearest', order=0, output='empty', output_shape=None, shape=(10, 10, 10), theta=270}]
FAILED tests/cupyx_tests/scipy_tests/ndimage_tests/test_interpolation.py::TestAffineTransformTextureMemory::test_affine_transform_texture_memory[_param_268_{mode='nearest', order=0, output='empty', output_shape=None, shape=(10, 20, 30), theta=0}]
FAILED tests/cupyx_tests/scipy_tests/ndimage_tests/test_interpolation.py::TestAffineTransformTextureMemory::test_affine_transform_texture_memory[_param_269_{mode='nearest', order=0, output='empty', output_shape=None, shape=(10, 20, 30), theta=90}]
FAILED tests/cupyx_tests/scipy_tests/ndimage_tests/test_interpolation.py::TestAffineTransformTextureMemory::test_affine_transform_texture_memory[_param_270_{mode='nearest', order=0, output='empty', output_shape=None, shape=(10, 20, 30), theta=180}]
FAILED tests/cupyx_tests/scipy_tests/ndimage_tests/test_interpolation.py::TestAffineTransformTextureMemory::test_affine_transform_texture_memory[_param_271_{mode='nearest', order=0, output='empty', output_shape=None, shape=(10, 20, 30), theta=270}]
FAILED tests/cupyx_tests/scipy_tests/ndimage_tests/test_interpolation.py::TestAffineTransformTextureMemory::test_affine_transform_texture_memory[_param_288_{mode='nearest', order=1, output=None, output_shape=None, shape=(100, 100), theta=0}]
FAILED tests/cupyx_tests/scipy_tests/ndimage_tests/test_interpolation.py::TestAffineTransformTextureMemory::test_affine_transform_texture_memory[_param_289_{mode='nearest', order=1, output=None, output_shape=None, shape=(100, 100), theta=90}]
FAILED tests/cupyx_tests/scipy_tests/ndimage_tests/test_interpolation.py::TestAffineTransformTextureMemory::test_affine_transform_texture_memory[_param_290_{mode='nearest', order=1, output=None, output_shape=None, shape=(100, 100), theta=180}]
FAILED tests/cupyx_tests/scipy_tests/ndimage_tests/test_interpolation.py::TestAffineTransformTextureMemory::test_affine_transform_texture_memory[_param_291_{mode='nearest', order=1, output=None, output_shape=None, shape=(100, 100), theta=270}]
FAILED tests/cupyx_tests/scipy_tests/ndimage_tests/test_interpolation.py::TestAffineTransformTextureMemory::test_affine_transform_texture_memory[_param_292_{mode='nearest', order=1, output=None, output_shape=None, shape=(10, 20), theta=0}]
FAILED tests/cupyx_tests/scipy_tests/ndimage_tests/test_interpolation.py::TestAffineTransformTextureMemory::test_affine_transform_texture_memory[_param_293_{mode='nearest', order=1, output=None, output_shape=None, shape=(10, 20), theta=90}]
FAILED tests/cupyx_tests/scipy_tests/ndimage_tests/test_interpolation.py::TestAffineTransformTextureMemory::test_affine_transform_texture_memory[_param_294_{mode='nearest', order=1, output=None, output_shape=None, shape=(10, 20), theta=180}]
FAILED tests/cupyx_tests/scipy_tests/ndimage_tests/test_interpolation.py::TestAffineTransformTextureMemory::test_affine_transform_texture_memory[_param_295_{mode='nearest', order=1, output=None, output_shape=None, shape=(10, 20), theta=270}]
FAILED tests/cupyx_tests/scipy_tests/ndimage_tests/test_interpolation.py::TestAffineTransformTextureMemory::test_affine_transform_texture_memory[_param_296_{mode='nearest', order=1, output=None, output_shape=None, shape=(10, 10, 10), theta=0}]
FAILED tests/cupyx_tests/scipy_tests/ndimage_tests/test_interpolation.py::TestAffineTransformTextureMemory::test_affine_transform_texture_memory[_param_297_{mode='nearest', order=1, output=None, output_shape=None, shape=(10, 10, 10), theta=90}]
FAILED tests/cupyx_tests/scipy_tests/ndimage_tests/test_interpolation.py::TestAffineTransformTextureMemory::test_affine_transform_texture_memory[_param_298_{mode='nearest', order=1, output=None, output_shape=None, shape=(10, 10, 10), theta=180}]
FAILED tests/cupyx_tests/scipy_tests/ndimage_tests/test_interpolation.py::TestAffineTransformTextureMemory::test_affine_transform_texture_memory[_param_299_{mode='nearest', order=1, output=None, output_shape=None, shape=(10, 10, 10), theta=270}]
FAILED tests/cupyx_tests/scipy_tests/ndimage_tests/test_interpolation.py::TestAffineTransformTextureMemory::test_affine_transform_texture_memory[_param_300_{mode='nearest', order=1, output=None, output_shape=None, shape=(10, 20, 30), theta=0}]
FAILED tests/cupyx_tests/scipy_tests/ndimage_tests/test_interpolation.py::TestAffineTransformTextureMemory::test_affine_transform_texture_memory[_param_301_{mode='nearest', order=1, output=None, output_shape=None, shape=(10, 20, 30), theta=90}]
FAILED tests/cupyx_tests/scipy_tests/ndimage_tests/test_interpolation.py::TestAffineTransformTextureMemory::test_affine_transform_texture_memory[_param_302_{mode='nearest', order=1, output=None, output_shape=None, shape=(10, 20, 30), theta=180}]
FAILED tests/cupyx_tests/scipy_tests/ndimage_tests/test_interpolation.py::TestAffineTransformTextureMemory::test_affine_transform_texture_memory[_param_303_{mode='nearest', order=1, output=None, output_shape=None, shape=(10, 20, 30), theta=270}]
FAILED tests/cupyx_tests/scipy_tests/ndimage_tests/test_interpolation.py::TestAffineTransformTextureMemory::test_affine_transform_texture_memory[_param_304_{mode='nearest', order=1, output=None, output_shape=10, shape=(100, 100), theta=0}]
FAILED tests/cupyx_tests/scipy_tests/ndimage_tests/test_interpolation.py::TestAffineTransformTextureMemory::test_affine_transform_texture_memory[_param_305_{mode='nearest', order=1, output=None, output_shape=10, shape=(100, 100), theta=90}]
FAILED tests/cupyx_tests/scipy_tests/ndimage_tests/test_interpolation.py::TestAffineTransformTextureMemory::test_affine_transform_texture_memory[_param_306_{mode='nearest', order=1, output=None, output_shape=10, shape=(100, 100), theta=180}]
FAILED tests/cupyx_tests/scipy_tests/ndimage_tests/test_interpolation.py::TestAffineTransformTextureMemory::test_affine_transform_texture_memory[_param_307_{mode='nearest', order=1, output=None, output_shape=10, shape=(100, 100), theta=270}]
FAILED tests/cupyx_tests/scipy_tests/ndimage_tests/test_interpolation.py::TestAffineTransformTextureMemory::test_affine_transform_texture_memory[_param_308_{mode='nearest', order=1, output=None, output_shape=10, shape=(10, 20), theta=0}]
FAILED tests/cupyx_tests/scipy_tests/ndimage_tests/test_interpolation.py::TestAffineTransformTextureMemory::test_affine_transform_texture_memory[_param_309_{mode='nearest', order=1, output=None, output_shape=10, shape=(10, 20), theta=90}]
FAILED tests/cupyx_tests/scipy_tests/ndimage_tests/test_interpolation.py::TestAffineTransformTextureMemory::test_affine_transform_texture_memory[_param_310_{mode='nearest', order=1, output=None, output_shape=10, shape=(10, 20), theta=180}]
FAILED tests/cupyx_tests/scipy_tests/ndimage_tests/test_interpolation.py::TestAffineTransformTextureMemory::test_affine_transform_texture_memory[_param_311_{mode='nearest', order=1, output=None, output_shape=10, shape=(10, 20), theta=270}]
FAILED tests/cupyx_tests/scipy_tests/ndimage_tests/test_interpolation.py::TestAffineTransformTextureMemory::test_affine_transform_texture_memory[_param_312_{mode='nearest', order=1, output=None, output_shape=10, shape=(10, 10, 10), theta=0}]
FAILED tests/cupyx_tests/scipy_tests/ndimage_tests/test_interpolation.py::TestAffineTransformTextureMemory::test_affine_transform_texture_memory[_param_313_{mode='nearest', order=1, output=None, output_shape=10, shape=(10, 10, 10), theta=90}]
FAILED tests/cupyx_tests/scipy_tests/ndimage_tests/test_interpolation.py::TestAffineTransformTextureMemory::test_affine_transform_texture_memory[_param_314_{mode='nearest', order=1, output=None, output_shape=10, shape=(10, 10, 10), theta=180}]
FAILED tests/cupyx_tests/scipy_tests/ndimage_tests/test_interpolation.py::TestAffineTransformTextureMemory::test_affine_transform_texture_memory[_param_315_{mode='nearest', order=1, output=None, output_shape=10, shape=(10, 10, 10), theta=270}]
FAILED tests/cupyx_tests/scipy_tests/ndimage_tests/test_interpolation.py::TestAffineTransformTextureMemory::test_affine_transform_texture_memory[_param_316_{mode='nearest', order=1, output=None, output_shape=10, shape=(10, 20, 30), theta=0}]
FAILED tests/cupyx_tests/scipy_tests/ndimage_tests/test_interpolation.py::TestAffineTransformTextureMemory::test_affine_transform_texture_memory[_param_317_{mode='nearest', order=1, output=None, output_shape=10, shape=(10, 20, 30), theta=90}]
FAILED tests/cupyx_tests/scipy_tests/ndimage_tests/test_interpolation.py::TestAffineTransformTextureMemory::test_affine_transform_texture_memory[_param_318_{mode='nearest', order=1, output=None, output_shape=10, shape=(10, 20, 30), theta=180}]
FAILED tests/cupyx_tests/scipy_tests/ndimage_tests/test_interpolation.py::TestAffineTransformTextureMemory::test_affine_transform_texture_memory[_param_319_{mode='nearest', order=1, output=None, output_shape=10, shape=(10, 20, 30), theta=270}]
FAILED tests/cupyx_tests/scipy_tests/ndimage_tests/test_interpolation.py::TestAffineTransformTextureMemory::test_affine_transform_texture_memory[_param_320_{mode='nearest', order=1, output=float32, output_shape=None, shape=(100, 100), theta=0}]
FAILED tests/cupyx_tests/scipy_tests/ndimage_tests/test_interpolation.py::TestAffineTransformTextureMemory::test_affine_transform_texture_memory[_param_321_{mode='nearest', order=1, output=float32, output_shape=None, shape=(100, 100), theta=90}]
FAILED tests/cupyx_tests/scipy_tests/ndimage_tests/test_interpolation.py::TestAffineTransformTextureMemory::test_affine_transform_texture_memory[_param_322_{mode='nearest', order=1, output=float32, output_shape=None, shape=(100, 100), theta=180}]
FAILED tests/cupyx_tests/scipy_tests/ndimage_tests/test_interpolation.py::TestAffineTransformTextureMemory::test_affine_transform_texture_memory[_param_323_{mode='nearest', order=1, output=float32, output_shape=None, shape=(100, 100), theta=270}]
FAILED tests/cupyx_tests/scipy_tests/ndimage_tests/test_interpolation.py::TestAffineTransformTextureMemory::test_affine_transform_texture_memory[_param_324_{mode='nearest', order=1, output=float32, output_shape=None, shape=(10, 20), theta=0}]
FAILED tests/cupyx_tests/scipy_tests/ndimage_tests/test_interpolation.py::TestAffineTransformTextureMemory::test_affine_transform_texture_memory[_param_325_{mode='nearest', order=1, output=float32, output_shape=None, shape=(10, 20), theta=90}]
FAILED tests/cupyx_tests/scipy_tests/ndimage_tests/test_interpolation.py::TestAffineTransformTextureMemory::test_affine_transform_texture_memory[_param_326_{mode='nearest', order=1, output=float32, output_shape=None, shape=(10, 20), theta=180}]
FAILED tests/cupyx_tests/scipy_tests/ndimage_tests/test_interpolation.py::TestAffineTransformTextureMemory::test_affine_transform_texture_memory[_param_327_{mode='nearest', order=1, output=float32, output_shape=None, shape=(10, 20), theta=270}]
FAILED tests/cupyx_tests/scipy_tests/ndimage_tests/test_interpolation.py::TestAffineTransformTextureMemory::test_affine_transform_texture_memory[_param_328_{mode='nearest', order=1, output=float32, output_shape=None, shape=(10, 10, 10), theta=0}]
FAILED tests/cupyx_tests/scipy_tests/ndimage_tests/test_interpolation.py::TestAffineTransformTextureMemory::test_affine_transform_texture_memory[_param_329_{mode='nearest', order=1, output=float32, output_shape=None, shape=(10, 10, 10), theta=90}]
FAILED tests/cupyx_tests/scipy_tests/ndimage_tests/test_interpolation.py::TestAffineTransformTextureMemory::test_affine_transform_texture_memory[_param_330_{mode='nearest', order=1, output=float32, output_shape=None, shape=(10, 10, 10), theta=180}]
FAILED tests/cupyx_tests/scipy_tests/ndimage_tests/test_interpolation.py::TestAffineTransformTextureMemory::test_affine_transform_texture_memory[_param_331_{mode='nearest', order=1, output=float32, output_shape=None, shape=(10, 10, 10), theta=270}]
FAILED tests/cupyx_tests/scipy_tests/ndimage_tests/test_interpolation.py::TestAffineTransformTextureMemory::test_affine_transform_texture_memory[_param_332_{mode='nearest', order=1, output=float32, output_shape=None, shape=(10, 20, 30), theta=0}]
FAILED tests/cupyx_tests/scipy_tests/ndimage_tests/test_interpolation.py::TestAffineTransformTextureMemory::test_affine_transform_texture_memory[_param_333_{mode='nearest', order=1, output=float32, output_shape=None, shape=(10, 20, 30), theta=90}]
FAILED tests/cupyx_tests/scipy_tests/ndimage_tests/test_interpolation.py::TestAffineTransformTextureMemory::test_affine_transform_texture_memory[_param_334_{mode='nearest', order=1, output=float32, output_shape=None, shape=(10, 20, 30), theta=180}]
FAILED tests/cupyx_tests/scipy_tests/ndimage_tests/test_interpolation.py::TestAffineTransformTextureMemory::test_affine_transform_texture_memory[_param_335_{mode='nearest', order=1, output=float32, output_shape=None, shape=(10, 20, 30), theta=270}]
FAILED tests/cupyx_tests/scipy_tests/ndimage_tests/test_interpolation.py::TestAffineTransformTextureMemory::test_affine_transform_texture_memory[_param_336_{mode='nearest', order=1, output=float32, output_shape=10, shape=(100, 100), theta=0}]
FAILED tests/cupyx_tests/scipy_tests/ndimage_tests/test_interpolation.py::TestAffineTransformTextureMemory::test_affine_transform_texture_memory[_param_337_{mode='nearest', order=1, output=float32, output_shape=10, shape=(100, 100), theta=90}]
FAILED tests/cupyx_tests/scipy_tests/ndimage_tests/test_interpolation.py::TestAffineTransformTextureMemory::test_affine_transform_texture_memory[_param_338_{mode='nearest', order=1, output=float32, output_shape=10, shape=(100, 100), theta=180}]
FAILED tests/cupyx_tests/scipy_tests/ndimage_tests/test_interpolation.py::TestAffineTransformTextureMemory::test_affine_transform_texture_memory[_param_339_{mode='nearest', order=1, output=float32, output_shape=10, shape=(100, 100), theta=270}]
FAILED tests/cupyx_tests/scipy_tests/ndimage_tests/test_interpolation.py::TestAffineTransformTextureMemory::test_affine_transform_texture_memory[_param_340_{mode='nearest', order=1, output=float32, output_shape=10, shape=(10, 20), theta=0}]
FAILED tests/cupyx_tests/scipy_tests/ndimage_tests/test_interpolation.py::TestAffineTransformTextureMemory::test_affine_transform_texture_memory[_param_341_{mode='nearest', order=1, output=float32, output_shape=10, shape=(10, 20), theta=90}]
FAILED tests/cupyx_tests/scipy_tests/ndimage_tests/test_interpolation.py::TestAffineTransformTextureMemory::test_affine_transform_texture_memory[_param_342_{mode='nearest', order=1, output=float32, output_shape=10, shape=(10, 20), theta=180}]
FAILED tests/cupyx_tests/scipy_tests/ndimage_tests/test_interpolation.py::TestAffineTransformTextureMemory::test_affine_transform_texture_memory[_param_343_{mode='nearest', order=1, output=float32, output_shape=10, shape=(10, 20), theta=270}]
FAILED tests/cupyx_tests/scipy_tests/ndimage_tests/test_interpolation.py::TestAffineTransformTextureMemory::test_affine_transform_texture_memory[_param_344_{mode='nearest', order=1, output=float32, output_shape=10, shape=(10, 10, 10), theta=0}]
FAILED tests/cupyx_tests/scipy_tests/ndimage_tests/test_interpolation.py::TestAffineTransformTextureMemory::test_affine_transform_texture_memory[_param_345_{mode='nearest', order=1, output=float32, output_shape=10, shape=(10, 10, 10), theta=90}]
FAILED tests/cupyx_tests/scipy_tests/ndimage_tests/test_interpolation.py::TestAffineTransformTextureMemory::test_affine_transform_texture_memory[_param_346_{mode='nearest', order=1, output=float32, output_shape=10, shape=(10, 10, 10), theta=180}]
FAILED tests/cupyx_tests/scipy_tests/ndimage_tests/test_interpolation.py::TestAffineTransformTextureMemory::test_affine_transform_texture_memory[_param_347_{mode='nearest', order=1, output=float32, output_shape=10, shape=(10, 10, 10), theta=270}]
FAILED tests/cupyx_tests/scipy_tests/ndimage_tests/test_interpolation.py::TestAffineTransformTextureMemory::test_affine_transform_texture_memory[_param_348_{mode='nearest', order=1, output=float32, output_shape=10, shape=(10, 20, 30), theta=0}]
FAILED tests/cupyx_tests/scipy_tests/ndimage_tests/test_interpolation.py::TestAffineTransformTextureMemory::test_affine_transform_texture_memory[_param_349_{mode='nearest', order=1, output=float32, output_shape=10, shape=(10, 20, 30), theta=90}]
FAILED tests/cupyx_tests/scipy_tests/ndimage_tests/test_interpolation.py::TestAffineTransformTextureMemory::test_affine_transform_texture_memory[_param_350_{mode='nearest', order=1, output=float32, output_shape=10, shape=(10, 20, 30), theta=180}]
FAILED tests/cupyx_tests/scipy_tests/ndimage_tests/test_interpolation.py::TestAffineTransformTextureMemory::test_affine_transform_texture_memory[_param_351_{mode='nearest', order=1, output=float32, output_shape=10, shape=(10, 20, 30), theta=270}]
FAILED tests/cupyx_tests/scipy_tests/ndimage_tests/test_interpolation.py::TestAffineTransformTextureMemory::test_affine_transform_texture_memory[_param_352_{mode='nearest', order=1, output='empty', output_shape=None, shape=(100, 100), theta=0}]
FAILED tests/cupyx_tests/scipy_tests/ndimage_tests/test_interpolation.py::TestAffineTransformTextureMemory::test_affine_transform_texture_memory[_param_353_{mode='nearest', order=1, output='empty', output_shape=None, shape=(100, 100), theta=90}]
FAILED tests/cupyx_tests/scipy_tests/ndimage_tests/test_interpolation.py::TestAffineTransformTextureMemory::test_affine_transform_texture_memory[_param_354_{mode='nearest', order=1, output='empty', output_shape=None, shape=(100, 100), theta=180}]
FAILED tests/cupyx_tests/scipy_tests/ndimage_tests/test_interpolation.py::TestAffineTransformTextureMemory::test_affine_transform_texture_memory[_param_355_{mode='nearest', order=1, output='empty', output_shape=None, shape=(100, 100), theta=270}]
FAILED tests/cupyx_tests/scipy_tests/ndimage_tests/test_interpolation.py::TestAffineTransformTextureMemory::test_affine_transform_texture_memory[_param_356_{mode='nearest', order=1, output='empty', output_shape=None, shape=(10, 20), theta=0}]
FAILED tests/cupyx_tests/scipy_tests/ndimage_tests/test_interpolation.py::TestAffineTransformTextureMemory::test_affine_transform_texture_memory[_param_357_{mode='nearest', order=1, output='empty', output_shape=None, shape=(10, 20), theta=90}]
FAILED tests/cupyx_tests/scipy_tests/ndimage_tests/test_interpolation.py::TestAffineTransformTextureMemory::test_affine_transform_texture_memory[_param_358_{mode='nearest', order=1, output='empty', output_shape=None, shape=(10, 20), theta=180}]
FAILED tests/cupyx_tests/scipy_tests/ndimage_tests/test_interpolation.py::TestAffineTransformTextureMemory::test_affine_transform_texture_memory[_param_359_{mode='nearest', order=1, output='empty', output_shape=None, shape=(10, 20), theta=270}]
FAILED tests/cupyx_tests/scipy_tests/ndimage_tests/test_interpolation.py::TestAffineTransformTextureMemory::test_affine_transform_texture_memory[_param_360_{mode='nearest', order=1, output='empty', output_shape=None, shape=(10, 10, 10), theta=0}]
FAILED tests/cupyx_tests/scipy_tests/ndimage_tests/test_interpolation.py::TestAffineTransformTextureMemory::test_affine_transform_texture_memory[_param_361_{mode='nearest', order=1, output='empty', output_shape=None, shape=(10, 10, 10), theta=90}]
FAILED tests/cupyx_tests/scipy_tests/ndimage_tests/test_interpolation.py::TestAffineTransformTextureMemory::test_affine_transform_texture_memory[_param_362_{mode='nearest', order=1, output='empty', output_shape=None, shape=(10, 10, 10), theta=180}]
FAILED tests/cupyx_tests/scipy_tests/ndimage_tests/test_interpolation.py::TestAffineTransformTextureMemory::test_affine_transform_texture_memory[_param_363_{mode='nearest', order=1, output='empty', output_shape=None, shape=(10, 10, 10), theta=270}]
FAILED tests/cupyx_tests/scipy_tests/ndimage_tests/test_interpolation.py::TestAffineTransformTextureMemory::test_affine_transform_texture_memory[_param_364_{mode='nearest', order=1, output='empty', output_shape=None, shape=(10, 20, 30), theta=0}]
FAILED tests/cupyx_tests/scipy_tests/ndimage_tests/test_interpolation.py::TestAffineTransformTextureMemory::test_affine_transform_texture_memory[_param_365_{mode='nearest', order=1, output='empty', output_shape=None, shape=(10, 20, 30), theta=90}]
FAILED tests/cupyx_tests/scipy_tests/ndimage_tests/test_interpolation.py::TestAffineTransformTextureMemory::test_affine_transform_texture_memory[_param_366_{mode='nearest', order=1, output='empty', output_shape=None, shape=(10, 20, 30), theta=180}]
FAILED tests/cupyx_tests/scipy_tests/ndimage_tests/test_interpolation.py::TestAffineTransformTextureMemory::test_affine_transform_texture_memory[_param_367_{mode='nearest', order=1, output='empty', output_shape=None, shape=(10, 20, 30), theta=270}]
FAILED tests/cupyx_tests/scipy_tests/ndimage_tests/test_interpolation.py::TestZoomOutputSize1::test_zoom_output_size1[_param_4_{grid_mode=False, mode='constant', order=4, shape=(5, 5, 2), zoom=(2, 2, 0.5)}]
FAILED tests/cupyx_tests/scipy_tests/ndimage_tests/test_interpolation.py::TestZoomOutputSize1::test_zoom_output_size1[_param_5_{grid_mode=False, mode='constant', order=5, shape=(5, 5, 2), zoom=(2, 2, 0.5)}]
FAILED tests/cupyx_tests/scipy_tests/ndimage_tests/test_interpolation.py::TestZoomOutputSize1::test_zoom_output_size1[_param_16_{grid_mode=False, mode='mirror', order=4, shape=(5, 5, 2), zoom=(2, 2, 0.5)}]
FAILED tests/cupyx_tests/scipy_tests/ndimage_tests/test_interpolation.py::TestZoomOutputSize1::test_zoom_output_size1[_param_17_{grid_mode=False, mode='mirror', order=5, shape=(5, 5, 2), zoom=(2, 2, 0.5)}]
FAILED tests/cupyx_tests/scipy_tests/ndimage_tests/test_interpolation.py::TestZoomOutputSize1::test_zoom_output_size1[_param_22_{grid_mode=False, mode='wrap', order=4, shape=(5, 5, 2), zoom=(2, 2, 0.5)}]
FAILED tests/cupyx_tests/scipy_tests/ndimage_tests/test_interpolation.py::TestZoomOutputSize1::test_zoom_output_size1[_param_23_{grid_mode=False, mode='wrap', order=5, shape=(5, 5, 2), zoom=(2, 2, 0.5)}]
FAILED tests/cupyx_tests/scipy_tests/ndimage_tests/test_interpolation.py::TestZoomOutputSize1::test_zoom_output_size1[_param_46_{grid_mode=False, mode='grid-constant', order=4, shape=(5, 5, 2), zoom=(2, 2, 0.5)}]
FAILED tests/cupyx_tests/scipy_tests/ndimage_tests/test_interpolation.py::TestZoomOutputSize1::test_zoom_output_size1[_param_47_{grid_mode=False, mode='grid-constant', order=5, shape=(5, 5, 2), zoom=(2, 2, 0.5)}]
FAILED tests/cupyx_tests/scipy_tests/ndimage_tests/test_interpolation.py::TestZoomOutputSize1::test_zoom_output_size1[_param_52_{grid_mode=True, mode='constant', order=4, shape=(5, 5, 2), zoom=(2, 2, 0.5)}]
FAILED tests/cupyx_tests/scipy_tests/ndimage_tests/test_interpolation.py::TestZoomOutputSize1::test_zoom_output_size1[_param_53_{grid_mode=True, mode='constant', order=5, shape=(5, 5, 2), zoom=(2, 2, 0.5)}]
FAILED tests/cupyx_tests/scipy_tests/ndimage_tests/test_interpolation.py::TestZoomOutputSize1::test_zoom_output_size1[_param_64_{grid_mode=True, mode='mirror', order=4, shape=(5, 5, 2), zoom=(2, 2, 0.5)}]
FAILED tests/cupyx_tests/scipy_tests/ndimage_tests/test_interpolation.py::TestZoomOutputSize1::test_zoom_output_size1[_param_65_{grid_mode=True, mode='mirror', order=5, shape=(5, 5, 2), zoom=(2, 2, 0.5)}]
FAILED tests/cupyx_tests/scipy_tests/ndimage_tests/test_interpolation.py::TestZoomOutputSize1::test_zoom_output_size1[_param_70_{grid_mode=True, mode='wrap', order=4, shape=(5, 5, 2), zoom=(2, 2, 0.5)}]
FAILED tests/cupyx_tests/scipy_tests/ndimage_tests/test_interpolation.py::TestZoomOutputSize1::test_zoom_output_size1[_param_71_{grid_mode=True, mode='wrap', order=5, shape=(5, 5, 2), zoom=(2, 2, 0.5)}]
FAILED tests/cupyx_tests/scipy_tests/ndimage_tests/test_interpolation.py::TestZoomOutputSize1::test_zoom_output_size1[_param_94_{grid_mode=True, mode='grid-constant', order=4, shape=(5, 5, 2), zoom=(2, 2, 0.5)}]
FAILED tests/cupyx_tests/scipy_tests/ndimage_tests/test_interpolation.py::TestZoomOutputSize1::test_zoom_output_size1[_param_95_{grid_mode=True, mode='grid-constant', order=5, shape=(5, 5, 2), zoom=(2, 2, 0.5)}]
FAILED tests/cupyx_tests/scipy_tests/signal_tests/test_signaltools.py::TestFFTConvolve_param_44_{mode='valid', size1=(3, 4, 10), size2=3}::test_convolve_fft
FAILED tests/cupyx_tests/scipy_tests/signal_tests/test_signaltools.py::TestFFTConvolve_param_44_{mode='valid', size1=(3, 4, 10), size2=3}::test_correlate_fft
FAILED tests/cupyx_tests/scipy_tests/signal_tests/test_signaltools.py::TestFFTConvolve_param_44_{mode='valid', size1=(3, 4, 10), size2=3}::test_fftconvolve
FAILED tests/example_tests/test_custom_struct.py::TestCustomStruct::test_builtin_vectors
FAILED tests/example_tests/test_custom_struct.py::TestCustomStruct::test_complex_struct
FAILED tests/example_tests/test_custom_struct.py::TestCustomStruct::test_packed_matrix
= 360 failed, 64194 passed, 7496 skipped, 71 deselected, 557 xfailed, 298 warnings in 26630.27s (7:23:50) =
