master: 5df46fb Merge pull request #5454 from emcastillo/bdocs
============================= test session starts ==============================
platform linux -- Python 3.8.7, pytest-6.2.2, py-1.10.0, pluggy-0.13.1
rootdir: /home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.Np3X0NVCM9/cupy, configfile: setup.cfg
plugins: html-3.1.1, metadata-1.11.0
collected 72669 items / 71 deselected / 12 skipped / 72586 selected

tests/cupy_tests/test_cublas.py ........................................ [  0%]
........................................................................ [  0%]
........................................................................ [  0%]
........................................................................ [  0%]
........................................................................ [  0%]
........................................................................ [  0%]
........................................................................ [  0%]
........................................................................ [  0%]
........................................................................ [  0%]
........................................................................ [  0%]
........................................................................ [  1%]
........................................................................ [  1%]
........................................................................ [  1%]
........................................................................ [  1%]
........................................................................ [  1%]
........................................................................ [  1%]
........................................................................ [  1%]
........................................................................ [  1%]
........................................................................ [  1%]
........................................................................ [  1%]
........................................................................ [  2%]
........................................................................ [  2%]
........................................................................ [  2%]
........................................................................ [  2%]
........................................................................ [  2%]
........................................................................ [  2%]
........................................................................ [  2%]
........................................................................ [  2%]
........................................................................ [  2%]
........................................................................ [  2%]
........................................................................ [  3%]
........................................................................ [  3%]
........................................................................ [  3%]
...........................x...........x.............................x.. [  3%]
.........x..........                                                     [  3%]
tests/cupy_tests/test_cudnn.py sssssssssssssssssssssssssssssssssssssssss [  3%]
ssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssss [  3%]
ssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssss [  3%]
ssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssss [  3%]
ssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssss [  3%]
ssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssss [  3%]
ssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssss [  4%]
ssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssss [  4%]
ssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssss [  4%]
ssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssss [  4%]
ssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssss [  4%]
ssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssss [  4%]
ssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssss [  4%]
ssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssss [  4%]
ssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssss [  4%]
ssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssss [  4%]
ssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssss [  4%]
ssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssss [  5%]
ssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssss [  5%]
ssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssss [  5%]
ssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssss [  5%]
ssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssss [  5%]
ssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssss [  5%]
ssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssss [  5%]
ssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssss [  5%]
sssssssssssssssssssssssssssssssssssssssssssssssssssssss                  [  5%]
tests/cupy_tests/test_cusolver.py ssssssssssssssssssssssssssssssssssssss [  5%]
ssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssss [  6%]
ssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssss [  6%]
ssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssss [  6%]
ssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssss [  6%]
ssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssss [  6%]
ssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssss [  6%]
ssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssss [  6%]
ssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssss [  6%]
ssssssssssssssssssssssssssssssssss                                       [  6%]
tests/cupy_tests/test_cutensor.py ssssssssssssssssssssssssssssssssssssss [  6%]
sssssssssssssssssssssssssssssssssssss                                    [  6%]
tests/cupy_tests/test_init.py ..s........                                [  6%]
tests/cupy_tests/test_ndim.py ............                               [  6%]
tests/cupy_tests/test_numpy_interop.py ..x......                         [  6%]
tests/cupy_tests/test_type_routines.py ................................. [  6%]
.                                                                        [  6%]
tests/cupy_tests/binary_tests/test_elementwise.py ......                 [  6%]
tests/cupy_tests/binary_tests/test_packing.py ...                        [  6%]
tests/cupy_tests/core_tests/test_array_function.py .....                 [  6%]
tests/cupy_tests/core_tests/test_carray.py .....                         [  6%]
tests/cupy_tests/core_tests/test_core.py ......                          [  6%]
tests/cupy_tests/core_tests/test_cub_reduction.py ...................... [  7%]
...                                                                      [  7%]
tests/cupy_tests/core_tests/test_dlpack.py ..F...                        [  7%]
tests/cupy_tests/core_tests/test_elementwise.py ...............          [  7%]
tests/cupy_tests/core_tests/test_flags.py .............................  [  7%]
tests/cupy_tests/core_tests/test_function.py .....                       [  7%]
tests/cupy_tests/core_tests/test_gufuncs.py ............................ [  7%]
................................                                         [  7%]
tests/cupy_tests/core_tests/test_internal.py ........................... [  7%]
...............................................................          [  7%]
tests/cupy_tests/core_tests/test_iter.py ............                    [  7%]
tests/cupy_tests/core_tests/test_ndarray.py ..........................ss [  7%]
ssss.................................................................... [  7%]
......................F...sss...............                             [  7%]
tests/cupy_tests/core_tests/test_ndarray_adv_indexing.py ............... [  7%]
........................................................................ [  7%]
........................................................................ [  7%]
........................................................................ [  7%]
.............................................                            [  7%]
tests/cupy_tests/core_tests/test_ndarray_complex_ops.py ................ [  7%]
.....                                                                    [  7%]
tests/cupy_tests/core_tests/test_ndarray_contiguity.py .                 [  7%]
tests/cupy_tests/core_tests/test_ndarray_conversion.py .......xx..       [  7%]
tests/cupy_tests/core_tests/test_ndarray_copy_and_view.py .............. [  7%]
........................sssssss                                          [  8%]
tests/cupy_tests/core_tests/test_ndarray_cuda_array_interface.py sssssss [  8%]
sssssssssssssssssssssssssssssssssssssssssssssssss                        [  8%]
tests/cupy_tests/core_tests/test_ndarray_elementwise_op.py ............. [  8%]
........................................................................ [  8%]
.................................................................        [  8%]
tests/cupy_tests/core_tests/test_ndarray_get.py ............             [  8%]
tests/cupy_tests/core_tests/test_ndarray_indexing.py xxxx..........x...x [  8%]
........x..........x.............................                        [  8%]
tests/cupy_tests/core_tests/test_ndarray_math.py ......................s [  8%]
sssssssssss                                                              [  8%]
tests/cupy_tests/core_tests/test_ndarray_owndata.py ...                  [  8%]
tests/cupy_tests/core_tests/test_ndarray_reduction.py .................. [  8%]
........................................................................ [  8%]
........................................................................ [  8%]
................................                                         [  8%]
tests/cupy_tests/core_tests/test_ndarray_scatter.py .................... [  8%]
........................................................................ [  8%]
...............................................................          [  8%]
tests/cupy_tests/core_tests/test_ndarray_ufunc.py .........              [  8%]
tests/cupy_tests/core_tests/test_ndarray_unary_op.py .......F..........s [  8%]
...                                                                      [  8%]
tests/cupy_tests/core_tests/test_raw.py .ss.........sss..s.s.s........ss [  9%]
.........sss..s.s.s........ss.........sss..s.s.s......ssssssssssssssssss [  9%]
ssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssss.s [  9%]
s.......sssss....s.s......sssssssssssssssssssssssssssss                  [  9%]
tests/cupy_tests/core_tests/test_reduction.py .......................    [  9%]
tests/cupy_tests/core_tests/test_scan.py ....                            [  9%]
tests/cupy_tests/core_tests/test_syncdetect.py ....                      [  9%]
tests/cupy_tests/core_tests/test_userkernel.py ....sss.............      [  9%]
tests/cupy_tests/core_tests/fusion_tests/test_array.py ................. [  9%]
........................................................................ [  9%]
....................................................                     [  9%]
tests/cupy_tests/core_tests/fusion_tests/test_indexing.py .............. [  9%]
.................s                                                       [  9%]
tests/cupy_tests/core_tests/fusion_tests/test_kernel_cache.py ....       [  9%]
tests/cupy_tests/core_tests/fusion_tests/test_misc.py .......s.......... [  9%]
........                                                                 [  9%]
tests/cupy_tests/core_tests/fusion_tests/test_optimization.py .......... [  9%]
....                                                                     [  9%]
tests/cupy_tests/core_tests/fusion_tests/test_reduction.py ............. [  9%]
........................................................................ [  9%]
.........................................................s.s.s.s.s.s.s.s [  9%]
.s.ssssssssssssssssss.sss                                                [  9%]
tests/cupy_tests/core_tests/fusion_tests/test_routines.py .............. [  9%]
........................................................................ [ 10%]
..............                                                           [ 10%]
tests/cupy_tests/core_tests/fusion_tests/test_ufunc.py ................. [ 10%]
......................................................                   [ 10%]
tests/cupy_tests/creation_tests/test_basic.py .......................... [ 10%]
...........................................................s............ [ 10%]
....s.                                                                   [ 10%]
tests/cupy_tests/creation_tests/test_from_data.py ssssssssssssssssssssss [ 10%]
sssssssssssssssssssssssssssssssssssssssssssssssssssssssssss............. [ 10%]
...................................................................      [ 10%]
tests/cupy_tests/creation_tests/test_matrix.py ......................... [ 10%]
.................................                                        [ 10%]
tests/cupy_tests/creation_tests/test_ranges.py ......................... [ 10%]
..............................................................           [ 10%]
tests/cupy_tests/cuda_tests/test_compiler.py sssssss........             [ 10%]
tests/cupy_tests/cuda_tests/test_cublas.py .                             [ 10%]
tests/cupy_tests/cuda_tests/test_cudnn.py s                              [ 10%]
tests/cupy_tests/cuda_tests/test_cufft.py ssssssssssssssss.              [ 10%]
tests/cupy_tests/cuda_tests/test_curand.py .....                         [ 10%]
tests/cupy_tests/cuda_tests/test_cusolver.py .                           [ 10%]
tests/cupy_tests/cuda_tests/test_cusparse.py .                           [ 10%]
tests/cupy_tests/cuda_tests/test_cutensor.py s                           [ 10%]
tests/cupy_tests/cuda_tests/test_device.py .............x..              [ 10%]
tests/cupy_tests/cuda_tests/test_driver.py ss.                           [ 10%]
tests/cupy_tests/cuda_tests/test_memory.py ....ssssssss................. [ 10%]
.ssssssssss......s.............................................sssssssss [ 10%]
ssssssssssss                                                             [ 10%]
tests/cupy_tests/cuda_tests/test_memory_hook.py .                        [ 10%]
tests/cupy_tests/cuda_tests/test_nccl.py ........                        [ 10%]
tests/cupy_tests/cuda_tests/test_nvrtc.py .                              [ 10%]
tests/cupy_tests/cuda_tests/test_nvtx.py ....                            [ 10%]
tests/cupy_tests/cuda_tests/test_pinned_memory.py ............           [ 10%]
tests/cupy_tests/cuda_tests/test_profile.py ..                           [ 10%]
tests/cupy_tests/cuda_tests/test_runtime.py .                            [ 10%]
tests/cupy_tests/cuda_tests/test_stream.py ..s..s......ssssssssssss.s    [ 11%]
tests/cupy_tests/cuda_tests/memory_hooks_tests/test_debug_print.py .     [ 11%]
tests/cupy_tests/cuda_tests/memory_hooks_tests/test_line_profile.py ..   [ 11%]
tests/cupy_tests/fft_tests/test_cache.py ..sss.....s..                   [ 11%]
tests/cupy_tests/fft_tests/test_callback.py ssssssssssssssssssssssssssss [ 11%]
ssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssss [ 11%]
ssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssss [ 11%]
ssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssss [ 11%]
ssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssss [ 11%]
ssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssss [ 11%]
ssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssss [ 11%]
ssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssss [ 11%]
ssssssssssssssssssssssssssssssssssssssssssssssssssss                     [ 11%]
tests/cupy_tests/fft_tests/test_fft.py ....ssss....ssss........ssss....s [ 11%]
sss........ssss....ssss........ssss....ssss........ssss....ssss........s [ 12%]
sss....ssss........ssss....ssss........ssss....ssss........ssss....ssss. [ 12%]
.......ssss....ssss....................................................s [ 12%]
ssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssss [ 12%]
sssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssss. [ 12%]
.s.s..s.s..s.s..s.s..s.s..s.s..s.s..s.s..s.s..s.s..s.s..s.s..s.s..s.s..s [ 12%]
.s..s.s..s.s..s.s..s.s..s.s..s.s..s.s..s.s..s.s..s.s..s.s..s.s..s.s..s.s [ 12%]
..s.s..s.s..s.s..s.s..s.s..s.s..s.s..s.s..s.s..s.s..s.s..s.s..s.s..s.s.. [ 12%]
s.s..s.s..s.s..s.s..s.s..s.s..s.s..s.s..s.s..s.s..s.s..s.s..s.s..s.s..s. [ 12%]
s..s.s..s.s..s.s..s.s..s.s..s.s..s.s..s.s..s.s..s.s..s.s..s.s..s.s..s.s. [ 12%]
.s.s..s.s..s.s..s.s..s.s..s.s..s.s..s.s..s.s..s.s..s.s..s.s..s.s..s.s..s [ 12%]
.s..s.s..s.s..s.s..s.s..s.s..s.s..s.s..s.s.s.s.s.s.s.s.s.s.s.s.s.s.s.s.s [ 13%]
.s.s.sssss.s.s.s.s.s.s.s.s.s.s.s.s.s.s.s.s.s.s.s.s.s.s.s.s.s.s.s.s.s.s.s [ 13%]
.sssss.s.s.s.s.s.s.s.s.s.s.s.s.s.s.s.s.s.s.s.s.s.s.s.s.s.s.s.s.s.s.s.sss [ 13%]
ss.s.s.s.s.s.s.s.s.s.s.s.s.s.s.s.s.s.s.s.s.s.s.s.s.s.s.s.s.s.s.s.s.s.s.s [ 13%]
.sssssssssssssssssssssssssssssssssssssssssssssssssssssssssssss.s.s..s.s. [ 13%]
.s.s..s.s..s.s..s.s..s.s..s.s..s.s..s.s..s.s..s.s..s.s..s.s..s.s..s.s..s [ 13%]
.s..s.s..s.s..s.s..s.s..s.s..s.s..s.s...ss..ss....ss..ss....ss..ss....ss [ 13%]
..ss....ss..ss....ss..ss....ss..ss....ss..ss...s.s.s.s.s.s.s.s.s.s.s.s.s [ 13%]
.s.s.s.s.s.s.s.s.s.s.s.s.s..s.s..s.s..s.s..s.s..s.s..s.s..s.s..s.s..s.s. [ 13%]
.s.s..s.s..s.s..s.s..s.s..s.s..s.s..s.s..s.s..s.s..s.s..s.s..s.s..s.s..s [ 13%]
.s..s.s..s.s..s.s..s.s..s.s..s.s..s.s......s.s..s.s..s.s..s.s..s.s..s.s. [ 14%]
.s.s..s.s..s.s..s.s..s.s..s.s..s.s..s.s..s.s..s.s..s.s..s.s..s.s..s.s..s [ 14%]
.s..s.s..s.s..s.s..s.s..s.s..s.s..s.s..s.s..s.s..s.s..s.s..s.s..s.s..s.s [ 14%]
..s.s..s.s..s.s..s.s..s.s..s.s..s.s.sssss.s.s..s.s.sssssssssssssssssssss [ 14%]
ssssssssssssssssssssssssssssssssssssssssssss.s.s..s.s..s.s..s.s..s.s..s. [ 14%]
s..s.s..s.s..s.s..s.s..s.s..s.s..s.s..s.s..s.s..s.s..s.s..s.s..s.s..s.s. [ 14%]
.s.s..s.s..s.s..s.s..s.s..s.s.......ss..ss....ss..ss....ss..ss....ss..ss [ 14%]
....ss..ss....ss..ss....ss..ss....ss..ss........................         [ 14%]
tests/cupy_tests/functional_tests/test_piecewise.py .............        [ 14%]
tests/cupy_tests/functional_tests/test_vectorize.py .................... [ 14%]
.................................F                                       [ 14%]
tests/cupy_tests/indexing_tests/test_generate.py .......F............... [ 14%]
...............                                                          [ 14%]
tests/cupy_tests/indexing_tests/test_indexing.py ....................... [ 14%]
.........................                                                [ 14%]
tests/cupy_tests/indexing_tests/test_insert.py ......................... [ 15%]
........................................................................ [ 15%]
........................................................................ [ 15%]
.........................................................                [ 15%]
tests/cupy_tests/indexing_tests/test_iterate.py ........................ [ 15%]
...............................................                          [ 15%]
tests/cupy_tests/io_tests/test_base_n.py ............................    [ 15%]
tests/cupy_tests/io_tests/test_formatting.py ..                          [ 15%]
tests/cupy_tests/io_tests/test_npz.py .......                            [ 15%]
tests/cupy_tests/lib_tests/test_polynomial.py .......ss.......ssssssssss [ 15%]
sssssss........ssssssssssssssssssssssssssssssssssssxxxxxxxxxxxxxxxxxxxx. [ 15%]
..ssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssss [ 15%]
ssssssssssssssssssssssssss......xxxxxxxxxxxxxxxxxxxxxxxx................ [ 15%]
........................................................................ [ 15%]
........xxxxxxxx........xxxxxxxx........................................ [ 15%]
...........xxxxxx............................x.......................... [ 16%]
..                                                                       [ 16%]
tests/cupy_tests/lib_tests/test_shape_base.py ......................     [ 16%]
tests/cupy_tests/lib_tests/test_strided_tricks.py ..                     [ 16%]
tests/cupy_tests/linalg_tests/test_decomposition.py .................... [ 16%]
.......................                                                  [ 16%]
tests/cupy_tests/linalg_tests/test_eigenvalue.py xxxxxxxx                [ 16%]
tests/cupy_tests/linalg_tests/test_einsum.py ........................... [ 16%]
........................................................................ [ 16%]
........................................................................ [ 16%]
........................................................................ [ 16%]
........................................................................ [ 16%]
........................................................................ [ 16%]
........................................................................ [ 16%]
........................................................................ [ 16%]
........................................................................ [ 17%]
........................................................................ [ 17%]
........................................................................ [ 17%]
..........                                                               [ 17%]
tests/cupy_tests/linalg_tests/test_norms.py ............................ [ 17%]
........................................................................ [ 17%]
........................................................................ [ 17%]
.................................................................        [ 17%]
tests/cupy_tests/linalg_tests/test_product.py .......................... [ 17%]
........................................................................ [ 17%]
........................................................................ [ 17%]
..........................................                               [ 17%]
tests/cupy_tests/linalg_tests/test_solve.py ............................ [ 17%]
                                                                         [ 17%]
tests/cupy_tests/logic_tests/test_comparison.py ........................ [ 17%]
.....                                                                    [ 17%]
tests/cupy_tests/logic_tests/test_content.py ...                         [ 17%]
tests/cupy_tests/logic_tests/test_ops.py ....                            [ 17%]
tests/cupy_tests/logic_tests/test_truth.py ............................. [ 17%]
........................................................................ [ 18%]
........................................................................ [ 18%]
........................................................................ [ 18%]
........................................................................ [ 18%]
........................................................................ [ 18%]
........................................................................ [ 18%]
........................................................................ [ 18%]
........................................................................ [ 18%]
........................................................................ [ 18%]
...........................................                              [ 18%]
tests/cupy_tests/logic_tests/test_type_test.py ......................... [ 18%]
.......                                                                  [ 18%]
tests/cupy_tests/manipulation_tests/test_add_remove.py ................. [ 18%]
.........................                                                [ 19%]
tests/cupy_tests/manipulation_tests/test_basic.py ...................... [ 19%]
.......................................................                  [ 19%]
tests/cupy_tests/manipulation_tests/test_dims.py .....x.x............... [ 19%]
................................................                         [ 19%]
tests/cupy_tests/manipulation_tests/test_join.py ....................... [ 19%]
...........................                                              [ 19%]
tests/cupy_tests/manipulation_tests/test_kind.py ...........             [ 19%]
tests/cupy_tests/manipulation_tests/test_rearrange.py .................. [ 19%]
.......................................................                  [ 19%]
tests/cupy_tests/manipulation_tests/test_shape.py ...................... [ 19%]
....................................                                     [ 19%]
tests/cupy_tests/manipulation_tests/test_split.py ..................     [ 19%]
tests/cupy_tests/manipulation_tests/test_tiling.py ..................... [ 19%]
...........                                                              [ 19%]
tests/cupy_tests/manipulation_tests/test_transpose.py .................. [ 19%]
..........                                                               [ 19%]
tests/cupy_tests/math_tests/test_arithmetic.py ......................... [ 19%]
........................................................................ [ 19%]
........................................................................ [ 19%]
........................................................................ [ 19%]
........................................................................ [ 20%]
........................................................................ [ 20%]
........................................................................ [ 20%]
........................................................................ [ 20%]
........................................................................ [ 20%]
........................................................................ [ 20%]
........................................................................ [ 20%]
........................................................................ [ 20%]
........................................................................ [ 20%]
........................................................................ [ 20%]
........................................................................ [ 21%]
........................................................................ [ 21%]
........................................................................ [ 21%]
........................................................................ [ 21%]
........................................................................ [ 21%]
........................................................................ [ 21%]
........................................................................ [ 21%]
........................................................................ [ 21%]
........................................................................ [ 21%]
........................................................................ [ 21%]
........................................................................ [ 22%]
........................................................................ [ 22%]
........................................................................ [ 22%]
........................................................................ [ 22%]
........................................................................ [ 22%]
........................................................................ [ 22%]
........................................................................ [ 22%]
........................................................................ [ 22%]
........................................................................ [ 22%]
........................................................................ [ 22%]
........................................................................ [ 23%]
........................................................................ [ 23%]
........................................................................ [ 23%]
........................................................................ [ 23%]
........................................................................ [ 23%]
........................................................................ [ 23%]
........................................................................ [ 23%]
........................................................................ [ 23%]
........................................................................ [ 23%]
........................................................................ [ 23%]
........................................................................ [ 23%]
........................................................................ [ 24%]
........................................................................ [ 24%]
........................................................................ [ 24%]
........................................................................ [ 24%]
........................................................................ [ 24%]
........................................................................ [ 24%]
........................................................................ [ 24%]
........................................................................ [ 24%]
........................................................................ [ 24%]
........................................................................ [ 24%]
........................................................................ [ 25%]
........................................................................ [ 25%]
........................................................................ [ 25%]
........................................................................ [ 25%]
........................................................................ [ 25%]
........................................................................ [ 25%]
........................................................................ [ 25%]
........................................................................ [ 25%]
........................................................................ [ 25%]
........................................................................ [ 25%]
........................................................................ [ 26%]
........................................................................ [ 26%]
........................................................................ [ 26%]
........................................................................ [ 26%]
........................................................................ [ 26%]
........................................................................ [ 26%]
........................................................................ [ 26%]
........................................................................ [ 26%]
........................................................................ [ 26%]
........................................................................ [ 26%]
........................................................................ [ 27%]
........................................................................ [ 27%]
........................................................................ [ 27%]
........................................................................ [ 27%]
........................................................................ [ 27%]
........................................................................ [ 27%]
........................................................................ [ 27%]
........................................................................ [ 27%]
........................................................................ [ 27%]
........................................................................ [ 27%]
........................................................................ [ 28%]
........................................................................ [ 28%]
........................................................................ [ 28%]
........................................................................ [ 28%]
........................................................................ [ 28%]
........................................................................ [ 28%]
........................................................................ [ 28%]
........................................................................ [ 28%]
........................................................................ [ 28%]
........................................................................ [ 28%]
........................................................................ [ 29%]
........................................................................ [ 29%]
........................................................................ [ 29%]
........................................................................ [ 29%]
........................................................................ [ 29%]
........................................................................ [ 29%]
........................................................................ [ 29%]
........................................................................ [ 29%]
........................................................................ [ 29%]
........................................................................ [ 29%]
........................................................................ [ 30%]
........................................................................ [ 30%]
........................................................................ [ 30%]
........................................................................ [ 30%]
........................................................................ [ 30%]
........................................................................ [ 30%]
........................................................................ [ 30%]
........................................................................ [ 30%]
...........................                                              [ 30%]
tests/cupy_tests/math_tests/test_explog.py .........                     [ 30%]
tests/cupy_tests/math_tests/test_floating.py .......                     [ 30%]
tests/cupy_tests/math_tests/test_hyperbolic.py ......                    [ 30%]
tests/cupy_tests/math_tests/test_matmul.py ............................. [ 30%]
........................................................................ [ 30%]
........................................................................ [ 31%]
........................................................................ [ 31%]
................................................                         [ 31%]
tests/cupy_tests/math_tests/test_misc.py ............................... [ 31%]
............................................F..F..F..................... [ 31%]
..............................                                           [ 31%]
tests/cupy_tests/math_tests/test_rational.py ....                        [ 31%]
tests/cupy_tests/math_tests/test_rounding.py ........................... [ 31%]
..........................................                               [ 31%]
tests/cupy_tests/math_tests/test_special.py ...                          [ 31%]
tests/cupy_tests/math_tests/test_sumprod.py ............................ [ 31%]
....................................................ssssssssssssssss.... [ 31%]
........................................................................ [ 31%]
........................................................................ [ 31%]
........................................................................ [ 31%]
........................................................................ [ 32%]
........................................................................ [ 32%]
........................................................................ [ 32%]
........................................................................ [ 32%]
........................................................................ [ 32%]
..............................................................           [ 32%]
tests/cupy_tests/math_tests/test_trigonometric.py ..........sssssssss    [ 32%]
tests/cupy_tests/math_tests/test_window.py ............................. [ 32%]
.....                                                                    [ 32%]
tests/cupy_tests/misc_tests/test_memory_ranges.py ................       [ 32%]
tests/cupy_tests/misc_tests/test_who.py ......                           [ 32%]
tests/cupy_tests/padding_tests/test_pad.py ............................. [ 32%]
..............................................                           [ 32%]
tests/cupy_tests/polynomial_tests/test_polynomial.py ................... [ 32%]
                                                                         [ 32%]
tests/cupy_tests/polynomial_tests/test_polyutils.py .................... [ 32%]
................                                                         [ 32%]
tests/cupy_tests/prof_tests/test_range.py ........                       [ 32%]
tests/cupy_tests/random_tests/test_bit_generator.py ssssssssssss         [ 32%]
tests/cupy_tests/random_tests/test_distributions.py .................... [ 32%]
........................................................................ [ 32%]
................................................x.x.x.x.x.x.x.x.x.x.x.x. [ 33%]
x.x.x.x.x.x.x.x.x.x.x.x.x.x.x.x.x.x.x.x.x.x.x.x......................... [ 33%]
........................................................................ [ 33%]
........................................................................ [ 33%]
........................................................................ [ 33%]
........................................................................ [ 33%]
........................................................................ [ 33%]
........................................................................ [ 33%]
........................................................................ [ 33%]
........................................................................ [ 33%]
........................................................................ [ 34%]
........................................................................ [ 34%]
......................................................................x. [ 34%]
x.x.x.x.x............................x.x.x.x.x.x........................ [ 34%]
........................................................................ [ 34%]
.........................................F.F.                            [ 34%]
tests/cupy_tests/random_tests/test_generator.py ........................ [ 34%]
........................................................................ [ 34%]
........................................................................ [ 34%]
.........................s.s............................................ [ 34%]
...............................x...............................          [ 34%]
tests/cupy_tests/random_tests/test_generator_api.py ssssssssssssssssssss [ 34%]
ssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssss       [ 35%]
tests/cupy_tests/random_tests/test_init.py .                             [ 35%]
tests/cupy_tests/random_tests/test_permutations.py ...x...x............. [ 35%]
........................................................................ [ 35%]
........................................................................ [ 35%]
.............                                                            [ 35%]
tests/cupy_tests/random_tests/test_random.py .                           [ 35%]
tests/cupy_tests/random_tests/test_sample.py ...............x........x.. [ 35%]
............                                                             [ 35%]
tests/cupy_tests/sorting_tests/test_count.py ....                        [ 35%]
tests/cupy_tests/sorting_tests/test_search.py ssssssss........ssssssss.. [ 35%]
........................................................................ [ 35%]
........................................................................ [ 35%]
....................................................................     [ 35%]
tests/cupy_tests/sorting_tests/test_sort.py ............................ [ 35%]
........................................................................ [ 35%]
..........................................................x...........   [ 35%]
tests/cupy_tests/statistics_tests/test_correlation.py .................. [ 35%]
..............................F..F.xF...................                 [ 36%]
tests/cupy_tests/statistics_tests/test_histogram.py .................... [ 36%]
........................................................................ [ 36%]
........................................................................ [ 36%]
........................................................................ [ 36%]
........................................................................ [ 36%]
........................................................                 [ 36%]
tests/cupy_tests/statistics_tests/test_meanvar.py ...................... [ 36%]
........................................................................ [ 36%]
........................................................................ [ 36%]
......                                                                   [ 36%]
tests/cupy_tests/statistics_tests/test_order.py sssss................... [ 36%]
.........................                                                [ 36%]
tests/cupy_tests/testing_tests/test_array.py ........................... [ 36%]
...............................................                          [ 36%]
tests/cupy_tests/testing_tests/test_condition.py ................        [ 36%]
tests/cupy_tests/testing_tests/test_helper.py .......................... [ 36%]
........................................................................ [ 37%]
.....sssss..sssssss..ssxxxxxxxx................x..x.................     [ 37%]
tests/cupy_tests/testing_tests/test_parameterized.py ............s.s.s.s [ 37%]
....ssss......                                                           [ 37%]
tests/cupyx_tests/test_cupyx.py ..                                       [ 37%]
tests/cupyx_tests/test_lapack.py .s.s.s.s.....s.s.s.s.....s.s.s.s.....s. [ 37%]
s.s.s.............sssssssssssss                                          [ 37%]
tests/cupyx_tests/test_optimize.py sssssssss                             [ 37%]
tests/cupyx_tests/test_pinned_array.py ................................. [ 37%]
.......................................                                  [ 37%]
tests/cupyx_tests/test_rsqrt.py .                                        [ 37%]
tests/cupyx_tests/test_runtime.py s.                                     [ 37%]
tests/cupyx_tests/test_scatter.py F..                                    [ 37%]
tests/cupyx_tests/test_time.py .........                                 [ 37%]
tests/cupyx_tests/fallback_mode_tests/test_fallback.py ................. [ 37%]
........................................................................ [ 37%]
.........                                                                [ 37%]
tests/cupyx_tests/fallback_mode_tests/test_notifications.py .........    [ 37%]
tests/cupyx_tests/jit_tests/test_raw.py ................................ [ 37%]
......                                                                   [ 37%]
tests/cupyx_tests/linalg_tests/test_solve.py xxxxxxxxxxxxxxxx....ssss    [ 37%]
tests/cupyx_tests/scipy_tests/test_get_array_module.py ..                [ 37%]
tests/cupyx_tests/scipy_tests/fft_tests/test_fft.py .................... [ 37%]
........................................................................ [ 37%]
........................................................................ [ 37%]
........................................................................ [ 38%]
........................................................................ [ 38%]
........................................................................ [ 38%]
........................................................................ [ 38%]
........................................................................ [ 38%]
........................................................................ [ 38%]
........................................................................ [ 38%]
........................................................................ [ 38%]
........................................................................ [ 38%]
........................................................................ [ 38%]
........................................................................ [ 38%]
........................................................................ [ 39%]
........................................................................ [ 39%]
........................................................................ [ 39%]
........................................................................ [ 39%]
........................................................................ [ 39%]
........................................................................ [ 39%]
........................................................................ [ 39%]
........................................................................ [ 39%]
........................................................................ [ 39%]
........................................................................ [ 39%]
........................................................................ [ 40%]
........................................................................ [ 40%]
........................................................................ [ 40%]
........................................................................ [ 40%]
........................................................................ [ 40%]
........................................................................ [ 40%]
........................................................................ [ 40%]
........................................................................ [ 40%]
........................................................................ [ 40%]
........................................................................ [ 40%]
........................................................................ [ 41%]
........................................................................ [ 41%]
........................................................................ [ 41%]
........................................................................ [ 41%]
........................................................................ [ 41%]
........................................................................ [ 41%]
........................................................................ [ 41%]
........................................................................ [ 41%]
........................................................................ [ 41%]
........................................................................ [ 41%]
........................................................................ [ 42%]
........................................................................ [ 42%]
........................................................................ [ 42%]
........................................................................ [ 42%]
........................................................................ [ 42%]
........................................................................ [ 42%]
........................................................................ [ 42%]
........................................................................ [ 42%]
........................................................................ [ 42%]
........................................................................ [ 42%]
........................................................................ [ 43%]
........................................................................ [ 43%]
........................................................................ [ 43%]
........................................................................ [ 43%]
........................................................................ [ 43%]
........................................................................ [ 43%]
........................................................................ [ 43%]
........................................................................ [ 43%]
........................................................................ [ 43%]
........................................................................ [ 43%]
........................................................................ [ 44%]
........................................................................ [ 44%]
........................................................................ [ 44%]
........................................................................ [ 44%]
........................................................................ [ 44%]
........................................................................ [ 44%]
........................................................................ [ 44%]
........................................................................ [ 44%]
........................................................................ [ 44%]
........................................................................ [ 44%]
........................................................................ [ 45%]
........................................................................ [ 45%]
........................................................................ [ 45%]
........................................................................ [ 45%]
........................................................................ [ 45%]
........................................................................ [ 45%]
........................................................................ [ 45%]
........................................................................ [ 45%]
........................................................................ [ 45%]
........................................................................ [ 45%]
........................................................................ [ 46%]
........................................................................ [ 46%]
........................................................................ [ 46%]
........................................................................ [ 46%]
........................................................................ [ 46%]
........................................................................ [ 46%]
........................................................................ [ 46%]
........................................................................ [ 46%]
........................................................................ [ 46%]
........................................................................ [ 46%]
........................................................................ [ 47%]
........................................................................ [ 47%]
........................................................................ [ 47%]
........................................................................ [ 47%]
........................................................................ [ 47%]
........................................................................ [ 47%]
........................................................................ [ 47%]
........................................................................ [ 47%]
........................................................................ [ 47%]
........................................................................ [ 47%]
.................sss.........sss.........sss.........sss.........sss.... [ 48%]
.....sss.........sss.........sss.........sss.........sss.........sss.... [ 48%]
.....sss.........sss.........sss.........sss.........sss.........sss.... [ 48%]
.....sss.........sss.........sss.........sss.........sss.........sss.... [ 48%]
.....sss.........sss.........sss.........sss.........sss.........sss.... [ 48%]
.....sss.........sss.........sss.........sss.........sss.........sss.... [ 48%]
.....sss.........sss.........sss.........sss.........sss.........sss.... [ 48%]
.....sss.........sss.........sss.........sss.........sss.........sss.... [ 48%]
.....sss.........sss.........sss.........sss.........sss.........sss.... [ 48%]
.....sss.........sss.........sss.........sss.........sss.........sss.... [ 48%]
.....sss.........sss.........sss.........sss.........sss.........sss.... [ 49%]
.....sss.........sss.........sss.........sss.........sss.........sss.... [ 49%]
.....sss.........sss.........sss.........sss.........sss.........sss.... [ 49%]
.....sss.........sss.........sss.........sss.........sss.........sss.... [ 49%]
.....sss.........sss.........sss.........sss.........sss.........sss.... [ 49%]
.....sss.........sss.........sss.........sss.........sss.........sss.... [ 49%]
.....sss.........sss.........sss.........sss.........sss.........sss.... [ 49%]
.....sss.........sss.........sss.........sss.........sss.........sss.... [ 49%]
.....sss.........sss.........sss.........sss.........sss.........sss.... [ 49%]
.....sss.........sss.........sss.........sss.........sss.........sss.... [ 49%]
.....sss.........sss.........sss.........sss.........sss.........sss.... [ 50%]
.....sss.........sss.........sss.........sss.........sss.........sss.... [ 50%]
.....sss.........sss.........sss.........sss.........sss.........sss.... [ 50%]
.....sss.........sss.........sss........................................ [ 50%]
........................................................................ [ 50%]
........................................................................ [ 50%]
........................................................................ [ 50%]
........................................................................ [ 50%]
........................................................................ [ 50%]
........................................................................ [ 50%]
........................................................................ [ 50%]
........................................................................ [ 51%]
........................................................................ [ 51%]
........................................................................ [ 51%]
........................................................................ [ 51%]
........................................................................ [ 51%]
....F.................................................................   [ 51%]
tests/cupyx_tests/scipy_tests/fft_tests/test_helper.py .                 [ 51%]
tests/cupyx_tests/scipy_tests/fftpack_tests/test_fftpack.py ............ [ 51%]
........................................................................ [ 51%]
........................................................................ [ 51%]
........................................................................ [ 51%]
........................................................................ [ 52%]
........................................................................ [ 52%]
........................................................................ [ 52%]
........................................................................ [ 52%]
........................................................................ [ 52%]
........................................................................ [ 52%]
........................................................................ [ 52%]
........................................................................ [ 52%]
........................................................................ [ 52%]
.........................                                                [ 52%]
tests/cupyx_tests/scipy_tests/linalg_tests/test_decomp_lu.py ........... [ 52%]
.............................................F...FF                      [ 52%]
tests/cupyx_tests/scipy_tests/linalg_tests/test_solve_triangular.py .... [ 52%]
........................................................................ [ 53%]
........................................................................ [ 53%]
........................................................................ [ 53%]
....................................................................     [ 53%]
tests/cupyx_tests/scipy_tests/linalg_tests/test_special_matrices.py .... [ 53%]
........................................................................ [ 53%]
.................................................                        [ 53%]
tests/cupyx_tests/scipy_tests/ndimage_tests/test_filters.py ...sss...... [ 53%]
sss......sss......sss......sss......sss.........sss......sss......sss... [ 53%]
...sss......sss......sss................................................ [ 53%]
...........................................................sss......sss. [ 53%]
.....sss......sss......sss......sss.........sss......sss......sss......s [ 53%]
ss......sss......sss.................................................... [ 53%]
.......................................................sss......sss..... [ 54%]
.sss......sss......sss......sss.........sss......sss......sss......sss.. [ 54%]
....sss......sss........................................................ [ 54%]
...................................................sss......sss......sss [ 54%]
......sss......sss......sss.........sss......sss......sss......sss...... [ 54%]
sss......sss............................................................ [ 54%]
...............................................sss......sss......sss.... [ 54%]
..sss......sss......sss.........sss......sss......sss......sss......sss. [ 54%]
.....sss................................................................ [ 54%]
...........................................sss......sss......sss......ss [ 54%]
s......sss......sss.........sss......sss......sss......sss......sss..... [ 55%]
.sss.................................................................... [ 55%]
.......................................sss......sss......sss......sss... [ 55%]
...sss......sss.........sss......sss......sss......sss......sss......sss [ 55%]
........................................................................ [ 55%]
...................................sss......sss......sss......sss......s [ 55%]
ss......sss.........sss......sss......sss......sss......sss......sss.... [ 55%]
........................................................................ [ 55%]
...............................sss......sss......sss......sss......sss.. [ 55%]
....sss.........sss......sss......sss......sss......sss......sss........ [ 55%]
........................................................................ [ 56%]
...........................sss......sss......sss......sss......sss...... [ 56%]
sss.........sss......sss......sss......sss......sss......sss............ [ 56%]
........................................................................ [ 56%]
.......................sss......sss......sss......sss......sss......sss. [ 56%]
........sss......sss......sss......sss......sss......sss................ [ 56%]
........................................................................ [ 56%]
...................sss......sss......sss......sss......sss......sss..... [ 56%]
....sss......sss......sss......sss......sss......sss.................... [ 56%]
........................................................................ [ 56%]
...............sss......sss......sss......sss......sss......sss......... [ 57%]
sss......sss......sss......sss......sss......sss........................ [ 57%]
........................................................................ [ 57%]
...........sss......sss......sss......sss......sss......sss.........sss. [ 57%]
.....sss......sss......sss......sss......sss............................ [ 57%]
........................................................................ [ 57%]
xxx....sss......sss......sss......sss......sss......sss....x..x.sss.x..x [ 57%]
.sss.x..x.sss......sss......sss......sss................................ [ 57%]
.....................................................x..x.............x. [ 57%]
......................................x.....x....x.....x......x.....x... [ 57%]
........................................................................ [ 58%]
........................................................................ [ 58%]
........................................................................ [ 58%]
........................................................................ [ 58%]
........................................................................ [ 58%]
........................................................................ [ 58%]
........................................................................ [ 58%]
........................................................................ [ 58%]
........................................................................ [ 58%]
........................................................................ [ 58%]
........................................................................ [ 59%]
........................................................................ [ 59%]
........................................................................ [ 59%]
........................................................................ [ 59%]
........................................................................ [ 59%]
........................................................................ [ 59%]
........................................................................ [ 59%]
........................................................................ [ 59%]
........................................................................ [ 59%]
........................................................................ [ 59%]
........................................................................ [ 60%]
........................................................................ [ 60%]
........................................................................ [ 60%]
........................................................................ [ 60%]
........................................................................ [ 60%]
........................................................................ [ 60%]
........................s.s.s.s.s.s.s.s.s.s.s.s.s.s.s.s.s.s............. [ 60%]
........................................................................ [ 60%]
.........................s.s.s.s.s.s.s.s.s.s.s.s.s.s.s.s.s.ss.s.s.s.s.s. [ 60%]
s.s.s.s.s.s.s.s.s.s.s.s................................................. [ 60%]
.............................................................s.s.s.s.s.s [ 61%]
.s.s.s.s.s.s.s.s.s.s.s.ss.s.s.s.s.s.s.s.s.s.s.s.s.s.s.s.s.s............. [ 61%]
........................................................................ [ 61%]
.........................s.s.s.s.s.s.s.s.s.s.s.s.s.s.s.s.s.ss.s.s.s.s.s. [ 61%]
s.s.s.s.s.s.s.s.s.s.s.s................................................. [ 61%]
.............................................................s.s.s.s.s.s [ 61%]
.s.s.s.s.s.s.s.s.s.s.s.ss.s.s.s.s.s.s.s.s.s.s.s.s.s.s.s.s.s............. [ 61%]
........................................................................ [ 61%]
.........................s.s.s.s.s.s.s.s.s.s.s.s.s.s.s.s.s.ss.s.s.s.s.s. [ 61%]
s.s.s.s.s.s.s.s.s.s.s.s................................................. [ 61%]
.............................................................s.s.s.s.s.s [ 62%]
.s.s.s.s.s.s.s.s.s.s.s.ss.s.s.s.s.s.s.s.s.s.s.s.s.s.s.s.s.s............. [ 62%]
........................................................................ [ 62%]
.........................s.s.s.s.s.s.s.s.s.s.s.s.s.s.s.s.s.ss.s.s.s.s.s. [ 62%]
s.s.s.s.s.s.s.s.s.s.s.s................................................. [ 62%]
.............................................................s.s.s.s.s.s [ 62%]
.s.s.s.s.s.s.s.s.s.s.s.ssss..sss..sss............sss..sss..sss.......... [ 62%]
..sss..sss..sss............sss..sss..sss............sss..sss..sss....... [ 62%]
.....sss..sss..sss............sss..sss..sss............sss..sss..sss.... [ 62%]
........sss..sss..sss............sss..sss..sss............sss..sss..sss. [ 62%]
...........sss..sss..sss................................................ [ 63%]
........................................................................ [ 63%]
....................................                                     [ 63%]
tests/cupyx_tests/scipy_tests/ndimage_tests/test_fourier.py ............ [ 63%]
........................................................................ [ 63%]
........................................................................ [ 63%]
........................................................................ [ 63%]
........................................................................ [ 63%]
........................................................................ [ 63%]
........................................................................ [ 63%]
........................................................................ [ 63%]
........................................                                 [ 63%]
tests/cupyx_tests/scipy_tests/ndimage_tests/test_interpolation.py ...... [ 63%]
........................................................................ [ 64%]
........................................................................ [ 64%]
........................................................................ [ 64%]
........................................................................ [ 64%]
........................................................................ [ 64%]
........................................................................ [ 64%]
........................................................................ [ 64%]
........................................................................ [ 64%]
........................................................................ [ 64%]
........................................................................ [ 64%]
........................................................................ [ 65%]
........................................................................ [ 65%]
........................................................................ [ 65%]
........................................................................ [ 65%]
........................................................................ [ 65%]
........................................................................ [ 65%]
........................................................................ [ 65%]
................FF...................................................... [ 65%]
........................................................................ [ 65%]
........................................................................ [ 65%]
........................................................................ [ 66%]
........................................................................ [ 66%]
........................................................................ [ 66%]
........................................................................ [ 66%]
........................................................................ [ 66%]
........................................................................ [ 66%]
........................................................................ [ 66%]
........................................................................ [ 66%]
........................................................................ [ 66%]
........................................................................ [ 66%]
........................................................................ [ 67%]
........................................................................ [ 67%]
........................................................................ [ 67%]
........................................................................ [ 67%]
........................................................................ [ 67%]
........................................................................ [ 67%]
........................................................................ [ 67%]
........................................................................ [ 67%]
........................................................................ [ 67%]
........................................................................ [ 67%]
........................................................................ [ 68%]
........................................................................ [ 68%]
........................................................................ [ 68%]
........................................................................ [ 68%]
........................................................................ [ 68%]
........................................................................ [ 68%]
........................................................................ [ 68%]
........................................................................ [ 68%]
........................................................................ [ 68%]
........................................................................ [ 68%]
........................................................................ [ 69%]
........................................................................ [ 69%]
........................................................................ [ 69%]
........................................................................ [ 69%]
........................................................................ [ 69%]
........................................................................ [ 69%]
........................................................................ [ 69%]
........................................................................ [ 69%]
........................................................................ [ 69%]
........................................................................ [ 69%]
........................................................................ [ 69%]
........................................................................ [ 70%]
........................................................................ [ 70%]
........................................................................ [ 70%]
........................................................................ [ 70%]
........................................................................ [ 70%]
........................................................................ [ 70%]
........................................................................ [ 70%]
........................................................................ [ 70%]
........................................................................ [ 70%]
........................................................................ [ 70%]
........................................................................ [ 71%]
........................................................................ [ 71%]
........................................................................ [ 71%]
........................................................................ [ 71%]
........................................................................ [ 71%]
........................................................................ [ 71%]
........................................................................ [ 71%]
........................................................................ [ 71%]
........................................................................ [ 71%]
........................................................................ [ 71%]
........................................................................ [ 72%]
........................................................................ [ 72%]
........................................................................ [ 72%]
........................................................................ [ 72%]
........................................................................ [ 72%]
........................................................................ [ 72%]
........................................................................ [ 72%]
........................................................................ [ 72%]
........................................................................ [ 72%]
........................................................................ [ 72%]
........................................................................ [ 73%]
........................................................................ [ 73%]
........................................................................ [ 73%]
........................................................................ [ 73%]
........................................................................ [ 73%]
........................................................................ [ 73%]
........................................................................ [ 73%]
........................................................................ [ 73%]
........................................................................ [ 73%]
........................................................................ [ 73%]
........................................................................ [ 74%]
........................................................................ [ 74%]
........................................................................ [ 74%]
........................................................................ [ 74%]
........................................................................ [ 74%]
........................................................................ [ 74%]
........................................................................ [ 74%]
........................................................................ [ 74%]
........................................................................ [ 74%]
........................................................................ [ 74%]
........................................................................ [ 75%]
........................................................................ [ 75%]
...............................x...x.x...x.x...x.x...x.............x...x [ 75%]
.x...x.x...x.x...x.............x...x.x...x.x...x.x...x.............x...x [ 75%]
.x...x.x...x.x...x.............x...x.x...x.x...x.x...x.............x...x [ 75%]
.x...x.x...x.x...x.............x...x.x...x.x...x.x...x.............x...x [ 75%]
.x...x.x...x.x...x.............x...x.x...x.x...x.x...x.............x...x [ 75%]
.x...x.x...x.x...x.............x...x.x...x.x...x.x...x.............x...x [ 75%]
.x...x.x...x.x...x.............x...x.x...x.x...x.x...x.............x...x [ 75%]
.x...x.x...x.x...x.............x...x.x...x.x...x.x...x.............x...x [ 75%]
.x...x.x...x.x...x.............x...x.x...x.x...x.x...x.............x...x [ 76%]
.x...x.x...x.x...x.............x...x.x...x.x...x.x...x.............x...x [ 76%]
.x...x.x...x.x...x.............x...x.x...x.x...x.x...x.............x...x [ 76%]
.x...x.x...x.x...x.............x...x.x...x.x...x.x...x.............x...x [ 76%]
.x...x.x...x.x...x.............x...x.x...x.x...x.x...x.............x...x [ 76%]
.x...x.x...x.x...x.............x...x.x...x.x...x.x...x.............x...x [ 76%]
.x...x.x...x.x...x.............x...x.x...x.x...x.x...x.............x...x [ 76%]
.x...x.x...x.x...x.............x...x.x...x.x...x.x...x.............x...x [ 76%]
.x...x.x...x.x...x...................................................... [ 76%]
........................................................................ [ 76%]
........................................................................ [ 77%]
........................................................................ [ 77%]
........................................................................ [ 77%]
........................................................................ [ 77%]
........................................................................ [ 77%]
........................................................................ [ 77%]
........................................................................ [ 77%]
........................................................................ [ 77%]
........................................................................ [ 77%]
........................................................................ [ 77%]
........................................................................ [ 78%]
........................................................................ [ 78%]
........................................................................ [ 78%]
........................................................................ [ 78%]
......................FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF [ 78%]
FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFssssssssssssssssFFFFFFFFFFFFFFFFFFFFFFFFFF [ 78%]
FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFssssssssssssssssFF [ 78%]
FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF [ 78%]
FFFFFFssssssssssssssssFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF [ 78%]
FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFsssssssssssssssss......................... [ 78%]
........................................................................ [ 79%]
........................................................................ [ 79%]
........................................................................ [ 79%]
..................................................x.....x.....x.....x... [ 79%]
..x.....x.....x.....x.....x.....x.....x.....x.......x........x..x..x.... [ 79%]
....s................................................................... [ 79%]
........................................................................ [ 79%]
........................................................................ [ 79%]
........................................................................ [ 79%]
........................................................................ [ 79%]
........................................................................ [ 80%]
........................................................................ [ 80%]
........................................................................ [ 80%]
........................................................................ [ 80%]
........................................................................ [ 80%]
................................x.....x....................x.....x...... [ 80%]
..............x.....x....................x.....x....................x... [ 80%]
..x....................x.....x....................x.....x............... [ 80%]
.....x.....x............................................................ [ 80%]
........................................................................ [ 80%]
........................................................................ [ 81%]
.................................................................s...... [ 81%]
........................................................................ [ 81%]
........................................................................ [ 81%]
........................................................................ [ 81%]
......................................FF..........FF....FF.............. [ 81%]
........FF....FF..........FF....FF......................FFss............ [ 81%]
........................................................................ [ 81%]
........................................................................ [ 81%]
........................................................................ [ 81%]
........................................................................ [ 81%]
........................................................................ [ 82%]
........................................................................ [ 82%]
........................................................................ [ 82%]
........................................................................ [ 82%]
........................................................................ [ 82%]
........................................................................ [ 82%]
....................................ssssssssssssssssssssssssssssssssssss [ 82%]
ssssssssssss                                                             [ 82%]
tests/cupyx_tests/scipy_tests/ndimage_tests/test_measurements.py ....... [ 82%]
........................................................................ [ 82%]
........................................................................ [ 82%]
........................................................................ [ 83%]
........................................................................ [ 83%]
........................................................................ [ 83%]
........................................................................ [ 83%]
........................................................................ [ 83%]
........................................................................ [ 83%]
........................................................................ [ 83%]
........................................................................ [ 83%]
........................................................................ [ 83%]
........................................................................ [ 83%]
........................................................................ [ 84%]
........................................................................ [ 84%]
........................................................................ [ 84%]
........................................................................ [ 84%]
........................................................................ [ 84%]
........................................................................ [ 84%]
........................................................................ [ 84%]
........................................................................ [ 84%]
........................................................................ [ 84%]
........................................................................ [ 84%]
........................................................................ [ 84%]
........................................................................ [ 85%]
........................................................................ [ 85%]
........................................................................ [ 85%]
........................................................................ [ 85%]
........................................................................ [ 85%]
........................................................................ [ 85%]
........................................................................ [ 85%]
........................................................................ [ 85%]
........................................................................ [ 85%]
........................................................................ [ 85%]
........................................................................ [ 86%]
........................................................................ [ 86%]
........................................................................ [ 86%]
........................................................................ [ 86%]
...................xx..........xx..........xx..........xx..........xx... [ 86%]
...................xx..................................xx............... [ 86%]
...................xx..........xx..........xx..........xx..........xx... [ 86%]
...................xx..................................xx............... [ 86%]
........................................................................ [ 86%]
........................................................................ [ 86%]
.................                                                        [ 87%]
tests/cupyx_tests/scipy_tests/ndimage_tests/test_morphology.py ......... [ 87%]
......................s....s....s..s....s....s.......................... [ 87%]
..........s....s....s..s....s....s....................................s. [ 87%]
...s....s..s....s....s....................................s....s....s..s [ 87%]
....s....s....................................s....s....s..s....s....s.. [ 87%]
..................................s....s....s..s....s....s.............. [ 87%]
......................s....s....s..s....s....s.......................... [ 87%]
..........s....s....s..s....s....s....................................s. [ 87%]
...s....s..s....s....s....................................s....s....s..s [ 87%]
....s....s....................................s....s....s..s....s....s.. [ 87%]
..................................s....s....s..s....s....s.............. [ 88%]
......................s....s....s..s....s....s.......................... [ 88%]
..........s....s....s..s....s....s....................................s. [ 88%]
...s....s..s....s....s....................................s....s....s..s [ 88%]
....s....s....................................s....s....s..s....s....s.. [ 88%]
..................................s....s....s..s....s....s.............. [ 88%]
......................s....s....s..s....s....s.......................... [ 88%]
..........s....s....s..s....s....s....................................s. [ 88%]
...s....s..s....s....s....................................s....s....s..s [ 88%]
....s....s....................................s....s....s..s....s....s.. [ 88%]
..................................s....s....s..s....s....s.............. [ 88%]
........................................................................ [ 89%]
........................................................................ [ 89%]
........................................................................ [ 89%]
........................................................................ [ 89%]
........................................................................ [ 89%]
........................................................................ [ 89%]
........................................................................ [ 89%]
.......................................................................s [ 89%]
.s.s.............s.s.s.............s.s.s.............s.s.s.............s [ 89%]
.s.s.............s.s.s.............s.s.s.............s.s.s.............s [ 89%]
.s.s.............s.s.s.............s.s.s.............s.s.s.............s [ 90%]
.s.s.............s.s.s.............s.s.s.............s.s.s.............s [ 90%]
.s.s.............s.s.s.............s.s.s.............s.s.s.............s [ 90%]
.s.s.............s.s.s.............s.s.s.............s.s.s.............s [ 90%]
.s.s.............s.s.s.............s.s.s.............s.s.s.............s [ 90%]
.s.s.............s.s.s.............s.s.s.............s.s.s.............s [ 90%]
.s.s.............s.s.s.............s.s.s.............s.s.s.............s [ 90%]
.s.s.............s.s.s.............s.s.s.............s.s.s.............s [ 90%]
.s.s.............s.s.s.............s.s.s.............s.s.s.............s [ 90%]
.s.s.............s.s.s.............s.s.s.............s.s.s.............s [ 90%]
.s.s.............s.s.s.............s.s.s.............s.s.s.............s [ 91%]
.s.s.............s.s.s.............s.s.s.............s.s.s.............s [ 91%]
.s.s.............s.s.s.............s.s.s.............s.s.s.............s [ 91%]
.s.s.............s.s.s.............s.s.s.............s.s.s.............s [ 91%]
.s.s.............s.s.s.............s.s.s.............s.s.s.............s [ 91%]
.s.s.............s.s.s.............s.s.s.............s.s.s.............s [ 91%]
.s.s.............s.s.s.............s.s.s.............s.s.s.............s [ 91%]
.s.s.............s.s.s.............s.s.s.............s.s.s.............s [ 91%]
.s.s.............s.s.s.............s.s.s.............s.s.s.............s [ 91%]
.s.s.............s.s.s.............s.s.s.............s.s.s.............s [ 91%]
.s.s.............s.s.s.............s.s.s.............s.s.s.............s [ 92%]
.s.s.............s.s.s.............s.s.s.............s.s.s.............s [ 92%]
.s.s.............s.s.s.............s.s.s.............s.s.s.............s [ 92%]
.s.s.............s.s.s.............s.s.s.............s.s.s.............s [ 92%]
.s.s.............s.s.s.............s.s.s.............s.s.s.............s [ 92%]
.s.s.............s.s.s.............s.s.s.............s.s.s.............s [ 92%]
.s.s.............s.s.s.............s.s.s.............s.s.s.............s [ 92%]
.s.s.............s.s.s.............s.s.s.............s.s.s.............s [ 92%]
.s.s.............s.s.s.............s.s.s.............s.s.s.............s [ 92%]
.s.s.............s.s.s.............s.s.s.............s.s.s.............s [ 92%]
.s.s.............s.s.s.............s.s.s.............s.s.s.............s [ 93%]
.s.s.............s.s.s.............s.s.s.............s.s.s.............s [ 93%]
.s.s.............s.s.s.............s.s.s.............s.s.s.............s [ 93%]
.s.s.............s.s.s.............s.s.s.............s.s.s.............. [ 93%]
........................................................................ [ 93%]
......s....s....s....s....s....s....s....s....s....s....s....s......s... [ 93%]
.s....s....s....s....s....s....s....s....s....s....s.................... [ 93%]
..........................................s....s....s....s....s....s.... [ 93%]
s....s....s....s....s....s......s....s....s....s....s....s....s....s.... [ 93%]
s....s....s....s........................................................ [ 93%]
......s....s....s....s....s....s....s....s....s....s....s....s......s... [ 94%]
.s....s....s....s....s....s....s....s....s....s....s.................... [ 94%]
..........................................s....s....s....s....s....s.... [ 94%]
s....s....s....s....s....s......s....s....s....s....s....s....s....s.... [ 94%]
s....s....s....s........................................................ [ 94%]
......s....s....s....s....s....s....s....s....s....s....s....s......s... [ 94%]
.s....s....s....s....s....s....s....s....s....s....s.................... [ 94%]
..........................................s....s....s....s....s....s.... [ 94%]
s....s....s....s....s....s......s....s....s....s....s....s....s....s.... [ 94%]
s....s....s....s........................................................ [ 94%]
......s....s....s....s....s....s....s....s....s....s....s....s......s... [ 95%]
.s....s....s....s....s....s....s....s....s....s....s.................... [ 95%]
..........................................s....s....s....s....s....s.... [ 95%]
s....s....s....s....s....s......s....s....s....s....s....s....s....s.... [ 95%]
s....s....s....s........................................................ [ 95%]
......s....s....s....s....s....s....s....s....s....s....s....s......s... [ 95%]
.s....s....s....s....s....s....s....s....s....s....s.................... [ 95%]
..........................................s....s....s....s....s....s.... [ 95%]
s....s....s....s....s....s......s....s....s....s....s....s....s....s.... [ 95%]
s....s....s....s........................................................ [ 95%]
......s....s....s....s....s....s....s....s....s....s....s....s......s... [ 96%]
.s....s....s....s....s....s....s....s....s....s....s.................... [ 96%]
..........................................s....s....s....s....s....s.... [ 96%]
s....s....s....s....s....s......s....s....s....s....s....s....s....s.... [ 96%]
s....s....s....s........................................................ [ 96%]
........................................................................ [ 96%]
........................................................................ [ 96%]
........................................................................ [ 96%]
........................................................ssssssss........ [ 96%]
........................................................ssssssss........ [ 96%]
........................................................ssssssss........ [ 97%]
........................................................ssssssss........ [ 97%]
........................................................................ [ 97%]
........................................................................ [ 97%]
........................................................................ [ 97%]
........................................................................ [ 97%]
........................................................................ [ 97%]
........................................................................ [ 97%]
........................................................................ [ 97%]
........................................................................ [ 97%]
........................................................................ [ 98%]
........................................................................ [ 98%]
........................................................................ [ 98%]
........................................................................ [ 98%]
........................................................................ [ 98%]
........................................................................ [ 98%]
                                                                         [ 98%]
tests/cupyx_tests/scipy_tests/signal_tests/test_bsplines.py ............ [ 98%]
                                                                         [ 98%]
tests/cupyx_tests/scipy_tests/signal_tests/test_signaltools.py ......... [ 98%]
........................................................................ [ 98%]
......................................................xxxxxxxxx......... [ 98%]
...........................xxxxxxxxxxxx................................. [ 98%]
...FFF......xxx..x.x..x.x..x.x..x.x..x.x..x.x..x.x..x.x..x.x..x.x..x.x.. [ 98%]
x.x..................................................................... [ 99%]
........................................................................ [ 99%]
........................................................................ [ 99%]
........................................................................ [ 99%]
........................................................................ [ 99%]
..................ssssssssssssssssss                                     [ 99%]
tests/cupyx_tests/scipy_tests/sparse_tests/csgraph_tests/test_traversal.py s [ 99%]
ssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssss [ 99%]
sssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssss  [ 99%]
tests/cupyx_tests/scipy_tests/special_tests/test_bessel.py ............  [ 99%]
tests/cupyx_tests/scipy_tests/special_tests/test_convex_analysis.py .... [ 99%]
.                                                                        [ 99%]
tests/cupyx_tests/scipy_tests/special_tests/test_digamma.py .....        [ 99%]
tests/cupyx_tests/scipy_tests/special_tests/test_erf.py ............     [ 99%]
tests/cupyx_tests/scipy_tests/special_tests/test_gamma.py ....           [ 99%]
tests/cupyx_tests/scipy_tests/special_tests/test_gammaln.py ....         [ 99%]
tests/cupyx_tests/scipy_tests/special_tests/test_polygamma.py ....       [ 99%]
tests/cupyx_tests/scipy_tests/special_tests/test_statistics.py ..        [ 99%]
tests/cupyx_tests/scipy_tests/special_tests/test_zeta.py ....            [ 99%]
tests/cupyx_tests/scipy_tests/stats_tests/test_distributions.py ........ [ 99%]
........................................................................ [ 99%]
........................................................................ [ 99%]
                                                                         [ 99%]
tests/cupyx_tests/tools_tests/test_install_library.py ......             [ 99%]
tests/example_tests/test_custom_struct.py ...                            [ 99%]
tests/example_tests/test_finance.py ...                                  [ 99%]
tests/example_tests/test_gemm.py .                                       [ 99%]
tests/example_tests/test_gmm.py ss                                       [ 99%]
tests/example_tests/test_kmeans.py sss                                   [ 99%]
tests/install_tests/test_build.py sx.                                    [ 99%]
tests/install_tests/test_utils.py ..                                     [100%]

=================================== FAILURES ===================================
_____________________ TestNewDLPackConversion.test_stream ______________________

self = <cupy_tests.core_tests.test_dlpack.TestNewDLPackConversion testMethod=test_stream>

    def test_stream(self):
        allowed_streams = ['null', True]
        if not cuda.runtime.is_hip:
            allowed_streams.append('ptds')
    
        # stream order is automatically established via DLPack protocol
        for src_s in [self._get_stream(s) for s in allowed_streams]:
            for dst_s in [self._get_stream(s) for s in allowed_streams]:
                with src_s:
                    orig_array = _gen_array(cupy.float32)
                    # If src_s != dst_s, dst_s waits until src_s complete.
                    # Null stream (0) must be passed as streamLegacy (1).
>                   dltensor = orig_array.__dlpack__(
                        1 if dst_s.ptr == 0 else dst_s.ptr)

tests/cupy_tests/core_tests/test_dlpack.py:69: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

>   raise ValueError(
E   ValueError: On ROCm/HIP, the valid stream for the DLPack protocol is -1, 0, or any value > 2, but 1 was provided

cupy/_core/core.pyx:242: ValueError
______________ TestNdarrayCopy.test_copy_multi_device_with_stream ______________

self = <cupy_tests.core_tests.test_ndarray.TestNdarrayCopy testMethod=test_copy_multi_device_with_stream>

    @testing.multi_gpu(2)
    def test_copy_multi_device_with_stream(self):
        # Kernel that takes long enough then finally writes values.
        kern = cupy.RawKernel(
            _test_copy_multi_device_with_stream_src, 'wait_and_write')
    
        # Allocates a memory and launches the kernel on a device with its
        # stream.
        with cuda.Device(0):
            # Keep this stream alive over the D2D copy below for HIP
            with cuda.Stream() as s1:  # NOQA
                a = cupy.zeros((2,), dtype=numpy.uint64)
                kern((1,), (1,), a)
    
        # D2D copy to another device with another stream should get the
        # original values of the memory before the kernel on the first device
        # finally makes the write.
        with cuda.Device(1):
            with cuda.Stream():
                b = a.copy()
>               testing.assert_array_equal(
                    b, numpy.array([0, 0], dtype=numpy.uint64))

tests/cupy_tests/core_tests/test_ndarray.py:218: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

x = array([13744632839234567870, 13744632839234567870], dtype=uint64)
y = array([0, 0], dtype=uint64), err_msg = '', verbose = True
strides_check = False

    def assert_array_equal(x, y, err_msg='', verbose=True, strides_check=False):
        """Raises an AssertionError if two array_like objects are not equal.
    
        Args:
             x(numpy.ndarray or cupy.ndarray): The actual object to check.
             y(numpy.ndarray or cupy.ndarray): The desired, expected object.
             strides_check(bool): If ``True``, consistency of strides is also
                 checked.
             err_msg(str): The error message to be printed in case of failure.
             verbose(bool): If ``True``, the conflicting values
                 are appended to the error message.
    
        .. seealso:: :func:`numpy.testing.assert_array_equal`
        """
>       numpy.testing.assert_array_equal(
            cupy.asnumpy(x), cupy.asnumpy(y), err_msg=err_msg,
            verbose=verbose)
E       AssertionError: 
E       Arrays are not equal
E       
E       Mismatched elements: 2 / 2 (100%)
E       Max absolute difference: 13744632839234567870
E       Max relative difference: inf
E        x: array([13744632839234567870, 13744632839234567870], dtype=uint64)
E        y: array([0, 0], dtype=uint64)

cupy/testing/_array.py:91: AssertionError
____________________ TestArrayBoolOp.test_bool_one_element _____________________
[XPASS(strict)] ROCm/HIP may have a bug
_________________ TestVectorize.test_vectorize_arithmetic_ops __________________
cupy/testing/_helper.py:825: in test_func
    impl(self, *args, **kw)
cupy/testing/_helper.py:343: in test_func
    check_func(cupy_r, numpy_r)
cupy/testing/_helper.py:495: in check_func
    _array.assert_allclose(c, n, rtol1, atol1, err_msg, verbose)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

actual = array([[1.7425e+02, 3.3875e+02, 8.4141e+00, 6.7062e+01, 3.7906e+01,
        2.3109e+01, 6.8164e+00, 3.0906e+01, 6.3047...+02, 2.8734e+01, 4.3031e+01,
        3.3750e+00, 3.6906e+01, 1.7362e+02, 1.3227e+01, 3.0547e+00]],
      dtype=float16)
desired = array([[1.7425e+02, 3.3875e+02, 8.4141e+00, 6.7062e+01, 3.7906e+01,
        2.3109e+01, 6.8164e+00, 3.0906e+01, 6.3047...+02, 2.8734e+01, 4.3031e+01,
        3.3750e+00, 3.6906e+01, 1.7362e+02, 1.3227e+01, 3.0547e+00]],
      dtype=float16)
rtol = 1e-05, atol = 0, err_msg = '', verbose = True

    def assert_allclose(actual, desired, rtol=1e-7, atol=0, err_msg='',
                        verbose=True):
        """Raises an AssertionError if objects are not equal up to desired tolerance.
    
        Args:
             actual(numpy.ndarray or cupy.ndarray): The actual object to check.
             desired(numpy.ndarray or cupy.ndarray): The desired, expected object.
             rtol(float): Relative tolerance.
             atol(float): Absolute tolerance.
             err_msg(str): The error message to be printed in case of failure.
             verbose(bool): If ``True``, the conflicting
                 values are appended to the error message.
    
        .. seealso:: :func:`numpy.testing.assert_allclose`
    
        """  # NOQA
>       numpy.testing.assert_allclose(
            cupy.asnumpy(actual), cupy.asnumpy(desired),
            rtol=rtol, atol=atol, err_msg=err_msg, verbose=verbose)
E       AssertionError: 
E       Not equal to tolerance rtol=1e-05, atol=0
E       
E       Mismatched elements: 1 / 600 (0.167%)
E       Max absolute difference: 0.5
E       Max relative difference: 0.000664
E        x: array([[1.7425e+02, 3.3875e+02, 8.4141e+00, 6.7062e+01, 3.7906e+01,
E               2.3109e+01, 6.8164e+00, 3.0906e+01, 6.3047e+00, 1.6650e+02,
E               5.6094e+00, 9.8900e+02, 2.4281e+01, 4.8500e+02, 1.0359e+01,...
E        y: array([[1.7425e+02, 3.3875e+02, 8.4141e+00, 6.7062e+01, 3.7906e+01,
E               2.3109e+01, 6.8164e+00, 3.0906e+01, 6.3047e+00, 1.6650e+02,
E               5.6094e+00, 9.8900e+02, 2.4281e+01, 4.8500e+02, 1.0359e+01,...

cupy/testing/_array.py:24: AssertionError
----------------------------- Captured stdout call -----------------------------
dtype is <class 'numpy.float16'>
___________________________ TestIX_.test_ix_ndarray ____________________________
[XPASS(strict)] HIP may have a bug
_________ TestConvolve_param_0_{mode='valid'}.test_convolve_diff_types _________
[XPASS(strict)] HIP/ROCm may have a bug with larger `b`
_________ TestConvolve_param_1_{mode='same'}.test_convolve_diff_types __________
[XPASS(strict)] HIP/ROCm may have a bug with larger `b`
_________ TestConvolve_param_2_{mode='full'}.test_convolve_diff_types __________
[XPASS(strict)] HIP/ROCm may have a bug with larger `b`
___________ TestDistributionsPoissonInvalid.test_none_lam_generator ____________

self = <cupy_tests.random_tests.test_distributions.TestDistributionsPoissonInvalid testMethod=test_none_lam_generator>

    def test_none_lam_generator(self):
        with self.assertRaises(TypeError):
>           cupy.random.default_rng(0).poisson(None)

tests/cupy_tests/random_tests/test_distributions.py:565: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

    def default_rng(seed=None):  # NOQA  avoid redefinition of seed
        """Construct a new Generator with the default BitGenerator (XORWOW).
    
        Args:
            seed (None, int, array_like[ints], numpy.random.SeedSequence, cupy.random.BitGenerator, cupy.random.Generator, optional):
                A seed to initialize the :class:`cupy.random.BitGenerator`. If an
                ``int`` or ``array_like[ints]`` or None is passed, then it will be
                passed to :class:`numpy.random.SeedSequence` to detive the initial
                :class:`BitGenerator` state. One may also pass in a `SeedSequence
                instance. Adiditionally, when passed :class:`BitGenerator`, it will
                be wrapped by :class:`Generator`. If passed a :class:`Generator`,
                it will be returned unaltered.
    
        Returns:
            Generator: The initialized generator object.
        """  # NOQA, list of types need to be in one line for sphinx
        if runtime.is_hip:
>           raise RuntimeError('Generator API not supported in HIP,'
                               ' please use the legacy one.')
E           RuntimeError: Generator API not supported in HIP, please use the legacy one.

cupy/random/__init__.py:36: RuntimeError
_______ TestDistributionsStandardGammaInvalid.test_none_shape_generator ________

self = <cupy_tests.random_tests.test_distributions.TestDistributionsStandardGammaInvalid testMethod=test_none_shape_generator>

    def test_none_shape_generator(self):
        with self.assertRaises(TypeError):
>           cupy.random.default_rng(0).standard_gamma(None)

tests/cupy_tests/random_tests/test_distributions.py:682: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

    def default_rng(seed=None):  # NOQA  avoid redefinition of seed
        """Construct a new Generator with the default BitGenerator (XORWOW).
    
        Args:
            seed (None, int, array_like[ints], numpy.random.SeedSequence, cupy.random.BitGenerator, cupy.random.Generator, optional):
                A seed to initialize the :class:`cupy.random.BitGenerator`. If an
                ``int`` or ``array_like[ints]`` or None is passed, then it will be
                passed to :class:`numpy.random.SeedSequence` to detive the initial
                :class:`BitGenerator` state. One may also pass in a `SeedSequence
                instance. Adiditionally, when passed :class:`BitGenerator`, it will
                be wrapped by :class:`Generator`. If passed a :class:`Generator`,
                it will be returned unaltered.
    
        Returns:
            Generator: The initialized generator object.
        """  # NOQA, list of types need to be in one line for sphinx
        if runtime.is_hip:
>           raise RuntimeError('Generator API not supported in HIP,'
                               ' please use the legacy one.')
E           RuntimeError: Generator API not supported in HIP, please use the legacy one.

cupy/random/__init__.py:36: RuntimeError
________ TestCorrelate_param_0_{mode='valid'}.test_correlate_diff_types ________
[XPASS(strict)] ROCm/HIP may have a bug
________ TestCorrelate_param_1_{mode='full'}.test_correlate_diff_types _________
[XPASS(strict)] ROCm/HIP may have a bug
________ TestCorrelate_param_2_{mode='same'}.test_correlate_diff_types _________
[XPASS(strict)] ROCm/HIP may have a bug
_________________________ TestScatter.test_scatter_add _________________________

self = <cupyx_tests.test_scatter.TestScatter testMethod=test_scatter_add>
dtype = <class 'numpy.float16'>

    @testing.for_dtypes('iILQefd')
    def test_scatter_add(self, dtype):
        a = cupy.zeros((3,), dtype=dtype)
        i = cupy.array([1, 1], numpy.int32)
        v = cupy.array([2., 1.], dtype=dtype)
        cupyx.scatter_add(a, i, v)
>       testing.assert_array_equal(a, cupy.array([0, 3, 0], dtype=dtype))

tests/cupyx_tests/test_scatter.py:19: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

x = array([0.e+00, 2.e-07, 0.e+00], dtype=float16)
y = array([0., 3., 0.], dtype=float16), err_msg = '', verbose = True
strides_check = False

    def assert_array_equal(x, y, err_msg='', verbose=True, strides_check=False):
        """Raises an AssertionError if two array_like objects are not equal.
    
        Args:
             x(numpy.ndarray or cupy.ndarray): The actual object to check.
             y(numpy.ndarray or cupy.ndarray): The desired, expected object.
             strides_check(bool): If ``True``, consistency of strides is also
                 checked.
             err_msg(str): The error message to be printed in case of failure.
             verbose(bool): If ``True``, the conflicting values
                 are appended to the error message.
    
        .. seealso:: :func:`numpy.testing.assert_array_equal`
        """
>       numpy.testing.assert_array_equal(
            cupy.asnumpy(x), cupy.asnumpy(y), err_msg=err_msg,
            verbose=verbose)
E       AssertionError: 
E       Arrays are not equal
E       
E       Mismatched elements: 1 / 3 (33.3%)
E       Max absolute difference: 3.
E       Max relative difference: 1.
E        x: array([0.e+00, 2.e-07, 0.e+00], dtype=float16)
E        y: array([0., 3., 0.], dtype=float16)

cupy/testing/_array.py:91: AssertionError
----------------------------- Captured stdout call -----------------------------
dtype is e
_ TestHfftn_param_25_{axes=(0, 1, 2), norm='backward', s=None, shape=(3, 5, 20)}.test_ihfftn _

self = <<cupyx_tests.scipy_tests.fft_tests.test_fft.TestHfftn_param_25_{axes=(0, 1, 2), norm='backward', s=None, shape=(3, 5, 20)} testMethod=test_ihfftn>  parameter: {'shape': (3, 5, 20), 's': None, 'axes': (0, 1, 2), 'norm': 'backward'}>
xp = <module 'cupy' from '/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.Np3X0NVCM9/cupy/cupy/__init__.py'>
dtype = <class 'numpy.uint16'>

    @testing.for_all_dtypes(no_complex=True)
    @testing.numpy_cupy_allclose(rtol=1e-4, atol=1e-7, accept_error=ValueError,
                                 contiguous_check=False)
    def test_ihfftn(self, xp, dtype):
        x = testing.shaped_random(self.shape, xp, dtype)
        x_orig = x.copy()
        out = _fft_module(xp).ihfftn(x, s=self.s, axes=self.axes,
                                     norm=self.norm)
>       testing.assert_array_equal(x, x_orig)

tests/cupyx_tests/scipy_tests/fft_tests/test_fft.py:1756: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

x = array([[[57677,  1065, 46843, 49214, 47865,  9720,  1896, 16452,  9941,
         24889, 61617, 16435,  6142, 34443, 54... 25288,
         18426, 22099, 49222, 44660, 61538, 60690, 49210,     0,     8,
             9,     9]]], dtype=uint16)
y = array([[[5, 7, 6, 5, 4, 6, 4, 8, 9, 3, 7, 5, 5, 9, 0, 0, 0, 8, 7, 8],
        [9, 7, 4, 7, 1, 6, 1, 9, 5, 4, 2, 7, 4, ...8, 3, 9, 2, 9, 9, 7, 6, 8],
        [2, 8, 6, 0, 3, 1, 9, 4, 4, 6, 3, 1, 8, 1, 5, 2, 0, 8, 9, 9]]],
      dtype=uint16)
err_msg = '', verbose = True, strides_check = False

    def assert_array_equal(x, y, err_msg='', verbose=True, strides_check=False):
        """Raises an AssertionError if two array_like objects are not equal.
    
        Args:
             x(numpy.ndarray or cupy.ndarray): The actual object to check.
             y(numpy.ndarray or cupy.ndarray): The desired, expected object.
             strides_check(bool): If ``True``, consistency of strides is also
                 checked.
             err_msg(str): The error message to be printed in case of failure.
             verbose(bool): If ``True``, the conflicting values
                 are appended to the error message.
    
        .. seealso:: :func:`numpy.testing.assert_array_equal`
        """
>       numpy.testing.assert_array_equal(
            cupy.asnumpy(x), cupy.asnumpy(y), err_msg=err_msg,
            verbose=verbose)
E       AssertionError: Only cupy raises error
E       
E       Traceback (most recent call last):
E         File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.Np3X0NVCM9/cupy/cupy/testing/_helper.py", line 47, in _call_func
E           result = impl(self, *args, **kw)
E         File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.Np3X0NVCM9/cupy/tests/cupyx_tests/scipy_tests/fft_tests/test_fft.py", line 1756, in test_ihfftn
E           testing.assert_array_equal(x, x_orig)
E         File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.Np3X0NVCM9/cupy/cupy/testing/_array.py", line 91, in assert_array_equal
E           numpy.testing.assert_array_equal(
E         File "/home/kmaeh/.pyenv/versions/rocm-ci/lib/python3.8/site-packages/numpy/testing/_private/utils.py", line 930, in assert_array_equal
E           assert_array_compare(operator.__eq__, x, y, err_msg=err_msg,
E         File "/home/kmaeh/.pyenv/versions/rocm-ci/lib/python3.8/site-packages/numpy/testing/_private/utils.py", line 840, in assert_array_compare
E           raise AssertionError(msg)
E       AssertionError: 
E       Arrays are not equal
E       
E       Mismatched elements: 296 / 300 (98.7%)
E       Max absolute difference: 65384
E       Max relative difference: 61537.
E        x: array([[[57677,  1065, 46843, 49214, 47865,  9720,  1896, 16452,  9941,
E                24889, 61617, 16435,  6142, 34443, 54910, 49206, 48720, 43240,
E                 6374, 16476],...
E        y: array([[[5, 7, 6, 5, 4, 6, 4, 8, 9, 3, 7, 5, 5, 9, 0, 0, 0, 8, 7, 8],
E               [9, 7, 4, 7, 1, 6, 1, 9, 5, 4, 2, 7, 4, 5, 0, 6, 6, 6, 9, 6],
E               [3, 4, 6, 0, 6, 6, 2, 1, 3, 3, 5, 4, 9, 1, 2, 1, 6, 2, 4, 2],...

cupy/testing/_array.py:91: AssertionError
----------------------------- Captured stdout call -----------------------------
dtype is <class 'numpy.uint16'>
______ TestLUSolve_param_0_{shapes=((4, 4), (4,)), trans=0}.test_lu_solve ______

self = <<cupyx_tests.scipy_tests.linalg_tests.test_decomp_lu.TestLUSolve_param_0_{shapes=((4, 4), (4,)), trans=0} testMethod=test_lu_solve>  parameter: {'shapes': ((4, 4), (4,)), 'trans': 0}>
xp = <module 'cupy' from '/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.Np3X0NVCM9/cupy/cupy/__init__.py'>
scp = <module 'cupyx.scipy' from '/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.Np3X0NVCM9/cupy/cupyx/scipy/__init__.py'>
dtype = <class 'numpy.float32'>

    @testing.for_dtypes('fdFD')
    @testing.numpy_cupy_allclose(atol=1e-5, scipy_name='scp')
    def test_lu_solve(self, xp, scp, dtype):
        a_shape, b_shape = self.shapes
        A = testing.shaped_random(a_shape, xp, dtype=dtype)
        b = testing.shaped_random(b_shape, xp, dtype=dtype)
        lu = scp.linalg.lu_factor(A)
>       return scp.linalg.lu_solve(lu, b, trans=self.trans)

tests/cupyx_tests/scipy_tests/linalg_tests/test_decomp_lu.py:133: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

lu_and_piv = (array([[ 9.636627  ,  3.8344152 ,  7.91725   ,  5.288949  ],
       [ 0.58946407,  6.995716  , -3.956574  , -2.246352...,
       [ 0.43962973,  0.6823059 ,  0.83048815,  4.776696  ]],
      dtype=float32), array([2, 3, 2, 3], dtype=int32))
b = array([ 0.5098284 ,  0.25080842, -0.34704718,  0.5484196 ], dtype=float32)
trans = 0, overwrite_b = False, check_finite = True

    def lu_solve(lu_and_piv, b, trans=0, overwrite_b=False, check_finite=True):
        """Solve an equation system, ``a * x = b``, given the LU factorization of ``a``
    
        Args:
            lu_and_piv (tuple): LU factorization of matrix ``a`` (``(M, M)``)
                together with pivot indices.
            b (cupy.ndarray): The matrix with dimension ``(M,)`` or
                ``(M, N)``.
            trans ({0, 1, 2}): Type of system to solve:
    
                ========  =========
                trans     system
                ========  =========
                0         a x  = b
                1         a^T x = b
                2         a^H x = b
                ========  =========
            overwrite_b (bool): Allow overwriting data in b (may enhance
                performance)
            check_finite (bool): Whether to check that the input matrices contain
                only finite numbers. Disabling may give a performance gain, but may
                result in problems (crashes, non-termination) if the inputs do
                contain infinities or NaNs.
    
        Returns:
            cupy.ndarray:
                The matrix with dimension ``(M,)`` or ``(M, N)``.
    
        .. seealso:: :func:`scipy.linalg.lu_solve`
        """
    
        (lu, ipiv) = lu_and_piv
    
        _util._assert_cupy_array(lu)
        _util._assert_rank2(lu)
        _util._assert_nd_squareness(lu)
    
        m = lu.shape[0]
        if m != b.shape[0]:
            raise ValueError('incompatible dimensions.')
    
        dtype = lu.dtype
        if dtype.char == 'f':
            getrs = cusolver.sgetrs
        elif dtype.char == 'd':
            getrs = cusolver.dgetrs
        elif dtype.char == 'F':
            getrs = cusolver.cgetrs
        elif dtype.char == 'D':
            getrs = cusolver.zgetrs
        else:
            msg = 'Only float32, float64, complex64 and complex128 are supported.'
            raise NotImplementedError(msg)
    
        if trans == 0:
            trans = cublas.CUBLAS_OP_N
        elif trans == 1:
            trans = cublas.CUBLAS_OP_T
        elif trans == 2:
            trans = cublas.CUBLAS_OP_C
        else:
            raise ValueError('unknown trans')
    
        lu = lu.astype(dtype, order='F', copy=False)
        ipiv = ipiv.astype(ipiv.dtype, order='F', copy=True)
        # cuSolver uses 1-origin while SciPy uses 0-origin
        ipiv += 1
        b = b.astype(dtype, order='F', copy=(not overwrite_b))
    
        if check_finite:
            if lu.dtype.kind == 'f' and not cupy.isfinite(lu).all():
                raise ValueError(
                    'array must not contain infs or NaNs.\n'
                    'Note that when a singular matrix is given, unlike '
                    'scipy.linalg.lu_factor, cupyx.scipy.linalg.lu_factor '
                    'returns an array containing NaN.')
            if b.dtype.kind == 'f' and not cupy.isfinite(b).all():
                raise ValueError(
                    'array must not contain infs or NaNs')
    
        n = 1 if b.ndim == 1 else b.shape[1]
        cusolver_handle = device.get_cusolver_handle()
        dev_info = cupy.empty(1, dtype=numpy.int32)
    
        # solve for the inverse
        getrs(cusolver_handle,
              trans,
              m, n, lu.data.ptr, m, ipiv.data.ptr, b.data.ptr,
              m, dev_info.data.ptr)
    
        if dev_info[0] < 0:
>           raise ValueError('illegal value in %d-th argument of '
                             'internal getrs (lu_solve)' % -dev_info[0])
E           AssertionError: Only cupy raises error
E           
E           Traceback (most recent call last):
E             File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.Np3X0NVCM9/cupy/cupy/testing/_helper.py", line 47, in _call_func
E               result = impl(self, *args, **kw)
E             File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.Np3X0NVCM9/cupy/tests/cupyx_tests/scipy_tests/linalg_tests/test_decomp_lu.py", line 133, in test_lu_solve
E               return scp.linalg.lu_solve(lu, b, trans=self.trans)
E             File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.Np3X0NVCM9/cupy/cupyx/scipy/linalg/decomp_lu.py", line 344, in lu_solve
E               raise ValueError('illegal value in %d-th argument of '
E           ValueError: illegal value in 1409886463-th argument of internal getrs (lu_solve)

cupyx/scipy/linalg/decomp_lu.py:344: AssertionError
----------------------------- Captured stdout call -----------------------------
dtype is f
_____ TestLUSolve_param_4_{shapes=((5, 5), (5, 2)), trans=1}.test_lu_solve _____

self = <<cupyx_tests.scipy_tests.linalg_tests.test_decomp_lu.TestLUSolve_param_4_{shapes=((5, 5), (5, 2)), trans=1} testMethod=test_lu_solve>  parameter: {'shapes': ((5, 5), (5, 2)), 'trans': 1}>
xp = <module 'cupy' from '/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.Np3X0NVCM9/cupy/cupy/__init__.py'>
scp = <module 'cupyx.scipy' from '/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.Np3X0NVCM9/cupy/cupyx/scipy/__init__.py'>
dtype = <class 'numpy.complex64'>

    @testing.for_dtypes('fdFD')
    @testing.numpy_cupy_allclose(atol=1e-5, scipy_name='scp')
    def test_lu_solve(self, xp, scp, dtype):
        a_shape, b_shape = self.shapes
        A = testing.shaped_random(a_shape, xp, dtype=dtype)
        b = testing.shaped_random(b_shape, xp, dtype=dtype)
        lu = scp.linalg.lu_factor(A)
>       return scp.linalg.lu_solve(lu, b, trans=self.trans)

tests/cupyx_tests/scipy_tests/linalg_tests/test_decomp_lu.py:133: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

lu_and_piv = (array([[ 9.786183   +6.7063785j ,  7.9915857  +2.1038256j ,
         4.614794   +1.289263j  ,  7.8052917  +3.1542835j... , -0.1953073  +0.38294038j,
         1.4816577  +3.005199j  ]], dtype=complex64), array([4, 1, 4, 3, 4], dtype=int32))
b = array([[-0.12906706+0.83930093j, -0.4556416 +0.47542247j],
       [-1.6380517 +0.28560114j, -1.3639436 -0.01759141j],
...5160456j ,  0.17068669-1.2632399j ],
       [-0.42293376-0.24016505j, -1.34513   -0.06091501j]],
      dtype=complex64)
trans = 1, overwrite_b = False, check_finite = True

    def lu_solve(lu_and_piv, b, trans=0, overwrite_b=False, check_finite=True):
        """Solve an equation system, ``a * x = b``, given the LU factorization of ``a``
    
        Args:
            lu_and_piv (tuple): LU factorization of matrix ``a`` (``(M, M)``)
                together with pivot indices.
            b (cupy.ndarray): The matrix with dimension ``(M,)`` or
                ``(M, N)``.
            trans ({0, 1, 2}): Type of system to solve:
    
                ========  =========
                trans     system
                ========  =========
                0         a x  = b
                1         a^T x = b
                2         a^H x = b
                ========  =========
            overwrite_b (bool): Allow overwriting data in b (may enhance
                performance)
            check_finite (bool): Whether to check that the input matrices contain
                only finite numbers. Disabling may give a performance gain, but may
                result in problems (crashes, non-termination) if the inputs do
                contain infinities or NaNs.
    
        Returns:
            cupy.ndarray:
                The matrix with dimension ``(M,)`` or ``(M, N)``.
    
        .. seealso:: :func:`scipy.linalg.lu_solve`
        """
    
        (lu, ipiv) = lu_and_piv
    
        _util._assert_cupy_array(lu)
        _util._assert_rank2(lu)
        _util._assert_nd_squareness(lu)
    
        m = lu.shape[0]
        if m != b.shape[0]:
            raise ValueError('incompatible dimensions.')
    
        dtype = lu.dtype
        if dtype.char == 'f':
            getrs = cusolver.sgetrs
        elif dtype.char == 'd':
            getrs = cusolver.dgetrs
        elif dtype.char == 'F':
            getrs = cusolver.cgetrs
        elif dtype.char == 'D':
            getrs = cusolver.zgetrs
        else:
            msg = 'Only float32, float64, complex64 and complex128 are supported.'
            raise NotImplementedError(msg)
    
        if trans == 0:
            trans = cublas.CUBLAS_OP_N
        elif trans == 1:
            trans = cublas.CUBLAS_OP_T
        elif trans == 2:
            trans = cublas.CUBLAS_OP_C
        else:
            raise ValueError('unknown trans')
    
        lu = lu.astype(dtype, order='F', copy=False)
        ipiv = ipiv.astype(ipiv.dtype, order='F', copy=True)
        # cuSolver uses 1-origin while SciPy uses 0-origin
        ipiv += 1
        b = b.astype(dtype, order='F', copy=(not overwrite_b))
    
        if check_finite:
            if lu.dtype.kind == 'f' and not cupy.isfinite(lu).all():
                raise ValueError(
                    'array must not contain infs or NaNs.\n'
                    'Note that when a singular matrix is given, unlike '
                    'scipy.linalg.lu_factor, cupyx.scipy.linalg.lu_factor '
                    'returns an array containing NaN.')
            if b.dtype.kind == 'f' and not cupy.isfinite(b).all():
                raise ValueError(
                    'array must not contain infs or NaNs')
    
        n = 1 if b.ndim == 1 else b.shape[1]
        cusolver_handle = device.get_cusolver_handle()
        dev_info = cupy.empty(1, dtype=numpy.int32)
    
        # solve for the inverse
        getrs(cusolver_handle,
              trans,
              m, n, lu.data.ptr, m, ipiv.data.ptr, b.data.ptr,
              m, dev_info.data.ptr)
    
        if dev_info[0] < 0:
>           raise ValueError('illegal value in %d-th argument of '
                             'internal getrs (lu_solve)' % -dev_info[0])
E           AssertionError: Only cupy raises error
E           
E           Traceback (most recent call last):
E             File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.Np3X0NVCM9/cupy/cupy/testing/_helper.py", line 47, in _call_func
E               result = impl(self, *args, **kw)
E             File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.Np3X0NVCM9/cupy/tests/cupyx_tests/scipy_tests/linalg_tests/test_decomp_lu.py", line 133, in test_lu_solve
E               return scp.linalg.lu_solve(lu, b, trans=self.trans)
E             File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.Np3X0NVCM9/cupy/cupyx/scipy/linalg/decomp_lu.py", line 344, in lu_solve
E               raise ValueError('illegal value in %d-th argument of '
E           ValueError: illegal value in 1857101312-th argument of internal getrs (lu_solve)

cupyx/scipy/linalg/decomp_lu.py:344: AssertionError
----------------------------- Captured stdout call -----------------------------
dtype is F
_____ TestLUSolve_param_5_{shapes=((5, 5), (5, 2)), trans=2}.test_lu_solve _____

self = <<cupyx_tests.scipy_tests.linalg_tests.test_decomp_lu.TestLUSolve_param_5_{shapes=((5, 5), (5, 2)), trans=2} testMethod=test_lu_solve>  parameter: {'shapes': ((5, 5), (5, 2)), 'trans': 2}>
xp = <module 'cupy' from '/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.Np3X0NVCM9/cupy/cupy/__init__.py'>
scp = <module 'cupyx.scipy' from '/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.Np3X0NVCM9/cupy/cupyx/scipy/__init__.py'>
dtype = <class 'numpy.complex128'>

    @testing.for_dtypes('fdFD')
    @testing.numpy_cupy_allclose(atol=1e-5, scipy_name='scp')
    def test_lu_solve(self, xp, scp, dtype):
        a_shape, b_shape = self.shapes
        A = testing.shaped_random(a_shape, xp, dtype=dtype)
        b = testing.shaped_random(b_shape, xp, dtype=dtype)
        lu = scp.linalg.lu_factor(A)
>       return scp.linalg.lu_solve(lu, b, trans=self.trans)

tests/cupyx_tests/scipy_tests/linalg_tests/test_decomp_lu.py:133: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

lu_and_piv = (array([[ 9.78618342 +6.7063787j ,  7.99158564 +2.10382561j,
         4.61479362 +1.28926298j,  7.80529176 +3.15428351...09693 +0.11253535j, -0.19530724 +0.3829403j ,
         1.48165651 +3.00519867j]]), array([4, 1, 4, 3, 4], dtype=int32))
b = array([[ 1.33406908+0.14706898j,  0.63873698+0.93013082j],
       [-0.01678584-1.98223589j,  2.27190158-0.60252512j],
...
       [-2.04248659+0.59350956j, -0.64952442-1.66601767j],
       [-1.68776696-1.42712523j,  2.19591155-0.78355429j]])
trans = 2, overwrite_b = False, check_finite = True

    def lu_solve(lu_and_piv, b, trans=0, overwrite_b=False, check_finite=True):
        """Solve an equation system, ``a * x = b``, given the LU factorization of ``a``
    
        Args:
            lu_and_piv (tuple): LU factorization of matrix ``a`` (``(M, M)``)
                together with pivot indices.
            b (cupy.ndarray): The matrix with dimension ``(M,)`` or
                ``(M, N)``.
            trans ({0, 1, 2}): Type of system to solve:
    
                ========  =========
                trans     system
                ========  =========
                0         a x  = b
                1         a^T x = b
                2         a^H x = b
                ========  =========
            overwrite_b (bool): Allow overwriting data in b (may enhance
                performance)
            check_finite (bool): Whether to check that the input matrices contain
                only finite numbers. Disabling may give a performance gain, but may
                result in problems (crashes, non-termination) if the inputs do
                contain infinities or NaNs.
    
        Returns:
            cupy.ndarray:
                The matrix with dimension ``(M,)`` or ``(M, N)``.
    
        .. seealso:: :func:`scipy.linalg.lu_solve`
        """
    
        (lu, ipiv) = lu_and_piv
    
        _util._assert_cupy_array(lu)
        _util._assert_rank2(lu)
        _util._assert_nd_squareness(lu)
    
        m = lu.shape[0]
        if m != b.shape[0]:
            raise ValueError('incompatible dimensions.')
    
        dtype = lu.dtype
        if dtype.char == 'f':
            getrs = cusolver.sgetrs
        elif dtype.char == 'd':
            getrs = cusolver.dgetrs
        elif dtype.char == 'F':
            getrs = cusolver.cgetrs
        elif dtype.char == 'D':
            getrs = cusolver.zgetrs
        else:
            msg = 'Only float32, float64, complex64 and complex128 are supported.'
            raise NotImplementedError(msg)
    
        if trans == 0:
            trans = cublas.CUBLAS_OP_N
        elif trans == 1:
            trans = cublas.CUBLAS_OP_T
        elif trans == 2:
            trans = cublas.CUBLAS_OP_C
        else:
            raise ValueError('unknown trans')
    
        lu = lu.astype(dtype, order='F', copy=False)
        ipiv = ipiv.astype(ipiv.dtype, order='F', copy=True)
        # cuSolver uses 1-origin while SciPy uses 0-origin
        ipiv += 1
        b = b.astype(dtype, order='F', copy=(not overwrite_b))
    
        if check_finite:
            if lu.dtype.kind == 'f' and not cupy.isfinite(lu).all():
                raise ValueError(
                    'array must not contain infs or NaNs.\n'
                    'Note that when a singular matrix is given, unlike '
                    'scipy.linalg.lu_factor, cupyx.scipy.linalg.lu_factor '
                    'returns an array containing NaN.')
            if b.dtype.kind == 'f' and not cupy.isfinite(b).all():
                raise ValueError(
                    'array must not contain infs or NaNs')
    
        n = 1 if b.ndim == 1 else b.shape[1]
        cusolver_handle = device.get_cusolver_handle()
        dev_info = cupy.empty(1, dtype=numpy.int32)
    
        # solve for the inverse
        getrs(cusolver_handle,
              trans,
              m, n, lu.data.ptr, m, ipiv.data.ptr, b.data.ptr,
              m, dev_info.data.ptr)
    
        if dev_info[0] < 0:
>           raise ValueError('illegal value in %d-th argument of '
                             'internal getrs (lu_solve)' % -dev_info[0])
E           AssertionError: Only cupy raises error
E           
E           Traceback (most recent call last):
E             File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.Np3X0NVCM9/cupy/cupy/testing/_helper.py", line 47, in _call_func
E               result = impl(self, *args, **kw)
E             File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.Np3X0NVCM9/cupy/tests/cupyx_tests/scipy_tests/linalg_tests/test_decomp_lu.py", line 133, in test_lu_solve
E               return scp.linalg.lu_solve(lu, b, trans=self.trans)
E             File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.Np3X0NVCM9/cupy/cupyx/scipy/linalg/decomp_lu.py", line 344, in lu_solve
E               raise ValueError('illegal value in %d-th argument of '
E           ValueError: illegal value in 1096348577-th argument of internal getrs (lu_solve)

cupyx/scipy/linalg/decomp_lu.py:344: AssertionError
----------------------------- Captured stdout call -----------------------------
dtype is D
_ TestMapCoordinatesHalfInteger.test_map_coordinates_float[_param_46_{mode='grid-constant', order=4}] _

self = <<cupyx_tests.scipy_tests.ndimage_tests.test_interpolation.TestMapCoordinatesHalfInteger object at 0x7fd70bd17700>  parameter: {'mode': 'grid-constant', 'order': 4}>
args = (), kw = {'dtype': <class 'numpy.float64'>}
dtype = <class 'numpy.float64'>

    @_wraps_partial(impl, name)
    def test_func(self, *args, **kw):
        for dtype in dtypes:
            try:
                kw[name] = numpy.dtype(dtype).type
>               impl(self, *args, **kw)

cupy/testing/_helper.py:825: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
cupy/testing/_helper.py:343: in test_func
    check_func(cupy_r, numpy_r)
cupy/testing/_helper.py:495: in check_func
    _array.assert_allclose(c, n, rtol1, atol1, err_msg, verbose)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

actual = array([229.76997843, 598.96953239])
desired = array([3.06993892, 8.        ]), rtol = 1e-07, atol = 0.0001
err_msg = '', verbose = True

    def assert_allclose(actual, desired, rtol=1e-7, atol=0, err_msg='',
                        verbose=True):
        """Raises an AssertionError if objects are not equal up to desired tolerance.
    
        Args:
             actual(numpy.ndarray or cupy.ndarray): The actual object to check.
             desired(numpy.ndarray or cupy.ndarray): The desired, expected object.
             rtol(float): Relative tolerance.
             atol(float): Absolute tolerance.
             err_msg(str): The error message to be printed in case of failure.
             verbose(bool): If ``True``, the conflicting
                 values are appended to the error message.
    
        .. seealso:: :func:`numpy.testing.assert_allclose`
    
        """  # NOQA
>       numpy.testing.assert_allclose(
            cupy.asnumpy(actual), cupy.asnumpy(desired),
            rtol=rtol, atol=atol, err_msg=err_msg, verbose=verbose)
E       AssertionError: 
E       Not equal to tolerance rtol=1e-07, atol=0.0001
E       
E       Mismatched elements: 2 / 2 (100%)
E       Max absolute difference: 590.96953239
E       Max relative difference: 73.87119155
E        x: array([229.769978, 598.969532])
E        y: array([3.069939, 8.      ])

cupy/testing/_array.py:24: AssertionError
----------------------------- Captured stdout call -----------------------------
dtype is <class 'numpy.float64'>
_ TestMapCoordinatesHalfInteger.test_map_coordinates_float[_param_47_{mode='grid-constant', order=5}] _

self = <<cupyx_tests.scipy_tests.ndimage_tests.test_interpolation.TestMapCoordinatesHalfInteger object at 0x7fd70b88e3a0>  parameter: {'mode': 'grid-constant', 'order': 5}>
args = (), kw = {'dtype': <class 'numpy.float64'>}
dtype = <class 'numpy.float64'>

    @_wraps_partial(impl, name)
    def test_func(self, *args, **kw):
        for dtype in dtypes:
            try:
                kw[name] = numpy.dtype(dtype).type
>               impl(self, *args, **kw)

cupy/testing/_helper.py:825: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
cupy/testing/_helper.py:343: in test_func
    check_func(cupy_r, numpy_r)
cupy/testing/_helper.py:495: in check_func
    _array.assert_allclose(c, n, rtol1, atol1, err_msg, verbose)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

actual = array([ 78.42728447, 201.97560613])
desired = array([3.12122783, 8.        ]), rtol = 1e-07, atol = 0.0001
err_msg = '', verbose = True

    def assert_allclose(actual, desired, rtol=1e-7, atol=0, err_msg='',
                        verbose=True):
        """Raises an AssertionError if objects are not equal up to desired tolerance.
    
        Args:
             actual(numpy.ndarray or cupy.ndarray): The actual object to check.
             desired(numpy.ndarray or cupy.ndarray): The desired, expected object.
             rtol(float): Relative tolerance.
             atol(float): Absolute tolerance.
             err_msg(str): The error message to be printed in case of failure.
             verbose(bool): If ``True``, the conflicting
                 values are appended to the error message.
    
        .. seealso:: :func:`numpy.testing.assert_allclose`
    
        """  # NOQA
>       numpy.testing.assert_allclose(
            cupy.asnumpy(actual), cupy.asnumpy(desired),
            rtol=rtol, atol=atol, err_msg=err_msg, verbose=verbose)
E       AssertionError: 
E       Not equal to tolerance rtol=1e-07, atol=0.0001
E       
E       Mismatched elements: 2 / 2 (100%)
E       Max absolute difference: 193.97560613
E       Max relative difference: 24.24695077
E        x: array([ 78.427284, 201.975606])
E        y: array([3.121228, 8.      ])

cupy/testing/_array.py:24: AssertionError
----------------------------- Captured stdout call -----------------------------
dtype is <class 'numpy.float64'>
_ TestAffineTransformTextureMemory.test_affine_transform_texture_memory[_param_0_{mode='constant', order=0, output=None, output_shape=None, shape=(100, 100), theta=0}] _

self = <<cupyx_tests.scipy_tests.ndimage_tests.test_interpolation.TestAffineTransformTextureMemory object at 0x7fd7073c84f0>  parameter: {'mode': 'constant', 'order': 0, 'output': None, 'output_shape': None, 'shape': (100, 100), 'theta': 0}>
xp = <module 'cupy' from '/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.Np3X0NVCM9/cupy/cupy/__init__.py'>
scp = <module 'cupyx.scipy' from '/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.Np3X0NVCM9/cupy/cupyx/scipy/__init__.py'>

    @testing.numpy_cupy_allclose(atol=0.1, scipy_name='scp')
    def test_affine_transform_texture_memory(self, xp, scp):
        a = xp.ones(self.shape, dtype=xp.float32)
        center = numpy.divide(numpy.subtract(self.shape, 1), 2)
    
        if len(self.shape) == 2:
            matrix = self._2d_rotation_matrix(self.theta, center)
        elif len(self.shape) == 3:
            matrix = self._3d_rotation_matrix(self.theta, center)
        else:
            return pytest.xfail('Unsupported shape')
    
        if self.output == 'empty':
            output = xp.empty(self.shape, dtype=xp.float32)
            if self.output_shape:
                return pytest.skip('This combination is tested in '
                                   'test_invalid_texture_arguments')
        else:
            output = self.output
    
        if self.output_shape:
            output_shape = (self.output_shape, ) * len(self.shape)
        else:
            output_shape = self.output_shape
    
        if xp == cupy:
            m = cupyx.scipy.ndimage.affine_transform
            matrix = cupy.array(matrix)
>           return m(a, matrix, output_shape=output_shape,
                     output=output, order=self.order,
                     mode=self.mode, texture_memory=True)

tests/cupyx_tests/scipy_tests/ndimage_tests/test_interpolation.py:398: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
cupyx/scipy/ndimage/interpolation.py:376: in affine_transform
    return _texture.affine_transformation(data=input,
cupyx/_texture.py:168: in affine_transformation
    texture_object = _create_texture_object(data,
cupyx/_texture.py:98: in _create_texture_object
    array = texture.CUDAarray(texture_fmt, *data.shape[::-1])
cupy/cuda/texture.pyx:296: in cupy.cuda.texture.CUDAarray.__init__
    self.ptr = runtime.malloc3DArray(desc.ptr, width, height, depth,
cupy_backends/cuda/api/runtime.pyx:593: in cupy_backends.cuda.api.runtime.malloc3DArray
    check_status(status)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

>   raise CUDARuntimeError(status)
E   AssertionError: Only cupy raises error
E   
E   Traceback (most recent call last):
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.Np3X0NVCM9/cupy/cupy/testing/_helper.py", line 47, in _call_func
E       result = impl(self, *args, **kw)
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.Np3X0NVCM9/cupy/tests/cupyx_tests/scipy_tests/ndimage_tests/test_interpolation.py", line 398, in test_affine_transform_texture_memory
E       return m(a, matrix, output_shape=output_shape,
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.Np3X0NVCM9/cupy/cupyx/scipy/ndimage/interpolation.py", line 376, in affine_transform
E       return _texture.affine_transformation(data=input,
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.Np3X0NVCM9/cupy/cupyx/_texture.py", line 168, in affine_transformation
E       texture_object = _create_texture_object(data,
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.Np3X0NVCM9/cupy/cupyx/_texture.py", line 98, in _create_texture_object
E       array = texture.CUDAarray(texture_fmt, *data.shape[::-1])
E     File "cupy/cuda/texture.pyx", line 296, in cupy.cuda.texture.CUDAarray.__init__
E       self.ptr = runtime.malloc3DArray(desc.ptr, width, height, depth,
E     File "cupy_backends/cuda/api/runtime.pyx", line 593, in cupy_backends.cuda.api.runtime.malloc3DArray
E       check_status(status)
E     File "cupy_backends/cuda/api/runtime.pyx", line 265, in cupy_backends.cuda.api.runtime.check_status
E       raise CUDARuntimeError(status)
E   cupy_backends.cuda.api.runtime.CUDARuntimeError: hipErrorUnknown: hipErrorUnknown

cupy_backends/cuda/api/runtime.pyx:265: AssertionError
----------------------------- Captured stderr call -----------------------------
Traceback (most recent call last):
  File "cupy_backends/cuda/api/runtime.pyx", line 644, in cupy_backends.cuda.api.runtime.freeArray
    check_status(status)
  File "cupy_backends/cuda/api/runtime.pyx", line 265, in cupy_backends.cuda.api.runtime.check_status
    raise CUDARuntimeError(status)
cupy_backends.cuda.api.runtime.CUDARuntimeError: hipErrorUnknown: hipErrorUnknown
_ TestAffineTransformTextureMemory.test_affine_transform_texture_memory[_param_1_{mode='constant', order=0, output=None, output_shape=None, shape=(100, 100), theta=90}] _

self = <<cupyx_tests.scipy_tests.ndimage_tests.test_interpolation.TestAffineTransformTextureMemory object at 0x7fd7059b6a90>  parameter: {'mode': 'constant', 'order': 0, 'output': None, 'output_shape': None, 'shape': (100, 100), 'theta': 90}>
xp = <module 'cupy' from '/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.Np3X0NVCM9/cupy/cupy/__init__.py'>
scp = <module 'cupyx.scipy' from '/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.Np3X0NVCM9/cupy/cupyx/scipy/__init__.py'>

    @testing.numpy_cupy_allclose(atol=0.1, scipy_name='scp')
    def test_affine_transform_texture_memory(self, xp, scp):
        a = xp.ones(self.shape, dtype=xp.float32)
        center = numpy.divide(numpy.subtract(self.shape, 1), 2)
    
        if len(self.shape) == 2:
            matrix = self._2d_rotation_matrix(self.theta, center)
        elif len(self.shape) == 3:
            matrix = self._3d_rotation_matrix(self.theta, center)
        else:
            return pytest.xfail('Unsupported shape')
    
        if self.output == 'empty':
            output = xp.empty(self.shape, dtype=xp.float32)
            if self.output_shape:
                return pytest.skip('This combination is tested in '
                                   'test_invalid_texture_arguments')
        else:
            output = self.output
    
        if self.output_shape:
            output_shape = (self.output_shape, ) * len(self.shape)
        else:
            output_shape = self.output_shape
    
        if xp == cupy:
            m = cupyx.scipy.ndimage.affine_transform
            matrix = cupy.array(matrix)
>           return m(a, matrix, output_shape=output_shape,
                     output=output, order=self.order,
                     mode=self.mode, texture_memory=True)

tests/cupyx_tests/scipy_tests/ndimage_tests/test_interpolation.py:398: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
cupyx/scipy/ndimage/interpolation.py:376: in affine_transform
    return _texture.affine_transformation(data=input,
cupyx/_texture.py:168: in affine_transformation
    texture_object = _create_texture_object(data,
cupyx/_texture.py:98: in _create_texture_object
    array = texture.CUDAarray(texture_fmt, *data.shape[::-1])
cupy/cuda/texture.pyx:296: in cupy.cuda.texture.CUDAarray.__init__
    self.ptr = runtime.malloc3DArray(desc.ptr, width, height, depth,
cupy_backends/cuda/api/runtime.pyx:593: in cupy_backends.cuda.api.runtime.malloc3DArray
    check_status(status)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

>   raise CUDARuntimeError(status)
E   AssertionError: Only cupy raises error
E   
E   Traceback (most recent call last):
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.Np3X0NVCM9/cupy/cupy/testing/_helper.py", line 47, in _call_func
E       result = impl(self, *args, **kw)
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.Np3X0NVCM9/cupy/tests/cupyx_tests/scipy_tests/ndimage_tests/test_interpolation.py", line 398, in test_affine_transform_texture_memory
E       return m(a, matrix, output_shape=output_shape,
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.Np3X0NVCM9/cupy/cupyx/scipy/ndimage/interpolation.py", line 376, in affine_transform
E       return _texture.affine_transformation(data=input,
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.Np3X0NVCM9/cupy/cupyx/_texture.py", line 168, in affine_transformation
E       texture_object = _create_texture_object(data,
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.Np3X0NVCM9/cupy/cupyx/_texture.py", line 98, in _create_texture_object
E       array = texture.CUDAarray(texture_fmt, *data.shape[::-1])
E     File "cupy/cuda/texture.pyx", line 296, in cupy.cuda.texture.CUDAarray.__init__
E       self.ptr = runtime.malloc3DArray(desc.ptr, width, height, depth,
E     File "cupy_backends/cuda/api/runtime.pyx", line 593, in cupy_backends.cuda.api.runtime.malloc3DArray
E       check_status(status)
E     File "cupy_backends/cuda/api/runtime.pyx", line 265, in cupy_backends.cuda.api.runtime.check_status
E       raise CUDARuntimeError(status)
E   cupy_backends.cuda.api.runtime.CUDARuntimeError: hipErrorUnknown: hipErrorUnknown

cupy_backends/cuda/api/runtime.pyx:265: AssertionError
----------------------------- Captured stderr call -----------------------------
Traceback (most recent call last):
  File "cupy_backends/cuda/api/runtime.pyx", line 644, in cupy_backends.cuda.api.runtime.freeArray
    check_status(status)
  File "cupy_backends/cuda/api/runtime.pyx", line 265, in cupy_backends.cuda.api.runtime.check_status
    raise CUDARuntimeError(status)
cupy_backends.cuda.api.runtime.CUDARuntimeError: hipErrorUnknown: hipErrorUnknown
_ TestAffineTransformTextureMemory.test_affine_transform_texture_memory[_param_2_{mode='constant', order=0, output=None, output_shape=None, shape=(100, 100), theta=180}] _

self = <<cupyx_tests.scipy_tests.ndimage_tests.test_interpolation.TestAffineTransformTextureMemory object at 0x7fd705a7b400>  parameter: {'mode': 'constant', 'order': 0, 'output': None, 'output_shape': None, 'shape': (100, 100), 'theta': 180}>
xp = <module 'cupy' from '/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.Np3X0NVCM9/cupy/cupy/__init__.py'>
scp = <module 'cupyx.scipy' from '/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.Np3X0NVCM9/cupy/cupyx/scipy/__init__.py'>

    @testing.numpy_cupy_allclose(atol=0.1, scipy_name='scp')
    def test_affine_transform_texture_memory(self, xp, scp):
        a = xp.ones(self.shape, dtype=xp.float32)
        center = numpy.divide(numpy.subtract(self.shape, 1), 2)
    
        if len(self.shape) == 2:
            matrix = self._2d_rotation_matrix(self.theta, center)
        elif len(self.shape) == 3:
            matrix = self._3d_rotation_matrix(self.theta, center)
        else:
            return pytest.xfail('Unsupported shape')
    
        if self.output == 'empty':
            output = xp.empty(self.shape, dtype=xp.float32)
            if self.output_shape:
                return pytest.skip('This combination is tested in '
                                   'test_invalid_texture_arguments')
        else:
            output = self.output
    
        if self.output_shape:
            output_shape = (self.output_shape, ) * len(self.shape)
        else:
            output_shape = self.output_shape
    
        if xp == cupy:
            m = cupyx.scipy.ndimage.affine_transform
            matrix = cupy.array(matrix)
>           return m(a, matrix, output_shape=output_shape,
                     output=output, order=self.order,
                     mode=self.mode, texture_memory=True)

tests/cupyx_tests/scipy_tests/ndimage_tests/test_interpolation.py:398: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
cupyx/scipy/ndimage/interpolation.py:376: in affine_transform
    return _texture.affine_transformation(data=input,
cupyx/_texture.py:168: in affine_transformation
    texture_object = _create_texture_object(data,
cupyx/_texture.py:98: in _create_texture_object
    array = texture.CUDAarray(texture_fmt, *data.shape[::-1])
cupy/cuda/texture.pyx:296: in cupy.cuda.texture.CUDAarray.__init__
    self.ptr = runtime.malloc3DArray(desc.ptr, width, height, depth,
cupy_backends/cuda/api/runtime.pyx:593: in cupy_backends.cuda.api.runtime.malloc3DArray
    check_status(status)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

>   raise CUDARuntimeError(status)
E   AssertionError: Only cupy raises error
E   
E   Traceback (most recent call last):
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.Np3X0NVCM9/cupy/cupy/testing/_helper.py", line 47, in _call_func
E       result = impl(self, *args, **kw)
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.Np3X0NVCM9/cupy/tests/cupyx_tests/scipy_tests/ndimage_tests/test_interpolation.py", line 398, in test_affine_transform_texture_memory
E       return m(a, matrix, output_shape=output_shape,
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.Np3X0NVCM9/cupy/cupyx/scipy/ndimage/interpolation.py", line 376, in affine_transform
E       return _texture.affine_transformation(data=input,
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.Np3X0NVCM9/cupy/cupyx/_texture.py", line 168, in affine_transformation
E       texture_object = _create_texture_object(data,
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.Np3X0NVCM9/cupy/cupyx/_texture.py", line 98, in _create_texture_object
E       array = texture.CUDAarray(texture_fmt, *data.shape[::-1])
E     File "cupy/cuda/texture.pyx", line 296, in cupy.cuda.texture.CUDAarray.__init__
E       self.ptr = runtime.malloc3DArray(desc.ptr, width, height, depth,
E     File "cupy_backends/cuda/api/runtime.pyx", line 593, in cupy_backends.cuda.api.runtime.malloc3DArray
E       check_status(status)
E     File "cupy_backends/cuda/api/runtime.pyx", line 265, in cupy_backends.cuda.api.runtime.check_status
E       raise CUDARuntimeError(status)
E   cupy_backends.cuda.api.runtime.CUDARuntimeError: hipErrorUnknown: hipErrorUnknown

cupy_backends/cuda/api/runtime.pyx:265: AssertionError
----------------------------- Captured stderr call -----------------------------
Traceback (most recent call last):
  File "cupy_backends/cuda/api/runtime.pyx", line 644, in cupy_backends.cuda.api.runtime.freeArray
    check_status(status)
  File "cupy_backends/cuda/api/runtime.pyx", line 265, in cupy_backends.cuda.api.runtime.check_status
    raise CUDARuntimeError(status)
cupy_backends.cuda.api.runtime.CUDARuntimeError: hipErrorUnknown: hipErrorUnknown
_ TestAffineTransformTextureMemory.test_affine_transform_texture_memory[_param_3_{mode='constant', order=0, output=None, output_shape=None, shape=(100, 100), theta=270}] _

self = <<cupyx_tests.scipy_tests.ndimage_tests.test_interpolation.TestAffineTransformTextureMemory object at 0x7fd7058ba280>  parameter: {'mode': 'constant', 'order': 0, 'output': None, 'output_shape': None, 'shape': (100, 100), 'theta': 270}>
xp = <module 'cupy' from '/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.Np3X0NVCM9/cupy/cupy/__init__.py'>
scp = <module 'cupyx.scipy' from '/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.Np3X0NVCM9/cupy/cupyx/scipy/__init__.py'>

    @testing.numpy_cupy_allclose(atol=0.1, scipy_name='scp')
    def test_affine_transform_texture_memory(self, xp, scp):
        a = xp.ones(self.shape, dtype=xp.float32)
        center = numpy.divide(numpy.subtract(self.shape, 1), 2)
    
        if len(self.shape) == 2:
            matrix = self._2d_rotation_matrix(self.theta, center)
        elif len(self.shape) == 3:
            matrix = self._3d_rotation_matrix(self.theta, center)
        else:
            return pytest.xfail('Unsupported shape')
    
        if self.output == 'empty':
            output = xp.empty(self.shape, dtype=xp.float32)
            if self.output_shape:
                return pytest.skip('This combination is tested in '
                                   'test_invalid_texture_arguments')
        else:
            output = self.output
    
        if self.output_shape:
            output_shape = (self.output_shape, ) * len(self.shape)
        else:
            output_shape = self.output_shape
    
        if xp == cupy:
            m = cupyx.scipy.ndimage.affine_transform
            matrix = cupy.array(matrix)
>           return m(a, matrix, output_shape=output_shape,
                     output=output, order=self.order,
                     mode=self.mode, texture_memory=True)

tests/cupyx_tests/scipy_tests/ndimage_tests/test_interpolation.py:398: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
cupyx/scipy/ndimage/interpolation.py:376: in affine_transform
    return _texture.affine_transformation(data=input,
cupyx/_texture.py:168: in affine_transformation
    texture_object = _create_texture_object(data,
cupyx/_texture.py:98: in _create_texture_object
    array = texture.CUDAarray(texture_fmt, *data.shape[::-1])
cupy/cuda/texture.pyx:296: in cupy.cuda.texture.CUDAarray.__init__
    self.ptr = runtime.malloc3DArray(desc.ptr, width, height, depth,
cupy_backends/cuda/api/runtime.pyx:593: in cupy_backends.cuda.api.runtime.malloc3DArray
    check_status(status)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

>   raise CUDARuntimeError(status)
E   AssertionError: Only cupy raises error
E   
E   Traceback (most recent call last):
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.Np3X0NVCM9/cupy/cupy/testing/_helper.py", line 47, in _call_func
E       result = impl(self, *args, **kw)
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.Np3X0NVCM9/cupy/tests/cupyx_tests/scipy_tests/ndimage_tests/test_interpolation.py", line 398, in test_affine_transform_texture_memory
E       return m(a, matrix, output_shape=output_shape,
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.Np3X0NVCM9/cupy/cupyx/scipy/ndimage/interpolation.py", line 376, in affine_transform
E       return _texture.affine_transformation(data=input,
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.Np3X0NVCM9/cupy/cupyx/_texture.py", line 168, in affine_transformation
E       texture_object = _create_texture_object(data,
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.Np3X0NVCM9/cupy/cupyx/_texture.py", line 98, in _create_texture_object
E       array = texture.CUDAarray(texture_fmt, *data.shape[::-1])
E     File "cupy/cuda/texture.pyx", line 296, in cupy.cuda.texture.CUDAarray.__init__
E       self.ptr = runtime.malloc3DArray(desc.ptr, width, height, depth,
E     File "cupy_backends/cuda/api/runtime.pyx", line 593, in cupy_backends.cuda.api.runtime.malloc3DArray
E       check_status(status)
E     File "cupy_backends/cuda/api/runtime.pyx", line 265, in cupy_backends.cuda.api.runtime.check_status
E       raise CUDARuntimeError(status)
E   cupy_backends.cuda.api.runtime.CUDARuntimeError: hipErrorUnknown: hipErrorUnknown

cupy_backends/cuda/api/runtime.pyx:265: AssertionError
----------------------------- Captured stderr call -----------------------------
Traceback (most recent call last):
  File "cupy_backends/cuda/api/runtime.pyx", line 644, in cupy_backends.cuda.api.runtime.freeArray
    check_status(status)
  File "cupy_backends/cuda/api/runtime.pyx", line 265, in cupy_backends.cuda.api.runtime.check_status
    raise CUDARuntimeError(status)
cupy_backends.cuda.api.runtime.CUDARuntimeError: hipErrorUnknown: hipErrorUnknown
_ TestAffineTransformTextureMemory.test_affine_transform_texture_memory[_param_4_{mode='constant', order=0, output=None, output_shape=None, shape=(10, 20), theta=0}] _

self = <<cupyx_tests.scipy_tests.ndimage_tests.test_interpolation.TestAffineTransformTextureMemory object at 0x7fd705acc3d0>  parameter: {'mode': 'constant', 'order': 0, 'output': None, 'output_shape': None, 'shape': (10, 20), 'theta': 0}>
xp = <module 'cupy' from '/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.Np3X0NVCM9/cupy/cupy/__init__.py'>
scp = <module 'cupyx.scipy' from '/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.Np3X0NVCM9/cupy/cupyx/scipy/__init__.py'>

    @testing.numpy_cupy_allclose(atol=0.1, scipy_name='scp')
    def test_affine_transform_texture_memory(self, xp, scp):
        a = xp.ones(self.shape, dtype=xp.float32)
        center = numpy.divide(numpy.subtract(self.shape, 1), 2)
    
        if len(self.shape) == 2:
            matrix = self._2d_rotation_matrix(self.theta, center)
        elif len(self.shape) == 3:
            matrix = self._3d_rotation_matrix(self.theta, center)
        else:
            return pytest.xfail('Unsupported shape')
    
        if self.output == 'empty':
            output = xp.empty(self.shape, dtype=xp.float32)
            if self.output_shape:
                return pytest.skip('This combination is tested in '
                                   'test_invalid_texture_arguments')
        else:
            output = self.output
    
        if self.output_shape:
            output_shape = (self.output_shape, ) * len(self.shape)
        else:
            output_shape = self.output_shape
    
        if xp == cupy:
            m = cupyx.scipy.ndimage.affine_transform
            matrix = cupy.array(matrix)
>           return m(a, matrix, output_shape=output_shape,
                     output=output, order=self.order,
                     mode=self.mode, texture_memory=True)

tests/cupyx_tests/scipy_tests/ndimage_tests/test_interpolation.py:398: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
cupyx/scipy/ndimage/interpolation.py:376: in affine_transform
    return _texture.affine_transformation(data=input,
cupyx/_texture.py:168: in affine_transformation
    texture_object = _create_texture_object(data,
cupyx/_texture.py:98: in _create_texture_object
    array = texture.CUDAarray(texture_fmt, *data.shape[::-1])
cupy/cuda/texture.pyx:296: in cupy.cuda.texture.CUDAarray.__init__
    self.ptr = runtime.malloc3DArray(desc.ptr, width, height, depth,
cupy_backends/cuda/api/runtime.pyx:593: in cupy_backends.cuda.api.runtime.malloc3DArray
    check_status(status)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

>   raise CUDARuntimeError(status)
E   AssertionError: Only cupy raises error
E   
E   Traceback (most recent call last):
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.Np3X0NVCM9/cupy/cupy/testing/_helper.py", line 47, in _call_func
E       result = impl(self, *args, **kw)
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.Np3X0NVCM9/cupy/tests/cupyx_tests/scipy_tests/ndimage_tests/test_interpolation.py", line 398, in test_affine_transform_texture_memory
E       return m(a, matrix, output_shape=output_shape,
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.Np3X0NVCM9/cupy/cupyx/scipy/ndimage/interpolation.py", line 376, in affine_transform
E       return _texture.affine_transformation(data=input,
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.Np3X0NVCM9/cupy/cupyx/_texture.py", line 168, in affine_transformation
E       texture_object = _create_texture_object(data,
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.Np3X0NVCM9/cupy/cupyx/_texture.py", line 98, in _create_texture_object
E       array = texture.CUDAarray(texture_fmt, *data.shape[::-1])
E     File "cupy/cuda/texture.pyx", line 296, in cupy.cuda.texture.CUDAarray.__init__
E       self.ptr = runtime.malloc3DArray(desc.ptr, width, height, depth,
E     File "cupy_backends/cuda/api/runtime.pyx", line 593, in cupy_backends.cuda.api.runtime.malloc3DArray
E       check_status(status)
E     File "cupy_backends/cuda/api/runtime.pyx", line 265, in cupy_backends.cuda.api.runtime.check_status
E       raise CUDARuntimeError(status)
E   cupy_backends.cuda.api.runtime.CUDARuntimeError: hipErrorUnknown: hipErrorUnknown

cupy_backends/cuda/api/runtime.pyx:265: AssertionError
----------------------------- Captured stderr call -----------------------------
Traceback (most recent call last):
  File "cupy_backends/cuda/api/runtime.pyx", line 644, in cupy_backends.cuda.api.runtime.freeArray
    check_status(status)
  File "cupy_backends/cuda/api/runtime.pyx", line 265, in cupy_backends.cuda.api.runtime.check_status
    raise CUDARuntimeError(status)
cupy_backends.cuda.api.runtime.CUDARuntimeError: hipErrorUnknown: hipErrorUnknown
_ TestAffineTransformTextureMemory.test_affine_transform_texture_memory[_param_5_{mode='constant', order=0, output=None, output_shape=None, shape=(10, 20), theta=90}] _

self = <<cupyx_tests.scipy_tests.ndimage_tests.test_interpolation.TestAffineTransformTextureMemory object at 0x7fd70599f670>  parameter: {'mode': 'constant', 'order': 0, 'output': None, 'output_shape': None, 'shape': (10, 20), 'theta': 90}>
xp = <module 'cupy' from '/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.Np3X0NVCM9/cupy/cupy/__init__.py'>
scp = <module 'cupyx.scipy' from '/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.Np3X0NVCM9/cupy/cupyx/scipy/__init__.py'>

    @testing.numpy_cupy_allclose(atol=0.1, scipy_name='scp')
    def test_affine_transform_texture_memory(self, xp, scp):
        a = xp.ones(self.shape, dtype=xp.float32)
        center = numpy.divide(numpy.subtract(self.shape, 1), 2)
    
        if len(self.shape) == 2:
            matrix = self._2d_rotation_matrix(self.theta, center)
        elif len(self.shape) == 3:
            matrix = self._3d_rotation_matrix(self.theta, center)
        else:
            return pytest.xfail('Unsupported shape')
    
        if self.output == 'empty':
            output = xp.empty(self.shape, dtype=xp.float32)
            if self.output_shape:
                return pytest.skip('This combination is tested in '
                                   'test_invalid_texture_arguments')
        else:
            output = self.output
    
        if self.output_shape:
            output_shape = (self.output_shape, ) * len(self.shape)
        else:
            output_shape = self.output_shape
    
        if xp == cupy:
            m = cupyx.scipy.ndimage.affine_transform
            matrix = cupy.array(matrix)
>           return m(a, matrix, output_shape=output_shape,
                     output=output, order=self.order,
                     mode=self.mode, texture_memory=True)

tests/cupyx_tests/scipy_tests/ndimage_tests/test_interpolation.py:398: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
cupyx/scipy/ndimage/interpolation.py:376: in affine_transform
    return _texture.affine_transformation(data=input,
cupyx/_texture.py:168: in affine_transformation
    texture_object = _create_texture_object(data,
cupyx/_texture.py:98: in _create_texture_object
    array = texture.CUDAarray(texture_fmt, *data.shape[::-1])
cupy/cuda/texture.pyx:296: in cupy.cuda.texture.CUDAarray.__init__
    self.ptr = runtime.malloc3DArray(desc.ptr, width, height, depth,
cupy_backends/cuda/api/runtime.pyx:593: in cupy_backends.cuda.api.runtime.malloc3DArray
    check_status(status)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

>   raise CUDARuntimeError(status)
E   AssertionError: Only cupy raises error
E   
E   Traceback (most recent call last):
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.Np3X0NVCM9/cupy/cupy/testing/_helper.py", line 47, in _call_func
E       result = impl(self, *args, **kw)
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.Np3X0NVCM9/cupy/tests/cupyx_tests/scipy_tests/ndimage_tests/test_interpolation.py", line 398, in test_affine_transform_texture_memory
E       return m(a, matrix, output_shape=output_shape,
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.Np3X0NVCM9/cupy/cupyx/scipy/ndimage/interpolation.py", line 376, in affine_transform
E       return _texture.affine_transformation(data=input,
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.Np3X0NVCM9/cupy/cupyx/_texture.py", line 168, in affine_transformation
E       texture_object = _create_texture_object(data,
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.Np3X0NVCM9/cupy/cupyx/_texture.py", line 98, in _create_texture_object
E       array = texture.CUDAarray(texture_fmt, *data.shape[::-1])
E     File "cupy/cuda/texture.pyx", line 296, in cupy.cuda.texture.CUDAarray.__init__
E       self.ptr = runtime.malloc3DArray(desc.ptr, width, height, depth,
E     File "cupy_backends/cuda/api/runtime.pyx", line 593, in cupy_backends.cuda.api.runtime.malloc3DArray
E       check_status(status)
E     File "cupy_backends/cuda/api/runtime.pyx", line 265, in cupy_backends.cuda.api.runtime.check_status
E       raise CUDARuntimeError(status)
E   cupy_backends.cuda.api.runtime.CUDARuntimeError: hipErrorUnknown: hipErrorUnknown

cupy_backends/cuda/api/runtime.pyx:265: AssertionError
----------------------------- Captured stderr call -----------------------------
Traceback (most recent call last):
  File "cupy_backends/cuda/api/runtime.pyx", line 644, in cupy_backends.cuda.api.runtime.freeArray
    check_status(status)
  File "cupy_backends/cuda/api/runtime.pyx", line 265, in cupy_backends.cuda.api.runtime.check_status
    raise CUDARuntimeError(status)
cupy_backends.cuda.api.runtime.CUDARuntimeError: hipErrorUnknown: hipErrorUnknown
_ TestAffineTransformTextureMemory.test_affine_transform_texture_memory[_param_6_{mode='constant', order=0, output=None, output_shape=None, shape=(10, 20), theta=180}] _

self = <<cupyx_tests.scipy_tests.ndimage_tests.test_interpolation.TestAffineTransformTextureMemory object at 0x7fd7058002b0>  parameter: {'mode': 'constant', 'order': 0, 'output': None, 'output_shape': None, 'shape': (10, 20), 'theta': 180}>
xp = <module 'cupy' from '/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.Np3X0NVCM9/cupy/cupy/__init__.py'>
scp = <module 'cupyx.scipy' from '/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.Np3X0NVCM9/cupy/cupyx/scipy/__init__.py'>

    @testing.numpy_cupy_allclose(atol=0.1, scipy_name='scp')
    def test_affine_transform_texture_memory(self, xp, scp):
        a = xp.ones(self.shape, dtype=xp.float32)
        center = numpy.divide(numpy.subtract(self.shape, 1), 2)
    
        if len(self.shape) == 2:
            matrix = self._2d_rotation_matrix(self.theta, center)
        elif len(self.shape) == 3:
            matrix = self._3d_rotation_matrix(self.theta, center)
        else:
            return pytest.xfail('Unsupported shape')
    
        if self.output == 'empty':
            output = xp.empty(self.shape, dtype=xp.float32)
            if self.output_shape:
                return pytest.skip('This combination is tested in '
                                   'test_invalid_texture_arguments')
        else:
            output = self.output
    
        if self.output_shape:
            output_shape = (self.output_shape, ) * len(self.shape)
        else:
            output_shape = self.output_shape
    
        if xp == cupy:
            m = cupyx.scipy.ndimage.affine_transform
            matrix = cupy.array(matrix)
>           return m(a, matrix, output_shape=output_shape,
                     output=output, order=self.order,
                     mode=self.mode, texture_memory=True)

tests/cupyx_tests/scipy_tests/ndimage_tests/test_interpolation.py:398: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
cupyx/scipy/ndimage/interpolation.py:376: in affine_transform
    return _texture.affine_transformation(data=input,
cupyx/_texture.py:168: in affine_transformation
    texture_object = _create_texture_object(data,
cupyx/_texture.py:98: in _create_texture_object
    array = texture.CUDAarray(texture_fmt, *data.shape[::-1])
cupy/cuda/texture.pyx:296: in cupy.cuda.texture.CUDAarray.__init__
    self.ptr = runtime.malloc3DArray(desc.ptr, width, height, depth,
cupy_backends/cuda/api/runtime.pyx:593: in cupy_backends.cuda.api.runtime.malloc3DArray
    check_status(status)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

>   raise CUDARuntimeError(status)
E   AssertionError: Only cupy raises error
E   
E   Traceback (most recent call last):
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.Np3X0NVCM9/cupy/cupy/testing/_helper.py", line 47, in _call_func
E       result = impl(self, *args, **kw)
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.Np3X0NVCM9/cupy/tests/cupyx_tests/scipy_tests/ndimage_tests/test_interpolation.py", line 398, in test_affine_transform_texture_memory
E       return m(a, matrix, output_shape=output_shape,
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.Np3X0NVCM9/cupy/cupyx/scipy/ndimage/interpolation.py", line 376, in affine_transform
E       return _texture.affine_transformation(data=input,
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.Np3X0NVCM9/cupy/cupyx/_texture.py", line 168, in affine_transformation
E       texture_object = _create_texture_object(data,
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.Np3X0NVCM9/cupy/cupyx/_texture.py", line 98, in _create_texture_object
E       array = texture.CUDAarray(texture_fmt, *data.shape[::-1])
E     File "cupy/cuda/texture.pyx", line 296, in cupy.cuda.texture.CUDAarray.__init__
E       self.ptr = runtime.malloc3DArray(desc.ptr, width, height, depth,
E     File "cupy_backends/cuda/api/runtime.pyx", line 593, in cupy_backends.cuda.api.runtime.malloc3DArray
E       check_status(status)
E     File "cupy_backends/cuda/api/runtime.pyx", line 265, in cupy_backends.cuda.api.runtime.check_status
E       raise CUDARuntimeError(status)
E   cupy_backends.cuda.api.runtime.CUDARuntimeError: hipErrorUnknown: hipErrorUnknown

cupy_backends/cuda/api/runtime.pyx:265: AssertionError
----------------------------- Captured stderr call -----------------------------
Traceback (most recent call last):
  File "cupy_backends/cuda/api/runtime.pyx", line 644, in cupy_backends.cuda.api.runtime.freeArray
    check_status(status)
  File "cupy_backends/cuda/api/runtime.pyx", line 265, in cupy_backends.cuda.api.runtime.check_status
    raise CUDARuntimeError(status)
cupy_backends.cuda.api.runtime.CUDARuntimeError: hipErrorUnknown: hipErrorUnknown
_ TestAffineTransformTextureMemory.test_affine_transform_texture_memory[_param_7_{mode='constant', order=0, output=None, output_shape=None, shape=(10, 20), theta=270}] _

self = <<cupyx_tests.scipy_tests.ndimage_tests.test_interpolation.TestAffineTransformTextureMemory object at 0x7fd70589a2b0>  parameter: {'mode': 'constant', 'order': 0, 'output': None, 'output_shape': None, 'shape': (10, 20), 'theta': 270}>
xp = <module 'cupy' from '/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.Np3X0NVCM9/cupy/cupy/__init__.py'>
scp = <module 'cupyx.scipy' from '/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.Np3X0NVCM9/cupy/cupyx/scipy/__init__.py'>

    @testing.numpy_cupy_allclose(atol=0.1, scipy_name='scp')
    def test_affine_transform_texture_memory(self, xp, scp):
        a = xp.ones(self.shape, dtype=xp.float32)
        center = numpy.divide(numpy.subtract(self.shape, 1), 2)
    
        if len(self.shape) == 2:
            matrix = self._2d_rotation_matrix(self.theta, center)
        elif len(self.shape) == 3:
            matrix = self._3d_rotation_matrix(self.theta, center)
        else:
            return pytest.xfail('Unsupported shape')
    
        if self.output == 'empty':
            output = xp.empty(self.shape, dtype=xp.float32)
            if self.output_shape:
                return pytest.skip('This combination is tested in '
                                   'test_invalid_texture_arguments')
        else:
            output = self.output
    
        if self.output_shape:
            output_shape = (self.output_shape, ) * len(self.shape)
        else:
            output_shape = self.output_shape
    
        if xp == cupy:
            m = cupyx.scipy.ndimage.affine_transform
            matrix = cupy.array(matrix)
>           return m(a, matrix, output_shape=output_shape,
                     output=output, order=self.order,
                     mode=self.mode, texture_memory=True)

tests/cupyx_tests/scipy_tests/ndimage_tests/test_interpolation.py:398: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
cupyx/scipy/ndimage/interpolation.py:376: in affine_transform
    return _texture.affine_transformation(data=input,
cupyx/_texture.py:168: in affine_transformation
    texture_object = _create_texture_object(data,
cupyx/_texture.py:98: in _create_texture_object
    array = texture.CUDAarray(texture_fmt, *data.shape[::-1])
cupy/cuda/texture.pyx:296: in cupy.cuda.texture.CUDAarray.__init__
    self.ptr = runtime.malloc3DArray(desc.ptr, width, height, depth,
cupy_backends/cuda/api/runtime.pyx:593: in cupy_backends.cuda.api.runtime.malloc3DArray
    check_status(status)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

>   raise CUDARuntimeError(status)
E   AssertionError: Only cupy raises error
E   
E   Traceback (most recent call last):
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.Np3X0NVCM9/cupy/cupy/testing/_helper.py", line 47, in _call_func
E       result = impl(self, *args, **kw)
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.Np3X0NVCM9/cupy/tests/cupyx_tests/scipy_tests/ndimage_tests/test_interpolation.py", line 398, in test_affine_transform_texture_memory
E       return m(a, matrix, output_shape=output_shape,
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.Np3X0NVCM9/cupy/cupyx/scipy/ndimage/interpolation.py", line 376, in affine_transform
E       return _texture.affine_transformation(data=input,
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.Np3X0NVCM9/cupy/cupyx/_texture.py", line 168, in affine_transformation
E       texture_object = _create_texture_object(data,
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.Np3X0NVCM9/cupy/cupyx/_texture.py", line 98, in _create_texture_object
E       array = texture.CUDAarray(texture_fmt, *data.shape[::-1])
E     File "cupy/cuda/texture.pyx", line 296, in cupy.cuda.texture.CUDAarray.__init__
E       self.ptr = runtime.malloc3DArray(desc.ptr, width, height, depth,
E     File "cupy_backends/cuda/api/runtime.pyx", line 593, in cupy_backends.cuda.api.runtime.malloc3DArray
E       check_status(status)
E     File "cupy_backends/cuda/api/runtime.pyx", line 265, in cupy_backends.cuda.api.runtime.check_status
E       raise CUDARuntimeError(status)
E   cupy_backends.cuda.api.runtime.CUDARuntimeError: hipErrorUnknown: hipErrorUnknown

cupy_backends/cuda/api/runtime.pyx:265: AssertionError
----------------------------- Captured stderr call -----------------------------
Traceback (most recent call last):
  File "cupy_backends/cuda/api/runtime.pyx", line 644, in cupy_backends.cuda.api.runtime.freeArray
    check_status(status)
  File "cupy_backends/cuda/api/runtime.pyx", line 265, in cupy_backends.cuda.api.runtime.check_status
    raise CUDARuntimeError(status)
cupy_backends.cuda.api.runtime.CUDARuntimeError: hipErrorUnknown: hipErrorUnknown
_ TestAffineTransformTextureMemory.test_affine_transform_texture_memory[_param_8_{mode='constant', order=0, output=None, output_shape=None, shape=(10, 10, 10), theta=0}] _

self = <<cupyx_tests.scipy_tests.ndimage_tests.test_interpolation.TestAffineTransformTextureMemory object at 0x7fd705aa89a0>  parameter: {'mode': 'constant', 'order': 0, 'output': None, 'output_shape': None, 'shape': (10, 10, 10), 'theta': 0}>
xp = <module 'cupy' from '/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.Np3X0NVCM9/cupy/cupy/__init__.py'>
scp = <module 'cupyx.scipy' from '/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.Np3X0NVCM9/cupy/cupyx/scipy/__init__.py'>

    @testing.numpy_cupy_allclose(atol=0.1, scipy_name='scp')
    def test_affine_transform_texture_memory(self, xp, scp):
        a = xp.ones(self.shape, dtype=xp.float32)
        center = numpy.divide(numpy.subtract(self.shape, 1), 2)
    
        if len(self.shape) == 2:
            matrix = self._2d_rotation_matrix(self.theta, center)
        elif len(self.shape) == 3:
            matrix = self._3d_rotation_matrix(self.theta, center)
        else:
            return pytest.xfail('Unsupported shape')
    
        if self.output == 'empty':
            output = xp.empty(self.shape, dtype=xp.float32)
            if self.output_shape:
                return pytest.skip('This combination is tested in '
                                   'test_invalid_texture_arguments')
        else:
            output = self.output
    
        if self.output_shape:
            output_shape = (self.output_shape, ) * len(self.shape)
        else:
            output_shape = self.output_shape
    
        if xp == cupy:
            m = cupyx.scipy.ndimage.affine_transform
            matrix = cupy.array(matrix)
>           return m(a, matrix, output_shape=output_shape,
                     output=output, order=self.order,
                     mode=self.mode, texture_memory=True)

tests/cupyx_tests/scipy_tests/ndimage_tests/test_interpolation.py:398: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
cupyx/scipy/ndimage/interpolation.py:376: in affine_transform
    return _texture.affine_transformation(data=input,
cupyx/_texture.py:168: in affine_transformation
    texture_object = _create_texture_object(data,
cupyx/_texture.py:98: in _create_texture_object
    array = texture.CUDAarray(texture_fmt, *data.shape[::-1])
cupy/cuda/texture.pyx:296: in cupy.cuda.texture.CUDAarray.__init__
    self.ptr = runtime.malloc3DArray(desc.ptr, width, height, depth,
cupy_backends/cuda/api/runtime.pyx:593: in cupy_backends.cuda.api.runtime.malloc3DArray
    check_status(status)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

>   raise CUDARuntimeError(status)
E   AssertionError: Only cupy raises error
E   
E   Traceback (most recent call last):
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.Np3X0NVCM9/cupy/cupy/testing/_helper.py", line 47, in _call_func
E       result = impl(self, *args, **kw)
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.Np3X0NVCM9/cupy/tests/cupyx_tests/scipy_tests/ndimage_tests/test_interpolation.py", line 398, in test_affine_transform_texture_memory
E       return m(a, matrix, output_shape=output_shape,
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.Np3X0NVCM9/cupy/cupyx/scipy/ndimage/interpolation.py", line 376, in affine_transform
E       return _texture.affine_transformation(data=input,
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.Np3X0NVCM9/cupy/cupyx/_texture.py", line 168, in affine_transformation
E       texture_object = _create_texture_object(data,
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.Np3X0NVCM9/cupy/cupyx/_texture.py", line 98, in _create_texture_object
E       array = texture.CUDAarray(texture_fmt, *data.shape[::-1])
E     File "cupy/cuda/texture.pyx", line 296, in cupy.cuda.texture.CUDAarray.__init__
E       self.ptr = runtime.malloc3DArray(desc.ptr, width, height, depth,
E     File "cupy_backends/cuda/api/runtime.pyx", line 593, in cupy_backends.cuda.api.runtime.malloc3DArray
E       check_status(status)
E     File "cupy_backends/cuda/api/runtime.pyx", line 265, in cupy_backends.cuda.api.runtime.check_status
E       raise CUDARuntimeError(status)
E   cupy_backends.cuda.api.runtime.CUDARuntimeError: hipErrorUnknown: hipErrorUnknown

cupy_backends/cuda/api/runtime.pyx:265: AssertionError
----------------------------- Captured stderr call -----------------------------
Traceback (most recent call last):
  File "cupy_backends/cuda/api/runtime.pyx", line 644, in cupy_backends.cuda.api.runtime.freeArray
    check_status(status)
  File "cupy_backends/cuda/api/runtime.pyx", line 265, in cupy_backends.cuda.api.runtime.check_status
    raise CUDARuntimeError(status)
cupy_backends.cuda.api.runtime.CUDARuntimeError: hipErrorUnknown: hipErrorUnknown
_ TestAffineTransformTextureMemory.test_affine_transform_texture_memory[_param_9_{mode='constant', order=0, output=None, output_shape=None, shape=(10, 10, 10), theta=90}] _

self = <<cupyx_tests.scipy_tests.ndimage_tests.test_interpolation.TestAffineTransformTextureMemory object at 0x7fd705afb190>  parameter: {'mode': 'constant', 'order': 0, 'output': None, 'output_shape': None, 'shape': (10, 10, 10), 'theta': 90}>
xp = <module 'cupy' from '/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.Np3X0NVCM9/cupy/cupy/__init__.py'>
scp = <module 'cupyx.scipy' from '/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.Np3X0NVCM9/cupy/cupyx/scipy/__init__.py'>

    @testing.numpy_cupy_allclose(atol=0.1, scipy_name='scp')
    def test_affine_transform_texture_memory(self, xp, scp):
        a = xp.ones(self.shape, dtype=xp.float32)
        center = numpy.divide(numpy.subtract(self.shape, 1), 2)
    
        if len(self.shape) == 2:
            matrix = self._2d_rotation_matrix(self.theta, center)
        elif len(self.shape) == 3:
            matrix = self._3d_rotation_matrix(self.theta, center)
        else:
            return pytest.xfail('Unsupported shape')
    
        if self.output == 'empty':
            output = xp.empty(self.shape, dtype=xp.float32)
            if self.output_shape:
                return pytest.skip('This combination is tested in '
                                   'test_invalid_texture_arguments')
        else:
            output = self.output
    
        if self.output_shape:
            output_shape = (self.output_shape, ) * len(self.shape)
        else:
            output_shape = self.output_shape
    
        if xp == cupy:
            m = cupyx.scipy.ndimage.affine_transform
            matrix = cupy.array(matrix)
>           return m(a, matrix, output_shape=output_shape,
                     output=output, order=self.order,
                     mode=self.mode, texture_memory=True)

tests/cupyx_tests/scipy_tests/ndimage_tests/test_interpolation.py:398: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
cupyx/scipy/ndimage/interpolation.py:376: in affine_transform
    return _texture.affine_transformation(data=input,
cupyx/_texture.py:168: in affine_transformation
    texture_object = _create_texture_object(data,
cupyx/_texture.py:98: in _create_texture_object
    array = texture.CUDAarray(texture_fmt, *data.shape[::-1])
cupy/cuda/texture.pyx:296: in cupy.cuda.texture.CUDAarray.__init__
    self.ptr = runtime.malloc3DArray(desc.ptr, width, height, depth,
cupy_backends/cuda/api/runtime.pyx:593: in cupy_backends.cuda.api.runtime.malloc3DArray
    check_status(status)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

>   raise CUDARuntimeError(status)
E   AssertionError: Only cupy raises error
E   
E   Traceback (most recent call last):
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.Np3X0NVCM9/cupy/cupy/testing/_helper.py", line 47, in _call_func
E       result = impl(self, *args, **kw)
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.Np3X0NVCM9/cupy/tests/cupyx_tests/scipy_tests/ndimage_tests/test_interpolation.py", line 398, in test_affine_transform_texture_memory
E       return m(a, matrix, output_shape=output_shape,
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.Np3X0NVCM9/cupy/cupyx/scipy/ndimage/interpolation.py", line 376, in affine_transform
E       return _texture.affine_transformation(data=input,
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.Np3X0NVCM9/cupy/cupyx/_texture.py", line 168, in affine_transformation
E       texture_object = _create_texture_object(data,
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.Np3X0NVCM9/cupy/cupyx/_texture.py", line 98, in _create_texture_object
E       array = texture.CUDAarray(texture_fmt, *data.shape[::-1])
E     File "cupy/cuda/texture.pyx", line 296, in cupy.cuda.texture.CUDAarray.__init__
E       self.ptr = runtime.malloc3DArray(desc.ptr, width, height, depth,
E     File "cupy_backends/cuda/api/runtime.pyx", line 593, in cupy_backends.cuda.api.runtime.malloc3DArray
E       check_status(status)
E     File "cupy_backends/cuda/api/runtime.pyx", line 265, in cupy_backends.cuda.api.runtime.check_status
E       raise CUDARuntimeError(status)
E   cupy_backends.cuda.api.runtime.CUDARuntimeError: hipErrorUnknown: hipErrorUnknown

cupy_backends/cuda/api/runtime.pyx:265: AssertionError
----------------------------- Captured stderr call -----------------------------
Traceback (most recent call last):
  File "cupy_backends/cuda/api/runtime.pyx", line 644, in cupy_backends.cuda.api.runtime.freeArray
    check_status(status)
  File "cupy_backends/cuda/api/runtime.pyx", line 265, in cupy_backends.cuda.api.runtime.check_status
    raise CUDARuntimeError(status)
cupy_backends.cuda.api.runtime.CUDARuntimeError: hipErrorUnknown: hipErrorUnknown
_ TestAffineTransformTextureMemory.test_affine_transform_texture_memory[_param_10_{mode='constant', order=0, output=None, output_shape=None, shape=(10, 10, 10), theta=180}] _

self = <<cupyx_tests.scipy_tests.ndimage_tests.test_interpolation.TestAffineTransformTextureMemory object at 0x7fd705a039d0>  parameter: {'mode': 'constant', 'order': 0, 'output': None, 'output_shape': None, 'shape': (10, 10, 10), 'theta': 180}>
xp = <module 'cupy' from '/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.Np3X0NVCM9/cupy/cupy/__init__.py'>
scp = <module 'cupyx.scipy' from '/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.Np3X0NVCM9/cupy/cupyx/scipy/__init__.py'>

    @testing.numpy_cupy_allclose(atol=0.1, scipy_name='scp')
    def test_affine_transform_texture_memory(self, xp, scp):
        a = xp.ones(self.shape, dtype=xp.float32)
        center = numpy.divide(numpy.subtract(self.shape, 1), 2)
    
        if len(self.shape) == 2:
            matrix = self._2d_rotation_matrix(self.theta, center)
        elif len(self.shape) == 3:
            matrix = self._3d_rotation_matrix(self.theta, center)
        else:
            return pytest.xfail('Unsupported shape')
    
        if self.output == 'empty':
            output = xp.empty(self.shape, dtype=xp.float32)
            if self.output_shape:
                return pytest.skip('This combination is tested in '
                                   'test_invalid_texture_arguments')
        else:
            output = self.output
    
        if self.output_shape:
            output_shape = (self.output_shape, ) * len(self.shape)
        else:
            output_shape = self.output_shape
    
        if xp == cupy:
            m = cupyx.scipy.ndimage.affine_transform
            matrix = cupy.array(matrix)
>           return m(a, matrix, output_shape=output_shape,
                     output=output, order=self.order,
                     mode=self.mode, texture_memory=True)

tests/cupyx_tests/scipy_tests/ndimage_tests/test_interpolation.py:398: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
cupyx/scipy/ndimage/interpolation.py:376: in affine_transform
    return _texture.affine_transformation(data=input,
cupyx/_texture.py:168: in affine_transformation
    texture_object = _create_texture_object(data,
cupyx/_texture.py:98: in _create_texture_object
    array = texture.CUDAarray(texture_fmt, *data.shape[::-1])
cupy/cuda/texture.pyx:296: in cupy.cuda.texture.CUDAarray.__init__
    self.ptr = runtime.malloc3DArray(desc.ptr, width, height, depth,
cupy_backends/cuda/api/runtime.pyx:593: in cupy_backends.cuda.api.runtime.malloc3DArray
    check_status(status)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

>   raise CUDARuntimeError(status)
E   AssertionError: Only cupy raises error
E   
E   Traceback (most recent call last):
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.Np3X0NVCM9/cupy/cupy/testing/_helper.py", line 47, in _call_func
E       result = impl(self, *args, **kw)
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.Np3X0NVCM9/cupy/tests/cupyx_tests/scipy_tests/ndimage_tests/test_interpolation.py", line 398, in test_affine_transform_texture_memory
E       return m(a, matrix, output_shape=output_shape,
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.Np3X0NVCM9/cupy/cupyx/scipy/ndimage/interpolation.py", line 376, in affine_transform
E       return _texture.affine_transformation(data=input,
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.Np3X0NVCM9/cupy/cupyx/_texture.py", line 168, in affine_transformation
E       texture_object = _create_texture_object(data,
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.Np3X0NVCM9/cupy/cupyx/_texture.py", line 98, in _create_texture_object
E       array = texture.CUDAarray(texture_fmt, *data.shape[::-1])
E     File "cupy/cuda/texture.pyx", line 296, in cupy.cuda.texture.CUDAarray.__init__
E       self.ptr = runtime.malloc3DArray(desc.ptr, width, height, depth,
E     File "cupy_backends/cuda/api/runtime.pyx", line 593, in cupy_backends.cuda.api.runtime.malloc3DArray
E       check_status(status)
E     File "cupy_backends/cuda/api/runtime.pyx", line 265, in cupy_backends.cuda.api.runtime.check_status
E       raise CUDARuntimeError(status)
E   cupy_backends.cuda.api.runtime.CUDARuntimeError: hipErrorUnknown: hipErrorUnknown

cupy_backends/cuda/api/runtime.pyx:265: AssertionError
----------------------------- Captured stderr call -----------------------------
Traceback (most recent call last):
  File "cupy_backends/cuda/api/runtime.pyx", line 644, in cupy_backends.cuda.api.runtime.freeArray
    check_status(status)
  File "cupy_backends/cuda/api/runtime.pyx", line 265, in cupy_backends.cuda.api.runtime.check_status
    raise CUDARuntimeError(status)
cupy_backends.cuda.api.runtime.CUDARuntimeError: hipErrorUnknown: hipErrorUnknown
_ TestAffineTransformTextureMemory.test_affine_transform_texture_memory[_param_11_{mode='constant', order=0, output=None, output_shape=None, shape=(10, 10, 10), theta=270}] _

self = <<cupyx_tests.scipy_tests.ndimage_tests.test_interpolation.TestAffineTransformTextureMemory object at 0x7fd705a284c0>  parameter: {'mode': 'constant', 'order': 0, 'output': None, 'output_shape': None, 'shape': (10, 10, 10), 'theta': 270}>
xp = <module 'cupy' from '/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.Np3X0NVCM9/cupy/cupy/__init__.py'>
scp = <module 'cupyx.scipy' from '/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.Np3X0NVCM9/cupy/cupyx/scipy/__init__.py'>

    @testing.numpy_cupy_allclose(atol=0.1, scipy_name='scp')
    def test_affine_transform_texture_memory(self, xp, scp):
        a = xp.ones(self.shape, dtype=xp.float32)
        center = numpy.divide(numpy.subtract(self.shape, 1), 2)
    
        if len(self.shape) == 2:
            matrix = self._2d_rotation_matrix(self.theta, center)
        elif len(self.shape) == 3:
            matrix = self._3d_rotation_matrix(self.theta, center)
        else:
            return pytest.xfail('Unsupported shape')
    
        if self.output == 'empty':
            output = xp.empty(self.shape, dtype=xp.float32)
            if self.output_shape:
                return pytest.skip('This combination is tested in '
                                   'test_invalid_texture_arguments')
        else:
            output = self.output
    
        if self.output_shape:
            output_shape = (self.output_shape, ) * len(self.shape)
        else:
            output_shape = self.output_shape
    
        if xp == cupy:
            m = cupyx.scipy.ndimage.affine_transform
            matrix = cupy.array(matrix)
>           return m(a, matrix, output_shape=output_shape,
                     output=output, order=self.order,
                     mode=self.mode, texture_memory=True)

tests/cupyx_tests/scipy_tests/ndimage_tests/test_interpolation.py:398: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
cupyx/scipy/ndimage/interpolation.py:376: in affine_transform
    return _texture.affine_transformation(data=input,
cupyx/_texture.py:168: in affine_transformation
    texture_object = _create_texture_object(data,
cupyx/_texture.py:98: in _create_texture_object
    array = texture.CUDAarray(texture_fmt, *data.shape[::-1])
cupy/cuda/texture.pyx:296: in cupy.cuda.texture.CUDAarray.__init__
    self.ptr = runtime.malloc3DArray(desc.ptr, width, height, depth,
cupy_backends/cuda/api/runtime.pyx:593: in cupy_backends.cuda.api.runtime.malloc3DArray
    check_status(status)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

>   raise CUDARuntimeError(status)
E   AssertionError: Only cupy raises error
E   
E   Traceback (most recent call last):
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.Np3X0NVCM9/cupy/cupy/testing/_helper.py", line 47, in _call_func
E       result = impl(self, *args, **kw)
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.Np3X0NVCM9/cupy/tests/cupyx_tests/scipy_tests/ndimage_tests/test_interpolation.py", line 398, in test_affine_transform_texture_memory
E       return m(a, matrix, output_shape=output_shape,
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.Np3X0NVCM9/cupy/cupyx/scipy/ndimage/interpolation.py", line 376, in affine_transform
E       return _texture.affine_transformation(data=input,
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.Np3X0NVCM9/cupy/cupyx/_texture.py", line 168, in affine_transformation
E       texture_object = _create_texture_object(data,
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.Np3X0NVCM9/cupy/cupyx/_texture.py", line 98, in _create_texture_object
E       array = texture.CUDAarray(texture_fmt, *data.shape[::-1])
E     File "cupy/cuda/texture.pyx", line 296, in cupy.cuda.texture.CUDAarray.__init__
E       self.ptr = runtime.malloc3DArray(desc.ptr, width, height, depth,
E     File "cupy_backends/cuda/api/runtime.pyx", line 593, in cupy_backends.cuda.api.runtime.malloc3DArray
E       check_status(status)
E     File "cupy_backends/cuda/api/runtime.pyx", line 265, in cupy_backends.cuda.api.runtime.check_status
E       raise CUDARuntimeError(status)
E   cupy_backends.cuda.api.runtime.CUDARuntimeError: hipErrorUnknown: hipErrorUnknown

cupy_backends/cuda/api/runtime.pyx:265: AssertionError
----------------------------- Captured stderr call -----------------------------
Traceback (most recent call last):
  File "cupy_backends/cuda/api/runtime.pyx", line 644, in cupy_backends.cuda.api.runtime.freeArray
    check_status(status)
  File "cupy_backends/cuda/api/runtime.pyx", line 265, in cupy_backends.cuda.api.runtime.check_status
    raise CUDARuntimeError(status)
cupy_backends.cuda.api.runtime.CUDARuntimeError: hipErrorUnknown: hipErrorUnknown
_ TestAffineTransformTextureMemory.test_affine_transform_texture_memory[_param_12_{mode='constant', order=0, output=None, output_shape=None, shape=(10, 20, 30), theta=0}] _

self = <<cupyx_tests.scipy_tests.ndimage_tests.test_interpolation.TestAffineTransformTextureMemory object at 0x7fd705800880>  parameter: {'mode': 'constant', 'order': 0, 'output': None, 'output_shape': None, 'shape': (10, 20, 30), 'theta': 0}>
xp = <module 'cupy' from '/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.Np3X0NVCM9/cupy/cupy/__init__.py'>
scp = <module 'cupyx.scipy' from '/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.Np3X0NVCM9/cupy/cupyx/scipy/__init__.py'>

    @testing.numpy_cupy_allclose(atol=0.1, scipy_name='scp')
    def test_affine_transform_texture_memory(self, xp, scp):
        a = xp.ones(self.shape, dtype=xp.float32)
        center = numpy.divide(numpy.subtract(self.shape, 1), 2)
    
        if len(self.shape) == 2:
            matrix = self._2d_rotation_matrix(self.theta, center)
        elif len(self.shape) == 3:
            matrix = self._3d_rotation_matrix(self.theta, center)
        else:
            return pytest.xfail('Unsupported shape')
    
        if self.output == 'empty':
            output = xp.empty(self.shape, dtype=xp.float32)
            if self.output_shape:
                return pytest.skip('This combination is tested in '
                                   'test_invalid_texture_arguments')
        else:
            output = self.output
    
        if self.output_shape:
            output_shape = (self.output_shape, ) * len(self.shape)
        else:
            output_shape = self.output_shape
    
        if xp == cupy:
            m = cupyx.scipy.ndimage.affine_transform
            matrix = cupy.array(matrix)
>           return m(a, matrix, output_shape=output_shape,
                     output=output, order=self.order,
                     mode=self.mode, texture_memory=True)

tests/cupyx_tests/scipy_tests/ndimage_tests/test_interpolation.py:398: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
cupyx/scipy/ndimage/interpolation.py:376: in affine_transform
    return _texture.affine_transformation(data=input,
cupyx/_texture.py:168: in affine_transformation
    texture_object = _create_texture_object(data,
cupyx/_texture.py:98: in _create_texture_object
    array = texture.CUDAarray(texture_fmt, *data.shape[::-1])
cupy/cuda/texture.pyx:296: in cupy.cuda.texture.CUDAarray.__init__
    self.ptr = runtime.malloc3DArray(desc.ptr, width, height, depth,
cupy_backends/cuda/api/runtime.pyx:593: in cupy_backends.cuda.api.runtime.malloc3DArray
    check_status(status)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

>   raise CUDARuntimeError(status)
E   AssertionError: Only cupy raises error
E   
E   Traceback (most recent call last):
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.Np3X0NVCM9/cupy/cupy/testing/_helper.py", line 47, in _call_func
E       result = impl(self, *args, **kw)
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.Np3X0NVCM9/cupy/tests/cupyx_tests/scipy_tests/ndimage_tests/test_interpolation.py", line 398, in test_affine_transform_texture_memory
E       return m(a, matrix, output_shape=output_shape,
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.Np3X0NVCM9/cupy/cupyx/scipy/ndimage/interpolation.py", line 376, in affine_transform
E       return _texture.affine_transformation(data=input,
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.Np3X0NVCM9/cupy/cupyx/_texture.py", line 168, in affine_transformation
E       texture_object = _create_texture_object(data,
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.Np3X0NVCM9/cupy/cupyx/_texture.py", line 98, in _create_texture_object
E       array = texture.CUDAarray(texture_fmt, *data.shape[::-1])
E     File "cupy/cuda/texture.pyx", line 296, in cupy.cuda.texture.CUDAarray.__init__
E       self.ptr = runtime.malloc3DArray(desc.ptr, width, height, depth,
E     File "cupy_backends/cuda/api/runtime.pyx", line 593, in cupy_backends.cuda.api.runtime.malloc3DArray
E       check_status(status)
E     File "cupy_backends/cuda/api/runtime.pyx", line 265, in cupy_backends.cuda.api.runtime.check_status
E       raise CUDARuntimeError(status)
E   cupy_backends.cuda.api.runtime.CUDARuntimeError: hipErrorUnknown: hipErrorUnknown

cupy_backends/cuda/api/runtime.pyx:265: AssertionError
----------------------------- Captured stderr call -----------------------------
Traceback (most recent call last):
  File "cupy_backends/cuda/api/runtime.pyx", line 644, in cupy_backends.cuda.api.runtime.freeArray
    check_status(status)
  File "cupy_backends/cuda/api/runtime.pyx", line 265, in cupy_backends.cuda.api.runtime.check_status
    raise CUDARuntimeError(status)
cupy_backends.cuda.api.runtime.CUDARuntimeError: hipErrorUnknown: hipErrorUnknown
_ TestAffineTransformTextureMemory.test_affine_transform_texture_memory[_param_13_{mode='constant', order=0, output=None, output_shape=None, shape=(10, 20, 30), theta=90}] _

self = <<cupyx_tests.scipy_tests.ndimage_tests.test_interpolation.TestAffineTransformTextureMemory object at 0x7fd7059c4250>  parameter: {'mode': 'constant', 'order': 0, 'output': None, 'output_shape': None, 'shape': (10, 20, 30), 'theta': 90}>
xp = <module 'cupy' from '/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.Np3X0NVCM9/cupy/cupy/__init__.py'>
scp = <module 'cupyx.scipy' from '/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.Np3X0NVCM9/cupy/cupyx/scipy/__init__.py'>

    @testing.numpy_cupy_allclose(atol=0.1, scipy_name='scp')
    def test_affine_transform_texture_memory(self, xp, scp):
        a = xp.ones(self.shape, dtype=xp.float32)
        center = numpy.divide(numpy.subtract(self.shape, 1), 2)
    
        if len(self.shape) == 2:
            matrix = self._2d_rotation_matrix(self.theta, center)
        elif len(self.shape) == 3:
            matrix = self._3d_rotation_matrix(self.theta, center)
        else:
            return pytest.xfail('Unsupported shape')
    
        if self.output == 'empty':
            output = xp.empty(self.shape, dtype=xp.float32)
            if self.output_shape:
                return pytest.skip('This combination is tested in '
                                   'test_invalid_texture_arguments')
        else:
            output = self.output
    
        if self.output_shape:
            output_shape = (self.output_shape, ) * len(self.shape)
        else:
            output_shape = self.output_shape
    
        if xp == cupy:
            m = cupyx.scipy.ndimage.affine_transform
            matrix = cupy.array(matrix)
>           return m(a, matrix, output_shape=output_shape,
                     output=output, order=self.order,
                     mode=self.mode, texture_memory=True)

tests/cupyx_tests/scipy_tests/ndimage_tests/test_interpolation.py:398: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
cupyx/scipy/ndimage/interpolation.py:376: in affine_transform
    return _texture.affine_transformation(data=input,
cupyx/_texture.py:168: in affine_transformation
    texture_object = _create_texture_object(data,
cupyx/_texture.py:98: in _create_texture_object
    array = texture.CUDAarray(texture_fmt, *data.shape[::-1])
cupy/cuda/texture.pyx:296: in cupy.cuda.texture.CUDAarray.__init__
    self.ptr = runtime.malloc3DArray(desc.ptr, width, height, depth,
cupy_backends/cuda/api/runtime.pyx:593: in cupy_backends.cuda.api.runtime.malloc3DArray
    check_status(status)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

>   raise CUDARuntimeError(status)
E   AssertionError: Only cupy raises error
E   
E   Traceback (most recent call last):
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.Np3X0NVCM9/cupy/cupy/testing/_helper.py", line 47, in _call_func
E       result = impl(self, *args, **kw)
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.Np3X0NVCM9/cupy/tests/cupyx_tests/scipy_tests/ndimage_tests/test_interpolation.py", line 398, in test_affine_transform_texture_memory
E       return m(a, matrix, output_shape=output_shape,
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.Np3X0NVCM9/cupy/cupyx/scipy/ndimage/interpolation.py", line 376, in affine_transform
E       return _texture.affine_transformation(data=input,
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.Np3X0NVCM9/cupy/cupyx/_texture.py", line 168, in affine_transformation
E       texture_object = _create_texture_object(data,
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.Np3X0NVCM9/cupy/cupyx/_texture.py", line 98, in _create_texture_object
E       array = texture.CUDAarray(texture_fmt, *data.shape[::-1])
E     File "cupy/cuda/texture.pyx", line 296, in cupy.cuda.texture.CUDAarray.__init__
E       self.ptr = runtime.malloc3DArray(desc.ptr, width, height, depth,
E     File "cupy_backends/cuda/api/runtime.pyx", line 593, in cupy_backends.cuda.api.runtime.malloc3DArray
E       check_status(status)
E     File "cupy_backends/cuda/api/runtime.pyx", line 265, in cupy_backends.cuda.api.runtime.check_status
E       raise CUDARuntimeError(status)
E   cupy_backends.cuda.api.runtime.CUDARuntimeError: hipErrorUnknown: hipErrorUnknown

cupy_backends/cuda/api/runtime.pyx:265: AssertionError
----------------------------- Captured stderr call -----------------------------
Traceback (most recent call last):
  File "cupy_backends/cuda/api/runtime.pyx", line 644, in cupy_backends.cuda.api.runtime.freeArray
    check_status(status)
  File "cupy_backends/cuda/api/runtime.pyx", line 265, in cupy_backends.cuda.api.runtime.check_status
    raise CUDARuntimeError(status)
cupy_backends.cuda.api.runtime.CUDARuntimeError: hipErrorUnknown: hipErrorUnknown
_ TestAffineTransformTextureMemory.test_affine_transform_texture_memory[_param_14_{mode='constant', order=0, output=None, output_shape=None, shape=(10, 20, 30), theta=180}] _

self = <<cupyx_tests.scipy_tests.ndimage_tests.test_interpolation.TestAffineTransformTextureMemory object at 0x7fd705e35640>  parameter: {'mode': 'constant', 'order': 0, 'output': None, 'output_shape': None, 'shape': (10, 20, 30), 'theta': 180}>
xp = <module 'cupy' from '/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.Np3X0NVCM9/cupy/cupy/__init__.py'>
scp = <module 'cupyx.scipy' from '/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.Np3X0NVCM9/cupy/cupyx/scipy/__init__.py'>

    @testing.numpy_cupy_allclose(atol=0.1, scipy_name='scp')
    def test_affine_transform_texture_memory(self, xp, scp):
        a = xp.ones(self.shape, dtype=xp.float32)
        center = numpy.divide(numpy.subtract(self.shape, 1), 2)
    
        if len(self.shape) == 2:
            matrix = self._2d_rotation_matrix(self.theta, center)
        elif len(self.shape) == 3:
            matrix = self._3d_rotation_matrix(self.theta, center)
        else:
            return pytest.xfail('Unsupported shape')
    
        if self.output == 'empty':
            output = xp.empty(self.shape, dtype=xp.float32)
            if self.output_shape:
                return pytest.skip('This combination is tested in '
                                   'test_invalid_texture_arguments')
        else:
            output = self.output
    
        if self.output_shape:
            output_shape = (self.output_shape, ) * len(self.shape)
        else:
            output_shape = self.output_shape
    
        if xp == cupy:
            m = cupyx.scipy.ndimage.affine_transform
            matrix = cupy.array(matrix)
>           return m(a, matrix, output_shape=output_shape,
                     output=output, order=self.order,
                     mode=self.mode, texture_memory=True)

tests/cupyx_tests/scipy_tests/ndimage_tests/test_interpolation.py:398: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
cupyx/scipy/ndimage/interpolation.py:376: in affine_transform
    return _texture.affine_transformation(data=input,
cupyx/_texture.py:168: in affine_transformation
    texture_object = _create_texture_object(data,
cupyx/_texture.py:98: in _create_texture_object
    array = texture.CUDAarray(texture_fmt, *data.shape[::-1])
cupy/cuda/texture.pyx:296: in cupy.cuda.texture.CUDAarray.__init__
    self.ptr = runtime.malloc3DArray(desc.ptr, width, height, depth,
cupy_backends/cuda/api/runtime.pyx:593: in cupy_backends.cuda.api.runtime.malloc3DArray
    check_status(status)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

>   raise CUDARuntimeError(status)
E   AssertionError: Only cupy raises error
E   
E   Traceback (most recent call last):
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.Np3X0NVCM9/cupy/cupy/testing/_helper.py", line 47, in _call_func
E       result = impl(self, *args, **kw)
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.Np3X0NVCM9/cupy/tests/cupyx_tests/scipy_tests/ndimage_tests/test_interpolation.py", line 398, in test_affine_transform_texture_memory
E       return m(a, matrix, output_shape=output_shape,
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.Np3X0NVCM9/cupy/cupyx/scipy/ndimage/interpolation.py", line 376, in affine_transform
E       return _texture.affine_transformation(data=input,
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.Np3X0NVCM9/cupy/cupyx/_texture.py", line 168, in affine_transformation
E       texture_object = _create_texture_object(data,
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.Np3X0NVCM9/cupy/cupyx/_texture.py", line 98, in _create_texture_object
E       array = texture.CUDAarray(texture_fmt, *data.shape[::-1])
E     File "cupy/cuda/texture.pyx", line 296, in cupy.cuda.texture.CUDAarray.__init__
E       self.ptr = runtime.malloc3DArray(desc.ptr, width, height, depth,
E     File "cupy_backends/cuda/api/runtime.pyx", line 593, in cupy_backends.cuda.api.runtime.malloc3DArray
E       check_status(status)
E     File "cupy_backends/cuda/api/runtime.pyx", line 265, in cupy_backends.cuda.api.runtime.check_status
E       raise CUDARuntimeError(status)
E   cupy_backends.cuda.api.runtime.CUDARuntimeError: hipErrorUnknown: hipErrorUnknown

cupy_backends/cuda/api/runtime.pyx:265: AssertionError
----------------------------- Captured stderr call -----------------------------
Traceback (most recent call last):
  File "cupy_backends/cuda/api/runtime.pyx", line 644, in cupy_backends.cuda.api.runtime.freeArray
    check_status(status)
  File "cupy_backends/cuda/api/runtime.pyx", line 265, in cupy_backends.cuda.api.runtime.check_status
    raise CUDARuntimeError(status)
cupy_backends.cuda.api.runtime.CUDARuntimeError: hipErrorUnknown: hipErrorUnknown
_ TestAffineTransformTextureMemory.test_affine_transform_texture_memory[_param_15_{mode='constant', order=0, output=None, output_shape=None, shape=(10, 20, 30), theta=270}] _

self = <<cupyx_tests.scipy_tests.ndimage_tests.test_interpolation.TestAffineTransformTextureMemory object at 0x7fd705a0b070>  parameter: {'mode': 'constant', 'order': 0, 'output': None, 'output_shape': None, 'shape': (10, 20, 30), 'theta': 270}>
xp = <module 'cupy' from '/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.Np3X0NVCM9/cupy/cupy/__init__.py'>
scp = <module 'cupyx.scipy' from '/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.Np3X0NVCM9/cupy/cupyx/scipy/__init__.py'>

    @testing.numpy_cupy_allclose(atol=0.1, scipy_name='scp')
    def test_affine_transform_texture_memory(self, xp, scp):
        a = xp.ones(self.shape, dtype=xp.float32)
        center = numpy.divide(numpy.subtract(self.shape, 1), 2)
    
        if len(self.shape) == 2:
            matrix = self._2d_rotation_matrix(self.theta, center)
        elif len(self.shape) == 3:
            matrix = self._3d_rotation_matrix(self.theta, center)
        else:
            return pytest.xfail('Unsupported shape')
    
        if self.output == 'empty':
            output = xp.empty(self.shape, dtype=xp.float32)
            if self.output_shape:
                return pytest.skip('This combination is tested in '
                                   'test_invalid_texture_arguments')
        else:
            output = self.output
    
        if self.output_shape:
            output_shape = (self.output_shape, ) * len(self.shape)
        else:
            output_shape = self.output_shape
    
        if xp == cupy:
            m = cupyx.scipy.ndimage.affine_transform
            matrix = cupy.array(matrix)
>           return m(a, matrix, output_shape=output_shape,
                     output=output, order=self.order,
                     mode=self.mode, texture_memory=True)

tests/cupyx_tests/scipy_tests/ndimage_tests/test_interpolation.py:398: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
cupyx/scipy/ndimage/interpolation.py:376: in affine_transform
    return _texture.affine_transformation(data=input,
cupyx/_texture.py:168: in affine_transformation
    texture_object = _create_texture_object(data,
cupyx/_texture.py:98: in _create_texture_object
    array = texture.CUDAarray(texture_fmt, *data.shape[::-1])
cupy/cuda/texture.pyx:296: in cupy.cuda.texture.CUDAarray.__init__
    self.ptr = runtime.malloc3DArray(desc.ptr, width, height, depth,
cupy_backends/cuda/api/runtime.pyx:593: in cupy_backends.cuda.api.runtime.malloc3DArray
    check_status(status)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

>   raise CUDARuntimeError(status)
E   AssertionError: Only cupy raises error
E   
E   Traceback (most recent call last):
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.Np3X0NVCM9/cupy/cupy/testing/_helper.py", line 47, in _call_func
E       result = impl(self, *args, **kw)
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.Np3X0NVCM9/cupy/tests/cupyx_tests/scipy_tests/ndimage_tests/test_interpolation.py", line 398, in test_affine_transform_texture_memory
E       return m(a, matrix, output_shape=output_shape,
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.Np3X0NVCM9/cupy/cupyx/scipy/ndimage/interpolation.py", line 376, in affine_transform
E       return _texture.affine_transformation(data=input,
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.Np3X0NVCM9/cupy/cupyx/_texture.py", line 168, in affine_transformation
E       texture_object = _create_texture_object(data,
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.Np3X0NVCM9/cupy/cupyx/_texture.py", line 98, in _create_texture_object
E       array = texture.CUDAarray(texture_fmt, *data.shape[::-1])
E     File "cupy/cuda/texture.pyx", line 296, in cupy.cuda.texture.CUDAarray.__init__
E       self.ptr = runtime.malloc3DArray(desc.ptr, width, height, depth,
E     File "cupy_backends/cuda/api/runtime.pyx", line 593, in cupy_backends.cuda.api.runtime.malloc3DArray
E       check_status(status)
E     File "cupy_backends/cuda/api/runtime.pyx", line 265, in cupy_backends.cuda.api.runtime.check_status
E       raise CUDARuntimeError(status)
E   cupy_backends.cuda.api.runtime.CUDARuntimeError: hipErrorUnknown: hipErrorUnknown

cupy_backends/cuda/api/runtime.pyx:265: AssertionError
----------------------------- Captured stderr call -----------------------------
Traceback (most recent call last):
  File "cupy_backends/cuda/api/runtime.pyx", line 644, in cupy_backends.cuda.api.runtime.freeArray
    check_status(status)
  File "cupy_backends/cuda/api/runtime.pyx", line 265, in cupy_backends.cuda.api.runtime.check_status
    raise CUDARuntimeError(status)
cupy_backends.cuda.api.runtime.CUDARuntimeError: hipErrorUnknown: hipErrorUnknown
_ TestAffineTransformTextureMemory.test_affine_transform_texture_memory[_param_16_{mode='constant', order=0, output=None, output_shape=10, shape=(100, 100), theta=0}] _

self = <<cupyx_tests.scipy_tests.ndimage_tests.test_interpolation.TestAffineTransformTextureMemory object at 0x7fd70669d520>  parameter: {'mode': 'constant', 'order': 0, 'output': None, 'output_shape': 10, 'shape': (100, 100), 'theta': 0}>
xp = <module 'cupy' from '/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.Np3X0NVCM9/cupy/cupy/__init__.py'>
scp = <module 'cupyx.scipy' from '/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.Np3X0NVCM9/cupy/cupyx/scipy/__init__.py'>

    @testing.numpy_cupy_allclose(atol=0.1, scipy_name='scp')
    def test_affine_transform_texture_memory(self, xp, scp):
        a = xp.ones(self.shape, dtype=xp.float32)
        center = numpy.divide(numpy.subtract(self.shape, 1), 2)
    
        if len(self.shape) == 2:
            matrix = self._2d_rotation_matrix(self.theta, center)
        elif len(self.shape) == 3:
            matrix = self._3d_rotation_matrix(self.theta, center)
        else:
            return pytest.xfail('Unsupported shape')
    
        if self.output == 'empty':
            output = xp.empty(self.shape, dtype=xp.float32)
            if self.output_shape:
                return pytest.skip('This combination is tested in '
                                   'test_invalid_texture_arguments')
        else:
            output = self.output
    
        if self.output_shape:
            output_shape = (self.output_shape, ) * len(self.shape)
        else:
            output_shape = self.output_shape
    
        if xp == cupy:
            m = cupyx.scipy.ndimage.affine_transform
            matrix = cupy.array(matrix)
>           return m(a, matrix, output_shape=output_shape,
                     output=output, order=self.order,
                     mode=self.mode, texture_memory=True)

tests/cupyx_tests/scipy_tests/ndimage_tests/test_interpolation.py:398: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
cupyx/scipy/ndimage/interpolation.py:376: in affine_transform
    return _texture.affine_transformation(data=input,
cupyx/_texture.py:168: in affine_transformation
    texture_object = _create_texture_object(data,
cupyx/_texture.py:98: in _create_texture_object
    array = texture.CUDAarray(texture_fmt, *data.shape[::-1])
cupy/cuda/texture.pyx:296: in cupy.cuda.texture.CUDAarray.__init__
    self.ptr = runtime.malloc3DArray(desc.ptr, width, height, depth,
cupy_backends/cuda/api/runtime.pyx:593: in cupy_backends.cuda.api.runtime.malloc3DArray
    check_status(status)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

>   raise CUDARuntimeError(status)
E   AssertionError: Only cupy raises error
E   
E   Traceback (most recent call last):
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.Np3X0NVCM9/cupy/cupy/testing/_helper.py", line 47, in _call_func
E       result = impl(self, *args, **kw)
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.Np3X0NVCM9/cupy/tests/cupyx_tests/scipy_tests/ndimage_tests/test_interpolation.py", line 398, in test_affine_transform_texture_memory
E       return m(a, matrix, output_shape=output_shape,
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.Np3X0NVCM9/cupy/cupyx/scipy/ndimage/interpolation.py", line 376, in affine_transform
E       return _texture.affine_transformation(data=input,
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.Np3X0NVCM9/cupy/cupyx/_texture.py", line 168, in affine_transformation
E       texture_object = _create_texture_object(data,
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.Np3X0NVCM9/cupy/cupyx/_texture.py", line 98, in _create_texture_object
E       array = texture.CUDAarray(texture_fmt, *data.shape[::-1])
E     File "cupy/cuda/texture.pyx", line 296, in cupy.cuda.texture.CUDAarray.__init__
E       self.ptr = runtime.malloc3DArray(desc.ptr, width, height, depth,
E     File "cupy_backends/cuda/api/runtime.pyx", line 593, in cupy_backends.cuda.api.runtime.malloc3DArray
E       check_status(status)
E     File "cupy_backends/cuda/api/runtime.pyx", line 265, in cupy_backends.cuda.api.runtime.check_status
E       raise CUDARuntimeError(status)
E   cupy_backends.cuda.api.runtime.CUDARuntimeError: hipErrorUnknown: hipErrorUnknown

cupy_backends/cuda/api/runtime.pyx:265: AssertionError
----------------------------- Captured stderr call -----------------------------
Traceback (most recent call last):
  File "cupy_backends/cuda/api/runtime.pyx", line 644, in cupy_backends.cuda.api.runtime.freeArray
    check_status(status)
  File "cupy_backends/cuda/api/runtime.pyx", line 265, in cupy_backends.cuda.api.runtime.check_status
    raise CUDARuntimeError(status)
cupy_backends.cuda.api.runtime.CUDARuntimeError: hipErrorUnknown: hipErrorUnknown
_ TestAffineTransformTextureMemory.test_affine_transform_texture_memory[_param_17_{mode='constant', order=0, output=None, output_shape=10, shape=(100, 100), theta=90}] _

self = <<cupyx_tests.scipy_tests.ndimage_tests.test_interpolation.TestAffineTransformTextureMemory object at 0x7fd7058b2220>  parameter: {'mode': 'constant', 'order': 0, 'output': None, 'output_shape': 10, 'shape': (100, 100), 'theta': 90}>
xp = <module 'cupy' from '/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.Np3X0NVCM9/cupy/cupy/__init__.py'>
scp = <module 'cupyx.scipy' from '/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.Np3X0NVCM9/cupy/cupyx/scipy/__init__.py'>

    @testing.numpy_cupy_allclose(atol=0.1, scipy_name='scp')
    def test_affine_transform_texture_memory(self, xp, scp):
        a = xp.ones(self.shape, dtype=xp.float32)
        center = numpy.divide(numpy.subtract(self.shape, 1), 2)
    
        if len(self.shape) == 2:
            matrix = self._2d_rotation_matrix(self.theta, center)
        elif len(self.shape) == 3:
            matrix = self._3d_rotation_matrix(self.theta, center)
        else:
            return pytest.xfail('Unsupported shape')
    
        if self.output == 'empty':
            output = xp.empty(self.shape, dtype=xp.float32)
            if self.output_shape:
                return pytest.skip('This combination is tested in '
                                   'test_invalid_texture_arguments')
        else:
            output = self.output
    
        if self.output_shape:
            output_shape = (self.output_shape, ) * len(self.shape)
        else:
            output_shape = self.output_shape
    
        if xp == cupy:
            m = cupyx.scipy.ndimage.affine_transform
            matrix = cupy.array(matrix)
>           return m(a, matrix, output_shape=output_shape,
                     output=output, order=self.order,
                     mode=self.mode, texture_memory=True)

tests/cupyx_tests/scipy_tests/ndimage_tests/test_interpolation.py:398: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
cupyx/scipy/ndimage/interpolation.py:376: in affine_transform
    return _texture.affine_transformation(data=input,
cupyx/_texture.py:168: in affine_transformation
    texture_object = _create_texture_object(data,
cupyx/_texture.py:98: in _create_texture_object
    array = texture.CUDAarray(texture_fmt, *data.shape[::-1])
cupy/cuda/texture.pyx:296: in cupy.cuda.texture.CUDAarray.__init__
    self.ptr = runtime.malloc3DArray(desc.ptr, width, height, depth,
cupy_backends/cuda/api/runtime.pyx:593: in cupy_backends.cuda.api.runtime.malloc3DArray
    check_status(status)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

>   raise CUDARuntimeError(status)
E   AssertionError: Only cupy raises error
E   
E   Traceback (most recent call last):
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.Np3X0NVCM9/cupy/cupy/testing/_helper.py", line 47, in _call_func
E       result = impl(self, *args, **kw)
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.Np3X0NVCM9/cupy/tests/cupyx_tests/scipy_tests/ndimage_tests/test_interpolation.py", line 398, in test_affine_transform_texture_memory
E       return m(a, matrix, output_shape=output_shape,
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.Np3X0NVCM9/cupy/cupyx/scipy/ndimage/interpolation.py", line 376, in affine_transform
E       return _texture.affine_transformation(data=input,
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.Np3X0NVCM9/cupy/cupyx/_texture.py", line 168, in affine_transformation
E       texture_object = _create_texture_object(data,
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.Np3X0NVCM9/cupy/cupyx/_texture.py", line 98, in _create_texture_object
E       array = texture.CUDAarray(texture_fmt, *data.shape[::-1])
E     File "cupy/cuda/texture.pyx", line 296, in cupy.cuda.texture.CUDAarray.__init__
E       self.ptr = runtime.malloc3DArray(desc.ptr, width, height, depth,
E     File "cupy_backends/cuda/api/runtime.pyx", line 593, in cupy_backends.cuda.api.runtime.malloc3DArray
E       check_status(status)
E     File "cupy_backends/cuda/api/runtime.pyx", line 265, in cupy_backends.cuda.api.runtime.check_status
E       raise CUDARuntimeError(status)
E   cupy_backends.cuda.api.runtime.CUDARuntimeError: hipErrorUnknown: hipErrorUnknown

cupy_backends/cuda/api/runtime.pyx:265: AssertionError
----------------------------- Captured stderr call -----------------------------
Traceback (most recent call last):
  File "cupy_backends/cuda/api/runtime.pyx", line 644, in cupy_backends.cuda.api.runtime.freeArray
    check_status(status)
  File "cupy_backends/cuda/api/runtime.pyx", line 265, in cupy_backends.cuda.api.runtime.check_status
    raise CUDARuntimeError(status)
cupy_backends.cuda.api.runtime.CUDARuntimeError: hipErrorUnknown: hipErrorUnknown
_ TestAffineTransformTextureMemory.test_affine_transform_texture_memory[_param_18_{mode='constant', order=0, output=None, output_shape=10, shape=(100, 100), theta=180}] _

self = <<cupyx_tests.scipy_tests.ndimage_tests.test_interpolation.TestAffineTransformTextureMemory object at 0x7fd708440640>  parameter: {'mode': 'constant', 'order': 0, 'output': None, 'output_shape': 10, 'shape': (100, 100), 'theta': 180}>
xp = <module 'cupy' from '/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.Np3X0NVCM9/cupy/cupy/__init__.py'>
scp = <module 'cupyx.scipy' from '/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.Np3X0NVCM9/cupy/cupyx/scipy/__init__.py'>

    @testing.numpy_cupy_allclose(atol=0.1, scipy_name='scp')
    def test_affine_transform_texture_memory(self, xp, scp):
        a = xp.ones(self.shape, dtype=xp.float32)
        center = numpy.divide(numpy.subtract(self.shape, 1), 2)
    
        if len(self.shape) == 2:
            matrix = self._2d_rotation_matrix(self.theta, center)
        elif len(self.shape) == 3:
            matrix = self._3d_rotation_matrix(self.theta, center)
        else:
            return pytest.xfail('Unsupported shape')
    
        if self.output == 'empty':
            output = xp.empty(self.shape, dtype=xp.float32)
            if self.output_shape:
                return pytest.skip('This combination is tested in '
                                   'test_invalid_texture_arguments')
        else:
            output = self.output
    
        if self.output_shape:
            output_shape = (self.output_shape, ) * len(self.shape)
        else:
            output_shape = self.output_shape
    
        if xp == cupy:
            m = cupyx.scipy.ndimage.affine_transform
            matrix = cupy.array(matrix)
>           return m(a, matrix, output_shape=output_shape,
                     output=output, order=self.order,
                     mode=self.mode, texture_memory=True)

tests/cupyx_tests/scipy_tests/ndimage_tests/test_interpolation.py:398: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
cupyx/scipy/ndimage/interpolation.py:376: in affine_transform
    return _texture.affine_transformation(data=input,
cupyx/_texture.py:168: in affine_transformation
    texture_object = _create_texture_object(data,
cupyx/_texture.py:98: in _create_texture_object
    array = texture.CUDAarray(texture_fmt, *data.shape[::-1])
cupy/cuda/texture.pyx:296: in cupy.cuda.texture.CUDAarray.__init__
    self.ptr = runtime.malloc3DArray(desc.ptr, width, height, depth,
cupy_backends/cuda/api/runtime.pyx:593: in cupy_backends.cuda.api.runtime.malloc3DArray
    check_status(status)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

>   raise CUDARuntimeError(status)
E   AssertionError: Only cupy raises error
E   
E   Traceback (most recent call last):
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.Np3X0NVCM9/cupy/cupy/testing/_helper.py", line 47, in _call_func
E       result = impl(self, *args, **kw)
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.Np3X0NVCM9/cupy/tests/cupyx_tests/scipy_tests/ndimage_tests/test_interpolation.py", line 398, in test_affine_transform_texture_memory
E       return m(a, matrix, output_shape=output_shape,
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.Np3X0NVCM9/cupy/cupyx/scipy/ndimage/interpolation.py", line 376, in affine_transform
E       return _texture.affine_transformation(data=input,
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.Np3X0NVCM9/cupy/cupyx/_texture.py", line 168, in affine_transformation
E       texture_object = _create_texture_object(data,
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.Np3X0NVCM9/cupy/cupyx/_texture.py", line 98, in _create_texture_object
E       array = texture.CUDAarray(texture_fmt, *data.shape[::-1])
E     File "cupy/cuda/texture.pyx", line 296, in cupy.cuda.texture.CUDAarray.__init__
E       self.ptr = runtime.malloc3DArray(desc.ptr, width, height, depth,
E     File "cupy_backends/cuda/api/runtime.pyx", line 593, in cupy_backends.cuda.api.runtime.malloc3DArray
E       check_status(status)
E     File "cupy_backends/cuda/api/runtime.pyx", line 265, in cupy_backends.cuda.api.runtime.check_status
E       raise CUDARuntimeError(status)
E   cupy_backends.cuda.api.runtime.CUDARuntimeError: hipErrorUnknown: hipErrorUnknown

cupy_backends/cuda/api/runtime.pyx:265: AssertionError
----------------------------- Captured stderr call -----------------------------
Traceback (most recent call last):
  File "cupy_backends/cuda/api/runtime.pyx", line 644, in cupy_backends.cuda.api.runtime.freeArray
    check_status(status)
  File "cupy_backends/cuda/api/runtime.pyx", line 265, in cupy_backends.cuda.api.runtime.check_status
    raise CUDARuntimeError(status)
cupy_backends.cuda.api.runtime.CUDARuntimeError: hipErrorUnknown: hipErrorUnknown
_ TestAffineTransformTextureMemory.test_affine_transform_texture_memory[_param_19_{mode='constant', order=0, output=None, output_shape=10, shape=(100, 100), theta=270}] _

self = <<cupyx_tests.scipy_tests.ndimage_tests.test_interpolation.TestAffineTransformTextureMemory object at 0x7fd705a03730>  parameter: {'mode': 'constant', 'order': 0, 'output': None, 'output_shape': 10, 'shape': (100, 100), 'theta': 270}>
xp = <module 'cupy' from '/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.Np3X0NVCM9/cupy/cupy/__init__.py'>
scp = <module 'cupyx.scipy' from '/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.Np3X0NVCM9/cupy/cupyx/scipy/__init__.py'>

    @testing.numpy_cupy_allclose(atol=0.1, scipy_name='scp')
    def test_affine_transform_texture_memory(self, xp, scp):
        a = xp.ones(self.shape, dtype=xp.float32)
        center = numpy.divide(numpy.subtract(self.shape, 1), 2)
    
        if len(self.shape) == 2:
            matrix = self._2d_rotation_matrix(self.theta, center)
        elif len(self.shape) == 3:
            matrix = self._3d_rotation_matrix(self.theta, center)
        else:
            return pytest.xfail('Unsupported shape')
    
        if self.output == 'empty':
            output = xp.empty(self.shape, dtype=xp.float32)
            if self.output_shape:
                return pytest.skip('This combination is tested in '
                                   'test_invalid_texture_arguments')
        else:
            output = self.output
    
        if self.output_shape:
            output_shape = (self.output_shape, ) * len(self.shape)
        else:
            output_shape = self.output_shape
    
        if xp == cupy:
            m = cupyx.scipy.ndimage.affine_transform
            matrix = cupy.array(matrix)
>           return m(a, matrix, output_shape=output_shape,
                     output=output, order=self.order,
                     mode=self.mode, texture_memory=True)

tests/cupyx_tests/scipy_tests/ndimage_tests/test_interpolation.py:398: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
cupyx/scipy/ndimage/interpolation.py:376: in affine_transform
    return _texture.affine_transformation(data=input,
cupyx/_texture.py:168: in affine_transformation
    texture_object = _create_texture_object(data,
cupyx/_texture.py:98: in _create_texture_object
    array = texture.CUDAarray(texture_fmt, *data.shape[::-1])
cupy/cuda/texture.pyx:296: in cupy.cuda.texture.CUDAarray.__init__
    self.ptr = runtime.malloc3DArray(desc.ptr, width, height, depth,
cupy_backends/cuda/api/runtime.pyx:593: in cupy_backends.cuda.api.runtime.malloc3DArray
    check_status(status)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

>   raise CUDARuntimeError(status)
E   AssertionError: Only cupy raises error
E   
E   Traceback (most recent call last):
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.Np3X0NVCM9/cupy/cupy/testing/_helper.py", line 47, in _call_func
E       result = impl(self, *args, **kw)
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.Np3X0NVCM9/cupy/tests/cupyx_tests/scipy_tests/ndimage_tests/test_interpolation.py", line 398, in test_affine_transform_texture_memory
E       return m(a, matrix, output_shape=output_shape,
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.Np3X0NVCM9/cupy/cupyx/scipy/ndimage/interpolation.py", line 376, in affine_transform
E       return _texture.affine_transformation(data=input,
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.Np3X0NVCM9/cupy/cupyx/_texture.py", line 168, in affine_transformation
E       texture_object = _create_texture_object(data,
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.Np3X0NVCM9/cupy/cupyx/_texture.py", line 98, in _create_texture_object
E       array = texture.CUDAarray(texture_fmt, *data.shape[::-1])
E     File "cupy/cuda/texture.pyx", line 296, in cupy.cuda.texture.CUDAarray.__init__
E       self.ptr = runtime.malloc3DArray(desc.ptr, width, height, depth,
E     File "cupy_backends/cuda/api/runtime.pyx", line 593, in cupy_backends.cuda.api.runtime.malloc3DArray
E       check_status(status)
E     File "cupy_backends/cuda/api/runtime.pyx", line 265, in cupy_backends.cuda.api.runtime.check_status
E       raise CUDARuntimeError(status)
E   cupy_backends.cuda.api.runtime.CUDARuntimeError: hipErrorUnknown: hipErrorUnknown

cupy_backends/cuda/api/runtime.pyx:265: AssertionError
----------------------------- Captured stderr call -----------------------------
Traceback (most recent call last):
  File "cupy_backends/cuda/api/runtime.pyx", line 644, in cupy_backends.cuda.api.runtime.freeArray
    check_status(status)
  File "cupy_backends/cuda/api/runtime.pyx", line 265, in cupy_backends.cuda.api.runtime.check_status
    raise CUDARuntimeError(status)
cupy_backends.cuda.api.runtime.CUDARuntimeError: hipErrorUnknown: hipErrorUnknown
_ TestAffineTransformTextureMemory.test_affine_transform_texture_memory[_param_20_{mode='constant', order=0, output=None, output_shape=10, shape=(10, 20), theta=0}] _

self = <<cupyx_tests.scipy_tests.ndimage_tests.test_interpolation.TestAffineTransformTextureMemory object at 0x7fd705a7bd30>  parameter: {'mode': 'constant', 'order': 0, 'output': None, 'output_shape': 10, 'shape': (10, 20), 'theta': 0}>
xp = <module 'cupy' from '/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.Np3X0NVCM9/cupy/cupy/__init__.py'>
scp = <module 'cupyx.scipy' from '/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.Np3X0NVCM9/cupy/cupyx/scipy/__init__.py'>

    @testing.numpy_cupy_allclose(atol=0.1, scipy_name='scp')
    def test_affine_transform_texture_memory(self, xp, scp):
        a = xp.ones(self.shape, dtype=xp.float32)
        center = numpy.divide(numpy.subtract(self.shape, 1), 2)
    
        if len(self.shape) == 2:
            matrix = self._2d_rotation_matrix(self.theta, center)
        elif len(self.shape) == 3:
            matrix = self._3d_rotation_matrix(self.theta, center)
        else:
            return pytest.xfail('Unsupported shape')
    
        if self.output == 'empty':
            output = xp.empty(self.shape, dtype=xp.float32)
            if self.output_shape:
                return pytest.skip('This combination is tested in '
                                   'test_invalid_texture_arguments')
        else:
            output = self.output
    
        if self.output_shape:
            output_shape = (self.output_shape, ) * len(self.shape)
        else:
            output_shape = self.output_shape
    
        if xp == cupy:
            m = cupyx.scipy.ndimage.affine_transform
            matrix = cupy.array(matrix)
>           return m(a, matrix, output_shape=output_shape,
                     output=output, order=self.order,
                     mode=self.mode, texture_memory=True)

tests/cupyx_tests/scipy_tests/ndimage_tests/test_interpolation.py:398: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
cupyx/scipy/ndimage/interpolation.py:376: in affine_transform
    return _texture.affine_transformation(data=input,
cupyx/_texture.py:168: in affine_transformation
    texture_object = _create_texture_object(data,
cupyx/_texture.py:98: in _create_texture_object
    array = texture.CUDAarray(texture_fmt, *data.shape[::-1])
cupy/cuda/texture.pyx:296: in cupy.cuda.texture.CUDAarray.__init__
    self.ptr = runtime.malloc3DArray(desc.ptr, width, height, depth,
cupy_backends/cuda/api/runtime.pyx:593: in cupy_backends.cuda.api.runtime.malloc3DArray
    check_status(status)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

>   raise CUDARuntimeError(status)
E   AssertionError: Only cupy raises error
E   
E   Traceback (most recent call last):
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.Np3X0NVCM9/cupy/cupy/testing/_helper.py", line 47, in _call_func
E       result = impl(self, *args, **kw)
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.Np3X0NVCM9/cupy/tests/cupyx_tests/scipy_tests/ndimage_tests/test_interpolation.py", line 398, in test_affine_transform_texture_memory
E       return m(a, matrix, output_shape=output_shape,
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.Np3X0NVCM9/cupy/cupyx/scipy/ndimage/interpolation.py", line 376, in affine_transform
E       return _texture.affine_transformation(data=input,
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.Np3X0NVCM9/cupy/cupyx/_texture.py", line 168, in affine_transformation
E       texture_object = _create_texture_object(data,
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.Np3X0NVCM9/cupy/cupyx/_texture.py", line 98, in _create_texture_object
E       array = texture.CUDAarray(texture_fmt, *data.shape[::-1])
E     File "cupy/cuda/texture.pyx", line 296, in cupy.cuda.texture.CUDAarray.__init__
E       self.ptr = runtime.malloc3DArray(desc.ptr, width, height, depth,
E     File "cupy_backends/cuda/api/runtime.pyx", line 593, in cupy_backends.cuda.api.runtime.malloc3DArray
E       check_status(status)
E     File "cupy_backends/cuda/api/runtime.pyx", line 265, in cupy_backends.cuda.api.runtime.check_status
E       raise CUDARuntimeError(status)
E   cupy_backends.cuda.api.runtime.CUDARuntimeError: hipErrorUnknown: hipErrorUnknown

cupy_backends/cuda/api/runtime.pyx:265: AssertionError
----------------------------- Captured stderr call -----------------------------
Traceback (most recent call last):
  File "cupy_backends/cuda/api/runtime.pyx", line 644, in cupy_backends.cuda.api.runtime.freeArray
    check_status(status)
  File "cupy_backends/cuda/api/runtime.pyx", line 265, in cupy_backends.cuda.api.runtime.check_status
    raise CUDARuntimeError(status)
cupy_backends.cuda.api.runtime.CUDARuntimeError: hipErrorUnknown: hipErrorUnknown
_ TestAffineTransformTextureMemory.test_affine_transform_texture_memory[_param_21_{mode='constant', order=0, output=None, output_shape=10, shape=(10, 20), theta=90}] _

self = <<cupyx_tests.scipy_tests.ndimage_tests.test_interpolation.TestAffineTransformTextureMemory object at 0x7fd7058489d0>  parameter: {'mode': 'constant', 'order': 0, 'output': None, 'output_shape': 10, 'shape': (10, 20), 'theta': 90}>
xp = <module 'cupy' from '/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.Np3X0NVCM9/cupy/cupy/__init__.py'>
scp = <module 'cupyx.scipy' from '/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.Np3X0NVCM9/cupy/cupyx/scipy/__init__.py'>

    @testing.numpy_cupy_allclose(atol=0.1, scipy_name='scp')
    def test_affine_transform_texture_memory(self, xp, scp):
        a = xp.ones(self.shape, dtype=xp.float32)
        center = numpy.divide(numpy.subtract(self.shape, 1), 2)
    
        if len(self.shape) == 2:
            matrix = self._2d_rotation_matrix(self.theta, center)
        elif len(self.shape) == 3:
            matrix = self._3d_rotation_matrix(self.theta, center)
        else:
            return pytest.xfail('Unsupported shape')
    
        if self.output == 'empty':
            output = xp.empty(self.shape, dtype=xp.float32)
            if self.output_shape:
                return pytest.skip('This combination is tested in '
                                   'test_invalid_texture_arguments')
        else:
            output = self.output
    
        if self.output_shape:
            output_shape = (self.output_shape, ) * len(self.shape)
        else:
            output_shape = self.output_shape
    
        if xp == cupy:
            m = cupyx.scipy.ndimage.affine_transform
            matrix = cupy.array(matrix)
>           return m(a, matrix, output_shape=output_shape,
                     output=output, order=self.order,
                     mode=self.mode, texture_memory=True)

tests/cupyx_tests/scipy_tests/ndimage_tests/test_interpolation.py:398: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
cupyx/scipy/ndimage/interpolation.py:376: in affine_transform
    return _texture.affine_transformation(data=input,
cupyx/_texture.py:168: in affine_transformation
    texture_object = _create_texture_object(data,
cupyx/_texture.py:98: in _create_texture_object
    array = texture.CUDAarray(texture_fmt, *data.shape[::-1])
cupy/cuda/texture.pyx:296: in cupy.cuda.texture.CUDAarray.__init__
    self.ptr = runtime.malloc3DArray(desc.ptr, width, height, depth,
cupy_backends/cuda/api/runtime.pyx:593: in cupy_backends.cuda.api.runtime.malloc3DArray
    check_status(status)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

>   raise CUDARuntimeError(status)
E   AssertionError: Only cupy raises error
E   
E   Traceback (most recent call last):
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.Np3X0NVCM9/cupy/cupy/testing/_helper.py", line 47, in _call_func
E       result = impl(self, *args, **kw)
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.Np3X0NVCM9/cupy/tests/cupyx_tests/scipy_tests/ndimage_tests/test_interpolation.py", line 398, in test_affine_transform_texture_memory
E       return m(a, matrix, output_shape=output_shape,
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.Np3X0NVCM9/cupy/cupyx/scipy/ndimage/interpolation.py", line 376, in affine_transform
E       return _texture.affine_transformation(data=input,
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.Np3X0NVCM9/cupy/cupyx/_texture.py", line 168, in affine_transformation
E       texture_object = _create_texture_object(data,
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.Np3X0NVCM9/cupy/cupyx/_texture.py", line 98, in _create_texture_object
E       array = texture.CUDAarray(texture_fmt, *data.shape[::-1])
E     File "cupy/cuda/texture.pyx", line 296, in cupy.cuda.texture.CUDAarray.__init__
E       self.ptr = runtime.malloc3DArray(desc.ptr, width, height, depth,
E     File "cupy_backends/cuda/api/runtime.pyx", line 593, in cupy_backends.cuda.api.runtime.malloc3DArray
E       check_status(status)
E     File "cupy_backends/cuda/api/runtime.pyx", line 265, in cupy_backends.cuda.api.runtime.check_status
E       raise CUDARuntimeError(status)
E   cupy_backends.cuda.api.runtime.CUDARuntimeError: hipErrorUnknown: hipErrorUnknown

cupy_backends/cuda/api/runtime.pyx:265: AssertionError
----------------------------- Captured stderr call -----------------------------
Traceback (most recent call last):
  File "cupy_backends/cuda/api/runtime.pyx", line 644, in cupy_backends.cuda.api.runtime.freeArray
    check_status(status)
  File "cupy_backends/cuda/api/runtime.pyx", line 265, in cupy_backends.cuda.api.runtime.check_status
    raise CUDARuntimeError(status)
cupy_backends.cuda.api.runtime.CUDARuntimeError: hipErrorUnknown: hipErrorUnknown
_ TestAffineTransformTextureMemory.test_affine_transform_texture_memory[_param_22_{mode='constant', order=0, output=None, output_shape=10, shape=(10, 20), theta=180}] _

self = <<cupyx_tests.scipy_tests.ndimage_tests.test_interpolation.TestAffineTransformTextureMemory object at 0x7fd7064e2340>  parameter: {'mode': 'constant', 'order': 0, 'output': None, 'output_shape': 10, 'shape': (10, 20), 'theta': 180}>
xp = <module 'cupy' from '/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.Np3X0NVCM9/cupy/cupy/__init__.py'>
scp = <module 'cupyx.scipy' from '/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.Np3X0NVCM9/cupy/cupyx/scipy/__init__.py'>

    @testing.numpy_cupy_allclose(atol=0.1, scipy_name='scp')
    def test_affine_transform_texture_memory(self, xp, scp):
        a = xp.ones(self.shape, dtype=xp.float32)
        center = numpy.divide(numpy.subtract(self.shape, 1), 2)
    
        if len(self.shape) == 2:
            matrix = self._2d_rotation_matrix(self.theta, center)
        elif len(self.shape) == 3:
            matrix = self._3d_rotation_matrix(self.theta, center)
        else:
            return pytest.xfail('Unsupported shape')
    
        if self.output == 'empty':
            output = xp.empty(self.shape, dtype=xp.float32)
            if self.output_shape:
                return pytest.skip('This combination is tested in '
                                   'test_invalid_texture_arguments')
        else:
            output = self.output
    
        if self.output_shape:
            output_shape = (self.output_shape, ) * len(self.shape)
        else:
            output_shape = self.output_shape
    
        if xp == cupy:
            m = cupyx.scipy.ndimage.affine_transform
            matrix = cupy.array(matrix)
>           return m(a, matrix, output_shape=output_shape,
                     output=output, order=self.order,
                     mode=self.mode, texture_memory=True)

tests/cupyx_tests/scipy_tests/ndimage_tests/test_interpolation.py:398: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
cupyx/scipy/ndimage/interpolation.py:376: in affine_transform
    return _texture.affine_transformation(data=input,
cupyx/_texture.py:168: in affine_transformation
    texture_object = _create_texture_object(data,
cupyx/_texture.py:98: in _create_texture_object
    array = texture.CUDAarray(texture_fmt, *data.shape[::-1])
cupy/cuda/texture.pyx:296: in cupy.cuda.texture.CUDAarray.__init__
    self.ptr = runtime.malloc3DArray(desc.ptr, width, height, depth,
cupy_backends/cuda/api/runtime.pyx:593: in cupy_backends.cuda.api.runtime.malloc3DArray
    check_status(status)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

>   raise CUDARuntimeError(status)
E   AssertionError: Only cupy raises error
E   
E   Traceback (most recent call last):
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.Np3X0NVCM9/cupy/cupy/testing/_helper.py", line 47, in _call_func
E       result = impl(self, *args, **kw)
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.Np3X0NVCM9/cupy/tests/cupyx_tests/scipy_tests/ndimage_tests/test_interpolation.py", line 398, in test_affine_transform_texture_memory
E       return m(a, matrix, output_shape=output_shape,
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.Np3X0NVCM9/cupy/cupyx/scipy/ndimage/interpolation.py", line 376, in affine_transform
E       return _texture.affine_transformation(data=input,
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.Np3X0NVCM9/cupy/cupyx/_texture.py", line 168, in affine_transformation
E       texture_object = _create_texture_object(data,
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.Np3X0NVCM9/cupy/cupyx/_texture.py", line 98, in _create_texture_object
E       array = texture.CUDAarray(texture_fmt, *data.shape[::-1])
E     File "cupy/cuda/texture.pyx", line 296, in cupy.cuda.texture.CUDAarray.__init__
E       self.ptr = runtime.malloc3DArray(desc.ptr, width, height, depth,
E     File "cupy_backends/cuda/api/runtime.pyx", line 593, in cupy_backends.cuda.api.runtime.malloc3DArray
E       check_status(status)
E     File "cupy_backends/cuda/api/runtime.pyx", line 265, in cupy_backends.cuda.api.runtime.check_status
E       raise CUDARuntimeError(status)
E   cupy_backends.cuda.api.runtime.CUDARuntimeError: hipErrorUnknown: hipErrorUnknown

cupy_backends/cuda/api/runtime.pyx:265: AssertionError
----------------------------- Captured stderr call -----------------------------
Traceback (most recent call last):
  File "cupy_backends/cuda/api/runtime.pyx", line 644, in cupy_backends.cuda.api.runtime.freeArray
    check_status(status)
  File "cupy_backends/cuda/api/runtime.pyx", line 265, in cupy_backends.cuda.api.runtime.check_status
    raise CUDARuntimeError(status)
cupy_backends.cuda.api.runtime.CUDARuntimeError: hipErrorUnknown: hipErrorUnknown
_ TestAffineTransformTextureMemory.test_affine_transform_texture_memory[_param_23_{mode='constant', order=0, output=None, output_shape=10, shape=(10, 20), theta=270}] _

self = <<cupyx_tests.scipy_tests.ndimage_tests.test_interpolation.TestAffineTransformTextureMemory object at 0x7fd7059ab700>  parameter: {'mode': 'constant', 'order': 0, 'output': None, 'output_shape': 10, 'shape': (10, 20), 'theta': 270}>
xp = <module 'cupy' from '/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.Np3X0NVCM9/cupy/cupy/__init__.py'>
scp = <module 'cupyx.scipy' from '/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.Np3X0NVCM9/cupy/cupyx/scipy/__init__.py'>

    @testing.numpy_cupy_allclose(atol=0.1, scipy_name='scp')
    def test_affine_transform_texture_memory(self, xp, scp):
        a = xp.ones(self.shape, dtype=xp.float32)
        center = numpy.divide(numpy.subtract(self.shape, 1), 2)
    
        if len(self.shape) == 2:
            matrix = self._2d_rotation_matrix(self.theta, center)
        elif len(self.shape) == 3:
            matrix = self._3d_rotation_matrix(self.theta, center)
        else:
            return pytest.xfail('Unsupported shape')
    
        if self.output == 'empty':
            output = xp.empty(self.shape, dtype=xp.float32)
            if self.output_shape:
                return pytest.skip('This combination is tested in '
                                   'test_invalid_texture_arguments')
        else:
            output = self.output
    
        if self.output_shape:
            output_shape = (self.output_shape, ) * len(self.shape)
        else:
            output_shape = self.output_shape
    
        if xp == cupy:
            m = cupyx.scipy.ndimage.affine_transform
            matrix = cupy.array(matrix)
>           return m(a, matrix, output_shape=output_shape,
                     output=output, order=self.order,
                     mode=self.mode, texture_memory=True)

tests/cupyx_tests/scipy_tests/ndimage_tests/test_interpolation.py:398: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
cupyx/scipy/ndimage/interpolation.py:376: in affine_transform
    return _texture.affine_transformation(data=input,
cupyx/_texture.py:168: in affine_transformation
    texture_object = _create_texture_object(data,
cupyx/_texture.py:98: in _create_texture_object
    array = texture.CUDAarray(texture_fmt, *data.shape[::-1])
cupy/cuda/texture.pyx:296: in cupy.cuda.texture.CUDAarray.__init__
    self.ptr = runtime.malloc3DArray(desc.ptr, width, height, depth,
cupy_backends/cuda/api/runtime.pyx:593: in cupy_backends.cuda.api.runtime.malloc3DArray
    check_status(status)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

>   raise CUDARuntimeError(status)
E   AssertionError: Only cupy raises error
E   
E   Traceback (most recent call last):
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.Np3X0NVCM9/cupy/cupy/testing/_helper.py", line 47, in _call_func
E       result = impl(self, *args, **kw)
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.Np3X0NVCM9/cupy/tests/cupyx_tests/scipy_tests/ndimage_tests/test_interpolation.py", line 398, in test_affine_transform_texture_memory
E       return m(a, matrix, output_shape=output_shape,
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.Np3X0NVCM9/cupy/cupyx/scipy/ndimage/interpolation.py", line 376, in affine_transform
E       return _texture.affine_transformation(data=input,
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.Np3X0NVCM9/cupy/cupyx/_texture.py", line 168, in affine_transformation
E       texture_object = _create_texture_object(data,
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.Np3X0NVCM9/cupy/cupyx/_texture.py", line 98, in _create_texture_object
E       array = texture.CUDAarray(texture_fmt, *data.shape[::-1])
E     File "cupy/cuda/texture.pyx", line 296, in cupy.cuda.texture.CUDAarray.__init__
E       self.ptr = runtime.malloc3DArray(desc.ptr, width, height, depth,
E     File "cupy_backends/cuda/api/runtime.pyx", line 593, in cupy_backends.cuda.api.runtime.malloc3DArray
E       check_status(status)
E     File "cupy_backends/cuda/api/runtime.pyx", line 265, in cupy_backends.cuda.api.runtime.check_status
E       raise CUDARuntimeError(status)
E   cupy_backends.cuda.api.runtime.CUDARuntimeError: hipErrorUnknown: hipErrorUnknown

cupy_backends/cuda/api/runtime.pyx:265: AssertionError
----------------------------- Captured stderr call -----------------------------
Traceback (most recent call last):
  File "cupy_backends/cuda/api/runtime.pyx", line 644, in cupy_backends.cuda.api.runtime.freeArray
    check_status(status)
  File "cupy_backends/cuda/api/runtime.pyx", line 265, in cupy_backends.cuda.api.runtime.check_status
    raise CUDARuntimeError(status)
cupy_backends.cuda.api.runtime.CUDARuntimeError: hipErrorUnknown: hipErrorUnknown
_ TestAffineTransformTextureMemory.test_affine_transform_texture_memory[_param_24_{mode='constant', order=0, output=None, output_shape=10, shape=(10, 10, 10), theta=0}] _

self = <<cupyx_tests.scipy_tests.ndimage_tests.test_interpolation.TestAffineTransformTextureMemory object at 0x7fd705adc460>  parameter: {'mode': 'constant', 'order': 0, 'output': None, 'output_shape': 10, 'shape': (10, 10, 10), 'theta': 0}>
xp = <module 'cupy' from '/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.Np3X0NVCM9/cupy/cupy/__init__.py'>
scp = <module 'cupyx.scipy' from '/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.Np3X0NVCM9/cupy/cupyx/scipy/__init__.py'>

    @testing.numpy_cupy_allclose(atol=0.1, scipy_name='scp')
    def test_affine_transform_texture_memory(self, xp, scp):
        a = xp.ones(self.shape, dtype=xp.float32)
        center = numpy.divide(numpy.subtract(self.shape, 1), 2)
    
        if len(self.shape) == 2:
            matrix = self._2d_rotation_matrix(self.theta, center)
        elif len(self.shape) == 3:
            matrix = self._3d_rotation_matrix(self.theta, center)
        else:
            return pytest.xfail('Unsupported shape')
    
        if self.output == 'empty':
            output = xp.empty(self.shape, dtype=xp.float32)
            if self.output_shape:
                return pytest.skip('This combination is tested in '
                                   'test_invalid_texture_arguments')
        else:
            output = self.output
    
        if self.output_shape:
            output_shape = (self.output_shape, ) * len(self.shape)
        else:
            output_shape = self.output_shape
    
        if xp == cupy:
            m = cupyx.scipy.ndimage.affine_transform
            matrix = cupy.array(matrix)
>           return m(a, matrix, output_shape=output_shape,
                     output=output, order=self.order,
                     mode=self.mode, texture_memory=True)

tests/cupyx_tests/scipy_tests/ndimage_tests/test_interpolation.py:398: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
cupyx/scipy/ndimage/interpolation.py:376: in affine_transform
    return _texture.affine_transformation(data=input,
cupyx/_texture.py:168: in affine_transformation
    texture_object = _create_texture_object(data,
cupyx/_texture.py:98: in _create_texture_object
    array = texture.CUDAarray(texture_fmt, *data.shape[::-1])
cupy/cuda/texture.pyx:296: in cupy.cuda.texture.CUDAarray.__init__
    self.ptr = runtime.malloc3DArray(desc.ptr, width, height, depth,
cupy_backends/cuda/api/runtime.pyx:593: in cupy_backends.cuda.api.runtime.malloc3DArray
    check_status(status)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

>   raise CUDARuntimeError(status)
E   AssertionError: Only cupy raises error
E   
E   Traceback (most recent call last):
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.Np3X0NVCM9/cupy/cupy/testing/_helper.py", line 47, in _call_func
E       result = impl(self, *args, **kw)
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.Np3X0NVCM9/cupy/tests/cupyx_tests/scipy_tests/ndimage_tests/test_interpolation.py", line 398, in test_affine_transform_texture_memory
E       return m(a, matrix, output_shape=output_shape,
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.Np3X0NVCM9/cupy/cupyx/scipy/ndimage/interpolation.py", line 376, in affine_transform
E       return _texture.affine_transformation(data=input,
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.Np3X0NVCM9/cupy/cupyx/_texture.py", line 168, in affine_transformation
E       texture_object = _create_texture_object(data,
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.Np3X0NVCM9/cupy/cupyx/_texture.py", line 98, in _create_texture_object
E       array = texture.CUDAarray(texture_fmt, *data.shape[::-1])
E     File "cupy/cuda/texture.pyx", line 296, in cupy.cuda.texture.CUDAarray.__init__
E       self.ptr = runtime.malloc3DArray(desc.ptr, width, height, depth,
E     File "cupy_backends/cuda/api/runtime.pyx", line 593, in cupy_backends.cuda.api.runtime.malloc3DArray
E       check_status(status)
E     File "cupy_backends/cuda/api/runtime.pyx", line 265, in cupy_backends.cuda.api.runtime.check_status
E       raise CUDARuntimeError(status)
E   cupy_backends.cuda.api.runtime.CUDARuntimeError: hipErrorUnknown: hipErrorUnknown

cupy_backends/cuda/api/runtime.pyx:265: AssertionError
----------------------------- Captured stderr call -----------------------------
Traceback (most recent call last):
  File "cupy_backends/cuda/api/runtime.pyx", line 644, in cupy_backends.cuda.api.runtime.freeArray
    check_status(status)
  File "cupy_backends/cuda/api/runtime.pyx", line 265, in cupy_backends.cuda.api.runtime.check_status
    raise CUDARuntimeError(status)
cupy_backends.cuda.api.runtime.CUDARuntimeError: hipErrorUnknown: hipErrorUnknown
_ TestAffineTransformTextureMemory.test_affine_transform_texture_memory[_param_25_{mode='constant', order=0, output=None, output_shape=10, shape=(10, 10, 10), theta=90}] _

self = <<cupyx_tests.scipy_tests.ndimage_tests.test_interpolation.TestAffineTransformTextureMemory object at 0x7fd705875a60>  parameter: {'mode': 'constant', 'order': 0, 'output': None, 'output_shape': 10, 'shape': (10, 10, 10), 'theta': 90}>
xp = <module 'cupy' from '/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.Np3X0NVCM9/cupy/cupy/__init__.py'>
scp = <module 'cupyx.scipy' from '/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.Np3X0NVCM9/cupy/cupyx/scipy/__init__.py'>

    @testing.numpy_cupy_allclose(atol=0.1, scipy_name='scp')
    def test_affine_transform_texture_memory(self, xp, scp):
        a = xp.ones(self.shape, dtype=xp.float32)
        center = numpy.divide(numpy.subtract(self.shape, 1), 2)
    
        if len(self.shape) == 2:
            matrix = self._2d_rotation_matrix(self.theta, center)
        elif len(self.shape) == 3:
            matrix = self._3d_rotation_matrix(self.theta, center)
        else:
            return pytest.xfail('Unsupported shape')
    
        if self.output == 'empty':
            output = xp.empty(self.shape, dtype=xp.float32)
            if self.output_shape:
                return pytest.skip('This combination is tested in '
                                   'test_invalid_texture_arguments')
        else:
            output = self.output
    
        if self.output_shape:
            output_shape = (self.output_shape, ) * len(self.shape)
        else:
            output_shape = self.output_shape
    
        if xp == cupy:
            m = cupyx.scipy.ndimage.affine_transform
            matrix = cupy.array(matrix)
>           return m(a, matrix, output_shape=output_shape,
                     output=output, order=self.order,
                     mode=self.mode, texture_memory=True)

tests/cupyx_tests/scipy_tests/ndimage_tests/test_interpolation.py:398: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
cupyx/scipy/ndimage/interpolation.py:376: in affine_transform
    return _texture.affine_transformation(data=input,
cupyx/_texture.py:168: in affine_transformation
    texture_object = _create_texture_object(data,
cupyx/_texture.py:98: in _create_texture_object
    array = texture.CUDAarray(texture_fmt, *data.shape[::-1])
cupy/cuda/texture.pyx:296: in cupy.cuda.texture.CUDAarray.__init__
    self.ptr = runtime.malloc3DArray(desc.ptr, width, height, depth,
cupy_backends/cuda/api/runtime.pyx:593: in cupy_backends.cuda.api.runtime.malloc3DArray
    check_status(status)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

>   raise CUDARuntimeError(status)
E   AssertionError: Only cupy raises error
E   
E   Traceback (most recent call last):
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.Np3X0NVCM9/cupy/cupy/testing/_helper.py", line 47, in _call_func
E       result = impl(self, *args, **kw)
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.Np3X0NVCM9/cupy/tests/cupyx_tests/scipy_tests/ndimage_tests/test_interpolation.py", line 398, in test_affine_transform_texture_memory
E       return m(a, matrix, output_shape=output_shape,
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.Np3X0NVCM9/cupy/cupyx/scipy/ndimage/interpolation.py", line 376, in affine_transform
E       return _texture.affine_transformation(data=input,
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.Np3X0NVCM9/cupy/cupyx/_texture.py", line 168, in affine_transformation
E       texture_object = _create_texture_object(data,
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.Np3X0NVCM9/cupy/cupyx/_texture.py", line 98, in _create_texture_object
E       array = texture.CUDAarray(texture_fmt, *data.shape[::-1])
E     File "cupy/cuda/texture.pyx", line 296, in cupy.cuda.texture.CUDAarray.__init__
E       self.ptr = runtime.malloc3DArray(desc.ptr, width, height, depth,
E     File "cupy_backends/cuda/api/runtime.pyx", line 593, in cupy_backends.cuda.api.runtime.malloc3DArray
E       check_status(status)
E     File "cupy_backends/cuda/api/runtime.pyx", line 265, in cupy_backends.cuda.api.runtime.check_status
E       raise CUDARuntimeError(status)
E   cupy_backends.cuda.api.runtime.CUDARuntimeError: hipErrorUnknown: hipErrorUnknown

cupy_backends/cuda/api/runtime.pyx:265: AssertionError
----------------------------- Captured stderr call -----------------------------
Traceback (most recent call last):
  File "cupy_backends/cuda/api/runtime.pyx", line 644, in cupy_backends.cuda.api.runtime.freeArray
    check_status(status)
  File "cupy_backends/cuda/api/runtime.pyx", line 265, in cupy_backends.cuda.api.runtime.check_status
    raise CUDARuntimeError(status)
cupy_backends.cuda.api.runtime.CUDARuntimeError: hipErrorUnknown: hipErrorUnknown
_ TestAffineTransformTextureMemory.test_affine_transform_texture_memory[_param_26_{mode='constant', order=0, output=None, output_shape=10, shape=(10, 10, 10), theta=180}] _

self = <<cupyx_tests.scipy_tests.ndimage_tests.test_interpolation.TestAffineTransformTextureMemory object at 0x7fd705848bb0>  parameter: {'mode': 'constant', 'order': 0, 'output': None, 'output_shape': 10, 'shape': (10, 10, 10), 'theta': 180}>
xp = <module 'cupy' from '/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.Np3X0NVCM9/cupy/cupy/__init__.py'>
scp = <module 'cupyx.scipy' from '/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.Np3X0NVCM9/cupy/cupyx/scipy/__init__.py'>

    @testing.numpy_cupy_allclose(atol=0.1, scipy_name='scp')
    def test_affine_transform_texture_memory(self, xp, scp):
        a = xp.ones(self.shape, dtype=xp.float32)
        center = numpy.divide(numpy.subtract(self.shape, 1), 2)
    
        if len(self.shape) == 2:
            matrix = self._2d_rotation_matrix(self.theta, center)
        elif len(self.shape) == 3:
            matrix = self._3d_rotation_matrix(self.theta, center)
        else:
            return pytest.xfail('Unsupported shape')
    
        if self.output == 'empty':
            output = xp.empty(self.shape, dtype=xp.float32)
            if self.output_shape:
                return pytest.skip('This combination is tested in '
                                   'test_invalid_texture_arguments')
        else:
            output = self.output
    
        if self.output_shape:
            output_shape = (self.output_shape, ) * len(self.shape)
        else:
            output_shape = self.output_shape
    
        if xp == cupy:
            m = cupyx.scipy.ndimage.affine_transform
            matrix = cupy.array(matrix)
>           return m(a, matrix, output_shape=output_shape,
                     output=output, order=self.order,
                     mode=self.mode, texture_memory=True)

tests/cupyx_tests/scipy_tests/ndimage_tests/test_interpolation.py:398: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
cupyx/scipy/ndimage/interpolation.py:376: in affine_transform
    return _texture.affine_transformation(data=input,
cupyx/_texture.py:168: in affine_transformation
    texture_object = _create_texture_object(data,
cupyx/_texture.py:98: in _create_texture_object
    array = texture.CUDAarray(texture_fmt, *data.shape[::-1])
cupy/cuda/texture.pyx:296: in cupy.cuda.texture.CUDAarray.__init__
    self.ptr = runtime.malloc3DArray(desc.ptr, width, height, depth,
cupy_backends/cuda/api/runtime.pyx:593: in cupy_backends.cuda.api.runtime.malloc3DArray
    check_status(status)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

>   raise CUDARuntimeError(status)
E   AssertionError: Only cupy raises error
E   
E   Traceback (most recent call last):
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.Np3X0NVCM9/cupy/cupy/testing/_helper.py", line 47, in _call_func
E       result = impl(self, *args, **kw)
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.Np3X0NVCM9/cupy/tests/cupyx_tests/scipy_tests/ndimage_tests/test_interpolation.py", line 398, in test_affine_transform_texture_memory
E       return m(a, matrix, output_shape=output_shape,
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.Np3X0NVCM9/cupy/cupyx/scipy/ndimage/interpolation.py", line 376, in affine_transform
E       return _texture.affine_transformation(data=input,
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.Np3X0NVCM9/cupy/cupyx/_texture.py", line 168, in affine_transformation
E       texture_object = _create_texture_object(data,
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.Np3X0NVCM9/cupy/cupyx/_texture.py", line 98, in _create_texture_object
E       array = texture.CUDAarray(texture_fmt, *data.shape[::-1])
E     File "cupy/cuda/texture.pyx", line 296, in cupy.cuda.texture.CUDAarray.__init__
E       self.ptr = runtime.malloc3DArray(desc.ptr, width, height, depth,
E     File "cupy_backends/cuda/api/runtime.pyx", line 593, in cupy_backends.cuda.api.runtime.malloc3DArray
E       check_status(status)
E     File "cupy_backends/cuda/api/runtime.pyx", line 265, in cupy_backends.cuda.api.runtime.check_status
E       raise CUDARuntimeError(status)
E   cupy_backends.cuda.api.runtime.CUDARuntimeError: hipErrorUnknown: hipErrorUnknown

cupy_backends/cuda/api/runtime.pyx:265: AssertionError
----------------------------- Captured stderr call -----------------------------
Traceback (most recent call last):
  File "cupy_backends/cuda/api/runtime.pyx", line 644, in cupy_backends.cuda.api.runtime.freeArray
    check_status(status)
  File "cupy_backends/cuda/api/runtime.pyx", line 265, in cupy_backends.cuda.api.runtime.check_status
    raise CUDARuntimeError(status)
cupy_backends.cuda.api.runtime.CUDARuntimeError: hipErrorUnknown: hipErrorUnknown
_ TestAffineTransformTextureMemory.test_affine_transform_texture_memory[_param_27_{mode='constant', order=0, output=None, output_shape=10, shape=(10, 10, 10), theta=270}] _

self = <<cupyx_tests.scipy_tests.ndimage_tests.test_interpolation.TestAffineTransformTextureMemory object at 0x7fd705897f70>  parameter: {'mode': 'constant', 'order': 0, 'output': None, 'output_shape': 10, 'shape': (10, 10, 10), 'theta': 270}>
xp = <module 'cupy' from '/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.Np3X0NVCM9/cupy/cupy/__init__.py'>
scp = <module 'cupyx.scipy' from '/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.Np3X0NVCM9/cupy/cupyx/scipy/__init__.py'>

    @testing.numpy_cupy_allclose(atol=0.1, scipy_name='scp')
    def test_affine_transform_texture_memory(self, xp, scp):
        a = xp.ones(self.shape, dtype=xp.float32)
        center = numpy.divide(numpy.subtract(self.shape, 1), 2)
    
        if len(self.shape) == 2:
            matrix = self._2d_rotation_matrix(self.theta, center)
        elif len(self.shape) == 3:
            matrix = self._3d_rotation_matrix(self.theta, center)
        else:
            return pytest.xfail('Unsupported shape')
    
        if self.output == 'empty':
            output = xp.empty(self.shape, dtype=xp.float32)
            if self.output_shape:
                return pytest.skip('This combination is tested in '
                                   'test_invalid_texture_arguments')
        else:
            output = self.output
    
        if self.output_shape:
            output_shape = (self.output_shape, ) * len(self.shape)
        else:
            output_shape = self.output_shape
    
        if xp == cupy:
            m = cupyx.scipy.ndimage.affine_transform
            matrix = cupy.array(matrix)
>           return m(a, matrix, output_shape=output_shape,
                     output=output, order=self.order,
                     mode=self.mode, texture_memory=True)

tests/cupyx_tests/scipy_tests/ndimage_tests/test_interpolation.py:398: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
cupyx/scipy/ndimage/interpolation.py:376: in affine_transform
    return _texture.affine_transformation(data=input,
cupyx/_texture.py:168: in affine_transformation
    texture_object = _create_texture_object(data,
cupyx/_texture.py:98: in _create_texture_object
    array = texture.CUDAarray(texture_fmt, *data.shape[::-1])
cupy/cuda/texture.pyx:296: in cupy.cuda.texture.CUDAarray.__init__
    self.ptr = runtime.malloc3DArray(desc.ptr, width, height, depth,
cupy_backends/cuda/api/runtime.pyx:593: in cupy_backends.cuda.api.runtime.malloc3DArray
    check_status(status)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

>   raise CUDARuntimeError(status)
E   AssertionError: Only cupy raises error
E   
E   Traceback (most recent call last):
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.Np3X0NVCM9/cupy/cupy/testing/_helper.py", line 47, in _call_func
E       result = impl(self, *args, **kw)
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.Np3X0NVCM9/cupy/tests/cupyx_tests/scipy_tests/ndimage_tests/test_interpolation.py", line 398, in test_affine_transform_texture_memory
E       return m(a, matrix, output_shape=output_shape,
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.Np3X0NVCM9/cupy/cupyx/scipy/ndimage/interpolation.py", line 376, in affine_transform
E       return _texture.affine_transformation(data=input,
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.Np3X0NVCM9/cupy/cupyx/_texture.py", line 168, in affine_transformation
E       texture_object = _create_texture_object(data,
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.Np3X0NVCM9/cupy/cupyx/_texture.py", line 98, in _create_texture_object
E       array = texture.CUDAarray(texture_fmt, *data.shape[::-1])
E     File "cupy/cuda/texture.pyx", line 296, in cupy.cuda.texture.CUDAarray.__init__
E       self.ptr = runtime.malloc3DArray(desc.ptr, width, height, depth,
E     File "cupy_backends/cuda/api/runtime.pyx", line 593, in cupy_backends.cuda.api.runtime.malloc3DArray
E       check_status(status)
E     File "cupy_backends/cuda/api/runtime.pyx", line 265, in cupy_backends.cuda.api.runtime.check_status
E       raise CUDARuntimeError(status)
E   cupy_backends.cuda.api.runtime.CUDARuntimeError: hipErrorUnknown: hipErrorUnknown

cupy_backends/cuda/api/runtime.pyx:265: AssertionError
----------------------------- Captured stderr call -----------------------------
Traceback (most recent call last):
  File "cupy_backends/cuda/api/runtime.pyx", line 644, in cupy_backends.cuda.api.runtime.freeArray
    check_status(status)
  File "cupy_backends/cuda/api/runtime.pyx", line 265, in cupy_backends.cuda.api.runtime.check_status
    raise CUDARuntimeError(status)
cupy_backends.cuda.api.runtime.CUDARuntimeError: hipErrorUnknown: hipErrorUnknown
_ TestAffineTransformTextureMemory.test_affine_transform_texture_memory[_param_28_{mode='constant', order=0, output=None, output_shape=10, shape=(10, 20, 30), theta=0}] _

self = <<cupyx_tests.scipy_tests.ndimage_tests.test_interpolation.TestAffineTransformTextureMemory object at 0x7fd705acc790>  parameter: {'mode': 'constant', 'order': 0, 'output': None, 'output_shape': 10, 'shape': (10, 20, 30), 'theta': 0}>
xp = <module 'cupy' from '/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.Np3X0NVCM9/cupy/cupy/__init__.py'>
scp = <module 'cupyx.scipy' from '/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.Np3X0NVCM9/cupy/cupyx/scipy/__init__.py'>

    @testing.numpy_cupy_allclose(atol=0.1, scipy_name='scp')
    def test_affine_transform_texture_memory(self, xp, scp):
        a = xp.ones(self.shape, dtype=xp.float32)
        center = numpy.divide(numpy.subtract(self.shape, 1), 2)
    
        if len(self.shape) == 2:
            matrix = self._2d_rotation_matrix(self.theta, center)
        elif len(self.shape) == 3:
            matrix = self._3d_rotation_matrix(self.theta, center)
        else:
            return pytest.xfail('Unsupported shape')
    
        if self.output == 'empty':
            output = xp.empty(self.shape, dtype=xp.float32)
            if self.output_shape:
                return pytest.skip('This combination is tested in '
                                   'test_invalid_texture_arguments')
        else:
            output = self.output
    
        if self.output_shape:
            output_shape = (self.output_shape, ) * len(self.shape)
        else:
            output_shape = self.output_shape
    
        if xp == cupy:
            m = cupyx.scipy.ndimage.affine_transform
            matrix = cupy.array(matrix)
>           return m(a, matrix, output_shape=output_shape,
                     output=output, order=self.order,
                     mode=self.mode, texture_memory=True)

tests/cupyx_tests/scipy_tests/ndimage_tests/test_interpolation.py:398: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
cupyx/scipy/ndimage/interpolation.py:376: in affine_transform
    return _texture.affine_transformation(data=input,
cupyx/_texture.py:168: in affine_transformation
    texture_object = _create_texture_object(data,
cupyx/_texture.py:98: in _create_texture_object
    array = texture.CUDAarray(texture_fmt, *data.shape[::-1])
cupy/cuda/texture.pyx:296: in cupy.cuda.texture.CUDAarray.__init__
    self.ptr = runtime.malloc3DArray(desc.ptr, width, height, depth,
cupy_backends/cuda/api/runtime.pyx:593: in cupy_backends.cuda.api.runtime.malloc3DArray
    check_status(status)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

>   raise CUDARuntimeError(status)
E   AssertionError: Only cupy raises error
E   
E   Traceback (most recent call last):
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.Np3X0NVCM9/cupy/cupy/testing/_helper.py", line 47, in _call_func
E       result = impl(self, *args, **kw)
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.Np3X0NVCM9/cupy/tests/cupyx_tests/scipy_tests/ndimage_tests/test_interpolation.py", line 398, in test_affine_transform_texture_memory
E       return m(a, matrix, output_shape=output_shape,
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.Np3X0NVCM9/cupy/cupyx/scipy/ndimage/interpolation.py", line 376, in affine_transform
E       return _texture.affine_transformation(data=input,
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.Np3X0NVCM9/cupy/cupyx/_texture.py", line 168, in affine_transformation
E       texture_object = _create_texture_object(data,
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.Np3X0NVCM9/cupy/cupyx/_texture.py", line 98, in _create_texture_object
E       array = texture.CUDAarray(texture_fmt, *data.shape[::-1])
E     File "cupy/cuda/texture.pyx", line 296, in cupy.cuda.texture.CUDAarray.__init__
E       self.ptr = runtime.malloc3DArray(desc.ptr, width, height, depth,
E     File "cupy_backends/cuda/api/runtime.pyx", line 593, in cupy_backends.cuda.api.runtime.malloc3DArray
E       check_status(status)
E     File "cupy_backends/cuda/api/runtime.pyx", line 265, in cupy_backends.cuda.api.runtime.check_status
E       raise CUDARuntimeError(status)
E   cupy_backends.cuda.api.runtime.CUDARuntimeError: hipErrorUnknown: hipErrorUnknown

cupy_backends/cuda/api/runtime.pyx:265: AssertionError
----------------------------- Captured stderr call -----------------------------
Traceback (most recent call last):
  File "cupy_backends/cuda/api/runtime.pyx", line 644, in cupy_backends.cuda.api.runtime.freeArray
    check_status(status)
  File "cupy_backends/cuda/api/runtime.pyx", line 265, in cupy_backends.cuda.api.runtime.check_status
    raise CUDARuntimeError(status)
cupy_backends.cuda.api.runtime.CUDARuntimeError: hipErrorUnknown: hipErrorUnknown
_ TestAffineTransformTextureMemory.test_affine_transform_texture_memory[_param_29_{mode='constant', order=0, output=None, output_shape=10, shape=(10, 20, 30), theta=90}] _

self = <<cupyx_tests.scipy_tests.ndimage_tests.test_interpolation.TestAffineTransformTextureMemory object at 0x7fd7056dfa60>  parameter: {'mode': 'constant', 'order': 0, 'output': None, 'output_shape': 10, 'shape': (10, 20, 30), 'theta': 90}>
xp = <module 'cupy' from '/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.Np3X0NVCM9/cupy/cupy/__init__.py'>
scp = <module 'cupyx.scipy' from '/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.Np3X0NVCM9/cupy/cupyx/scipy/__init__.py'>

    @testing.numpy_cupy_allclose(atol=0.1, scipy_name='scp')
    def test_affine_transform_texture_memory(self, xp, scp):
        a = xp.ones(self.shape, dtype=xp.float32)
        center = numpy.divide(numpy.subtract(self.shape, 1), 2)
    
        if len(self.shape) == 2:
            matrix = self._2d_rotation_matrix(self.theta, center)
        elif len(self.shape) == 3:
            matrix = self._3d_rotation_matrix(self.theta, center)
        else:
            return pytest.xfail('Unsupported shape')
    
        if self.output == 'empty':
            output = xp.empty(self.shape, dtype=xp.float32)
            if self.output_shape:
                return pytest.skip('This combination is tested in '
                                   'test_invalid_texture_arguments')
        else:
            output = self.output
    
        if self.output_shape:
            output_shape = (self.output_shape, ) * len(self.shape)
        else:
            output_shape = self.output_shape
    
        if xp == cupy:
            m = cupyx.scipy.ndimage.affine_transform
            matrix = cupy.array(matrix)
>           return m(a, matrix, output_shape=output_shape,
                     output=output, order=self.order,
                     mode=self.mode, texture_memory=True)

tests/cupyx_tests/scipy_tests/ndimage_tests/test_interpolation.py:398: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
cupyx/scipy/ndimage/interpolation.py:376: in affine_transform
    return _texture.affine_transformation(data=input,
cupyx/_texture.py:168: in affine_transformation
    texture_object = _create_texture_object(data,
cupyx/_texture.py:98: in _create_texture_object
    array = texture.CUDAarray(texture_fmt, *data.shape[::-1])
cupy/cuda/texture.pyx:296: in cupy.cuda.texture.CUDAarray.__init__
    self.ptr = runtime.malloc3DArray(desc.ptr, width, height, depth,
cupy_backends/cuda/api/runtime.pyx:593: in cupy_backends.cuda.api.runtime.malloc3DArray
    check_status(status)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

>   raise CUDARuntimeError(status)
E   AssertionError: Only cupy raises error
E   
E   Traceback (most recent call last):
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.Np3X0NVCM9/cupy/cupy/testing/_helper.py", line 47, in _call_func
E       result = impl(self, *args, **kw)
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.Np3X0NVCM9/cupy/tests/cupyx_tests/scipy_tests/ndimage_tests/test_interpolation.py", line 398, in test_affine_transform_texture_memory
E       return m(a, matrix, output_shape=output_shape,
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.Np3X0NVCM9/cupy/cupyx/scipy/ndimage/interpolation.py", line 376, in affine_transform
E       return _texture.affine_transformation(data=input,
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.Np3X0NVCM9/cupy/cupyx/_texture.py", line 168, in affine_transformation
E       texture_object = _create_texture_object(data,
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.Np3X0NVCM9/cupy/cupyx/_texture.py", line 98, in _create_texture_object
E       array = texture.CUDAarray(texture_fmt, *data.shape[::-1])
E     File "cupy/cuda/texture.pyx", line 296, in cupy.cuda.texture.CUDAarray.__init__
E       self.ptr = runtime.malloc3DArray(desc.ptr, width, height, depth,
E     File "cupy_backends/cuda/api/runtime.pyx", line 593, in cupy_backends.cuda.api.runtime.malloc3DArray
E       check_status(status)
E     File "cupy_backends/cuda/api/runtime.pyx", line 265, in cupy_backends.cuda.api.runtime.check_status
E       raise CUDARuntimeError(status)
E   cupy_backends.cuda.api.runtime.CUDARuntimeError: hipErrorUnknown: hipErrorUnknown

cupy_backends/cuda/api/runtime.pyx:265: AssertionError
----------------------------- Captured stderr call -----------------------------
Traceback (most recent call last):
  File "cupy_backends/cuda/api/runtime.pyx", line 644, in cupy_backends.cuda.api.runtime.freeArray
    check_status(status)
  File "cupy_backends/cuda/api/runtime.pyx", line 265, in cupy_backends.cuda.api.runtime.check_status
    raise CUDARuntimeError(status)
cupy_backends.cuda.api.runtime.CUDARuntimeError: hipErrorUnknown: hipErrorUnknown
_ TestAffineTransformTextureMemory.test_affine_transform_texture_memory[_param_30_{mode='constant', order=0, output=None, output_shape=10, shape=(10, 20, 30), theta=180}] _

self = <<cupyx_tests.scipy_tests.ndimage_tests.test_interpolation.TestAffineTransformTextureMemory object at 0x7fd70736b940>  parameter: {'mode': 'constant', 'order': 0, 'output': None, 'output_shape': 10, 'shape': (10, 20, 30), 'theta': 180}>
xp = <module 'cupy' from '/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.Np3X0NVCM9/cupy/cupy/__init__.py'>
scp = <module 'cupyx.scipy' from '/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.Np3X0NVCM9/cupy/cupyx/scipy/__init__.py'>

    @testing.numpy_cupy_allclose(atol=0.1, scipy_name='scp')
    def test_affine_transform_texture_memory(self, xp, scp):
        a = xp.ones(self.shape, dtype=xp.float32)
        center = numpy.divide(numpy.subtract(self.shape, 1), 2)
    
        if len(self.shape) == 2:
            matrix = self._2d_rotation_matrix(self.theta, center)
        elif len(self.shape) == 3:
            matrix = self._3d_rotation_matrix(self.theta, center)
        else:
            return pytest.xfail('Unsupported shape')
    
        if self.output == 'empty':
            output = xp.empty(self.shape, dtype=xp.float32)
            if self.output_shape:
                return pytest.skip('This combination is tested in '
                                   'test_invalid_texture_arguments')
        else:
            output = self.output
    
        if self.output_shape:
            output_shape = (self.output_shape, ) * len(self.shape)
        else:
            output_shape = self.output_shape
    
        if xp == cupy:
            m = cupyx.scipy.ndimage.affine_transform
            matrix = cupy.array(matrix)
>           return m(a, matrix, output_shape=output_shape,
                     output=output, order=self.order,
                     mode=self.mode, texture_memory=True)

tests/cupyx_tests/scipy_tests/ndimage_tests/test_interpolation.py:398: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
cupyx/scipy/ndimage/interpolation.py:376: in affine_transform
    return _texture.affine_transformation(data=input,
cupyx/_texture.py:168: in affine_transformation
    texture_object = _create_texture_object(data,
cupyx/_texture.py:98: in _create_texture_object
    array = texture.CUDAarray(texture_fmt, *data.shape[::-1])
cupy/cuda/texture.pyx:296: in cupy.cuda.texture.CUDAarray.__init__
    self.ptr = runtime.malloc3DArray(desc.ptr, width, height, depth,
cupy_backends/cuda/api/runtime.pyx:593: in cupy_backends.cuda.api.runtime.malloc3DArray
    check_status(status)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

>   raise CUDARuntimeError(status)
E   AssertionError: Only cupy raises error
E   
E   Traceback (most recent call last):
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.Np3X0NVCM9/cupy/cupy/testing/_helper.py", line 47, in _call_func
E       result = impl(self, *args, **kw)
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.Np3X0NVCM9/cupy/tests/cupyx_tests/scipy_tests/ndimage_tests/test_interpolation.py", line 398, in test_affine_transform_texture_memory
E       return m(a, matrix, output_shape=output_shape,
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.Np3X0NVCM9/cupy/cupyx/scipy/ndimage/interpolation.py", line 376, in affine_transform
E       return _texture.affine_transformation(data=input,
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.Np3X0NVCM9/cupy/cupyx/_texture.py", line 168, in affine_transformation
E       texture_object = _create_texture_object(data,
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.Np3X0NVCM9/cupy/cupyx/_texture.py", line 98, in _create_texture_object
E       array = texture.CUDAarray(texture_fmt, *data.shape[::-1])
E     File "cupy/cuda/texture.pyx", line 296, in cupy.cuda.texture.CUDAarray.__init__
E       self.ptr = runtime.malloc3DArray(desc.ptr, width, height, depth,
E     File "cupy_backends/cuda/api/runtime.pyx", line 593, in cupy_backends.cuda.api.runtime.malloc3DArray
E       check_status(status)
E     File "cupy_backends/cuda/api/runtime.pyx", line 265, in cupy_backends.cuda.api.runtime.check_status
E       raise CUDARuntimeError(status)
E   cupy_backends.cuda.api.runtime.CUDARuntimeError: hipErrorUnknown: hipErrorUnknown

cupy_backends/cuda/api/runtime.pyx:265: AssertionError
----------------------------- Captured stderr call -----------------------------
Traceback (most recent call last):
  File "cupy_backends/cuda/api/runtime.pyx", line 644, in cupy_backends.cuda.api.runtime.freeArray
    check_status(status)
  File "cupy_backends/cuda/api/runtime.pyx", line 265, in cupy_backends.cuda.api.runtime.check_status
    raise CUDARuntimeError(status)
cupy_backends.cuda.api.runtime.CUDARuntimeError: hipErrorUnknown: hipErrorUnknown
_ TestAffineTransformTextureMemory.test_affine_transform_texture_memory[_param_31_{mode='constant', order=0, output=None, output_shape=10, shape=(10, 20, 30), theta=270}] _

self = <<cupyx_tests.scipy_tests.ndimage_tests.test_interpolation.TestAffineTransformTextureMemory object at 0x7fd705a8d280>  parameter: {'mode': 'constant', 'order': 0, 'output': None, 'output_shape': 10, 'shape': (10, 20, 30), 'theta': 270}>
xp = <module 'cupy' from '/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.Np3X0NVCM9/cupy/cupy/__init__.py'>
scp = <module 'cupyx.scipy' from '/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.Np3X0NVCM9/cupy/cupyx/scipy/__init__.py'>

    @testing.numpy_cupy_allclose(atol=0.1, scipy_name='scp')
    def test_affine_transform_texture_memory(self, xp, scp):
        a = xp.ones(self.shape, dtype=xp.float32)
        center = numpy.divide(numpy.subtract(self.shape, 1), 2)
    
        if len(self.shape) == 2:
            matrix = self._2d_rotation_matrix(self.theta, center)
        elif len(self.shape) == 3:
            matrix = self._3d_rotation_matrix(self.theta, center)
        else:
            return pytest.xfail('Unsupported shape')
    
        if self.output == 'empty':
            output = xp.empty(self.shape, dtype=xp.float32)
            if self.output_shape:
                return pytest.skip('This combination is tested in '
                                   'test_invalid_texture_arguments')
        else:
            output = self.output
    
        if self.output_shape:
            output_shape = (self.output_shape, ) * len(self.shape)
        else:
            output_shape = self.output_shape
    
        if xp == cupy:
            m = cupyx.scipy.ndimage.affine_transform
            matrix = cupy.array(matrix)
>           return m(a, matrix, output_shape=output_shape,
                     output=output, order=self.order,
                     mode=self.mode, texture_memory=True)

tests/cupyx_tests/scipy_tests/ndimage_tests/test_interpolation.py:398: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
cupyx/scipy/ndimage/interpolation.py:376: in affine_transform
    return _texture.affine_transformation(data=input,
cupyx/_texture.py:168: in affine_transformation
    texture_object = _create_texture_object(data,
cupyx/_texture.py:98: in _create_texture_object
    array = texture.CUDAarray(texture_fmt, *data.shape[::-1])
cupy/cuda/texture.pyx:296: in cupy.cuda.texture.CUDAarray.__init__
    self.ptr = runtime.malloc3DArray(desc.ptr, width, height, depth,
cupy_backends/cuda/api/runtime.pyx:593: in cupy_backends.cuda.api.runtime.malloc3DArray
    check_status(status)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

>   raise CUDARuntimeError(status)
E   AssertionError: Only cupy raises error
E   
E   Traceback (most recent call last):
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.Np3X0NVCM9/cupy/cupy/testing/_helper.py", line 47, in _call_func
E       result = impl(self, *args, **kw)
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.Np3X0NVCM9/cupy/tests/cupyx_tests/scipy_tests/ndimage_tests/test_interpolation.py", line 398, in test_affine_transform_texture_memory
E       return m(a, matrix, output_shape=output_shape,
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.Np3X0NVCM9/cupy/cupyx/scipy/ndimage/interpolation.py", line 376, in affine_transform
E       return _texture.affine_transformation(data=input,
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.Np3X0NVCM9/cupy/cupyx/_texture.py", line 168, in affine_transformation
E       texture_object = _create_texture_object(data,
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.Np3X0NVCM9/cupy/cupyx/_texture.py", line 98, in _create_texture_object
E       array = texture.CUDAarray(texture_fmt, *data.shape[::-1])
E     File "cupy/cuda/texture.pyx", line 296, in cupy.cuda.texture.CUDAarray.__init__
E       self.ptr = runtime.malloc3DArray(desc.ptr, width, height, depth,
E     File "cupy_backends/cuda/api/runtime.pyx", line 593, in cupy_backends.cuda.api.runtime.malloc3DArray
E       check_status(status)
E     File "cupy_backends/cuda/api/runtime.pyx", line 265, in cupy_backends.cuda.api.runtime.check_status
E       raise CUDARuntimeError(status)
E   cupy_backends.cuda.api.runtime.CUDARuntimeError: hipErrorUnknown: hipErrorUnknown

cupy_backends/cuda/api/runtime.pyx:265: AssertionError
----------------------------- Captured stderr call -----------------------------
Traceback (most recent call last):
  File "cupy_backends/cuda/api/runtime.pyx", line 644, in cupy_backends.cuda.api.runtime.freeArray
    check_status(status)
  File "cupy_backends/cuda/api/runtime.pyx", line 265, in cupy_backends.cuda.api.runtime.check_status
    raise CUDARuntimeError(status)
cupy_backends.cuda.api.runtime.CUDARuntimeError: hipErrorUnknown: hipErrorUnknown
_ TestAffineTransformTextureMemory.test_affine_transform_texture_memory[_param_32_{mode='constant', order=0, output=float32, output_shape=None, shape=(100, 100), theta=0}] _

self = <<cupyx_tests.scipy_tests.ndimage_tests.test_interpolation.TestAffineTransformTextureMemory object at 0x7fd7067bca60> ...de': 'constant', 'order': 0, 'output': <class 'numpy.float32'>, 'output_shape': None, 'shape': (100, 100), 'theta': 0}>
xp = <module 'cupy' from '/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.Np3X0NVCM9/cupy/cupy/__init__.py'>
scp = <module 'cupyx.scipy' from '/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.Np3X0NVCM9/cupy/cupyx/scipy/__init__.py'>

    @testing.numpy_cupy_allclose(atol=0.1, scipy_name='scp')
    def test_affine_transform_texture_memory(self, xp, scp):
        a = xp.ones(self.shape, dtype=xp.float32)
        center = numpy.divide(numpy.subtract(self.shape, 1), 2)
    
        if len(self.shape) == 2:
            matrix = self._2d_rotation_matrix(self.theta, center)
        elif len(self.shape) == 3:
            matrix = self._3d_rotation_matrix(self.theta, center)
        else:
            return pytest.xfail('Unsupported shape')
    
        if self.output == 'empty':
            output = xp.empty(self.shape, dtype=xp.float32)
            if self.output_shape:
                return pytest.skip('This combination is tested in '
                                   'test_invalid_texture_arguments')
        else:
            output = self.output
    
        if self.output_shape:
            output_shape = (self.output_shape, ) * len(self.shape)
        else:
            output_shape = self.output_shape
    
        if xp == cupy:
            m = cupyx.scipy.ndimage.affine_transform
            matrix = cupy.array(matrix)
>           return m(a, matrix, output_shape=output_shape,
                     output=output, order=self.order,
                     mode=self.mode, texture_memory=True)

tests/cupyx_tests/scipy_tests/ndimage_tests/test_interpolation.py:398: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
cupyx/scipy/ndimage/interpolation.py:376: in affine_transform
    return _texture.affine_transformation(data=input,
cupyx/_texture.py:168: in affine_transformation
    texture_object = _create_texture_object(data,
cupyx/_texture.py:98: in _create_texture_object
    array = texture.CUDAarray(texture_fmt, *data.shape[::-1])
cupy/cuda/texture.pyx:296: in cupy.cuda.texture.CUDAarray.__init__
    self.ptr = runtime.malloc3DArray(desc.ptr, width, height, depth,
cupy_backends/cuda/api/runtime.pyx:593: in cupy_backends.cuda.api.runtime.malloc3DArray
    check_status(status)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

>   raise CUDARuntimeError(status)
E   AssertionError: Only cupy raises error
E   
E   Traceback (most recent call last):
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.Np3X0NVCM9/cupy/cupy/testing/_helper.py", line 47, in _call_func
E       result = impl(self, *args, **kw)
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.Np3X0NVCM9/cupy/tests/cupyx_tests/scipy_tests/ndimage_tests/test_interpolation.py", line 398, in test_affine_transform_texture_memory
E       return m(a, matrix, output_shape=output_shape,
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.Np3X0NVCM9/cupy/cupyx/scipy/ndimage/interpolation.py", line 376, in affine_transform
E       return _texture.affine_transformation(data=input,
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.Np3X0NVCM9/cupy/cupyx/_texture.py", line 168, in affine_transformation
E       texture_object = _create_texture_object(data,
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.Np3X0NVCM9/cupy/cupyx/_texture.py", line 98, in _create_texture_object
E       array = texture.CUDAarray(texture_fmt, *data.shape[::-1])
E     File "cupy/cuda/texture.pyx", line 296, in cupy.cuda.texture.CUDAarray.__init__
E       self.ptr = runtime.malloc3DArray(desc.ptr, width, height, depth,
E     File "cupy_backends/cuda/api/runtime.pyx", line 593, in cupy_backends.cuda.api.runtime.malloc3DArray
E       check_status(status)
E     File "cupy_backends/cuda/api/runtime.pyx", line 265, in cupy_backends.cuda.api.runtime.check_status
E       raise CUDARuntimeError(status)
E   cupy_backends.cuda.api.runtime.CUDARuntimeError: hipErrorUnknown: hipErrorUnknown

cupy_backends/cuda/api/runtime.pyx:265: AssertionError
----------------------------- Captured stderr call -----------------------------
Traceback (most recent call last):
  File "cupy_backends/cuda/api/runtime.pyx", line 644, in cupy_backends.cuda.api.runtime.freeArray
    check_status(status)
  File "cupy_backends/cuda/api/runtime.pyx", line 265, in cupy_backends.cuda.api.runtime.check_status
    raise CUDARuntimeError(status)
cupy_backends.cuda.api.runtime.CUDARuntimeError: hipErrorUnknown: hipErrorUnknown
_ TestAffineTransformTextureMemory.test_affine_transform_texture_memory[_param_33_{mode='constant', order=0, output=float32, output_shape=None, shape=(100, 100), theta=90}] _

self = <<cupyx_tests.scipy_tests.ndimage_tests.test_interpolation.TestAffineTransformTextureMemory object at 0x7fd7061aad30> ...e': 'constant', 'order': 0, 'output': <class 'numpy.float32'>, 'output_shape': None, 'shape': (100, 100), 'theta': 90}>
xp = <module 'cupy' from '/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.Np3X0NVCM9/cupy/cupy/__init__.py'>
scp = <module 'cupyx.scipy' from '/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.Np3X0NVCM9/cupy/cupyx/scipy/__init__.py'>

    @testing.numpy_cupy_allclose(atol=0.1, scipy_name='scp')
    def test_affine_transform_texture_memory(self, xp, scp):
        a = xp.ones(self.shape, dtype=xp.float32)
        center = numpy.divide(numpy.subtract(self.shape, 1), 2)
    
        if len(self.shape) == 2:
            matrix = self._2d_rotation_matrix(self.theta, center)
        elif len(self.shape) == 3:
            matrix = self._3d_rotation_matrix(self.theta, center)
        else:
            return pytest.xfail('Unsupported shape')
    
        if self.output == 'empty':
            output = xp.empty(self.shape, dtype=xp.float32)
            if self.output_shape:
                return pytest.skip('This combination is tested in '
                                   'test_invalid_texture_arguments')
        else:
            output = self.output
    
        if self.output_shape:
            output_shape = (self.output_shape, ) * len(self.shape)
        else:
            output_shape = self.output_shape
    
        if xp == cupy:
            m = cupyx.scipy.ndimage.affine_transform
            matrix = cupy.array(matrix)
>           return m(a, matrix, output_shape=output_shape,
                     output=output, order=self.order,
                     mode=self.mode, texture_memory=True)

tests/cupyx_tests/scipy_tests/ndimage_tests/test_interpolation.py:398: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
cupyx/scipy/ndimage/interpolation.py:376: in affine_transform
    return _texture.affine_transformation(data=input,
cupyx/_texture.py:168: in affine_transformation
    texture_object = _create_texture_object(data,
cupyx/_texture.py:98: in _create_texture_object
    array = texture.CUDAarray(texture_fmt, *data.shape[::-1])
cupy/cuda/texture.pyx:296: in cupy.cuda.texture.CUDAarray.__init__
    self.ptr = runtime.malloc3DArray(desc.ptr, width, height, depth,
cupy_backends/cuda/api/runtime.pyx:593: in cupy_backends.cuda.api.runtime.malloc3DArray
    check_status(status)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

>   raise CUDARuntimeError(status)
E   AssertionError: Only cupy raises error
E   
E   Traceback (most recent call last):
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.Np3X0NVCM9/cupy/cupy/testing/_helper.py", line 47, in _call_func
E       result = impl(self, *args, **kw)
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.Np3X0NVCM9/cupy/tests/cupyx_tests/scipy_tests/ndimage_tests/test_interpolation.py", line 398, in test_affine_transform_texture_memory
E       return m(a, matrix, output_shape=output_shape,
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.Np3X0NVCM9/cupy/cupyx/scipy/ndimage/interpolation.py", line 376, in affine_transform
E       return _texture.affine_transformation(data=input,
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.Np3X0NVCM9/cupy/cupyx/_texture.py", line 168, in affine_transformation
E       texture_object = _create_texture_object(data,
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.Np3X0NVCM9/cupy/cupyx/_texture.py", line 98, in _create_texture_object
E       array = texture.CUDAarray(texture_fmt, *data.shape[::-1])
E     File "cupy/cuda/texture.pyx", line 296, in cupy.cuda.texture.CUDAarray.__init__
E       self.ptr = runtime.malloc3DArray(desc.ptr, width, height, depth,
E     File "cupy_backends/cuda/api/runtime.pyx", line 593, in cupy_backends.cuda.api.runtime.malloc3DArray
E       check_status(status)
E     File "cupy_backends/cuda/api/runtime.pyx", line 265, in cupy_backends.cuda.api.runtime.check_status
E       raise CUDARuntimeError(status)
E   cupy_backends.cuda.api.runtime.CUDARuntimeError: hipErrorUnknown: hipErrorUnknown

cupy_backends/cuda/api/runtime.pyx:265: AssertionError
----------------------------- Captured stderr call -----------------------------
Traceback (most recent call last):
  File "cupy_backends/cuda/api/runtime.pyx", line 644, in cupy_backends.cuda.api.runtime.freeArray
    check_status(status)
  File "cupy_backends/cuda/api/runtime.pyx", line 265, in cupy_backends.cuda.api.runtime.check_status
    raise CUDARuntimeError(status)
cupy_backends.cuda.api.runtime.CUDARuntimeError: hipErrorUnknown: hipErrorUnknown
_ TestAffineTransformTextureMemory.test_affine_transform_texture_memory[_param_34_{mode='constant', order=0, output=float32, output_shape=None, shape=(100, 100), theta=180}] _

self = <<cupyx_tests.scipy_tests.ndimage_tests.test_interpolation.TestAffineTransformTextureMemory object at 0x7fd7067bc850> ...': 'constant', 'order': 0, 'output': <class 'numpy.float32'>, 'output_shape': None, 'shape': (100, 100), 'theta': 180}>
xp = <module 'cupy' from '/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.Np3X0NVCM9/cupy/cupy/__init__.py'>
scp = <module 'cupyx.scipy' from '/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.Np3X0NVCM9/cupy/cupyx/scipy/__init__.py'>

    @testing.numpy_cupy_allclose(atol=0.1, scipy_name='scp')
    def test_affine_transform_texture_memory(self, xp, scp):
        a = xp.ones(self.shape, dtype=xp.float32)
        center = numpy.divide(numpy.subtract(self.shape, 1), 2)
    
        if len(self.shape) == 2:
            matrix = self._2d_rotation_matrix(self.theta, center)
        elif len(self.shape) == 3:
            matrix = self._3d_rotation_matrix(self.theta, center)
        else:
            return pytest.xfail('Unsupported shape')
    
        if self.output == 'empty':
            output = xp.empty(self.shape, dtype=xp.float32)
            if self.output_shape:
                return pytest.skip('This combination is tested in '
                                   'test_invalid_texture_arguments')
        else:
            output = self.output
    
        if self.output_shape:
            output_shape = (self.output_shape, ) * len(self.shape)
        else:
            output_shape = self.output_shape
    
        if xp == cupy:
            m = cupyx.scipy.ndimage.affine_transform
            matrix = cupy.array(matrix)
>           return m(a, matrix, output_shape=output_shape,
                     output=output, order=self.order,
                     mode=self.mode, texture_memory=True)

tests/cupyx_tests/scipy_tests/ndimage_tests/test_interpolation.py:398: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
cupyx/scipy/ndimage/interpolation.py:376: in affine_transform
    return _texture.affine_transformation(data=input,
cupyx/_texture.py:168: in affine_transformation
    texture_object = _create_texture_object(data,
cupyx/_texture.py:98: in _create_texture_object
    array = texture.CUDAarray(texture_fmt, *data.shape[::-1])
cupy/cuda/texture.pyx:296: in cupy.cuda.texture.CUDAarray.__init__
    self.ptr = runtime.malloc3DArray(desc.ptr, width, height, depth,
cupy_backends/cuda/api/runtime.pyx:593: in cupy_backends.cuda.api.runtime.malloc3DArray
    check_status(status)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

>   raise CUDARuntimeError(status)
E   AssertionError: Only cupy raises error
E   
E   Traceback (most recent call last):
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.Np3X0NVCM9/cupy/cupy/testing/_helper.py", line 47, in _call_func
E       result = impl(self, *args, **kw)
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.Np3X0NVCM9/cupy/tests/cupyx_tests/scipy_tests/ndimage_tests/test_interpolation.py", line 398, in test_affine_transform_texture_memory
E       return m(a, matrix, output_shape=output_shape,
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.Np3X0NVCM9/cupy/cupyx/scipy/ndimage/interpolation.py", line 376, in affine_transform
E       return _texture.affine_transformation(data=input,
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.Np3X0NVCM9/cupy/cupyx/_texture.py", line 168, in affine_transformation
E       texture_object = _create_texture_object(data,
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.Np3X0NVCM9/cupy/cupyx/_texture.py", line 98, in _create_texture_object
E       array = texture.CUDAarray(texture_fmt, *data.shape[::-1])
E     File "cupy/cuda/texture.pyx", line 296, in cupy.cuda.texture.CUDAarray.__init__
E       self.ptr = runtime.malloc3DArray(desc.ptr, width, height, depth,
E     File "cupy_backends/cuda/api/runtime.pyx", line 593, in cupy_backends.cuda.api.runtime.malloc3DArray
E       check_status(status)
E     File "cupy_backends/cuda/api/runtime.pyx", line 265, in cupy_backends.cuda.api.runtime.check_status
E       raise CUDARuntimeError(status)
E   cupy_backends.cuda.api.runtime.CUDARuntimeError: hipErrorUnknown: hipErrorUnknown

cupy_backends/cuda/api/runtime.pyx:265: AssertionError
----------------------------- Captured stderr call -----------------------------
Traceback (most recent call last):
  File "cupy_backends/cuda/api/runtime.pyx", line 644, in cupy_backends.cuda.api.runtime.freeArray
    check_status(status)
  File "cupy_backends/cuda/api/runtime.pyx", line 265, in cupy_backends.cuda.api.runtime.check_status
    raise CUDARuntimeError(status)
cupy_backends.cuda.api.runtime.CUDARuntimeError: hipErrorUnknown: hipErrorUnknown
_ TestAffineTransformTextureMemory.test_affine_transform_texture_memory[_param_35_{mode='constant', order=0, output=float32, output_shape=None, shape=(100, 100), theta=270}] _

self = <<cupyx_tests.scipy_tests.ndimage_tests.test_interpolation.TestAffineTransformTextureMemory object at 0x7fd7059b6f10> ...': 'constant', 'order': 0, 'output': <class 'numpy.float32'>, 'output_shape': None, 'shape': (100, 100), 'theta': 270}>
xp = <module 'cupy' from '/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.Np3X0NVCM9/cupy/cupy/__init__.py'>
scp = <module 'cupyx.scipy' from '/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.Np3X0NVCM9/cupy/cupyx/scipy/__init__.py'>

    @testing.numpy_cupy_allclose(atol=0.1, scipy_name='scp')
    def test_affine_transform_texture_memory(self, xp, scp):
        a = xp.ones(self.shape, dtype=xp.float32)
        center = numpy.divide(numpy.subtract(self.shape, 1), 2)
    
        if len(self.shape) == 2:
            matrix = self._2d_rotation_matrix(self.theta, center)
        elif len(self.shape) == 3:
            matrix = self._3d_rotation_matrix(self.theta, center)
        else:
            return pytest.xfail('Unsupported shape')
    
        if self.output == 'empty':
            output = xp.empty(self.shape, dtype=xp.float32)
            if self.output_shape:
                return pytest.skip('This combination is tested in '
                                   'test_invalid_texture_arguments')
        else:
            output = self.output
    
        if self.output_shape:
            output_shape = (self.output_shape, ) * len(self.shape)
        else:
            output_shape = self.output_shape
    
        if xp == cupy:
            m = cupyx.scipy.ndimage.affine_transform
            matrix = cupy.array(matrix)
>           return m(a, matrix, output_shape=output_shape,
                     output=output, order=self.order,
                     mode=self.mode, texture_memory=True)

tests/cupyx_tests/scipy_tests/ndimage_tests/test_interpolation.py:398: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
cupyx/scipy/ndimage/interpolation.py:376: in affine_transform
    return _texture.affine_transformation(data=input,
cupyx/_texture.py:168: in affine_transformation
    texture_object = _create_texture_object(data,
cupyx/_texture.py:98: in _create_texture_object
    array = texture.CUDAarray(texture_fmt, *data.shape[::-1])
cupy/cuda/texture.pyx:296: in cupy.cuda.texture.CUDAarray.__init__
    self.ptr = runtime.malloc3DArray(desc.ptr, width, height, depth,
cupy_backends/cuda/api/runtime.pyx:593: in cupy_backends.cuda.api.runtime.malloc3DArray
    check_status(status)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

>   raise CUDARuntimeError(status)
E   AssertionError: Only cupy raises error
E   
E   Traceback (most recent call last):
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.Np3X0NVCM9/cupy/cupy/testing/_helper.py", line 47, in _call_func
E       result = impl(self, *args, **kw)
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.Np3X0NVCM9/cupy/tests/cupyx_tests/scipy_tests/ndimage_tests/test_interpolation.py", line 398, in test_affine_transform_texture_memory
E       return m(a, matrix, output_shape=output_shape,
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.Np3X0NVCM9/cupy/cupyx/scipy/ndimage/interpolation.py", line 376, in affine_transform
E       return _texture.affine_transformation(data=input,
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.Np3X0NVCM9/cupy/cupyx/_texture.py", line 168, in affine_transformation
E       texture_object = _create_texture_object(data,
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.Np3X0NVCM9/cupy/cupyx/_texture.py", line 98, in _create_texture_object
E       array = texture.CUDAarray(texture_fmt, *data.shape[::-1])
E     File "cupy/cuda/texture.pyx", line 296, in cupy.cuda.texture.CUDAarray.__init__
E       self.ptr = runtime.malloc3DArray(desc.ptr, width, height, depth,
E     File "cupy_backends/cuda/api/runtime.pyx", line 593, in cupy_backends.cuda.api.runtime.malloc3DArray
E       check_status(status)
E     File "cupy_backends/cuda/api/runtime.pyx", line 265, in cupy_backends.cuda.api.runtime.check_status
E       raise CUDARuntimeError(status)
E   cupy_backends.cuda.api.runtime.CUDARuntimeError: hipErrorUnknown: hipErrorUnknown

cupy_backends/cuda/api/runtime.pyx:265: AssertionError
----------------------------- Captured stderr call -----------------------------
Traceback (most recent call last):
  File "cupy_backends/cuda/api/runtime.pyx", line 644, in cupy_backends.cuda.api.runtime.freeArray
    check_status(status)
  File "cupy_backends/cuda/api/runtime.pyx", line 265, in cupy_backends.cuda.api.runtime.check_status
    raise CUDARuntimeError(status)
cupy_backends.cuda.api.runtime.CUDARuntimeError: hipErrorUnknown: hipErrorUnknown
_ TestAffineTransformTextureMemory.test_affine_transform_texture_memory[_param_36_{mode='constant', order=0, output=float32, output_shape=None, shape=(10, 20), theta=0}] _

self = <<cupyx_tests.scipy_tests.ndimage_tests.test_interpolation.TestAffineTransformTextureMemory object at 0x7fd707ea5cd0> ...mode': 'constant', 'order': 0, 'output': <class 'numpy.float32'>, 'output_shape': None, 'shape': (10, 20), 'theta': 0}>
xp = <module 'cupy' from '/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.Np3X0NVCM9/cupy/cupy/__init__.py'>
scp = <module 'cupyx.scipy' from '/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.Np3X0NVCM9/cupy/cupyx/scipy/__init__.py'>

    @testing.numpy_cupy_allclose(atol=0.1, scipy_name='scp')
    def test_affine_transform_texture_memory(self, xp, scp):
        a = xp.ones(self.shape, dtype=xp.float32)
        center = numpy.divide(numpy.subtract(self.shape, 1), 2)
    
        if len(self.shape) == 2:
            matrix = self._2d_rotation_matrix(self.theta, center)
        elif len(self.shape) == 3:
            matrix = self._3d_rotation_matrix(self.theta, center)
        else:
            return pytest.xfail('Unsupported shape')
    
        if self.output == 'empty':
            output = xp.empty(self.shape, dtype=xp.float32)
            if self.output_shape:
                return pytest.skip('This combination is tested in '
                                   'test_invalid_texture_arguments')
        else:
            output = self.output
    
        if self.output_shape:
            output_shape = (self.output_shape, ) * len(self.shape)
        else:
            output_shape = self.output_shape
    
        if xp == cupy:
            m = cupyx.scipy.ndimage.affine_transform
            matrix = cupy.array(matrix)
>           return m(a, matrix, output_shape=output_shape,
                     output=output, order=self.order,
                     mode=self.mode, texture_memory=True)

tests/cupyx_tests/scipy_tests/ndimage_tests/test_interpolation.py:398: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
cupyx/scipy/ndimage/interpolation.py:376: in affine_transform
    return _texture.affine_transformation(data=input,
cupyx/_texture.py:168: in affine_transformation
    texture_object = _create_texture_object(data,
cupyx/_texture.py:98: in _create_texture_object
    array = texture.CUDAarray(texture_fmt, *data.shape[::-1])
cupy/cuda/texture.pyx:296: in cupy.cuda.texture.CUDAarray.__init__
    self.ptr = runtime.malloc3DArray(desc.ptr, width, height, depth,
cupy_backends/cuda/api/runtime.pyx:593: in cupy_backends.cuda.api.runtime.malloc3DArray
    check_status(status)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

>   raise CUDARuntimeError(status)
E   AssertionError: Only cupy raises error
E   
E   Traceback (most recent call last):
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.Np3X0NVCM9/cupy/cupy/testing/_helper.py", line 47, in _call_func
E       result = impl(self, *args, **kw)
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.Np3X0NVCM9/cupy/tests/cupyx_tests/scipy_tests/ndimage_tests/test_interpolation.py", line 398, in test_affine_transform_texture_memory
E       return m(a, matrix, output_shape=output_shape,
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.Np3X0NVCM9/cupy/cupyx/scipy/ndimage/interpolation.py", line 376, in affine_transform
E       return _texture.affine_transformation(data=input,
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.Np3X0NVCM9/cupy/cupyx/_texture.py", line 168, in affine_transformation
E       texture_object = _create_texture_object(data,
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.Np3X0NVCM9/cupy/cupyx/_texture.py", line 98, in _create_texture_object
E       array = texture.CUDAarray(texture_fmt, *data.shape[::-1])
E     File "cupy/cuda/texture.pyx", line 296, in cupy.cuda.texture.CUDAarray.__init__
E       self.ptr = runtime.malloc3DArray(desc.ptr, width, height, depth,
E     File "cupy_backends/cuda/api/runtime.pyx", line 593, in cupy_backends.cuda.api.runtime.malloc3DArray
E       check_status(status)
E     File "cupy_backends/cuda/api/runtime.pyx", line 265, in cupy_backends.cuda.api.runtime.check_status
E       raise CUDARuntimeError(status)
E   cupy_backends.cuda.api.runtime.CUDARuntimeError: hipErrorUnknown: hipErrorUnknown

cupy_backends/cuda/api/runtime.pyx:265: AssertionError
----------------------------- Captured stderr call -----------------------------
Traceback (most recent call last):
  File "cupy_backends/cuda/api/runtime.pyx", line 644, in cupy_backends.cuda.api.runtime.freeArray
    check_status(status)
  File "cupy_backends/cuda/api/runtime.pyx", line 265, in cupy_backends.cuda.api.runtime.check_status
    raise CUDARuntimeError(status)
cupy_backends.cuda.api.runtime.CUDARuntimeError: hipErrorUnknown: hipErrorUnknown
_ TestAffineTransformTextureMemory.test_affine_transform_texture_memory[_param_37_{mode='constant', order=0, output=float32, output_shape=None, shape=(10, 20), theta=90}] _

self = <<cupyx_tests.scipy_tests.ndimage_tests.test_interpolation.TestAffineTransformTextureMemory object at 0x7fd706f58850> ...ode': 'constant', 'order': 0, 'output': <class 'numpy.float32'>, 'output_shape': None, 'shape': (10, 20), 'theta': 90}>
xp = <module 'cupy' from '/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.Np3X0NVCM9/cupy/cupy/__init__.py'>
scp = <module 'cupyx.scipy' from '/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.Np3X0NVCM9/cupy/cupyx/scipy/__init__.py'>

    @testing.numpy_cupy_allclose(atol=0.1, scipy_name='scp')
    def test_affine_transform_texture_memory(self, xp, scp):
        a = xp.ones(self.shape, dtype=xp.float32)
        center = numpy.divide(numpy.subtract(self.shape, 1), 2)
    
        if len(self.shape) == 2:
            matrix = self._2d_rotation_matrix(self.theta, center)
        elif len(self.shape) == 3:
            matrix = self._3d_rotation_matrix(self.theta, center)
        else:
            return pytest.xfail('Unsupported shape')
    
        if self.output == 'empty':
            output = xp.empty(self.shape, dtype=xp.float32)
            if self.output_shape:
                return pytest.skip('This combination is tested in '
                                   'test_invalid_texture_arguments')
        else:
            output = self.output
    
        if self.output_shape:
            output_shape = (self.output_shape, ) * len(self.shape)
        else:
            output_shape = self.output_shape
    
        if xp == cupy:
            m = cupyx.scipy.ndimage.affine_transform
            matrix = cupy.array(matrix)
>           return m(a, matrix, output_shape=output_shape,
                     output=output, order=self.order,
                     mode=self.mode, texture_memory=True)

tests/cupyx_tests/scipy_tests/ndimage_tests/test_interpolation.py:398: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
cupyx/scipy/ndimage/interpolation.py:376: in affine_transform
    return _texture.affine_transformation(data=input,
cupyx/_texture.py:168: in affine_transformation
    texture_object = _create_texture_object(data,
cupyx/_texture.py:98: in _create_texture_object
    array = texture.CUDAarray(texture_fmt, *data.shape[::-1])
cupy/cuda/texture.pyx:296: in cupy.cuda.texture.CUDAarray.__init__
    self.ptr = runtime.malloc3DArray(desc.ptr, width, height, depth,
cupy_backends/cuda/api/runtime.pyx:593: in cupy_backends.cuda.api.runtime.malloc3DArray
    check_status(status)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

>   raise CUDARuntimeError(status)
E   AssertionError: Only cupy raises error
E   
E   Traceback (most recent call last):
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.Np3X0NVCM9/cupy/cupy/testing/_helper.py", line 47, in _call_func
E       result = impl(self, *args, **kw)
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.Np3X0NVCM9/cupy/tests/cupyx_tests/scipy_tests/ndimage_tests/test_interpolation.py", line 398, in test_affine_transform_texture_memory
E       return m(a, matrix, output_shape=output_shape,
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.Np3X0NVCM9/cupy/cupyx/scipy/ndimage/interpolation.py", line 376, in affine_transform
E       return _texture.affine_transformation(data=input,
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.Np3X0NVCM9/cupy/cupyx/_texture.py", line 168, in affine_transformation
E       texture_object = _create_texture_object(data,
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.Np3X0NVCM9/cupy/cupyx/_texture.py", line 98, in _create_texture_object
E       array = texture.CUDAarray(texture_fmt, *data.shape[::-1])
E     File "cupy/cuda/texture.pyx", line 296, in cupy.cuda.texture.CUDAarray.__init__
E       self.ptr = runtime.malloc3DArray(desc.ptr, width, height, depth,
E     File "cupy_backends/cuda/api/runtime.pyx", line 593, in cupy_backends.cuda.api.runtime.malloc3DArray
E       check_status(status)
E     File "cupy_backends/cuda/api/runtime.pyx", line 265, in cupy_backends.cuda.api.runtime.check_status
E       raise CUDARuntimeError(status)
E   cupy_backends.cuda.api.runtime.CUDARuntimeError: hipErrorUnknown: hipErrorUnknown

cupy_backends/cuda/api/runtime.pyx:265: AssertionError
----------------------------- Captured stderr call -----------------------------
Traceback (most recent call last):
  File "cupy_backends/cuda/api/runtime.pyx", line 644, in cupy_backends.cuda.api.runtime.freeArray
    check_status(status)
  File "cupy_backends/cuda/api/runtime.pyx", line 265, in cupy_backends.cuda.api.runtime.check_status
    raise CUDARuntimeError(status)
cupy_backends.cuda.api.runtime.CUDARuntimeError: hipErrorUnknown: hipErrorUnknown
_ TestAffineTransformTextureMemory.test_affine_transform_texture_memory[_param_38_{mode='constant', order=0, output=float32, output_shape=None, shape=(10, 20), theta=180}] _

self = <<cupyx_tests.scipy_tests.ndimage_tests.test_interpolation.TestAffineTransformTextureMemory object at 0x7fd7067bcd60> ...de': 'constant', 'order': 0, 'output': <class 'numpy.float32'>, 'output_shape': None, 'shape': (10, 20), 'theta': 180}>
xp = <module 'cupy' from '/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.Np3X0NVCM9/cupy/cupy/__init__.py'>
scp = <module 'cupyx.scipy' from '/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.Np3X0NVCM9/cupy/cupyx/scipy/__init__.py'>

    @testing.numpy_cupy_allclose(atol=0.1, scipy_name='scp')
    def test_affine_transform_texture_memory(self, xp, scp):
        a = xp.ones(self.shape, dtype=xp.float32)
        center = numpy.divide(numpy.subtract(self.shape, 1), 2)
    
        if len(self.shape) == 2:
            matrix = self._2d_rotation_matrix(self.theta, center)
        elif len(self.shape) == 3:
            matrix = self._3d_rotation_matrix(self.theta, center)
        else:
            return pytest.xfail('Unsupported shape')
    
        if self.output == 'empty':
            output = xp.empty(self.shape, dtype=xp.float32)
            if self.output_shape:
                return pytest.skip('This combination is tested in '
                                   'test_invalid_texture_arguments')
        else:
            output = self.output
    
        if self.output_shape:
            output_shape = (self.output_shape, ) * len(self.shape)
        else:
            output_shape = self.output_shape
    
        if xp == cupy:
            m = cupyx.scipy.ndimage.affine_transform
            matrix = cupy.array(matrix)
>           return m(a, matrix, output_shape=output_shape,
                     output=output, order=self.order,
                     mode=self.mode, texture_memory=True)

tests/cupyx_tests/scipy_tests/ndimage_tests/test_interpolation.py:398: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
cupyx/scipy/ndimage/interpolation.py:376: in affine_transform
    return _texture.affine_transformation(data=input,
cupyx/_texture.py:168: in affine_transformation
    texture_object = _create_texture_object(data,
cupyx/_texture.py:98: in _create_texture_object
    array = texture.CUDAarray(texture_fmt, *data.shape[::-1])
cupy/cuda/texture.pyx:296: in cupy.cuda.texture.CUDAarray.__init__
    self.ptr = runtime.malloc3DArray(desc.ptr, width, height, depth,
cupy_backends/cuda/api/runtime.pyx:593: in cupy_backends.cuda.api.runtime.malloc3DArray
    check_status(status)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

>   raise CUDARuntimeError(status)
E   AssertionError: Only cupy raises error
E   
E   Traceback (most recent call last):
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.Np3X0NVCM9/cupy/cupy/testing/_helper.py", line 47, in _call_func
E       result = impl(self, *args, **kw)
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.Np3X0NVCM9/cupy/tests/cupyx_tests/scipy_tests/ndimage_tests/test_interpolation.py", line 398, in test_affine_transform_texture_memory
E       return m(a, matrix, output_shape=output_shape,
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.Np3X0NVCM9/cupy/cupyx/scipy/ndimage/interpolation.py", line 376, in affine_transform
E       return _texture.affine_transformation(data=input,
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.Np3X0NVCM9/cupy/cupyx/_texture.py", line 168, in affine_transformation
E       texture_object = _create_texture_object(data,
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.Np3X0NVCM9/cupy/cupyx/_texture.py", line 98, in _create_texture_object
E       array = texture.CUDAarray(texture_fmt, *data.shape[::-1])
E     File "cupy/cuda/texture.pyx", line 296, in cupy.cuda.texture.CUDAarray.__init__
E       self.ptr = runtime.malloc3DArray(desc.ptr, width, height, depth,
E     File "cupy_backends/cuda/api/runtime.pyx", line 593, in cupy_backends.cuda.api.runtime.malloc3DArray
E       check_status(status)
E     File "cupy_backends/cuda/api/runtime.pyx", line 265, in cupy_backends.cuda.api.runtime.check_status
E       raise CUDARuntimeError(status)
E   cupy_backends.cuda.api.runtime.CUDARuntimeError: hipErrorUnknown: hipErrorUnknown

cupy_backends/cuda/api/runtime.pyx:265: AssertionError
----------------------------- Captured stderr call -----------------------------
Traceback (most recent call last):
  File "cupy_backends/cuda/api/runtime.pyx", line 644, in cupy_backends.cuda.api.runtime.freeArray
    check_status(status)
  File "cupy_backends/cuda/api/runtime.pyx", line 265, in cupy_backends.cuda.api.runtime.check_status
    raise CUDARuntimeError(status)
cupy_backends.cuda.api.runtime.CUDARuntimeError: hipErrorUnknown: hipErrorUnknown
_ TestAffineTransformTextureMemory.test_affine_transform_texture_memory[_param_39_{mode='constant', order=0, output=float32, output_shape=None, shape=(10, 20), theta=270}] _

self = <<cupyx_tests.scipy_tests.ndimage_tests.test_interpolation.TestAffineTransformTextureMemory object at 0x7fd7081dc9d0> ...de': 'constant', 'order': 0, 'output': <class 'numpy.float32'>, 'output_shape': None, 'shape': (10, 20), 'theta': 270}>
xp = <module 'cupy' from '/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.Np3X0NVCM9/cupy/cupy/__init__.py'>
scp = <module 'cupyx.scipy' from '/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.Np3X0NVCM9/cupy/cupyx/scipy/__init__.py'>

    @testing.numpy_cupy_allclose(atol=0.1, scipy_name='scp')
    def test_affine_transform_texture_memory(self, xp, scp):
        a = xp.ones(self.shape, dtype=xp.float32)
        center = numpy.divide(numpy.subtract(self.shape, 1), 2)
    
        if len(self.shape) == 2:
            matrix = self._2d_rotation_matrix(self.theta, center)
        elif len(self.shape) == 3:
            matrix = self._3d_rotation_matrix(self.theta, center)
        else:
            return pytest.xfail('Unsupported shape')
    
        if self.output == 'empty':
            output = xp.empty(self.shape, dtype=xp.float32)
            if self.output_shape:
                return pytest.skip('This combination is tested in '
                                   'test_invalid_texture_arguments')
        else:
            output = self.output
    
        if self.output_shape:
            output_shape = (self.output_shape, ) * len(self.shape)
        else:
            output_shape = self.output_shape
    
        if xp == cupy:
            m = cupyx.scipy.ndimage.affine_transform
            matrix = cupy.array(matrix)
>           return m(a, matrix, output_shape=output_shape,
                     output=output, order=self.order,
                     mode=self.mode, texture_memory=True)

tests/cupyx_tests/scipy_tests/ndimage_tests/test_interpolation.py:398: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
cupyx/scipy/ndimage/interpolation.py:376: in affine_transform
    return _texture.affine_transformation(data=input,
cupyx/_texture.py:168: in affine_transformation
    texture_object = _create_texture_object(data,
cupyx/_texture.py:98: in _create_texture_object
    array = texture.CUDAarray(texture_fmt, *data.shape[::-1])
cupy/cuda/texture.pyx:296: in cupy.cuda.texture.CUDAarray.__init__
    self.ptr = runtime.malloc3DArray(desc.ptr, width, height, depth,
cupy_backends/cuda/api/runtime.pyx:593: in cupy_backends.cuda.api.runtime.malloc3DArray
    check_status(status)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

>   raise CUDARuntimeError(status)
E   AssertionError: Only cupy raises error
E   
E   Traceback (most recent call last):
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.Np3X0NVCM9/cupy/cupy/testing/_helper.py", line 47, in _call_func
E       result = impl(self, *args, **kw)
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.Np3X0NVCM9/cupy/tests/cupyx_tests/scipy_tests/ndimage_tests/test_interpolation.py", line 398, in test_affine_transform_texture_memory
E       return m(a, matrix, output_shape=output_shape,
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.Np3X0NVCM9/cupy/cupyx/scipy/ndimage/interpolation.py", line 376, in affine_transform
E       return _texture.affine_transformation(data=input,
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.Np3X0NVCM9/cupy/cupyx/_texture.py", line 168, in affine_transformation
E       texture_object = _create_texture_object(data,
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.Np3X0NVCM9/cupy/cupyx/_texture.py", line 98, in _create_texture_object
E       array = texture.CUDAarray(texture_fmt, *data.shape[::-1])
E     File "cupy/cuda/texture.pyx", line 296, in cupy.cuda.texture.CUDAarray.__init__
E       self.ptr = runtime.malloc3DArray(desc.ptr, width, height, depth,
E     File "cupy_backends/cuda/api/runtime.pyx", line 593, in cupy_backends.cuda.api.runtime.malloc3DArray
E       check_status(status)
E     File "cupy_backends/cuda/api/runtime.pyx", line 265, in cupy_backends.cuda.api.runtime.check_status
E       raise CUDARuntimeError(status)
E   cupy_backends.cuda.api.runtime.CUDARuntimeError: hipErrorUnknown: hipErrorUnknown

cupy_backends/cuda/api/runtime.pyx:265: AssertionError
----------------------------- Captured stderr call -----------------------------
Traceback (most recent call last):
  File "cupy_backends/cuda/api/runtime.pyx", line 644, in cupy_backends.cuda.api.runtime.freeArray
    check_status(status)
  File "cupy_backends/cuda/api/runtime.pyx", line 265, in cupy_backends.cuda.api.runtime.check_status
    raise CUDARuntimeError(status)
cupy_backends.cuda.api.runtime.CUDARuntimeError: hipErrorUnknown: hipErrorUnknown
_ TestAffineTransformTextureMemory.test_affine_transform_texture_memory[_param_40_{mode='constant', order=0, output=float32, output_shape=None, shape=(10, 10, 10), theta=0}] _

self = <<cupyx_tests.scipy_tests.ndimage_tests.test_interpolation.TestAffineTransformTextureMemory object at 0x7fd7057c4e80> ...': 'constant', 'order': 0, 'output': <class 'numpy.float32'>, 'output_shape': None, 'shape': (10, 10, 10), 'theta': 0}>
xp = <module 'cupy' from '/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.Np3X0NVCM9/cupy/cupy/__init__.py'>
scp = <module 'cupyx.scipy' from '/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.Np3X0NVCM9/cupy/cupyx/scipy/__init__.py'>

    @testing.numpy_cupy_allclose(atol=0.1, scipy_name='scp')
    def test_affine_transform_texture_memory(self, xp, scp):
        a = xp.ones(self.shape, dtype=xp.float32)
        center = numpy.divide(numpy.subtract(self.shape, 1), 2)
    
        if len(self.shape) == 2:
            matrix = self._2d_rotation_matrix(self.theta, center)
        elif len(self.shape) == 3:
            matrix = self._3d_rotation_matrix(self.theta, center)
        else:
            return pytest.xfail('Unsupported shape')
    
        if self.output == 'empty':
            output = xp.empty(self.shape, dtype=xp.float32)
            if self.output_shape:
                return pytest.skip('This combination is tested in '
                                   'test_invalid_texture_arguments')
        else:
            output = self.output
    
        if self.output_shape:
            output_shape = (self.output_shape, ) * len(self.shape)
        else:
            output_shape = self.output_shape
    
        if xp == cupy:
            m = cupyx.scipy.ndimage.affine_transform
            matrix = cupy.array(matrix)
>           return m(a, matrix, output_shape=output_shape,
                     output=output, order=self.order,
                     mode=self.mode, texture_memory=True)

tests/cupyx_tests/scipy_tests/ndimage_tests/test_interpolation.py:398: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
cupyx/scipy/ndimage/interpolation.py:376: in affine_transform
    return _texture.affine_transformation(data=input,
cupyx/_texture.py:168: in affine_transformation
    texture_object = _create_texture_object(data,
cupyx/_texture.py:98: in _create_texture_object
    array = texture.CUDAarray(texture_fmt, *data.shape[::-1])
cupy/cuda/texture.pyx:296: in cupy.cuda.texture.CUDAarray.__init__
    self.ptr = runtime.malloc3DArray(desc.ptr, width, height, depth,
cupy_backends/cuda/api/runtime.pyx:593: in cupy_backends.cuda.api.runtime.malloc3DArray
    check_status(status)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

>   raise CUDARuntimeError(status)
E   AssertionError: Only cupy raises error
E   
E   Traceback (most recent call last):
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.Np3X0NVCM9/cupy/cupy/testing/_helper.py", line 47, in _call_func
E       result = impl(self, *args, **kw)
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.Np3X0NVCM9/cupy/tests/cupyx_tests/scipy_tests/ndimage_tests/test_interpolation.py", line 398, in test_affine_transform_texture_memory
E       return m(a, matrix, output_shape=output_shape,
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.Np3X0NVCM9/cupy/cupyx/scipy/ndimage/interpolation.py", line 376, in affine_transform
E       return _texture.affine_transformation(data=input,
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.Np3X0NVCM9/cupy/cupyx/_texture.py", line 168, in affine_transformation
E       texture_object = _create_texture_object(data,
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.Np3X0NVCM9/cupy/cupyx/_texture.py", line 98, in _create_texture_object
E       array = texture.CUDAarray(texture_fmt, *data.shape[::-1])
E     File "cupy/cuda/texture.pyx", line 296, in cupy.cuda.texture.CUDAarray.__init__
E       self.ptr = runtime.malloc3DArray(desc.ptr, width, height, depth,
E     File "cupy_backends/cuda/api/runtime.pyx", line 593, in cupy_backends.cuda.api.runtime.malloc3DArray
E       check_status(status)
E     File "cupy_backends/cuda/api/runtime.pyx", line 265, in cupy_backends.cuda.api.runtime.check_status
E       raise CUDARuntimeError(status)
E   cupy_backends.cuda.api.runtime.CUDARuntimeError: hipErrorUnknown: hipErrorUnknown

cupy_backends/cuda/api/runtime.pyx:265: AssertionError
----------------------------- Captured stderr call -----------------------------
Traceback (most recent call last):
  File "cupy_backends/cuda/api/runtime.pyx", line 644, in cupy_backends.cuda.api.runtime.freeArray
    check_status(status)
  File "cupy_backends/cuda/api/runtime.pyx", line 265, in cupy_backends.cuda.api.runtime.check_status
    raise CUDARuntimeError(status)
cupy_backends.cuda.api.runtime.CUDARuntimeError: hipErrorUnknown: hipErrorUnknown
_ TestAffineTransformTextureMemory.test_affine_transform_texture_memory[_param_41_{mode='constant', order=0, output=float32, output_shape=None, shape=(10, 10, 10), theta=90}] _

self = <<cupyx_tests.scipy_tests.ndimage_tests.test_interpolation.TestAffineTransformTextureMemory object at 0x7fd7058b1040> ...: 'constant', 'order': 0, 'output': <class 'numpy.float32'>, 'output_shape': None, 'shape': (10, 10, 10), 'theta': 90}>
xp = <module 'cupy' from '/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.Np3X0NVCM9/cupy/cupy/__init__.py'>
scp = <module 'cupyx.scipy' from '/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.Np3X0NVCM9/cupy/cupyx/scipy/__init__.py'>

    @testing.numpy_cupy_allclose(atol=0.1, scipy_name='scp')
    def test_affine_transform_texture_memory(self, xp, scp):
        a = xp.ones(self.shape, dtype=xp.float32)
        center = numpy.divide(numpy.subtract(self.shape, 1), 2)
    
        if len(self.shape) == 2:
            matrix = self._2d_rotation_matrix(self.theta, center)
        elif len(self.shape) == 3:
            matrix = self._3d_rotation_matrix(self.theta, center)
        else:
            return pytest.xfail('Unsupported shape')
    
        if self.output == 'empty':
            output = xp.empty(self.shape, dtype=xp.float32)
            if self.output_shape:
                return pytest.skip('This combination is tested in '
                                   'test_invalid_texture_arguments')
        else:
            output = self.output
    
        if self.output_shape:
            output_shape = (self.output_shape, ) * len(self.shape)
        else:
            output_shape = self.output_shape
    
        if xp == cupy:
            m = cupyx.scipy.ndimage.affine_transform
            matrix = cupy.array(matrix)
>           return m(a, matrix, output_shape=output_shape,
                     output=output, order=self.order,
                     mode=self.mode, texture_memory=True)

tests/cupyx_tests/scipy_tests/ndimage_tests/test_interpolation.py:398: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
cupyx/scipy/ndimage/interpolation.py:376: in affine_transform
    return _texture.affine_transformation(data=input,
cupyx/_texture.py:168: in affine_transformation
    texture_object = _create_texture_object(data,
cupyx/_texture.py:98: in _create_texture_object
    array = texture.CUDAarray(texture_fmt, *data.shape[::-1])
cupy/cuda/texture.pyx:296: in cupy.cuda.texture.CUDAarray.__init__
    self.ptr = runtime.malloc3DArray(desc.ptr, width, height, depth,
cupy_backends/cuda/api/runtime.pyx:593: in cupy_backends.cuda.api.runtime.malloc3DArray
    check_status(status)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

>   raise CUDARuntimeError(status)
E   AssertionError: Only cupy raises error
E   
E   Traceback (most recent call last):
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.Np3X0NVCM9/cupy/cupy/testing/_helper.py", line 47, in _call_func
E       result = impl(self, *args, **kw)
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.Np3X0NVCM9/cupy/tests/cupyx_tests/scipy_tests/ndimage_tests/test_interpolation.py", line 398, in test_affine_transform_texture_memory
E       return m(a, matrix, output_shape=output_shape,
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.Np3X0NVCM9/cupy/cupyx/scipy/ndimage/interpolation.py", line 376, in affine_transform
E       return _texture.affine_transformation(data=input,
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.Np3X0NVCM9/cupy/cupyx/_texture.py", line 168, in affine_transformation
E       texture_object = _create_texture_object(data,
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.Np3X0NVCM9/cupy/cupyx/_texture.py", line 98, in _create_texture_object
E       array = texture.CUDAarray(texture_fmt, *data.shape[::-1])
E     File "cupy/cuda/texture.pyx", line 296, in cupy.cuda.texture.CUDAarray.__init__
E       self.ptr = runtime.malloc3DArray(desc.ptr, width, height, depth,
E     File "cupy_backends/cuda/api/runtime.pyx", line 593, in cupy_backends.cuda.api.runtime.malloc3DArray
E       check_status(status)
E     File "cupy_backends/cuda/api/runtime.pyx", line 265, in cupy_backends.cuda.api.runtime.check_status
E       raise CUDARuntimeError(status)
E   cupy_backends.cuda.api.runtime.CUDARuntimeError: hipErrorUnknown: hipErrorUnknown

cupy_backends/cuda/api/runtime.pyx:265: AssertionError
----------------------------- Captured stderr call -----------------------------
Traceback (most recent call last):
  File "cupy_backends/cuda/api/runtime.pyx", line 644, in cupy_backends.cuda.api.runtime.freeArray
    check_status(status)
  File "cupy_backends/cuda/api/runtime.pyx", line 265, in cupy_backends.cuda.api.runtime.check_status
    raise CUDARuntimeError(status)
cupy_backends.cuda.api.runtime.CUDARuntimeError: hipErrorUnknown: hipErrorUnknown
_ TestAffineTransformTextureMemory.test_affine_transform_texture_memory[_param_42_{mode='constant', order=0, output=float32, output_shape=None, shape=(10, 10, 10), theta=180}] _

self = <<cupyx_tests.scipy_tests.ndimage_tests.test_interpolation.TestAffineTransformTextureMemory object at 0x7fd70736b4c0> ... 'constant', 'order': 0, 'output': <class 'numpy.float32'>, 'output_shape': None, 'shape': (10, 10, 10), 'theta': 180}>
xp = <module 'cupy' from '/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.Np3X0NVCM9/cupy/cupy/__init__.py'>
scp = <module 'cupyx.scipy' from '/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.Np3X0NVCM9/cupy/cupyx/scipy/__init__.py'>

    @testing.numpy_cupy_allclose(atol=0.1, scipy_name='scp')
    def test_affine_transform_texture_memory(self, xp, scp):
        a = xp.ones(self.shape, dtype=xp.float32)
        center = numpy.divide(numpy.subtract(self.shape, 1), 2)
    
        if len(self.shape) == 2:
            matrix = self._2d_rotation_matrix(self.theta, center)
        elif len(self.shape) == 3:
            matrix = self._3d_rotation_matrix(self.theta, center)
        else:
            return pytest.xfail('Unsupported shape')
    
        if self.output == 'empty':
            output = xp.empty(self.shape, dtype=xp.float32)
            if self.output_shape:
                return pytest.skip('This combination is tested in '
                                   'test_invalid_texture_arguments')
        else:
            output = self.output
    
        if self.output_shape:
            output_shape = (self.output_shape, ) * len(self.shape)
        else:
            output_shape = self.output_shape
    
        if xp == cupy:
            m = cupyx.scipy.ndimage.affine_transform
            matrix = cupy.array(matrix)
>           return m(a, matrix, output_shape=output_shape,
                     output=output, order=self.order,
                     mode=self.mode, texture_memory=True)

tests/cupyx_tests/scipy_tests/ndimage_tests/test_interpolation.py:398: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
cupyx/scipy/ndimage/interpolation.py:376: in affine_transform
    return _texture.affine_transformation(data=input,
cupyx/_texture.py:168: in affine_transformation
    texture_object = _create_texture_object(data,
cupyx/_texture.py:98: in _create_texture_object
    array = texture.CUDAarray(texture_fmt, *data.shape[::-1])
cupy/cuda/texture.pyx:296: in cupy.cuda.texture.CUDAarray.__init__
    self.ptr = runtime.malloc3DArray(desc.ptr, width, height, depth,
cupy_backends/cuda/api/runtime.pyx:593: in cupy_backends.cuda.api.runtime.malloc3DArray
    check_status(status)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

>   raise CUDARuntimeError(status)
E   AssertionError: Only cupy raises error
E   
E   Traceback (most recent call last):
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.Np3X0NVCM9/cupy/cupy/testing/_helper.py", line 47, in _call_func
E       result = impl(self, *args, **kw)
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.Np3X0NVCM9/cupy/tests/cupyx_tests/scipy_tests/ndimage_tests/test_interpolation.py", line 398, in test_affine_transform_texture_memory
E       return m(a, matrix, output_shape=output_shape,
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.Np3X0NVCM9/cupy/cupyx/scipy/ndimage/interpolation.py", line 376, in affine_transform
E       return _texture.affine_transformation(data=input,
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.Np3X0NVCM9/cupy/cupyx/_texture.py", line 168, in affine_transformation
E       texture_object = _create_texture_object(data,
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.Np3X0NVCM9/cupy/cupyx/_texture.py", line 98, in _create_texture_object
E       array = texture.CUDAarray(texture_fmt, *data.shape[::-1])
E     File "cupy/cuda/texture.pyx", line 296, in cupy.cuda.texture.CUDAarray.__init__
E       self.ptr = runtime.malloc3DArray(desc.ptr, width, height, depth,
E     File "cupy_backends/cuda/api/runtime.pyx", line 593, in cupy_backends.cuda.api.runtime.malloc3DArray
E       check_status(status)
E     File "cupy_backends/cuda/api/runtime.pyx", line 265, in cupy_backends.cuda.api.runtime.check_status
E       raise CUDARuntimeError(status)
E   cupy_backends.cuda.api.runtime.CUDARuntimeError: hipErrorUnknown: hipErrorUnknown

cupy_backends/cuda/api/runtime.pyx:265: AssertionError
----------------------------- Captured stderr call -----------------------------
Traceback (most recent call last):
  File "cupy_backends/cuda/api/runtime.pyx", line 644, in cupy_backends.cuda.api.runtime.freeArray
    check_status(status)
  File "cupy_backends/cuda/api/runtime.pyx", line 265, in cupy_backends.cuda.api.runtime.check_status
    raise CUDARuntimeError(status)
cupy_backends.cuda.api.runtime.CUDARuntimeError: hipErrorUnknown: hipErrorUnknown
_ TestAffineTransformTextureMemory.test_affine_transform_texture_memory[_param_43_{mode='constant', order=0, output=float32, output_shape=None, shape=(10, 10, 10), theta=270}] _

self = <<cupyx_tests.scipy_tests.ndimage_tests.test_interpolation.TestAffineTransformTextureMemory object at 0x7fd705ac1550> ... 'constant', 'order': 0, 'output': <class 'numpy.float32'>, 'output_shape': None, 'shape': (10, 10, 10), 'theta': 270}>
xp = <module 'cupy' from '/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.Np3X0NVCM9/cupy/cupy/__init__.py'>
scp = <module 'cupyx.scipy' from '/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.Np3X0NVCM9/cupy/cupyx/scipy/__init__.py'>

    @testing.numpy_cupy_allclose(atol=0.1, scipy_name='scp')
    def test_affine_transform_texture_memory(self, xp, scp):
        a = xp.ones(self.shape, dtype=xp.float32)
        center = numpy.divide(numpy.subtract(self.shape, 1), 2)
    
        if len(self.shape) == 2:
            matrix = self._2d_rotation_matrix(self.theta, center)
        elif len(self.shape) == 3:
            matrix = self._3d_rotation_matrix(self.theta, center)
        else:
            return pytest.xfail('Unsupported shape')
    
        if self.output == 'empty':
            output = xp.empty(self.shape, dtype=xp.float32)
            if self.output_shape:
                return pytest.skip('This combination is tested in '
                                   'test_invalid_texture_arguments')
        else:
            output = self.output
    
        if self.output_shape:
            output_shape = (self.output_shape, ) * len(self.shape)
        else:
            output_shape = self.output_shape
    
        if xp == cupy:
            m = cupyx.scipy.ndimage.affine_transform
            matrix = cupy.array(matrix)
>           return m(a, matrix, output_shape=output_shape,
                     output=output, order=self.order,
                     mode=self.mode, texture_memory=True)

tests/cupyx_tests/scipy_tests/ndimage_tests/test_interpolation.py:398: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
cupyx/scipy/ndimage/interpolation.py:376: in affine_transform
    return _texture.affine_transformation(data=input,
cupyx/_texture.py:168: in affine_transformation
    texture_object = _create_texture_object(data,
cupyx/_texture.py:98: in _create_texture_object
    array = texture.CUDAarray(texture_fmt, *data.shape[::-1])
cupy/cuda/texture.pyx:296: in cupy.cuda.texture.CUDAarray.__init__
    self.ptr = runtime.malloc3DArray(desc.ptr, width, height, depth,
cupy_backends/cuda/api/runtime.pyx:593: in cupy_backends.cuda.api.runtime.malloc3DArray
    check_status(status)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

>   raise CUDARuntimeError(status)
E   AssertionError: Only cupy raises error
E   
E   Traceback (most recent call last):
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.Np3X0NVCM9/cupy/cupy/testing/_helper.py", line 47, in _call_func
E       result = impl(self, *args, **kw)
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.Np3X0NVCM9/cupy/tests/cupyx_tests/scipy_tests/ndimage_tests/test_interpolation.py", line 398, in test_affine_transform_texture_memory
E       return m(a, matrix, output_shape=output_shape,
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.Np3X0NVCM9/cupy/cupyx/scipy/ndimage/interpolation.py", line 376, in affine_transform
E       return _texture.affine_transformation(data=input,
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.Np3X0NVCM9/cupy/cupyx/_texture.py", line 168, in affine_transformation
E       texture_object = _create_texture_object(data,
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.Np3X0NVCM9/cupy/cupyx/_texture.py", line 98, in _create_texture_object
E       array = texture.CUDAarray(texture_fmt, *data.shape[::-1])
E     File "cupy/cuda/texture.pyx", line 296, in cupy.cuda.texture.CUDAarray.__init__
E       self.ptr = runtime.malloc3DArray(desc.ptr, width, height, depth,
E     File "cupy_backends/cuda/api/runtime.pyx", line 593, in cupy_backends.cuda.api.runtime.malloc3DArray
E       check_status(status)
E     File "cupy_backends/cuda/api/runtime.pyx", line 265, in cupy_backends.cuda.api.runtime.check_status
E       raise CUDARuntimeError(status)
E   cupy_backends.cuda.api.runtime.CUDARuntimeError: hipErrorUnknown: hipErrorUnknown

cupy_backends/cuda/api/runtime.pyx:265: AssertionError
----------------------------- Captured stderr call -----------------------------
Traceback (most recent call last):
  File "cupy_backends/cuda/api/runtime.pyx", line 644, in cupy_backends.cuda.api.runtime.freeArray
    check_status(status)
  File "cupy_backends/cuda/api/runtime.pyx", line 265, in cupy_backends.cuda.api.runtime.check_status
    raise CUDARuntimeError(status)
cupy_backends.cuda.api.runtime.CUDARuntimeError: hipErrorUnknown: hipErrorUnknown
_ TestAffineTransformTextureMemory.test_affine_transform_texture_memory[_param_44_{mode='constant', order=0, output=float32, output_shape=None, shape=(10, 20, 30), theta=0}] _

self = <<cupyx_tests.scipy_tests.ndimage_tests.test_interpolation.TestAffineTransformTextureMemory object at 0x7fd706e6f490> ...': 'constant', 'order': 0, 'output': <class 'numpy.float32'>, 'output_shape': None, 'shape': (10, 20, 30), 'theta': 0}>
xp = <module 'cupy' from '/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.Np3X0NVCM9/cupy/cupy/__init__.py'>
scp = <module 'cupyx.scipy' from '/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.Np3X0NVCM9/cupy/cupyx/scipy/__init__.py'>

    @testing.numpy_cupy_allclose(atol=0.1, scipy_name='scp')
    def test_affine_transform_texture_memory(self, xp, scp):
        a = xp.ones(self.shape, dtype=xp.float32)
        center = numpy.divide(numpy.subtract(self.shape, 1), 2)
    
        if len(self.shape) == 2:
            matrix = self._2d_rotation_matrix(self.theta, center)
        elif len(self.shape) == 3:
            matrix = self._3d_rotation_matrix(self.theta, center)
        else:
            return pytest.xfail('Unsupported shape')
    
        if self.output == 'empty':
            output = xp.empty(self.shape, dtype=xp.float32)
            if self.output_shape:
                return pytest.skip('This combination is tested in '
                                   'test_invalid_texture_arguments')
        else:
            output = self.output
    
        if self.output_shape:
            output_shape = (self.output_shape, ) * len(self.shape)
        else:
            output_shape = self.output_shape
    
        if xp == cupy:
            m = cupyx.scipy.ndimage.affine_transform
            matrix = cupy.array(matrix)
>           return m(a, matrix, output_shape=output_shape,
                     output=output, order=self.order,
                     mode=self.mode, texture_memory=True)

tests/cupyx_tests/scipy_tests/ndimage_tests/test_interpolation.py:398: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
cupyx/scipy/ndimage/interpolation.py:376: in affine_transform
    return _texture.affine_transformation(data=input,
cupyx/_texture.py:168: in affine_transformation
    texture_object = _create_texture_object(data,
cupyx/_texture.py:98: in _create_texture_object
    array = texture.CUDAarray(texture_fmt, *data.shape[::-1])
cupy/cuda/texture.pyx:296: in cupy.cuda.texture.CUDAarray.__init__
    self.ptr = runtime.malloc3DArray(desc.ptr, width, height, depth,
cupy_backends/cuda/api/runtime.pyx:593: in cupy_backends.cuda.api.runtime.malloc3DArray
    check_status(status)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

>   raise CUDARuntimeError(status)
E   AssertionError: Only cupy raises error
E   
E   Traceback (most recent call last):
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.Np3X0NVCM9/cupy/cupy/testing/_helper.py", line 47, in _call_func
E       result = impl(self, *args, **kw)
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.Np3X0NVCM9/cupy/tests/cupyx_tests/scipy_tests/ndimage_tests/test_interpolation.py", line 398, in test_affine_transform_texture_memory
E       return m(a, matrix, output_shape=output_shape,
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.Np3X0NVCM9/cupy/cupyx/scipy/ndimage/interpolation.py", line 376, in affine_transform
E       return _texture.affine_transformation(data=input,
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.Np3X0NVCM9/cupy/cupyx/_texture.py", line 168, in affine_transformation
E       texture_object = _create_texture_object(data,
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.Np3X0NVCM9/cupy/cupyx/_texture.py", line 98, in _create_texture_object
E       array = texture.CUDAarray(texture_fmt, *data.shape[::-1])
E     File "cupy/cuda/texture.pyx", line 296, in cupy.cuda.texture.CUDAarray.__init__
E       self.ptr = runtime.malloc3DArray(desc.ptr, width, height, depth,
E     File "cupy_backends/cuda/api/runtime.pyx", line 593, in cupy_backends.cuda.api.runtime.malloc3DArray
E       check_status(status)
E     File "cupy_backends/cuda/api/runtime.pyx", line 265, in cupy_backends.cuda.api.runtime.check_status
E       raise CUDARuntimeError(status)
E   cupy_backends.cuda.api.runtime.CUDARuntimeError: hipErrorUnknown: hipErrorUnknown

cupy_backends/cuda/api/runtime.pyx:265: AssertionError
----------------------------- Captured stderr call -----------------------------
Traceback (most recent call last):
  File "cupy_backends/cuda/api/runtime.pyx", line 644, in cupy_backends.cuda.api.runtime.freeArray
    check_status(status)
  File "cupy_backends/cuda/api/runtime.pyx", line 265, in cupy_backends.cuda.api.runtime.check_status
    raise CUDARuntimeError(status)
cupy_backends.cuda.api.runtime.CUDARuntimeError: hipErrorUnknown: hipErrorUnknown
_ TestAffineTransformTextureMemory.test_affine_transform_texture_memory[_param_45_{mode='constant', order=0, output=float32, output_shape=None, shape=(10, 20, 30), theta=90}] _

self = <<cupyx_tests.scipy_tests.ndimage_tests.test_interpolation.TestAffineTransformTextureMemory object at 0x7fd705ac1b50> ...: 'constant', 'order': 0, 'output': <class 'numpy.float32'>, 'output_shape': None, 'shape': (10, 20, 30), 'theta': 90}>
xp = <module 'cupy' from '/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.Np3X0NVCM9/cupy/cupy/__init__.py'>
scp = <module 'cupyx.scipy' from '/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.Np3X0NVCM9/cupy/cupyx/scipy/__init__.py'>

    @testing.numpy_cupy_allclose(atol=0.1, scipy_name='scp')
    def test_affine_transform_texture_memory(self, xp, scp):
        a = xp.ones(self.shape, dtype=xp.float32)
        center = numpy.divide(numpy.subtract(self.shape, 1), 2)
    
        if len(self.shape) == 2:
            matrix = self._2d_rotation_matrix(self.theta, center)
        elif len(self.shape) == 3:
            matrix = self._3d_rotation_matrix(self.theta, center)
        else:
            return pytest.xfail('Unsupported shape')
    
        if self.output == 'empty':
            output = xp.empty(self.shape, dtype=xp.float32)
            if self.output_shape:
                return pytest.skip('This combination is tested in '
                                   'test_invalid_texture_arguments')
        else:
            output = self.output
    
        if self.output_shape:
            output_shape = (self.output_shape, ) * len(self.shape)
        else:
            output_shape = self.output_shape
    
        if xp == cupy:
            m = cupyx.scipy.ndimage.affine_transform
            matrix = cupy.array(matrix)
>           return m(a, matrix, output_shape=output_shape,
                     output=output, order=self.order,
                     mode=self.mode, texture_memory=True)

tests/cupyx_tests/scipy_tests/ndimage_tests/test_interpolation.py:398: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
cupyx/scipy/ndimage/interpolation.py:376: in affine_transform
    return _texture.affine_transformation(data=input,
cupyx/_texture.py:168: in affine_transformation
    texture_object = _create_texture_object(data,
cupyx/_texture.py:98: in _create_texture_object
    array = texture.CUDAarray(texture_fmt, *data.shape[::-1])
cupy/cuda/texture.pyx:296: in cupy.cuda.texture.CUDAarray.__init__
    self.ptr = runtime.malloc3DArray(desc.ptr, width, height, depth,
cupy_backends/cuda/api/runtime.pyx:593: in cupy_backends.cuda.api.runtime.malloc3DArray
    check_status(status)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

>   raise CUDARuntimeError(status)
E   AssertionError: Only cupy raises error
E   
E   Traceback (most recent call last):
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.Np3X0NVCM9/cupy/cupy/testing/_helper.py", line 47, in _call_func
E       result = impl(self, *args, **kw)
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.Np3X0NVCM9/cupy/tests/cupyx_tests/scipy_tests/ndimage_tests/test_interpolation.py", line 398, in test_affine_transform_texture_memory
E       return m(a, matrix, output_shape=output_shape,
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.Np3X0NVCM9/cupy/cupyx/scipy/ndimage/interpolation.py", line 376, in affine_transform
E       return _texture.affine_transformation(data=input,
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.Np3X0NVCM9/cupy/cupyx/_texture.py", line 168, in affine_transformation
E       texture_object = _create_texture_object(data,
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.Np3X0NVCM9/cupy/cupyx/_texture.py", line 98, in _create_texture_object
E       array = texture.CUDAarray(texture_fmt, *data.shape[::-1])
E     File "cupy/cuda/texture.pyx", line 296, in cupy.cuda.texture.CUDAarray.__init__
E       self.ptr = runtime.malloc3DArray(desc.ptr, width, height, depth,
E     File "cupy_backends/cuda/api/runtime.pyx", line 593, in cupy_backends.cuda.api.runtime.malloc3DArray
E       check_status(status)
E     File "cupy_backends/cuda/api/runtime.pyx", line 265, in cupy_backends.cuda.api.runtime.check_status
E       raise CUDARuntimeError(status)
E   cupy_backends.cuda.api.runtime.CUDARuntimeError: hipErrorUnknown: hipErrorUnknown

cupy_backends/cuda/api/runtime.pyx:265: AssertionError
----------------------------- Captured stderr call -----------------------------
Traceback (most recent call last):
  File "cupy_backends/cuda/api/runtime.pyx", line 644, in cupy_backends.cuda.api.runtime.freeArray
    check_status(status)
  File "cupy_backends/cuda/api/runtime.pyx", line 265, in cupy_backends.cuda.api.runtime.check_status
    raise CUDARuntimeError(status)
cupy_backends.cuda.api.runtime.CUDARuntimeError: hipErrorUnknown: hipErrorUnknown
_ TestAffineTransformTextureMemory.test_affine_transform_texture_memory[_param_46_{mode='constant', order=0, output=float32, output_shape=None, shape=(10, 20, 30), theta=180}] _

self = <<cupyx_tests.scipy_tests.ndimage_tests.test_interpolation.TestAffineTransformTextureMemory object at 0x7fd7058b24f0> ... 'constant', 'order': 0, 'output': <class 'numpy.float32'>, 'output_shape': None, 'shape': (10, 20, 30), 'theta': 180}>
xp = <module 'cupy' from '/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.Np3X0NVCM9/cupy/cupy/__init__.py'>
scp = <module 'cupyx.scipy' from '/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.Np3X0NVCM9/cupy/cupyx/scipy/__init__.py'>

    @testing.numpy_cupy_allclose(atol=0.1, scipy_name='scp')
    def test_affine_transform_texture_memory(self, xp, scp):
        a = xp.ones(self.shape, dtype=xp.float32)
        center = numpy.divide(numpy.subtract(self.shape, 1), 2)
    
        if len(self.shape) == 2:
            matrix = self._2d_rotation_matrix(self.theta, center)
        elif len(self.shape) == 3:
            matrix = self._3d_rotation_matrix(self.theta, center)
        else:
            return pytest.xfail('Unsupported shape')
    
        if self.output == 'empty':
            output = xp.empty(self.shape, dtype=xp.float32)
            if self.output_shape:
                return pytest.skip('This combination is tested in '
                                   'test_invalid_texture_arguments')
        else:
            output = self.output
    
        if self.output_shape:
            output_shape = (self.output_shape, ) * len(self.shape)
        else:
            output_shape = self.output_shape
    
        if xp == cupy:
            m = cupyx.scipy.ndimage.affine_transform
            matrix = cupy.array(matrix)
>           return m(a, matrix, output_shape=output_shape,
                     output=output, order=self.order,
                     mode=self.mode, texture_memory=True)

tests/cupyx_tests/scipy_tests/ndimage_tests/test_interpolation.py:398: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
cupyx/scipy/ndimage/interpolation.py:376: in affine_transform
    return _texture.affine_transformation(data=input,
cupyx/_texture.py:168: in affine_transformation
    texture_object = _create_texture_object(data,
cupyx/_texture.py:98: in _create_texture_object
    array = texture.CUDAarray(texture_fmt, *data.shape[::-1])
cupy/cuda/texture.pyx:296: in cupy.cuda.texture.CUDAarray.__init__
    self.ptr = runtime.malloc3DArray(desc.ptr, width, height, depth,
cupy_backends/cuda/api/runtime.pyx:593: in cupy_backends.cuda.api.runtime.malloc3DArray
    check_status(status)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

>   raise CUDARuntimeError(status)
E   AssertionError: Only cupy raises error
E   
E   Traceback (most recent call last):
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.Np3X0NVCM9/cupy/cupy/testing/_helper.py", line 47, in _call_func
E       result = impl(self, *args, **kw)
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.Np3X0NVCM9/cupy/tests/cupyx_tests/scipy_tests/ndimage_tests/test_interpolation.py", line 398, in test_affine_transform_texture_memory
E       return m(a, matrix, output_shape=output_shape,
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.Np3X0NVCM9/cupy/cupyx/scipy/ndimage/interpolation.py", line 376, in affine_transform
E       return _texture.affine_transformation(data=input,
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.Np3X0NVCM9/cupy/cupyx/_texture.py", line 168, in affine_transformation
E       texture_object = _create_texture_object(data,
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.Np3X0NVCM9/cupy/cupyx/_texture.py", line 98, in _create_texture_object
E       array = texture.CUDAarray(texture_fmt, *data.shape[::-1])
E     File "cupy/cuda/texture.pyx", line 296, in cupy.cuda.texture.CUDAarray.__init__
E       self.ptr = runtime.malloc3DArray(desc.ptr, width, height, depth,
E     File "cupy_backends/cuda/api/runtime.pyx", line 593, in cupy_backends.cuda.api.runtime.malloc3DArray
E       check_status(status)
E     File "cupy_backends/cuda/api/runtime.pyx", line 265, in cupy_backends.cuda.api.runtime.check_status
E       raise CUDARuntimeError(status)
E   cupy_backends.cuda.api.runtime.CUDARuntimeError: hipErrorUnknown: hipErrorUnknown

cupy_backends/cuda/api/runtime.pyx:265: AssertionError
----------------------------- Captured stderr call -----------------------------
Traceback (most recent call last):
  File "cupy_backends/cuda/api/runtime.pyx", line 644, in cupy_backends.cuda.api.runtime.freeArray
    check_status(status)
  File "cupy_backends/cuda/api/runtime.pyx", line 265, in cupy_backends.cuda.api.runtime.check_status
    raise CUDARuntimeError(status)
cupy_backends.cuda.api.runtime.CUDARuntimeError: hipErrorUnknown: hipErrorUnknown
_ TestAffineTransformTextureMemory.test_affine_transform_texture_memory[_param_47_{mode='constant', order=0, output=float32, output_shape=None, shape=(10, 20, 30), theta=270}] _

self = <<cupyx_tests.scipy_tests.ndimage_tests.test_interpolation.TestAffineTransformTextureMemory object at 0x7fd7059d41c0> ... 'constant', 'order': 0, 'output': <class 'numpy.float32'>, 'output_shape': None, 'shape': (10, 20, 30), 'theta': 270}>
xp = <module 'cupy' from '/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.Np3X0NVCM9/cupy/cupy/__init__.py'>
scp = <module 'cupyx.scipy' from '/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.Np3X0NVCM9/cupy/cupyx/scipy/__init__.py'>

    @testing.numpy_cupy_allclose(atol=0.1, scipy_name='scp')
    def test_affine_transform_texture_memory(self, xp, scp):
        a = xp.ones(self.shape, dtype=xp.float32)
        center = numpy.divide(numpy.subtract(self.shape, 1), 2)
    
        if len(self.shape) == 2:
            matrix = self._2d_rotation_matrix(self.theta, center)
        elif len(self.shape) == 3:
            matrix = self._3d_rotation_matrix(self.theta, center)
        else:
            return pytest.xfail('Unsupported shape')
    
        if self.output == 'empty':
            output = xp.empty(self.shape, dtype=xp.float32)
            if self.output_shape:
                return pytest.skip('This combination is tested in '
                                   'test_invalid_texture_arguments')
        else:
            output = self.output
    
        if self.output_shape:
            output_shape = (self.output_shape, ) * len(self.shape)
        else:
            output_shape = self.output_shape
    
        if xp == cupy:
            m = cupyx.scipy.ndimage.affine_transform
            matrix = cupy.array(matrix)
>           return m(a, matrix, output_shape=output_shape,
                     output=output, order=self.order,
                     mode=self.mode, texture_memory=True)

tests/cupyx_tests/scipy_tests/ndimage_tests/test_interpolation.py:398: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
cupyx/scipy/ndimage/interpolation.py:376: in affine_transform
    return _texture.affine_transformation(data=input,
cupyx/_texture.py:168: in affine_transformation
    texture_object = _create_texture_object(data,
cupyx/_texture.py:98: in _create_texture_object
    array = texture.CUDAarray(texture_fmt, *data.shape[::-1])
cupy/cuda/texture.pyx:296: in cupy.cuda.texture.CUDAarray.__init__
    self.ptr = runtime.malloc3DArray(desc.ptr, width, height, depth,
cupy_backends/cuda/api/runtime.pyx:593: in cupy_backends.cuda.api.runtime.malloc3DArray
    check_status(status)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

>   raise CUDARuntimeError(status)
E   AssertionError: Only cupy raises error
E   
E   Traceback (most recent call last):
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.Np3X0NVCM9/cupy/cupy/testing/_helper.py", line 47, in _call_func
E       result = impl(self, *args, **kw)
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.Np3X0NVCM9/cupy/tests/cupyx_tests/scipy_tests/ndimage_tests/test_interpolation.py", line 398, in test_affine_transform_texture_memory
E       return m(a, matrix, output_shape=output_shape,
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.Np3X0NVCM9/cupy/cupyx/scipy/ndimage/interpolation.py", line 376, in affine_transform
E       return _texture.affine_transformation(data=input,
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.Np3X0NVCM9/cupy/cupyx/_texture.py", line 168, in affine_transformation
E       texture_object = _create_texture_object(data,
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.Np3X0NVCM9/cupy/cupyx/_texture.py", line 98, in _create_texture_object
E       array = texture.CUDAarray(texture_fmt, *data.shape[::-1])
E     File "cupy/cuda/texture.pyx", line 296, in cupy.cuda.texture.CUDAarray.__init__
E       self.ptr = runtime.malloc3DArray(desc.ptr, width, height, depth,
E     File "cupy_backends/cuda/api/runtime.pyx", line 593, in cupy_backends.cuda.api.runtime.malloc3DArray
E       check_status(status)
E     File "cupy_backends/cuda/api/runtime.pyx", line 265, in cupy_backends.cuda.api.runtime.check_status
E       raise CUDARuntimeError(status)
E   cupy_backends.cuda.api.runtime.CUDARuntimeError: hipErrorUnknown: hipErrorUnknown

cupy_backends/cuda/api/runtime.pyx:265: AssertionError
----------------------------- Captured stderr call -----------------------------
Traceback (most recent call last):
  File "cupy_backends/cuda/api/runtime.pyx", line 644, in cupy_backends.cuda.api.runtime.freeArray
    check_status(status)
  File "cupy_backends/cuda/api/runtime.pyx", line 265, in cupy_backends.cuda.api.runtime.check_status
    raise CUDARuntimeError(status)
cupy_backends.cuda.api.runtime.CUDARuntimeError: hipErrorUnknown: hipErrorUnknown
_ TestAffineTransformTextureMemory.test_affine_transform_texture_memory[_param_48_{mode='constant', order=0, output=float32, output_shape=10, shape=(100, 100), theta=0}] _

self = <<cupyx_tests.scipy_tests.ndimage_tests.test_interpolation.TestAffineTransformTextureMemory object at 0x7fd706517910> ...mode': 'constant', 'order': 0, 'output': <class 'numpy.float32'>, 'output_shape': 10, 'shape': (100, 100), 'theta': 0}>
xp = <module 'cupy' from '/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.Np3X0NVCM9/cupy/cupy/__init__.py'>
scp = <module 'cupyx.scipy' from '/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.Np3X0NVCM9/cupy/cupyx/scipy/__init__.py'>

    @testing.numpy_cupy_allclose(atol=0.1, scipy_name='scp')
    def test_affine_transform_texture_memory(self, xp, scp):
        a = xp.ones(self.shape, dtype=xp.float32)
        center = numpy.divide(numpy.subtract(self.shape, 1), 2)
    
        if len(self.shape) == 2:
            matrix = self._2d_rotation_matrix(self.theta, center)
        elif len(self.shape) == 3:
            matrix = self._3d_rotation_matrix(self.theta, center)
        else:
            return pytest.xfail('Unsupported shape')
    
        if self.output == 'empty':
            output = xp.empty(self.shape, dtype=xp.float32)
            if self.output_shape:
                return pytest.skip('This combination is tested in '
                                   'test_invalid_texture_arguments')
        else:
            output = self.output
    
        if self.output_shape:
            output_shape = (self.output_shape, ) * len(self.shape)
        else:
            output_shape = self.output_shape
    
        if xp == cupy:
            m = cupyx.scipy.ndimage.affine_transform
            matrix = cupy.array(matrix)
>           return m(a, matrix, output_shape=output_shape,
                     output=output, order=self.order,
                     mode=self.mode, texture_memory=True)

tests/cupyx_tests/scipy_tests/ndimage_tests/test_interpolation.py:398: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
cupyx/scipy/ndimage/interpolation.py:376: in affine_transform
    return _texture.affine_transformation(data=input,
cupyx/_texture.py:168: in affine_transformation
    texture_object = _create_texture_object(data,
cupyx/_texture.py:98: in _create_texture_object
    array = texture.CUDAarray(texture_fmt, *data.shape[::-1])
cupy/cuda/texture.pyx:296: in cupy.cuda.texture.CUDAarray.__init__
    self.ptr = runtime.malloc3DArray(desc.ptr, width, height, depth,
cupy_backends/cuda/api/runtime.pyx:593: in cupy_backends.cuda.api.runtime.malloc3DArray
    check_status(status)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

>   raise CUDARuntimeError(status)
E   AssertionError: Only cupy raises error
E   
E   Traceback (most recent call last):
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.Np3X0NVCM9/cupy/cupy/testing/_helper.py", line 47, in _call_func
E       result = impl(self, *args, **kw)
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.Np3X0NVCM9/cupy/tests/cupyx_tests/scipy_tests/ndimage_tests/test_interpolation.py", line 398, in test_affine_transform_texture_memory
E       return m(a, matrix, output_shape=output_shape,
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.Np3X0NVCM9/cupy/cupyx/scipy/ndimage/interpolation.py", line 376, in affine_transform
E       return _texture.affine_transformation(data=input,
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.Np3X0NVCM9/cupy/cupyx/_texture.py", line 168, in affine_transformation
E       texture_object = _create_texture_object(data,
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.Np3X0NVCM9/cupy/cupyx/_texture.py", line 98, in _create_texture_object
E       array = texture.CUDAarray(texture_fmt, *data.shape[::-1])
E     File "cupy/cuda/texture.pyx", line 296, in cupy.cuda.texture.CUDAarray.__init__
E       self.ptr = runtime.malloc3DArray(desc.ptr, width, height, depth,
E     File "cupy_backends/cuda/api/runtime.pyx", line 593, in cupy_backends.cuda.api.runtime.malloc3DArray
E       check_status(status)
E     File "cupy_backends/cuda/api/runtime.pyx", line 265, in cupy_backends.cuda.api.runtime.check_status
E       raise CUDARuntimeError(status)
E   cupy_backends.cuda.api.runtime.CUDARuntimeError: hipErrorUnknown: hipErrorUnknown

cupy_backends/cuda/api/runtime.pyx:265: AssertionError
----------------------------- Captured stderr call -----------------------------
Traceback (most recent call last):
  File "cupy_backends/cuda/api/runtime.pyx", line 644, in cupy_backends.cuda.api.runtime.freeArray
    check_status(status)
  File "cupy_backends/cuda/api/runtime.pyx", line 265, in cupy_backends.cuda.api.runtime.check_status
    raise CUDARuntimeError(status)
cupy_backends.cuda.api.runtime.CUDARuntimeError: hipErrorUnknown: hipErrorUnknown
_ TestAffineTransformTextureMemory.test_affine_transform_texture_memory[_param_49_{mode='constant', order=0, output=float32, output_shape=10, shape=(100, 100), theta=90}] _

self = <<cupyx_tests.scipy_tests.ndimage_tests.test_interpolation.TestAffineTransformTextureMemory object at 0x7fd70790a430> ...ode': 'constant', 'order': 0, 'output': <class 'numpy.float32'>, 'output_shape': 10, 'shape': (100, 100), 'theta': 90}>
xp = <module 'cupy' from '/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.Np3X0NVCM9/cupy/cupy/__init__.py'>
scp = <module 'cupyx.scipy' from '/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.Np3X0NVCM9/cupy/cupyx/scipy/__init__.py'>

    @testing.numpy_cupy_allclose(atol=0.1, scipy_name='scp')
    def test_affine_transform_texture_memory(self, xp, scp):
        a = xp.ones(self.shape, dtype=xp.float32)
        center = numpy.divide(numpy.subtract(self.shape, 1), 2)
    
        if len(self.shape) == 2:
            matrix = self._2d_rotation_matrix(self.theta, center)
        elif len(self.shape) == 3:
            matrix = self._3d_rotation_matrix(self.theta, center)
        else:
            return pytest.xfail('Unsupported shape')
    
        if self.output == 'empty':
            output = xp.empty(self.shape, dtype=xp.float32)
            if self.output_shape:
                return pytest.skip('This combination is tested in '
                                   'test_invalid_texture_arguments')
        else:
            output = self.output
    
        if self.output_shape:
            output_shape = (self.output_shape, ) * len(self.shape)
        else:
            output_shape = self.output_shape
    
        if xp == cupy:
            m = cupyx.scipy.ndimage.affine_transform
            matrix = cupy.array(matrix)
>           return m(a, matrix, output_shape=output_shape,
                     output=output, order=self.order,
                     mode=self.mode, texture_memory=True)

tests/cupyx_tests/scipy_tests/ndimage_tests/test_interpolation.py:398: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
cupyx/scipy/ndimage/interpolation.py:376: in affine_transform
    return _texture.affine_transformation(data=input,
cupyx/_texture.py:168: in affine_transformation
    texture_object = _create_texture_object(data,
cupyx/_texture.py:98: in _create_texture_object
    array = texture.CUDAarray(texture_fmt, *data.shape[::-1])
cupy/cuda/texture.pyx:296: in cupy.cuda.texture.CUDAarray.__init__
    self.ptr = runtime.malloc3DArray(desc.ptr, width, height, depth,
cupy_backends/cuda/api/runtime.pyx:593: in cupy_backends.cuda.api.runtime.malloc3DArray
    check_status(status)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

>   raise CUDARuntimeError(status)
E   AssertionError: Only cupy raises error
E   
E   Traceback (most recent call last):
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.Np3X0NVCM9/cupy/cupy/testing/_helper.py", line 47, in _call_func
E       result = impl(self, *args, **kw)
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.Np3X0NVCM9/cupy/tests/cupyx_tests/scipy_tests/ndimage_tests/test_interpolation.py", line 398, in test_affine_transform_texture_memory
E       return m(a, matrix, output_shape=output_shape,
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.Np3X0NVCM9/cupy/cupyx/scipy/ndimage/interpolation.py", line 376, in affine_transform
E       return _texture.affine_transformation(data=input,
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.Np3X0NVCM9/cupy/cupyx/_texture.py", line 168, in affine_transformation
E       texture_object = _create_texture_object(data,
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.Np3X0NVCM9/cupy/cupyx/_texture.py", line 98, in _create_texture_object
E       array = texture.CUDAarray(texture_fmt, *data.shape[::-1])
E     File "cupy/cuda/texture.pyx", line 296, in cupy.cuda.texture.CUDAarray.__init__
E       self.ptr = runtime.malloc3DArray(desc.ptr, width, height, depth,
E     File "cupy_backends/cuda/api/runtime.pyx", line 593, in cupy_backends.cuda.api.runtime.malloc3DArray
E       check_status(status)
E     File "cupy_backends/cuda/api/runtime.pyx", line 265, in cupy_backends.cuda.api.runtime.check_status
E       raise CUDARuntimeError(status)
E   cupy_backends.cuda.api.runtime.CUDARuntimeError: hipErrorUnknown: hipErrorUnknown

cupy_backends/cuda/api/runtime.pyx:265: AssertionError
----------------------------- Captured stderr call -----------------------------
Traceback (most recent call last):
  File "cupy_backends/cuda/api/runtime.pyx", line 644, in cupy_backends.cuda.api.runtime.freeArray
    check_status(status)
  File "cupy_backends/cuda/api/runtime.pyx", line 265, in cupy_backends.cuda.api.runtime.check_status
    raise CUDARuntimeError(status)
cupy_backends.cuda.api.runtime.CUDARuntimeError: hipErrorUnknown: hipErrorUnknown
_ TestAffineTransformTextureMemory.test_affine_transform_texture_memory[_param_50_{mode='constant', order=0, output=float32, output_shape=10, shape=(100, 100), theta=180}] _

self = <<cupyx_tests.scipy_tests.ndimage_tests.test_interpolation.TestAffineTransformTextureMemory object at 0x7fd7059abbb0> ...de': 'constant', 'order': 0, 'output': <class 'numpy.float32'>, 'output_shape': 10, 'shape': (100, 100), 'theta': 180}>
xp = <module 'cupy' from '/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.Np3X0NVCM9/cupy/cupy/__init__.py'>
scp = <module 'cupyx.scipy' from '/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.Np3X0NVCM9/cupy/cupyx/scipy/__init__.py'>

    @testing.numpy_cupy_allclose(atol=0.1, scipy_name='scp')
    def test_affine_transform_texture_memory(self, xp, scp):
        a = xp.ones(self.shape, dtype=xp.float32)
        center = numpy.divide(numpy.subtract(self.shape, 1), 2)
    
        if len(self.shape) == 2:
            matrix = self._2d_rotation_matrix(self.theta, center)
        elif len(self.shape) == 3:
            matrix = self._3d_rotation_matrix(self.theta, center)
        else:
            return pytest.xfail('Unsupported shape')
    
        if self.output == 'empty':
            output = xp.empty(self.shape, dtype=xp.float32)
            if self.output_shape:
                return pytest.skip('This combination is tested in '
                                   'test_invalid_texture_arguments')
        else:
            output = self.output
    
        if self.output_shape:
            output_shape = (self.output_shape, ) * len(self.shape)
        else:
            output_shape = self.output_shape
    
        if xp == cupy:
            m = cupyx.scipy.ndimage.affine_transform
            matrix = cupy.array(matrix)
>           return m(a, matrix, output_shape=output_shape,
                     output=output, order=self.order,
                     mode=self.mode, texture_memory=True)

tests/cupyx_tests/scipy_tests/ndimage_tests/test_interpolation.py:398: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
cupyx/scipy/ndimage/interpolation.py:376: in affine_transform
    return _texture.affine_transformation(data=input,
cupyx/_texture.py:168: in affine_transformation
    texture_object = _create_texture_object(data,
cupyx/_texture.py:98: in _create_texture_object
    array = texture.CUDAarray(texture_fmt, *data.shape[::-1])
cupy/cuda/texture.pyx:296: in cupy.cuda.texture.CUDAarray.__init__
    self.ptr = runtime.malloc3DArray(desc.ptr, width, height, depth,
cupy_backends/cuda/api/runtime.pyx:593: in cupy_backends.cuda.api.runtime.malloc3DArray
    check_status(status)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

>   raise CUDARuntimeError(status)
E   AssertionError: Only cupy raises error
E   
E   Traceback (most recent call last):
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.Np3X0NVCM9/cupy/cupy/testing/_helper.py", line 47, in _call_func
E       result = impl(self, *args, **kw)
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.Np3X0NVCM9/cupy/tests/cupyx_tests/scipy_tests/ndimage_tests/test_interpolation.py", line 398, in test_affine_transform_texture_memory
E       return m(a, matrix, output_shape=output_shape,
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.Np3X0NVCM9/cupy/cupyx/scipy/ndimage/interpolation.py", line 376, in affine_transform
E       return _texture.affine_transformation(data=input,
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.Np3X0NVCM9/cupy/cupyx/_texture.py", line 168, in affine_transformation
E       texture_object = _create_texture_object(data,
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.Np3X0NVCM9/cupy/cupyx/_texture.py", line 98, in _create_texture_object
E       array = texture.CUDAarray(texture_fmt, *data.shape[::-1])
E     File "cupy/cuda/texture.pyx", line 296, in cupy.cuda.texture.CUDAarray.__init__
E       self.ptr = runtime.malloc3DArray(desc.ptr, width, height, depth,
E     File "cupy_backends/cuda/api/runtime.pyx", line 593, in cupy_backends.cuda.api.runtime.malloc3DArray
E       check_status(status)
E     File "cupy_backends/cuda/api/runtime.pyx", line 265, in cupy_backends.cuda.api.runtime.check_status
E       raise CUDARuntimeError(status)
E   cupy_backends.cuda.api.runtime.CUDARuntimeError: hipErrorUnknown: hipErrorUnknown

cupy_backends/cuda/api/runtime.pyx:265: AssertionError
----------------------------- Captured stderr call -----------------------------
Traceback (most recent call last):
  File "cupy_backends/cuda/api/runtime.pyx", line 644, in cupy_backends.cuda.api.runtime.freeArray
    check_status(status)
  File "cupy_backends/cuda/api/runtime.pyx", line 265, in cupy_backends.cuda.api.runtime.check_status
    raise CUDARuntimeError(status)
cupy_backends.cuda.api.runtime.CUDARuntimeError: hipErrorUnknown: hipErrorUnknown
_ TestAffineTransformTextureMemory.test_affine_transform_texture_memory[_param_51_{mode='constant', order=0, output=float32, output_shape=10, shape=(100, 100), theta=270}] _

self = <<cupyx_tests.scipy_tests.ndimage_tests.test_interpolation.TestAffineTransformTextureMemory object at 0x7fd706e6c430> ...de': 'constant', 'order': 0, 'output': <class 'numpy.float32'>, 'output_shape': 10, 'shape': (100, 100), 'theta': 270}>
xp = <module 'cupy' from '/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.Np3X0NVCM9/cupy/cupy/__init__.py'>
scp = <module 'cupyx.scipy' from '/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.Np3X0NVCM9/cupy/cupyx/scipy/__init__.py'>

    @testing.numpy_cupy_allclose(atol=0.1, scipy_name='scp')
    def test_affine_transform_texture_memory(self, xp, scp):
        a = xp.ones(self.shape, dtype=xp.float32)
        center = numpy.divide(numpy.subtract(self.shape, 1), 2)
    
        if len(self.shape) == 2:
            matrix = self._2d_rotation_matrix(self.theta, center)
        elif len(self.shape) == 3:
            matrix = self._3d_rotation_matrix(self.theta, center)
        else:
            return pytest.xfail('Unsupported shape')
    
        if self.output == 'empty':
            output = xp.empty(self.shape, dtype=xp.float32)
            if self.output_shape:
                return pytest.skip('This combination is tested in '
                                   'test_invalid_texture_arguments')
        else:
            output = self.output
    
        if self.output_shape:
            output_shape = (self.output_shape, ) * len(self.shape)
        else:
            output_shape = self.output_shape
    
        if xp == cupy:
            m = cupyx.scipy.ndimage.affine_transform
            matrix = cupy.array(matrix)
>           return m(a, matrix, output_shape=output_shape,
                     output=output, order=self.order,
                     mode=self.mode, texture_memory=True)

tests/cupyx_tests/scipy_tests/ndimage_tests/test_interpolation.py:398: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
cupyx/scipy/ndimage/interpolation.py:376: in affine_transform
    return _texture.affine_transformation(data=input,
cupyx/_texture.py:168: in affine_transformation
    texture_object = _create_texture_object(data,
cupyx/_texture.py:98: in _create_texture_object
    array = texture.CUDAarray(texture_fmt, *data.shape[::-1])
cupy/cuda/texture.pyx:296: in cupy.cuda.texture.CUDAarray.__init__
    self.ptr = runtime.malloc3DArray(desc.ptr, width, height, depth,
cupy_backends/cuda/api/runtime.pyx:593: in cupy_backends.cuda.api.runtime.malloc3DArray
    check_status(status)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

>   raise CUDARuntimeError(status)
E   AssertionError: Only cupy raises error
E   
E   Traceback (most recent call last):
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.Np3X0NVCM9/cupy/cupy/testing/_helper.py", line 47, in _call_func
E       result = impl(self, *args, **kw)
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.Np3X0NVCM9/cupy/tests/cupyx_tests/scipy_tests/ndimage_tests/test_interpolation.py", line 398, in test_affine_transform_texture_memory
E       return m(a, matrix, output_shape=output_shape,
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.Np3X0NVCM9/cupy/cupyx/scipy/ndimage/interpolation.py", line 376, in affine_transform
E       return _texture.affine_transformation(data=input,
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.Np3X0NVCM9/cupy/cupyx/_texture.py", line 168, in affine_transformation
E       texture_object = _create_texture_object(data,
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.Np3X0NVCM9/cupy/cupyx/_texture.py", line 98, in _create_texture_object
E       array = texture.CUDAarray(texture_fmt, *data.shape[::-1])
E     File "cupy/cuda/texture.pyx", line 296, in cupy.cuda.texture.CUDAarray.__init__
E       self.ptr = runtime.malloc3DArray(desc.ptr, width, height, depth,
E     File "cupy_backends/cuda/api/runtime.pyx", line 593, in cupy_backends.cuda.api.runtime.malloc3DArray
E       check_status(status)
E     File "cupy_backends/cuda/api/runtime.pyx", line 265, in cupy_backends.cuda.api.runtime.check_status
E       raise CUDARuntimeError(status)
E   cupy_backends.cuda.api.runtime.CUDARuntimeError: hipErrorUnknown: hipErrorUnknown

cupy_backends/cuda/api/runtime.pyx:265: AssertionError
----------------------------- Captured stderr call -----------------------------
Traceback (most recent call last):
  File "cupy_backends/cuda/api/runtime.pyx", line 644, in cupy_backends.cuda.api.runtime.freeArray
    check_status(status)
  File "cupy_backends/cuda/api/runtime.pyx", line 265, in cupy_backends.cuda.api.runtime.check_status
    raise CUDARuntimeError(status)
cupy_backends.cuda.api.runtime.CUDARuntimeError: hipErrorUnknown: hipErrorUnknown
_ TestAffineTransformTextureMemory.test_affine_transform_texture_memory[_param_52_{mode='constant', order=0, output=float32, output_shape=10, shape=(10, 20), theta=0}] _

self = <<cupyx_tests.scipy_tests.ndimage_tests.test_interpolation.TestAffineTransformTextureMemory object at 0x7fd7056eca90> ...{'mode': 'constant', 'order': 0, 'output': <class 'numpy.float32'>, 'output_shape': 10, 'shape': (10, 20), 'theta': 0}>
xp = <module 'cupy' from '/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.Np3X0NVCM9/cupy/cupy/__init__.py'>
scp = <module 'cupyx.scipy' from '/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.Np3X0NVCM9/cupy/cupyx/scipy/__init__.py'>

    @testing.numpy_cupy_allclose(atol=0.1, scipy_name='scp')
    def test_affine_transform_texture_memory(self, xp, scp):
        a = xp.ones(self.shape, dtype=xp.float32)
        center = numpy.divide(numpy.subtract(self.shape, 1), 2)
    
        if len(self.shape) == 2:
            matrix = self._2d_rotation_matrix(self.theta, center)
        elif len(self.shape) == 3:
            matrix = self._3d_rotation_matrix(self.theta, center)
        else:
            return pytest.xfail('Unsupported shape')
    
        if self.output == 'empty':
            output = xp.empty(self.shape, dtype=xp.float32)
            if self.output_shape:
                return pytest.skip('This combination is tested in '
                                   'test_invalid_texture_arguments')
        else:
            output = self.output
    
        if self.output_shape:
            output_shape = (self.output_shape, ) * len(self.shape)
        else:
            output_shape = self.output_shape
    
        if xp == cupy:
            m = cupyx.scipy.ndimage.affine_transform
            matrix = cupy.array(matrix)
>           return m(a, matrix, output_shape=output_shape,
                     output=output, order=self.order,
                     mode=self.mode, texture_memory=True)

tests/cupyx_tests/scipy_tests/ndimage_tests/test_interpolation.py:398: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
cupyx/scipy/ndimage/interpolation.py:376: in affine_transform
    return _texture.affine_transformation(data=input,
cupyx/_texture.py:168: in affine_transformation
    texture_object = _create_texture_object(data,
cupyx/_texture.py:98: in _create_texture_object
    array = texture.CUDAarray(texture_fmt, *data.shape[::-1])
cupy/cuda/texture.pyx:296: in cupy.cuda.texture.CUDAarray.__init__
    self.ptr = runtime.malloc3DArray(desc.ptr, width, height, depth,
cupy_backends/cuda/api/runtime.pyx:593: in cupy_backends.cuda.api.runtime.malloc3DArray
    check_status(status)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

>   raise CUDARuntimeError(status)
E   AssertionError: Only cupy raises error
E   
E   Traceback (most recent call last):
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.Np3X0NVCM9/cupy/cupy/testing/_helper.py", line 47, in _call_func
E       result = impl(self, *args, **kw)
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.Np3X0NVCM9/cupy/tests/cupyx_tests/scipy_tests/ndimage_tests/test_interpolation.py", line 398, in test_affine_transform_texture_memory
E       return m(a, matrix, output_shape=output_shape,
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.Np3X0NVCM9/cupy/cupyx/scipy/ndimage/interpolation.py", line 376, in affine_transform
E       return _texture.affine_transformation(data=input,
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.Np3X0NVCM9/cupy/cupyx/_texture.py", line 168, in affine_transformation
E       texture_object = _create_texture_object(data,
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.Np3X0NVCM9/cupy/cupyx/_texture.py", line 98, in _create_texture_object
E       array = texture.CUDAarray(texture_fmt, *data.shape[::-1])
E     File "cupy/cuda/texture.pyx", line 296, in cupy.cuda.texture.CUDAarray.__init__
E       self.ptr = runtime.malloc3DArray(desc.ptr, width, height, depth,
E     File "cupy_backends/cuda/api/runtime.pyx", line 593, in cupy_backends.cuda.api.runtime.malloc3DArray
E       check_status(status)
E     File "cupy_backends/cuda/api/runtime.pyx", line 265, in cupy_backends.cuda.api.runtime.check_status
E       raise CUDARuntimeError(status)
E   cupy_backends.cuda.api.runtime.CUDARuntimeError: hipErrorUnknown: hipErrorUnknown

cupy_backends/cuda/api/runtime.pyx:265: AssertionError
----------------------------- Captured stderr call -----------------------------
Traceback (most recent call last):
  File "cupy_backends/cuda/api/runtime.pyx", line 644, in cupy_backends.cuda.api.runtime.freeArray
    check_status(status)
  File "cupy_backends/cuda/api/runtime.pyx", line 265, in cupy_backends.cuda.api.runtime.check_status
    raise CUDARuntimeError(status)
cupy_backends.cuda.api.runtime.CUDARuntimeError: hipErrorUnknown: hipErrorUnknown
_ TestAffineTransformTextureMemory.test_affine_transform_texture_memory[_param_53_{mode='constant', order=0, output=float32, output_shape=10, shape=(10, 20), theta=90}] _

self = <<cupyx_tests.scipy_tests.ndimage_tests.test_interpolation.TestAffineTransformTextureMemory object at 0x7fd70611b6a0> ...'mode': 'constant', 'order': 0, 'output': <class 'numpy.float32'>, 'output_shape': 10, 'shape': (10, 20), 'theta': 90}>
xp = <module 'cupy' from '/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.Np3X0NVCM9/cupy/cupy/__init__.py'>
scp = <module 'cupyx.scipy' from '/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.Np3X0NVCM9/cupy/cupyx/scipy/__init__.py'>

    @testing.numpy_cupy_allclose(atol=0.1, scipy_name='scp')
    def test_affine_transform_texture_memory(self, xp, scp):
        a = xp.ones(self.shape, dtype=xp.float32)
        center = numpy.divide(numpy.subtract(self.shape, 1), 2)
    
        if len(self.shape) == 2:
            matrix = self._2d_rotation_matrix(self.theta, center)
        elif len(self.shape) == 3:
            matrix = self._3d_rotation_matrix(self.theta, center)
        else:
            return pytest.xfail('Unsupported shape')
    
        if self.output == 'empty':
            output = xp.empty(self.shape, dtype=xp.float32)
            if self.output_shape:
                return pytest.skip('This combination is tested in '
                                   'test_invalid_texture_arguments')
        else:
            output = self.output
    
        if self.output_shape:
            output_shape = (self.output_shape, ) * len(self.shape)
        else:
            output_shape = self.output_shape
    
        if xp == cupy:
            m = cupyx.scipy.ndimage.affine_transform
            matrix = cupy.array(matrix)
>           return m(a, matrix, output_shape=output_shape,
                     output=output, order=self.order,
                     mode=self.mode, texture_memory=True)

tests/cupyx_tests/scipy_tests/ndimage_tests/test_interpolation.py:398: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
cupyx/scipy/ndimage/interpolation.py:376: in affine_transform
    return _texture.affine_transformation(data=input,
cupyx/_texture.py:168: in affine_transformation
    texture_object = _create_texture_object(data,
cupyx/_texture.py:98: in _create_texture_object
    array = texture.CUDAarray(texture_fmt, *data.shape[::-1])
cupy/cuda/texture.pyx:296: in cupy.cuda.texture.CUDAarray.__init__
    self.ptr = runtime.malloc3DArray(desc.ptr, width, height, depth,
cupy_backends/cuda/api/runtime.pyx:593: in cupy_backends.cuda.api.runtime.malloc3DArray
    check_status(status)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

>   raise CUDARuntimeError(status)
E   AssertionError: Only cupy raises error
E   
E   Traceback (most recent call last):
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.Np3X0NVCM9/cupy/cupy/testing/_helper.py", line 47, in _call_func
E       result = impl(self, *args, **kw)
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.Np3X0NVCM9/cupy/tests/cupyx_tests/scipy_tests/ndimage_tests/test_interpolation.py", line 398, in test_affine_transform_texture_memory
E       return m(a, matrix, output_shape=output_shape,
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.Np3X0NVCM9/cupy/cupyx/scipy/ndimage/interpolation.py", line 376, in affine_transform
E       return _texture.affine_transformation(data=input,
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.Np3X0NVCM9/cupy/cupyx/_texture.py", line 168, in affine_transformation
E       texture_object = _create_texture_object(data,
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.Np3X0NVCM9/cupy/cupyx/_texture.py", line 98, in _create_texture_object
E       array = texture.CUDAarray(texture_fmt, *data.shape[::-1])
E     File "cupy/cuda/texture.pyx", line 296, in cupy.cuda.texture.CUDAarray.__init__
E       self.ptr = runtime.malloc3DArray(desc.ptr, width, height, depth,
E     File "cupy_backends/cuda/api/runtime.pyx", line 593, in cupy_backends.cuda.api.runtime.malloc3DArray
E       check_status(status)
E     File "cupy_backends/cuda/api/runtime.pyx", line 265, in cupy_backends.cuda.api.runtime.check_status
E       raise CUDARuntimeError(status)
E   cupy_backends.cuda.api.runtime.CUDARuntimeError: hipErrorUnknown: hipErrorUnknown

cupy_backends/cuda/api/runtime.pyx:265: AssertionError
----------------------------- Captured stderr call -----------------------------
Traceback (most recent call last):
  File "cupy_backends/cuda/api/runtime.pyx", line 644, in cupy_backends.cuda.api.runtime.freeArray
    check_status(status)
  File "cupy_backends/cuda/api/runtime.pyx", line 265, in cupy_backends.cuda.api.runtime.check_status
    raise CUDARuntimeError(status)
cupy_backends.cuda.api.runtime.CUDARuntimeError: hipErrorUnknown: hipErrorUnknown
_ TestAffineTransformTextureMemory.test_affine_transform_texture_memory[_param_54_{mode='constant', order=0, output=float32, output_shape=10, shape=(10, 20), theta=180}] _

self = <<cupyx_tests.scipy_tests.ndimage_tests.test_interpolation.TestAffineTransformTextureMemory object at 0x7fd705829250> ...mode': 'constant', 'order': 0, 'output': <class 'numpy.float32'>, 'output_shape': 10, 'shape': (10, 20), 'theta': 180}>
xp = <module 'cupy' from '/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.Np3X0NVCM9/cupy/cupy/__init__.py'>
scp = <module 'cupyx.scipy' from '/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.Np3X0NVCM9/cupy/cupyx/scipy/__init__.py'>

    @testing.numpy_cupy_allclose(atol=0.1, scipy_name='scp')
    def test_affine_transform_texture_memory(self, xp, scp):
        a = xp.ones(self.shape, dtype=xp.float32)
        center = numpy.divide(numpy.subtract(self.shape, 1), 2)
    
        if len(self.shape) == 2:
            matrix = self._2d_rotation_matrix(self.theta, center)
        elif len(self.shape) == 3:
            matrix = self._3d_rotation_matrix(self.theta, center)
        else:
            return pytest.xfail('Unsupported shape')
    
        if self.output == 'empty':
            output = xp.empty(self.shape, dtype=xp.float32)
            if self.output_shape:
                return pytest.skip('This combination is tested in '
                                   'test_invalid_texture_arguments')
        else:
            output = self.output
    
        if self.output_shape:
            output_shape = (self.output_shape, ) * len(self.shape)
        else:
            output_shape = self.output_shape
    
        if xp == cupy:
            m = cupyx.scipy.ndimage.affine_transform
            matrix = cupy.array(matrix)
>           return m(a, matrix, output_shape=output_shape,
                     output=output, order=self.order,
                     mode=self.mode, texture_memory=True)

tests/cupyx_tests/scipy_tests/ndimage_tests/test_interpolation.py:398: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
cupyx/scipy/ndimage/interpolation.py:376: in affine_transform
    return _texture.affine_transformation(data=input,
cupyx/_texture.py:168: in affine_transformation
    texture_object = _create_texture_object(data,
cupyx/_texture.py:98: in _create_texture_object
    array = texture.CUDAarray(texture_fmt, *data.shape[::-1])
cupy/cuda/texture.pyx:296: in cupy.cuda.texture.CUDAarray.__init__
    self.ptr = runtime.malloc3DArray(desc.ptr, width, height, depth,
cupy_backends/cuda/api/runtime.pyx:593: in cupy_backends.cuda.api.runtime.malloc3DArray
    check_status(status)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

>   raise CUDARuntimeError(status)
E   AssertionError: Only cupy raises error
E   
E   Traceback (most recent call last):
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.Np3X0NVCM9/cupy/cupy/testing/_helper.py", line 47, in _call_func
E       result = impl(self, *args, **kw)
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.Np3X0NVCM9/cupy/tests/cupyx_tests/scipy_tests/ndimage_tests/test_interpolation.py", line 398, in test_affine_transform_texture_memory
E       return m(a, matrix, output_shape=output_shape,
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.Np3X0NVCM9/cupy/cupyx/scipy/ndimage/interpolation.py", line 376, in affine_transform
E       return _texture.affine_transformation(data=input,
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.Np3X0NVCM9/cupy/cupyx/_texture.py", line 168, in affine_transformation
E       texture_object = _create_texture_object(data,
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.Np3X0NVCM9/cupy/cupyx/_texture.py", line 98, in _create_texture_object
E       array = texture.CUDAarray(texture_fmt, *data.shape[::-1])
E     File "cupy/cuda/texture.pyx", line 296, in cupy.cuda.texture.CUDAarray.__init__
E       self.ptr = runtime.malloc3DArray(desc.ptr, width, height, depth,
E     File "cupy_backends/cuda/api/runtime.pyx", line 593, in cupy_backends.cuda.api.runtime.malloc3DArray
E       check_status(status)
E     File "cupy_backends/cuda/api/runtime.pyx", line 265, in cupy_backends.cuda.api.runtime.check_status
E       raise CUDARuntimeError(status)
E   cupy_backends.cuda.api.runtime.CUDARuntimeError: hipErrorUnknown: hipErrorUnknown

cupy_backends/cuda/api/runtime.pyx:265: AssertionError
----------------------------- Captured stderr call -----------------------------
Traceback (most recent call last):
  File "cupy_backends/cuda/api/runtime.pyx", line 644, in cupy_backends.cuda.api.runtime.freeArray
    check_status(status)
  File "cupy_backends/cuda/api/runtime.pyx", line 265, in cupy_backends.cuda.api.runtime.check_status
    raise CUDARuntimeError(status)
cupy_backends.cuda.api.runtime.CUDARuntimeError: hipErrorUnknown: hipErrorUnknown
_ TestAffineTransformTextureMemory.test_affine_transform_texture_memory[_param_55_{mode='constant', order=0, output=float32, output_shape=10, shape=(10, 20), theta=270}] _

self = <<cupyx_tests.scipy_tests.ndimage_tests.test_interpolation.TestAffineTransformTextureMemory object at 0x7fd705845370> ...mode': 'constant', 'order': 0, 'output': <class 'numpy.float32'>, 'output_shape': 10, 'shape': (10, 20), 'theta': 270}>
xp = <module 'cupy' from '/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.Np3X0NVCM9/cupy/cupy/__init__.py'>
scp = <module 'cupyx.scipy' from '/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.Np3X0NVCM9/cupy/cupyx/scipy/__init__.py'>

    @testing.numpy_cupy_allclose(atol=0.1, scipy_name='scp')
    def test_affine_transform_texture_memory(self, xp, scp):
        a = xp.ones(self.shape, dtype=xp.float32)
        center = numpy.divide(numpy.subtract(self.shape, 1), 2)
    
        if len(self.shape) == 2:
            matrix = self._2d_rotation_matrix(self.theta, center)
        elif len(self.shape) == 3:
            matrix = self._3d_rotation_matrix(self.theta, center)
        else:
            return pytest.xfail('Unsupported shape')
    
        if self.output == 'empty':
            output = xp.empty(self.shape, dtype=xp.float32)
            if self.output_shape:
                return pytest.skip('This combination is tested in '
                                   'test_invalid_texture_arguments')
        else:
            output = self.output
    
        if self.output_shape:
            output_shape = (self.output_shape, ) * len(self.shape)
        else:
            output_shape = self.output_shape
    
        if xp == cupy:
            m = cupyx.scipy.ndimage.affine_transform
            matrix = cupy.array(matrix)
>           return m(a, matrix, output_shape=output_shape,
                     output=output, order=self.order,
                     mode=self.mode, texture_memory=True)

tests/cupyx_tests/scipy_tests/ndimage_tests/test_interpolation.py:398: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
cupyx/scipy/ndimage/interpolation.py:376: in affine_transform
    return _texture.affine_transformation(data=input,
cupyx/_texture.py:168: in affine_transformation
    texture_object = _create_texture_object(data,
cupyx/_texture.py:98: in _create_texture_object
    array = texture.CUDAarray(texture_fmt, *data.shape[::-1])
cupy/cuda/texture.pyx:296: in cupy.cuda.texture.CUDAarray.__init__
    self.ptr = runtime.malloc3DArray(desc.ptr, width, height, depth,
cupy_backends/cuda/api/runtime.pyx:593: in cupy_backends.cuda.api.runtime.malloc3DArray
    check_status(status)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

>   raise CUDARuntimeError(status)
E   AssertionError: Only cupy raises error
E   
E   Traceback (most recent call last):
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.Np3X0NVCM9/cupy/cupy/testing/_helper.py", line 47, in _call_func
E       result = impl(self, *args, **kw)
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.Np3X0NVCM9/cupy/tests/cupyx_tests/scipy_tests/ndimage_tests/test_interpolation.py", line 398, in test_affine_transform_texture_memory
E       return m(a, matrix, output_shape=output_shape,
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.Np3X0NVCM9/cupy/cupyx/scipy/ndimage/interpolation.py", line 376, in affine_transform
E       return _texture.affine_transformation(data=input,
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.Np3X0NVCM9/cupy/cupyx/_texture.py", line 168, in affine_transformation
E       texture_object = _create_texture_object(data,
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.Np3X0NVCM9/cupy/cupyx/_texture.py", line 98, in _create_texture_object
E       array = texture.CUDAarray(texture_fmt, *data.shape[::-1])
E     File "cupy/cuda/texture.pyx", line 296, in cupy.cuda.texture.CUDAarray.__init__
E       self.ptr = runtime.malloc3DArray(desc.ptr, width, height, depth,
E     File "cupy_backends/cuda/api/runtime.pyx", line 593, in cupy_backends.cuda.api.runtime.malloc3DArray
E       check_status(status)
E     File "cupy_backends/cuda/api/runtime.pyx", line 265, in cupy_backends.cuda.api.runtime.check_status
E       raise CUDARuntimeError(status)
E   cupy_backends.cuda.api.runtime.CUDARuntimeError: hipErrorUnknown: hipErrorUnknown

cupy_backends/cuda/api/runtime.pyx:265: AssertionError
----------------------------- Captured stderr call -----------------------------
Traceback (most recent call last):
  File "cupy_backends/cuda/api/runtime.pyx", line 644, in cupy_backends.cuda.api.runtime.freeArray
    check_status(status)
  File "cupy_backends/cuda/api/runtime.pyx", line 265, in cupy_backends.cuda.api.runtime.check_status
    raise CUDARuntimeError(status)
cupy_backends.cuda.api.runtime.CUDARuntimeError: hipErrorUnknown: hipErrorUnknown
_ TestAffineTransformTextureMemory.test_affine_transform_texture_memory[_param_56_{mode='constant', order=0, output=float32, output_shape=10, shape=(10, 10, 10), theta=0}] _

self = <<cupyx_tests.scipy_tests.ndimage_tests.test_interpolation.TestAffineTransformTextureMemory object at 0x7fd707cf6460> ...de': 'constant', 'order': 0, 'output': <class 'numpy.float32'>, 'output_shape': 10, 'shape': (10, 10, 10), 'theta': 0}>
xp = <module 'cupy' from '/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.Np3X0NVCM9/cupy/cupy/__init__.py'>
scp = <module 'cupyx.scipy' from '/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.Np3X0NVCM9/cupy/cupyx/scipy/__init__.py'>

    @testing.numpy_cupy_allclose(atol=0.1, scipy_name='scp')
    def test_affine_transform_texture_memory(self, xp, scp):
        a = xp.ones(self.shape, dtype=xp.float32)
        center = numpy.divide(numpy.subtract(self.shape, 1), 2)
    
        if len(self.shape) == 2:
            matrix = self._2d_rotation_matrix(self.theta, center)
        elif len(self.shape) == 3:
            matrix = self._3d_rotation_matrix(self.theta, center)
        else:
            return pytest.xfail('Unsupported shape')
    
        if self.output == 'empty':
            output = xp.empty(self.shape, dtype=xp.float32)
            if self.output_shape:
                return pytest.skip('This combination is tested in '
                                   'test_invalid_texture_arguments')
        else:
            output = self.output
    
        if self.output_shape:
            output_shape = (self.output_shape, ) * len(self.shape)
        else:
            output_shape = self.output_shape
    
        if xp == cupy:
            m = cupyx.scipy.ndimage.affine_transform
            matrix = cupy.array(matrix)
>           return m(a, matrix, output_shape=output_shape,
                     output=output, order=self.order,
                     mode=self.mode, texture_memory=True)

tests/cupyx_tests/scipy_tests/ndimage_tests/test_interpolation.py:398: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
cupyx/scipy/ndimage/interpolation.py:376: in affine_transform
    return _texture.affine_transformation(data=input,
cupyx/_texture.py:168: in affine_transformation
    texture_object = _create_texture_object(data,
cupyx/_texture.py:98: in _create_texture_object
    array = texture.CUDAarray(texture_fmt, *data.shape[::-1])
cupy/cuda/texture.pyx:296: in cupy.cuda.texture.CUDAarray.__init__
    self.ptr = runtime.malloc3DArray(desc.ptr, width, height, depth,
cupy_backends/cuda/api/runtime.pyx:593: in cupy_backends.cuda.api.runtime.malloc3DArray
    check_status(status)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

>   raise CUDARuntimeError(status)
E   AssertionError: Only cupy raises error
E   
E   Traceback (most recent call last):
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.Np3X0NVCM9/cupy/cupy/testing/_helper.py", line 47, in _call_func
E       result = impl(self, *args, **kw)
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.Np3X0NVCM9/cupy/tests/cupyx_tests/scipy_tests/ndimage_tests/test_interpolation.py", line 398, in test_affine_transform_texture_memory
E       return m(a, matrix, output_shape=output_shape,
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.Np3X0NVCM9/cupy/cupyx/scipy/ndimage/interpolation.py", line 376, in affine_transform
E       return _texture.affine_transformation(data=input,
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.Np3X0NVCM9/cupy/cupyx/_texture.py", line 168, in affine_transformation
E       texture_object = _create_texture_object(data,
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.Np3X0NVCM9/cupy/cupyx/_texture.py", line 98, in _create_texture_object
E       array = texture.CUDAarray(texture_fmt, *data.shape[::-1])
E     File "cupy/cuda/texture.pyx", line 296, in cupy.cuda.texture.CUDAarray.__init__
E       self.ptr = runtime.malloc3DArray(desc.ptr, width, height, depth,
E     File "cupy_backends/cuda/api/runtime.pyx", line 593, in cupy_backends.cuda.api.runtime.malloc3DArray
E       check_status(status)
E     File "cupy_backends/cuda/api/runtime.pyx", line 265, in cupy_backends.cuda.api.runtime.check_status
E       raise CUDARuntimeError(status)
E   cupy_backends.cuda.api.runtime.CUDARuntimeError: hipErrorUnknown: hipErrorUnknown

cupy_backends/cuda/api/runtime.pyx:265: AssertionError
----------------------------- Captured stderr call -----------------------------
Traceback (most recent call last):
  File "cupy_backends/cuda/api/runtime.pyx", line 644, in cupy_backends.cuda.api.runtime.freeArray
    check_status(status)
  File "cupy_backends/cuda/api/runtime.pyx", line 265, in cupy_backends.cuda.api.runtime.check_status
    raise CUDARuntimeError(status)
cupy_backends.cuda.api.runtime.CUDARuntimeError: hipErrorUnknown: hipErrorUnknown
_ TestAffineTransformTextureMemory.test_affine_transform_texture_memory[_param_57_{mode='constant', order=0, output=float32, output_shape=10, shape=(10, 10, 10), theta=90}] _

self = <<cupyx_tests.scipy_tests.ndimage_tests.test_interpolation.TestAffineTransformTextureMemory object at 0x7fd7056e70a0> ...e': 'constant', 'order': 0, 'output': <class 'numpy.float32'>, 'output_shape': 10, 'shape': (10, 10, 10), 'theta': 90}>
xp = <module 'cupy' from '/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.Np3X0NVCM9/cupy/cupy/__init__.py'>
scp = <module 'cupyx.scipy' from '/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.Np3X0NVCM9/cupy/cupyx/scipy/__init__.py'>

    @testing.numpy_cupy_allclose(atol=0.1, scipy_name='scp')
    def test_affine_transform_texture_memory(self, xp, scp):
        a = xp.ones(self.shape, dtype=xp.float32)
        center = numpy.divide(numpy.subtract(self.shape, 1), 2)
    
        if len(self.shape) == 2:
            matrix = self._2d_rotation_matrix(self.theta, center)
        elif len(self.shape) == 3:
            matrix = self._3d_rotation_matrix(self.theta, center)
        else:
            return pytest.xfail('Unsupported shape')
    
        if self.output == 'empty':
            output = xp.empty(self.shape, dtype=xp.float32)
            if self.output_shape:
                return pytest.skip('This combination is tested in '
                                   'test_invalid_texture_arguments')
        else:
            output = self.output
    
        if self.output_shape:
            output_shape = (self.output_shape, ) * len(self.shape)
        else:
            output_shape = self.output_shape
    
        if xp == cupy:
            m = cupyx.scipy.ndimage.affine_transform
            matrix = cupy.array(matrix)
>           return m(a, matrix, output_shape=output_shape,
                     output=output, order=self.order,
                     mode=self.mode, texture_memory=True)

tests/cupyx_tests/scipy_tests/ndimage_tests/test_interpolation.py:398: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
cupyx/scipy/ndimage/interpolation.py:376: in affine_transform
    return _texture.affine_transformation(data=input,
cupyx/_texture.py:168: in affine_transformation
    texture_object = _create_texture_object(data,
cupyx/_texture.py:98: in _create_texture_object
    array = texture.CUDAarray(texture_fmt, *data.shape[::-1])
cupy/cuda/texture.pyx:296: in cupy.cuda.texture.CUDAarray.__init__
    self.ptr = runtime.malloc3DArray(desc.ptr, width, height, depth,
cupy_backends/cuda/api/runtime.pyx:593: in cupy_backends.cuda.api.runtime.malloc3DArray
    check_status(status)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

>   raise CUDARuntimeError(status)
E   AssertionError: Only cupy raises error
E   
E   Traceback (most recent call last):
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.Np3X0NVCM9/cupy/cupy/testing/_helper.py", line 47, in _call_func
E       result = impl(self, *args, **kw)
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.Np3X0NVCM9/cupy/tests/cupyx_tests/scipy_tests/ndimage_tests/test_interpolation.py", line 398, in test_affine_transform_texture_memory
E       return m(a, matrix, output_shape=output_shape,
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.Np3X0NVCM9/cupy/cupyx/scipy/ndimage/interpolation.py", line 376, in affine_transform
E       return _texture.affine_transformation(data=input,
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.Np3X0NVCM9/cupy/cupyx/_texture.py", line 168, in affine_transformation
E       texture_object = _create_texture_object(data,
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.Np3X0NVCM9/cupy/cupyx/_texture.py", line 98, in _create_texture_object
E       array = texture.CUDAarray(texture_fmt, *data.shape[::-1])
E     File "cupy/cuda/texture.pyx", line 296, in cupy.cuda.texture.CUDAarray.__init__
E       self.ptr = runtime.malloc3DArray(desc.ptr, width, height, depth,
E     File "cupy_backends/cuda/api/runtime.pyx", line 593, in cupy_backends.cuda.api.runtime.malloc3DArray
E       check_status(status)
E     File "cupy_backends/cuda/api/runtime.pyx", line 265, in cupy_backends.cuda.api.runtime.check_status
E       raise CUDARuntimeError(status)
E   cupy_backends.cuda.api.runtime.CUDARuntimeError: hipErrorUnknown: hipErrorUnknown

cupy_backends/cuda/api/runtime.pyx:265: AssertionError
----------------------------- Captured stderr call -----------------------------
Traceback (most recent call last):
  File "cupy_backends/cuda/api/runtime.pyx", line 644, in cupy_backends.cuda.api.runtime.freeArray
    check_status(status)
  File "cupy_backends/cuda/api/runtime.pyx", line 265, in cupy_backends.cuda.api.runtime.check_status
    raise CUDARuntimeError(status)
cupy_backends.cuda.api.runtime.CUDARuntimeError: hipErrorUnknown: hipErrorUnknown
_ TestAffineTransformTextureMemory.test_affine_transform_texture_memory[_param_58_{mode='constant', order=0, output=float32, output_shape=10, shape=(10, 10, 10), theta=180}] _

self = <<cupyx_tests.scipy_tests.ndimage_tests.test_interpolation.TestAffineTransformTextureMemory object at 0x7fd706e9d6d0> ...': 'constant', 'order': 0, 'output': <class 'numpy.float32'>, 'output_shape': 10, 'shape': (10, 10, 10), 'theta': 180}>
xp = <module 'cupy' from '/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.Np3X0NVCM9/cupy/cupy/__init__.py'>
scp = <module 'cupyx.scipy' from '/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.Np3X0NVCM9/cupy/cupyx/scipy/__init__.py'>

    @testing.numpy_cupy_allclose(atol=0.1, scipy_name='scp')
    def test_affine_transform_texture_memory(self, xp, scp):
        a = xp.ones(self.shape, dtype=xp.float32)
        center = numpy.divide(numpy.subtract(self.shape, 1), 2)
    
        if len(self.shape) == 2:
            matrix = self._2d_rotation_matrix(self.theta, center)
        elif len(self.shape) == 3:
            matrix = self._3d_rotation_matrix(self.theta, center)
        else:
            return pytest.xfail('Unsupported shape')
    
        if self.output == 'empty':
            output = xp.empty(self.shape, dtype=xp.float32)
            if self.output_shape:
                return pytest.skip('This combination is tested in '
                                   'test_invalid_texture_arguments')
        else:
            output = self.output
    
        if self.output_shape:
            output_shape = (self.output_shape, ) * len(self.shape)
        else:
            output_shape = self.output_shape
    
        if xp == cupy:
            m = cupyx.scipy.ndimage.affine_transform
            matrix = cupy.array(matrix)
>           return m(a, matrix, output_shape=output_shape,
                     output=output, order=self.order,
                     mode=self.mode, texture_memory=True)

tests/cupyx_tests/scipy_tests/ndimage_tests/test_interpolation.py:398: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
cupyx/scipy/ndimage/interpolation.py:376: in affine_transform
    return _texture.affine_transformation(data=input,
cupyx/_texture.py:168: in affine_transformation
    texture_object = _create_texture_object(data,
cupyx/_texture.py:98: in _create_texture_object
    array = texture.CUDAarray(texture_fmt, *data.shape[::-1])
cupy/cuda/texture.pyx:296: in cupy.cuda.texture.CUDAarray.__init__
    self.ptr = runtime.malloc3DArray(desc.ptr, width, height, depth,
cupy_backends/cuda/api/runtime.pyx:593: in cupy_backends.cuda.api.runtime.malloc3DArray
    check_status(status)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

>   raise CUDARuntimeError(status)
E   AssertionError: Only cupy raises error
E   
E   Traceback (most recent call last):
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.Np3X0NVCM9/cupy/cupy/testing/_helper.py", line 47, in _call_func
E       result = impl(self, *args, **kw)
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.Np3X0NVCM9/cupy/tests/cupyx_tests/scipy_tests/ndimage_tests/test_interpolation.py", line 398, in test_affine_transform_texture_memory
E       return m(a, matrix, output_shape=output_shape,
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.Np3X0NVCM9/cupy/cupyx/scipy/ndimage/interpolation.py", line 376, in affine_transform
E       return _texture.affine_transformation(data=input,
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.Np3X0NVCM9/cupy/cupyx/_texture.py", line 168, in affine_transformation
E       texture_object = _create_texture_object(data,
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.Np3X0NVCM9/cupy/cupyx/_texture.py", line 98, in _create_texture_object
E       array = texture.CUDAarray(texture_fmt, *data.shape[::-1])
E     File "cupy/cuda/texture.pyx", line 296, in cupy.cuda.texture.CUDAarray.__init__
E       self.ptr = runtime.malloc3DArray(desc.ptr, width, height, depth,
E     File "cupy_backends/cuda/api/runtime.pyx", line 593, in cupy_backends.cuda.api.runtime.malloc3DArray
E       check_status(status)
E     File "cupy_backends/cuda/api/runtime.pyx", line 265, in cupy_backends.cuda.api.runtime.check_status
E       raise CUDARuntimeError(status)
E   cupy_backends.cuda.api.runtime.CUDARuntimeError: hipErrorUnknown: hipErrorUnknown

cupy_backends/cuda/api/runtime.pyx:265: AssertionError
----------------------------- Captured stderr call -----------------------------
Traceback (most recent call last):
  File "cupy_backends/cuda/api/runtime.pyx", line 644, in cupy_backends.cuda.api.runtime.freeArray
    check_status(status)
  File "cupy_backends/cuda/api/runtime.pyx", line 265, in cupy_backends.cuda.api.runtime.check_status
    raise CUDARuntimeError(status)
cupy_backends.cuda.api.runtime.CUDARuntimeError: hipErrorUnknown: hipErrorUnknown
_ TestAffineTransformTextureMemory.test_affine_transform_texture_memory[_param_59_{mode='constant', order=0, output=float32, output_shape=10, shape=(10, 10, 10), theta=270}] _

self = <<cupyx_tests.scipy_tests.ndimage_tests.test_interpolation.TestAffineTransformTextureMemory object at 0x7fd7056e7940> ...': 'constant', 'order': 0, 'output': <class 'numpy.float32'>, 'output_shape': 10, 'shape': (10, 10, 10), 'theta': 270}>
xp = <module 'cupy' from '/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.Np3X0NVCM9/cupy/cupy/__init__.py'>
scp = <module 'cupyx.scipy' from '/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.Np3X0NVCM9/cupy/cupyx/scipy/__init__.py'>

    @testing.numpy_cupy_allclose(atol=0.1, scipy_name='scp')
    def test_affine_transform_texture_memory(self, xp, scp):
        a = xp.ones(self.shape, dtype=xp.float32)
        center = numpy.divide(numpy.subtract(self.shape, 1), 2)
    
        if len(self.shape) == 2:
            matrix = self._2d_rotation_matrix(self.theta, center)
        elif len(self.shape) == 3:
            matrix = self._3d_rotation_matrix(self.theta, center)
        else:
            return pytest.xfail('Unsupported shape')
    
        if self.output == 'empty':
            output = xp.empty(self.shape, dtype=xp.float32)
            if self.output_shape:
                return pytest.skip('This combination is tested in '
                                   'test_invalid_texture_arguments')
        else:
            output = self.output
    
        if self.output_shape:
            output_shape = (self.output_shape, ) * len(self.shape)
        else:
            output_shape = self.output_shape
    
        if xp == cupy:
            m = cupyx.scipy.ndimage.affine_transform
            matrix = cupy.array(matrix)
>           return m(a, matrix, output_shape=output_shape,
                     output=output, order=self.order,
                     mode=self.mode, texture_memory=True)

tests/cupyx_tests/scipy_tests/ndimage_tests/test_interpolation.py:398: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
cupyx/scipy/ndimage/interpolation.py:376: in affine_transform
    return _texture.affine_transformation(data=input,
cupyx/_texture.py:168: in affine_transformation
    texture_object = _create_texture_object(data,
cupyx/_texture.py:98: in _create_texture_object
    array = texture.CUDAarray(texture_fmt, *data.shape[::-1])
cupy/cuda/texture.pyx:296: in cupy.cuda.texture.CUDAarray.__init__
    self.ptr = runtime.malloc3DArray(desc.ptr, width, height, depth,
cupy_backends/cuda/api/runtime.pyx:593: in cupy_backends.cuda.api.runtime.malloc3DArray
    check_status(status)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

>   raise CUDARuntimeError(status)
E   AssertionError: Only cupy raises error
E   
E   Traceback (most recent call last):
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.Np3X0NVCM9/cupy/cupy/testing/_helper.py", line 47, in _call_func
E       result = impl(self, *args, **kw)
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.Np3X0NVCM9/cupy/tests/cupyx_tests/scipy_tests/ndimage_tests/test_interpolation.py", line 398, in test_affine_transform_texture_memory
E       return m(a, matrix, output_shape=output_shape,
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.Np3X0NVCM9/cupy/cupyx/scipy/ndimage/interpolation.py", line 376, in affine_transform
E       return _texture.affine_transformation(data=input,
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.Np3X0NVCM9/cupy/cupyx/_texture.py", line 168, in affine_transformation
E       texture_object = _create_texture_object(data,
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.Np3X0NVCM9/cupy/cupyx/_texture.py", line 98, in _create_texture_object
E       array = texture.CUDAarray(texture_fmt, *data.shape[::-1])
E     File "cupy/cuda/texture.pyx", line 296, in cupy.cuda.texture.CUDAarray.__init__
E       self.ptr = runtime.malloc3DArray(desc.ptr, width, height, depth,
E     File "cupy_backends/cuda/api/runtime.pyx", line 593, in cupy_backends.cuda.api.runtime.malloc3DArray
E       check_status(status)
E     File "cupy_backends/cuda/api/runtime.pyx", line 265, in cupy_backends.cuda.api.runtime.check_status
E       raise CUDARuntimeError(status)
E   cupy_backends.cuda.api.runtime.CUDARuntimeError: hipErrorUnknown: hipErrorUnknown

cupy_backends/cuda/api/runtime.pyx:265: AssertionError
----------------------------- Captured stderr call -----------------------------
Traceback (most recent call last):
  File "cupy_backends/cuda/api/runtime.pyx", line 644, in cupy_backends.cuda.api.runtime.freeArray
    check_status(status)
  File "cupy_backends/cuda/api/runtime.pyx", line 265, in cupy_backends.cuda.api.runtime.check_status
    raise CUDARuntimeError(status)
cupy_backends.cuda.api.runtime.CUDARuntimeError: hipErrorUnknown: hipErrorUnknown
_ TestAffineTransformTextureMemory.test_affine_transform_texture_memory[_param_60_{mode='constant', order=0, output=float32, output_shape=10, shape=(10, 20, 30), theta=0}] _

self = <<cupyx_tests.scipy_tests.ndimage_tests.test_interpolation.TestAffineTransformTextureMemory object at 0x7fd705ad8ac0> ...de': 'constant', 'order': 0, 'output': <class 'numpy.float32'>, 'output_shape': 10, 'shape': (10, 20, 30), 'theta': 0}>
xp = <module 'cupy' from '/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.Np3X0NVCM9/cupy/cupy/__init__.py'>
scp = <module 'cupyx.scipy' from '/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.Np3X0NVCM9/cupy/cupyx/scipy/__init__.py'>

    @testing.numpy_cupy_allclose(atol=0.1, scipy_name='scp')
    def test_affine_transform_texture_memory(self, xp, scp):
        a = xp.ones(self.shape, dtype=xp.float32)
        center = numpy.divide(numpy.subtract(self.shape, 1), 2)
    
        if len(self.shape) == 2:
            matrix = self._2d_rotation_matrix(self.theta, center)
        elif len(self.shape) == 3:
            matrix = self._3d_rotation_matrix(self.theta, center)
        else:
            return pytest.xfail('Unsupported shape')
    
        if self.output == 'empty':
            output = xp.empty(self.shape, dtype=xp.float32)
            if self.output_shape:
                return pytest.skip('This combination is tested in '
                                   'test_invalid_texture_arguments')
        else:
            output = self.output
    
        if self.output_shape:
            output_shape = (self.output_shape, ) * len(self.shape)
        else:
            output_shape = self.output_shape
    
        if xp == cupy:
            m = cupyx.scipy.ndimage.affine_transform
            matrix = cupy.array(matrix)
>           return m(a, matrix, output_shape=output_shape,
                     output=output, order=self.order,
                     mode=self.mode, texture_memory=True)

tests/cupyx_tests/scipy_tests/ndimage_tests/test_interpolation.py:398: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
cupyx/scipy/ndimage/interpolation.py:376: in affine_transform
    return _texture.affine_transformation(data=input,
cupyx/_texture.py:168: in affine_transformation
    texture_object = _create_texture_object(data,
cupyx/_texture.py:98: in _create_texture_object
    array = texture.CUDAarray(texture_fmt, *data.shape[::-1])
cupy/cuda/texture.pyx:296: in cupy.cuda.texture.CUDAarray.__init__
    self.ptr = runtime.malloc3DArray(desc.ptr, width, height, depth,
cupy_backends/cuda/api/runtime.pyx:593: in cupy_backends.cuda.api.runtime.malloc3DArray
    check_status(status)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

>   raise CUDARuntimeError(status)
E   AssertionError: Only cupy raises error
E   
E   Traceback (most recent call last):
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.Np3X0NVCM9/cupy/cupy/testing/_helper.py", line 47, in _call_func
E       result = impl(self, *args, **kw)
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.Np3X0NVCM9/cupy/tests/cupyx_tests/scipy_tests/ndimage_tests/test_interpolation.py", line 398, in test_affine_transform_texture_memory
E       return m(a, matrix, output_shape=output_shape,
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.Np3X0NVCM9/cupy/cupyx/scipy/ndimage/interpolation.py", line 376, in affine_transform
E       return _texture.affine_transformation(data=input,
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.Np3X0NVCM9/cupy/cupyx/_texture.py", line 168, in affine_transformation
E       texture_object = _create_texture_object(data,
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.Np3X0NVCM9/cupy/cupyx/_texture.py", line 98, in _create_texture_object
E       array = texture.CUDAarray(texture_fmt, *data.shape[::-1])
E     File "cupy/cuda/texture.pyx", line 296, in cupy.cuda.texture.CUDAarray.__init__
E       self.ptr = runtime.malloc3DArray(desc.ptr, width, height, depth,
E     File "cupy_backends/cuda/api/runtime.pyx", line 593, in cupy_backends.cuda.api.runtime.malloc3DArray
E       check_status(status)
E     File "cupy_backends/cuda/api/runtime.pyx", line 265, in cupy_backends.cuda.api.runtime.check_status
E       raise CUDARuntimeError(status)
E   cupy_backends.cuda.api.runtime.CUDARuntimeError: hipErrorUnknown: hipErrorUnknown

cupy_backends/cuda/api/runtime.pyx:265: AssertionError
----------------------------- Captured stderr call -----------------------------
Traceback (most recent call last):
  File "cupy_backends/cuda/api/runtime.pyx", line 644, in cupy_backends.cuda.api.runtime.freeArray
    check_status(status)
  File "cupy_backends/cuda/api/runtime.pyx", line 265, in cupy_backends.cuda.api.runtime.check_status
    raise CUDARuntimeError(status)
cupy_backends.cuda.api.runtime.CUDARuntimeError: hipErrorUnknown: hipErrorUnknown
_ TestAffineTransformTextureMemory.test_affine_transform_texture_memory[_param_61_{mode='constant', order=0, output=float32, output_shape=10, shape=(10, 20, 30), theta=90}] _

self = <<cupyx_tests.scipy_tests.ndimage_tests.test_interpolation.TestAffineTransformTextureMemory object at 0x7fd7058a7730> ...e': 'constant', 'order': 0, 'output': <class 'numpy.float32'>, 'output_shape': 10, 'shape': (10, 20, 30), 'theta': 90}>
xp = <module 'cupy' from '/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.Np3X0NVCM9/cupy/cupy/__init__.py'>
scp = <module 'cupyx.scipy' from '/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.Np3X0NVCM9/cupy/cupyx/scipy/__init__.py'>

    @testing.numpy_cupy_allclose(atol=0.1, scipy_name='scp')
    def test_affine_transform_texture_memory(self, xp, scp):
        a = xp.ones(self.shape, dtype=xp.float32)
        center = numpy.divide(numpy.subtract(self.shape, 1), 2)
    
        if len(self.shape) == 2:
            matrix = self._2d_rotation_matrix(self.theta, center)
        elif len(self.shape) == 3:
            matrix = self._3d_rotation_matrix(self.theta, center)
        else:
            return pytest.xfail('Unsupported shape')
    
        if self.output == 'empty':
            output = xp.empty(self.shape, dtype=xp.float32)
            if self.output_shape:
                return pytest.skip('This combination is tested in '
                                   'test_invalid_texture_arguments')
        else:
            output = self.output
    
        if self.output_shape:
            output_shape = (self.output_shape, ) * len(self.shape)
        else:
            output_shape = self.output_shape
    
        if xp == cupy:
            m = cupyx.scipy.ndimage.affine_transform
            matrix = cupy.array(matrix)
>           return m(a, matrix, output_shape=output_shape,
                     output=output, order=self.order,
                     mode=self.mode, texture_memory=True)

tests/cupyx_tests/scipy_tests/ndimage_tests/test_interpolation.py:398: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
cupyx/scipy/ndimage/interpolation.py:376: in affine_transform
    return _texture.affine_transformation(data=input,
cupyx/_texture.py:168: in affine_transformation
    texture_object = _create_texture_object(data,
cupyx/_texture.py:98: in _create_texture_object
    array = texture.CUDAarray(texture_fmt, *data.shape[::-1])
cupy/cuda/texture.pyx:296: in cupy.cuda.texture.CUDAarray.__init__
    self.ptr = runtime.malloc3DArray(desc.ptr, width, height, depth,
cupy_backends/cuda/api/runtime.pyx:593: in cupy_backends.cuda.api.runtime.malloc3DArray
    check_status(status)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

>   raise CUDARuntimeError(status)
E   AssertionError: Only cupy raises error
E   
E   Traceback (most recent call last):
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.Np3X0NVCM9/cupy/cupy/testing/_helper.py", line 47, in _call_func
E       result = impl(self, *args, **kw)
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.Np3X0NVCM9/cupy/tests/cupyx_tests/scipy_tests/ndimage_tests/test_interpolation.py", line 398, in test_affine_transform_texture_memory
E       return m(a, matrix, output_shape=output_shape,
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.Np3X0NVCM9/cupy/cupyx/scipy/ndimage/interpolation.py", line 376, in affine_transform
E       return _texture.affine_transformation(data=input,
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.Np3X0NVCM9/cupy/cupyx/_texture.py", line 168, in affine_transformation
E       texture_object = _create_texture_object(data,
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.Np3X0NVCM9/cupy/cupyx/_texture.py", line 98, in _create_texture_object
E       array = texture.CUDAarray(texture_fmt, *data.shape[::-1])
E     File "cupy/cuda/texture.pyx", line 296, in cupy.cuda.texture.CUDAarray.__init__
E       self.ptr = runtime.malloc3DArray(desc.ptr, width, height, depth,
E     File "cupy_backends/cuda/api/runtime.pyx", line 593, in cupy_backends.cuda.api.runtime.malloc3DArray
E       check_status(status)
E     File "cupy_backends/cuda/api/runtime.pyx", line 265, in cupy_backends.cuda.api.runtime.check_status
E       raise CUDARuntimeError(status)
E   cupy_backends.cuda.api.runtime.CUDARuntimeError: hipErrorUnknown: hipErrorUnknown

cupy_backends/cuda/api/runtime.pyx:265: AssertionError
----------------------------- Captured stderr call -----------------------------
Traceback (most recent call last):
  File "cupy_backends/cuda/api/runtime.pyx", line 644, in cupy_backends.cuda.api.runtime.freeArray
    check_status(status)
  File "cupy_backends/cuda/api/runtime.pyx", line 265, in cupy_backends.cuda.api.runtime.check_status
    raise CUDARuntimeError(status)
cupy_backends.cuda.api.runtime.CUDARuntimeError: hipErrorUnknown: hipErrorUnknown
_ TestAffineTransformTextureMemory.test_affine_transform_texture_memory[_param_62_{mode='constant', order=0, output=float32, output_shape=10, shape=(10, 20, 30), theta=180}] _

self = <<cupyx_tests.scipy_tests.ndimage_tests.test_interpolation.TestAffineTransformTextureMemory object at 0x7fd705ad8cd0> ...': 'constant', 'order': 0, 'output': <class 'numpy.float32'>, 'output_shape': 10, 'shape': (10, 20, 30), 'theta': 180}>
xp = <module 'cupy' from '/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.Np3X0NVCM9/cupy/cupy/__init__.py'>
scp = <module 'cupyx.scipy' from '/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.Np3X0NVCM9/cupy/cupyx/scipy/__init__.py'>

    @testing.numpy_cupy_allclose(atol=0.1, scipy_name='scp')
    def test_affine_transform_texture_memory(self, xp, scp):
        a = xp.ones(self.shape, dtype=xp.float32)
        center = numpy.divide(numpy.subtract(self.shape, 1), 2)
    
        if len(self.shape) == 2:
            matrix = self._2d_rotation_matrix(self.theta, center)
        elif len(self.shape) == 3:
            matrix = self._3d_rotation_matrix(self.theta, center)
        else:
            return pytest.xfail('Unsupported shape')
    
        if self.output == 'empty':
            output = xp.empty(self.shape, dtype=xp.float32)
            if self.output_shape:
                return pytest.skip('This combination is tested in '
                                   'test_invalid_texture_arguments')
        else:
            output = self.output
    
        if self.output_shape:
            output_shape = (self.output_shape, ) * len(self.shape)
        else:
            output_shape = self.output_shape
    
        if xp == cupy:
            m = cupyx.scipy.ndimage.affine_transform
            matrix = cupy.array(matrix)
>           return m(a, matrix, output_shape=output_shape,
                     output=output, order=self.order,
                     mode=self.mode, texture_memory=True)

tests/cupyx_tests/scipy_tests/ndimage_tests/test_interpolation.py:398: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
cupyx/scipy/ndimage/interpolation.py:376: in affine_transform
    return _texture.affine_transformation(data=input,
cupyx/_texture.py:168: in affine_transformation
    texture_object = _create_texture_object(data,
cupyx/_texture.py:98: in _create_texture_object
    array = texture.CUDAarray(texture_fmt, *data.shape[::-1])
cupy/cuda/texture.pyx:296: in cupy.cuda.texture.CUDAarray.__init__
    self.ptr = runtime.malloc3DArray(desc.ptr, width, height, depth,
cupy_backends/cuda/api/runtime.pyx:593: in cupy_backends.cuda.api.runtime.malloc3DArray
    check_status(status)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

>   raise CUDARuntimeError(status)
E   AssertionError: Only cupy raises error
E   
E   Traceback (most recent call last):
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.Np3X0NVCM9/cupy/cupy/testing/_helper.py", line 47, in _call_func
E       result = impl(self, *args, **kw)
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.Np3X0NVCM9/cupy/tests/cupyx_tests/scipy_tests/ndimage_tests/test_interpolation.py", line 398, in test_affine_transform_texture_memory
E       return m(a, matrix, output_shape=output_shape,
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.Np3X0NVCM9/cupy/cupyx/scipy/ndimage/interpolation.py", line 376, in affine_transform
E       return _texture.affine_transformation(data=input,
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.Np3X0NVCM9/cupy/cupyx/_texture.py", line 168, in affine_transformation
E       texture_object = _create_texture_object(data,
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.Np3X0NVCM9/cupy/cupyx/_texture.py", line 98, in _create_texture_object
E       array = texture.CUDAarray(texture_fmt, *data.shape[::-1])
E     File "cupy/cuda/texture.pyx", line 296, in cupy.cuda.texture.CUDAarray.__init__
E       self.ptr = runtime.malloc3DArray(desc.ptr, width, height, depth,
E     File "cupy_backends/cuda/api/runtime.pyx", line 593, in cupy_backends.cuda.api.runtime.malloc3DArray
E       check_status(status)
E     File "cupy_backends/cuda/api/runtime.pyx", line 265, in cupy_backends.cuda.api.runtime.check_status
E       raise CUDARuntimeError(status)
E   cupy_backends.cuda.api.runtime.CUDARuntimeError: hipErrorUnknown: hipErrorUnknown

cupy_backends/cuda/api/runtime.pyx:265: AssertionError
----------------------------- Captured stderr call -----------------------------
Traceback (most recent call last):
  File "cupy_backends/cuda/api/runtime.pyx", line 644, in cupy_backends.cuda.api.runtime.freeArray
    check_status(status)
  File "cupy_backends/cuda/api/runtime.pyx", line 265, in cupy_backends.cuda.api.runtime.check_status
    raise CUDARuntimeError(status)
cupy_backends.cuda.api.runtime.CUDARuntimeError: hipErrorUnknown: hipErrorUnknown
_ TestAffineTransformTextureMemory.test_affine_transform_texture_memory[_param_63_{mode='constant', order=0, output=float32, output_shape=10, shape=(10, 20, 30), theta=270}] _

self = <<cupyx_tests.scipy_tests.ndimage_tests.test_interpolation.TestAffineTransformTextureMemory object at 0x7fd7058a75b0> ...': 'constant', 'order': 0, 'output': <class 'numpy.float32'>, 'output_shape': 10, 'shape': (10, 20, 30), 'theta': 270}>
xp = <module 'cupy' from '/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.Np3X0NVCM9/cupy/cupy/__init__.py'>
scp = <module 'cupyx.scipy' from '/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.Np3X0NVCM9/cupy/cupyx/scipy/__init__.py'>

    @testing.numpy_cupy_allclose(atol=0.1, scipy_name='scp')
    def test_affine_transform_texture_memory(self, xp, scp):
        a = xp.ones(self.shape, dtype=xp.float32)
        center = numpy.divide(numpy.subtract(self.shape, 1), 2)
    
        if len(self.shape) == 2:
            matrix = self._2d_rotation_matrix(self.theta, center)
        elif len(self.shape) == 3:
            matrix = self._3d_rotation_matrix(self.theta, center)
        else:
            return pytest.xfail('Unsupported shape')
    
        if self.output == 'empty':
            output = xp.empty(self.shape, dtype=xp.float32)
            if self.output_shape:
                return pytest.skip('This combination is tested in '
                                   'test_invalid_texture_arguments')
        else:
            output = self.output
    
        if self.output_shape:
            output_shape = (self.output_shape, ) * len(self.shape)
        else:
            output_shape = self.output_shape
    
        if xp == cupy:
            m = cupyx.scipy.ndimage.affine_transform
            matrix = cupy.array(matrix)
>           return m(a, matrix, output_shape=output_shape,
                     output=output, order=self.order,
                     mode=self.mode, texture_memory=True)

tests/cupyx_tests/scipy_tests/ndimage_tests/test_interpolation.py:398: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
cupyx/scipy/ndimage/interpolation.py:376: in affine_transform
    return _texture.affine_transformation(data=input,
cupyx/_texture.py:168: in affine_transformation
    texture_object = _create_texture_object(data,
cupyx/_texture.py:98: in _create_texture_object
    array = texture.CUDAarray(texture_fmt, *data.shape[::-1])
cupy/cuda/texture.pyx:296: in cupy.cuda.texture.CUDAarray.__init__
    self.ptr = runtime.malloc3DArray(desc.ptr, width, height, depth,
cupy_backends/cuda/api/runtime.pyx:593: in cupy_backends.cuda.api.runtime.malloc3DArray
    check_status(status)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

>   raise CUDARuntimeError(status)
E   AssertionError: Only cupy raises error
E   
E   Traceback (most recent call last):
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.Np3X0NVCM9/cupy/cupy/testing/_helper.py", line 47, in _call_func
E       result = impl(self, *args, **kw)
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.Np3X0NVCM9/cupy/tests/cupyx_tests/scipy_tests/ndimage_tests/test_interpolation.py", line 398, in test_affine_transform_texture_memory
E       return m(a, matrix, output_shape=output_shape,
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.Np3X0NVCM9/cupy/cupyx/scipy/ndimage/interpolation.py", line 376, in affine_transform
E       return _texture.affine_transformation(data=input,
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.Np3X0NVCM9/cupy/cupyx/_texture.py", line 168, in affine_transformation
E       texture_object = _create_texture_object(data,
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.Np3X0NVCM9/cupy/cupyx/_texture.py", line 98, in _create_texture_object
E       array = texture.CUDAarray(texture_fmt, *data.shape[::-1])
E     File "cupy/cuda/texture.pyx", line 296, in cupy.cuda.texture.CUDAarray.__init__
E       self.ptr = runtime.malloc3DArray(desc.ptr, width, height, depth,
E     File "cupy_backends/cuda/api/runtime.pyx", line 593, in cupy_backends.cuda.api.runtime.malloc3DArray
E       check_status(status)
E     File "cupy_backends/cuda/api/runtime.pyx", line 265, in cupy_backends.cuda.api.runtime.check_status
E       raise CUDARuntimeError(status)
E   cupy_backends.cuda.api.runtime.CUDARuntimeError: hipErrorUnknown: hipErrorUnknown

cupy_backends/cuda/api/runtime.pyx:265: AssertionError
----------------------------- Captured stderr call -----------------------------
Traceback (most recent call last):
  File "cupy_backends/cuda/api/runtime.pyx", line 644, in cupy_backends.cuda.api.runtime.freeArray
    check_status(status)
  File "cupy_backends/cuda/api/runtime.pyx", line 265, in cupy_backends.cuda.api.runtime.check_status
    raise CUDARuntimeError(status)
cupy_backends.cuda.api.runtime.CUDARuntimeError: hipErrorUnknown: hipErrorUnknown
_ TestAffineTransformTextureMemory.test_affine_transform_texture_memory[_param_64_{mode='constant', order=0, output='empty', output_shape=None, shape=(100, 100), theta=0}] _

self = <<cupyx_tests.scipy_tests.ndimage_tests.test_interpolation.TestAffineTransformTextureMemory object at 0x7fd819f9f130>  parameter: {'mode': 'constant', 'order': 0, 'output': 'empty', 'output_shape': None, 'shape': (100, 100), 'theta': 0}>
xp = <module 'cupy' from '/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.Np3X0NVCM9/cupy/cupy/__init__.py'>
scp = <module 'cupyx.scipy' from '/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.Np3X0NVCM9/cupy/cupyx/scipy/__init__.py'>

    @testing.numpy_cupy_allclose(atol=0.1, scipy_name='scp')
    def test_affine_transform_texture_memory(self, xp, scp):
        a = xp.ones(self.shape, dtype=xp.float32)
        center = numpy.divide(numpy.subtract(self.shape, 1), 2)
    
        if len(self.shape) == 2:
            matrix = self._2d_rotation_matrix(self.theta, center)
        elif len(self.shape) == 3:
            matrix = self._3d_rotation_matrix(self.theta, center)
        else:
            return pytest.xfail('Unsupported shape')
    
        if self.output == 'empty':
            output = xp.empty(self.shape, dtype=xp.float32)
            if self.output_shape:
                return pytest.skip('This combination is tested in '
                                   'test_invalid_texture_arguments')
        else:
            output = self.output
    
        if self.output_shape:
            output_shape = (self.output_shape, ) * len(self.shape)
        else:
            output_shape = self.output_shape
    
        if xp == cupy:
            m = cupyx.scipy.ndimage.affine_transform
            matrix = cupy.array(matrix)
>           return m(a, matrix, output_shape=output_shape,
                     output=output, order=self.order,
                     mode=self.mode, texture_memory=True)

tests/cupyx_tests/scipy_tests/ndimage_tests/test_interpolation.py:398: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
cupyx/scipy/ndimage/interpolation.py:376: in affine_transform
    return _texture.affine_transformation(data=input,
cupyx/_texture.py:168: in affine_transformation
    texture_object = _create_texture_object(data,
cupyx/_texture.py:98: in _create_texture_object
    array = texture.CUDAarray(texture_fmt, *data.shape[::-1])
cupy/cuda/texture.pyx:296: in cupy.cuda.texture.CUDAarray.__init__
    self.ptr = runtime.malloc3DArray(desc.ptr, width, height, depth,
cupy_backends/cuda/api/runtime.pyx:593: in cupy_backends.cuda.api.runtime.malloc3DArray
    check_status(status)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

>   raise CUDARuntimeError(status)
E   AssertionError: Only cupy raises error
E   
E   Traceback (most recent call last):
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.Np3X0NVCM9/cupy/cupy/testing/_helper.py", line 47, in _call_func
E       result = impl(self, *args, **kw)
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.Np3X0NVCM9/cupy/tests/cupyx_tests/scipy_tests/ndimage_tests/test_interpolation.py", line 398, in test_affine_transform_texture_memory
E       return m(a, matrix, output_shape=output_shape,
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.Np3X0NVCM9/cupy/cupyx/scipy/ndimage/interpolation.py", line 376, in affine_transform
E       return _texture.affine_transformation(data=input,
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.Np3X0NVCM9/cupy/cupyx/_texture.py", line 168, in affine_transformation
E       texture_object = _create_texture_object(data,
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.Np3X0NVCM9/cupy/cupyx/_texture.py", line 98, in _create_texture_object
E       array = texture.CUDAarray(texture_fmt, *data.shape[::-1])
E     File "cupy/cuda/texture.pyx", line 296, in cupy.cuda.texture.CUDAarray.__init__
E       self.ptr = runtime.malloc3DArray(desc.ptr, width, height, depth,
E     File "cupy_backends/cuda/api/runtime.pyx", line 593, in cupy_backends.cuda.api.runtime.malloc3DArray
E       check_status(status)
E     File "cupy_backends/cuda/api/runtime.pyx", line 265, in cupy_backends.cuda.api.runtime.check_status
E       raise CUDARuntimeError(status)
E   cupy_backends.cuda.api.runtime.CUDARuntimeError: hipErrorUnknown: hipErrorUnknown

cupy_backends/cuda/api/runtime.pyx:265: AssertionError
----------------------------- Captured stderr call -----------------------------
Traceback (most recent call last):
  File "cupy_backends/cuda/api/runtime.pyx", line 644, in cupy_backends.cuda.api.runtime.freeArray
    check_status(status)
  File "cupy_backends/cuda/api/runtime.pyx", line 265, in cupy_backends.cuda.api.runtime.check_status
    raise CUDARuntimeError(status)
cupy_backends.cuda.api.runtime.CUDARuntimeError: hipErrorUnknown: hipErrorUnknown
_ TestAffineTransformTextureMemory.test_affine_transform_texture_memory[_param_65_{mode='constant', order=0, output='empty', output_shape=None, shape=(100, 100), theta=90}] _

self = <<cupyx_tests.scipy_tests.ndimage_tests.test_interpolation.TestAffineTransformTextureMemory object at 0x7fd706f3b9d0>  parameter: {'mode': 'constant', 'order': 0, 'output': 'empty', 'output_shape': None, 'shape': (100, 100), 'theta': 90}>
xp = <module 'cupy' from '/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.Np3X0NVCM9/cupy/cupy/__init__.py'>
scp = <module 'cupyx.scipy' from '/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.Np3X0NVCM9/cupy/cupyx/scipy/__init__.py'>

    @testing.numpy_cupy_allclose(atol=0.1, scipy_name='scp')
    def test_affine_transform_texture_memory(self, xp, scp):
        a = xp.ones(self.shape, dtype=xp.float32)
        center = numpy.divide(numpy.subtract(self.shape, 1), 2)
    
        if len(self.shape) == 2:
            matrix = self._2d_rotation_matrix(self.theta, center)
        elif len(self.shape) == 3:
            matrix = self._3d_rotation_matrix(self.theta, center)
        else:
            return pytest.xfail('Unsupported shape')
    
        if self.output == 'empty':
            output = xp.empty(self.shape, dtype=xp.float32)
            if self.output_shape:
                return pytest.skip('This combination is tested in '
                                   'test_invalid_texture_arguments')
        else:
            output = self.output
    
        if self.output_shape:
            output_shape = (self.output_shape, ) * len(self.shape)
        else:
            output_shape = self.output_shape
    
        if xp == cupy:
            m = cupyx.scipy.ndimage.affine_transform
            matrix = cupy.array(matrix)
>           return m(a, matrix, output_shape=output_shape,
                     output=output, order=self.order,
                     mode=self.mode, texture_memory=True)

tests/cupyx_tests/scipy_tests/ndimage_tests/test_interpolation.py:398: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
cupyx/scipy/ndimage/interpolation.py:376: in affine_transform
    return _texture.affine_transformation(data=input,
cupyx/_texture.py:168: in affine_transformation
    texture_object = _create_texture_object(data,
cupyx/_texture.py:98: in _create_texture_object
    array = texture.CUDAarray(texture_fmt, *data.shape[::-1])
cupy/cuda/texture.pyx:296: in cupy.cuda.texture.CUDAarray.__init__
    self.ptr = runtime.malloc3DArray(desc.ptr, width, height, depth,
cupy_backends/cuda/api/runtime.pyx:593: in cupy_backends.cuda.api.runtime.malloc3DArray
    check_status(status)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

>   raise CUDARuntimeError(status)
E   AssertionError: Only cupy raises error
E   
E   Traceback (most recent call last):
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.Np3X0NVCM9/cupy/cupy/testing/_helper.py", line 47, in _call_func
E       result = impl(self, *args, **kw)
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.Np3X0NVCM9/cupy/tests/cupyx_tests/scipy_tests/ndimage_tests/test_interpolation.py", line 398, in test_affine_transform_texture_memory
E       return m(a, matrix, output_shape=output_shape,
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.Np3X0NVCM9/cupy/cupyx/scipy/ndimage/interpolation.py", line 376, in affine_transform
E       return _texture.affine_transformation(data=input,
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.Np3X0NVCM9/cupy/cupyx/_texture.py", line 168, in affine_transformation
E       texture_object = _create_texture_object(data,
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.Np3X0NVCM9/cupy/cupyx/_texture.py", line 98, in _create_texture_object
E       array = texture.CUDAarray(texture_fmt, *data.shape[::-1])
E     File "cupy/cuda/texture.pyx", line 296, in cupy.cuda.texture.CUDAarray.__init__
E       self.ptr = runtime.malloc3DArray(desc.ptr, width, height, depth,
E     File "cupy_backends/cuda/api/runtime.pyx", line 593, in cupy_backends.cuda.api.runtime.malloc3DArray
E       check_status(status)
E     File "cupy_backends/cuda/api/runtime.pyx", line 265, in cupy_backends.cuda.api.runtime.check_status
E       raise CUDARuntimeError(status)
E   cupy_backends.cuda.api.runtime.CUDARuntimeError: hipErrorUnknown: hipErrorUnknown

cupy_backends/cuda/api/runtime.pyx:265: AssertionError
----------------------------- Captured stderr call -----------------------------
Traceback (most recent call last):
  File "cupy_backends/cuda/api/runtime.pyx", line 644, in cupy_backends.cuda.api.runtime.freeArray
    check_status(status)
  File "cupy_backends/cuda/api/runtime.pyx", line 265, in cupy_backends.cuda.api.runtime.check_status
    raise CUDARuntimeError(status)
cupy_backends.cuda.api.runtime.CUDARuntimeError: hipErrorUnknown: hipErrorUnknown
_ TestAffineTransformTextureMemory.test_affine_transform_texture_memory[_param_66_{mode='constant', order=0, output='empty', output_shape=None, shape=(100, 100), theta=180}] _

self = <<cupyx_tests.scipy_tests.ndimage_tests.test_interpolation.TestAffineTransformTextureMemory object at 0x7fd7058b1460>  parameter: {'mode': 'constant', 'order': 0, 'output': 'empty', 'output_shape': None, 'shape': (100, 100), 'theta': 180}>
xp = <module 'cupy' from '/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.Np3X0NVCM9/cupy/cupy/__init__.py'>
scp = <module 'cupyx.scipy' from '/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.Np3X0NVCM9/cupy/cupyx/scipy/__init__.py'>

    @testing.numpy_cupy_allclose(atol=0.1, scipy_name='scp')
    def test_affine_transform_texture_memory(self, xp, scp):
        a = xp.ones(self.shape, dtype=xp.float32)
        center = numpy.divide(numpy.subtract(self.shape, 1), 2)
    
        if len(self.shape) == 2:
            matrix = self._2d_rotation_matrix(self.theta, center)
        elif len(self.shape) == 3:
            matrix = self._3d_rotation_matrix(self.theta, center)
        else:
            return pytest.xfail('Unsupported shape')
    
        if self.output == 'empty':
            output = xp.empty(self.shape, dtype=xp.float32)
            if self.output_shape:
                return pytest.skip('This combination is tested in '
                                   'test_invalid_texture_arguments')
        else:
            output = self.output
    
        if self.output_shape:
            output_shape = (self.output_shape, ) * len(self.shape)
        else:
            output_shape = self.output_shape
    
        if xp == cupy:
            m = cupyx.scipy.ndimage.affine_transform
            matrix = cupy.array(matrix)
>           return m(a, matrix, output_shape=output_shape,
                     output=output, order=self.order,
                     mode=self.mode, texture_memory=True)

tests/cupyx_tests/scipy_tests/ndimage_tests/test_interpolation.py:398: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
cupyx/scipy/ndimage/interpolation.py:376: in affine_transform
    return _texture.affine_transformation(data=input,
cupyx/_texture.py:168: in affine_transformation
    texture_object = _create_texture_object(data,
cupyx/_texture.py:98: in _create_texture_object
    array = texture.CUDAarray(texture_fmt, *data.shape[::-1])
cupy/cuda/texture.pyx:296: in cupy.cuda.texture.CUDAarray.__init__
    self.ptr = runtime.malloc3DArray(desc.ptr, width, height, depth,
cupy_backends/cuda/api/runtime.pyx:593: in cupy_backends.cuda.api.runtime.malloc3DArray
    check_status(status)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

>   raise CUDARuntimeError(status)
E   AssertionError: Only cupy raises error
E   
E   Traceback (most recent call last):
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.Np3X0NVCM9/cupy/cupy/testing/_helper.py", line 47, in _call_func
E       result = impl(self, *args, **kw)
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.Np3X0NVCM9/cupy/tests/cupyx_tests/scipy_tests/ndimage_tests/test_interpolation.py", line 398, in test_affine_transform_texture_memory
E       return m(a, matrix, output_shape=output_shape,
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.Np3X0NVCM9/cupy/cupyx/scipy/ndimage/interpolation.py", line 376, in affine_transform
E       return _texture.affine_transformation(data=input,
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.Np3X0NVCM9/cupy/cupyx/_texture.py", line 168, in affine_transformation
E       texture_object = _create_texture_object(data,
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.Np3X0NVCM9/cupy/cupyx/_texture.py", line 98, in _create_texture_object
E       array = texture.CUDAarray(texture_fmt, *data.shape[::-1])
E     File "cupy/cuda/texture.pyx", line 296, in cupy.cuda.texture.CUDAarray.__init__
E       self.ptr = runtime.malloc3DArray(desc.ptr, width, height, depth,
E     File "cupy_backends/cuda/api/runtime.pyx", line 593, in cupy_backends.cuda.api.runtime.malloc3DArray
E       check_status(status)
E     File "cupy_backends/cuda/api/runtime.pyx", line 265, in cupy_backends.cuda.api.runtime.check_status
E       raise CUDARuntimeError(status)
E   cupy_backends.cuda.api.runtime.CUDARuntimeError: hipErrorUnknown: hipErrorUnknown

cupy_backends/cuda/api/runtime.pyx:265: AssertionError
----------------------------- Captured stderr call -----------------------------
Traceback (most recent call last):
  File "cupy_backends/cuda/api/runtime.pyx", line 644, in cupy_backends.cuda.api.runtime.freeArray
    check_status(status)
  File "cupy_backends/cuda/api/runtime.pyx", line 265, in cupy_backends.cuda.api.runtime.check_status
    raise CUDARuntimeError(status)
cupy_backends.cuda.api.runtime.CUDARuntimeError: hipErrorUnknown: hipErrorUnknown
_ TestAffineTransformTextureMemory.test_affine_transform_texture_memory[_param_67_{mode='constant', order=0, output='empty', output_shape=None, shape=(100, 100), theta=270}] _

self = <<cupyx_tests.scipy_tests.ndimage_tests.test_interpolation.TestAffineTransformTextureMemory object at 0x7fd707ea5d30>  parameter: {'mode': 'constant', 'order': 0, 'output': 'empty', 'output_shape': None, 'shape': (100, 100), 'theta': 270}>
xp = <module 'cupy' from '/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.Np3X0NVCM9/cupy/cupy/__init__.py'>
scp = <module 'cupyx.scipy' from '/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.Np3X0NVCM9/cupy/cupyx/scipy/__init__.py'>

    @testing.numpy_cupy_allclose(atol=0.1, scipy_name='scp')
    def test_affine_transform_texture_memory(self, xp, scp):
        a = xp.ones(self.shape, dtype=xp.float32)
        center = numpy.divide(numpy.subtract(self.shape, 1), 2)
    
        if len(self.shape) == 2:
            matrix = self._2d_rotation_matrix(self.theta, center)
        elif len(self.shape) == 3:
            matrix = self._3d_rotation_matrix(self.theta, center)
        else:
            return pytest.xfail('Unsupported shape')
    
        if self.output == 'empty':
            output = xp.empty(self.shape, dtype=xp.float32)
            if self.output_shape:
                return pytest.skip('This combination is tested in '
                                   'test_invalid_texture_arguments')
        else:
            output = self.output
    
        if self.output_shape:
            output_shape = (self.output_shape, ) * len(self.shape)
        else:
            output_shape = self.output_shape
    
        if xp == cupy:
            m = cupyx.scipy.ndimage.affine_transform
            matrix = cupy.array(matrix)
>           return m(a, matrix, output_shape=output_shape,
                     output=output, order=self.order,
                     mode=self.mode, texture_memory=True)

tests/cupyx_tests/scipy_tests/ndimage_tests/test_interpolation.py:398: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
cupyx/scipy/ndimage/interpolation.py:376: in affine_transform
    return _texture.affine_transformation(data=input,
cupyx/_texture.py:168: in affine_transformation
    texture_object = _create_texture_object(data,
cupyx/_texture.py:98: in _create_texture_object
    array = texture.CUDAarray(texture_fmt, *data.shape[::-1])
cupy/cuda/texture.pyx:296: in cupy.cuda.texture.CUDAarray.__init__
    self.ptr = runtime.malloc3DArray(desc.ptr, width, height, depth,
cupy_backends/cuda/api/runtime.pyx:593: in cupy_backends.cuda.api.runtime.malloc3DArray
    check_status(status)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

>   raise CUDARuntimeError(status)
E   AssertionError: Only cupy raises error
E   
E   Traceback (most recent call last):
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.Np3X0NVCM9/cupy/cupy/testing/_helper.py", line 47, in _call_func
E       result = impl(self, *args, **kw)
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.Np3X0NVCM9/cupy/tests/cupyx_tests/scipy_tests/ndimage_tests/test_interpolation.py", line 398, in test_affine_transform_texture_memory
E       return m(a, matrix, output_shape=output_shape,
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.Np3X0NVCM9/cupy/cupyx/scipy/ndimage/interpolation.py", line 376, in affine_transform
E       return _texture.affine_transformation(data=input,
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.Np3X0NVCM9/cupy/cupyx/_texture.py", line 168, in affine_transformation
E       texture_object = _create_texture_object(data,
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.Np3X0NVCM9/cupy/cupyx/_texture.py", line 98, in _create_texture_object
E       array = texture.CUDAarray(texture_fmt, *data.shape[::-1])
E     File "cupy/cuda/texture.pyx", line 296, in cupy.cuda.texture.CUDAarray.__init__
E       self.ptr = runtime.malloc3DArray(desc.ptr, width, height, depth,
E     File "cupy_backends/cuda/api/runtime.pyx", line 593, in cupy_backends.cuda.api.runtime.malloc3DArray
E       check_status(status)
E     File "cupy_backends/cuda/api/runtime.pyx", line 265, in cupy_backends.cuda.api.runtime.check_status
E       raise CUDARuntimeError(status)
E   cupy_backends.cuda.api.runtime.CUDARuntimeError: hipErrorUnknown: hipErrorUnknown

cupy_backends/cuda/api/runtime.pyx:265: AssertionError
----------------------------- Captured stderr call -----------------------------
Traceback (most recent call last):
  File "cupy_backends/cuda/api/runtime.pyx", line 644, in cupy_backends.cuda.api.runtime.freeArray
    check_status(status)
  File "cupy_backends/cuda/api/runtime.pyx", line 265, in cupy_backends.cuda.api.runtime.check_status
    raise CUDARuntimeError(status)
cupy_backends.cuda.api.runtime.CUDARuntimeError: hipErrorUnknown: hipErrorUnknown
_ TestAffineTransformTextureMemory.test_affine_transform_texture_memory[_param_68_{mode='constant', order=0, output='empty', output_shape=None, shape=(10, 20), theta=0}] _

self = <<cupyx_tests.scipy_tests.ndimage_tests.test_interpolation.TestAffineTransformTextureMemory object at 0x7fd7061d8220>  parameter: {'mode': 'constant', 'order': 0, 'output': 'empty', 'output_shape': None, 'shape': (10, 20), 'theta': 0}>
xp = <module 'cupy' from '/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.Np3X0NVCM9/cupy/cupy/__init__.py'>
scp = <module 'cupyx.scipy' from '/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.Np3X0NVCM9/cupy/cupyx/scipy/__init__.py'>

    @testing.numpy_cupy_allclose(atol=0.1, scipy_name='scp')
    def test_affine_transform_texture_memory(self, xp, scp):
        a = xp.ones(self.shape, dtype=xp.float32)
        center = numpy.divide(numpy.subtract(self.shape, 1), 2)
    
        if len(self.shape) == 2:
            matrix = self._2d_rotation_matrix(self.theta, center)
        elif len(self.shape) == 3:
            matrix = self._3d_rotation_matrix(self.theta, center)
        else:
            return pytest.xfail('Unsupported shape')
    
        if self.output == 'empty':
            output = xp.empty(self.shape, dtype=xp.float32)
            if self.output_shape:
                return pytest.skip('This combination is tested in '
                                   'test_invalid_texture_arguments')
        else:
            output = self.output
    
        if self.output_shape:
            output_shape = (self.output_shape, ) * len(self.shape)
        else:
            output_shape = self.output_shape
    
        if xp == cupy:
            m = cupyx.scipy.ndimage.affine_transform
            matrix = cupy.array(matrix)
>           return m(a, matrix, output_shape=output_shape,
                     output=output, order=self.order,
                     mode=self.mode, texture_memory=True)

tests/cupyx_tests/scipy_tests/ndimage_tests/test_interpolation.py:398: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
cupyx/scipy/ndimage/interpolation.py:376: in affine_transform
    return _texture.affine_transformation(data=input,
cupyx/_texture.py:168: in affine_transformation
    texture_object = _create_texture_object(data,
cupyx/_texture.py:98: in _create_texture_object
    array = texture.CUDAarray(texture_fmt, *data.shape[::-1])
cupy/cuda/texture.pyx:296: in cupy.cuda.texture.CUDAarray.__init__
    self.ptr = runtime.malloc3DArray(desc.ptr, width, height, depth,
cupy_backends/cuda/api/runtime.pyx:593: in cupy_backends.cuda.api.runtime.malloc3DArray
    check_status(status)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

>   raise CUDARuntimeError(status)
E   AssertionError: Only cupy raises error
E   
E   Traceback (most recent call last):
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.Np3X0NVCM9/cupy/cupy/testing/_helper.py", line 47, in _call_func
E       result = impl(self, *args, **kw)
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.Np3X0NVCM9/cupy/tests/cupyx_tests/scipy_tests/ndimage_tests/test_interpolation.py", line 398, in test_affine_transform_texture_memory
E       return m(a, matrix, output_shape=output_shape,
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.Np3X0NVCM9/cupy/cupyx/scipy/ndimage/interpolation.py", line 376, in affine_transform
E       return _texture.affine_transformation(data=input,
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.Np3X0NVCM9/cupy/cupyx/_texture.py", line 168, in affine_transformation
E       texture_object = _create_texture_object(data,
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.Np3X0NVCM9/cupy/cupyx/_texture.py", line 98, in _create_texture_object
E       array = texture.CUDAarray(texture_fmt, *data.shape[::-1])
E     File "cupy/cuda/texture.pyx", line 296, in cupy.cuda.texture.CUDAarray.__init__
E       self.ptr = runtime.malloc3DArray(desc.ptr, width, height, depth,
E     File "cupy_backends/cuda/api/runtime.pyx", line 593, in cupy_backends.cuda.api.runtime.malloc3DArray
E       check_status(status)
E     File "cupy_backends/cuda/api/runtime.pyx", line 265, in cupy_backends.cuda.api.runtime.check_status
E       raise CUDARuntimeError(status)
E   cupy_backends.cuda.api.runtime.CUDARuntimeError: hipErrorUnknown: hipErrorUnknown

cupy_backends/cuda/api/runtime.pyx:265: AssertionError
----------------------------- Captured stderr call -----------------------------
Traceback (most recent call last):
  File "cupy_backends/cuda/api/runtime.pyx", line 644, in cupy_backends.cuda.api.runtime.freeArray
    check_status(status)
  File "cupy_backends/cuda/api/runtime.pyx", line 265, in cupy_backends.cuda.api.runtime.check_status
    raise CUDARuntimeError(status)
cupy_backends.cuda.api.runtime.CUDARuntimeError: hipErrorUnknown: hipErrorUnknown
_ TestAffineTransformTextureMemory.test_affine_transform_texture_memory[_param_69_{mode='constant', order=0, output='empty', output_shape=None, shape=(10, 20), theta=90}] _

self = <<cupyx_tests.scipy_tests.ndimage_tests.test_interpolation.TestAffineTransformTextureMemory object at 0x7fd7072d0640>  parameter: {'mode': 'constant', 'order': 0, 'output': 'empty', 'output_shape': None, 'shape': (10, 20), 'theta': 90}>
xp = <module 'cupy' from '/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.Np3X0NVCM9/cupy/cupy/__init__.py'>
scp = <module 'cupyx.scipy' from '/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.Np3X0NVCM9/cupy/cupyx/scipy/__init__.py'>

    @testing.numpy_cupy_allclose(atol=0.1, scipy_name='scp')
    def test_affine_transform_texture_memory(self, xp, scp):
        a = xp.ones(self.shape, dtype=xp.float32)
        center = numpy.divide(numpy.subtract(self.shape, 1), 2)
    
        if len(self.shape) == 2:
            matrix = self._2d_rotation_matrix(self.theta, center)
        elif len(self.shape) == 3:
            matrix = self._3d_rotation_matrix(self.theta, center)
        else:
            return pytest.xfail('Unsupported shape')
    
        if self.output == 'empty':
            output = xp.empty(self.shape, dtype=xp.float32)
            if self.output_shape:
                return pytest.skip('This combination is tested in '
                                   'test_invalid_texture_arguments')
        else:
            output = self.output
    
        if self.output_shape:
            output_shape = (self.output_shape, ) * len(self.shape)
        else:
            output_shape = self.output_shape
    
        if xp == cupy:
            m = cupyx.scipy.ndimage.affine_transform
            matrix = cupy.array(matrix)
>           return m(a, matrix, output_shape=output_shape,
                     output=output, order=self.order,
                     mode=self.mode, texture_memory=True)

tests/cupyx_tests/scipy_tests/ndimage_tests/test_interpolation.py:398: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
cupyx/scipy/ndimage/interpolation.py:376: in affine_transform
    return _texture.affine_transformation(data=input,
cupyx/_texture.py:168: in affine_transformation
    texture_object = _create_texture_object(data,
cupyx/_texture.py:98: in _create_texture_object
    array = texture.CUDAarray(texture_fmt, *data.shape[::-1])
cupy/cuda/texture.pyx:296: in cupy.cuda.texture.CUDAarray.__init__
    self.ptr = runtime.malloc3DArray(desc.ptr, width, height, depth,
cupy_backends/cuda/api/runtime.pyx:593: in cupy_backends.cuda.api.runtime.malloc3DArray
    check_status(status)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

>   raise CUDARuntimeError(status)
E   AssertionError: Only cupy raises error
E   
E   Traceback (most recent call last):
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.Np3X0NVCM9/cupy/cupy/testing/_helper.py", line 47, in _call_func
E       result = impl(self, *args, **kw)
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.Np3X0NVCM9/cupy/tests/cupyx_tests/scipy_tests/ndimage_tests/test_interpolation.py", line 398, in test_affine_transform_texture_memory
E       return m(a, matrix, output_shape=output_shape,
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.Np3X0NVCM9/cupy/cupyx/scipy/ndimage/interpolation.py", line 376, in affine_transform
E       return _texture.affine_transformation(data=input,
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.Np3X0NVCM9/cupy/cupyx/_texture.py", line 168, in affine_transformation
E       texture_object = _create_texture_object(data,
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.Np3X0NVCM9/cupy/cupyx/_texture.py", line 98, in _create_texture_object
E       array = texture.CUDAarray(texture_fmt, *data.shape[::-1])
E     File "cupy/cuda/texture.pyx", line 296, in cupy.cuda.texture.CUDAarray.__init__
E       self.ptr = runtime.malloc3DArray(desc.ptr, width, height, depth,
E     File "cupy_backends/cuda/api/runtime.pyx", line 593, in cupy_backends.cuda.api.runtime.malloc3DArray
E       check_status(status)
E     File "cupy_backends/cuda/api/runtime.pyx", line 265, in cupy_backends.cuda.api.runtime.check_status
E       raise CUDARuntimeError(status)
E   cupy_backends.cuda.api.runtime.CUDARuntimeError: hipErrorUnknown: hipErrorUnknown

cupy_backends/cuda/api/runtime.pyx:265: AssertionError
----------------------------- Captured stderr call -----------------------------
Traceback (most recent call last):
  File "cupy_backends/cuda/api/runtime.pyx", line 644, in cupy_backends.cuda.api.runtime.freeArray
    check_status(status)
  File "cupy_backends/cuda/api/runtime.pyx", line 265, in cupy_backends.cuda.api.runtime.check_status
    raise CUDARuntimeError(status)
cupy_backends.cuda.api.runtime.CUDARuntimeError: hipErrorUnknown: hipErrorUnknown
_ TestAffineTransformTextureMemory.test_affine_transform_texture_memory[_param_70_{mode='constant', order=0, output='empty', output_shape=None, shape=(10, 20), theta=180}] _

self = <<cupyx_tests.scipy_tests.ndimage_tests.test_interpolation.TestAffineTransformTextureMemory object at 0x7fd70790a850>  parameter: {'mode': 'constant', 'order': 0, 'output': 'empty', 'output_shape': None, 'shape': (10, 20), 'theta': 180}>
xp = <module 'cupy' from '/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.Np3X0NVCM9/cupy/cupy/__init__.py'>
scp = <module 'cupyx.scipy' from '/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.Np3X0NVCM9/cupy/cupyx/scipy/__init__.py'>

    @testing.numpy_cupy_allclose(atol=0.1, scipy_name='scp')
    def test_affine_transform_texture_memory(self, xp, scp):
        a = xp.ones(self.shape, dtype=xp.float32)
        center = numpy.divide(numpy.subtract(self.shape, 1), 2)
    
        if len(self.shape) == 2:
            matrix = self._2d_rotation_matrix(self.theta, center)
        elif len(self.shape) == 3:
            matrix = self._3d_rotation_matrix(self.theta, center)
        else:
            return pytest.xfail('Unsupported shape')
    
        if self.output == 'empty':
            output = xp.empty(self.shape, dtype=xp.float32)
            if self.output_shape:
                return pytest.skip('This combination is tested in '
                                   'test_invalid_texture_arguments')
        else:
            output = self.output
    
        if self.output_shape:
            output_shape = (self.output_shape, ) * len(self.shape)
        else:
            output_shape = self.output_shape
    
        if xp == cupy:
            m = cupyx.scipy.ndimage.affine_transform
            matrix = cupy.array(matrix)
>           return m(a, matrix, output_shape=output_shape,
                     output=output, order=self.order,
                     mode=self.mode, texture_memory=True)

tests/cupyx_tests/scipy_tests/ndimage_tests/test_interpolation.py:398: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
cupyx/scipy/ndimage/interpolation.py:376: in affine_transform
    return _texture.affine_transformation(data=input,
cupyx/_texture.py:168: in affine_transformation
    texture_object = _create_texture_object(data,
cupyx/_texture.py:98: in _create_texture_object
    array = texture.CUDAarray(texture_fmt, *data.shape[::-1])
cupy/cuda/texture.pyx:296: in cupy.cuda.texture.CUDAarray.__init__
    self.ptr = runtime.malloc3DArray(desc.ptr, width, height, depth,
cupy_backends/cuda/api/runtime.pyx:593: in cupy_backends.cuda.api.runtime.malloc3DArray
    check_status(status)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

>   raise CUDARuntimeError(status)
E   AssertionError: Only cupy raises error
E   
E   Traceback (most recent call last):
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.Np3X0NVCM9/cupy/cupy/testing/_helper.py", line 47, in _call_func
E       result = impl(self, *args, **kw)
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.Np3X0NVCM9/cupy/tests/cupyx_tests/scipy_tests/ndimage_tests/test_interpolation.py", line 398, in test_affine_transform_texture_memory
E       return m(a, matrix, output_shape=output_shape,
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.Np3X0NVCM9/cupy/cupyx/scipy/ndimage/interpolation.py", line 376, in affine_transform
E       return _texture.affine_transformation(data=input,
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.Np3X0NVCM9/cupy/cupyx/_texture.py", line 168, in affine_transformation
E       texture_object = _create_texture_object(data,
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.Np3X0NVCM9/cupy/cupyx/_texture.py", line 98, in _create_texture_object
E       array = texture.CUDAarray(texture_fmt, *data.shape[::-1])
E     File "cupy/cuda/texture.pyx", line 296, in cupy.cuda.texture.CUDAarray.__init__
E       self.ptr = runtime.malloc3DArray(desc.ptr, width, height, depth,
E     File "cupy_backends/cuda/api/runtime.pyx", line 593, in cupy_backends.cuda.api.runtime.malloc3DArray
E       check_status(status)
E     File "cupy_backends/cuda/api/runtime.pyx", line 265, in cupy_backends.cuda.api.runtime.check_status
E       raise CUDARuntimeError(status)
E   cupy_backends.cuda.api.runtime.CUDARuntimeError: hipErrorUnknown: hipErrorUnknown

cupy_backends/cuda/api/runtime.pyx:265: AssertionError
----------------------------- Captured stderr call -----------------------------
Traceback (most recent call last):
  File "cupy_backends/cuda/api/runtime.pyx", line 644, in cupy_backends.cuda.api.runtime.freeArray
    check_status(status)
  File "cupy_backends/cuda/api/runtime.pyx", line 265, in cupy_backends.cuda.api.runtime.check_status
    raise CUDARuntimeError(status)
cupy_backends.cuda.api.runtime.CUDARuntimeError: hipErrorUnknown: hipErrorUnknown
_ TestAffineTransformTextureMemory.test_affine_transform_texture_memory[_param_71_{mode='constant', order=0, output='empty', output_shape=None, shape=(10, 20), theta=270}] _

self = <<cupyx_tests.scipy_tests.ndimage_tests.test_interpolation.TestAffineTransformTextureMemory object at 0x7fd7057428b0>  parameter: {'mode': 'constant', 'order': 0, 'output': 'empty', 'output_shape': None, 'shape': (10, 20), 'theta': 270}>
xp = <module 'cupy' from '/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.Np3X0NVCM9/cupy/cupy/__init__.py'>
scp = <module 'cupyx.scipy' from '/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.Np3X0NVCM9/cupy/cupyx/scipy/__init__.py'>

    @testing.numpy_cupy_allclose(atol=0.1, scipy_name='scp')
    def test_affine_transform_texture_memory(self, xp, scp):
        a = xp.ones(self.shape, dtype=xp.float32)
        center = numpy.divide(numpy.subtract(self.shape, 1), 2)
    
        if len(self.shape) == 2:
            matrix = self._2d_rotation_matrix(self.theta, center)
        elif len(self.shape) == 3:
            matrix = self._3d_rotation_matrix(self.theta, center)
        else:
            return pytest.xfail('Unsupported shape')
    
        if self.output == 'empty':
            output = xp.empty(self.shape, dtype=xp.float32)
            if self.output_shape:
                return pytest.skip('This combination is tested in '
                                   'test_invalid_texture_arguments')
        else:
            output = self.output
    
        if self.output_shape:
            output_shape = (self.output_shape, ) * len(self.shape)
        else:
            output_shape = self.output_shape
    
        if xp == cupy:
            m = cupyx.scipy.ndimage.affine_transform
            matrix = cupy.array(matrix)
>           return m(a, matrix, output_shape=output_shape,
                     output=output, order=self.order,
                     mode=self.mode, texture_memory=True)

tests/cupyx_tests/scipy_tests/ndimage_tests/test_interpolation.py:398: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
cupyx/scipy/ndimage/interpolation.py:376: in affine_transform
    return _texture.affine_transformation(data=input,
cupyx/_texture.py:168: in affine_transformation
    texture_object = _create_texture_object(data,
cupyx/_texture.py:98: in _create_texture_object
    array = texture.CUDAarray(texture_fmt, *data.shape[::-1])
cupy/cuda/texture.pyx:296: in cupy.cuda.texture.CUDAarray.__init__
    self.ptr = runtime.malloc3DArray(desc.ptr, width, height, depth,
cupy_backends/cuda/api/runtime.pyx:593: in cupy_backends.cuda.api.runtime.malloc3DArray
    check_status(status)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

>   raise CUDARuntimeError(status)
E   AssertionError: Only cupy raises error
E   
E   Traceback (most recent call last):
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.Np3X0NVCM9/cupy/cupy/testing/_helper.py", line 47, in _call_func
E       result = impl(self, *args, **kw)
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.Np3X0NVCM9/cupy/tests/cupyx_tests/scipy_tests/ndimage_tests/test_interpolation.py", line 398, in test_affine_transform_texture_memory
E       return m(a, matrix, output_shape=output_shape,
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.Np3X0NVCM9/cupy/cupyx/scipy/ndimage/interpolation.py", line 376, in affine_transform
E       return _texture.affine_transformation(data=input,
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.Np3X0NVCM9/cupy/cupyx/_texture.py", line 168, in affine_transformation
E       texture_object = _create_texture_object(data,
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.Np3X0NVCM9/cupy/cupyx/_texture.py", line 98, in _create_texture_object
E       array = texture.CUDAarray(texture_fmt, *data.shape[::-1])
E     File "cupy/cuda/texture.pyx", line 296, in cupy.cuda.texture.CUDAarray.__init__
E       self.ptr = runtime.malloc3DArray(desc.ptr, width, height, depth,
E     File "cupy_backends/cuda/api/runtime.pyx", line 593, in cupy_backends.cuda.api.runtime.malloc3DArray
E       check_status(status)
E     File "cupy_backends/cuda/api/runtime.pyx", line 265, in cupy_backends.cuda.api.runtime.check_status
E       raise CUDARuntimeError(status)
E   cupy_backends.cuda.api.runtime.CUDARuntimeError: hipErrorUnknown: hipErrorUnknown

cupy_backends/cuda/api/runtime.pyx:265: AssertionError
----------------------------- Captured stderr call -----------------------------
Traceback (most recent call last):
  File "cupy_backends/cuda/api/runtime.pyx", line 644, in cupy_backends.cuda.api.runtime.freeArray
    check_status(status)
  File "cupy_backends/cuda/api/runtime.pyx", line 265, in cupy_backends.cuda.api.runtime.check_status
    raise CUDARuntimeError(status)
cupy_backends.cuda.api.runtime.CUDARuntimeError: hipErrorUnknown: hipErrorUnknown
_ TestAffineTransformTextureMemory.test_affine_transform_texture_memory[_param_72_{mode='constant', order=0, output='empty', output_shape=None, shape=(10, 10, 10), theta=0}] _

self = <<cupyx_tests.scipy_tests.ndimage_tests.test_interpolation.TestAffineTransformTextureMemory object at 0x7fd707921490>  parameter: {'mode': 'constant', 'order': 0, 'output': 'empty', 'output_shape': None, 'shape': (10, 10, 10), 'theta': 0}>
xp = <module 'cupy' from '/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.Np3X0NVCM9/cupy/cupy/__init__.py'>
scp = <module 'cupyx.scipy' from '/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.Np3X0NVCM9/cupy/cupyx/scipy/__init__.py'>

    @testing.numpy_cupy_allclose(atol=0.1, scipy_name='scp')
    def test_affine_transform_texture_memory(self, xp, scp):
        a = xp.ones(self.shape, dtype=xp.float32)
        center = numpy.divide(numpy.subtract(self.shape, 1), 2)
    
        if len(self.shape) == 2:
            matrix = self._2d_rotation_matrix(self.theta, center)
        elif len(self.shape) == 3:
            matrix = self._3d_rotation_matrix(self.theta, center)
        else:
            return pytest.xfail('Unsupported shape')
    
        if self.output == 'empty':
            output = xp.empty(self.shape, dtype=xp.float32)
            if self.output_shape:
                return pytest.skip('This combination is tested in '
                                   'test_invalid_texture_arguments')
        else:
            output = self.output
    
        if self.output_shape:
            output_shape = (self.output_shape, ) * len(self.shape)
        else:
            output_shape = self.output_shape
    
        if xp == cupy:
            m = cupyx.scipy.ndimage.affine_transform
            matrix = cupy.array(matrix)
>           return m(a, matrix, output_shape=output_shape,
                     output=output, order=self.order,
                     mode=self.mode, texture_memory=True)

tests/cupyx_tests/scipy_tests/ndimage_tests/test_interpolation.py:398: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
cupyx/scipy/ndimage/interpolation.py:376: in affine_transform
    return _texture.affine_transformation(data=input,
cupyx/_texture.py:168: in affine_transformation
    texture_object = _create_texture_object(data,
cupyx/_texture.py:98: in _create_texture_object
    array = texture.CUDAarray(texture_fmt, *data.shape[::-1])
cupy/cuda/texture.pyx:296: in cupy.cuda.texture.CUDAarray.__init__
    self.ptr = runtime.malloc3DArray(desc.ptr, width, height, depth,
cupy_backends/cuda/api/runtime.pyx:593: in cupy_backends.cuda.api.runtime.malloc3DArray
    check_status(status)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

>   raise CUDARuntimeError(status)
E   AssertionError: Only cupy raises error
E   
E   Traceback (most recent call last):
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.Np3X0NVCM9/cupy/cupy/testing/_helper.py", line 47, in _call_func
E       result = impl(self, *args, **kw)
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.Np3X0NVCM9/cupy/tests/cupyx_tests/scipy_tests/ndimage_tests/test_interpolation.py", line 398, in test_affine_transform_texture_memory
E       return m(a, matrix, output_shape=output_shape,
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.Np3X0NVCM9/cupy/cupyx/scipy/ndimage/interpolation.py", line 376, in affine_transform
E       return _texture.affine_transformation(data=input,
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.Np3X0NVCM9/cupy/cupyx/_texture.py", line 168, in affine_transformation
E       texture_object = _create_texture_object(data,
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.Np3X0NVCM9/cupy/cupyx/_texture.py", line 98, in _create_texture_object
E       array = texture.CUDAarray(texture_fmt, *data.shape[::-1])
E     File "cupy/cuda/texture.pyx", line 296, in cupy.cuda.texture.CUDAarray.__init__
E       self.ptr = runtime.malloc3DArray(desc.ptr, width, height, depth,
E     File "cupy_backends/cuda/api/runtime.pyx", line 593, in cupy_backends.cuda.api.runtime.malloc3DArray
E       check_status(status)
E     File "cupy_backends/cuda/api/runtime.pyx", line 265, in cupy_backends.cuda.api.runtime.check_status
E       raise CUDARuntimeError(status)
E   cupy_backends.cuda.api.runtime.CUDARuntimeError: hipErrorUnknown: hipErrorUnknown

cupy_backends/cuda/api/runtime.pyx:265: AssertionError
----------------------------- Captured stderr call -----------------------------
Traceback (most recent call last):
  File "cupy_backends/cuda/api/runtime.pyx", line 644, in cupy_backends.cuda.api.runtime.freeArray
    check_status(status)
  File "cupy_backends/cuda/api/runtime.pyx", line 265, in cupy_backends.cuda.api.runtime.check_status
    raise CUDARuntimeError(status)
cupy_backends.cuda.api.runtime.CUDARuntimeError: hipErrorUnknown: hipErrorUnknown
_ TestAffineTransformTextureMemory.test_affine_transform_texture_memory[_param_73_{mode='constant', order=0, output='empty', output_shape=None, shape=(10, 10, 10), theta=90}] _

self = <<cupyx_tests.scipy_tests.ndimage_tests.test_interpolation.TestAffineTransformTextureMemory object at 0x7fd70666e730>  parameter: {'mode': 'constant', 'order': 0, 'output': 'empty', 'output_shape': None, 'shape': (10, 10, 10), 'theta': 90}>
xp = <module 'cupy' from '/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.Np3X0NVCM9/cupy/cupy/__init__.py'>
scp = <module 'cupyx.scipy' from '/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.Np3X0NVCM9/cupy/cupyx/scipy/__init__.py'>

    @testing.numpy_cupy_allclose(atol=0.1, scipy_name='scp')
    def test_affine_transform_texture_memory(self, xp, scp):
        a = xp.ones(self.shape, dtype=xp.float32)
        center = numpy.divide(numpy.subtract(self.shape, 1), 2)
    
        if len(self.shape) == 2:
            matrix = self._2d_rotation_matrix(self.theta, center)
        elif len(self.shape) == 3:
            matrix = self._3d_rotation_matrix(self.theta, center)
        else:
            return pytest.xfail('Unsupported shape')
    
        if self.output == 'empty':
            output = xp.empty(self.shape, dtype=xp.float32)
            if self.output_shape:
                return pytest.skip('This combination is tested in '
                                   'test_invalid_texture_arguments')
        else:
            output = self.output
    
        if self.output_shape:
            output_shape = (self.output_shape, ) * len(self.shape)
        else:
            output_shape = self.output_shape
    
        if xp == cupy:
            m = cupyx.scipy.ndimage.affine_transform
            matrix = cupy.array(matrix)
>           return m(a, matrix, output_shape=output_shape,
                     output=output, order=self.order,
                     mode=self.mode, texture_memory=True)

tests/cupyx_tests/scipy_tests/ndimage_tests/test_interpolation.py:398: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
cupyx/scipy/ndimage/interpolation.py:376: in affine_transform
    return _texture.affine_transformation(data=input,
cupyx/_texture.py:168: in affine_transformation
    texture_object = _create_texture_object(data,
cupyx/_texture.py:98: in _create_texture_object
    array = texture.CUDAarray(texture_fmt, *data.shape[::-1])
cupy/cuda/texture.pyx:296: in cupy.cuda.texture.CUDAarray.__init__
    self.ptr = runtime.malloc3DArray(desc.ptr, width, height, depth,
cupy_backends/cuda/api/runtime.pyx:593: in cupy_backends.cuda.api.runtime.malloc3DArray
    check_status(status)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

>   raise CUDARuntimeError(status)
E   AssertionError: Only cupy raises error
E   
E   Traceback (most recent call last):
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.Np3X0NVCM9/cupy/cupy/testing/_helper.py", line 47, in _call_func
E       result = impl(self, *args, **kw)
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.Np3X0NVCM9/cupy/tests/cupyx_tests/scipy_tests/ndimage_tests/test_interpolation.py", line 398, in test_affine_transform_texture_memory
E       return m(a, matrix, output_shape=output_shape,
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.Np3X0NVCM9/cupy/cupyx/scipy/ndimage/interpolation.py", line 376, in affine_transform
E       return _texture.affine_transformation(data=input,
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.Np3X0NVCM9/cupy/cupyx/_texture.py", line 168, in affine_transformation
E       texture_object = _create_texture_object(data,
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.Np3X0NVCM9/cupy/cupyx/_texture.py", line 98, in _create_texture_object
E       array = texture.CUDAarray(texture_fmt, *data.shape[::-1])
E     File "cupy/cuda/texture.pyx", line 296, in cupy.cuda.texture.CUDAarray.__init__
E       self.ptr = runtime.malloc3DArray(desc.ptr, width, height, depth,
E     File "cupy_backends/cuda/api/runtime.pyx", line 593, in cupy_backends.cuda.api.runtime.malloc3DArray
E       check_status(status)
E     File "cupy_backends/cuda/api/runtime.pyx", line 265, in cupy_backends.cuda.api.runtime.check_status
E       raise CUDARuntimeError(status)
E   cupy_backends.cuda.api.runtime.CUDARuntimeError: hipErrorUnknown: hipErrorUnknown

cupy_backends/cuda/api/runtime.pyx:265: AssertionError
----------------------------- Captured stderr call -----------------------------
Traceback (most recent call last):
  File "cupy_backends/cuda/api/runtime.pyx", line 644, in cupy_backends.cuda.api.runtime.freeArray
    check_status(status)
  File "cupy_backends/cuda/api/runtime.pyx", line 265, in cupy_backends.cuda.api.runtime.check_status
    raise CUDARuntimeError(status)
cupy_backends.cuda.api.runtime.CUDARuntimeError: hipErrorUnknown: hipErrorUnknown
_ TestAffineTransformTextureMemory.test_affine_transform_texture_memory[_param_74_{mode='constant', order=0, output='empty', output_shape=None, shape=(10, 10, 10), theta=180}] _

self = <<cupyx_tests.scipy_tests.ndimage_tests.test_interpolation.TestAffineTransformTextureMemory object at 0x7fd705a7b5b0> ...ameter: {'mode': 'constant', 'order': 0, 'output': 'empty', 'output_shape': None, 'shape': (10, 10, 10), 'theta': 180}>
xp = <module 'cupy' from '/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.Np3X0NVCM9/cupy/cupy/__init__.py'>
scp = <module 'cupyx.scipy' from '/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.Np3X0NVCM9/cupy/cupyx/scipy/__init__.py'>

    @testing.numpy_cupy_allclose(atol=0.1, scipy_name='scp')
    def test_affine_transform_texture_memory(self, xp, scp):
        a = xp.ones(self.shape, dtype=xp.float32)
        center = numpy.divide(numpy.subtract(self.shape, 1), 2)
    
        if len(self.shape) == 2:
            matrix = self._2d_rotation_matrix(self.theta, center)
        elif len(self.shape) == 3:
            matrix = self._3d_rotation_matrix(self.theta, center)
        else:
            return pytest.xfail('Unsupported shape')
    
        if self.output == 'empty':
            output = xp.empty(self.shape, dtype=xp.float32)
            if self.output_shape:
                return pytest.skip('This combination is tested in '
                                   'test_invalid_texture_arguments')
        else:
            output = self.output
    
        if self.output_shape:
            output_shape = (self.output_shape, ) * len(self.shape)
        else:
            output_shape = self.output_shape
    
        if xp == cupy:
            m = cupyx.scipy.ndimage.affine_transform
            matrix = cupy.array(matrix)
>           return m(a, matrix, output_shape=output_shape,
                     output=output, order=self.order,
                     mode=self.mode, texture_memory=True)

tests/cupyx_tests/scipy_tests/ndimage_tests/test_interpolation.py:398: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
cupyx/scipy/ndimage/interpolation.py:376: in affine_transform
    return _texture.affine_transformation(data=input,
cupyx/_texture.py:168: in affine_transformation
    texture_object = _create_texture_object(data,
cupyx/_texture.py:98: in _create_texture_object
    array = texture.CUDAarray(texture_fmt, *data.shape[::-1])
cupy/cuda/texture.pyx:296: in cupy.cuda.texture.CUDAarray.__init__
    self.ptr = runtime.malloc3DArray(desc.ptr, width, height, depth,
cupy_backends/cuda/api/runtime.pyx:593: in cupy_backends.cuda.api.runtime.malloc3DArray
    check_status(status)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

>   raise CUDARuntimeError(status)
E   AssertionError: Only cupy raises error
E   
E   Traceback (most recent call last):
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.Np3X0NVCM9/cupy/cupy/testing/_helper.py", line 47, in _call_func
E       result = impl(self, *args, **kw)
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.Np3X0NVCM9/cupy/tests/cupyx_tests/scipy_tests/ndimage_tests/test_interpolation.py", line 398, in test_affine_transform_texture_memory
E       return m(a, matrix, output_shape=output_shape,
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.Np3X0NVCM9/cupy/cupyx/scipy/ndimage/interpolation.py", line 376, in affine_transform
E       return _texture.affine_transformation(data=input,
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.Np3X0NVCM9/cupy/cupyx/_texture.py", line 168, in affine_transformation
E       texture_object = _create_texture_object(data,
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.Np3X0NVCM9/cupy/cupyx/_texture.py", line 98, in _create_texture_object
E       array = texture.CUDAarray(texture_fmt, *data.shape[::-1])
E     File "cupy/cuda/texture.pyx", line 296, in cupy.cuda.texture.CUDAarray.__init__
E       self.ptr = runtime.malloc3DArray(desc.ptr, width, height, depth,
E     File "cupy_backends/cuda/api/runtime.pyx", line 593, in cupy_backends.cuda.api.runtime.malloc3DArray
E       check_status(status)
E     File "cupy_backends/cuda/api/runtime.pyx", line 265, in cupy_backends.cuda.api.runtime.check_status
E       raise CUDARuntimeError(status)
E   cupy_backends.cuda.api.runtime.CUDARuntimeError: hipErrorUnknown: hipErrorUnknown

cupy_backends/cuda/api/runtime.pyx:265: AssertionError
----------------------------- Captured stderr call -----------------------------
Traceback (most recent call last):
  File "cupy_backends/cuda/api/runtime.pyx", line 644, in cupy_backends.cuda.api.runtime.freeArray
    check_status(status)
  File "cupy_backends/cuda/api/runtime.pyx", line 265, in cupy_backends.cuda.api.runtime.check_status
    raise CUDARuntimeError(status)
cupy_backends.cuda.api.runtime.CUDARuntimeError: hipErrorUnknown: hipErrorUnknown
_ TestAffineTransformTextureMemory.test_affine_transform_texture_memory[_param_75_{mode='constant', order=0, output='empty', output_shape=None, shape=(10, 10, 10), theta=270}] _

self = <<cupyx_tests.scipy_tests.ndimage_tests.test_interpolation.TestAffineTransformTextureMemory object at 0x7fd707933b80> ...ameter: {'mode': 'constant', 'order': 0, 'output': 'empty', 'output_shape': None, 'shape': (10, 10, 10), 'theta': 270}>
xp = <module 'cupy' from '/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.Np3X0NVCM9/cupy/cupy/__init__.py'>
scp = <module 'cupyx.scipy' from '/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.Np3X0NVCM9/cupy/cupyx/scipy/__init__.py'>

    @testing.numpy_cupy_allclose(atol=0.1, scipy_name='scp')
    def test_affine_transform_texture_memory(self, xp, scp):
        a = xp.ones(self.shape, dtype=xp.float32)
        center = numpy.divide(numpy.subtract(self.shape, 1), 2)
    
        if len(self.shape) == 2:
            matrix = self._2d_rotation_matrix(self.theta, center)
        elif len(self.shape) == 3:
            matrix = self._3d_rotation_matrix(self.theta, center)
        else:
            return pytest.xfail('Unsupported shape')
    
        if self.output == 'empty':
            output = xp.empty(self.shape, dtype=xp.float32)
            if self.output_shape:
                return pytest.skip('This combination is tested in '
                                   'test_invalid_texture_arguments')
        else:
            output = self.output
    
        if self.output_shape:
            output_shape = (self.output_shape, ) * len(self.shape)
        else:
            output_shape = self.output_shape
    
        if xp == cupy:
            m = cupyx.scipy.ndimage.affine_transform
            matrix = cupy.array(matrix)
>           return m(a, matrix, output_shape=output_shape,
                     output=output, order=self.order,
                     mode=self.mode, texture_memory=True)

tests/cupyx_tests/scipy_tests/ndimage_tests/test_interpolation.py:398: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
cupyx/scipy/ndimage/interpolation.py:376: in affine_transform
    return _texture.affine_transformation(data=input,
cupyx/_texture.py:168: in affine_transformation
    texture_object = _create_texture_object(data,
cupyx/_texture.py:98: in _create_texture_object
    array = texture.CUDAarray(texture_fmt, *data.shape[::-1])
cupy/cuda/texture.pyx:296: in cupy.cuda.texture.CUDAarray.__init__
    self.ptr = runtime.malloc3DArray(desc.ptr, width, height, depth,
cupy_backends/cuda/api/runtime.pyx:593: in cupy_backends.cuda.api.runtime.malloc3DArray
    check_status(status)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

>   raise CUDARuntimeError(status)
E   AssertionError: Only cupy raises error
E   
E   Traceback (most recent call last):
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.Np3X0NVCM9/cupy/cupy/testing/_helper.py", line 47, in _call_func
E       result = impl(self, *args, **kw)
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.Np3X0NVCM9/cupy/tests/cupyx_tests/scipy_tests/ndimage_tests/test_interpolation.py", line 398, in test_affine_transform_texture_memory
E       return m(a, matrix, output_shape=output_shape,
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.Np3X0NVCM9/cupy/cupyx/scipy/ndimage/interpolation.py", line 376, in affine_transform
E       return _texture.affine_transformation(data=input,
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.Np3X0NVCM9/cupy/cupyx/_texture.py", line 168, in affine_transformation
E       texture_object = _create_texture_object(data,
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.Np3X0NVCM9/cupy/cupyx/_texture.py", line 98, in _create_texture_object
E       array = texture.CUDAarray(texture_fmt, *data.shape[::-1])
E     File "cupy/cuda/texture.pyx", line 296, in cupy.cuda.texture.CUDAarray.__init__
E       self.ptr = runtime.malloc3DArray(desc.ptr, width, height, depth,
E     File "cupy_backends/cuda/api/runtime.pyx", line 593, in cupy_backends.cuda.api.runtime.malloc3DArray
E       check_status(status)
E     File "cupy_backends/cuda/api/runtime.pyx", line 265, in cupy_backends.cuda.api.runtime.check_status
E       raise CUDARuntimeError(status)
E   cupy_backends.cuda.api.runtime.CUDARuntimeError: hipErrorUnknown: hipErrorUnknown

cupy_backends/cuda/api/runtime.pyx:265: AssertionError
----------------------------- Captured stderr call -----------------------------
Traceback (most recent call last):
  File "cupy_backends/cuda/api/runtime.pyx", line 644, in cupy_backends.cuda.api.runtime.freeArray
    check_status(status)
  File "cupy_backends/cuda/api/runtime.pyx", line 265, in cupy_backends.cuda.api.runtime.check_status
    raise CUDARuntimeError(status)
cupy_backends.cuda.api.runtime.CUDARuntimeError: hipErrorUnknown: hipErrorUnknown
_ TestAffineTransformTextureMemory.test_affine_transform_texture_memory[_param_76_{mode='constant', order=0, output='empty', output_shape=None, shape=(10, 20, 30), theta=0}] _

self = <<cupyx_tests.scipy_tests.ndimage_tests.test_interpolation.TestAffineTransformTextureMemory object at 0x7fd705a03d30>  parameter: {'mode': 'constant', 'order': 0, 'output': 'empty', 'output_shape': None, 'shape': (10, 20, 30), 'theta': 0}>
xp = <module 'cupy' from '/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.Np3X0NVCM9/cupy/cupy/__init__.py'>
scp = <module 'cupyx.scipy' from '/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.Np3X0NVCM9/cupy/cupyx/scipy/__init__.py'>

    @testing.numpy_cupy_allclose(atol=0.1, scipy_name='scp')
    def test_affine_transform_texture_memory(self, xp, scp):
        a = xp.ones(self.shape, dtype=xp.float32)
        center = numpy.divide(numpy.subtract(self.shape, 1), 2)
    
        if len(self.shape) == 2:
            matrix = self._2d_rotation_matrix(self.theta, center)
        elif len(self.shape) == 3:
            matrix = self._3d_rotation_matrix(self.theta, center)
        else:
            return pytest.xfail('Unsupported shape')
    
        if self.output == 'empty':
            output = xp.empty(self.shape, dtype=xp.float32)
            if self.output_shape:
                return pytest.skip('This combination is tested in '
                                   'test_invalid_texture_arguments')
        else:
            output = self.output
    
        if self.output_shape:
            output_shape = (self.output_shape, ) * len(self.shape)
        else:
            output_shape = self.output_shape
    
        if xp == cupy:
            m = cupyx.scipy.ndimage.affine_transform
            matrix = cupy.array(matrix)
>           return m(a, matrix, output_shape=output_shape,
                     output=output, order=self.order,
                     mode=self.mode, texture_memory=True)

tests/cupyx_tests/scipy_tests/ndimage_tests/test_interpolation.py:398: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
cupyx/scipy/ndimage/interpolation.py:376: in affine_transform
    return _texture.affine_transformation(data=input,
cupyx/_texture.py:168: in affine_transformation
    texture_object = _create_texture_object(data,
cupyx/_texture.py:98: in _create_texture_object
    array = texture.CUDAarray(texture_fmt, *data.shape[::-1])
cupy/cuda/texture.pyx:296: in cupy.cuda.texture.CUDAarray.__init__
    self.ptr = runtime.malloc3DArray(desc.ptr, width, height, depth,
cupy_backends/cuda/api/runtime.pyx:593: in cupy_backends.cuda.api.runtime.malloc3DArray
    check_status(status)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

>   raise CUDARuntimeError(status)
E   AssertionError: Only cupy raises error
E   
E   Traceback (most recent call last):
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.Np3X0NVCM9/cupy/cupy/testing/_helper.py", line 47, in _call_func
E       result = impl(self, *args, **kw)
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.Np3X0NVCM9/cupy/tests/cupyx_tests/scipy_tests/ndimage_tests/test_interpolation.py", line 398, in test_affine_transform_texture_memory
E       return m(a, matrix, output_shape=output_shape,
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.Np3X0NVCM9/cupy/cupyx/scipy/ndimage/interpolation.py", line 376, in affine_transform
E       return _texture.affine_transformation(data=input,
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.Np3X0NVCM9/cupy/cupyx/_texture.py", line 168, in affine_transformation
E       texture_object = _create_texture_object(data,
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.Np3X0NVCM9/cupy/cupyx/_texture.py", line 98, in _create_texture_object
E       array = texture.CUDAarray(texture_fmt, *data.shape[::-1])
E     File "cupy/cuda/texture.pyx", line 296, in cupy.cuda.texture.CUDAarray.__init__
E       self.ptr = runtime.malloc3DArray(desc.ptr, width, height, depth,
E     File "cupy_backends/cuda/api/runtime.pyx", line 593, in cupy_backends.cuda.api.runtime.malloc3DArray
E       check_status(status)
E     File "cupy_backends/cuda/api/runtime.pyx", line 265, in cupy_backends.cuda.api.runtime.check_status
E       raise CUDARuntimeError(status)
E   cupy_backends.cuda.api.runtime.CUDARuntimeError: hipErrorUnknown: hipErrorUnknown

cupy_backends/cuda/api/runtime.pyx:265: AssertionError
----------------------------- Captured stderr call -----------------------------
Traceback (most recent call last):
  File "cupy_backends/cuda/api/runtime.pyx", line 644, in cupy_backends.cuda.api.runtime.freeArray
    check_status(status)
  File "cupy_backends/cuda/api/runtime.pyx", line 265, in cupy_backends.cuda.api.runtime.check_status
    raise CUDARuntimeError(status)
cupy_backends.cuda.api.runtime.CUDARuntimeError: hipErrorUnknown: hipErrorUnknown
_ TestAffineTransformTextureMemory.test_affine_transform_texture_memory[_param_77_{mode='constant', order=0, output='empty', output_shape=None, shape=(10, 20, 30), theta=90}] _

self = <<cupyx_tests.scipy_tests.ndimage_tests.test_interpolation.TestAffineTransformTextureMemory object at 0x7fd7057c4790>  parameter: {'mode': 'constant', 'order': 0, 'output': 'empty', 'output_shape': None, 'shape': (10, 20, 30), 'theta': 90}>
xp = <module 'cupy' from '/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.Np3X0NVCM9/cupy/cupy/__init__.py'>
scp = <module 'cupyx.scipy' from '/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.Np3X0NVCM9/cupy/cupyx/scipy/__init__.py'>

    @testing.numpy_cupy_allclose(atol=0.1, scipy_name='scp')
    def test_affine_transform_texture_memory(self, xp, scp):
        a = xp.ones(self.shape, dtype=xp.float32)
        center = numpy.divide(numpy.subtract(self.shape, 1), 2)
    
        if len(self.shape) == 2:
            matrix = self._2d_rotation_matrix(self.theta, center)
        elif len(self.shape) == 3:
            matrix = self._3d_rotation_matrix(self.theta, center)
        else:
            return pytest.xfail('Unsupported shape')
    
        if self.output == 'empty':
            output = xp.empty(self.shape, dtype=xp.float32)
            if self.output_shape:
                return pytest.skip('This combination is tested in '
                                   'test_invalid_texture_arguments')
        else:
            output = self.output
    
        if self.output_shape:
            output_shape = (self.output_shape, ) * len(self.shape)
        else:
            output_shape = self.output_shape
    
        if xp == cupy:
            m = cupyx.scipy.ndimage.affine_transform
            matrix = cupy.array(matrix)
>           return m(a, matrix, output_shape=output_shape,
                     output=output, order=self.order,
                     mode=self.mode, texture_memory=True)

tests/cupyx_tests/scipy_tests/ndimage_tests/test_interpolation.py:398: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
cupyx/scipy/ndimage/interpolation.py:376: in affine_transform
    return _texture.affine_transformation(data=input,
cupyx/_texture.py:168: in affine_transformation
    texture_object = _create_texture_object(data,
cupyx/_texture.py:98: in _create_texture_object
    array = texture.CUDAarray(texture_fmt, *data.shape[::-1])
cupy/cuda/texture.pyx:296: in cupy.cuda.texture.CUDAarray.__init__
    self.ptr = runtime.malloc3DArray(desc.ptr, width, height, depth,
cupy_backends/cuda/api/runtime.pyx:593: in cupy_backends.cuda.api.runtime.malloc3DArray
    check_status(status)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

>   raise CUDARuntimeError(status)
E   AssertionError: Only cupy raises error
E   
E   Traceback (most recent call last):
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.Np3X0NVCM9/cupy/cupy/testing/_helper.py", line 47, in _call_func
E       result = impl(self, *args, **kw)
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.Np3X0NVCM9/cupy/tests/cupyx_tests/scipy_tests/ndimage_tests/test_interpolation.py", line 398, in test_affine_transform_texture_memory
E       return m(a, matrix, output_shape=output_shape,
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.Np3X0NVCM9/cupy/cupyx/scipy/ndimage/interpolation.py", line 376, in affine_transform
E       return _texture.affine_transformation(data=input,
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.Np3X0NVCM9/cupy/cupyx/_texture.py", line 168, in affine_transformation
E       texture_object = _create_texture_object(data,
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.Np3X0NVCM9/cupy/cupyx/_texture.py", line 98, in _create_texture_object
E       array = texture.CUDAarray(texture_fmt, *data.shape[::-1])
E     File "cupy/cuda/texture.pyx", line 296, in cupy.cuda.texture.CUDAarray.__init__
E       self.ptr = runtime.malloc3DArray(desc.ptr, width, height, depth,
E     File "cupy_backends/cuda/api/runtime.pyx", line 593, in cupy_backends.cuda.api.runtime.malloc3DArray
E       check_status(status)
E     File "cupy_backends/cuda/api/runtime.pyx", line 265, in cupy_backends.cuda.api.runtime.check_status
E       raise CUDARuntimeError(status)
E   cupy_backends.cuda.api.runtime.CUDARuntimeError: hipErrorUnknown: hipErrorUnknown

cupy_backends/cuda/api/runtime.pyx:265: AssertionError
----------------------------- Captured stderr call -----------------------------
Traceback (most recent call last):
  File "cupy_backends/cuda/api/runtime.pyx", line 644, in cupy_backends.cuda.api.runtime.freeArray
    check_status(status)
  File "cupy_backends/cuda/api/runtime.pyx", line 265, in cupy_backends.cuda.api.runtime.check_status
    raise CUDARuntimeError(status)
cupy_backends.cuda.api.runtime.CUDARuntimeError: hipErrorUnknown: hipErrorUnknown
_ TestAffineTransformTextureMemory.test_affine_transform_texture_memory[_param_78_{mode='constant', order=0, output='empty', output_shape=None, shape=(10, 20, 30), theta=180}] _

self = <<cupyx_tests.scipy_tests.ndimage_tests.test_interpolation.TestAffineTransformTextureMemory object at 0x7fd70649d400> ...ameter: {'mode': 'constant', 'order': 0, 'output': 'empty', 'output_shape': None, 'shape': (10, 20, 30), 'theta': 180}>
xp = <module 'cupy' from '/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.Np3X0NVCM9/cupy/cupy/__init__.py'>
scp = <module 'cupyx.scipy' from '/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.Np3X0NVCM9/cupy/cupyx/scipy/__init__.py'>

    @testing.numpy_cupy_allclose(atol=0.1, scipy_name='scp')
    def test_affine_transform_texture_memory(self, xp, scp):
        a = xp.ones(self.shape, dtype=xp.float32)
        center = numpy.divide(numpy.subtract(self.shape, 1), 2)
    
        if len(self.shape) == 2:
            matrix = self._2d_rotation_matrix(self.theta, center)
        elif len(self.shape) == 3:
            matrix = self._3d_rotation_matrix(self.theta, center)
        else:
            return pytest.xfail('Unsupported shape')
    
        if self.output == 'empty':
            output = xp.empty(self.shape, dtype=xp.float32)
            if self.output_shape:
                return pytest.skip('This combination is tested in '
                                   'test_invalid_texture_arguments')
        else:
            output = self.output
    
        if self.output_shape:
            output_shape = (self.output_shape, ) * len(self.shape)
        else:
            output_shape = self.output_shape
    
        if xp == cupy:
            m = cupyx.scipy.ndimage.affine_transform
            matrix = cupy.array(matrix)
>           return m(a, matrix, output_shape=output_shape,
                     output=output, order=self.order,
                     mode=self.mode, texture_memory=True)

tests/cupyx_tests/scipy_tests/ndimage_tests/test_interpolation.py:398: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
cupyx/scipy/ndimage/interpolation.py:376: in affine_transform
    return _texture.affine_transformation(data=input,
cupyx/_texture.py:168: in affine_transformation
    texture_object = _create_texture_object(data,
cupyx/_texture.py:98: in _create_texture_object
    array = texture.CUDAarray(texture_fmt, *data.shape[::-1])
cupy/cuda/texture.pyx:296: in cupy.cuda.texture.CUDAarray.__init__
    self.ptr = runtime.malloc3DArray(desc.ptr, width, height, depth,
cupy_backends/cuda/api/runtime.pyx:593: in cupy_backends.cuda.api.runtime.malloc3DArray
    check_status(status)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

>   raise CUDARuntimeError(status)
E   AssertionError: Only cupy raises error
E   
E   Traceback (most recent call last):
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.Np3X0NVCM9/cupy/cupy/testing/_helper.py", line 47, in _call_func
E       result = impl(self, *args, **kw)
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.Np3X0NVCM9/cupy/tests/cupyx_tests/scipy_tests/ndimage_tests/test_interpolation.py", line 398, in test_affine_transform_texture_memory
E       return m(a, matrix, output_shape=output_shape,
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.Np3X0NVCM9/cupy/cupyx/scipy/ndimage/interpolation.py", line 376, in affine_transform
E       return _texture.affine_transformation(data=input,
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.Np3X0NVCM9/cupy/cupyx/_texture.py", line 168, in affine_transformation
E       texture_object = _create_texture_object(data,
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.Np3X0NVCM9/cupy/cupyx/_texture.py", line 98, in _create_texture_object
E       array = texture.CUDAarray(texture_fmt, *data.shape[::-1])
E     File "cupy/cuda/texture.pyx", line 296, in cupy.cuda.texture.CUDAarray.__init__
E       self.ptr = runtime.malloc3DArray(desc.ptr, width, height, depth,
E     File "cupy_backends/cuda/api/runtime.pyx", line 593, in cupy_backends.cuda.api.runtime.malloc3DArray
E       check_status(status)
E     File "cupy_backends/cuda/api/runtime.pyx", line 265, in cupy_backends.cuda.api.runtime.check_status
E       raise CUDARuntimeError(status)
E   cupy_backends.cuda.api.runtime.CUDARuntimeError: hipErrorUnknown: hipErrorUnknown

cupy_backends/cuda/api/runtime.pyx:265: AssertionError
----------------------------- Captured stderr call -----------------------------
Traceback (most recent call last):
  File "cupy_backends/cuda/api/runtime.pyx", line 644, in cupy_backends.cuda.api.runtime.freeArray
    check_status(status)
  File "cupy_backends/cuda/api/runtime.pyx", line 265, in cupy_backends.cuda.api.runtime.check_status
    raise CUDARuntimeError(status)
cupy_backends.cuda.api.runtime.CUDARuntimeError: hipErrorUnknown: hipErrorUnknown
_ TestAffineTransformTextureMemory.test_affine_transform_texture_memory[_param_79_{mode='constant', order=0, output='empty', output_shape=None, shape=(10, 20, 30), theta=270}] _

self = <<cupyx_tests.scipy_tests.ndimage_tests.test_interpolation.TestAffineTransformTextureMemory object at 0x7fd7056cc1c0> ...ameter: {'mode': 'constant', 'order': 0, 'output': 'empty', 'output_shape': None, 'shape': (10, 20, 30), 'theta': 270}>
xp = <module 'cupy' from '/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.Np3X0NVCM9/cupy/cupy/__init__.py'>
scp = <module 'cupyx.scipy' from '/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.Np3X0NVCM9/cupy/cupyx/scipy/__init__.py'>

    @testing.numpy_cupy_allclose(atol=0.1, scipy_name='scp')
    def test_affine_transform_texture_memory(self, xp, scp):
        a = xp.ones(self.shape, dtype=xp.float32)
        center = numpy.divide(numpy.subtract(self.shape, 1), 2)
    
        if len(self.shape) == 2:
            matrix = self._2d_rotation_matrix(self.theta, center)
        elif len(self.shape) == 3:
            matrix = self._3d_rotation_matrix(self.theta, center)
        else:
            return pytest.xfail('Unsupported shape')
    
        if self.output == 'empty':
            output = xp.empty(self.shape, dtype=xp.float32)
            if self.output_shape:
                return pytest.skip('This combination is tested in '
                                   'test_invalid_texture_arguments')
        else:
            output = self.output
    
        if self.output_shape:
            output_shape = (self.output_shape, ) * len(self.shape)
        else:
            output_shape = self.output_shape
    
        if xp == cupy:
            m = cupyx.scipy.ndimage.affine_transform
            matrix = cupy.array(matrix)
>           return m(a, matrix, output_shape=output_shape,
                     output=output, order=self.order,
                     mode=self.mode, texture_memory=True)

tests/cupyx_tests/scipy_tests/ndimage_tests/test_interpolation.py:398: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
cupyx/scipy/ndimage/interpolation.py:376: in affine_transform
    return _texture.affine_transformation(data=input,
cupyx/_texture.py:168: in affine_transformation
    texture_object = _create_texture_object(data,
cupyx/_texture.py:98: in _create_texture_object
    array = texture.CUDAarray(texture_fmt, *data.shape[::-1])
cupy/cuda/texture.pyx:296: in cupy.cuda.texture.CUDAarray.__init__
    self.ptr = runtime.malloc3DArray(desc.ptr, width, height, depth,
cupy_backends/cuda/api/runtime.pyx:593: in cupy_backends.cuda.api.runtime.malloc3DArray
    check_status(status)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

>   raise CUDARuntimeError(status)
E   AssertionError: Only cupy raises error
E   
E   Traceback (most recent call last):
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.Np3X0NVCM9/cupy/cupy/testing/_helper.py", line 47, in _call_func
E       result = impl(self, *args, **kw)
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.Np3X0NVCM9/cupy/tests/cupyx_tests/scipy_tests/ndimage_tests/test_interpolation.py", line 398, in test_affine_transform_texture_memory
E       return m(a, matrix, output_shape=output_shape,
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.Np3X0NVCM9/cupy/cupyx/scipy/ndimage/interpolation.py", line 376, in affine_transform
E       return _texture.affine_transformation(data=input,
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.Np3X0NVCM9/cupy/cupyx/_texture.py", line 168, in affine_transformation
E       texture_object = _create_texture_object(data,
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.Np3X0NVCM9/cupy/cupyx/_texture.py", line 98, in _create_texture_object
E       array = texture.CUDAarray(texture_fmt, *data.shape[::-1])
E     File "cupy/cuda/texture.pyx", line 296, in cupy.cuda.texture.CUDAarray.__init__
E       self.ptr = runtime.malloc3DArray(desc.ptr, width, height, depth,
E     File "cupy_backends/cuda/api/runtime.pyx", line 593, in cupy_backends.cuda.api.runtime.malloc3DArray
E       check_status(status)
E     File "cupy_backends/cuda/api/runtime.pyx", line 265, in cupy_backends.cuda.api.runtime.check_status
E       raise CUDARuntimeError(status)
E   cupy_backends.cuda.api.runtime.CUDARuntimeError: hipErrorUnknown: hipErrorUnknown

cupy_backends/cuda/api/runtime.pyx:265: AssertionError
----------------------------- Captured stderr call -----------------------------
Traceback (most recent call last):
  File "cupy_backends/cuda/api/runtime.pyx", line 644, in cupy_backends.cuda.api.runtime.freeArray
    check_status(status)
  File "cupy_backends/cuda/api/runtime.pyx", line 265, in cupy_backends.cuda.api.runtime.check_status
    raise CUDARuntimeError(status)
cupy_backends.cuda.api.runtime.CUDARuntimeError: hipErrorUnknown: hipErrorUnknown
_ TestAffineTransformTextureMemory.test_affine_transform_texture_memory[_param_96_{mode='constant', order=1, output=None, output_shape=None, shape=(100, 100), theta=0}] _

self = <<cupyx_tests.scipy_tests.ndimage_tests.test_interpolation.TestAffineTransformTextureMemory object at 0x7fd70649d2e0>  parameter: {'mode': 'constant', 'order': 1, 'output': None, 'output_shape': None, 'shape': (100, 100), 'theta': 0}>
xp = <module 'cupy' from '/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.Np3X0NVCM9/cupy/cupy/__init__.py'>
scp = <module 'cupyx.scipy' from '/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.Np3X0NVCM9/cupy/cupyx/scipy/__init__.py'>

    @testing.numpy_cupy_allclose(atol=0.1, scipy_name='scp')
    def test_affine_transform_texture_memory(self, xp, scp):
        a = xp.ones(self.shape, dtype=xp.float32)
        center = numpy.divide(numpy.subtract(self.shape, 1), 2)
    
        if len(self.shape) == 2:
            matrix = self._2d_rotation_matrix(self.theta, center)
        elif len(self.shape) == 3:
            matrix = self._3d_rotation_matrix(self.theta, center)
        else:
            return pytest.xfail('Unsupported shape')
    
        if self.output == 'empty':
            output = xp.empty(self.shape, dtype=xp.float32)
            if self.output_shape:
                return pytest.skip('This combination is tested in '
                                   'test_invalid_texture_arguments')
        else:
            output = self.output
    
        if self.output_shape:
            output_shape = (self.output_shape, ) * len(self.shape)
        else:
            output_shape = self.output_shape
    
        if xp == cupy:
            m = cupyx.scipy.ndimage.affine_transform
            matrix = cupy.array(matrix)
>           return m(a, matrix, output_shape=output_shape,
                     output=output, order=self.order,
                     mode=self.mode, texture_memory=True)

tests/cupyx_tests/scipy_tests/ndimage_tests/test_interpolation.py:398: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
cupyx/scipy/ndimage/interpolation.py:376: in affine_transform
    return _texture.affine_transformation(data=input,
cupyx/_texture.py:168: in affine_transformation
    texture_object = _create_texture_object(data,
cupyx/_texture.py:98: in _create_texture_object
    array = texture.CUDAarray(texture_fmt, *data.shape[::-1])
cupy/cuda/texture.pyx:296: in cupy.cuda.texture.CUDAarray.__init__
    self.ptr = runtime.malloc3DArray(desc.ptr, width, height, depth,
cupy_backends/cuda/api/runtime.pyx:593: in cupy_backends.cuda.api.runtime.malloc3DArray
    check_status(status)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

>   raise CUDARuntimeError(status)
E   AssertionError: Only cupy raises error
E   
E   Traceback (most recent call last):
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.Np3X0NVCM9/cupy/cupy/testing/_helper.py", line 47, in _call_func
E       result = impl(self, *args, **kw)
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.Np3X0NVCM9/cupy/tests/cupyx_tests/scipy_tests/ndimage_tests/test_interpolation.py", line 398, in test_affine_transform_texture_memory
E       return m(a, matrix, output_shape=output_shape,
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.Np3X0NVCM9/cupy/cupyx/scipy/ndimage/interpolation.py", line 376, in affine_transform
E       return _texture.affine_transformation(data=input,
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.Np3X0NVCM9/cupy/cupyx/_texture.py", line 168, in affine_transformation
E       texture_object = _create_texture_object(data,
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.Np3X0NVCM9/cupy/cupyx/_texture.py", line 98, in _create_texture_object
E       array = texture.CUDAarray(texture_fmt, *data.shape[::-1])
E     File "cupy/cuda/texture.pyx", line 296, in cupy.cuda.texture.CUDAarray.__init__
E       self.ptr = runtime.malloc3DArray(desc.ptr, width, height, depth,
E     File "cupy_backends/cuda/api/runtime.pyx", line 593, in cupy_backends.cuda.api.runtime.malloc3DArray
E       check_status(status)
E     File "cupy_backends/cuda/api/runtime.pyx", line 265, in cupy_backends.cuda.api.runtime.check_status
E       raise CUDARuntimeError(status)
E   cupy_backends.cuda.api.runtime.CUDARuntimeError: hipErrorUnknown: hipErrorUnknown

cupy_backends/cuda/api/runtime.pyx:265: AssertionError
----------------------------- Captured stderr call -----------------------------
Traceback (most recent call last):
  File "cupy_backends/cuda/api/runtime.pyx", line 644, in cupy_backends.cuda.api.runtime.freeArray
    check_status(status)
  File "cupy_backends/cuda/api/runtime.pyx", line 265, in cupy_backends.cuda.api.runtime.check_status
    raise CUDARuntimeError(status)
cupy_backends.cuda.api.runtime.CUDARuntimeError: hipErrorUnknown: hipErrorUnknown
_ TestAffineTransformTextureMemory.test_affine_transform_texture_memory[_param_97_{mode='constant', order=1, output=None, output_shape=None, shape=(100, 100), theta=90}] _

self = <<cupyx_tests.scipy_tests.ndimage_tests.test_interpolation.TestAffineTransformTextureMemory object at 0x7fd7073c8340>  parameter: {'mode': 'constant', 'order': 1, 'output': None, 'output_shape': None, 'shape': (100, 100), 'theta': 90}>
xp = <module 'cupy' from '/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.Np3X0NVCM9/cupy/cupy/__init__.py'>
scp = <module 'cupyx.scipy' from '/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.Np3X0NVCM9/cupy/cupyx/scipy/__init__.py'>

    @testing.numpy_cupy_allclose(atol=0.1, scipy_name='scp')
    def test_affine_transform_texture_memory(self, xp, scp):
        a = xp.ones(self.shape, dtype=xp.float32)
        center = numpy.divide(numpy.subtract(self.shape, 1), 2)
    
        if len(self.shape) == 2:
            matrix = self._2d_rotation_matrix(self.theta, center)
        elif len(self.shape) == 3:
            matrix = self._3d_rotation_matrix(self.theta, center)
        else:
            return pytest.xfail('Unsupported shape')
    
        if self.output == 'empty':
            output = xp.empty(self.shape, dtype=xp.float32)
            if self.output_shape:
                return pytest.skip('This combination is tested in '
                                   'test_invalid_texture_arguments')
        else:
            output = self.output
    
        if self.output_shape:
            output_shape = (self.output_shape, ) * len(self.shape)
        else:
            output_shape = self.output_shape
    
        if xp == cupy:
            m = cupyx.scipy.ndimage.affine_transform
            matrix = cupy.array(matrix)
>           return m(a, matrix, output_shape=output_shape,
                     output=output, order=self.order,
                     mode=self.mode, texture_memory=True)

tests/cupyx_tests/scipy_tests/ndimage_tests/test_interpolation.py:398: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
cupyx/scipy/ndimage/interpolation.py:376: in affine_transform
    return _texture.affine_transformation(data=input,
cupyx/_texture.py:168: in affine_transformation
    texture_object = _create_texture_object(data,
cupyx/_texture.py:98: in _create_texture_object
    array = texture.CUDAarray(texture_fmt, *data.shape[::-1])
cupy/cuda/texture.pyx:296: in cupy.cuda.texture.CUDAarray.__init__
    self.ptr = runtime.malloc3DArray(desc.ptr, width, height, depth,
cupy_backends/cuda/api/runtime.pyx:593: in cupy_backends.cuda.api.runtime.malloc3DArray
    check_status(status)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

>   raise CUDARuntimeError(status)
E   AssertionError: Only cupy raises error
E   
E   Traceback (most recent call last):
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.Np3X0NVCM9/cupy/cupy/testing/_helper.py", line 47, in _call_func
E       result = impl(self, *args, **kw)
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.Np3X0NVCM9/cupy/tests/cupyx_tests/scipy_tests/ndimage_tests/test_interpolation.py", line 398, in test_affine_transform_texture_memory
E       return m(a, matrix, output_shape=output_shape,
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.Np3X0NVCM9/cupy/cupyx/scipy/ndimage/interpolation.py", line 376, in affine_transform
E       return _texture.affine_transformation(data=input,
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.Np3X0NVCM9/cupy/cupyx/_texture.py", line 168, in affine_transformation
E       texture_object = _create_texture_object(data,
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.Np3X0NVCM9/cupy/cupyx/_texture.py", line 98, in _create_texture_object
E       array = texture.CUDAarray(texture_fmt, *data.shape[::-1])
E     File "cupy/cuda/texture.pyx", line 296, in cupy.cuda.texture.CUDAarray.__init__
E       self.ptr = runtime.malloc3DArray(desc.ptr, width, height, depth,
E     File "cupy_backends/cuda/api/runtime.pyx", line 593, in cupy_backends.cuda.api.runtime.malloc3DArray
E       check_status(status)
E     File "cupy_backends/cuda/api/runtime.pyx", line 265, in cupy_backends.cuda.api.runtime.check_status
E       raise CUDARuntimeError(status)
E   cupy_backends.cuda.api.runtime.CUDARuntimeError: hipErrorUnknown: hipErrorUnknown

cupy_backends/cuda/api/runtime.pyx:265: AssertionError
----------------------------- Captured stderr call -----------------------------
Traceback (most recent call last):
  File "cupy_backends/cuda/api/runtime.pyx", line 644, in cupy_backends.cuda.api.runtime.freeArray
    check_status(status)
  File "cupy_backends/cuda/api/runtime.pyx", line 265, in cupy_backends.cuda.api.runtime.check_status
    raise CUDARuntimeError(status)
cupy_backends.cuda.api.runtime.CUDARuntimeError: hipErrorUnknown: hipErrorUnknown
_ TestAffineTransformTextureMemory.test_affine_transform_texture_memory[_param_98_{mode='constant', order=1, output=None, output_shape=None, shape=(100, 100), theta=180}] _

self = <<cupyx_tests.scipy_tests.ndimage_tests.test_interpolation.TestAffineTransformTextureMemory object at 0x7fd7067d6eb0>  parameter: {'mode': 'constant', 'order': 1, 'output': None, 'output_shape': None, 'shape': (100, 100), 'theta': 180}>
xp = <module 'cupy' from '/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.Np3X0NVCM9/cupy/cupy/__init__.py'>
scp = <module 'cupyx.scipy' from '/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.Np3X0NVCM9/cupy/cupyx/scipy/__init__.py'>

    @testing.numpy_cupy_allclose(atol=0.1, scipy_name='scp')
    def test_affine_transform_texture_memory(self, xp, scp):
        a = xp.ones(self.shape, dtype=xp.float32)
        center = numpy.divide(numpy.subtract(self.shape, 1), 2)
    
        if len(self.shape) == 2:
            matrix = self._2d_rotation_matrix(self.theta, center)
        elif len(self.shape) == 3:
            matrix = self._3d_rotation_matrix(self.theta, center)
        else:
            return pytest.xfail('Unsupported shape')
    
        if self.output == 'empty':
            output = xp.empty(self.shape, dtype=xp.float32)
            if self.output_shape:
                return pytest.skip('This combination is tested in '
                                   'test_invalid_texture_arguments')
        else:
            output = self.output
    
        if self.output_shape:
            output_shape = (self.output_shape, ) * len(self.shape)
        else:
            output_shape = self.output_shape
    
        if xp == cupy:
            m = cupyx.scipy.ndimage.affine_transform
            matrix = cupy.array(matrix)
>           return m(a, matrix, output_shape=output_shape,
                     output=output, order=self.order,
                     mode=self.mode, texture_memory=True)

tests/cupyx_tests/scipy_tests/ndimage_tests/test_interpolation.py:398: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
cupyx/scipy/ndimage/interpolation.py:376: in affine_transform
    return _texture.affine_transformation(data=input,
cupyx/_texture.py:168: in affine_transformation
    texture_object = _create_texture_object(data,
cupyx/_texture.py:98: in _create_texture_object
    array = texture.CUDAarray(texture_fmt, *data.shape[::-1])
cupy/cuda/texture.pyx:296: in cupy.cuda.texture.CUDAarray.__init__
    self.ptr = runtime.malloc3DArray(desc.ptr, width, height, depth,
cupy_backends/cuda/api/runtime.pyx:593: in cupy_backends.cuda.api.runtime.malloc3DArray
    check_status(status)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

>   raise CUDARuntimeError(status)
E   AssertionError: Only cupy raises error
E   
E   Traceback (most recent call last):
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.Np3X0NVCM9/cupy/cupy/testing/_helper.py", line 47, in _call_func
E       result = impl(self, *args, **kw)
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.Np3X0NVCM9/cupy/tests/cupyx_tests/scipy_tests/ndimage_tests/test_interpolation.py", line 398, in test_affine_transform_texture_memory
E       return m(a, matrix, output_shape=output_shape,
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.Np3X0NVCM9/cupy/cupyx/scipy/ndimage/interpolation.py", line 376, in affine_transform
E       return _texture.affine_transformation(data=input,
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.Np3X0NVCM9/cupy/cupyx/_texture.py", line 168, in affine_transformation
E       texture_object = _create_texture_object(data,
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.Np3X0NVCM9/cupy/cupyx/_texture.py", line 98, in _create_texture_object
E       array = texture.CUDAarray(texture_fmt, *data.shape[::-1])
E     File "cupy/cuda/texture.pyx", line 296, in cupy.cuda.texture.CUDAarray.__init__
E       self.ptr = runtime.malloc3DArray(desc.ptr, width, height, depth,
E     File "cupy_backends/cuda/api/runtime.pyx", line 593, in cupy_backends.cuda.api.runtime.malloc3DArray
E       check_status(status)
E     File "cupy_backends/cuda/api/runtime.pyx", line 265, in cupy_backends.cuda.api.runtime.check_status
E       raise CUDARuntimeError(status)
E   cupy_backends.cuda.api.runtime.CUDARuntimeError: hipErrorUnknown: hipErrorUnknown

cupy_backends/cuda/api/runtime.pyx:265: AssertionError
----------------------------- Captured stderr call -----------------------------
Traceback (most recent call last):
  File "cupy_backends/cuda/api/runtime.pyx", line 644, in cupy_backends.cuda.api.runtime.freeArray
    check_status(status)
  File "cupy_backends/cuda/api/runtime.pyx", line 265, in cupy_backends.cuda.api.runtime.check_status
    raise CUDARuntimeError(status)
cupy_backends.cuda.api.runtime.CUDARuntimeError: hipErrorUnknown: hipErrorUnknown
_ TestAffineTransformTextureMemory.test_affine_transform_texture_memory[_param_99_{mode='constant', order=1, output=None, output_shape=None, shape=(100, 100), theta=270}] _

self = <<cupyx_tests.scipy_tests.ndimage_tests.test_interpolation.TestAffineTransformTextureMemory object at 0x7fd705ad5c70>  parameter: {'mode': 'constant', 'order': 1, 'output': None, 'output_shape': None, 'shape': (100, 100), 'theta': 270}>
xp = <module 'cupy' from '/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.Np3X0NVCM9/cupy/cupy/__init__.py'>
scp = <module 'cupyx.scipy' from '/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.Np3X0NVCM9/cupy/cupyx/scipy/__init__.py'>

    @testing.numpy_cupy_allclose(atol=0.1, scipy_name='scp')
    def test_affine_transform_texture_memory(self, xp, scp):
        a = xp.ones(self.shape, dtype=xp.float32)
        center = numpy.divide(numpy.subtract(self.shape, 1), 2)
    
        if len(self.shape) == 2:
            matrix = self._2d_rotation_matrix(self.theta, center)
        elif len(self.shape) == 3:
            matrix = self._3d_rotation_matrix(self.theta, center)
        else:
            return pytest.xfail('Unsupported shape')
    
        if self.output == 'empty':
            output = xp.empty(self.shape, dtype=xp.float32)
            if self.output_shape:
                return pytest.skip('This combination is tested in '
                                   'test_invalid_texture_arguments')
        else:
            output = self.output
    
        if self.output_shape:
            output_shape = (self.output_shape, ) * len(self.shape)
        else:
            output_shape = self.output_shape
    
        if xp == cupy:
            m = cupyx.scipy.ndimage.affine_transform
            matrix = cupy.array(matrix)
>           return m(a, matrix, output_shape=output_shape,
                     output=output, order=self.order,
                     mode=self.mode, texture_memory=True)

tests/cupyx_tests/scipy_tests/ndimage_tests/test_interpolation.py:398: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
cupyx/scipy/ndimage/interpolation.py:376: in affine_transform
    return _texture.affine_transformation(data=input,
cupyx/_texture.py:168: in affine_transformation
    texture_object = _create_texture_object(data,
cupyx/_texture.py:98: in _create_texture_object
    array = texture.CUDAarray(texture_fmt, *data.shape[::-1])
cupy/cuda/texture.pyx:296: in cupy.cuda.texture.CUDAarray.__init__
    self.ptr = runtime.malloc3DArray(desc.ptr, width, height, depth,
cupy_backends/cuda/api/runtime.pyx:593: in cupy_backends.cuda.api.runtime.malloc3DArray
    check_status(status)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

>   raise CUDARuntimeError(status)
E   AssertionError: Only cupy raises error
E   
E   Traceback (most recent call last):
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.Np3X0NVCM9/cupy/cupy/testing/_helper.py", line 47, in _call_func
E       result = impl(self, *args, **kw)
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.Np3X0NVCM9/cupy/tests/cupyx_tests/scipy_tests/ndimage_tests/test_interpolation.py", line 398, in test_affine_transform_texture_memory
E       return m(a, matrix, output_shape=output_shape,
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.Np3X0NVCM9/cupy/cupyx/scipy/ndimage/interpolation.py", line 376, in affine_transform
E       return _texture.affine_transformation(data=input,
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.Np3X0NVCM9/cupy/cupyx/_texture.py", line 168, in affine_transformation
E       texture_object = _create_texture_object(data,
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.Np3X0NVCM9/cupy/cupyx/_texture.py", line 98, in _create_texture_object
E       array = texture.CUDAarray(texture_fmt, *data.shape[::-1])
E     File "cupy/cuda/texture.pyx", line 296, in cupy.cuda.texture.CUDAarray.__init__
E       self.ptr = runtime.malloc3DArray(desc.ptr, width, height, depth,
E     File "cupy_backends/cuda/api/runtime.pyx", line 593, in cupy_backends.cuda.api.runtime.malloc3DArray
E       check_status(status)
E     File "cupy_backends/cuda/api/runtime.pyx", line 265, in cupy_backends.cuda.api.runtime.check_status
E       raise CUDARuntimeError(status)
E   cupy_backends.cuda.api.runtime.CUDARuntimeError: hipErrorUnknown: hipErrorUnknown

cupy_backends/cuda/api/runtime.pyx:265: AssertionError
----------------------------- Captured stderr call -----------------------------
Traceback (most recent call last):
  File "cupy_backends/cuda/api/runtime.pyx", line 644, in cupy_backends.cuda.api.runtime.freeArray
    check_status(status)
  File "cupy_backends/cuda/api/runtime.pyx", line 265, in cupy_backends.cuda.api.runtime.check_status
    raise CUDARuntimeError(status)
cupy_backends.cuda.api.runtime.CUDARuntimeError: hipErrorUnknown: hipErrorUnknown
_ TestAffineTransformTextureMemory.test_affine_transform_texture_memory[_param_100_{mode='constant', order=1, output=None, output_shape=None, shape=(10, 20), theta=0}] _

self = <<cupyx_tests.scipy_tests.ndimage_tests.test_interpolation.TestAffineTransformTextureMemory object at 0x7fd705897a90>  parameter: {'mode': 'constant', 'order': 1, 'output': None, 'output_shape': None, 'shape': (10, 20), 'theta': 0}>
xp = <module 'cupy' from '/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.Np3X0NVCM9/cupy/cupy/__init__.py'>
scp = <module 'cupyx.scipy' from '/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.Np3X0NVCM9/cupy/cupyx/scipy/__init__.py'>

    @testing.numpy_cupy_allclose(atol=0.1, scipy_name='scp')
    def test_affine_transform_texture_memory(self, xp, scp):
        a = xp.ones(self.shape, dtype=xp.float32)
        center = numpy.divide(numpy.subtract(self.shape, 1), 2)
    
        if len(self.shape) == 2:
            matrix = self._2d_rotation_matrix(self.theta, center)
        elif len(self.shape) == 3:
            matrix = self._3d_rotation_matrix(self.theta, center)
        else:
            return pytest.xfail('Unsupported shape')
    
        if self.output == 'empty':
            output = xp.empty(self.shape, dtype=xp.float32)
            if self.output_shape:
                return pytest.skip('This combination is tested in '
                                   'test_invalid_texture_arguments')
        else:
            output = self.output
    
        if self.output_shape:
            output_shape = (self.output_shape, ) * len(self.shape)
        else:
            output_shape = self.output_shape
    
        if xp == cupy:
            m = cupyx.scipy.ndimage.affine_transform
            matrix = cupy.array(matrix)
>           return m(a, matrix, output_shape=output_shape,
                     output=output, order=self.order,
                     mode=self.mode, texture_memory=True)

tests/cupyx_tests/scipy_tests/ndimage_tests/test_interpolation.py:398: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
cupyx/scipy/ndimage/interpolation.py:376: in affine_transform
    return _texture.affine_transformation(data=input,
cupyx/_texture.py:168: in affine_transformation
    texture_object = _create_texture_object(data,
cupyx/_texture.py:98: in _create_texture_object
    array = texture.CUDAarray(texture_fmt, *data.shape[::-1])
cupy/cuda/texture.pyx:296: in cupy.cuda.texture.CUDAarray.__init__
    self.ptr = runtime.malloc3DArray(desc.ptr, width, height, depth,
cupy_backends/cuda/api/runtime.pyx:593: in cupy_backends.cuda.api.runtime.malloc3DArray
    check_status(status)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

>   raise CUDARuntimeError(status)
E   AssertionError: Only cupy raises error
E   
E   Traceback (most recent call last):
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.Np3X0NVCM9/cupy/cupy/testing/_helper.py", line 47, in _call_func
E       result = impl(self, *args, **kw)
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.Np3X0NVCM9/cupy/tests/cupyx_tests/scipy_tests/ndimage_tests/test_interpolation.py", line 398, in test_affine_transform_texture_memory
E       return m(a, matrix, output_shape=output_shape,
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.Np3X0NVCM9/cupy/cupyx/scipy/ndimage/interpolation.py", line 376, in affine_transform
E       return _texture.affine_transformation(data=input,
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.Np3X0NVCM9/cupy/cupyx/_texture.py", line 168, in affine_transformation
E       texture_object = _create_texture_object(data,
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.Np3X0NVCM9/cupy/cupyx/_texture.py", line 98, in _create_texture_object
E       array = texture.CUDAarray(texture_fmt, *data.shape[::-1])
E     File "cupy/cuda/texture.pyx", line 296, in cupy.cuda.texture.CUDAarray.__init__
E       self.ptr = runtime.malloc3DArray(desc.ptr, width, height, depth,
E     File "cupy_backends/cuda/api/runtime.pyx", line 593, in cupy_backends.cuda.api.runtime.malloc3DArray
E       check_status(status)
E     File "cupy_backends/cuda/api/runtime.pyx", line 265, in cupy_backends.cuda.api.runtime.check_status
E       raise CUDARuntimeError(status)
E   cupy_backends.cuda.api.runtime.CUDARuntimeError: hipErrorUnknown: hipErrorUnknown

cupy_backends/cuda/api/runtime.pyx:265: AssertionError
----------------------------- Captured stderr call -----------------------------
Traceback (most recent call last):
  File "cupy_backends/cuda/api/runtime.pyx", line 644, in cupy_backends.cuda.api.runtime.freeArray
    check_status(status)
  File "cupy_backends/cuda/api/runtime.pyx", line 265, in cupy_backends.cuda.api.runtime.check_status
    raise CUDARuntimeError(status)
cupy_backends.cuda.api.runtime.CUDARuntimeError: hipErrorUnknown: hipErrorUnknown
_ TestAffineTransformTextureMemory.test_affine_transform_texture_memory[_param_101_{mode='constant', order=1, output=None, output_shape=None, shape=(10, 20), theta=90}] _

self = <<cupyx_tests.scipy_tests.ndimage_tests.test_interpolation.TestAffineTransformTextureMemory object at 0x7fd7059b6280>  parameter: {'mode': 'constant', 'order': 1, 'output': None, 'output_shape': None, 'shape': (10, 20), 'theta': 90}>
xp = <module 'cupy' from '/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.Np3X0NVCM9/cupy/cupy/__init__.py'>
scp = <module 'cupyx.scipy' from '/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.Np3X0NVCM9/cupy/cupyx/scipy/__init__.py'>

    @testing.numpy_cupy_allclose(atol=0.1, scipy_name='scp')
    def test_affine_transform_texture_memory(self, xp, scp):
        a = xp.ones(self.shape, dtype=xp.float32)
        center = numpy.divide(numpy.subtract(self.shape, 1), 2)
    
        if len(self.shape) == 2:
            matrix = self._2d_rotation_matrix(self.theta, center)
        elif len(self.shape) == 3:
            matrix = self._3d_rotation_matrix(self.theta, center)
        else:
            return pytest.xfail('Unsupported shape')
    
        if self.output == 'empty':
            output = xp.empty(self.shape, dtype=xp.float32)
            if self.output_shape:
                return pytest.skip('This combination is tested in '
                                   'test_invalid_texture_arguments')
        else:
            output = self.output
    
        if self.output_shape:
            output_shape = (self.output_shape, ) * len(self.shape)
        else:
            output_shape = self.output_shape
    
        if xp == cupy:
            m = cupyx.scipy.ndimage.affine_transform
            matrix = cupy.array(matrix)
>           return m(a, matrix, output_shape=output_shape,
                     output=output, order=self.order,
                     mode=self.mode, texture_memory=True)

tests/cupyx_tests/scipy_tests/ndimage_tests/test_interpolation.py:398: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
cupyx/scipy/ndimage/interpolation.py:376: in affine_transform
    return _texture.affine_transformation(data=input,
cupyx/_texture.py:168: in affine_transformation
    texture_object = _create_texture_object(data,
cupyx/_texture.py:98: in _create_texture_object
    array = texture.CUDAarray(texture_fmt, *data.shape[::-1])
cupy/cuda/texture.pyx:296: in cupy.cuda.texture.CUDAarray.__init__
    self.ptr = runtime.malloc3DArray(desc.ptr, width, height, depth,
cupy_backends/cuda/api/runtime.pyx:593: in cupy_backends.cuda.api.runtime.malloc3DArray
    check_status(status)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

>   raise CUDARuntimeError(status)
E   AssertionError: Only cupy raises error
E   
E   Traceback (most recent call last):
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.Np3X0NVCM9/cupy/cupy/testing/_helper.py", line 47, in _call_func
E       result = impl(self, *args, **kw)
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.Np3X0NVCM9/cupy/tests/cupyx_tests/scipy_tests/ndimage_tests/test_interpolation.py", line 398, in test_affine_transform_texture_memory
E       return m(a, matrix, output_shape=output_shape,
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.Np3X0NVCM9/cupy/cupyx/scipy/ndimage/interpolation.py", line 376, in affine_transform
E       return _texture.affine_transformation(data=input,
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.Np3X0NVCM9/cupy/cupyx/_texture.py", line 168, in affine_transformation
E       texture_object = _create_texture_object(data,
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.Np3X0NVCM9/cupy/cupyx/_texture.py", line 98, in _create_texture_object
E       array = texture.CUDAarray(texture_fmt, *data.shape[::-1])
E     File "cupy/cuda/texture.pyx", line 296, in cupy.cuda.texture.CUDAarray.__init__
E       self.ptr = runtime.malloc3DArray(desc.ptr, width, height, depth,
E     File "cupy_backends/cuda/api/runtime.pyx", line 593, in cupy_backends.cuda.api.runtime.malloc3DArray
E       check_status(status)
E     File "cupy_backends/cuda/api/runtime.pyx", line 265, in cupy_backends.cuda.api.runtime.check_status
E       raise CUDARuntimeError(status)
E   cupy_backends.cuda.api.runtime.CUDARuntimeError: hipErrorUnknown: hipErrorUnknown

cupy_backends/cuda/api/runtime.pyx:265: AssertionError
----------------------------- Captured stderr call -----------------------------
Traceback (most recent call last):
  File "cupy_backends/cuda/api/runtime.pyx", line 644, in cupy_backends.cuda.api.runtime.freeArray
    check_status(status)
  File "cupy_backends/cuda/api/runtime.pyx", line 265, in cupy_backends.cuda.api.runtime.check_status
    raise CUDARuntimeError(status)
cupy_backends.cuda.api.runtime.CUDARuntimeError: hipErrorUnknown: hipErrorUnknown
_ TestAffineTransformTextureMemory.test_affine_transform_texture_memory[_param_102_{mode='constant', order=1, output=None, output_shape=None, shape=(10, 20), theta=180}] _

self = <<cupyx_tests.scipy_tests.ndimage_tests.test_interpolation.TestAffineTransformTextureMemory object at 0x7fd7056e9970>  parameter: {'mode': 'constant', 'order': 1, 'output': None, 'output_shape': None, 'shape': (10, 20), 'theta': 180}>
xp = <module 'cupy' from '/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.Np3X0NVCM9/cupy/cupy/__init__.py'>
scp = <module 'cupyx.scipy' from '/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.Np3X0NVCM9/cupy/cupyx/scipy/__init__.py'>

    @testing.numpy_cupy_allclose(atol=0.1, scipy_name='scp')
    def test_affine_transform_texture_memory(self, xp, scp):
        a = xp.ones(self.shape, dtype=xp.float32)
        center = numpy.divide(numpy.subtract(self.shape, 1), 2)
    
        if len(self.shape) == 2:
            matrix = self._2d_rotation_matrix(self.theta, center)
        elif len(self.shape) == 3:
            matrix = self._3d_rotation_matrix(self.theta, center)
        else:
            return pytest.xfail('Unsupported shape')
    
        if self.output == 'empty':
            output = xp.empty(self.shape, dtype=xp.float32)
            if self.output_shape:
                return pytest.skip('This combination is tested in '
                                   'test_invalid_texture_arguments')
        else:
            output = self.output
    
        if self.output_shape:
            output_shape = (self.output_shape, ) * len(self.shape)
        else:
            output_shape = self.output_shape
    
        if xp == cupy:
            m = cupyx.scipy.ndimage.affine_transform
            matrix = cupy.array(matrix)
>           return m(a, matrix, output_shape=output_shape,
                     output=output, order=self.order,
                     mode=self.mode, texture_memory=True)

tests/cupyx_tests/scipy_tests/ndimage_tests/test_interpolation.py:398: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
cupyx/scipy/ndimage/interpolation.py:376: in affine_transform
    return _texture.affine_transformation(data=input,
cupyx/_texture.py:168: in affine_transformation
    texture_object = _create_texture_object(data,
cupyx/_texture.py:98: in _create_texture_object
    array = texture.CUDAarray(texture_fmt, *data.shape[::-1])
cupy/cuda/texture.pyx:296: in cupy.cuda.texture.CUDAarray.__init__
    self.ptr = runtime.malloc3DArray(desc.ptr, width, height, depth,
cupy_backends/cuda/api/runtime.pyx:593: in cupy_backends.cuda.api.runtime.malloc3DArray
    check_status(status)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

>   raise CUDARuntimeError(status)
E   AssertionError: Only cupy raises error
E   
E   Traceback (most recent call last):
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.Np3X0NVCM9/cupy/cupy/testing/_helper.py", line 47, in _call_func
E       result = impl(self, *args, **kw)
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.Np3X0NVCM9/cupy/tests/cupyx_tests/scipy_tests/ndimage_tests/test_interpolation.py", line 398, in test_affine_transform_texture_memory
E       return m(a, matrix, output_shape=output_shape,
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.Np3X0NVCM9/cupy/cupyx/scipy/ndimage/interpolation.py", line 376, in affine_transform
E       return _texture.affine_transformation(data=input,
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.Np3X0NVCM9/cupy/cupyx/_texture.py", line 168, in affine_transformation
E       texture_object = _create_texture_object(data,
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.Np3X0NVCM9/cupy/cupyx/_texture.py", line 98, in _create_texture_object
E       array = texture.CUDAarray(texture_fmt, *data.shape[::-1])
E     File "cupy/cuda/texture.pyx", line 296, in cupy.cuda.texture.CUDAarray.__init__
E       self.ptr = runtime.malloc3DArray(desc.ptr, width, height, depth,
E     File "cupy_backends/cuda/api/runtime.pyx", line 593, in cupy_backends.cuda.api.runtime.malloc3DArray
E       check_status(status)
E     File "cupy_backends/cuda/api/runtime.pyx", line 265, in cupy_backends.cuda.api.runtime.check_status
E       raise CUDARuntimeError(status)
E   cupy_backends.cuda.api.runtime.CUDARuntimeError: hipErrorUnknown: hipErrorUnknown

cupy_backends/cuda/api/runtime.pyx:265: AssertionError
----------------------------- Captured stderr call -----------------------------
Traceback (most recent call last):
  File "cupy_backends/cuda/api/runtime.pyx", line 644, in cupy_backends.cuda.api.runtime.freeArray
    check_status(status)
  File "cupy_backends/cuda/api/runtime.pyx", line 265, in cupy_backends.cuda.api.runtime.check_status
    raise CUDARuntimeError(status)
cupy_backends.cuda.api.runtime.CUDARuntimeError: hipErrorUnknown: hipErrorUnknown
_ TestAffineTransformTextureMemory.test_affine_transform_texture_memory[_param_103_{mode='constant', order=1, output=None, output_shape=None, shape=(10, 20), theta=270}] _

self = <<cupyx_tests.scipy_tests.ndimage_tests.test_interpolation.TestAffineTransformTextureMemory object at 0x7fd7056cc280>  parameter: {'mode': 'constant', 'order': 1, 'output': None, 'output_shape': None, 'shape': (10, 20), 'theta': 270}>
xp = <module 'cupy' from '/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.Np3X0NVCM9/cupy/cupy/__init__.py'>
scp = <module 'cupyx.scipy' from '/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.Np3X0NVCM9/cupy/cupyx/scipy/__init__.py'>

    @testing.numpy_cupy_allclose(atol=0.1, scipy_name='scp')
    def test_affine_transform_texture_memory(self, xp, scp):
        a = xp.ones(self.shape, dtype=xp.float32)
        center = numpy.divide(numpy.subtract(self.shape, 1), 2)
    
        if len(self.shape) == 2:
            matrix = self._2d_rotation_matrix(self.theta, center)
        elif len(self.shape) == 3:
            matrix = self._3d_rotation_matrix(self.theta, center)
        else:
            return pytest.xfail('Unsupported shape')
    
        if self.output == 'empty':
            output = xp.empty(self.shape, dtype=xp.float32)
            if self.output_shape:
                return pytest.skip('This combination is tested in '
                                   'test_invalid_texture_arguments')
        else:
            output = self.output
    
        if self.output_shape:
            output_shape = (self.output_shape, ) * len(self.shape)
        else:
            output_shape = self.output_shape
    
        if xp == cupy:
            m = cupyx.scipy.ndimage.affine_transform
            matrix = cupy.array(matrix)
>           return m(a, matrix, output_shape=output_shape,
                     output=output, order=self.order,
                     mode=self.mode, texture_memory=True)

tests/cupyx_tests/scipy_tests/ndimage_tests/test_interpolation.py:398: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
cupyx/scipy/ndimage/interpolation.py:376: in affine_transform
    return _texture.affine_transformation(data=input,
cupyx/_texture.py:168: in affine_transformation
    texture_object = _create_texture_object(data,
cupyx/_texture.py:98: in _create_texture_object
    array = texture.CUDAarray(texture_fmt, *data.shape[::-1])
cupy/cuda/texture.pyx:296: in cupy.cuda.texture.CUDAarray.__init__
    self.ptr = runtime.malloc3DArray(desc.ptr, width, height, depth,
cupy_backends/cuda/api/runtime.pyx:593: in cupy_backends.cuda.api.runtime.malloc3DArray
    check_status(status)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

>   raise CUDARuntimeError(status)
E   AssertionError: Only cupy raises error
E   
E   Traceback (most recent call last):
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.Np3X0NVCM9/cupy/cupy/testing/_helper.py", line 47, in _call_func
E       result = impl(self, *args, **kw)
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.Np3X0NVCM9/cupy/tests/cupyx_tests/scipy_tests/ndimage_tests/test_interpolation.py", line 398, in test_affine_transform_texture_memory
E       return m(a, matrix, output_shape=output_shape,
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.Np3X0NVCM9/cupy/cupyx/scipy/ndimage/interpolation.py", line 376, in affine_transform
E       return _texture.affine_transformation(data=input,
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.Np3X0NVCM9/cupy/cupyx/_texture.py", line 168, in affine_transformation
E       texture_object = _create_texture_object(data,
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.Np3X0NVCM9/cupy/cupyx/_texture.py", line 98, in _create_texture_object
E       array = texture.CUDAarray(texture_fmt, *data.shape[::-1])
E     File "cupy/cuda/texture.pyx", line 296, in cupy.cuda.texture.CUDAarray.__init__
E       self.ptr = runtime.malloc3DArray(desc.ptr, width, height, depth,
E     File "cupy_backends/cuda/api/runtime.pyx", line 593, in cupy_backends.cuda.api.runtime.malloc3DArray
E       check_status(status)
E     File "cupy_backends/cuda/api/runtime.pyx", line 265, in cupy_backends.cuda.api.runtime.check_status
E       raise CUDARuntimeError(status)
E   cupy_backends.cuda.api.runtime.CUDARuntimeError: hipErrorUnknown: hipErrorUnknown

cupy_backends/cuda/api/runtime.pyx:265: AssertionError
----------------------------- Captured stderr call -----------------------------
Traceback (most recent call last):
  File "cupy_backends/cuda/api/runtime.pyx", line 644, in cupy_backends.cuda.api.runtime.freeArray
    check_status(status)
  File "cupy_backends/cuda/api/runtime.pyx", line 265, in cupy_backends.cuda.api.runtime.check_status
    raise CUDARuntimeError(status)
cupy_backends.cuda.api.runtime.CUDARuntimeError: hipErrorUnknown: hipErrorUnknown
_ TestAffineTransformTextureMemory.test_affine_transform_texture_memory[_param_104_{mode='constant', order=1, output=None, output_shape=None, shape=(10, 10, 10), theta=0}] _

self = <<cupyx_tests.scipy_tests.ndimage_tests.test_interpolation.TestAffineTransformTextureMemory object at 0x7fd705847a60>  parameter: {'mode': 'constant', 'order': 1, 'output': None, 'output_shape': None, 'shape': (10, 10, 10), 'theta': 0}>
xp = <module 'cupy' from '/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.Np3X0NVCM9/cupy/cupy/__init__.py'>
scp = <module 'cupyx.scipy' from '/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.Np3X0NVCM9/cupy/cupyx/scipy/__init__.py'>

    @testing.numpy_cupy_allclose(atol=0.1, scipy_name='scp')
    def test_affine_transform_texture_memory(self, xp, scp):
        a = xp.ones(self.shape, dtype=xp.float32)
        center = numpy.divide(numpy.subtract(self.shape, 1), 2)
    
        if len(self.shape) == 2:
            matrix = self._2d_rotation_matrix(self.theta, center)
        elif len(self.shape) == 3:
            matrix = self._3d_rotation_matrix(self.theta, center)
        else:
            return pytest.xfail('Unsupported shape')
    
        if self.output == 'empty':
            output = xp.empty(self.shape, dtype=xp.float32)
            if self.output_shape:
                return pytest.skip('This combination is tested in '
                                   'test_invalid_texture_arguments')
        else:
            output = self.output
    
        if self.output_shape:
            output_shape = (self.output_shape, ) * len(self.shape)
        else:
            output_shape = self.output_shape
    
        if xp == cupy:
            m = cupyx.scipy.ndimage.affine_transform
            matrix = cupy.array(matrix)
>           return m(a, matrix, output_shape=output_shape,
                     output=output, order=self.order,
                     mode=self.mode, texture_memory=True)

tests/cupyx_tests/scipy_tests/ndimage_tests/test_interpolation.py:398: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
cupyx/scipy/ndimage/interpolation.py:376: in affine_transform
    return _texture.affine_transformation(data=input,
cupyx/_texture.py:168: in affine_transformation
    texture_object = _create_texture_object(data,
cupyx/_texture.py:98: in _create_texture_object
    array = texture.CUDAarray(texture_fmt, *data.shape[::-1])
cupy/cuda/texture.pyx:296: in cupy.cuda.texture.CUDAarray.__init__
    self.ptr = runtime.malloc3DArray(desc.ptr, width, height, depth,
cupy_backends/cuda/api/runtime.pyx:593: in cupy_backends.cuda.api.runtime.malloc3DArray
    check_status(status)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

>   raise CUDARuntimeError(status)
E   AssertionError: Only cupy raises error
E   
E   Traceback (most recent call last):
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.Np3X0NVCM9/cupy/cupy/testing/_helper.py", line 47, in _call_func
E       result = impl(self, *args, **kw)
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.Np3X0NVCM9/cupy/tests/cupyx_tests/scipy_tests/ndimage_tests/test_interpolation.py", line 398, in test_affine_transform_texture_memory
E       return m(a, matrix, output_shape=output_shape,
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.Np3X0NVCM9/cupy/cupyx/scipy/ndimage/interpolation.py", line 376, in affine_transform
E       return _texture.affine_transformation(data=input,
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.Np3X0NVCM9/cupy/cupyx/_texture.py", line 168, in affine_transformation
E       texture_object = _create_texture_object(data,
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.Np3X0NVCM9/cupy/cupyx/_texture.py", line 98, in _create_texture_object
E       array = texture.CUDAarray(texture_fmt, *data.shape[::-1])
E     File "cupy/cuda/texture.pyx", line 296, in cupy.cuda.texture.CUDAarray.__init__
E       self.ptr = runtime.malloc3DArray(desc.ptr, width, height, depth,
E     File "cupy_backends/cuda/api/runtime.pyx", line 593, in cupy_backends.cuda.api.runtime.malloc3DArray
E       check_status(status)
E     File "cupy_backends/cuda/api/runtime.pyx", line 265, in cupy_backends.cuda.api.runtime.check_status
E       raise CUDARuntimeError(status)
E   cupy_backends.cuda.api.runtime.CUDARuntimeError: hipErrorUnknown: hipErrorUnknown

cupy_backends/cuda/api/runtime.pyx:265: AssertionError
----------------------------- Captured stderr call -----------------------------
Traceback (most recent call last):
  File "cupy_backends/cuda/api/runtime.pyx", line 644, in cupy_backends.cuda.api.runtime.freeArray
    check_status(status)
  File "cupy_backends/cuda/api/runtime.pyx", line 265, in cupy_backends.cuda.api.runtime.check_status
    raise CUDARuntimeError(status)
cupy_backends.cuda.api.runtime.CUDARuntimeError: hipErrorUnknown: hipErrorUnknown
_ TestAffineTransformTextureMemory.test_affine_transform_texture_memory[_param_105_{mode='constant', order=1, output=None, output_shape=None, shape=(10, 10, 10), theta=90}] _

self = <<cupyx_tests.scipy_tests.ndimage_tests.test_interpolation.TestAffineTransformTextureMemory object at 0x7fd7058b12e0>  parameter: {'mode': 'constant', 'order': 1, 'output': None, 'output_shape': None, 'shape': (10, 10, 10), 'theta': 90}>
xp = <module 'cupy' from '/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.Np3X0NVCM9/cupy/cupy/__init__.py'>
scp = <module 'cupyx.scipy' from '/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.Np3X0NVCM9/cupy/cupyx/scipy/__init__.py'>

    @testing.numpy_cupy_allclose(atol=0.1, scipy_name='scp')
    def test_affine_transform_texture_memory(self, xp, scp):
        a = xp.ones(self.shape, dtype=xp.float32)
        center = numpy.divide(numpy.subtract(self.shape, 1), 2)
    
        if len(self.shape) == 2:
            matrix = self._2d_rotation_matrix(self.theta, center)
        elif len(self.shape) == 3:
            matrix = self._3d_rotation_matrix(self.theta, center)
        else:
            return pytest.xfail('Unsupported shape')
    
        if self.output == 'empty':
            output = xp.empty(self.shape, dtype=xp.float32)
            if self.output_shape:
                return pytest.skip('This combination is tested in '
                                   'test_invalid_texture_arguments')
        else:
            output = self.output
    
        if self.output_shape:
            output_shape = (self.output_shape, ) * len(self.shape)
        else:
            output_shape = self.output_shape
    
        if xp == cupy:
            m = cupyx.scipy.ndimage.affine_transform
            matrix = cupy.array(matrix)
>           return m(a, matrix, output_shape=output_shape,
                     output=output, order=self.order,
                     mode=self.mode, texture_memory=True)

tests/cupyx_tests/scipy_tests/ndimage_tests/test_interpolation.py:398: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
cupyx/scipy/ndimage/interpolation.py:376: in affine_transform
    return _texture.affine_transformation(data=input,
cupyx/_texture.py:168: in affine_transformation
    texture_object = _create_texture_object(data,
cupyx/_texture.py:98: in _create_texture_object
    array = texture.CUDAarray(texture_fmt, *data.shape[::-1])
cupy/cuda/texture.pyx:296: in cupy.cuda.texture.CUDAarray.__init__
    self.ptr = runtime.malloc3DArray(desc.ptr, width, height, depth,
cupy_backends/cuda/api/runtime.pyx:593: in cupy_backends.cuda.api.runtime.malloc3DArray
    check_status(status)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

>   raise CUDARuntimeError(status)
E   AssertionError: Only cupy raises error
E   
E   Traceback (most recent call last):
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.Np3X0NVCM9/cupy/cupy/testing/_helper.py", line 47, in _call_func
E       result = impl(self, *args, **kw)
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.Np3X0NVCM9/cupy/tests/cupyx_tests/scipy_tests/ndimage_tests/test_interpolation.py", line 398, in test_affine_transform_texture_memory
E       return m(a, matrix, output_shape=output_shape,
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.Np3X0NVCM9/cupy/cupyx/scipy/ndimage/interpolation.py", line 376, in affine_transform
E       return _texture.affine_transformation(data=input,
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.Np3X0NVCM9/cupy/cupyx/_texture.py", line 168, in affine_transformation
E       texture_object = _create_texture_object(data,
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.Np3X0NVCM9/cupy/cupyx/_texture.py", line 98, in _create_texture_object
E       array = texture.CUDAarray(texture_fmt, *data.shape[::-1])
E     File "cupy/cuda/texture.pyx", line 296, in cupy.cuda.texture.CUDAarray.__init__
E       self.ptr = runtime.malloc3DArray(desc.ptr, width, height, depth,
E     File "cupy_backends/cuda/api/runtime.pyx", line 593, in cupy_backends.cuda.api.runtime.malloc3DArray
E       check_status(status)
E     File "cupy_backends/cuda/api/runtime.pyx", line 265, in cupy_backends.cuda.api.runtime.check_status
E       raise CUDARuntimeError(status)
E   cupy_backends.cuda.api.runtime.CUDARuntimeError: hipErrorUnknown: hipErrorUnknown

cupy_backends/cuda/api/runtime.pyx:265: AssertionError
----------------------------- Captured stderr call -----------------------------
Traceback (most recent call last):
  File "cupy_backends/cuda/api/runtime.pyx", line 644, in cupy_backends.cuda.api.runtime.freeArray
    check_status(status)
  File "cupy_backends/cuda/api/runtime.pyx", line 265, in cupy_backends.cuda.api.runtime.check_status
    raise CUDARuntimeError(status)
cupy_backends.cuda.api.runtime.CUDARuntimeError: hipErrorUnknown: hipErrorUnknown
_ TestAffineTransformTextureMemory.test_affine_transform_texture_memory[_param_106_{mode='constant', order=1, output=None, output_shape=None, shape=(10, 10, 10), theta=180}] _

self = <<cupyx_tests.scipy_tests.ndimage_tests.test_interpolation.TestAffineTransformTextureMemory object at 0x7fd70599fca0>  parameter: {'mode': 'constant', 'order': 1, 'output': None, 'output_shape': None, 'shape': (10, 10, 10), 'theta': 180}>
xp = <module 'cupy' from '/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.Np3X0NVCM9/cupy/cupy/__init__.py'>
scp = <module 'cupyx.scipy' from '/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.Np3X0NVCM9/cupy/cupyx/scipy/__init__.py'>

    @testing.numpy_cupy_allclose(atol=0.1, scipy_name='scp')
    def test_affine_transform_texture_memory(self, xp, scp):
        a = xp.ones(self.shape, dtype=xp.float32)
        center = numpy.divide(numpy.subtract(self.shape, 1), 2)
    
        if len(self.shape) == 2:
            matrix = self._2d_rotation_matrix(self.theta, center)
        elif len(self.shape) == 3:
            matrix = self._3d_rotation_matrix(self.theta, center)
        else:
            return pytest.xfail('Unsupported shape')
    
        if self.output == 'empty':
            output = xp.empty(self.shape, dtype=xp.float32)
            if self.output_shape:
                return pytest.skip('This combination is tested in '
                                   'test_invalid_texture_arguments')
        else:
            output = self.output
    
        if self.output_shape:
            output_shape = (self.output_shape, ) * len(self.shape)
        else:
            output_shape = self.output_shape
    
        if xp == cupy:
            m = cupyx.scipy.ndimage.affine_transform
            matrix = cupy.array(matrix)
>           return m(a, matrix, output_shape=output_shape,
                     output=output, order=self.order,
                     mode=self.mode, texture_memory=True)

tests/cupyx_tests/scipy_tests/ndimage_tests/test_interpolation.py:398: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
cupyx/scipy/ndimage/interpolation.py:376: in affine_transform
    return _texture.affine_transformation(data=input,
cupyx/_texture.py:168: in affine_transformation
    texture_object = _create_texture_object(data,
cupyx/_texture.py:98: in _create_texture_object
    array = texture.CUDAarray(texture_fmt, *data.shape[::-1])
cupy/cuda/texture.pyx:296: in cupy.cuda.texture.CUDAarray.__init__
    self.ptr = runtime.malloc3DArray(desc.ptr, width, height, depth,
cupy_backends/cuda/api/runtime.pyx:593: in cupy_backends.cuda.api.runtime.malloc3DArray
    check_status(status)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

>   raise CUDARuntimeError(status)
E   AssertionError: Only cupy raises error
E   
E   Traceback (most recent call last):
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.Np3X0NVCM9/cupy/cupy/testing/_helper.py", line 47, in _call_func
E       result = impl(self, *args, **kw)
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.Np3X0NVCM9/cupy/tests/cupyx_tests/scipy_tests/ndimage_tests/test_interpolation.py", line 398, in test_affine_transform_texture_memory
E       return m(a, matrix, output_shape=output_shape,
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.Np3X0NVCM9/cupy/cupyx/scipy/ndimage/interpolation.py", line 376, in affine_transform
E       return _texture.affine_transformation(data=input,
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.Np3X0NVCM9/cupy/cupyx/_texture.py", line 168, in affine_transformation
E       texture_object = _create_texture_object(data,
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.Np3X0NVCM9/cupy/cupyx/_texture.py", line 98, in _create_texture_object
E       array = texture.CUDAarray(texture_fmt, *data.shape[::-1])
E     File "cupy/cuda/texture.pyx", line 296, in cupy.cuda.texture.CUDAarray.__init__
E       self.ptr = runtime.malloc3DArray(desc.ptr, width, height, depth,
E     File "cupy_backends/cuda/api/runtime.pyx", line 593, in cupy_backends.cuda.api.runtime.malloc3DArray
E       check_status(status)
E     File "cupy_backends/cuda/api/runtime.pyx", line 265, in cupy_backends.cuda.api.runtime.check_status
E       raise CUDARuntimeError(status)
E   cupy_backends.cuda.api.runtime.CUDARuntimeError: hipErrorUnknown: hipErrorUnknown

cupy_backends/cuda/api/runtime.pyx:265: AssertionError
----------------------------- Captured stderr call -----------------------------
Traceback (most recent call last):
  File "cupy_backends/cuda/api/runtime.pyx", line 644, in cupy_backends.cuda.api.runtime.freeArray
    check_status(status)
  File "cupy_backends/cuda/api/runtime.pyx", line 265, in cupy_backends.cuda.api.runtime.check_status
    raise CUDARuntimeError(status)
cupy_backends.cuda.api.runtime.CUDARuntimeError: hipErrorUnknown: hipErrorUnknown
_ TestAffineTransformTextureMemory.test_affine_transform_texture_memory[_param_107_{mode='constant', order=1, output=None, output_shape=None, shape=(10, 10, 10), theta=270}] _

self = <<cupyx_tests.scipy_tests.ndimage_tests.test_interpolation.TestAffineTransformTextureMemory object at 0x7fd705886a60>  parameter: {'mode': 'constant', 'order': 1, 'output': None, 'output_shape': None, 'shape': (10, 10, 10), 'theta': 270}>
xp = <module 'cupy' from '/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.Np3X0NVCM9/cupy/cupy/__init__.py'>
scp = <module 'cupyx.scipy' from '/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.Np3X0NVCM9/cupy/cupyx/scipy/__init__.py'>

    @testing.numpy_cupy_allclose(atol=0.1, scipy_name='scp')
    def test_affine_transform_texture_memory(self, xp, scp):
        a = xp.ones(self.shape, dtype=xp.float32)
        center = numpy.divide(numpy.subtract(self.shape, 1), 2)
    
        if len(self.shape) == 2:
            matrix = self._2d_rotation_matrix(self.theta, center)
        elif len(self.shape) == 3:
            matrix = self._3d_rotation_matrix(self.theta, center)
        else:
            return pytest.xfail('Unsupported shape')
    
        if self.output == 'empty':
            output = xp.empty(self.shape, dtype=xp.float32)
            if self.output_shape:
                return pytest.skip('This combination is tested in '
                                   'test_invalid_texture_arguments')
        else:
            output = self.output
    
        if self.output_shape:
            output_shape = (self.output_shape, ) * len(self.shape)
        else:
            output_shape = self.output_shape
    
        if xp == cupy:
            m = cupyx.scipy.ndimage.affine_transform
            matrix = cupy.array(matrix)
>           return m(a, matrix, output_shape=output_shape,
                     output=output, order=self.order,
                     mode=self.mode, texture_memory=True)

tests/cupyx_tests/scipy_tests/ndimage_tests/test_interpolation.py:398: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
cupyx/scipy/ndimage/interpolation.py:376: in affine_transform
    return _texture.affine_transformation(data=input,
cupyx/_texture.py:168: in affine_transformation
    texture_object = _create_texture_object(data,
cupyx/_texture.py:98: in _create_texture_object
    array = texture.CUDAarray(texture_fmt, *data.shape[::-1])
cupy/cuda/texture.pyx:296: in cupy.cuda.texture.CUDAarray.__init__
    self.ptr = runtime.malloc3DArray(desc.ptr, width, height, depth,
cupy_backends/cuda/api/runtime.pyx:593: in cupy_backends.cuda.api.runtime.malloc3DArray
    check_status(status)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

>   raise CUDARuntimeError(status)
E   AssertionError: Only cupy raises error
E   
E   Traceback (most recent call last):
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.Np3X0NVCM9/cupy/cupy/testing/_helper.py", line 47, in _call_func
E       result = impl(self, *args, **kw)
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.Np3X0NVCM9/cupy/tests/cupyx_tests/scipy_tests/ndimage_tests/test_interpolation.py", line 398, in test_affine_transform_texture_memory
E       return m(a, matrix, output_shape=output_shape,
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.Np3X0NVCM9/cupy/cupyx/scipy/ndimage/interpolation.py", line 376, in affine_transform
E       return _texture.affine_transformation(data=input,
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.Np3X0NVCM9/cupy/cupyx/_texture.py", line 168, in affine_transformation
E       texture_object = _create_texture_object(data,
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.Np3X0NVCM9/cupy/cupyx/_texture.py", line 98, in _create_texture_object
E       array = texture.CUDAarray(texture_fmt, *data.shape[::-1])
E     File "cupy/cuda/texture.pyx", line 296, in cupy.cuda.texture.CUDAarray.__init__
E       self.ptr = runtime.malloc3DArray(desc.ptr, width, height, depth,
E     File "cupy_backends/cuda/api/runtime.pyx", line 593, in cupy_backends.cuda.api.runtime.malloc3DArray
E       check_status(status)
E     File "cupy_backends/cuda/api/runtime.pyx", line 265, in cupy_backends.cuda.api.runtime.check_status
E       raise CUDARuntimeError(status)
E   cupy_backends.cuda.api.runtime.CUDARuntimeError: hipErrorUnknown: hipErrorUnknown

cupy_backends/cuda/api/runtime.pyx:265: AssertionError
----------------------------- Captured stderr call -----------------------------
Traceback (most recent call last):
  File "cupy_backends/cuda/api/runtime.pyx", line 644, in cupy_backends.cuda.api.runtime.freeArray
    check_status(status)
  File "cupy_backends/cuda/api/runtime.pyx", line 265, in cupy_backends.cuda.api.runtime.check_status
    raise CUDARuntimeError(status)
cupy_backends.cuda.api.runtime.CUDARuntimeError: hipErrorUnknown: hipErrorUnknown
_ TestAffineTransformTextureMemory.test_affine_transform_texture_memory[_param_108_{mode='constant', order=1, output=None, output_shape=None, shape=(10, 20, 30), theta=0}] _

self = <<cupyx_tests.scipy_tests.ndimage_tests.test_interpolation.TestAffineTransformTextureMemory object at 0x7fd70599feb0>  parameter: {'mode': 'constant', 'order': 1, 'output': None, 'output_shape': None, 'shape': (10, 20, 30), 'theta': 0}>
xp = <module 'cupy' from '/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.Np3X0NVCM9/cupy/cupy/__init__.py'>
scp = <module 'cupyx.scipy' from '/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.Np3X0NVCM9/cupy/cupyx/scipy/__init__.py'>

    @testing.numpy_cupy_allclose(atol=0.1, scipy_name='scp')
    def test_affine_transform_texture_memory(self, xp, scp):
        a = xp.ones(self.shape, dtype=xp.float32)
        center = numpy.divide(numpy.subtract(self.shape, 1), 2)
    
        if len(self.shape) == 2:
            matrix = self._2d_rotation_matrix(self.theta, center)
        elif len(self.shape) == 3:
            matrix = self._3d_rotation_matrix(self.theta, center)
        else:
            return pytest.xfail('Unsupported shape')
    
        if self.output == 'empty':
            output = xp.empty(self.shape, dtype=xp.float32)
            if self.output_shape:
                return pytest.skip('This combination is tested in '
                                   'test_invalid_texture_arguments')
        else:
            output = self.output
    
        if self.output_shape:
            output_shape = (self.output_shape, ) * len(self.shape)
        else:
            output_shape = self.output_shape
    
        if xp == cupy:
            m = cupyx.scipy.ndimage.affine_transform
            matrix = cupy.array(matrix)
>           return m(a, matrix, output_shape=output_shape,
                     output=output, order=self.order,
                     mode=self.mode, texture_memory=True)

tests/cupyx_tests/scipy_tests/ndimage_tests/test_interpolation.py:398: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
cupyx/scipy/ndimage/interpolation.py:376: in affine_transform
    return _texture.affine_transformation(data=input,
cupyx/_texture.py:168: in affine_transformation
    texture_object = _create_texture_object(data,
cupyx/_texture.py:98: in _create_texture_object
    array = texture.CUDAarray(texture_fmt, *data.shape[::-1])
cupy/cuda/texture.pyx:296: in cupy.cuda.texture.CUDAarray.__init__
    self.ptr = runtime.malloc3DArray(desc.ptr, width, height, depth,
cupy_backends/cuda/api/runtime.pyx:593: in cupy_backends.cuda.api.runtime.malloc3DArray
    check_status(status)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

>   raise CUDARuntimeError(status)
E   AssertionError: Only cupy raises error
E   
E   Traceback (most recent call last):
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.Np3X0NVCM9/cupy/cupy/testing/_helper.py", line 47, in _call_func
E       result = impl(self, *args, **kw)
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.Np3X0NVCM9/cupy/tests/cupyx_tests/scipy_tests/ndimage_tests/test_interpolation.py", line 398, in test_affine_transform_texture_memory
E       return m(a, matrix, output_shape=output_shape,
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.Np3X0NVCM9/cupy/cupyx/scipy/ndimage/interpolation.py", line 376, in affine_transform
E       return _texture.affine_transformation(data=input,
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.Np3X0NVCM9/cupy/cupyx/_texture.py", line 168, in affine_transformation
E       texture_object = _create_texture_object(data,
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.Np3X0NVCM9/cupy/cupyx/_texture.py", line 98, in _create_texture_object
E       array = texture.CUDAarray(texture_fmt, *data.shape[::-1])
E     File "cupy/cuda/texture.pyx", line 296, in cupy.cuda.texture.CUDAarray.__init__
E       self.ptr = runtime.malloc3DArray(desc.ptr, width, height, depth,
E     File "cupy_backends/cuda/api/runtime.pyx", line 593, in cupy_backends.cuda.api.runtime.malloc3DArray
E       check_status(status)
E     File "cupy_backends/cuda/api/runtime.pyx", line 265, in cupy_backends.cuda.api.runtime.check_status
E       raise CUDARuntimeError(status)
E   cupy_backends.cuda.api.runtime.CUDARuntimeError: hipErrorUnknown: hipErrorUnknown

cupy_backends/cuda/api/runtime.pyx:265: AssertionError
----------------------------- Captured stderr call -----------------------------
Traceback (most recent call last):
  File "cupy_backends/cuda/api/runtime.pyx", line 644, in cupy_backends.cuda.api.runtime.freeArray
    check_status(status)
  File "cupy_backends/cuda/api/runtime.pyx", line 265, in cupy_backends.cuda.api.runtime.check_status
    raise CUDARuntimeError(status)
cupy_backends.cuda.api.runtime.CUDARuntimeError: hipErrorUnknown: hipErrorUnknown
_ TestAffineTransformTextureMemory.test_affine_transform_texture_memory[_param_109_{mode='constant', order=1, output=None, output_shape=None, shape=(10, 20, 30), theta=90}] _

self = <<cupyx_tests.scipy_tests.ndimage_tests.test_interpolation.TestAffineTransformTextureMemory object at 0x7fd705892d90>  parameter: {'mode': 'constant', 'order': 1, 'output': None, 'output_shape': None, 'shape': (10, 20, 30), 'theta': 90}>
xp = <module 'cupy' from '/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.Np3X0NVCM9/cupy/cupy/__init__.py'>
scp = <module 'cupyx.scipy' from '/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.Np3X0NVCM9/cupy/cupyx/scipy/__init__.py'>

    @testing.numpy_cupy_allclose(atol=0.1, scipy_name='scp')
    def test_affine_transform_texture_memory(self, xp, scp):
        a = xp.ones(self.shape, dtype=xp.float32)
        center = numpy.divide(numpy.subtract(self.shape, 1), 2)
    
        if len(self.shape) == 2:
            matrix = self._2d_rotation_matrix(self.theta, center)
        elif len(self.shape) == 3:
            matrix = self._3d_rotation_matrix(self.theta, center)
        else:
            return pytest.xfail('Unsupported shape')
    
        if self.output == 'empty':
            output = xp.empty(self.shape, dtype=xp.float32)
            if self.output_shape:
                return pytest.skip('This combination is tested in '
                                   'test_invalid_texture_arguments')
        else:
            output = self.output
    
        if self.output_shape:
            output_shape = (self.output_shape, ) * len(self.shape)
        else:
            output_shape = self.output_shape
    
        if xp == cupy:
            m = cupyx.scipy.ndimage.affine_transform
            matrix = cupy.array(matrix)
>           return m(a, matrix, output_shape=output_shape,
                     output=output, order=self.order,
                     mode=self.mode, texture_memory=True)

tests/cupyx_tests/scipy_tests/ndimage_tests/test_interpolation.py:398: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
cupyx/scipy/ndimage/interpolation.py:376: in affine_transform
    return _texture.affine_transformation(data=input,
cupyx/_texture.py:168: in affine_transformation
    texture_object = _create_texture_object(data,
cupyx/_texture.py:98: in _create_texture_object
    array = texture.CUDAarray(texture_fmt, *data.shape[::-1])
cupy/cuda/texture.pyx:296: in cupy.cuda.texture.CUDAarray.__init__
    self.ptr = runtime.malloc3DArray(desc.ptr, width, height, depth,
cupy_backends/cuda/api/runtime.pyx:593: in cupy_backends.cuda.api.runtime.malloc3DArray
    check_status(status)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

>   raise CUDARuntimeError(status)
E   AssertionError: Only cupy raises error
E   
E   Traceback (most recent call last):
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.Np3X0NVCM9/cupy/cupy/testing/_helper.py", line 47, in _call_func
E       result = impl(self, *args, **kw)
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.Np3X0NVCM9/cupy/tests/cupyx_tests/scipy_tests/ndimage_tests/test_interpolation.py", line 398, in test_affine_transform_texture_memory
E       return m(a, matrix, output_shape=output_shape,
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.Np3X0NVCM9/cupy/cupyx/scipy/ndimage/interpolation.py", line 376, in affine_transform
E       return _texture.affine_transformation(data=input,
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.Np3X0NVCM9/cupy/cupyx/_texture.py", line 168, in affine_transformation
E       texture_object = _create_texture_object(data,
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.Np3X0NVCM9/cupy/cupyx/_texture.py", line 98, in _create_texture_object
E       array = texture.CUDAarray(texture_fmt, *data.shape[::-1])
E     File "cupy/cuda/texture.pyx", line 296, in cupy.cuda.texture.CUDAarray.__init__
E       self.ptr = runtime.malloc3DArray(desc.ptr, width, height, depth,
E     File "cupy_backends/cuda/api/runtime.pyx", line 593, in cupy_backends.cuda.api.runtime.malloc3DArray
E       check_status(status)
E     File "cupy_backends/cuda/api/runtime.pyx", line 265, in cupy_backends.cuda.api.runtime.check_status
E       raise CUDARuntimeError(status)
E   cupy_backends.cuda.api.runtime.CUDARuntimeError: hipErrorUnknown: hipErrorUnknown

cupy_backends/cuda/api/runtime.pyx:265: AssertionError
----------------------------- Captured stderr call -----------------------------
Traceback (most recent call last):
  File "cupy_backends/cuda/api/runtime.pyx", line 644, in cupy_backends.cuda.api.runtime.freeArray
    check_status(status)
  File "cupy_backends/cuda/api/runtime.pyx", line 265, in cupy_backends.cuda.api.runtime.check_status
    raise CUDARuntimeError(status)
cupy_backends.cuda.api.runtime.CUDARuntimeError: hipErrorUnknown: hipErrorUnknown
_ TestAffineTransformTextureMemory.test_affine_transform_texture_memory[_param_110_{mode='constant', order=1, output=None, output_shape=None, shape=(10, 20, 30), theta=180}] _

self = <<cupyx_tests.scipy_tests.ndimage_tests.test_interpolation.TestAffineTransformTextureMemory object at 0x7fd7073e9eb0>  parameter: {'mode': 'constant', 'order': 1, 'output': None, 'output_shape': None, 'shape': (10, 20, 30), 'theta': 180}>
xp = <module 'cupy' from '/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.Np3X0NVCM9/cupy/cupy/__init__.py'>
scp = <module 'cupyx.scipy' from '/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.Np3X0NVCM9/cupy/cupyx/scipy/__init__.py'>

    @testing.numpy_cupy_allclose(atol=0.1, scipy_name='scp')
    def test_affine_transform_texture_memory(self, xp, scp):
        a = xp.ones(self.shape, dtype=xp.float32)
        center = numpy.divide(numpy.subtract(self.shape, 1), 2)
    
        if len(self.shape) == 2:
            matrix = self._2d_rotation_matrix(self.theta, center)
        elif len(self.shape) == 3:
            matrix = self._3d_rotation_matrix(self.theta, center)
        else:
            return pytest.xfail('Unsupported shape')
    
        if self.output == 'empty':
            output = xp.empty(self.shape, dtype=xp.float32)
            if self.output_shape:
                return pytest.skip('This combination is tested in '
                                   'test_invalid_texture_arguments')
        else:
            output = self.output
    
        if self.output_shape:
            output_shape = (self.output_shape, ) * len(self.shape)
        else:
            output_shape = self.output_shape
    
        if xp == cupy:
            m = cupyx.scipy.ndimage.affine_transform
            matrix = cupy.array(matrix)
>           return m(a, matrix, output_shape=output_shape,
                     output=output, order=self.order,
                     mode=self.mode, texture_memory=True)

tests/cupyx_tests/scipy_tests/ndimage_tests/test_interpolation.py:398: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
cupyx/scipy/ndimage/interpolation.py:376: in affine_transform
    return _texture.affine_transformation(data=input,
cupyx/_texture.py:168: in affine_transformation
    texture_object = _create_texture_object(data,
cupyx/_texture.py:98: in _create_texture_object
    array = texture.CUDAarray(texture_fmt, *data.shape[::-1])
cupy/cuda/texture.pyx:296: in cupy.cuda.texture.CUDAarray.__init__
    self.ptr = runtime.malloc3DArray(desc.ptr, width, height, depth,
cupy_backends/cuda/api/runtime.pyx:593: in cupy_backends.cuda.api.runtime.malloc3DArray
    check_status(status)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

>   raise CUDARuntimeError(status)
E   AssertionError: Only cupy raises error
E   
E   Traceback (most recent call last):
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.Np3X0NVCM9/cupy/cupy/testing/_helper.py", line 47, in _call_func
E       result = impl(self, *args, **kw)
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.Np3X0NVCM9/cupy/tests/cupyx_tests/scipy_tests/ndimage_tests/test_interpolation.py", line 398, in test_affine_transform_texture_memory
E       return m(a, matrix, output_shape=output_shape,
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.Np3X0NVCM9/cupy/cupyx/scipy/ndimage/interpolation.py", line 376, in affine_transform
E       return _texture.affine_transformation(data=input,
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.Np3X0NVCM9/cupy/cupyx/_texture.py", line 168, in affine_transformation
E       texture_object = _create_texture_object(data,
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.Np3X0NVCM9/cupy/cupyx/_texture.py", line 98, in _create_texture_object
E       array = texture.CUDAarray(texture_fmt, *data.shape[::-1])
E     File "cupy/cuda/texture.pyx", line 296, in cupy.cuda.texture.CUDAarray.__init__
E       self.ptr = runtime.malloc3DArray(desc.ptr, width, height, depth,
E     File "cupy_backends/cuda/api/runtime.pyx", line 593, in cupy_backends.cuda.api.runtime.malloc3DArray
E       check_status(status)
E     File "cupy_backends/cuda/api/runtime.pyx", line 265, in cupy_backends.cuda.api.runtime.check_status
E       raise CUDARuntimeError(status)
E   cupy_backends.cuda.api.runtime.CUDARuntimeError: hipErrorUnknown: hipErrorUnknown

cupy_backends/cuda/api/runtime.pyx:265: AssertionError
----------------------------- Captured stderr call -----------------------------
Traceback (most recent call last):
  File "cupy_backends/cuda/api/runtime.pyx", line 644, in cupy_backends.cuda.api.runtime.freeArray
    check_status(status)
  File "cupy_backends/cuda/api/runtime.pyx", line 265, in cupy_backends.cuda.api.runtime.check_status
    raise CUDARuntimeError(status)
cupy_backends.cuda.api.runtime.CUDARuntimeError: hipErrorUnknown: hipErrorUnknown
_ TestAffineTransformTextureMemory.test_affine_transform_texture_memory[_param_111_{mode='constant', order=1, output=None, output_shape=None, shape=(10, 20, 30), theta=270}] _

self = <<cupyx_tests.scipy_tests.ndimage_tests.test_interpolation.TestAffineTransformTextureMemory object at 0x7fd7081dca60>  parameter: {'mode': 'constant', 'order': 1, 'output': None, 'output_shape': None, 'shape': (10, 20, 30), 'theta': 270}>
xp = <module 'cupy' from '/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.Np3X0NVCM9/cupy/cupy/__init__.py'>
scp = <module 'cupyx.scipy' from '/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.Np3X0NVCM9/cupy/cupyx/scipy/__init__.py'>

    @testing.numpy_cupy_allclose(atol=0.1, scipy_name='scp')
    def test_affine_transform_texture_memory(self, xp, scp):
        a = xp.ones(self.shape, dtype=xp.float32)
        center = numpy.divide(numpy.subtract(self.shape, 1), 2)
    
        if len(self.shape) == 2:
            matrix = self._2d_rotation_matrix(self.theta, center)
        elif len(self.shape) == 3:
            matrix = self._3d_rotation_matrix(self.theta, center)
        else:
            return pytest.xfail('Unsupported shape')
    
        if self.output == 'empty':
            output = xp.empty(self.shape, dtype=xp.float32)
            if self.output_shape:
                return pytest.skip('This combination is tested in '
                                   'test_invalid_texture_arguments')
        else:
            output = self.output
    
        if self.output_shape:
            output_shape = (self.output_shape, ) * len(self.shape)
        else:
            output_shape = self.output_shape
    
        if xp == cupy:
            m = cupyx.scipy.ndimage.affine_transform
            matrix = cupy.array(matrix)
>           return m(a, matrix, output_shape=output_shape,
                     output=output, order=self.order,
                     mode=self.mode, texture_memory=True)

tests/cupyx_tests/scipy_tests/ndimage_tests/test_interpolation.py:398: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
cupyx/scipy/ndimage/interpolation.py:376: in affine_transform
    return _texture.affine_transformation(data=input,
cupyx/_texture.py:168: in affine_transformation
    texture_object = _create_texture_object(data,
cupyx/_texture.py:98: in _create_texture_object
    array = texture.CUDAarray(texture_fmt, *data.shape[::-1])
cupy/cuda/texture.pyx:296: in cupy.cuda.texture.CUDAarray.__init__
    self.ptr = runtime.malloc3DArray(desc.ptr, width, height, depth,
cupy_backends/cuda/api/runtime.pyx:593: in cupy_backends.cuda.api.runtime.malloc3DArray
    check_status(status)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

>   raise CUDARuntimeError(status)
E   AssertionError: Only cupy raises error
E   
E   Traceback (most recent call last):
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.Np3X0NVCM9/cupy/cupy/testing/_helper.py", line 47, in _call_func
E       result = impl(self, *args, **kw)
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.Np3X0NVCM9/cupy/tests/cupyx_tests/scipy_tests/ndimage_tests/test_interpolation.py", line 398, in test_affine_transform_texture_memory
E       return m(a, matrix, output_shape=output_shape,
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.Np3X0NVCM9/cupy/cupyx/scipy/ndimage/interpolation.py", line 376, in affine_transform
E       return _texture.affine_transformation(data=input,
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.Np3X0NVCM9/cupy/cupyx/_texture.py", line 168, in affine_transformation
E       texture_object = _create_texture_object(data,
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.Np3X0NVCM9/cupy/cupyx/_texture.py", line 98, in _create_texture_object
E       array = texture.CUDAarray(texture_fmt, *data.shape[::-1])
E     File "cupy/cuda/texture.pyx", line 296, in cupy.cuda.texture.CUDAarray.__init__
E       self.ptr = runtime.malloc3DArray(desc.ptr, width, height, depth,
E     File "cupy_backends/cuda/api/runtime.pyx", line 593, in cupy_backends.cuda.api.runtime.malloc3DArray
E       check_status(status)
E     File "cupy_backends/cuda/api/runtime.pyx", line 265, in cupy_backends.cuda.api.runtime.check_status
E       raise CUDARuntimeError(status)
E   cupy_backends.cuda.api.runtime.CUDARuntimeError: hipErrorUnknown: hipErrorUnknown

cupy_backends/cuda/api/runtime.pyx:265: AssertionError
----------------------------- Captured stderr call -----------------------------
Traceback (most recent call last):
  File "cupy_backends/cuda/api/runtime.pyx", line 644, in cupy_backends.cuda.api.runtime.freeArray
    check_status(status)
  File "cupy_backends/cuda/api/runtime.pyx", line 265, in cupy_backends.cuda.api.runtime.check_status
    raise CUDARuntimeError(status)
cupy_backends.cuda.api.runtime.CUDARuntimeError: hipErrorUnknown: hipErrorUnknown
_ TestAffineTransformTextureMemory.test_affine_transform_texture_memory[_param_112_{mode='constant', order=1, output=None, output_shape=10, shape=(100, 100), theta=0}] _

self = <<cupyx_tests.scipy_tests.ndimage_tests.test_interpolation.TestAffineTransformTextureMemory object at 0x7fd705a034c0>  parameter: {'mode': 'constant', 'order': 1, 'output': None, 'output_shape': 10, 'shape': (100, 100), 'theta': 0}>
xp = <module 'cupy' from '/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.Np3X0NVCM9/cupy/cupy/__init__.py'>
scp = <module 'cupyx.scipy' from '/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.Np3X0NVCM9/cupy/cupyx/scipy/__init__.py'>

    @testing.numpy_cupy_allclose(atol=0.1, scipy_name='scp')
    def test_affine_transform_texture_memory(self, xp, scp):
        a = xp.ones(self.shape, dtype=xp.float32)
        center = numpy.divide(numpy.subtract(self.shape, 1), 2)
    
        if len(self.shape) == 2:
            matrix = self._2d_rotation_matrix(self.theta, center)
        elif len(self.shape) == 3:
            matrix = self._3d_rotation_matrix(self.theta, center)
        else:
            return pytest.xfail('Unsupported shape')
    
        if self.output == 'empty':
            output = xp.empty(self.shape, dtype=xp.float32)
            if self.output_shape:
                return pytest.skip('This combination is tested in '
                                   'test_invalid_texture_arguments')
        else:
            output = self.output
    
        if self.output_shape:
            output_shape = (self.output_shape, ) * len(self.shape)
        else:
            output_shape = self.output_shape
    
        if xp == cupy:
            m = cupyx.scipy.ndimage.affine_transform
            matrix = cupy.array(matrix)
>           return m(a, matrix, output_shape=output_shape,
                     output=output, order=self.order,
                     mode=self.mode, texture_memory=True)

tests/cupyx_tests/scipy_tests/ndimage_tests/test_interpolation.py:398: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
cupyx/scipy/ndimage/interpolation.py:376: in affine_transform
    return _texture.affine_transformation(data=input,
cupyx/_texture.py:168: in affine_transformation
    texture_object = _create_texture_object(data,
cupyx/_texture.py:98: in _create_texture_object
    array = texture.CUDAarray(texture_fmt, *data.shape[::-1])
cupy/cuda/texture.pyx:296: in cupy.cuda.texture.CUDAarray.__init__
    self.ptr = runtime.malloc3DArray(desc.ptr, width, height, depth,
cupy_backends/cuda/api/runtime.pyx:593: in cupy_backends.cuda.api.runtime.malloc3DArray
    check_status(status)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

>   raise CUDARuntimeError(status)
E   AssertionError: Only cupy raises error
E   
E   Traceback (most recent call last):
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.Np3X0NVCM9/cupy/cupy/testing/_helper.py", line 47, in _call_func
E       result = impl(self, *args, **kw)
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.Np3X0NVCM9/cupy/tests/cupyx_tests/scipy_tests/ndimage_tests/test_interpolation.py", line 398, in test_affine_transform_texture_memory
E       return m(a, matrix, output_shape=output_shape,
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.Np3X0NVCM9/cupy/cupyx/scipy/ndimage/interpolation.py", line 376, in affine_transform
E       return _texture.affine_transformation(data=input,
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.Np3X0NVCM9/cupy/cupyx/_texture.py", line 168, in affine_transformation
E       texture_object = _create_texture_object(data,
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.Np3X0NVCM9/cupy/cupyx/_texture.py", line 98, in _create_texture_object
E       array = texture.CUDAarray(texture_fmt, *data.shape[::-1])
E     File "cupy/cuda/texture.pyx", line 296, in cupy.cuda.texture.CUDAarray.__init__
E       self.ptr = runtime.malloc3DArray(desc.ptr, width, height, depth,
E     File "cupy_backends/cuda/api/runtime.pyx", line 593, in cupy_backends.cuda.api.runtime.malloc3DArray
E       check_status(status)
E     File "cupy_backends/cuda/api/runtime.pyx", line 265, in cupy_backends.cuda.api.runtime.check_status
E       raise CUDARuntimeError(status)
E   cupy_backends.cuda.api.runtime.CUDARuntimeError: hipErrorUnknown: hipErrorUnknown

cupy_backends/cuda/api/runtime.pyx:265: AssertionError
----------------------------- Captured stderr call -----------------------------
Traceback (most recent call last):
  File "cupy_backends/cuda/api/runtime.pyx", line 644, in cupy_backends.cuda.api.runtime.freeArray
    check_status(status)
  File "cupy_backends/cuda/api/runtime.pyx", line 265, in cupy_backends.cuda.api.runtime.check_status
    raise CUDARuntimeError(status)
cupy_backends.cuda.api.runtime.CUDARuntimeError: hipErrorUnknown: hipErrorUnknown
_ TestAffineTransformTextureMemory.test_affine_transform_texture_memory[_param_113_{mode='constant', order=1, output=None, output_shape=10, shape=(100, 100), theta=90}] _

self = <<cupyx_tests.scipy_tests.ndimage_tests.test_interpolation.TestAffineTransformTextureMemory object at 0x7fd70736b160>  parameter: {'mode': 'constant', 'order': 1, 'output': None, 'output_shape': 10, 'shape': (100, 100), 'theta': 90}>
xp = <module 'cupy' from '/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.Np3X0NVCM9/cupy/cupy/__init__.py'>
scp = <module 'cupyx.scipy' from '/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.Np3X0NVCM9/cupy/cupyx/scipy/__init__.py'>

    @testing.numpy_cupy_allclose(atol=0.1, scipy_name='scp')
    def test_affine_transform_texture_memory(self, xp, scp):
        a = xp.ones(self.shape, dtype=xp.float32)
        center = numpy.divide(numpy.subtract(self.shape, 1), 2)
    
        if len(self.shape) == 2:
            matrix = self._2d_rotation_matrix(self.theta, center)
        elif len(self.shape) == 3:
            matrix = self._3d_rotation_matrix(self.theta, center)
        else:
            return pytest.xfail('Unsupported shape')
    
        if self.output == 'empty':
            output = xp.empty(self.shape, dtype=xp.float32)
            if self.output_shape:
                return pytest.skip('This combination is tested in '
                                   'test_invalid_texture_arguments')
        else:
            output = self.output
    
        if self.output_shape:
            output_shape = (self.output_shape, ) * len(self.shape)
        else:
            output_shape = self.output_shape
    
        if xp == cupy:
            m = cupyx.scipy.ndimage.affine_transform
            matrix = cupy.array(matrix)
>           return m(a, matrix, output_shape=output_shape,
                     output=output, order=self.order,
                     mode=self.mode, texture_memory=True)

tests/cupyx_tests/scipy_tests/ndimage_tests/test_interpolation.py:398: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
cupyx/scipy/ndimage/interpolation.py:376: in affine_transform
    return _texture.affine_transformation(data=input,
cupyx/_texture.py:168: in affine_transformation
    texture_object = _create_texture_object(data,
cupyx/_texture.py:98: in _create_texture_object
    array = texture.CUDAarray(texture_fmt, *data.shape[::-1])
cupy/cuda/texture.pyx:296: in cupy.cuda.texture.CUDAarray.__init__
    self.ptr = runtime.malloc3DArray(desc.ptr, width, height, depth,
cupy_backends/cuda/api/runtime.pyx:593: in cupy_backends.cuda.api.runtime.malloc3DArray
    check_status(status)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

>   raise CUDARuntimeError(status)
E   AssertionError: Only cupy raises error
E   
E   Traceback (most recent call last):
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.Np3X0NVCM9/cupy/cupy/testing/_helper.py", line 47, in _call_func
E       result = impl(self, *args, **kw)
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.Np3X0NVCM9/cupy/tests/cupyx_tests/scipy_tests/ndimage_tests/test_interpolation.py", line 398, in test_affine_transform_texture_memory
E       return m(a, matrix, output_shape=output_shape,
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.Np3X0NVCM9/cupy/cupyx/scipy/ndimage/interpolation.py", line 376, in affine_transform
E       return _texture.affine_transformation(data=input,
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.Np3X0NVCM9/cupy/cupyx/_texture.py", line 168, in affine_transformation
E       texture_object = _create_texture_object(data,
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.Np3X0NVCM9/cupy/cupyx/_texture.py", line 98, in _create_texture_object
E       array = texture.CUDAarray(texture_fmt, *data.shape[::-1])
E     File "cupy/cuda/texture.pyx", line 296, in cupy.cuda.texture.CUDAarray.__init__
E       self.ptr = runtime.malloc3DArray(desc.ptr, width, height, depth,
E     File "cupy_backends/cuda/api/runtime.pyx", line 593, in cupy_backends.cuda.api.runtime.malloc3DArray
E       check_status(status)
E     File "cupy_backends/cuda/api/runtime.pyx", line 265, in cupy_backends.cuda.api.runtime.check_status
E       raise CUDARuntimeError(status)
E   cupy_backends.cuda.api.runtime.CUDARuntimeError: hipErrorUnknown: hipErrorUnknown

cupy_backends/cuda/api/runtime.pyx:265: AssertionError
----------------------------- Captured stderr call -----------------------------
Traceback (most recent call last):
  File "cupy_backends/cuda/api/runtime.pyx", line 644, in cupy_backends.cuda.api.runtime.freeArray
    check_status(status)
  File "cupy_backends/cuda/api/runtime.pyx", line 265, in cupy_backends.cuda.api.runtime.check_status
    raise CUDARuntimeError(status)
cupy_backends.cuda.api.runtime.CUDARuntimeError: hipErrorUnknown: hipErrorUnknown
_ TestAffineTransformTextureMemory.test_affine_transform_texture_memory[_param_114_{mode='constant', order=1, output=None, output_shape=10, shape=(100, 100), theta=180}] _

self = <<cupyx_tests.scipy_tests.ndimage_tests.test_interpolation.TestAffineTransformTextureMemory object at 0x7fd7056c9e80>  parameter: {'mode': 'constant', 'order': 1, 'output': None, 'output_shape': 10, 'shape': (100, 100), 'theta': 180}>
xp = <module 'cupy' from '/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.Np3X0NVCM9/cupy/cupy/__init__.py'>
scp = <module 'cupyx.scipy' from '/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.Np3X0NVCM9/cupy/cupyx/scipy/__init__.py'>

    @testing.numpy_cupy_allclose(atol=0.1, scipy_name='scp')
    def test_affine_transform_texture_memory(self, xp, scp):
        a = xp.ones(self.shape, dtype=xp.float32)
        center = numpy.divide(numpy.subtract(self.shape, 1), 2)
    
        if len(self.shape) == 2:
            matrix = self._2d_rotation_matrix(self.theta, center)
        elif len(self.shape) == 3:
            matrix = self._3d_rotation_matrix(self.theta, center)
        else:
            return pytest.xfail('Unsupported shape')
    
        if self.output == 'empty':
            output = xp.empty(self.shape, dtype=xp.float32)
            if self.output_shape:
                return pytest.skip('This combination is tested in '
                                   'test_invalid_texture_arguments')
        else:
            output = self.output
    
        if self.output_shape:
            output_shape = (self.output_shape, ) * len(self.shape)
        else:
            output_shape = self.output_shape
    
        if xp == cupy:
            m = cupyx.scipy.ndimage.affine_transform
            matrix = cupy.array(matrix)
>           return m(a, matrix, output_shape=output_shape,
                     output=output, order=self.order,
                     mode=self.mode, texture_memory=True)

tests/cupyx_tests/scipy_tests/ndimage_tests/test_interpolation.py:398: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
cupyx/scipy/ndimage/interpolation.py:376: in affine_transform
    return _texture.affine_transformation(data=input,
cupyx/_texture.py:168: in affine_transformation
    texture_object = _create_texture_object(data,
cupyx/_texture.py:98: in _create_texture_object
    array = texture.CUDAarray(texture_fmt, *data.shape[::-1])
cupy/cuda/texture.pyx:296: in cupy.cuda.texture.CUDAarray.__init__
    self.ptr = runtime.malloc3DArray(desc.ptr, width, height, depth,
cupy_backends/cuda/api/runtime.pyx:593: in cupy_backends.cuda.api.runtime.malloc3DArray
    check_status(status)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

>   raise CUDARuntimeError(status)
E   AssertionError: Only cupy raises error
E   
E   Traceback (most recent call last):
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.Np3X0NVCM9/cupy/cupy/testing/_helper.py", line 47, in _call_func
E       result = impl(self, *args, **kw)
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.Np3X0NVCM9/cupy/tests/cupyx_tests/scipy_tests/ndimage_tests/test_interpolation.py", line 398, in test_affine_transform_texture_memory
E       return m(a, matrix, output_shape=output_shape,
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.Np3X0NVCM9/cupy/cupyx/scipy/ndimage/interpolation.py", line 376, in affine_transform
E       return _texture.affine_transformation(data=input,
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.Np3X0NVCM9/cupy/cupyx/_texture.py", line 168, in affine_transformation
E       texture_object = _create_texture_object(data,
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.Np3X0NVCM9/cupy/cupyx/_texture.py", line 98, in _create_texture_object
E       array = texture.CUDAarray(texture_fmt, *data.shape[::-1])
E     File "cupy/cuda/texture.pyx", line 296, in cupy.cuda.texture.CUDAarray.__init__
E       self.ptr = runtime.malloc3DArray(desc.ptr, width, height, depth,
E     File "cupy_backends/cuda/api/runtime.pyx", line 593, in cupy_backends.cuda.api.runtime.malloc3DArray
E       check_status(status)
E     File "cupy_backends/cuda/api/runtime.pyx", line 265, in cupy_backends.cuda.api.runtime.check_status
E       raise CUDARuntimeError(status)
E   cupy_backends.cuda.api.runtime.CUDARuntimeError: hipErrorUnknown: hipErrorUnknown

cupy_backends/cuda/api/runtime.pyx:265: AssertionError
----------------------------- Captured stderr call -----------------------------
Traceback (most recent call last):
  File "cupy_backends/cuda/api/runtime.pyx", line 644, in cupy_backends.cuda.api.runtime.freeArray
    check_status(status)
  File "cupy_backends/cuda/api/runtime.pyx", line 265, in cupy_backends.cuda.api.runtime.check_status
    raise CUDARuntimeError(status)
cupy_backends.cuda.api.runtime.CUDARuntimeError: hipErrorUnknown: hipErrorUnknown
_ TestAffineTransformTextureMemory.test_affine_transform_texture_memory[_param_115_{mode='constant', order=1, output=None, output_shape=10, shape=(100, 100), theta=270}] _

self = <<cupyx_tests.scipy_tests.ndimage_tests.test_interpolation.TestAffineTransformTextureMemory object at 0x7fd7065aa160>  parameter: {'mode': 'constant', 'order': 1, 'output': None, 'output_shape': 10, 'shape': (100, 100), 'theta': 270}>
xp = <module 'cupy' from '/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.Np3X0NVCM9/cupy/cupy/__init__.py'>
scp = <module 'cupyx.scipy' from '/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.Np3X0NVCM9/cupy/cupyx/scipy/__init__.py'>

    @testing.numpy_cupy_allclose(atol=0.1, scipy_name='scp')
    def test_affine_transform_texture_memory(self, xp, scp):
        a = xp.ones(self.shape, dtype=xp.float32)
        center = numpy.divide(numpy.subtract(self.shape, 1), 2)
    
        if len(self.shape) == 2:
            matrix = self._2d_rotation_matrix(self.theta, center)
        elif len(self.shape) == 3:
            matrix = self._3d_rotation_matrix(self.theta, center)
        else:
            return pytest.xfail('Unsupported shape')
    
        if self.output == 'empty':
            output = xp.empty(self.shape, dtype=xp.float32)
            if self.output_shape:
                return pytest.skip('This combination is tested in '
                                   'test_invalid_texture_arguments')
        else:
            output = self.output
    
        if self.output_shape:
            output_shape = (self.output_shape, ) * len(self.shape)
        else:
            output_shape = self.output_shape
    
        if xp == cupy:
            m = cupyx.scipy.ndimage.affine_transform
            matrix = cupy.array(matrix)
>           return m(a, matrix, output_shape=output_shape,
                     output=output, order=self.order,
                     mode=self.mode, texture_memory=True)

tests/cupyx_tests/scipy_tests/ndimage_tests/test_interpolation.py:398: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
cupyx/scipy/ndimage/interpolation.py:376: in affine_transform
    return _texture.affine_transformation(data=input,
cupyx/_texture.py:168: in affine_transformation
    texture_object = _create_texture_object(data,
cupyx/_texture.py:98: in _create_texture_object
    array = texture.CUDAarray(texture_fmt, *data.shape[::-1])
cupy/cuda/texture.pyx:296: in cupy.cuda.texture.CUDAarray.__init__
    self.ptr = runtime.malloc3DArray(desc.ptr, width, height, depth,
cupy_backends/cuda/api/runtime.pyx:593: in cupy_backends.cuda.api.runtime.malloc3DArray
    check_status(status)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

>   raise CUDARuntimeError(status)
E   AssertionError: Only cupy raises error
E   
E   Traceback (most recent call last):
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.Np3X0NVCM9/cupy/cupy/testing/_helper.py", line 47, in _call_func
E       result = impl(self, *args, **kw)
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.Np3X0NVCM9/cupy/tests/cupyx_tests/scipy_tests/ndimage_tests/test_interpolation.py", line 398, in test_affine_transform_texture_memory
E       return m(a, matrix, output_shape=output_shape,
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.Np3X0NVCM9/cupy/cupyx/scipy/ndimage/interpolation.py", line 376, in affine_transform
E       return _texture.affine_transformation(data=input,
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.Np3X0NVCM9/cupy/cupyx/_texture.py", line 168, in affine_transformation
E       texture_object = _create_texture_object(data,
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.Np3X0NVCM9/cupy/cupyx/_texture.py", line 98, in _create_texture_object
E       array = texture.CUDAarray(texture_fmt, *data.shape[::-1])
E     File "cupy/cuda/texture.pyx", line 296, in cupy.cuda.texture.CUDAarray.__init__
E       self.ptr = runtime.malloc3DArray(desc.ptr, width, height, depth,
E     File "cupy_backends/cuda/api/runtime.pyx", line 593, in cupy_backends.cuda.api.runtime.malloc3DArray
E       check_status(status)
E     File "cupy_backends/cuda/api/runtime.pyx", line 265, in cupy_backends.cuda.api.runtime.check_status
E       raise CUDARuntimeError(status)
E   cupy_backends.cuda.api.runtime.CUDARuntimeError: hipErrorUnknown: hipErrorUnknown

cupy_backends/cuda/api/runtime.pyx:265: AssertionError
----------------------------- Captured stderr call -----------------------------
Traceback (most recent call last):
  File "cupy_backends/cuda/api/runtime.pyx", line 644, in cupy_backends.cuda.api.runtime.freeArray
    check_status(status)
  File "cupy_backends/cuda/api/runtime.pyx", line 265, in cupy_backends.cuda.api.runtime.check_status
    raise CUDARuntimeError(status)
cupy_backends.cuda.api.runtime.CUDARuntimeError: hipErrorUnknown: hipErrorUnknown
_ TestAffineTransformTextureMemory.test_affine_transform_texture_memory[_param_116_{mode='constant', order=1, output=None, output_shape=10, shape=(10, 20), theta=0}] _

self = <<cupyx_tests.scipy_tests.ndimage_tests.test_interpolation.TestAffineTransformTextureMemory object at 0x7fd706e6c8e0>  parameter: {'mode': 'constant', 'order': 1, 'output': None, 'output_shape': 10, 'shape': (10, 20), 'theta': 0}>
xp = <module 'cupy' from '/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.Np3X0NVCM9/cupy/cupy/__init__.py'>
scp = <module 'cupyx.scipy' from '/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.Np3X0NVCM9/cupy/cupyx/scipy/__init__.py'>

    @testing.numpy_cupy_allclose(atol=0.1, scipy_name='scp')
    def test_affine_transform_texture_memory(self, xp, scp):
        a = xp.ones(self.shape, dtype=xp.float32)
        center = numpy.divide(numpy.subtract(self.shape, 1), 2)
    
        if len(self.shape) == 2:
            matrix = self._2d_rotation_matrix(self.theta, center)
        elif len(self.shape) == 3:
            matrix = self._3d_rotation_matrix(self.theta, center)
        else:
            return pytest.xfail('Unsupported shape')
    
        if self.output == 'empty':
            output = xp.empty(self.shape, dtype=xp.float32)
            if self.output_shape:
                return pytest.skip('This combination is tested in '
                                   'test_invalid_texture_arguments')
        else:
            output = self.output
    
        if self.output_shape:
            output_shape = (self.output_shape, ) * len(self.shape)
        else:
            output_shape = self.output_shape
    
        if xp == cupy:
            m = cupyx.scipy.ndimage.affine_transform
            matrix = cupy.array(matrix)
>           return m(a, matrix, output_shape=output_shape,
                     output=output, order=self.order,
                     mode=self.mode, texture_memory=True)

tests/cupyx_tests/scipy_tests/ndimage_tests/test_interpolation.py:398: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
cupyx/scipy/ndimage/interpolation.py:376: in affine_transform
    return _texture.affine_transformation(data=input,
cupyx/_texture.py:168: in affine_transformation
    texture_object = _create_texture_object(data,
cupyx/_texture.py:98: in _create_texture_object
    array = texture.CUDAarray(texture_fmt, *data.shape[::-1])
cupy/cuda/texture.pyx:296: in cupy.cuda.texture.CUDAarray.__init__
    self.ptr = runtime.malloc3DArray(desc.ptr, width, height, depth,
cupy_backends/cuda/api/runtime.pyx:593: in cupy_backends.cuda.api.runtime.malloc3DArray
    check_status(status)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

>   raise CUDARuntimeError(status)
E   AssertionError: Only cupy raises error
E   
E   Traceback (most recent call last):
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.Np3X0NVCM9/cupy/cupy/testing/_helper.py", line 47, in _call_func
E       result = impl(self, *args, **kw)
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.Np3X0NVCM9/cupy/tests/cupyx_tests/scipy_tests/ndimage_tests/test_interpolation.py", line 398, in test_affine_transform_texture_memory
E       return m(a, matrix, output_shape=output_shape,
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.Np3X0NVCM9/cupy/cupyx/scipy/ndimage/interpolation.py", line 376, in affine_transform
E       return _texture.affine_transformation(data=input,
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.Np3X0NVCM9/cupy/cupyx/_texture.py", line 168, in affine_transformation
E       texture_object = _create_texture_object(data,
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.Np3X0NVCM9/cupy/cupyx/_texture.py", line 98, in _create_texture_object
E       array = texture.CUDAarray(texture_fmt, *data.shape[::-1])
E     File "cupy/cuda/texture.pyx", line 296, in cupy.cuda.texture.CUDAarray.__init__
E       self.ptr = runtime.malloc3DArray(desc.ptr, width, height, depth,
E     File "cupy_backends/cuda/api/runtime.pyx", line 593, in cupy_backends.cuda.api.runtime.malloc3DArray
E       check_status(status)
E     File "cupy_backends/cuda/api/runtime.pyx", line 265, in cupy_backends.cuda.api.runtime.check_status
E       raise CUDARuntimeError(status)
E   cupy_backends.cuda.api.runtime.CUDARuntimeError: hipErrorUnknown: hipErrorUnknown

cupy_backends/cuda/api/runtime.pyx:265: AssertionError
----------------------------- Captured stderr call -----------------------------
Traceback (most recent call last):
  File "cupy_backends/cuda/api/runtime.pyx", line 644, in cupy_backends.cuda.api.runtime.freeArray
    check_status(status)
  File "cupy_backends/cuda/api/runtime.pyx", line 265, in cupy_backends.cuda.api.runtime.check_status
    raise CUDARuntimeError(status)
cupy_backends.cuda.api.runtime.CUDARuntimeError: hipErrorUnknown: hipErrorUnknown
_ TestAffineTransformTextureMemory.test_affine_transform_texture_memory[_param_117_{mode='constant', order=1, output=None, output_shape=10, shape=(10, 20), theta=90}] _

self = <<cupyx_tests.scipy_tests.ndimage_tests.test_interpolation.TestAffineTransformTextureMemory object at 0x7fd7058bac70>  parameter: {'mode': 'constant', 'order': 1, 'output': None, 'output_shape': 10, 'shape': (10, 20), 'theta': 90}>
xp = <module 'cupy' from '/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.Np3X0NVCM9/cupy/cupy/__init__.py'>
scp = <module 'cupyx.scipy' from '/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.Np3X0NVCM9/cupy/cupyx/scipy/__init__.py'>

    @testing.numpy_cupy_allclose(atol=0.1, scipy_name='scp')
    def test_affine_transform_texture_memory(self, xp, scp):
        a = xp.ones(self.shape, dtype=xp.float32)
        center = numpy.divide(numpy.subtract(self.shape, 1), 2)
    
        if len(self.shape) == 2:
            matrix = self._2d_rotation_matrix(self.theta, center)
        elif len(self.shape) == 3:
            matrix = self._3d_rotation_matrix(self.theta, center)
        else:
            return pytest.xfail('Unsupported shape')
    
        if self.output == 'empty':
            output = xp.empty(self.shape, dtype=xp.float32)
            if self.output_shape:
                return pytest.skip('This combination is tested in '
                                   'test_invalid_texture_arguments')
        else:
            output = self.output
    
        if self.output_shape:
            output_shape = (self.output_shape, ) * len(self.shape)
        else:
            output_shape = self.output_shape
    
        if xp == cupy:
            m = cupyx.scipy.ndimage.affine_transform
            matrix = cupy.array(matrix)
>           return m(a, matrix, output_shape=output_shape,
                     output=output, order=self.order,
                     mode=self.mode, texture_memory=True)

tests/cupyx_tests/scipy_tests/ndimage_tests/test_interpolation.py:398: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
cupyx/scipy/ndimage/interpolation.py:376: in affine_transform
    return _texture.affine_transformation(data=input,
cupyx/_texture.py:168: in affine_transformation
    texture_object = _create_texture_object(data,
cupyx/_texture.py:98: in _create_texture_object
    array = texture.CUDAarray(texture_fmt, *data.shape[::-1])
cupy/cuda/texture.pyx:296: in cupy.cuda.texture.CUDAarray.__init__
    self.ptr = runtime.malloc3DArray(desc.ptr, width, height, depth,
cupy_backends/cuda/api/runtime.pyx:593: in cupy_backends.cuda.api.runtime.malloc3DArray
    check_status(status)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

>   raise CUDARuntimeError(status)
E   AssertionError: Only cupy raises error
E   
E   Traceback (most recent call last):
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.Np3X0NVCM9/cupy/cupy/testing/_helper.py", line 47, in _call_func
E       result = impl(self, *args, **kw)
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.Np3X0NVCM9/cupy/tests/cupyx_tests/scipy_tests/ndimage_tests/test_interpolation.py", line 398, in test_affine_transform_texture_memory
E       return m(a, matrix, output_shape=output_shape,
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.Np3X0NVCM9/cupy/cupyx/scipy/ndimage/interpolation.py", line 376, in affine_transform
E       return _texture.affine_transformation(data=input,
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.Np3X0NVCM9/cupy/cupyx/_texture.py", line 168, in affine_transformation
E       texture_object = _create_texture_object(data,
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.Np3X0NVCM9/cupy/cupyx/_texture.py", line 98, in _create_texture_object
E       array = texture.CUDAarray(texture_fmt, *data.shape[::-1])
E     File "cupy/cuda/texture.pyx", line 296, in cupy.cuda.texture.CUDAarray.__init__
E       self.ptr = runtime.malloc3DArray(desc.ptr, width, height, depth,
E     File "cupy_backends/cuda/api/runtime.pyx", line 593, in cupy_backends.cuda.api.runtime.malloc3DArray
E       check_status(status)
E     File "cupy_backends/cuda/api/runtime.pyx", line 265, in cupy_backends.cuda.api.runtime.check_status
E       raise CUDARuntimeError(status)
E   cupy_backends.cuda.api.runtime.CUDARuntimeError: hipErrorUnknown: hipErrorUnknown

cupy_backends/cuda/api/runtime.pyx:265: AssertionError
----------------------------- Captured stderr call -----------------------------
Traceback (most recent call last):
  File "cupy_backends/cuda/api/runtime.pyx", line 644, in cupy_backends.cuda.api.runtime.freeArray
    check_status(status)
  File "cupy_backends/cuda/api/runtime.pyx", line 265, in cupy_backends.cuda.api.runtime.check_status
    raise CUDARuntimeError(status)
cupy_backends.cuda.api.runtime.CUDARuntimeError: hipErrorUnknown: hipErrorUnknown
_ TestAffineTransformTextureMemory.test_affine_transform_texture_memory[_param_118_{mode='constant', order=1, output=None, output_shape=10, shape=(10, 20), theta=180}] _

self = <<cupyx_tests.scipy_tests.ndimage_tests.test_interpolation.TestAffineTransformTextureMemory object at 0x7fd7058063d0>  parameter: {'mode': 'constant', 'order': 1, 'output': None, 'output_shape': 10, 'shape': (10, 20), 'theta': 180}>
xp = <module 'cupy' from '/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.Np3X0NVCM9/cupy/cupy/__init__.py'>
scp = <module 'cupyx.scipy' from '/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.Np3X0NVCM9/cupy/cupyx/scipy/__init__.py'>

    @testing.numpy_cupy_allclose(atol=0.1, scipy_name='scp')
    def test_affine_transform_texture_memory(self, xp, scp):
        a = xp.ones(self.shape, dtype=xp.float32)
        center = numpy.divide(numpy.subtract(self.shape, 1), 2)
    
        if len(self.shape) == 2:
            matrix = self._2d_rotation_matrix(self.theta, center)
        elif len(self.shape) == 3:
            matrix = self._3d_rotation_matrix(self.theta, center)
        else:
            return pytest.xfail('Unsupported shape')
    
        if self.output == 'empty':
            output = xp.empty(self.shape, dtype=xp.float32)
            if self.output_shape:
                return pytest.skip('This combination is tested in '
                                   'test_invalid_texture_arguments')
        else:
            output = self.output
    
        if self.output_shape:
            output_shape = (self.output_shape, ) * len(self.shape)
        else:
            output_shape = self.output_shape
    
        if xp == cupy:
            m = cupyx.scipy.ndimage.affine_transform
            matrix = cupy.array(matrix)
>           return m(a, matrix, output_shape=output_shape,
                     output=output, order=self.order,
                     mode=self.mode, texture_memory=True)

tests/cupyx_tests/scipy_tests/ndimage_tests/test_interpolation.py:398: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
cupyx/scipy/ndimage/interpolation.py:376: in affine_transform
    return _texture.affine_transformation(data=input,
cupyx/_texture.py:168: in affine_transformation
    texture_object = _create_texture_object(data,
cupyx/_texture.py:98: in _create_texture_object
    array = texture.CUDAarray(texture_fmt, *data.shape[::-1])
cupy/cuda/texture.pyx:296: in cupy.cuda.texture.CUDAarray.__init__
    self.ptr = runtime.malloc3DArray(desc.ptr, width, height, depth,
cupy_backends/cuda/api/runtime.pyx:593: in cupy_backends.cuda.api.runtime.malloc3DArray
    check_status(status)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

>   raise CUDARuntimeError(status)
E   AssertionError: Only cupy raises error
E   
E   Traceback (most recent call last):
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.Np3X0NVCM9/cupy/cupy/testing/_helper.py", line 47, in _call_func
E       result = impl(self, *args, **kw)
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.Np3X0NVCM9/cupy/tests/cupyx_tests/scipy_tests/ndimage_tests/test_interpolation.py", line 398, in test_affine_transform_texture_memory
E       return m(a, matrix, output_shape=output_shape,
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.Np3X0NVCM9/cupy/cupyx/scipy/ndimage/interpolation.py", line 376, in affine_transform
E       return _texture.affine_transformation(data=input,
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.Np3X0NVCM9/cupy/cupyx/_texture.py", line 168, in affine_transformation
E       texture_object = _create_texture_object(data,
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.Np3X0NVCM9/cupy/cupyx/_texture.py", line 98, in _create_texture_object
E       array = texture.CUDAarray(texture_fmt, *data.shape[::-1])
E     File "cupy/cuda/texture.pyx", line 296, in cupy.cuda.texture.CUDAarray.__init__
E       self.ptr = runtime.malloc3DArray(desc.ptr, width, height, depth,
E     File "cupy_backends/cuda/api/runtime.pyx", line 593, in cupy_backends.cuda.api.runtime.malloc3DArray
E       check_status(status)
E     File "cupy_backends/cuda/api/runtime.pyx", line 265, in cupy_backends.cuda.api.runtime.check_status
E       raise CUDARuntimeError(status)
E   cupy_backends.cuda.api.runtime.CUDARuntimeError: hipErrorUnknown: hipErrorUnknown

cupy_backends/cuda/api/runtime.pyx:265: AssertionError
----------------------------- Captured stderr call -----------------------------
Traceback (most recent call last):
  File "cupy_backends/cuda/api/runtime.pyx", line 644, in cupy_backends.cuda.api.runtime.freeArray
    check_status(status)
  File "cupy_backends/cuda/api/runtime.pyx", line 265, in cupy_backends.cuda.api.runtime.check_status
    raise CUDARuntimeError(status)
cupy_backends.cuda.api.runtime.CUDARuntimeError: hipErrorUnknown: hipErrorUnknown
_ TestAffineTransformTextureMemory.test_affine_transform_texture_memory[_param_119_{mode='constant', order=1, output=None, output_shape=10, shape=(10, 20), theta=270}] _

self = <<cupyx_tests.scipy_tests.ndimage_tests.test_interpolation.TestAffineTransformTextureMemory object at 0x7fd706495130>  parameter: {'mode': 'constant', 'order': 1, 'output': None, 'output_shape': 10, 'shape': (10, 20), 'theta': 270}>
xp = <module 'cupy' from '/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.Np3X0NVCM9/cupy/cupy/__init__.py'>
scp = <module 'cupyx.scipy' from '/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.Np3X0NVCM9/cupy/cupyx/scipy/__init__.py'>

    @testing.numpy_cupy_allclose(atol=0.1, scipy_name='scp')
    def test_affine_transform_texture_memory(self, xp, scp):
        a = xp.ones(self.shape, dtype=xp.float32)
        center = numpy.divide(numpy.subtract(self.shape, 1), 2)
    
        if len(self.shape) == 2:
            matrix = self._2d_rotation_matrix(self.theta, center)
        elif len(self.shape) == 3:
            matrix = self._3d_rotation_matrix(self.theta, center)
        else:
            return pytest.xfail('Unsupported shape')
    
        if self.output == 'empty':
            output = xp.empty(self.shape, dtype=xp.float32)
            if self.output_shape:
                return pytest.skip('This combination is tested in '
                                   'test_invalid_texture_arguments')
        else:
            output = self.output
    
        if self.output_shape:
            output_shape = (self.output_shape, ) * len(self.shape)
        else:
            output_shape = self.output_shape
    
        if xp == cupy:
            m = cupyx.scipy.ndimage.affine_transform
            matrix = cupy.array(matrix)
>           return m(a, matrix, output_shape=output_shape,
                     output=output, order=self.order,
                     mode=self.mode, texture_memory=True)

tests/cupyx_tests/scipy_tests/ndimage_tests/test_interpolation.py:398: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
cupyx/scipy/ndimage/interpolation.py:376: in affine_transform
    return _texture.affine_transformation(data=input,
cupyx/_texture.py:168: in affine_transformation
    texture_object = _create_texture_object(data,
cupyx/_texture.py:98: in _create_texture_object
    array = texture.CUDAarray(texture_fmt, *data.shape[::-1])
cupy/cuda/texture.pyx:296: in cupy.cuda.texture.CUDAarray.__init__
    self.ptr = runtime.malloc3DArray(desc.ptr, width, height, depth,
cupy_backends/cuda/api/runtime.pyx:593: in cupy_backends.cuda.api.runtime.malloc3DArray
    check_status(status)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

>   raise CUDARuntimeError(status)
E   AssertionError: Only cupy raises error
E   
E   Traceback (most recent call last):
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.Np3X0NVCM9/cupy/cupy/testing/_helper.py", line 47, in _call_func
E       result = impl(self, *args, **kw)
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.Np3X0NVCM9/cupy/tests/cupyx_tests/scipy_tests/ndimage_tests/test_interpolation.py", line 398, in test_affine_transform_texture_memory
E       return m(a, matrix, output_shape=output_shape,
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.Np3X0NVCM9/cupy/cupyx/scipy/ndimage/interpolation.py", line 376, in affine_transform
E       return _texture.affine_transformation(data=input,
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.Np3X0NVCM9/cupy/cupyx/_texture.py", line 168, in affine_transformation
E       texture_object = _create_texture_object(data,
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.Np3X0NVCM9/cupy/cupyx/_texture.py", line 98, in _create_texture_object
E       array = texture.CUDAarray(texture_fmt, *data.shape[::-1])
E     File "cupy/cuda/texture.pyx", line 296, in cupy.cuda.texture.CUDAarray.__init__
E       self.ptr = runtime.malloc3DArray(desc.ptr, width, height, depth,
E     File "cupy_backends/cuda/api/runtime.pyx", line 593, in cupy_backends.cuda.api.runtime.malloc3DArray
E       check_status(status)
E     File "cupy_backends/cuda/api/runtime.pyx", line 265, in cupy_backends.cuda.api.runtime.check_status
E       raise CUDARuntimeError(status)
E   cupy_backends.cuda.api.runtime.CUDARuntimeError: hipErrorUnknown: hipErrorUnknown

cupy_backends/cuda/api/runtime.pyx:265: AssertionError
----------------------------- Captured stderr call -----------------------------
Traceback (most recent call last):
  File "cupy_backends/cuda/api/runtime.pyx", line 644, in cupy_backends.cuda.api.runtime.freeArray
    check_status(status)
  File "cupy_backends/cuda/api/runtime.pyx", line 265, in cupy_backends.cuda.api.runtime.check_status
    raise CUDARuntimeError(status)
cupy_backends.cuda.api.runtime.CUDARuntimeError: hipErrorUnknown: hipErrorUnknown
_ TestAffineTransformTextureMemory.test_affine_transform_texture_memory[_param_120_{mode='constant', order=1, output=None, output_shape=10, shape=(10, 10, 10), theta=0}] _

self = <<cupyx_tests.scipy_tests.ndimage_tests.test_interpolation.TestAffineTransformTextureMemory object at 0x7fd7057800d0>  parameter: {'mode': 'constant', 'order': 1, 'output': None, 'output_shape': 10, 'shape': (10, 10, 10), 'theta': 0}>
xp = <module 'cupy' from '/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.Np3X0NVCM9/cupy/cupy/__init__.py'>
scp = <module 'cupyx.scipy' from '/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.Np3X0NVCM9/cupy/cupyx/scipy/__init__.py'>

    @testing.numpy_cupy_allclose(atol=0.1, scipy_name='scp')
    def test_affine_transform_texture_memory(self, xp, scp):
        a = xp.ones(self.shape, dtype=xp.float32)
        center = numpy.divide(numpy.subtract(self.shape, 1), 2)
    
        if len(self.shape) == 2:
            matrix = self._2d_rotation_matrix(self.theta, center)
        elif len(self.shape) == 3:
            matrix = self._3d_rotation_matrix(self.theta, center)
        else:
            return pytest.xfail('Unsupported shape')
    
        if self.output == 'empty':
            output = xp.empty(self.shape, dtype=xp.float32)
            if self.output_shape:
                return pytest.skip('This combination is tested in '
                                   'test_invalid_texture_arguments')
        else:
            output = self.output
    
        if self.output_shape:
            output_shape = (self.output_shape, ) * len(self.shape)
        else:
            output_shape = self.output_shape
    
        if xp == cupy:
            m = cupyx.scipy.ndimage.affine_transform
            matrix = cupy.array(matrix)
>           return m(a, matrix, output_shape=output_shape,
                     output=output, order=self.order,
                     mode=self.mode, texture_memory=True)

tests/cupyx_tests/scipy_tests/ndimage_tests/test_interpolation.py:398: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
cupyx/scipy/ndimage/interpolation.py:376: in affine_transform
    return _texture.affine_transformation(data=input,
cupyx/_texture.py:168: in affine_transformation
    texture_object = _create_texture_object(data,
cupyx/_texture.py:98: in _create_texture_object
    array = texture.CUDAarray(texture_fmt, *data.shape[::-1])
cupy/cuda/texture.pyx:296: in cupy.cuda.texture.CUDAarray.__init__
    self.ptr = runtime.malloc3DArray(desc.ptr, width, height, depth,
cupy_backends/cuda/api/runtime.pyx:593: in cupy_backends.cuda.api.runtime.malloc3DArray
    check_status(status)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

>   raise CUDARuntimeError(status)
E   AssertionError: Only cupy raises error
E   
E   Traceback (most recent call last):
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.Np3X0NVCM9/cupy/cupy/testing/_helper.py", line 47, in _call_func
E       result = impl(self, *args, **kw)
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.Np3X0NVCM9/cupy/tests/cupyx_tests/scipy_tests/ndimage_tests/test_interpolation.py", line 398, in test_affine_transform_texture_memory
E       return m(a, matrix, output_shape=output_shape,
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.Np3X0NVCM9/cupy/cupyx/scipy/ndimage/interpolation.py", line 376, in affine_transform
E       return _texture.affine_transformation(data=input,
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.Np3X0NVCM9/cupy/cupyx/_texture.py", line 168, in affine_transformation
E       texture_object = _create_texture_object(data,
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.Np3X0NVCM9/cupy/cupyx/_texture.py", line 98, in _create_texture_object
E       array = texture.CUDAarray(texture_fmt, *data.shape[::-1])
E     File "cupy/cuda/texture.pyx", line 296, in cupy.cuda.texture.CUDAarray.__init__
E       self.ptr = runtime.malloc3DArray(desc.ptr, width, height, depth,
E     File "cupy_backends/cuda/api/runtime.pyx", line 593, in cupy_backends.cuda.api.runtime.malloc3DArray
E       check_status(status)
E     File "cupy_backends/cuda/api/runtime.pyx", line 265, in cupy_backends.cuda.api.runtime.check_status
E       raise CUDARuntimeError(status)
E   cupy_backends.cuda.api.runtime.CUDARuntimeError: hipErrorUnknown: hipErrorUnknown

cupy_backends/cuda/api/runtime.pyx:265: AssertionError
----------------------------- Captured stderr call -----------------------------
Traceback (most recent call last):
  File "cupy_backends/cuda/api/runtime.pyx", line 644, in cupy_backends.cuda.api.runtime.freeArray
    check_status(status)
  File "cupy_backends/cuda/api/runtime.pyx", line 265, in cupy_backends.cuda.api.runtime.check_status
    raise CUDARuntimeError(status)
cupy_backends.cuda.api.runtime.CUDARuntimeError: hipErrorUnknown: hipErrorUnknown
_ TestAffineTransformTextureMemory.test_affine_transform_texture_memory[_param_121_{mode='constant', order=1, output=None, output_shape=10, shape=(10, 10, 10), theta=90}] _

self = <<cupyx_tests.scipy_tests.ndimage_tests.test_interpolation.TestAffineTransformTextureMemory object at 0x7fd7056c50d0>  parameter: {'mode': 'constant', 'order': 1, 'output': None, 'output_shape': 10, 'shape': (10, 10, 10), 'theta': 90}>
xp = <module 'cupy' from '/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.Np3X0NVCM9/cupy/cupy/__init__.py'>
scp = <module 'cupyx.scipy' from '/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.Np3X0NVCM9/cupy/cupyx/scipy/__init__.py'>

    @testing.numpy_cupy_allclose(atol=0.1, scipy_name='scp')
    def test_affine_transform_texture_memory(self, xp, scp):
        a = xp.ones(self.shape, dtype=xp.float32)
        center = numpy.divide(numpy.subtract(self.shape, 1), 2)
    
        if len(self.shape) == 2:
            matrix = self._2d_rotation_matrix(self.theta, center)
        elif len(self.shape) == 3:
            matrix = self._3d_rotation_matrix(self.theta, center)
        else:
            return pytest.xfail('Unsupported shape')
    
        if self.output == 'empty':
            output = xp.empty(self.shape, dtype=xp.float32)
            if self.output_shape:
                return pytest.skip('This combination is tested in '
                                   'test_invalid_texture_arguments')
        else:
            output = self.output
    
        if self.output_shape:
            output_shape = (self.output_shape, ) * len(self.shape)
        else:
            output_shape = self.output_shape
    
        if xp == cupy:
            m = cupyx.scipy.ndimage.affine_transform
            matrix = cupy.array(matrix)
>           return m(a, matrix, output_shape=output_shape,
                     output=output, order=self.order,
                     mode=self.mode, texture_memory=True)

tests/cupyx_tests/scipy_tests/ndimage_tests/test_interpolation.py:398: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
cupyx/scipy/ndimage/interpolation.py:376: in affine_transform
    return _texture.affine_transformation(data=input,
cupyx/_texture.py:168: in affine_transformation
    texture_object = _create_texture_object(data,
cupyx/_texture.py:98: in _create_texture_object
    array = texture.CUDAarray(texture_fmt, *data.shape[::-1])
cupy/cuda/texture.pyx:296: in cupy.cuda.texture.CUDAarray.__init__
    self.ptr = runtime.malloc3DArray(desc.ptr, width, height, depth,
cupy_backends/cuda/api/runtime.pyx:593: in cupy_backends.cuda.api.runtime.malloc3DArray
    check_status(status)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

>   raise CUDARuntimeError(status)
E   AssertionError: Only cupy raises error
E   
E   Traceback (most recent call last):
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.Np3X0NVCM9/cupy/cupy/testing/_helper.py", line 47, in _call_func
E       result = impl(self, *args, **kw)
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.Np3X0NVCM9/cupy/tests/cupyx_tests/scipy_tests/ndimage_tests/test_interpolation.py", line 398, in test_affine_transform_texture_memory
E       return m(a, matrix, output_shape=output_shape,
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.Np3X0NVCM9/cupy/cupyx/scipy/ndimage/interpolation.py", line 376, in affine_transform
E       return _texture.affine_transformation(data=input,
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.Np3X0NVCM9/cupy/cupyx/_texture.py", line 168, in affine_transformation
E       texture_object = _create_texture_object(data,
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.Np3X0NVCM9/cupy/cupyx/_texture.py", line 98, in _create_texture_object
E       array = texture.CUDAarray(texture_fmt, *data.shape[::-1])
E     File "cupy/cuda/texture.pyx", line 296, in cupy.cuda.texture.CUDAarray.__init__
E       self.ptr = runtime.malloc3DArray(desc.ptr, width, height, depth,
E     File "cupy_backends/cuda/api/runtime.pyx", line 593, in cupy_backends.cuda.api.runtime.malloc3DArray
E       check_status(status)
E     File "cupy_backends/cuda/api/runtime.pyx", line 265, in cupy_backends.cuda.api.runtime.check_status
E       raise CUDARuntimeError(status)
E   cupy_backends.cuda.api.runtime.CUDARuntimeError: hipErrorUnknown: hipErrorUnknown

cupy_backends/cuda/api/runtime.pyx:265: AssertionError
----------------------------- Captured stderr call -----------------------------
Traceback (most recent call last):
  File "cupy_backends/cuda/api/runtime.pyx", line 644, in cupy_backends.cuda.api.runtime.freeArray
    check_status(status)
  File "cupy_backends/cuda/api/runtime.pyx", line 265, in cupy_backends.cuda.api.runtime.check_status
    raise CUDARuntimeError(status)
cupy_backends.cuda.api.runtime.CUDARuntimeError: hipErrorUnknown: hipErrorUnknown
_ TestAffineTransformTextureMemory.test_affine_transform_texture_memory[_param_122_{mode='constant', order=1, output=None, output_shape=10, shape=(10, 10, 10), theta=180}] _

self = <<cupyx_tests.scipy_tests.ndimage_tests.test_interpolation.TestAffineTransformTextureMemory object at 0x7fd7061b6c10>  parameter: {'mode': 'constant', 'order': 1, 'output': None, 'output_shape': 10, 'shape': (10, 10, 10), 'theta': 180}>
xp = <module 'cupy' from '/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.Np3X0NVCM9/cupy/cupy/__init__.py'>
scp = <module 'cupyx.scipy' from '/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.Np3X0NVCM9/cupy/cupyx/scipy/__init__.py'>

    @testing.numpy_cupy_allclose(atol=0.1, scipy_name='scp')
    def test_affine_transform_texture_memory(self, xp, scp):
        a = xp.ones(self.shape, dtype=xp.float32)
        center = numpy.divide(numpy.subtract(self.shape, 1), 2)
    
        if len(self.shape) == 2:
            matrix = self._2d_rotation_matrix(self.theta, center)
        elif len(self.shape) == 3:
            matrix = self._3d_rotation_matrix(self.theta, center)
        else:
            return pytest.xfail('Unsupported shape')
    
        if self.output == 'empty':
            output = xp.empty(self.shape, dtype=xp.float32)
            if self.output_shape:
                return pytest.skip('This combination is tested in '
                                   'test_invalid_texture_arguments')
        else:
            output = self.output
    
        if self.output_shape:
            output_shape = (self.output_shape, ) * len(self.shape)
        else:
            output_shape = self.output_shape
    
        if xp == cupy:
            m = cupyx.scipy.ndimage.affine_transform
            matrix = cupy.array(matrix)
>           return m(a, matrix, output_shape=output_shape,
                     output=output, order=self.order,
                     mode=self.mode, texture_memory=True)

tests/cupyx_tests/scipy_tests/ndimage_tests/test_interpolation.py:398: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
cupyx/scipy/ndimage/interpolation.py:376: in affine_transform
    return _texture.affine_transformation(data=input,
cupyx/_texture.py:168: in affine_transformation
    texture_object = _create_texture_object(data,
cupyx/_texture.py:98: in _create_texture_object
    array = texture.CUDAarray(texture_fmt, *data.shape[::-1])
cupy/cuda/texture.pyx:296: in cupy.cuda.texture.CUDAarray.__init__
    self.ptr = runtime.malloc3DArray(desc.ptr, width, height, depth,
cupy_backends/cuda/api/runtime.pyx:593: in cupy_backends.cuda.api.runtime.malloc3DArray
    check_status(status)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

>   raise CUDARuntimeError(status)
E   AssertionError: Only cupy raises error
E   
E   Traceback (most recent call last):
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.Np3X0NVCM9/cupy/cupy/testing/_helper.py", line 47, in _call_func
E       result = impl(self, *args, **kw)
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.Np3X0NVCM9/cupy/tests/cupyx_tests/scipy_tests/ndimage_tests/test_interpolation.py", line 398, in test_affine_transform_texture_memory
E       return m(a, matrix, output_shape=output_shape,
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.Np3X0NVCM9/cupy/cupyx/scipy/ndimage/interpolation.py", line 376, in affine_transform
E       return _texture.affine_transformation(data=input,
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.Np3X0NVCM9/cupy/cupyx/_texture.py", line 168, in affine_transformation
E       texture_object = _create_texture_object(data,
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.Np3X0NVCM9/cupy/cupyx/_texture.py", line 98, in _create_texture_object
E       array = texture.CUDAarray(texture_fmt, *data.shape[::-1])
E     File "cupy/cuda/texture.pyx", line 296, in cupy.cuda.texture.CUDAarray.__init__
E       self.ptr = runtime.malloc3DArray(desc.ptr, width, height, depth,
E     File "cupy_backends/cuda/api/runtime.pyx", line 593, in cupy_backends.cuda.api.runtime.malloc3DArray
E       check_status(status)
E     File "cupy_backends/cuda/api/runtime.pyx", line 265, in cupy_backends.cuda.api.runtime.check_status
E       raise CUDARuntimeError(status)
E   cupy_backends.cuda.api.runtime.CUDARuntimeError: hipErrorUnknown: hipErrorUnknown

cupy_backends/cuda/api/runtime.pyx:265: AssertionError
----------------------------- Captured stderr call -----------------------------
Traceback (most recent call last):
  File "cupy_backends/cuda/api/runtime.pyx", line 644, in cupy_backends.cuda.api.runtime.freeArray
    check_status(status)
  File "cupy_backends/cuda/api/runtime.pyx", line 265, in cupy_backends.cuda.api.runtime.check_status
    raise CUDARuntimeError(status)
cupy_backends.cuda.api.runtime.CUDARuntimeError: hipErrorUnknown: hipErrorUnknown
_ TestAffineTransformTextureMemory.test_affine_transform_texture_memory[_param_123_{mode='constant', order=1, output=None, output_shape=10, shape=(10, 10, 10), theta=270}] _

self = <<cupyx_tests.scipy_tests.ndimage_tests.test_interpolation.TestAffineTransformTextureMemory object at 0x7fd7057efc70>  parameter: {'mode': 'constant', 'order': 1, 'output': None, 'output_shape': 10, 'shape': (10, 10, 10), 'theta': 270}>
xp = <module 'cupy' from '/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.Np3X0NVCM9/cupy/cupy/__init__.py'>
scp = <module 'cupyx.scipy' from '/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.Np3X0NVCM9/cupy/cupyx/scipy/__init__.py'>

    @testing.numpy_cupy_allclose(atol=0.1, scipy_name='scp')
    def test_affine_transform_texture_memory(self, xp, scp):
        a = xp.ones(self.shape, dtype=xp.float32)
        center = numpy.divide(numpy.subtract(self.shape, 1), 2)
    
        if len(self.shape) == 2:
            matrix = self._2d_rotation_matrix(self.theta, center)
        elif len(self.shape) == 3:
            matrix = self._3d_rotation_matrix(self.theta, center)
        else:
            return pytest.xfail('Unsupported shape')
    
        if self.output == 'empty':
            output = xp.empty(self.shape, dtype=xp.float32)
            if self.output_shape:
                return pytest.skip('This combination is tested in '
                                   'test_invalid_texture_arguments')
        else:
            output = self.output
    
        if self.output_shape:
            output_shape = (self.output_shape, ) * len(self.shape)
        else:
            output_shape = self.output_shape
    
        if xp == cupy:
            m = cupyx.scipy.ndimage.affine_transform
            matrix = cupy.array(matrix)
>           return m(a, matrix, output_shape=output_shape,
                     output=output, order=self.order,
                     mode=self.mode, texture_memory=True)

tests/cupyx_tests/scipy_tests/ndimage_tests/test_interpolation.py:398: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
cupyx/scipy/ndimage/interpolation.py:376: in affine_transform
    return _texture.affine_transformation(data=input,
cupyx/_texture.py:168: in affine_transformation
    texture_object = _create_texture_object(data,
cupyx/_texture.py:98: in _create_texture_object
    array = texture.CUDAarray(texture_fmt, *data.shape[::-1])
cupy/cuda/texture.pyx:296: in cupy.cuda.texture.CUDAarray.__init__
    self.ptr = runtime.malloc3DArray(desc.ptr, width, height, depth,
cupy_backends/cuda/api/runtime.pyx:593: in cupy_backends.cuda.api.runtime.malloc3DArray
    check_status(status)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

>   raise CUDARuntimeError(status)
E   AssertionError: Only cupy raises error
E   
E   Traceback (most recent call last):
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.Np3X0NVCM9/cupy/cupy/testing/_helper.py", line 47, in _call_func
E       result = impl(self, *args, **kw)
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.Np3X0NVCM9/cupy/tests/cupyx_tests/scipy_tests/ndimage_tests/test_interpolation.py", line 398, in test_affine_transform_texture_memory
E       return m(a, matrix, output_shape=output_shape,
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.Np3X0NVCM9/cupy/cupyx/scipy/ndimage/interpolation.py", line 376, in affine_transform
E       return _texture.affine_transformation(data=input,
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.Np3X0NVCM9/cupy/cupyx/_texture.py", line 168, in affine_transformation
E       texture_object = _create_texture_object(data,
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.Np3X0NVCM9/cupy/cupyx/_texture.py", line 98, in _create_texture_object
E       array = texture.CUDAarray(texture_fmt, *data.shape[::-1])
E     File "cupy/cuda/texture.pyx", line 296, in cupy.cuda.texture.CUDAarray.__init__
E       self.ptr = runtime.malloc3DArray(desc.ptr, width, height, depth,
E     File "cupy_backends/cuda/api/runtime.pyx", line 593, in cupy_backends.cuda.api.runtime.malloc3DArray
E       check_status(status)
E     File "cupy_backends/cuda/api/runtime.pyx", line 265, in cupy_backends.cuda.api.runtime.check_status
E       raise CUDARuntimeError(status)
E   cupy_backends.cuda.api.runtime.CUDARuntimeError: hipErrorUnknown: hipErrorUnknown

cupy_backends/cuda/api/runtime.pyx:265: AssertionError
----------------------------- Captured stderr call -----------------------------
Traceback (most recent call last):
  File "cupy_backends/cuda/api/runtime.pyx", line 644, in cupy_backends.cuda.api.runtime.freeArray
    check_status(status)
  File "cupy_backends/cuda/api/runtime.pyx", line 265, in cupy_backends.cuda.api.runtime.check_status
    raise CUDARuntimeError(status)
cupy_backends.cuda.api.runtime.CUDARuntimeError: hipErrorUnknown: hipErrorUnknown
_ TestAffineTransformTextureMemory.test_affine_transform_texture_memory[_param_124_{mode='constant', order=1, output=None, output_shape=10, shape=(10, 20, 30), theta=0}] _

self = <<cupyx_tests.scipy_tests.ndimage_tests.test_interpolation.TestAffineTransformTextureMemory object at 0x7fd7064e2070>  parameter: {'mode': 'constant', 'order': 1, 'output': None, 'output_shape': 10, 'shape': (10, 20, 30), 'theta': 0}>
xp = <module 'cupy' from '/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.Np3X0NVCM9/cupy/cupy/__init__.py'>
scp = <module 'cupyx.scipy' from '/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.Np3X0NVCM9/cupy/cupyx/scipy/__init__.py'>

    @testing.numpy_cupy_allclose(atol=0.1, scipy_name='scp')
    def test_affine_transform_texture_memory(self, xp, scp):
        a = xp.ones(self.shape, dtype=xp.float32)
        center = numpy.divide(numpy.subtract(self.shape, 1), 2)
    
        if len(self.shape) == 2:
            matrix = self._2d_rotation_matrix(self.theta, center)
        elif len(self.shape) == 3:
            matrix = self._3d_rotation_matrix(self.theta, center)
        else:
            return pytest.xfail('Unsupported shape')
    
        if self.output == 'empty':
            output = xp.empty(self.shape, dtype=xp.float32)
            if self.output_shape:
                return pytest.skip('This combination is tested in '
                                   'test_invalid_texture_arguments')
        else:
            output = self.output
    
        if self.output_shape:
            output_shape = (self.output_shape, ) * len(self.shape)
        else:
            output_shape = self.output_shape
    
        if xp == cupy:
            m = cupyx.scipy.ndimage.affine_transform
            matrix = cupy.array(matrix)
>           return m(a, matrix, output_shape=output_shape,
                     output=output, order=self.order,
                     mode=self.mode, texture_memory=True)

tests/cupyx_tests/scipy_tests/ndimage_tests/test_interpolation.py:398: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
cupyx/scipy/ndimage/interpolation.py:376: in affine_transform
    return _texture.affine_transformation(data=input,
cupyx/_texture.py:168: in affine_transformation
    texture_object = _create_texture_object(data,
cupyx/_texture.py:98: in _create_texture_object
    array = texture.CUDAarray(texture_fmt, *data.shape[::-1])
cupy/cuda/texture.pyx:296: in cupy.cuda.texture.CUDAarray.__init__
    self.ptr = runtime.malloc3DArray(desc.ptr, width, height, depth,
cupy_backends/cuda/api/runtime.pyx:593: in cupy_backends.cuda.api.runtime.malloc3DArray
    check_status(status)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

>   raise CUDARuntimeError(status)
E   AssertionError: Only cupy raises error
E   
E   Traceback (most recent call last):
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.Np3X0NVCM9/cupy/cupy/testing/_helper.py", line 47, in _call_func
E       result = impl(self, *args, **kw)
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.Np3X0NVCM9/cupy/tests/cupyx_tests/scipy_tests/ndimage_tests/test_interpolation.py", line 398, in test_affine_transform_texture_memory
E       return m(a, matrix, output_shape=output_shape,
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.Np3X0NVCM9/cupy/cupyx/scipy/ndimage/interpolation.py", line 376, in affine_transform
E       return _texture.affine_transformation(data=input,
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.Np3X0NVCM9/cupy/cupyx/_texture.py", line 168, in affine_transformation
E       texture_object = _create_texture_object(data,
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.Np3X0NVCM9/cupy/cupyx/_texture.py", line 98, in _create_texture_object
E       array = texture.CUDAarray(texture_fmt, *data.shape[::-1])
E     File "cupy/cuda/texture.pyx", line 296, in cupy.cuda.texture.CUDAarray.__init__
E       self.ptr = runtime.malloc3DArray(desc.ptr, width, height, depth,
E     File "cupy_backends/cuda/api/runtime.pyx", line 593, in cupy_backends.cuda.api.runtime.malloc3DArray
E       check_status(status)
E     File "cupy_backends/cuda/api/runtime.pyx", line 265, in cupy_backends.cuda.api.runtime.check_status
E       raise CUDARuntimeError(status)
E   cupy_backends.cuda.api.runtime.CUDARuntimeError: hipErrorUnknown: hipErrorUnknown

cupy_backends/cuda/api/runtime.pyx:265: AssertionError
----------------------------- Captured stderr call -----------------------------
Traceback (most recent call last):
  File "cupy_backends/cuda/api/runtime.pyx", line 644, in cupy_backends.cuda.api.runtime.freeArray
    check_status(status)
  File "cupy_backends/cuda/api/runtime.pyx", line 265, in cupy_backends.cuda.api.runtime.check_status
    raise CUDARuntimeError(status)
cupy_backends.cuda.api.runtime.CUDARuntimeError: hipErrorUnknown: hipErrorUnknown
_ TestAffineTransformTextureMemory.test_affine_transform_texture_memory[_param_125_{mode='constant', order=1, output=None, output_shape=10, shape=(10, 20, 30), theta=90}] _

self = <<cupyx_tests.scipy_tests.ndimage_tests.test_interpolation.TestAffineTransformTextureMemory object at 0x7fd7058484f0>  parameter: {'mode': 'constant', 'order': 1, 'output': None, 'output_shape': 10, 'shape': (10, 20, 30), 'theta': 90}>
xp = <module 'cupy' from '/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.Np3X0NVCM9/cupy/cupy/__init__.py'>
scp = <module 'cupyx.scipy' from '/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.Np3X0NVCM9/cupy/cupyx/scipy/__init__.py'>

    @testing.numpy_cupy_allclose(atol=0.1, scipy_name='scp')
    def test_affine_transform_texture_memory(self, xp, scp):
        a = xp.ones(self.shape, dtype=xp.float32)
        center = numpy.divide(numpy.subtract(self.shape, 1), 2)
    
        if len(self.shape) == 2:
            matrix = self._2d_rotation_matrix(self.theta, center)
        elif len(self.shape) == 3:
            matrix = self._3d_rotation_matrix(self.theta, center)
        else:
            return pytest.xfail('Unsupported shape')
    
        if self.output == 'empty':
            output = xp.empty(self.shape, dtype=xp.float32)
            if self.output_shape:
                return pytest.skip('This combination is tested in '
                                   'test_invalid_texture_arguments')
        else:
            output = self.output
    
        if self.output_shape:
            output_shape = (self.output_shape, ) * len(self.shape)
        else:
            output_shape = self.output_shape
    
        if xp == cupy:
            m = cupyx.scipy.ndimage.affine_transform
            matrix = cupy.array(matrix)
>           return m(a, matrix, output_shape=output_shape,
                     output=output, order=self.order,
                     mode=self.mode, texture_memory=True)

tests/cupyx_tests/scipy_tests/ndimage_tests/test_interpolation.py:398: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
cupyx/scipy/ndimage/interpolation.py:376: in affine_transform
    return _texture.affine_transformation(data=input,
cupyx/_texture.py:168: in affine_transformation
    texture_object = _create_texture_object(data,
cupyx/_texture.py:98: in _create_texture_object
    array = texture.CUDAarray(texture_fmt, *data.shape[::-1])
cupy/cuda/texture.pyx:296: in cupy.cuda.texture.CUDAarray.__init__
    self.ptr = runtime.malloc3DArray(desc.ptr, width, height, depth,
cupy_backends/cuda/api/runtime.pyx:593: in cupy_backends.cuda.api.runtime.malloc3DArray
    check_status(status)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

>   raise CUDARuntimeError(status)
E   AssertionError: Only cupy raises error
E   
E   Traceback (most recent call last):
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.Np3X0NVCM9/cupy/cupy/testing/_helper.py", line 47, in _call_func
E       result = impl(self, *args, **kw)
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.Np3X0NVCM9/cupy/tests/cupyx_tests/scipy_tests/ndimage_tests/test_interpolation.py", line 398, in test_affine_transform_texture_memory
E       return m(a, matrix, output_shape=output_shape,
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.Np3X0NVCM9/cupy/cupyx/scipy/ndimage/interpolation.py", line 376, in affine_transform
E       return _texture.affine_transformation(data=input,
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.Np3X0NVCM9/cupy/cupyx/_texture.py", line 168, in affine_transformation
E       texture_object = _create_texture_object(data,
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.Np3X0NVCM9/cupy/cupyx/_texture.py", line 98, in _create_texture_object
E       array = texture.CUDAarray(texture_fmt, *data.shape[::-1])
E     File "cupy/cuda/texture.pyx", line 296, in cupy.cuda.texture.CUDAarray.__init__
E       self.ptr = runtime.malloc3DArray(desc.ptr, width, height, depth,
E     File "cupy_backends/cuda/api/runtime.pyx", line 593, in cupy_backends.cuda.api.runtime.malloc3DArray
E       check_status(status)
E     File "cupy_backends/cuda/api/runtime.pyx", line 265, in cupy_backends.cuda.api.runtime.check_status
E       raise CUDARuntimeError(status)
E   cupy_backends.cuda.api.runtime.CUDARuntimeError: hipErrorUnknown: hipErrorUnknown

cupy_backends/cuda/api/runtime.pyx:265: AssertionError
----------------------------- Captured stderr call -----------------------------
Traceback (most recent call last):
  File "cupy_backends/cuda/api/runtime.pyx", line 644, in cupy_backends.cuda.api.runtime.freeArray
    check_status(status)
  File "cupy_backends/cuda/api/runtime.pyx", line 265, in cupy_backends.cuda.api.runtime.check_status
    raise CUDARuntimeError(status)
cupy_backends.cuda.api.runtime.CUDARuntimeError: hipErrorUnknown: hipErrorUnknown
_ TestAffineTransformTextureMemory.test_affine_transform_texture_memory[_param_126_{mode='constant', order=1, output=None, output_shape=10, shape=(10, 20, 30), theta=180}] _

self = <<cupyx_tests.scipy_tests.ndimage_tests.test_interpolation.TestAffineTransformTextureMemory object at 0x7fd7067cc340>  parameter: {'mode': 'constant', 'order': 1, 'output': None, 'output_shape': 10, 'shape': (10, 20, 30), 'theta': 180}>
xp = <module 'cupy' from '/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.Np3X0NVCM9/cupy/cupy/__init__.py'>
scp = <module 'cupyx.scipy' from '/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.Np3X0NVCM9/cupy/cupyx/scipy/__init__.py'>

    @testing.numpy_cupy_allclose(atol=0.1, scipy_name='scp')
    def test_affine_transform_texture_memory(self, xp, scp):
        a = xp.ones(self.shape, dtype=xp.float32)
        center = numpy.divide(numpy.subtract(self.shape, 1), 2)
    
        if len(self.shape) == 2:
            matrix = self._2d_rotation_matrix(self.theta, center)
        elif len(self.shape) == 3:
            matrix = self._3d_rotation_matrix(self.theta, center)
        else:
            return pytest.xfail('Unsupported shape')
    
        if self.output == 'empty':
            output = xp.empty(self.shape, dtype=xp.float32)
            if self.output_shape:
                return pytest.skip('This combination is tested in '
                                   'test_invalid_texture_arguments')
        else:
            output = self.output
    
        if self.output_shape:
            output_shape = (self.output_shape, ) * len(self.shape)
        else:
            output_shape = self.output_shape
    
        if xp == cupy:
            m = cupyx.scipy.ndimage.affine_transform
            matrix = cupy.array(matrix)
>           return m(a, matrix, output_shape=output_shape,
                     output=output, order=self.order,
                     mode=self.mode, texture_memory=True)

tests/cupyx_tests/scipy_tests/ndimage_tests/test_interpolation.py:398: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
cupyx/scipy/ndimage/interpolation.py:376: in affine_transform
    return _texture.affine_transformation(data=input,
cupyx/_texture.py:168: in affine_transformation
    texture_object = _create_texture_object(data,
cupyx/_texture.py:98: in _create_texture_object
    array = texture.CUDAarray(texture_fmt, *data.shape[::-1])
cupy/cuda/texture.pyx:296: in cupy.cuda.texture.CUDAarray.__init__
    self.ptr = runtime.malloc3DArray(desc.ptr, width, height, depth,
cupy_backends/cuda/api/runtime.pyx:593: in cupy_backends.cuda.api.runtime.malloc3DArray
    check_status(status)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

>   raise CUDARuntimeError(status)
E   AssertionError: Only cupy raises error
E   
E   Traceback (most recent call last):
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.Np3X0NVCM9/cupy/cupy/testing/_helper.py", line 47, in _call_func
E       result = impl(self, *args, **kw)
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.Np3X0NVCM9/cupy/tests/cupyx_tests/scipy_tests/ndimage_tests/test_interpolation.py", line 398, in test_affine_transform_texture_memory
E       return m(a, matrix, output_shape=output_shape,
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.Np3X0NVCM9/cupy/cupyx/scipy/ndimage/interpolation.py", line 376, in affine_transform
E       return _texture.affine_transformation(data=input,
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.Np3X0NVCM9/cupy/cupyx/_texture.py", line 168, in affine_transformation
E       texture_object = _create_texture_object(data,
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.Np3X0NVCM9/cupy/cupyx/_texture.py", line 98, in _create_texture_object
E       array = texture.CUDAarray(texture_fmt, *data.shape[::-1])
E     File "cupy/cuda/texture.pyx", line 296, in cupy.cuda.texture.CUDAarray.__init__
E       self.ptr = runtime.malloc3DArray(desc.ptr, width, height, depth,
E     File "cupy_backends/cuda/api/runtime.pyx", line 593, in cupy_backends.cuda.api.runtime.malloc3DArray
E       check_status(status)
E     File "cupy_backends/cuda/api/runtime.pyx", line 265, in cupy_backends.cuda.api.runtime.check_status
E       raise CUDARuntimeError(status)
E   cupy_backends.cuda.api.runtime.CUDARuntimeError: hipErrorUnknown: hipErrorUnknown

cupy_backends/cuda/api/runtime.pyx:265: AssertionError
----------------------------- Captured stderr call -----------------------------
Traceback (most recent call last):
  File "cupy_backends/cuda/api/runtime.pyx", line 644, in cupy_backends.cuda.api.runtime.freeArray
    check_status(status)
  File "cupy_backends/cuda/api/runtime.pyx", line 265, in cupy_backends.cuda.api.runtime.check_status
    raise CUDARuntimeError(status)
cupy_backends.cuda.api.runtime.CUDARuntimeError: hipErrorUnknown: hipErrorUnknown
_ TestAffineTransformTextureMemory.test_affine_transform_texture_memory[_param_127_{mode='constant', order=1, output=None, output_shape=10, shape=(10, 20, 30), theta=270}] _

self = <<cupyx_tests.scipy_tests.ndimage_tests.test_interpolation.TestAffineTransformTextureMemory object at 0x7fd7067d6be0>  parameter: {'mode': 'constant', 'order': 1, 'output': None, 'output_shape': 10, 'shape': (10, 20, 30), 'theta': 270}>
xp = <module 'cupy' from '/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.Np3X0NVCM9/cupy/cupy/__init__.py'>
scp = <module 'cupyx.scipy' from '/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.Np3X0NVCM9/cupy/cupyx/scipy/__init__.py'>

    @testing.numpy_cupy_allclose(atol=0.1, scipy_name='scp')
    def test_affine_transform_texture_memory(self, xp, scp):
        a = xp.ones(self.shape, dtype=xp.float32)
        center = numpy.divide(numpy.subtract(self.shape, 1), 2)
    
        if len(self.shape) == 2:
            matrix = self._2d_rotation_matrix(self.theta, center)
        elif len(self.shape) == 3:
            matrix = self._3d_rotation_matrix(self.theta, center)
        else:
            return pytest.xfail('Unsupported shape')
    
        if self.output == 'empty':
            output = xp.empty(self.shape, dtype=xp.float32)
            if self.output_shape:
                return pytest.skip('This combination is tested in '
                                   'test_invalid_texture_arguments')
        else:
            output = self.output
    
        if self.output_shape:
            output_shape = (self.output_shape, ) * len(self.shape)
        else:
            output_shape = self.output_shape
    
        if xp == cupy:
            m = cupyx.scipy.ndimage.affine_transform
            matrix = cupy.array(matrix)
>           return m(a, matrix, output_shape=output_shape,
                     output=output, order=self.order,
                     mode=self.mode, texture_memory=True)

tests/cupyx_tests/scipy_tests/ndimage_tests/test_interpolation.py:398: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
cupyx/scipy/ndimage/interpolation.py:376: in affine_transform
    return _texture.affine_transformation(data=input,
cupyx/_texture.py:168: in affine_transformation
    texture_object = _create_texture_object(data,
cupyx/_texture.py:98: in _create_texture_object
    array = texture.CUDAarray(texture_fmt, *data.shape[::-1])
cupy/cuda/texture.pyx:296: in cupy.cuda.texture.CUDAarray.__init__
    self.ptr = runtime.malloc3DArray(desc.ptr, width, height, depth,
cupy_backends/cuda/api/runtime.pyx:593: in cupy_backends.cuda.api.runtime.malloc3DArray
    check_status(status)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

>   raise CUDARuntimeError(status)
E   AssertionError: Only cupy raises error
E   
E   Traceback (most recent call last):
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.Np3X0NVCM9/cupy/cupy/testing/_helper.py", line 47, in _call_func
E       result = impl(self, *args, **kw)
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.Np3X0NVCM9/cupy/tests/cupyx_tests/scipy_tests/ndimage_tests/test_interpolation.py", line 398, in test_affine_transform_texture_memory
E       return m(a, matrix, output_shape=output_shape,
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.Np3X0NVCM9/cupy/cupyx/scipy/ndimage/interpolation.py", line 376, in affine_transform
E       return _texture.affine_transformation(data=input,
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.Np3X0NVCM9/cupy/cupyx/_texture.py", line 168, in affine_transformation
E       texture_object = _create_texture_object(data,
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.Np3X0NVCM9/cupy/cupyx/_texture.py", line 98, in _create_texture_object
E       array = texture.CUDAarray(texture_fmt, *data.shape[::-1])
E     File "cupy/cuda/texture.pyx", line 296, in cupy.cuda.texture.CUDAarray.__init__
E       self.ptr = runtime.malloc3DArray(desc.ptr, width, height, depth,
E     File "cupy_backends/cuda/api/runtime.pyx", line 593, in cupy_backends.cuda.api.runtime.malloc3DArray
E       check_status(status)
E     File "cupy_backends/cuda/api/runtime.pyx", line 265, in cupy_backends.cuda.api.runtime.check_status
E       raise CUDARuntimeError(status)
E   cupy_backends.cuda.api.runtime.CUDARuntimeError: hipErrorUnknown: hipErrorUnknown

cupy_backends/cuda/api/runtime.pyx:265: AssertionError
----------------------------- Captured stderr call -----------------------------
Traceback (most recent call last):
  File "cupy_backends/cuda/api/runtime.pyx", line 644, in cupy_backends.cuda.api.runtime.freeArray
    check_status(status)
  File "cupy_backends/cuda/api/runtime.pyx", line 265, in cupy_backends.cuda.api.runtime.check_status
    raise CUDARuntimeError(status)
cupy_backends.cuda.api.runtime.CUDARuntimeError: hipErrorUnknown: hipErrorUnknown
_ TestAffineTransformTextureMemory.test_affine_transform_texture_memory[_param_128_{mode='constant', order=1, output=float32, output_shape=None, shape=(100, 100), theta=0}] _

self = <<cupyx_tests.scipy_tests.ndimage_tests.test_interpolation.TestAffineTransformTextureMemory object at 0x7fd7058583d0> ...de': 'constant', 'order': 1, 'output': <class 'numpy.float32'>, 'output_shape': None, 'shape': (100, 100), 'theta': 0}>
xp = <module 'cupy' from '/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.Np3X0NVCM9/cupy/cupy/__init__.py'>
scp = <module 'cupyx.scipy' from '/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.Np3X0NVCM9/cupy/cupyx/scipy/__init__.py'>

    @testing.numpy_cupy_allclose(atol=0.1, scipy_name='scp')
    def test_affine_transform_texture_memory(self, xp, scp):
        a = xp.ones(self.shape, dtype=xp.float32)
        center = numpy.divide(numpy.subtract(self.shape, 1), 2)
    
        if len(self.shape) == 2:
            matrix = self._2d_rotation_matrix(self.theta, center)
        elif len(self.shape) == 3:
            matrix = self._3d_rotation_matrix(self.theta, center)
        else:
            return pytest.xfail('Unsupported shape')
    
        if self.output == 'empty':
            output = xp.empty(self.shape, dtype=xp.float32)
            if self.output_shape:
                return pytest.skip('This combination is tested in '
                                   'test_invalid_texture_arguments')
        else:
            output = self.output
    
        if self.output_shape:
            output_shape = (self.output_shape, ) * len(self.shape)
        else:
            output_shape = self.output_shape
    
        if xp == cupy:
            m = cupyx.scipy.ndimage.affine_transform
            matrix = cupy.array(matrix)
>           return m(a, matrix, output_shape=output_shape,
                     output=output, order=self.order,
                     mode=self.mode, texture_memory=True)

tests/cupyx_tests/scipy_tests/ndimage_tests/test_interpolation.py:398: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
cupyx/scipy/ndimage/interpolation.py:376: in affine_transform
    return _texture.affine_transformation(data=input,
cupyx/_texture.py:168: in affine_transformation
    texture_object = _create_texture_object(data,
cupyx/_texture.py:98: in _create_texture_object
    array = texture.CUDAarray(texture_fmt, *data.shape[::-1])
cupy/cuda/texture.pyx:296: in cupy.cuda.texture.CUDAarray.__init__
    self.ptr = runtime.malloc3DArray(desc.ptr, width, height, depth,
cupy_backends/cuda/api/runtime.pyx:593: in cupy_backends.cuda.api.runtime.malloc3DArray
    check_status(status)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

>   raise CUDARuntimeError(status)
E   AssertionError: Only cupy raises error
E   
E   Traceback (most recent call last):
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.Np3X0NVCM9/cupy/cupy/testing/_helper.py", line 47, in _call_func
E       result = impl(self, *args, **kw)
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.Np3X0NVCM9/cupy/tests/cupyx_tests/scipy_tests/ndimage_tests/test_interpolation.py", line 398, in test_affine_transform_texture_memory
E       return m(a, matrix, output_shape=output_shape,
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.Np3X0NVCM9/cupy/cupyx/scipy/ndimage/interpolation.py", line 376, in affine_transform
E       return _texture.affine_transformation(data=input,
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.Np3X0NVCM9/cupy/cupyx/_texture.py", line 168, in affine_transformation
E       texture_object = _create_texture_object(data,
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.Np3X0NVCM9/cupy/cupyx/_texture.py", line 98, in _create_texture_object
E       array = texture.CUDAarray(texture_fmt, *data.shape[::-1])
E     File "cupy/cuda/texture.pyx", line 296, in cupy.cuda.texture.CUDAarray.__init__
E       self.ptr = runtime.malloc3DArray(desc.ptr, width, height, depth,
E     File "cupy_backends/cuda/api/runtime.pyx", line 593, in cupy_backends.cuda.api.runtime.malloc3DArray
E       check_status(status)
E     File "cupy_backends/cuda/api/runtime.pyx", line 265, in cupy_backends.cuda.api.runtime.check_status
E       raise CUDARuntimeError(status)
E   cupy_backends.cuda.api.runtime.CUDARuntimeError: hipErrorUnknown: hipErrorUnknown

cupy_backends/cuda/api/runtime.pyx:265: AssertionError
----------------------------- Captured stderr call -----------------------------
Traceback (most recent call last):
  File "cupy_backends/cuda/api/runtime.pyx", line 644, in cupy_backends.cuda.api.runtime.freeArray
    check_status(status)
  File "cupy_backends/cuda/api/runtime.pyx", line 265, in cupy_backends.cuda.api.runtime.check_status
    raise CUDARuntimeError(status)
cupy_backends.cuda.api.runtime.CUDARuntimeError: hipErrorUnknown: hipErrorUnknown
_ TestAffineTransformTextureMemory.test_affine_transform_texture_memory[_param_129_{mode='constant', order=1, output=float32, output_shape=None, shape=(100, 100), theta=90}] _

self = <<cupyx_tests.scipy_tests.ndimage_tests.test_interpolation.TestAffineTransformTextureMemory object at 0x7fd707898fd0> ...e': 'constant', 'order': 1, 'output': <class 'numpy.float32'>, 'output_shape': None, 'shape': (100, 100), 'theta': 90}>
xp = <module 'cupy' from '/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.Np3X0NVCM9/cupy/cupy/__init__.py'>
scp = <module 'cupyx.scipy' from '/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.Np3X0NVCM9/cupy/cupyx/scipy/__init__.py'>

    @testing.numpy_cupy_allclose(atol=0.1, scipy_name='scp')
    def test_affine_transform_texture_memory(self, xp, scp):
        a = xp.ones(self.shape, dtype=xp.float32)
        center = numpy.divide(numpy.subtract(self.shape, 1), 2)
    
        if len(self.shape) == 2:
            matrix = self._2d_rotation_matrix(self.theta, center)
        elif len(self.shape) == 3:
            matrix = self._3d_rotation_matrix(self.theta, center)
        else:
            return pytest.xfail('Unsupported shape')
    
        if self.output == 'empty':
            output = xp.empty(self.shape, dtype=xp.float32)
            if self.output_shape:
                return pytest.skip('This combination is tested in '
                                   'test_invalid_texture_arguments')
        else:
            output = self.output
    
        if self.output_shape:
            output_shape = (self.output_shape, ) * len(self.shape)
        else:
            output_shape = self.output_shape
    
        if xp == cupy:
            m = cupyx.scipy.ndimage.affine_transform
            matrix = cupy.array(matrix)
>           return m(a, matrix, output_shape=output_shape,
                     output=output, order=self.order,
                     mode=self.mode, texture_memory=True)

tests/cupyx_tests/scipy_tests/ndimage_tests/test_interpolation.py:398: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
cupyx/scipy/ndimage/interpolation.py:376: in affine_transform
    return _texture.affine_transformation(data=input,
cupyx/_texture.py:168: in affine_transformation
    texture_object = _create_texture_object(data,
cupyx/_texture.py:98: in _create_texture_object
    array = texture.CUDAarray(texture_fmt, *data.shape[::-1])
cupy/cuda/texture.pyx:296: in cupy.cuda.texture.CUDAarray.__init__
    self.ptr = runtime.malloc3DArray(desc.ptr, width, height, depth,
cupy_backends/cuda/api/runtime.pyx:593: in cupy_backends.cuda.api.runtime.malloc3DArray
    check_status(status)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

>   raise CUDARuntimeError(status)
E   AssertionError: Only cupy raises error
E   
E   Traceback (most recent call last):
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.Np3X0NVCM9/cupy/cupy/testing/_helper.py", line 47, in _call_func
E       result = impl(self, *args, **kw)
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.Np3X0NVCM9/cupy/tests/cupyx_tests/scipy_tests/ndimage_tests/test_interpolation.py", line 398, in test_affine_transform_texture_memory
E       return m(a, matrix, output_shape=output_shape,
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.Np3X0NVCM9/cupy/cupyx/scipy/ndimage/interpolation.py", line 376, in affine_transform
E       return _texture.affine_transformation(data=input,
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.Np3X0NVCM9/cupy/cupyx/_texture.py", line 168, in affine_transformation
E       texture_object = _create_texture_object(data,
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.Np3X0NVCM9/cupy/cupyx/_texture.py", line 98, in _create_texture_object
E       array = texture.CUDAarray(texture_fmt, *data.shape[::-1])
E     File "cupy/cuda/texture.pyx", line 296, in cupy.cuda.texture.CUDAarray.__init__
E       self.ptr = runtime.malloc3DArray(desc.ptr, width, height, depth,
E     File "cupy_backends/cuda/api/runtime.pyx", line 593, in cupy_backends.cuda.api.runtime.malloc3DArray
E       check_status(status)
E     File "cupy_backends/cuda/api/runtime.pyx", line 265, in cupy_backends.cuda.api.runtime.check_status
E       raise CUDARuntimeError(status)
E   cupy_backends.cuda.api.runtime.CUDARuntimeError: hipErrorUnknown: hipErrorUnknown

cupy_backends/cuda/api/runtime.pyx:265: AssertionError
----------------------------- Captured stderr call -----------------------------
Traceback (most recent call last):
  File "cupy_backends/cuda/api/runtime.pyx", line 644, in cupy_backends.cuda.api.runtime.freeArray
    check_status(status)
  File "cupy_backends/cuda/api/runtime.pyx", line 265, in cupy_backends.cuda.api.runtime.check_status
    raise CUDARuntimeError(status)
cupy_backends.cuda.api.runtime.CUDARuntimeError: hipErrorUnknown: hipErrorUnknown
_ TestAffineTransformTextureMemory.test_affine_transform_texture_memory[_param_130_{mode='constant', order=1, output=float32, output_shape=None, shape=(100, 100), theta=180}] _

self = <<cupyx_tests.scipy_tests.ndimage_tests.test_interpolation.TestAffineTransformTextureMemory object at 0x7fd70587ddf0> ...': 'constant', 'order': 1, 'output': <class 'numpy.float32'>, 'output_shape': None, 'shape': (100, 100), 'theta': 180}>
xp = <module 'cupy' from '/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.Np3X0NVCM9/cupy/cupy/__init__.py'>
scp = <module 'cupyx.scipy' from '/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.Np3X0NVCM9/cupy/cupyx/scipy/__init__.py'>

    @testing.numpy_cupy_allclose(atol=0.1, scipy_name='scp')
    def test_affine_transform_texture_memory(self, xp, scp):
        a = xp.ones(self.shape, dtype=xp.float32)
        center = numpy.divide(numpy.subtract(self.shape, 1), 2)
    
        if len(self.shape) == 2:
            matrix = self._2d_rotation_matrix(self.theta, center)
        elif len(self.shape) == 3:
            matrix = self._3d_rotation_matrix(self.theta, center)
        else:
            return pytest.xfail('Unsupported shape')
    
        if self.output == 'empty':
            output = xp.empty(self.shape, dtype=xp.float32)
            if self.output_shape:
                return pytest.skip('This combination is tested in '
                                   'test_invalid_texture_arguments')
        else:
            output = self.output
    
        if self.output_shape:
            output_shape = (self.output_shape, ) * len(self.shape)
        else:
            output_shape = self.output_shape
    
        if xp == cupy:
            m = cupyx.scipy.ndimage.affine_transform
            matrix = cupy.array(matrix)
>           return m(a, matrix, output_shape=output_shape,
                     output=output, order=self.order,
                     mode=self.mode, texture_memory=True)

tests/cupyx_tests/scipy_tests/ndimage_tests/test_interpolation.py:398: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
cupyx/scipy/ndimage/interpolation.py:376: in affine_transform
    return _texture.affine_transformation(data=input,
cupyx/_texture.py:168: in affine_transformation
    texture_object = _create_texture_object(data,
cupyx/_texture.py:98: in _create_texture_object
    array = texture.CUDAarray(texture_fmt, *data.shape[::-1])
cupy/cuda/texture.pyx:296: in cupy.cuda.texture.CUDAarray.__init__
    self.ptr = runtime.malloc3DArray(desc.ptr, width, height, depth,
cupy_backends/cuda/api/runtime.pyx:593: in cupy_backends.cuda.api.runtime.malloc3DArray
    check_status(status)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

>   raise CUDARuntimeError(status)
E   AssertionError: Only cupy raises error
E   
E   Traceback (most recent call last):
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.Np3X0NVCM9/cupy/cupy/testing/_helper.py", line 47, in _call_func
E       result = impl(self, *args, **kw)
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.Np3X0NVCM9/cupy/tests/cupyx_tests/scipy_tests/ndimage_tests/test_interpolation.py", line 398, in test_affine_transform_texture_memory
E       return m(a, matrix, output_shape=output_shape,
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.Np3X0NVCM9/cupy/cupyx/scipy/ndimage/interpolation.py", line 376, in affine_transform
E       return _texture.affine_transformation(data=input,
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.Np3X0NVCM9/cupy/cupyx/_texture.py", line 168, in affine_transformation
E       texture_object = _create_texture_object(data,
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.Np3X0NVCM9/cupy/cupyx/_texture.py", line 98, in _create_texture_object
E       array = texture.CUDAarray(texture_fmt, *data.shape[::-1])
E     File "cupy/cuda/texture.pyx", line 296, in cupy.cuda.texture.CUDAarray.__init__
E       self.ptr = runtime.malloc3DArray(desc.ptr, width, height, depth,
E     File "cupy_backends/cuda/api/runtime.pyx", line 593, in cupy_backends.cuda.api.runtime.malloc3DArray
E       check_status(status)
E     File "cupy_backends/cuda/api/runtime.pyx", line 265, in cupy_backends.cuda.api.runtime.check_status
E       raise CUDARuntimeError(status)
E   cupy_backends.cuda.api.runtime.CUDARuntimeError: hipErrorUnknown: hipErrorUnknown

cupy_backends/cuda/api/runtime.pyx:265: AssertionError
----------------------------- Captured stderr call -----------------------------
Traceback (most recent call last):
  File "cupy_backends/cuda/api/runtime.pyx", line 644, in cupy_backends.cuda.api.runtime.freeArray
    check_status(status)
  File "cupy_backends/cuda/api/runtime.pyx", line 265, in cupy_backends.cuda.api.runtime.check_status
    raise CUDARuntimeError(status)
cupy_backends.cuda.api.runtime.CUDARuntimeError: hipErrorUnknown: hipErrorUnknown
_ TestAffineTransformTextureMemory.test_affine_transform_texture_memory[_param_131_{mode='constant', order=1, output=float32, output_shape=None, shape=(100, 100), theta=270}] _

self = <<cupyx_tests.scipy_tests.ndimage_tests.test_interpolation.TestAffineTransformTextureMemory object at 0x7fd7057fe760> ...': 'constant', 'order': 1, 'output': <class 'numpy.float32'>, 'output_shape': None, 'shape': (100, 100), 'theta': 270}>
xp = <module 'cupy' from '/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.Np3X0NVCM9/cupy/cupy/__init__.py'>
scp = <module 'cupyx.scipy' from '/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.Np3X0NVCM9/cupy/cupyx/scipy/__init__.py'>

    @testing.numpy_cupy_allclose(atol=0.1, scipy_name='scp')
    def test_affine_transform_texture_memory(self, xp, scp):
        a = xp.ones(self.shape, dtype=xp.float32)
        center = numpy.divide(numpy.subtract(self.shape, 1), 2)
    
        if len(self.shape) == 2:
            matrix = self._2d_rotation_matrix(self.theta, center)
        elif len(self.shape) == 3:
            matrix = self._3d_rotation_matrix(self.theta, center)
        else:
            return pytest.xfail('Unsupported shape')
    
        if self.output == 'empty':
            output = xp.empty(self.shape, dtype=xp.float32)
            if self.output_shape:
                return pytest.skip('This combination is tested in '
                                   'test_invalid_texture_arguments')
        else:
            output = self.output
    
        if self.output_shape:
            output_shape = (self.output_shape, ) * len(self.shape)
        else:
            output_shape = self.output_shape
    
        if xp == cupy:
            m = cupyx.scipy.ndimage.affine_transform
            matrix = cupy.array(matrix)
>           return m(a, matrix, output_shape=output_shape,
                     output=output, order=self.order,
                     mode=self.mode, texture_memory=True)

tests/cupyx_tests/scipy_tests/ndimage_tests/test_interpolation.py:398: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
cupyx/scipy/ndimage/interpolation.py:376: in affine_transform
    return _texture.affine_transformation(data=input,
cupyx/_texture.py:168: in affine_transformation
    texture_object = _create_texture_object(data,
cupyx/_texture.py:98: in _create_texture_object
    array = texture.CUDAarray(texture_fmt, *data.shape[::-1])
cupy/cuda/texture.pyx:296: in cupy.cuda.texture.CUDAarray.__init__
    self.ptr = runtime.malloc3DArray(desc.ptr, width, height, depth,
cupy_backends/cuda/api/runtime.pyx:593: in cupy_backends.cuda.api.runtime.malloc3DArray
    check_status(status)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

>   raise CUDARuntimeError(status)
E   AssertionError: Only cupy raises error
E   
E   Traceback (most recent call last):
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.Np3X0NVCM9/cupy/cupy/testing/_helper.py", line 47, in _call_func
E       result = impl(self, *args, **kw)
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.Np3X0NVCM9/cupy/tests/cupyx_tests/scipy_tests/ndimage_tests/test_interpolation.py", line 398, in test_affine_transform_texture_memory
E       return m(a, matrix, output_shape=output_shape,
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.Np3X0NVCM9/cupy/cupyx/scipy/ndimage/interpolation.py", line 376, in affine_transform
E       return _texture.affine_transformation(data=input,
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.Np3X0NVCM9/cupy/cupyx/_texture.py", line 168, in affine_transformation
E       texture_object = _create_texture_object(data,
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.Np3X0NVCM9/cupy/cupyx/_texture.py", line 98, in _create_texture_object
E       array = texture.CUDAarray(texture_fmt, *data.shape[::-1])
E     File "cupy/cuda/texture.pyx", line 296, in cupy.cuda.texture.CUDAarray.__init__
E       self.ptr = runtime.malloc3DArray(desc.ptr, width, height, depth,
E     File "cupy_backends/cuda/api/runtime.pyx", line 593, in cupy_backends.cuda.api.runtime.malloc3DArray
E       check_status(status)
E     File "cupy_backends/cuda/api/runtime.pyx", line 265, in cupy_backends.cuda.api.runtime.check_status
E       raise CUDARuntimeError(status)
E   cupy_backends.cuda.api.runtime.CUDARuntimeError: hipErrorUnknown: hipErrorUnknown

cupy_backends/cuda/api/runtime.pyx:265: AssertionError
----------------------------- Captured stderr call -----------------------------
Traceback (most recent call last):
  File "cupy_backends/cuda/api/runtime.pyx", line 644, in cupy_backends.cuda.api.runtime.freeArray
    check_status(status)
  File "cupy_backends/cuda/api/runtime.pyx", line 265, in cupy_backends.cuda.api.runtime.check_status
    raise CUDARuntimeError(status)
cupy_backends.cuda.api.runtime.CUDARuntimeError: hipErrorUnknown: hipErrorUnknown
_ TestAffineTransformTextureMemory.test_affine_transform_texture_memory[_param_132_{mode='constant', order=1, output=float32, output_shape=None, shape=(10, 20), theta=0}] _

self = <<cupyx_tests.scipy_tests.ndimage_tests.test_interpolation.TestAffineTransformTextureMemory object at 0x7fd7056ccc40> ...mode': 'constant', 'order': 1, 'output': <class 'numpy.float32'>, 'output_shape': None, 'shape': (10, 20), 'theta': 0}>
xp = <module 'cupy' from '/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.Np3X0NVCM9/cupy/cupy/__init__.py'>
scp = <module 'cupyx.scipy' from '/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.Np3X0NVCM9/cupy/cupyx/scipy/__init__.py'>

    @testing.numpy_cupy_allclose(atol=0.1, scipy_name='scp')
    def test_affine_transform_texture_memory(self, xp, scp):
        a = xp.ones(self.shape, dtype=xp.float32)
        center = numpy.divide(numpy.subtract(self.shape, 1), 2)
    
        if len(self.shape) == 2:
            matrix = self._2d_rotation_matrix(self.theta, center)
        elif len(self.shape) == 3:
            matrix = self._3d_rotation_matrix(self.theta, center)
        else:
            return pytest.xfail('Unsupported shape')
    
        if self.output == 'empty':
            output = xp.empty(self.shape, dtype=xp.float32)
            if self.output_shape:
                return pytest.skip('This combination is tested in '
                                   'test_invalid_texture_arguments')
        else:
            output = self.output
    
        if self.output_shape:
            output_shape = (self.output_shape, ) * len(self.shape)
        else:
            output_shape = self.output_shape
    
        if xp == cupy:
            m = cupyx.scipy.ndimage.affine_transform
            matrix = cupy.array(matrix)
>           return m(a, matrix, output_shape=output_shape,
                     output=output, order=self.order,
                     mode=self.mode, texture_memory=True)

tests/cupyx_tests/scipy_tests/ndimage_tests/test_interpolation.py:398: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
cupyx/scipy/ndimage/interpolation.py:376: in affine_transform
    return _texture.affine_transformation(data=input,
cupyx/_texture.py:168: in affine_transformation
    texture_object = _create_texture_object(data,
cupyx/_texture.py:98: in _create_texture_object
    array = texture.CUDAarray(texture_fmt, *data.shape[::-1])
cupy/cuda/texture.pyx:296: in cupy.cuda.texture.CUDAarray.__init__
    self.ptr = runtime.malloc3DArray(desc.ptr, width, height, depth,
cupy_backends/cuda/api/runtime.pyx:593: in cupy_backends.cuda.api.runtime.malloc3DArray
    check_status(status)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

>   raise CUDARuntimeError(status)
E   AssertionError: Only cupy raises error
E   
E   Traceback (most recent call last):
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.Np3X0NVCM9/cupy/cupy/testing/_helper.py", line 47, in _call_func
E       result = impl(self, *args, **kw)
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.Np3X0NVCM9/cupy/tests/cupyx_tests/scipy_tests/ndimage_tests/test_interpolation.py", line 398, in test_affine_transform_texture_memory
E       return m(a, matrix, output_shape=output_shape,
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.Np3X0NVCM9/cupy/cupyx/scipy/ndimage/interpolation.py", line 376, in affine_transform
E       return _texture.affine_transformation(data=input,
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.Np3X0NVCM9/cupy/cupyx/_texture.py", line 168, in affine_transformation
E       texture_object = _create_texture_object(data,
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.Np3X0NVCM9/cupy/cupyx/_texture.py", line 98, in _create_texture_object
E       array = texture.CUDAarray(texture_fmt, *data.shape[::-1])
E     File "cupy/cuda/texture.pyx", line 296, in cupy.cuda.texture.CUDAarray.__init__
E       self.ptr = runtime.malloc3DArray(desc.ptr, width, height, depth,
E     File "cupy_backends/cuda/api/runtime.pyx", line 593, in cupy_backends.cuda.api.runtime.malloc3DArray
E       check_status(status)
E     File "cupy_backends/cuda/api/runtime.pyx", line 265, in cupy_backends.cuda.api.runtime.check_status
E       raise CUDARuntimeError(status)
E   cupy_backends.cuda.api.runtime.CUDARuntimeError: hipErrorUnknown: hipErrorUnknown

cupy_backends/cuda/api/runtime.pyx:265: AssertionError
----------------------------- Captured stderr call -----------------------------
Traceback (most recent call last):
  File "cupy_backends/cuda/api/runtime.pyx", line 644, in cupy_backends.cuda.api.runtime.freeArray
    check_status(status)
  File "cupy_backends/cuda/api/runtime.pyx", line 265, in cupy_backends.cuda.api.runtime.check_status
    raise CUDARuntimeError(status)
cupy_backends.cuda.api.runtime.CUDARuntimeError: hipErrorUnknown: hipErrorUnknown
_ TestAffineTransformTextureMemory.test_affine_transform_texture_memory[_param_133_{mode='constant', order=1, output=float32, output_shape=None, shape=(10, 20), theta=90}] _

self = <<cupyx_tests.scipy_tests.ndimage_tests.test_interpolation.TestAffineTransformTextureMemory object at 0x7fd70593d820> ...ode': 'constant', 'order': 1, 'output': <class 'numpy.float32'>, 'output_shape': None, 'shape': (10, 20), 'theta': 90}>
xp = <module 'cupy' from '/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.Np3X0NVCM9/cupy/cupy/__init__.py'>
scp = <module 'cupyx.scipy' from '/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.Np3X0NVCM9/cupy/cupyx/scipy/__init__.py'>

    @testing.numpy_cupy_allclose(atol=0.1, scipy_name='scp')
    def test_affine_transform_texture_memory(self, xp, scp):
        a = xp.ones(self.shape, dtype=xp.float32)
        center = numpy.divide(numpy.subtract(self.shape, 1), 2)
    
        if len(self.shape) == 2:
            matrix = self._2d_rotation_matrix(self.theta, center)
        elif len(self.shape) == 3:
            matrix = self._3d_rotation_matrix(self.theta, center)
        else:
            return pytest.xfail('Unsupported shape')
    
        if self.output == 'empty':
            output = xp.empty(self.shape, dtype=xp.float32)
            if self.output_shape:
                return pytest.skip('This combination is tested in '
                                   'test_invalid_texture_arguments')
        else:
            output = self.output
    
        if self.output_shape:
            output_shape = (self.output_shape, ) * len(self.shape)
        else:
            output_shape = self.output_shape
    
        if xp == cupy:
            m = cupyx.scipy.ndimage.affine_transform
            matrix = cupy.array(matrix)
>           return m(a, matrix, output_shape=output_shape,
                     output=output, order=self.order,
                     mode=self.mode, texture_memory=True)

tests/cupyx_tests/scipy_tests/ndimage_tests/test_interpolation.py:398: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
cupyx/scipy/ndimage/interpolation.py:376: in affine_transform
    return _texture.affine_transformation(data=input,
cupyx/_texture.py:168: in affine_transformation
    texture_object = _create_texture_object(data,
cupyx/_texture.py:98: in _create_texture_object
    array = texture.CUDAarray(texture_fmt, *data.shape[::-1])
cupy/cuda/texture.pyx:296: in cupy.cuda.texture.CUDAarray.__init__
    self.ptr = runtime.malloc3DArray(desc.ptr, width, height, depth,
cupy_backends/cuda/api/runtime.pyx:593: in cupy_backends.cuda.api.runtime.malloc3DArray
    check_status(status)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

>   raise CUDARuntimeError(status)
E   AssertionError: Only cupy raises error
E   
E   Traceback (most recent call last):
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.Np3X0NVCM9/cupy/cupy/testing/_helper.py", line 47, in _call_func
E       result = impl(self, *args, **kw)
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.Np3X0NVCM9/cupy/tests/cupyx_tests/scipy_tests/ndimage_tests/test_interpolation.py", line 398, in test_affine_transform_texture_memory
E       return m(a, matrix, output_shape=output_shape,
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.Np3X0NVCM9/cupy/cupyx/scipy/ndimage/interpolation.py", line 376, in affine_transform
E       return _texture.affine_transformation(data=input,
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.Np3X0NVCM9/cupy/cupyx/_texture.py", line 168, in affine_transformation
E       texture_object = _create_texture_object(data,
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.Np3X0NVCM9/cupy/cupyx/_texture.py", line 98, in _create_texture_object
E       array = texture.CUDAarray(texture_fmt, *data.shape[::-1])
E     File "cupy/cuda/texture.pyx", line 296, in cupy.cuda.texture.CUDAarray.__init__
E       self.ptr = runtime.malloc3DArray(desc.ptr, width, height, depth,
E     File "cupy_backends/cuda/api/runtime.pyx", line 593, in cupy_backends.cuda.api.runtime.malloc3DArray
E       check_status(status)
E     File "cupy_backends/cuda/api/runtime.pyx", line 265, in cupy_backends.cuda.api.runtime.check_status
E       raise CUDARuntimeError(status)
E   cupy_backends.cuda.api.runtime.CUDARuntimeError: hipErrorUnknown: hipErrorUnknown

cupy_backends/cuda/api/runtime.pyx:265: AssertionError
----------------------------- Captured stderr call -----------------------------
Traceback (most recent call last):
  File "cupy_backends/cuda/api/runtime.pyx", line 644, in cupy_backends.cuda.api.runtime.freeArray
    check_status(status)
  File "cupy_backends/cuda/api/runtime.pyx", line 265, in cupy_backends.cuda.api.runtime.check_status
    raise CUDARuntimeError(status)
cupy_backends.cuda.api.runtime.CUDARuntimeError: hipErrorUnknown: hipErrorUnknown
_ TestAffineTransformTextureMemory.test_affine_transform_texture_memory[_param_134_{mode='constant', order=1, output=float32, output_shape=None, shape=(10, 20), theta=180}] _

self = <<cupyx_tests.scipy_tests.ndimage_tests.test_interpolation.TestAffineTransformTextureMemory object at 0x7fd70584fca0> ...de': 'constant', 'order': 1, 'output': <class 'numpy.float32'>, 'output_shape': None, 'shape': (10, 20), 'theta': 180}>
xp = <module 'cupy' from '/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.Np3X0NVCM9/cupy/cupy/__init__.py'>
scp = <module 'cupyx.scipy' from '/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.Np3X0NVCM9/cupy/cupyx/scipy/__init__.py'>

    @testing.numpy_cupy_allclose(atol=0.1, scipy_name='scp')
    def test_affine_transform_texture_memory(self, xp, scp):
        a = xp.ones(self.shape, dtype=xp.float32)
        center = numpy.divide(numpy.subtract(self.shape, 1), 2)
    
        if len(self.shape) == 2:
            matrix = self._2d_rotation_matrix(self.theta, center)
        elif len(self.shape) == 3:
            matrix = self._3d_rotation_matrix(self.theta, center)
        else:
            return pytest.xfail('Unsupported shape')
    
        if self.output == 'empty':
            output = xp.empty(self.shape, dtype=xp.float32)
            if self.output_shape:
                return pytest.skip('This combination is tested in '
                                   'test_invalid_texture_arguments')
        else:
            output = self.output
    
        if self.output_shape:
            output_shape = (self.output_shape, ) * len(self.shape)
        else:
            output_shape = self.output_shape
    
        if xp == cupy:
            m = cupyx.scipy.ndimage.affine_transform
            matrix = cupy.array(matrix)
>           return m(a, matrix, output_shape=output_shape,
                     output=output, order=self.order,
                     mode=self.mode, texture_memory=True)

tests/cupyx_tests/scipy_tests/ndimage_tests/test_interpolation.py:398: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
cupyx/scipy/ndimage/interpolation.py:376: in affine_transform
    return _texture.affine_transformation(data=input,
cupyx/_texture.py:168: in affine_transformation
    texture_object = _create_texture_object(data,
cupyx/_texture.py:98: in _create_texture_object
    array = texture.CUDAarray(texture_fmt, *data.shape[::-1])
cupy/cuda/texture.pyx:296: in cupy.cuda.texture.CUDAarray.__init__
    self.ptr = runtime.malloc3DArray(desc.ptr, width, height, depth,
cupy_backends/cuda/api/runtime.pyx:593: in cupy_backends.cuda.api.runtime.malloc3DArray
    check_status(status)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

>   raise CUDARuntimeError(status)
E   AssertionError: Only cupy raises error
E   
E   Traceback (most recent call last):
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.Np3X0NVCM9/cupy/cupy/testing/_helper.py", line 47, in _call_func
E       result = impl(self, *args, **kw)
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.Np3X0NVCM9/cupy/tests/cupyx_tests/scipy_tests/ndimage_tests/test_interpolation.py", line 398, in test_affine_transform_texture_memory
E       return m(a, matrix, output_shape=output_shape,
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.Np3X0NVCM9/cupy/cupyx/scipy/ndimage/interpolation.py", line 376, in affine_transform
E       return _texture.affine_transformation(data=input,
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.Np3X0NVCM9/cupy/cupyx/_texture.py", line 168, in affine_transformation
E       texture_object = _create_texture_object(data,
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.Np3X0NVCM9/cupy/cupyx/_texture.py", line 98, in _create_texture_object
E       array = texture.CUDAarray(texture_fmt, *data.shape[::-1])
E     File "cupy/cuda/texture.pyx", line 296, in cupy.cuda.texture.CUDAarray.__init__
E       self.ptr = runtime.malloc3DArray(desc.ptr, width, height, depth,
E     File "cupy_backends/cuda/api/runtime.pyx", line 593, in cupy_backends.cuda.api.runtime.malloc3DArray
E       check_status(status)
E     File "cupy_backends/cuda/api/runtime.pyx", line 265, in cupy_backends.cuda.api.runtime.check_status
E       raise CUDARuntimeError(status)
E   cupy_backends.cuda.api.runtime.CUDARuntimeError: hipErrorUnknown: hipErrorUnknown

cupy_backends/cuda/api/runtime.pyx:265: AssertionError
----------------------------- Captured stderr call -----------------------------
Traceback (most recent call last):
  File "cupy_backends/cuda/api/runtime.pyx", line 644, in cupy_backends.cuda.api.runtime.freeArray
    check_status(status)
  File "cupy_backends/cuda/api/runtime.pyx", line 265, in cupy_backends.cuda.api.runtime.check_status
    raise CUDARuntimeError(status)
cupy_backends.cuda.api.runtime.CUDARuntimeError: hipErrorUnknown: hipErrorUnknown
_ TestAffineTransformTextureMemory.test_affine_transform_texture_memory[_param_135_{mode='constant', order=1, output=float32, output_shape=None, shape=(10, 20), theta=270}] _

self = <<cupyx_tests.scipy_tests.ndimage_tests.test_interpolation.TestAffineTransformTextureMemory object at 0x7fd7057cd9a0> ...de': 'constant', 'order': 1, 'output': <class 'numpy.float32'>, 'output_shape': None, 'shape': (10, 20), 'theta': 270}>
xp = <module 'cupy' from '/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.Np3X0NVCM9/cupy/cupy/__init__.py'>
scp = <module 'cupyx.scipy' from '/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.Np3X0NVCM9/cupy/cupyx/scipy/__init__.py'>

    @testing.numpy_cupy_allclose(atol=0.1, scipy_name='scp')
    def test_affine_transform_texture_memory(self, xp, scp):
        a = xp.ones(self.shape, dtype=xp.float32)
        center = numpy.divide(numpy.subtract(self.shape, 1), 2)
    
        if len(self.shape) == 2:
            matrix = self._2d_rotation_matrix(self.theta, center)
        elif len(self.shape) == 3:
            matrix = self._3d_rotation_matrix(self.theta, center)
        else:
            return pytest.xfail('Unsupported shape')
    
        if self.output == 'empty':
            output = xp.empty(self.shape, dtype=xp.float32)
            if self.output_shape:
                return pytest.skip('This combination is tested in '
                                   'test_invalid_texture_arguments')
        else:
            output = self.output
    
        if self.output_shape:
            output_shape = (self.output_shape, ) * len(self.shape)
        else:
            output_shape = self.output_shape
    
        if xp == cupy:
            m = cupyx.scipy.ndimage.affine_transform
            matrix = cupy.array(matrix)
>           return m(a, matrix, output_shape=output_shape,
                     output=output, order=self.order,
                     mode=self.mode, texture_memory=True)

tests/cupyx_tests/scipy_tests/ndimage_tests/test_interpolation.py:398: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
cupyx/scipy/ndimage/interpolation.py:376: in affine_transform
    return _texture.affine_transformation(data=input,
cupyx/_texture.py:168: in affine_transformation
    texture_object = _create_texture_object(data,
cupyx/_texture.py:98: in _create_texture_object
    array = texture.CUDAarray(texture_fmt, *data.shape[::-1])
cupy/cuda/texture.pyx:296: in cupy.cuda.texture.CUDAarray.__init__
    self.ptr = runtime.malloc3DArray(desc.ptr, width, height, depth,
cupy_backends/cuda/api/runtime.pyx:593: in cupy_backends.cuda.api.runtime.malloc3DArray
    check_status(status)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

>   raise CUDARuntimeError(status)
E   AssertionError: Only cupy raises error
E   
E   Traceback (most recent call last):
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.Np3X0NVCM9/cupy/cupy/testing/_helper.py", line 47, in _call_func
E       result = impl(self, *args, **kw)
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.Np3X0NVCM9/cupy/tests/cupyx_tests/scipy_tests/ndimage_tests/test_interpolation.py", line 398, in test_affine_transform_texture_memory
E       return m(a, matrix, output_shape=output_shape,
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.Np3X0NVCM9/cupy/cupyx/scipy/ndimage/interpolation.py", line 376, in affine_transform
E       return _texture.affine_transformation(data=input,
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.Np3X0NVCM9/cupy/cupyx/_texture.py", line 168, in affine_transformation
E       texture_object = _create_texture_object(data,
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.Np3X0NVCM9/cupy/cupyx/_texture.py", line 98, in _create_texture_object
E       array = texture.CUDAarray(texture_fmt, *data.shape[::-1])
E     File "cupy/cuda/texture.pyx", line 296, in cupy.cuda.texture.CUDAarray.__init__
E       self.ptr = runtime.malloc3DArray(desc.ptr, width, height, depth,
E     File "cupy_backends/cuda/api/runtime.pyx", line 593, in cupy_backends.cuda.api.runtime.malloc3DArray
E       check_status(status)
E     File "cupy_backends/cuda/api/runtime.pyx", line 265, in cupy_backends.cuda.api.runtime.check_status
E       raise CUDARuntimeError(status)
E   cupy_backends.cuda.api.runtime.CUDARuntimeError: hipErrorUnknown: hipErrorUnknown

cupy_backends/cuda/api/runtime.pyx:265: AssertionError
----------------------------- Captured stderr call -----------------------------
Traceback (most recent call last):
  File "cupy_backends/cuda/api/runtime.pyx", line 644, in cupy_backends.cuda.api.runtime.freeArray
    check_status(status)
  File "cupy_backends/cuda/api/runtime.pyx", line 265, in cupy_backends.cuda.api.runtime.check_status
    raise CUDARuntimeError(status)
cupy_backends.cuda.api.runtime.CUDARuntimeError: hipErrorUnknown: hipErrorUnknown
_ TestAffineTransformTextureMemory.test_affine_transform_texture_memory[_param_136_{mode='constant', order=1, output=float32, output_shape=None, shape=(10, 10, 10), theta=0}] _

self = <<cupyx_tests.scipy_tests.ndimage_tests.test_interpolation.TestAffineTransformTextureMemory object at 0x7fd7057c9250> ...': 'constant', 'order': 1, 'output': <class 'numpy.float32'>, 'output_shape': None, 'shape': (10, 10, 10), 'theta': 0}>
xp = <module 'cupy' from '/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.Np3X0NVCM9/cupy/cupy/__init__.py'>
scp = <module 'cupyx.scipy' from '/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.Np3X0NVCM9/cupy/cupyx/scipy/__init__.py'>

    @testing.numpy_cupy_allclose(atol=0.1, scipy_name='scp')
    def test_affine_transform_texture_memory(self, xp, scp):
        a = xp.ones(self.shape, dtype=xp.float32)
        center = numpy.divide(numpy.subtract(self.shape, 1), 2)
    
        if len(self.shape) == 2:
            matrix = self._2d_rotation_matrix(self.theta, center)
        elif len(self.shape) == 3:
            matrix = self._3d_rotation_matrix(self.theta, center)
        else:
            return pytest.xfail('Unsupported shape')
    
        if self.output == 'empty':
            output = xp.empty(self.shape, dtype=xp.float32)
            if self.output_shape:
                return pytest.skip('This combination is tested in '
                                   'test_invalid_texture_arguments')
        else:
            output = self.output
    
        if self.output_shape:
            output_shape = (self.output_shape, ) * len(self.shape)
        else:
            output_shape = self.output_shape
    
        if xp == cupy:
            m = cupyx.scipy.ndimage.affine_transform
            matrix = cupy.array(matrix)
>           return m(a, matrix, output_shape=output_shape,
                     output=output, order=self.order,
                     mode=self.mode, texture_memory=True)

tests/cupyx_tests/scipy_tests/ndimage_tests/test_interpolation.py:398: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
cupyx/scipy/ndimage/interpolation.py:376: in affine_transform
    return _texture.affine_transformation(data=input,
cupyx/_texture.py:168: in affine_transformation
    texture_object = _create_texture_object(data,
cupyx/_texture.py:98: in _create_texture_object
    array = texture.CUDAarray(texture_fmt, *data.shape[::-1])
cupy/cuda/texture.pyx:296: in cupy.cuda.texture.CUDAarray.__init__
    self.ptr = runtime.malloc3DArray(desc.ptr, width, height, depth,
cupy_backends/cuda/api/runtime.pyx:593: in cupy_backends.cuda.api.runtime.malloc3DArray
    check_status(status)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

>   raise CUDARuntimeError(status)
E   AssertionError: Only cupy raises error
E   
E   Traceback (most recent call last):
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.Np3X0NVCM9/cupy/cupy/testing/_helper.py", line 47, in _call_func
E       result = impl(self, *args, **kw)
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.Np3X0NVCM9/cupy/tests/cupyx_tests/scipy_tests/ndimage_tests/test_interpolation.py", line 398, in test_affine_transform_texture_memory
E       return m(a, matrix, output_shape=output_shape,
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.Np3X0NVCM9/cupy/cupyx/scipy/ndimage/interpolation.py", line 376, in affine_transform
E       return _texture.affine_transformation(data=input,
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.Np3X0NVCM9/cupy/cupyx/_texture.py", line 168, in affine_transformation
E       texture_object = _create_texture_object(data,
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.Np3X0NVCM9/cupy/cupyx/_texture.py", line 98, in _create_texture_object
E       array = texture.CUDAarray(texture_fmt, *data.shape[::-1])
E     File "cupy/cuda/texture.pyx", line 296, in cupy.cuda.texture.CUDAarray.__init__
E       self.ptr = runtime.malloc3DArray(desc.ptr, width, height, depth,
E     File "cupy_backends/cuda/api/runtime.pyx", line 593, in cupy_backends.cuda.api.runtime.malloc3DArray
E       check_status(status)
E     File "cupy_backends/cuda/api/runtime.pyx", line 265, in cupy_backends.cuda.api.runtime.check_status
E       raise CUDARuntimeError(status)
E   cupy_backends.cuda.api.runtime.CUDARuntimeError: hipErrorUnknown: hipErrorUnknown

cupy_backends/cuda/api/runtime.pyx:265: AssertionError
----------------------------- Captured stderr call -----------------------------
Traceback (most recent call last):
  File "cupy_backends/cuda/api/runtime.pyx", line 644, in cupy_backends.cuda.api.runtime.freeArray
    check_status(status)
  File "cupy_backends/cuda/api/runtime.pyx", line 265, in cupy_backends.cuda.api.runtime.check_status
    raise CUDARuntimeError(status)
cupy_backends.cuda.api.runtime.CUDARuntimeError: hipErrorUnknown: hipErrorUnknown
_ TestAffineTransformTextureMemory.test_affine_transform_texture_memory[_param_137_{mode='constant', order=1, output=float32, output_shape=None, shape=(10, 10, 10), theta=90}] _

self = <<cupyx_tests.scipy_tests.ndimage_tests.test_interpolation.TestAffineTransformTextureMemory object at 0x7fd706d6c070> ...: 'constant', 'order': 1, 'output': <class 'numpy.float32'>, 'output_shape': None, 'shape': (10, 10, 10), 'theta': 90}>
xp = <module 'cupy' from '/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.Np3X0NVCM9/cupy/cupy/__init__.py'>
scp = <module 'cupyx.scipy' from '/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.Np3X0NVCM9/cupy/cupyx/scipy/__init__.py'>

    @testing.numpy_cupy_allclose(atol=0.1, scipy_name='scp')
    def test_affine_transform_texture_memory(self, xp, scp):
        a = xp.ones(self.shape, dtype=xp.float32)
        center = numpy.divide(numpy.subtract(self.shape, 1), 2)
    
        if len(self.shape) == 2:
            matrix = self._2d_rotation_matrix(self.theta, center)
        elif len(self.shape) == 3:
            matrix = self._3d_rotation_matrix(self.theta, center)
        else:
            return pytest.xfail('Unsupported shape')
    
        if self.output == 'empty':
            output = xp.empty(self.shape, dtype=xp.float32)
            if self.output_shape:
                return pytest.skip('This combination is tested in '
                                   'test_invalid_texture_arguments')
        else:
            output = self.output
    
        if self.output_shape:
            output_shape = (self.output_shape, ) * len(self.shape)
        else:
            output_shape = self.output_shape
    
        if xp == cupy:
            m = cupyx.scipy.ndimage.affine_transform
            matrix = cupy.array(matrix)
>           return m(a, matrix, output_shape=output_shape,
                     output=output, order=self.order,
                     mode=self.mode, texture_memory=True)

tests/cupyx_tests/scipy_tests/ndimage_tests/test_interpolation.py:398: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
cupyx/scipy/ndimage/interpolation.py:376: in affine_transform
    return _texture.affine_transformation(data=input,
cupyx/_texture.py:168: in affine_transformation
    texture_object = _create_texture_object(data,
cupyx/_texture.py:98: in _create_texture_object
    array = texture.CUDAarray(texture_fmt, *data.shape[::-1])
cupy/cuda/texture.pyx:296: in cupy.cuda.texture.CUDAarray.__init__
    self.ptr = runtime.malloc3DArray(desc.ptr, width, height, depth,
cupy_backends/cuda/api/runtime.pyx:593: in cupy_backends.cuda.api.runtime.malloc3DArray
    check_status(status)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

>   raise CUDARuntimeError(status)
E   AssertionError: Only cupy raises error
E   
E   Traceback (most recent call last):
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.Np3X0NVCM9/cupy/cupy/testing/_helper.py", line 47, in _call_func
E       result = impl(self, *args, **kw)
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.Np3X0NVCM9/cupy/tests/cupyx_tests/scipy_tests/ndimage_tests/test_interpolation.py", line 398, in test_affine_transform_texture_memory
E       return m(a, matrix, output_shape=output_shape,
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.Np3X0NVCM9/cupy/cupyx/scipy/ndimage/interpolation.py", line 376, in affine_transform
E       return _texture.affine_transformation(data=input,
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.Np3X0NVCM9/cupy/cupyx/_texture.py", line 168, in affine_transformation
E       texture_object = _create_texture_object(data,
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.Np3X0NVCM9/cupy/cupyx/_texture.py", line 98, in _create_texture_object
E       array = texture.CUDAarray(texture_fmt, *data.shape[::-1])
E     File "cupy/cuda/texture.pyx", line 296, in cupy.cuda.texture.CUDAarray.__init__
E       self.ptr = runtime.malloc3DArray(desc.ptr, width, height, depth,
E     File "cupy_backends/cuda/api/runtime.pyx", line 593, in cupy_backends.cuda.api.runtime.malloc3DArray
E       check_status(status)
E     File "cupy_backends/cuda/api/runtime.pyx", line 265, in cupy_backends.cuda.api.runtime.check_status
E       raise CUDARuntimeError(status)
E   cupy_backends.cuda.api.runtime.CUDARuntimeError: hipErrorUnknown: hipErrorUnknown

cupy_backends/cuda/api/runtime.pyx:265: AssertionError
----------------------------- Captured stderr call -----------------------------
Traceback (most recent call last):
  File "cupy_backends/cuda/api/runtime.pyx", line 644, in cupy_backends.cuda.api.runtime.freeArray
    check_status(status)
  File "cupy_backends/cuda/api/runtime.pyx", line 265, in cupy_backends.cuda.api.runtime.check_status
    raise CUDARuntimeError(status)
cupy_backends.cuda.api.runtime.CUDARuntimeError: hipErrorUnknown: hipErrorUnknown
_ TestAffineTransformTextureMemory.test_affine_transform_texture_memory[_param_138_{mode='constant', order=1, output=float32, output_shape=None, shape=(10, 10, 10), theta=180}] _

self = <<cupyx_tests.scipy_tests.ndimage_tests.test_interpolation.TestAffineTransformTextureMemory object at 0x7fd7065aad30> ... 'constant', 'order': 1, 'output': <class 'numpy.float32'>, 'output_shape': None, 'shape': (10, 10, 10), 'theta': 180}>
xp = <module 'cupy' from '/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.Np3X0NVCM9/cupy/cupy/__init__.py'>
scp = <module 'cupyx.scipy' from '/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.Np3X0NVCM9/cupy/cupyx/scipy/__init__.py'>

    @testing.numpy_cupy_allclose(atol=0.1, scipy_name='scp')
    def test_affine_transform_texture_memory(self, xp, scp):
        a = xp.ones(self.shape, dtype=xp.float32)
        center = numpy.divide(numpy.subtract(self.shape, 1), 2)
    
        if len(self.shape) == 2:
            matrix = self._2d_rotation_matrix(self.theta, center)
        elif len(self.shape) == 3:
            matrix = self._3d_rotation_matrix(self.theta, center)
        else:
            return pytest.xfail('Unsupported shape')
    
        if self.output == 'empty':
            output = xp.empty(self.shape, dtype=xp.float32)
            if self.output_shape:
                return pytest.skip('This combination is tested in '
                                   'test_invalid_texture_arguments')
        else:
            output = self.output
    
        if self.output_shape:
            output_shape = (self.output_shape, ) * len(self.shape)
        else:
            output_shape = self.output_shape
    
        if xp == cupy:
            m = cupyx.scipy.ndimage.affine_transform
            matrix = cupy.array(matrix)
>           return m(a, matrix, output_shape=output_shape,
                     output=output, order=self.order,
                     mode=self.mode, texture_memory=True)

tests/cupyx_tests/scipy_tests/ndimage_tests/test_interpolation.py:398: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
cupyx/scipy/ndimage/interpolation.py:376: in affine_transform
    return _texture.affine_transformation(data=input,
cupyx/_texture.py:168: in affine_transformation
    texture_object = _create_texture_object(data,
cupyx/_texture.py:98: in _create_texture_object
    array = texture.CUDAarray(texture_fmt, *data.shape[::-1])
cupy/cuda/texture.pyx:296: in cupy.cuda.texture.CUDAarray.__init__
    self.ptr = runtime.malloc3DArray(desc.ptr, width, height, depth,
cupy_backends/cuda/api/runtime.pyx:593: in cupy_backends.cuda.api.runtime.malloc3DArray
    check_status(status)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

>   raise CUDARuntimeError(status)
E   AssertionError: Only cupy raises error
E   
E   Traceback (most recent call last):
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.Np3X0NVCM9/cupy/cupy/testing/_helper.py", line 47, in _call_func
E       result = impl(self, *args, **kw)
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.Np3X0NVCM9/cupy/tests/cupyx_tests/scipy_tests/ndimage_tests/test_interpolation.py", line 398, in test_affine_transform_texture_memory
E       return m(a, matrix, output_shape=output_shape,
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.Np3X0NVCM9/cupy/cupyx/scipy/ndimage/interpolation.py", line 376, in affine_transform
E       return _texture.affine_transformation(data=input,
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.Np3X0NVCM9/cupy/cupyx/_texture.py", line 168, in affine_transformation
E       texture_object = _create_texture_object(data,
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.Np3X0NVCM9/cupy/cupyx/_texture.py", line 98, in _create_texture_object
E       array = texture.CUDAarray(texture_fmt, *data.shape[::-1])
E     File "cupy/cuda/texture.pyx", line 296, in cupy.cuda.texture.CUDAarray.__init__
E       self.ptr = runtime.malloc3DArray(desc.ptr, width, height, depth,
E     File "cupy_backends/cuda/api/runtime.pyx", line 593, in cupy_backends.cuda.api.runtime.malloc3DArray
E       check_status(status)
E     File "cupy_backends/cuda/api/runtime.pyx", line 265, in cupy_backends.cuda.api.runtime.check_status
E       raise CUDARuntimeError(status)
E   cupy_backends.cuda.api.runtime.CUDARuntimeError: hipErrorUnknown: hipErrorUnknown

cupy_backends/cuda/api/runtime.pyx:265: AssertionError
----------------------------- Captured stderr call -----------------------------
Traceback (most recent call last):
  File "cupy_backends/cuda/api/runtime.pyx", line 644, in cupy_backends.cuda.api.runtime.freeArray
    check_status(status)
  File "cupy_backends/cuda/api/runtime.pyx", line 265, in cupy_backends.cuda.api.runtime.check_status
    raise CUDARuntimeError(status)
cupy_backends.cuda.api.runtime.CUDARuntimeError: hipErrorUnknown: hipErrorUnknown
_ TestAffineTransformTextureMemory.test_affine_transform_texture_memory[_param_139_{mode='constant', order=1, output=float32, output_shape=None, shape=(10, 10, 10), theta=270}] _

self = <<cupyx_tests.scipy_tests.ndimage_tests.test_interpolation.TestAffineTransformTextureMemory object at 0x7fd70658e340> ... 'constant', 'order': 1, 'output': <class 'numpy.float32'>, 'output_shape': None, 'shape': (10, 10, 10), 'theta': 270}>
xp = <module 'cupy' from '/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.Np3X0NVCM9/cupy/cupy/__init__.py'>
scp = <module 'cupyx.scipy' from '/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.Np3X0NVCM9/cupy/cupyx/scipy/__init__.py'>

    @testing.numpy_cupy_allclose(atol=0.1, scipy_name='scp')
    def test_affine_transform_texture_memory(self, xp, scp):
        a = xp.ones(self.shape, dtype=xp.float32)
        center = numpy.divide(numpy.subtract(self.shape, 1), 2)
    
        if len(self.shape) == 2:
            matrix = self._2d_rotation_matrix(self.theta, center)
        elif len(self.shape) == 3:
            matrix = self._3d_rotation_matrix(self.theta, center)
        else:
            return pytest.xfail('Unsupported shape')
    
        if self.output == 'empty':
            output = xp.empty(self.shape, dtype=xp.float32)
            if self.output_shape:
                return pytest.skip('This combination is tested in '
                                   'test_invalid_texture_arguments')
        else:
            output = self.output
    
        if self.output_shape:
            output_shape = (self.output_shape, ) * len(self.shape)
        else:
            output_shape = self.output_shape
    
        if xp == cupy:
            m = cupyx.scipy.ndimage.affine_transform
            matrix = cupy.array(matrix)
>           return m(a, matrix, output_shape=output_shape,
                     output=output, order=self.order,
                     mode=self.mode, texture_memory=True)

tests/cupyx_tests/scipy_tests/ndimage_tests/test_interpolation.py:398: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
cupyx/scipy/ndimage/interpolation.py:376: in affine_transform
    return _texture.affine_transformation(data=input,
cupyx/_texture.py:168: in affine_transformation
    texture_object = _create_texture_object(data,
cupyx/_texture.py:98: in _create_texture_object
    array = texture.CUDAarray(texture_fmt, *data.shape[::-1])
cupy/cuda/texture.pyx:296: in cupy.cuda.texture.CUDAarray.__init__
    self.ptr = runtime.malloc3DArray(desc.ptr, width, height, depth,
cupy_backends/cuda/api/runtime.pyx:593: in cupy_backends.cuda.api.runtime.malloc3DArray
    check_status(status)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

>   raise CUDARuntimeError(status)
E   AssertionError: Only cupy raises error
E   
E   Traceback (most recent call last):
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.Np3X0NVCM9/cupy/cupy/testing/_helper.py", line 47, in _call_func
E       result = impl(self, *args, **kw)
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.Np3X0NVCM9/cupy/tests/cupyx_tests/scipy_tests/ndimage_tests/test_interpolation.py", line 398, in test_affine_transform_texture_memory
E       return m(a, matrix, output_shape=output_shape,
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.Np3X0NVCM9/cupy/cupyx/scipy/ndimage/interpolation.py", line 376, in affine_transform
E       return _texture.affine_transformation(data=input,
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.Np3X0NVCM9/cupy/cupyx/_texture.py", line 168, in affine_transformation
E       texture_object = _create_texture_object(data,
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.Np3X0NVCM9/cupy/cupyx/_texture.py", line 98, in _create_texture_object
E       array = texture.CUDAarray(texture_fmt, *data.shape[::-1])
E     File "cupy/cuda/texture.pyx", line 296, in cupy.cuda.texture.CUDAarray.__init__
E       self.ptr = runtime.malloc3DArray(desc.ptr, width, height, depth,
E     File "cupy_backends/cuda/api/runtime.pyx", line 593, in cupy_backends.cuda.api.runtime.malloc3DArray
E       check_status(status)
E     File "cupy_backends/cuda/api/runtime.pyx", line 265, in cupy_backends.cuda.api.runtime.check_status
E       raise CUDARuntimeError(status)
E   cupy_backends.cuda.api.runtime.CUDARuntimeError: hipErrorUnknown: hipErrorUnknown

cupy_backends/cuda/api/runtime.pyx:265: AssertionError
----------------------------- Captured stderr call -----------------------------
Traceback (most recent call last):
  File "cupy_backends/cuda/api/runtime.pyx", line 644, in cupy_backends.cuda.api.runtime.freeArray
    check_status(status)
  File "cupy_backends/cuda/api/runtime.pyx", line 265, in cupy_backends.cuda.api.runtime.check_status
    raise CUDARuntimeError(status)
cupy_backends.cuda.api.runtime.CUDARuntimeError: hipErrorUnknown: hipErrorUnknown
_ TestAffineTransformTextureMemory.test_affine_transform_texture_memory[_param_140_{mode='constant', order=1, output=float32, output_shape=None, shape=(10, 20, 30), theta=0}] _

self = <<cupyx_tests.scipy_tests.ndimage_tests.test_interpolation.TestAffineTransformTextureMemory object at 0x7fd705afb4f0> ...': 'constant', 'order': 1, 'output': <class 'numpy.float32'>, 'output_shape': None, 'shape': (10, 20, 30), 'theta': 0}>
xp = <module 'cupy' from '/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.Np3X0NVCM9/cupy/cupy/__init__.py'>
scp = <module 'cupyx.scipy' from '/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.Np3X0NVCM9/cupy/cupyx/scipy/__init__.py'>

    @testing.numpy_cupy_allclose(atol=0.1, scipy_name='scp')
    def test_affine_transform_texture_memory(self, xp, scp):
        a = xp.ones(self.shape, dtype=xp.float32)
        center = numpy.divide(numpy.subtract(self.shape, 1), 2)
    
        if len(self.shape) == 2:
            matrix = self._2d_rotation_matrix(self.theta, center)
        elif len(self.shape) == 3:
            matrix = self._3d_rotation_matrix(self.theta, center)
        else:
            return pytest.xfail('Unsupported shape')
    
        if self.output == 'empty':
            output = xp.empty(self.shape, dtype=xp.float32)
            if self.output_shape:
                return pytest.skip('This combination is tested in '
                                   'test_invalid_texture_arguments')
        else:
            output = self.output
    
        if self.output_shape:
            output_shape = (self.output_shape, ) * len(self.shape)
        else:
            output_shape = self.output_shape
    
        if xp == cupy:
            m = cupyx.scipy.ndimage.affine_transform
            matrix = cupy.array(matrix)
>           return m(a, matrix, output_shape=output_shape,
                     output=output, order=self.order,
                     mode=self.mode, texture_memory=True)

tests/cupyx_tests/scipy_tests/ndimage_tests/test_interpolation.py:398: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
cupyx/scipy/ndimage/interpolation.py:376: in affine_transform
    return _texture.affine_transformation(data=input,
cupyx/_texture.py:168: in affine_transformation
    texture_object = _create_texture_object(data,
cupyx/_texture.py:98: in _create_texture_object
    array = texture.CUDAarray(texture_fmt, *data.shape[::-1])
cupy/cuda/texture.pyx:296: in cupy.cuda.texture.CUDAarray.__init__
    self.ptr = runtime.malloc3DArray(desc.ptr, width, height, depth,
cupy_backends/cuda/api/runtime.pyx:593: in cupy_backends.cuda.api.runtime.malloc3DArray
    check_status(status)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

>   raise CUDARuntimeError(status)
E   AssertionError: Only cupy raises error
E   
E   Traceback (most recent call last):
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.Np3X0NVCM9/cupy/cupy/testing/_helper.py", line 47, in _call_func
E       result = impl(self, *args, **kw)
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.Np3X0NVCM9/cupy/tests/cupyx_tests/scipy_tests/ndimage_tests/test_interpolation.py", line 398, in test_affine_transform_texture_memory
E       return m(a, matrix, output_shape=output_shape,
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.Np3X0NVCM9/cupy/cupyx/scipy/ndimage/interpolation.py", line 376, in affine_transform
E       return _texture.affine_transformation(data=input,
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.Np3X0NVCM9/cupy/cupyx/_texture.py", line 168, in affine_transformation
E       texture_object = _create_texture_object(data,
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.Np3X0NVCM9/cupy/cupyx/_texture.py", line 98, in _create_texture_object
E       array = texture.CUDAarray(texture_fmt, *data.shape[::-1])
E     File "cupy/cuda/texture.pyx", line 296, in cupy.cuda.texture.CUDAarray.__init__
E       self.ptr = runtime.malloc3DArray(desc.ptr, width, height, depth,
E     File "cupy_backends/cuda/api/runtime.pyx", line 593, in cupy_backends.cuda.api.runtime.malloc3DArray
E       check_status(status)
E     File "cupy_backends/cuda/api/runtime.pyx", line 265, in cupy_backends.cuda.api.runtime.check_status
E       raise CUDARuntimeError(status)
E   cupy_backends.cuda.api.runtime.CUDARuntimeError: hipErrorUnknown: hipErrorUnknown

cupy_backends/cuda/api/runtime.pyx:265: AssertionError
----------------------------- Captured stderr call -----------------------------
Traceback (most recent call last):
  File "cupy_backends/cuda/api/runtime.pyx", line 644, in cupy_backends.cuda.api.runtime.freeArray
    check_status(status)
  File "cupy_backends/cuda/api/runtime.pyx", line 265, in cupy_backends.cuda.api.runtime.check_status
    raise CUDARuntimeError(status)
cupy_backends.cuda.api.runtime.CUDARuntimeError: hipErrorUnknown: hipErrorUnknown
_ TestAffineTransformTextureMemory.test_affine_transform_texture_memory[_param_141_{mode='constant', order=1, output=float32, output_shape=None, shape=(10, 20, 30), theta=90}] _

self = <<cupyx_tests.scipy_tests.ndimage_tests.test_interpolation.TestAffineTransformTextureMemory object at 0x7fd705871220> ...: 'constant', 'order': 1, 'output': <class 'numpy.float32'>, 'output_shape': None, 'shape': (10, 20, 30), 'theta': 90}>
xp = <module 'cupy' from '/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.Np3X0NVCM9/cupy/cupy/__init__.py'>
scp = <module 'cupyx.scipy' from '/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.Np3X0NVCM9/cupy/cupyx/scipy/__init__.py'>

    @testing.numpy_cupy_allclose(atol=0.1, scipy_name='scp')
    def test_affine_transform_texture_memory(self, xp, scp):
        a = xp.ones(self.shape, dtype=xp.float32)
        center = numpy.divide(numpy.subtract(self.shape, 1), 2)
    
        if len(self.shape) == 2:
            matrix = self._2d_rotation_matrix(self.theta, center)
        elif len(self.shape) == 3:
            matrix = self._3d_rotation_matrix(self.theta, center)
        else:
            return pytest.xfail('Unsupported shape')
    
        if self.output == 'empty':
            output = xp.empty(self.shape, dtype=xp.float32)
            if self.output_shape:
                return pytest.skip('This combination is tested in '
                                   'test_invalid_texture_arguments')
        else:
            output = self.output
    
        if self.output_shape:
            output_shape = (self.output_shape, ) * len(self.shape)
        else:
            output_shape = self.output_shape
    
        if xp == cupy:
            m = cupyx.scipy.ndimage.affine_transform
            matrix = cupy.array(matrix)
>           return m(a, matrix, output_shape=output_shape,
                     output=output, order=self.order,
                     mode=self.mode, texture_memory=True)

tests/cupyx_tests/scipy_tests/ndimage_tests/test_interpolation.py:398: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
cupyx/scipy/ndimage/interpolation.py:376: in affine_transform
    return _texture.affine_transformation(data=input,
cupyx/_texture.py:168: in affine_transformation
    texture_object = _create_texture_object(data,
cupyx/_texture.py:98: in _create_texture_object
    array = texture.CUDAarray(texture_fmt, *data.shape[::-1])
cupy/cuda/texture.pyx:296: in cupy.cuda.texture.CUDAarray.__init__
    self.ptr = runtime.malloc3DArray(desc.ptr, width, height, depth,
cupy_backends/cuda/api/runtime.pyx:593: in cupy_backends.cuda.api.runtime.malloc3DArray
    check_status(status)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

>   raise CUDARuntimeError(status)
E   AssertionError: Only cupy raises error
E   
E   Traceback (most recent call last):
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.Np3X0NVCM9/cupy/cupy/testing/_helper.py", line 47, in _call_func
E       result = impl(self, *args, **kw)
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.Np3X0NVCM9/cupy/tests/cupyx_tests/scipy_tests/ndimage_tests/test_interpolation.py", line 398, in test_affine_transform_texture_memory
E       return m(a, matrix, output_shape=output_shape,
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.Np3X0NVCM9/cupy/cupyx/scipy/ndimage/interpolation.py", line 376, in affine_transform
E       return _texture.affine_transformation(data=input,
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.Np3X0NVCM9/cupy/cupyx/_texture.py", line 168, in affine_transformation
E       texture_object = _create_texture_object(data,
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.Np3X0NVCM9/cupy/cupyx/_texture.py", line 98, in _create_texture_object
E       array = texture.CUDAarray(texture_fmt, *data.shape[::-1])
E     File "cupy/cuda/texture.pyx", line 296, in cupy.cuda.texture.CUDAarray.__init__
E       self.ptr = runtime.malloc3DArray(desc.ptr, width, height, depth,
E     File "cupy_backends/cuda/api/runtime.pyx", line 593, in cupy_backends.cuda.api.runtime.malloc3DArray
E       check_status(status)
E     File "cupy_backends/cuda/api/runtime.pyx", line 265, in cupy_backends.cuda.api.runtime.check_status
E       raise CUDARuntimeError(status)
E   cupy_backends.cuda.api.runtime.CUDARuntimeError: hipErrorUnknown: hipErrorUnknown

cupy_backends/cuda/api/runtime.pyx:265: AssertionError
----------------------------- Captured stderr call -----------------------------
Traceback (most recent call last):
  File "cupy_backends/cuda/api/runtime.pyx", line 644, in cupy_backends.cuda.api.runtime.freeArray
    check_status(status)
  File "cupy_backends/cuda/api/runtime.pyx", line 265, in cupy_backends.cuda.api.runtime.check_status
    raise CUDARuntimeError(status)
cupy_backends.cuda.api.runtime.CUDARuntimeError: hipErrorUnknown: hipErrorUnknown
_ TestAffineTransformTextureMemory.test_affine_transform_texture_memory[_param_142_{mode='constant', order=1, output=float32, output_shape=None, shape=(10, 20, 30), theta=180}] _

self = <<cupyx_tests.scipy_tests.ndimage_tests.test_interpolation.TestAffineTransformTextureMemory object at 0x7fd7061da340> ... 'constant', 'order': 1, 'output': <class 'numpy.float32'>, 'output_shape': None, 'shape': (10, 20, 30), 'theta': 180}>
xp = <module 'cupy' from '/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.Np3X0NVCM9/cupy/cupy/__init__.py'>
scp = <module 'cupyx.scipy' from '/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.Np3X0NVCM9/cupy/cupyx/scipy/__init__.py'>

    @testing.numpy_cupy_allclose(atol=0.1, scipy_name='scp')
    def test_affine_transform_texture_memory(self, xp, scp):
        a = xp.ones(self.shape, dtype=xp.float32)
        center = numpy.divide(numpy.subtract(self.shape, 1), 2)
    
        if len(self.shape) == 2:
            matrix = self._2d_rotation_matrix(self.theta, center)
        elif len(self.shape) == 3:
            matrix = self._3d_rotation_matrix(self.theta, center)
        else:
            return pytest.xfail('Unsupported shape')
    
        if self.output == 'empty':
            output = xp.empty(self.shape, dtype=xp.float32)
            if self.output_shape:
                return pytest.skip('This combination is tested in '
                                   'test_invalid_texture_arguments')
        else:
            output = self.output
    
        if self.output_shape:
            output_shape = (self.output_shape, ) * len(self.shape)
        else:
            output_shape = self.output_shape
    
        if xp == cupy:
            m = cupyx.scipy.ndimage.affine_transform
            matrix = cupy.array(matrix)
>           return m(a, matrix, output_shape=output_shape,
                     output=output, order=self.order,
                     mode=self.mode, texture_memory=True)

tests/cupyx_tests/scipy_tests/ndimage_tests/test_interpolation.py:398: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
cupyx/scipy/ndimage/interpolation.py:376: in affine_transform
    return _texture.affine_transformation(data=input,
cupyx/_texture.py:168: in affine_transformation
    texture_object = _create_texture_object(data,
cupyx/_texture.py:98: in _create_texture_object
    array = texture.CUDAarray(texture_fmt, *data.shape[::-1])
cupy/cuda/texture.pyx:296: in cupy.cuda.texture.CUDAarray.__init__
    self.ptr = runtime.malloc3DArray(desc.ptr, width, height, depth,
cupy_backends/cuda/api/runtime.pyx:593: in cupy_backends.cuda.api.runtime.malloc3DArray
    check_status(status)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

>   raise CUDARuntimeError(status)
E   AssertionError: Only cupy raises error
E   
E   Traceback (most recent call last):
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.Np3X0NVCM9/cupy/cupy/testing/_helper.py", line 47, in _call_func
E       result = impl(self, *args, **kw)
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.Np3X0NVCM9/cupy/tests/cupyx_tests/scipy_tests/ndimage_tests/test_interpolation.py", line 398, in test_affine_transform_texture_memory
E       return m(a, matrix, output_shape=output_shape,
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.Np3X0NVCM9/cupy/cupyx/scipy/ndimage/interpolation.py", line 376, in affine_transform
E       return _texture.affine_transformation(data=input,
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.Np3X0NVCM9/cupy/cupyx/_texture.py", line 168, in affine_transformation
E       texture_object = _create_texture_object(data,
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.Np3X0NVCM9/cupy/cupyx/_texture.py", line 98, in _create_texture_object
E       array = texture.CUDAarray(texture_fmt, *data.shape[::-1])
E     File "cupy/cuda/texture.pyx", line 296, in cupy.cuda.texture.CUDAarray.__init__
E       self.ptr = runtime.malloc3DArray(desc.ptr, width, height, depth,
E     File "cupy_backends/cuda/api/runtime.pyx", line 593, in cupy_backends.cuda.api.runtime.malloc3DArray
E       check_status(status)
E     File "cupy_backends/cuda/api/runtime.pyx", line 265, in cupy_backends.cuda.api.runtime.check_status
E       raise CUDARuntimeError(status)
E   cupy_backends.cuda.api.runtime.CUDARuntimeError: hipErrorUnknown: hipErrorUnknown

cupy_backends/cuda/api/runtime.pyx:265: AssertionError
----------------------------- Captured stderr call -----------------------------
Traceback (most recent call last):
  File "cupy_backends/cuda/api/runtime.pyx", line 644, in cupy_backends.cuda.api.runtime.freeArray
    check_status(status)
  File "cupy_backends/cuda/api/runtime.pyx", line 265, in cupy_backends.cuda.api.runtime.check_status
    raise CUDARuntimeError(status)
cupy_backends.cuda.api.runtime.CUDARuntimeError: hipErrorUnknown: hipErrorUnknown
_ TestAffineTransformTextureMemory.test_affine_transform_texture_memory[_param_143_{mode='constant', order=1, output=float32, output_shape=None, shape=(10, 20, 30), theta=270}] _

self = <<cupyx_tests.scipy_tests.ndimage_tests.test_interpolation.TestAffineTransformTextureMemory object at 0x7fd7059d4640> ... 'constant', 'order': 1, 'output': <class 'numpy.float32'>, 'output_shape': None, 'shape': (10, 20, 30), 'theta': 270}>
xp = <module 'cupy' from '/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.Np3X0NVCM9/cupy/cupy/__init__.py'>
scp = <module 'cupyx.scipy' from '/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.Np3X0NVCM9/cupy/cupyx/scipy/__init__.py'>

    @testing.numpy_cupy_allclose(atol=0.1, scipy_name='scp')
    def test_affine_transform_texture_memory(self, xp, scp):
        a = xp.ones(self.shape, dtype=xp.float32)
        center = numpy.divide(numpy.subtract(self.shape, 1), 2)
    
        if len(self.shape) == 2:
            matrix = self._2d_rotation_matrix(self.theta, center)
        elif len(self.shape) == 3:
            matrix = self._3d_rotation_matrix(self.theta, center)
        else:
            return pytest.xfail('Unsupported shape')
    
        if self.output == 'empty':
            output = xp.empty(self.shape, dtype=xp.float32)
            if self.output_shape:
                return pytest.skip('This combination is tested in '
                                   'test_invalid_texture_arguments')
        else:
            output = self.output
    
        if self.output_shape:
            output_shape = (self.output_shape, ) * len(self.shape)
        else:
            output_shape = self.output_shape
    
        if xp == cupy:
            m = cupyx.scipy.ndimage.affine_transform
            matrix = cupy.array(matrix)
>           return m(a, matrix, output_shape=output_shape,
                     output=output, order=self.order,
                     mode=self.mode, texture_memory=True)

tests/cupyx_tests/scipy_tests/ndimage_tests/test_interpolation.py:398: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
cupyx/scipy/ndimage/interpolation.py:376: in affine_transform
    return _texture.affine_transformation(data=input,
cupyx/_texture.py:168: in affine_transformation
    texture_object = _create_texture_object(data,
cupyx/_texture.py:98: in _create_texture_object
    array = texture.CUDAarray(texture_fmt, *data.shape[::-1])
cupy/cuda/texture.pyx:296: in cupy.cuda.texture.CUDAarray.__init__
    self.ptr = runtime.malloc3DArray(desc.ptr, width, height, depth,
cupy_backends/cuda/api/runtime.pyx:593: in cupy_backends.cuda.api.runtime.malloc3DArray
    check_status(status)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

>   raise CUDARuntimeError(status)
E   AssertionError: Only cupy raises error
E   
E   Traceback (most recent call last):
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.Np3X0NVCM9/cupy/cupy/testing/_helper.py", line 47, in _call_func
E       result = impl(self, *args, **kw)
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.Np3X0NVCM9/cupy/tests/cupyx_tests/scipy_tests/ndimage_tests/test_interpolation.py", line 398, in test_affine_transform_texture_memory
E       return m(a, matrix, output_shape=output_shape,
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.Np3X0NVCM9/cupy/cupyx/scipy/ndimage/interpolation.py", line 376, in affine_transform
E       return _texture.affine_transformation(data=input,
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.Np3X0NVCM9/cupy/cupyx/_texture.py", line 168, in affine_transformation
E       texture_object = _create_texture_object(data,
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.Np3X0NVCM9/cupy/cupyx/_texture.py", line 98, in _create_texture_object
E       array = texture.CUDAarray(texture_fmt, *data.shape[::-1])
E     File "cupy/cuda/texture.pyx", line 296, in cupy.cuda.texture.CUDAarray.__init__
E       self.ptr = runtime.malloc3DArray(desc.ptr, width, height, depth,
E     File "cupy_backends/cuda/api/runtime.pyx", line 593, in cupy_backends.cuda.api.runtime.malloc3DArray
E       check_status(status)
E     File "cupy_backends/cuda/api/runtime.pyx", line 265, in cupy_backends.cuda.api.runtime.check_status
E       raise CUDARuntimeError(status)
E   cupy_backends.cuda.api.runtime.CUDARuntimeError: hipErrorUnknown: hipErrorUnknown

cupy_backends/cuda/api/runtime.pyx:265: AssertionError
----------------------------- Captured stderr call -----------------------------
Traceback (most recent call last):
  File "cupy_backends/cuda/api/runtime.pyx", line 644, in cupy_backends.cuda.api.runtime.freeArray
    check_status(status)
  File "cupy_backends/cuda/api/runtime.pyx", line 265, in cupy_backends.cuda.api.runtime.check_status
    raise CUDARuntimeError(status)
cupy_backends.cuda.api.runtime.CUDARuntimeError: hipErrorUnknown: hipErrorUnknown
_ TestAffineTransformTextureMemory.test_affine_transform_texture_memory[_param_144_{mode='constant', order=1, output=float32, output_shape=10, shape=(100, 100), theta=0}] _

self = <<cupyx_tests.scipy_tests.ndimage_tests.test_interpolation.TestAffineTransformTextureMemory object at 0x7fd705569640> ...mode': 'constant', 'order': 1, 'output': <class 'numpy.float32'>, 'output_shape': 10, 'shape': (100, 100), 'theta': 0}>
xp = <module 'cupy' from '/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.Np3X0NVCM9/cupy/cupy/__init__.py'>
scp = <module 'cupyx.scipy' from '/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.Np3X0NVCM9/cupy/cupyx/scipy/__init__.py'>

    @testing.numpy_cupy_allclose(atol=0.1, scipy_name='scp')
    def test_affine_transform_texture_memory(self, xp, scp):
        a = xp.ones(self.shape, dtype=xp.float32)
        center = numpy.divide(numpy.subtract(self.shape, 1), 2)
    
        if len(self.shape) == 2:
            matrix = self._2d_rotation_matrix(self.theta, center)
        elif len(self.shape) == 3:
            matrix = self._3d_rotation_matrix(self.theta, center)
        else:
            return pytest.xfail('Unsupported shape')
    
        if self.output == 'empty':
            output = xp.empty(self.shape, dtype=xp.float32)
            if self.output_shape:
                return pytest.skip('This combination is tested in '
                                   'test_invalid_texture_arguments')
        else:
            output = self.output
    
        if self.output_shape:
            output_shape = (self.output_shape, ) * len(self.shape)
        else:
            output_shape = self.output_shape
    
        if xp == cupy:
            m = cupyx.scipy.ndimage.affine_transform
            matrix = cupy.array(matrix)
>           return m(a, matrix, output_shape=output_shape,
                     output=output, order=self.order,
                     mode=self.mode, texture_memory=True)

tests/cupyx_tests/scipy_tests/ndimage_tests/test_interpolation.py:398: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
cupyx/scipy/ndimage/interpolation.py:376: in affine_transform
    return _texture.affine_transformation(data=input,
cupyx/_texture.py:168: in affine_transformation
    texture_object = _create_texture_object(data,
cupyx/_texture.py:98: in _create_texture_object
    array = texture.CUDAarray(texture_fmt, *data.shape[::-1])
cupy/cuda/texture.pyx:296: in cupy.cuda.texture.CUDAarray.__init__
    self.ptr = runtime.malloc3DArray(desc.ptr, width, height, depth,
cupy_backends/cuda/api/runtime.pyx:593: in cupy_backends.cuda.api.runtime.malloc3DArray
    check_status(status)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

>   raise CUDARuntimeError(status)
E   AssertionError: Only cupy raises error
E   
E   Traceback (most recent call last):
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.Np3X0NVCM9/cupy/cupy/testing/_helper.py", line 47, in _call_func
E       result = impl(self, *args, **kw)
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.Np3X0NVCM9/cupy/tests/cupyx_tests/scipy_tests/ndimage_tests/test_interpolation.py", line 398, in test_affine_transform_texture_memory
E       return m(a, matrix, output_shape=output_shape,
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.Np3X0NVCM9/cupy/cupyx/scipy/ndimage/interpolation.py", line 376, in affine_transform
E       return _texture.affine_transformation(data=input,
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.Np3X0NVCM9/cupy/cupyx/_texture.py", line 168, in affine_transformation
E       texture_object = _create_texture_object(data,
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.Np3X0NVCM9/cupy/cupyx/_texture.py", line 98, in _create_texture_object
E       array = texture.CUDAarray(texture_fmt, *data.shape[::-1])
E     File "cupy/cuda/texture.pyx", line 296, in cupy.cuda.texture.CUDAarray.__init__
E       self.ptr = runtime.malloc3DArray(desc.ptr, width, height, depth,
E     File "cupy_backends/cuda/api/runtime.pyx", line 593, in cupy_backends.cuda.api.runtime.malloc3DArray
E       check_status(status)
E     File "cupy_backends/cuda/api/runtime.pyx", line 265, in cupy_backends.cuda.api.runtime.check_status
E       raise CUDARuntimeError(status)
E   cupy_backends.cuda.api.runtime.CUDARuntimeError: hipErrorUnknown: hipErrorUnknown

cupy_backends/cuda/api/runtime.pyx:265: AssertionError
----------------------------- Captured stderr call -----------------------------
Traceback (most recent call last):
  File "cupy_backends/cuda/api/runtime.pyx", line 644, in cupy_backends.cuda.api.runtime.freeArray
    check_status(status)
  File "cupy_backends/cuda/api/runtime.pyx", line 265, in cupy_backends.cuda.api.runtime.check_status
    raise CUDARuntimeError(status)
cupy_backends.cuda.api.runtime.CUDARuntimeError: hipErrorUnknown: hipErrorUnknown
_ TestAffineTransformTextureMemory.test_affine_transform_texture_memory[_param_145_{mode='constant', order=1, output=float32, output_shape=10, shape=(100, 100), theta=90}] _

self = <<cupyx_tests.scipy_tests.ndimage_tests.test_interpolation.TestAffineTransformTextureMemory object at 0x7fd705847cd0> ...ode': 'constant', 'order': 1, 'output': <class 'numpy.float32'>, 'output_shape': 10, 'shape': (100, 100), 'theta': 90}>
xp = <module 'cupy' from '/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.Np3X0NVCM9/cupy/cupy/__init__.py'>
scp = <module 'cupyx.scipy' from '/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.Np3X0NVCM9/cupy/cupyx/scipy/__init__.py'>

    @testing.numpy_cupy_allclose(atol=0.1, scipy_name='scp')
    def test_affine_transform_texture_memory(self, xp, scp):
        a = xp.ones(self.shape, dtype=xp.float32)
        center = numpy.divide(numpy.subtract(self.shape, 1), 2)
    
        if len(self.shape) == 2:
            matrix = self._2d_rotation_matrix(self.theta, center)
        elif len(self.shape) == 3:
            matrix = self._3d_rotation_matrix(self.theta, center)
        else:
            return pytest.xfail('Unsupported shape')
    
        if self.output == 'empty':
            output = xp.empty(self.shape, dtype=xp.float32)
            if self.output_shape:
                return pytest.skip('This combination is tested in '
                                   'test_invalid_texture_arguments')
        else:
            output = self.output
    
        if self.output_shape:
            output_shape = (self.output_shape, ) * len(self.shape)
        else:
            output_shape = self.output_shape
    
        if xp == cupy:
            m = cupyx.scipy.ndimage.affine_transform
            matrix = cupy.array(matrix)
>           return m(a, matrix, output_shape=output_shape,
                     output=output, order=self.order,
                     mode=self.mode, texture_memory=True)

tests/cupyx_tests/scipy_tests/ndimage_tests/test_interpolation.py:398: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
cupyx/scipy/ndimage/interpolation.py:376: in affine_transform
    return _texture.affine_transformation(data=input,
cupyx/_texture.py:168: in affine_transformation
    texture_object = _create_texture_object(data,
cupyx/_texture.py:98: in _create_texture_object
    array = texture.CUDAarray(texture_fmt, *data.shape[::-1])
cupy/cuda/texture.pyx:296: in cupy.cuda.texture.CUDAarray.__init__
    self.ptr = runtime.malloc3DArray(desc.ptr, width, height, depth,
cupy_backends/cuda/api/runtime.pyx:593: in cupy_backends.cuda.api.runtime.malloc3DArray
    check_status(status)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

>   raise CUDARuntimeError(status)
E   AssertionError: Only cupy raises error
E   
E   Traceback (most recent call last):
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.Np3X0NVCM9/cupy/cupy/testing/_helper.py", line 47, in _call_func
E       result = impl(self, *args, **kw)
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.Np3X0NVCM9/cupy/tests/cupyx_tests/scipy_tests/ndimage_tests/test_interpolation.py", line 398, in test_affine_transform_texture_memory
E       return m(a, matrix, output_shape=output_shape,
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.Np3X0NVCM9/cupy/cupyx/scipy/ndimage/interpolation.py", line 376, in affine_transform
E       return _texture.affine_transformation(data=input,
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.Np3X0NVCM9/cupy/cupyx/_texture.py", line 168, in affine_transformation
E       texture_object = _create_texture_object(data,
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.Np3X0NVCM9/cupy/cupyx/_texture.py", line 98, in _create_texture_object
E       array = texture.CUDAarray(texture_fmt, *data.shape[::-1])
E     File "cupy/cuda/texture.pyx", line 296, in cupy.cuda.texture.CUDAarray.__init__
E       self.ptr = runtime.malloc3DArray(desc.ptr, width, height, depth,
E     File "cupy_backends/cuda/api/runtime.pyx", line 593, in cupy_backends.cuda.api.runtime.malloc3DArray
E       check_status(status)
E     File "cupy_backends/cuda/api/runtime.pyx", line 265, in cupy_backends.cuda.api.runtime.check_status
E       raise CUDARuntimeError(status)
E   cupy_backends.cuda.api.runtime.CUDARuntimeError: hipErrorUnknown: hipErrorUnknown

cupy_backends/cuda/api/runtime.pyx:265: AssertionError
----------------------------- Captured stderr call -----------------------------
Traceback (most recent call last):
  File "cupy_backends/cuda/api/runtime.pyx", line 644, in cupy_backends.cuda.api.runtime.freeArray
    check_status(status)
  File "cupy_backends/cuda/api/runtime.pyx", line 265, in cupy_backends.cuda.api.runtime.check_status
    raise CUDARuntimeError(status)
cupy_backends.cuda.api.runtime.CUDARuntimeError: hipErrorUnknown: hipErrorUnknown
_ TestAffineTransformTextureMemory.test_affine_transform_texture_memory[_param_146_{mode='constant', order=1, output=float32, output_shape=10, shape=(100, 100), theta=180}] _

self = <<cupyx_tests.scipy_tests.ndimage_tests.test_interpolation.TestAffineTransformTextureMemory object at 0x7fd705ad81c0> ...de': 'constant', 'order': 1, 'output': <class 'numpy.float32'>, 'output_shape': 10, 'shape': (100, 100), 'theta': 180}>
xp = <module 'cupy' from '/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.Np3X0NVCM9/cupy/cupy/__init__.py'>
scp = <module 'cupyx.scipy' from '/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.Np3X0NVCM9/cupy/cupyx/scipy/__init__.py'>

    @testing.numpy_cupy_allclose(atol=0.1, scipy_name='scp')
    def test_affine_transform_texture_memory(self, xp, scp):
        a = xp.ones(self.shape, dtype=xp.float32)
        center = numpy.divide(numpy.subtract(self.shape, 1), 2)
    
        if len(self.shape) == 2:
            matrix = self._2d_rotation_matrix(self.theta, center)
        elif len(self.shape) == 3:
            matrix = self._3d_rotation_matrix(self.theta, center)
        else:
            return pytest.xfail('Unsupported shape')
    
        if self.output == 'empty':
            output = xp.empty(self.shape, dtype=xp.float32)
            if self.output_shape:
                return pytest.skip('This combination is tested in '
                                   'test_invalid_texture_arguments')
        else:
            output = self.output
    
        if self.output_shape:
            output_shape = (self.output_shape, ) * len(self.shape)
        else:
            output_shape = self.output_shape
    
        if xp == cupy:
            m = cupyx.scipy.ndimage.affine_transform
            matrix = cupy.array(matrix)
>           return m(a, matrix, output_shape=output_shape,
                     output=output, order=self.order,
                     mode=self.mode, texture_memory=True)

tests/cupyx_tests/scipy_tests/ndimage_tests/test_interpolation.py:398: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
cupyx/scipy/ndimage/interpolation.py:376: in affine_transform
    return _texture.affine_transformation(data=input,
cupyx/_texture.py:168: in affine_transformation
    texture_object = _create_texture_object(data,
cupyx/_texture.py:98: in _create_texture_object
    array = texture.CUDAarray(texture_fmt, *data.shape[::-1])
cupy/cuda/texture.pyx:296: in cupy.cuda.texture.CUDAarray.__init__
    self.ptr = runtime.malloc3DArray(desc.ptr, width, height, depth,
cupy_backends/cuda/api/runtime.pyx:593: in cupy_backends.cuda.api.runtime.malloc3DArray
    check_status(status)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

>   raise CUDARuntimeError(status)
E   AssertionError: Only cupy raises error
E   
E   Traceback (most recent call last):
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.Np3X0NVCM9/cupy/cupy/testing/_helper.py", line 47, in _call_func
E       result = impl(self, *args, **kw)
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.Np3X0NVCM9/cupy/tests/cupyx_tests/scipy_tests/ndimage_tests/test_interpolation.py", line 398, in test_affine_transform_texture_memory
E       return m(a, matrix, output_shape=output_shape,
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.Np3X0NVCM9/cupy/cupyx/scipy/ndimage/interpolation.py", line 376, in affine_transform
E       return _texture.affine_transformation(data=input,
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.Np3X0NVCM9/cupy/cupyx/_texture.py", line 168, in affine_transformation
E       texture_object = _create_texture_object(data,
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.Np3X0NVCM9/cupy/cupyx/_texture.py", line 98, in _create_texture_object
E       array = texture.CUDAarray(texture_fmt, *data.shape[::-1])
E     File "cupy/cuda/texture.pyx", line 296, in cupy.cuda.texture.CUDAarray.__init__
E       self.ptr = runtime.malloc3DArray(desc.ptr, width, height, depth,
E     File "cupy_backends/cuda/api/runtime.pyx", line 593, in cupy_backends.cuda.api.runtime.malloc3DArray
E       check_status(status)
E     File "cupy_backends/cuda/api/runtime.pyx", line 265, in cupy_backends.cuda.api.runtime.check_status
E       raise CUDARuntimeError(status)
E   cupy_backends.cuda.api.runtime.CUDARuntimeError: hipErrorUnknown: hipErrorUnknown

cupy_backends/cuda/api/runtime.pyx:265: AssertionError
----------------------------- Captured stderr call -----------------------------
Traceback (most recent call last):
  File "cupy_backends/cuda/api/runtime.pyx", line 644, in cupy_backends.cuda.api.runtime.freeArray
    check_status(status)
  File "cupy_backends/cuda/api/runtime.pyx", line 265, in cupy_backends.cuda.api.runtime.check_status
    raise CUDARuntimeError(status)
cupy_backends.cuda.api.runtime.CUDARuntimeError: hipErrorUnknown: hipErrorUnknown
_ TestAffineTransformTextureMemory.test_affine_transform_texture_memory[_param_147_{mode='constant', order=1, output=float32, output_shape=10, shape=(100, 100), theta=270}] _

self = <<cupyx_tests.scipy_tests.ndimage_tests.test_interpolation.TestAffineTransformTextureMemory object at 0x7fd705806070> ...de': 'constant', 'order': 1, 'output': <class 'numpy.float32'>, 'output_shape': 10, 'shape': (100, 100), 'theta': 270}>
xp = <module 'cupy' from '/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.Np3X0NVCM9/cupy/cupy/__init__.py'>
scp = <module 'cupyx.scipy' from '/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.Np3X0NVCM9/cupy/cupyx/scipy/__init__.py'>

    @testing.numpy_cupy_allclose(atol=0.1, scipy_name='scp')
    def test_affine_transform_texture_memory(self, xp, scp):
        a = xp.ones(self.shape, dtype=xp.float32)
        center = numpy.divide(numpy.subtract(self.shape, 1), 2)
    
        if len(self.shape) == 2:
            matrix = self._2d_rotation_matrix(self.theta, center)
        elif len(self.shape) == 3:
            matrix = self._3d_rotation_matrix(self.theta, center)
        else:
            return pytest.xfail('Unsupported shape')
    
        if self.output == 'empty':
            output = xp.empty(self.shape, dtype=xp.float32)
            if self.output_shape:
                return pytest.skip('This combination is tested in '
                                   'test_invalid_texture_arguments')
        else:
            output = self.output
    
        if self.output_shape:
            output_shape = (self.output_shape, ) * len(self.shape)
        else:
            output_shape = self.output_shape
    
        if xp == cupy:
            m = cupyx.scipy.ndimage.affine_transform
            matrix = cupy.array(matrix)
>           return m(a, matrix, output_shape=output_shape,
                     output=output, order=self.order,
                     mode=self.mode, texture_memory=True)

tests/cupyx_tests/scipy_tests/ndimage_tests/test_interpolation.py:398: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
cupyx/scipy/ndimage/interpolation.py:376: in affine_transform
    return _texture.affine_transformation(data=input,
cupyx/_texture.py:168: in affine_transformation
    texture_object = _create_texture_object(data,
cupyx/_texture.py:98: in _create_texture_object
    array = texture.CUDAarray(texture_fmt, *data.shape[::-1])
cupy/cuda/texture.pyx:296: in cupy.cuda.texture.CUDAarray.__init__
    self.ptr = runtime.malloc3DArray(desc.ptr, width, height, depth,
cupy_backends/cuda/api/runtime.pyx:593: in cupy_backends.cuda.api.runtime.malloc3DArray
    check_status(status)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

>   raise CUDARuntimeError(status)
E   AssertionError: Only cupy raises error
E   
E   Traceback (most recent call last):
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.Np3X0NVCM9/cupy/cupy/testing/_helper.py", line 47, in _call_func
E       result = impl(self, *args, **kw)
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.Np3X0NVCM9/cupy/tests/cupyx_tests/scipy_tests/ndimage_tests/test_interpolation.py", line 398, in test_affine_transform_texture_memory
E       return m(a, matrix, output_shape=output_shape,
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.Np3X0NVCM9/cupy/cupyx/scipy/ndimage/interpolation.py", line 376, in affine_transform
E       return _texture.affine_transformation(data=input,
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.Np3X0NVCM9/cupy/cupyx/_texture.py", line 168, in affine_transformation
E       texture_object = _create_texture_object(data,
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.Np3X0NVCM9/cupy/cupyx/_texture.py", line 98, in _create_texture_object
E       array = texture.CUDAarray(texture_fmt, *data.shape[::-1])
E     File "cupy/cuda/texture.pyx", line 296, in cupy.cuda.texture.CUDAarray.__init__
E       self.ptr = runtime.malloc3DArray(desc.ptr, width, height, depth,
E     File "cupy_backends/cuda/api/runtime.pyx", line 593, in cupy_backends.cuda.api.runtime.malloc3DArray
E       check_status(status)
E     File "cupy_backends/cuda/api/runtime.pyx", line 265, in cupy_backends.cuda.api.runtime.check_status
E       raise CUDARuntimeError(status)
E   cupy_backends.cuda.api.runtime.CUDARuntimeError: hipErrorUnknown: hipErrorUnknown

cupy_backends/cuda/api/runtime.pyx:265: AssertionError
----------------------------- Captured stderr call -----------------------------
Traceback (most recent call last):
  File "cupy_backends/cuda/api/runtime.pyx", line 644, in cupy_backends.cuda.api.runtime.freeArray
    check_status(status)
  File "cupy_backends/cuda/api/runtime.pyx", line 265, in cupy_backends.cuda.api.runtime.check_status
    raise CUDARuntimeError(status)
cupy_backends.cuda.api.runtime.CUDARuntimeError: hipErrorUnknown: hipErrorUnknown
_ TestAffineTransformTextureMemory.test_affine_transform_texture_memory[_param_148_{mode='constant', order=1, output=float32, output_shape=10, shape=(10, 20), theta=0}] _

self = <<cupyx_tests.scipy_tests.ndimage_tests.test_interpolation.TestAffineTransformTextureMemory object at 0x7fd705879160> ...{'mode': 'constant', 'order': 1, 'output': <class 'numpy.float32'>, 'output_shape': 10, 'shape': (10, 20), 'theta': 0}>
xp = <module 'cupy' from '/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.Np3X0NVCM9/cupy/cupy/__init__.py'>
scp = <module 'cupyx.scipy' from '/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.Np3X0NVCM9/cupy/cupyx/scipy/__init__.py'>

    @testing.numpy_cupy_allclose(atol=0.1, scipy_name='scp')
    def test_affine_transform_texture_memory(self, xp, scp):
        a = xp.ones(self.shape, dtype=xp.float32)
        center = numpy.divide(numpy.subtract(self.shape, 1), 2)
    
        if len(self.shape) == 2:
            matrix = self._2d_rotation_matrix(self.theta, center)
        elif len(self.shape) == 3:
            matrix = self._3d_rotation_matrix(self.theta, center)
        else:
            return pytest.xfail('Unsupported shape')
    
        if self.output == 'empty':
            output = xp.empty(self.shape, dtype=xp.float32)
            if self.output_shape:
                return pytest.skip('This combination is tested in '
                                   'test_invalid_texture_arguments')
        else:
            output = self.output
    
        if self.output_shape:
            output_shape = (self.output_shape, ) * len(self.shape)
        else:
            output_shape = self.output_shape
    
        if xp == cupy:
            m = cupyx.scipy.ndimage.affine_transform
            matrix = cupy.array(matrix)
>           return m(a, matrix, output_shape=output_shape,
                     output=output, order=self.order,
                     mode=self.mode, texture_memory=True)

tests/cupyx_tests/scipy_tests/ndimage_tests/test_interpolation.py:398: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
cupyx/scipy/ndimage/interpolation.py:376: in affine_transform
    return _texture.affine_transformation(data=input,
cupyx/_texture.py:168: in affine_transformation
    texture_object = _create_texture_object(data,
cupyx/_texture.py:98: in _create_texture_object
    array = texture.CUDAarray(texture_fmt, *data.shape[::-1])
cupy/cuda/texture.pyx:296: in cupy.cuda.texture.CUDAarray.__init__
    self.ptr = runtime.malloc3DArray(desc.ptr, width, height, depth,
cupy_backends/cuda/api/runtime.pyx:593: in cupy_backends.cuda.api.runtime.malloc3DArray
    check_status(status)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

>   raise CUDARuntimeError(status)
E   AssertionError: Only cupy raises error
E   
E   Traceback (most recent call last):
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.Np3X0NVCM9/cupy/cupy/testing/_helper.py", line 47, in _call_func
E       result = impl(self, *args, **kw)
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.Np3X0NVCM9/cupy/tests/cupyx_tests/scipy_tests/ndimage_tests/test_interpolation.py", line 398, in test_affine_transform_texture_memory
E       return m(a, matrix, output_shape=output_shape,
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.Np3X0NVCM9/cupy/cupyx/scipy/ndimage/interpolation.py", line 376, in affine_transform
E       return _texture.affine_transformation(data=input,
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.Np3X0NVCM9/cupy/cupyx/_texture.py", line 168, in affine_transformation
E       texture_object = _create_texture_object(data,
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.Np3X0NVCM9/cupy/cupyx/_texture.py", line 98, in _create_texture_object
E       array = texture.CUDAarray(texture_fmt, *data.shape[::-1])
E     File "cupy/cuda/texture.pyx", line 296, in cupy.cuda.texture.CUDAarray.__init__
E       self.ptr = runtime.malloc3DArray(desc.ptr, width, height, depth,
E     File "cupy_backends/cuda/api/runtime.pyx", line 593, in cupy_backends.cuda.api.runtime.malloc3DArray
E       check_status(status)
E     File "cupy_backends/cuda/api/runtime.pyx", line 265, in cupy_backends.cuda.api.runtime.check_status
E       raise CUDARuntimeError(status)
E   cupy_backends.cuda.api.runtime.CUDARuntimeError: hipErrorUnknown: hipErrorUnknown

cupy_backends/cuda/api/runtime.pyx:265: AssertionError
----------------------------- Captured stderr call -----------------------------
Traceback (most recent call last):
  File "cupy_backends/cuda/api/runtime.pyx", line 644, in cupy_backends.cuda.api.runtime.freeArray
    check_status(status)
  File "cupy_backends/cuda/api/runtime.pyx", line 265, in cupy_backends.cuda.api.runtime.check_status
    raise CUDARuntimeError(status)
cupy_backends.cuda.api.runtime.CUDARuntimeError: hipErrorUnknown: hipErrorUnknown
_ TestAffineTransformTextureMemory.test_affine_transform_texture_memory[_param_149_{mode='constant', order=1, output=float32, output_shape=10, shape=(10, 20), theta=90}] _

self = <<cupyx_tests.scipy_tests.ndimage_tests.test_interpolation.TestAffineTransformTextureMemory object at 0x7fd705b28f10> ...'mode': 'constant', 'order': 1, 'output': <class 'numpy.float32'>, 'output_shape': 10, 'shape': (10, 20), 'theta': 90}>
xp = <module 'cupy' from '/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.Np3X0NVCM9/cupy/cupy/__init__.py'>
scp = <module 'cupyx.scipy' from '/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.Np3X0NVCM9/cupy/cupyx/scipy/__init__.py'>

    @testing.numpy_cupy_allclose(atol=0.1, scipy_name='scp')
    def test_affine_transform_texture_memory(self, xp, scp):
        a = xp.ones(self.shape, dtype=xp.float32)
        center = numpy.divide(numpy.subtract(self.shape, 1), 2)
    
        if len(self.shape) == 2:
            matrix = self._2d_rotation_matrix(self.theta, center)
        elif len(self.shape) == 3:
            matrix = self._3d_rotation_matrix(self.theta, center)
        else:
            return pytest.xfail('Unsupported shape')
    
        if self.output == 'empty':
            output = xp.empty(self.shape, dtype=xp.float32)
            if self.output_shape:
                return pytest.skip('This combination is tested in '
                                   'test_invalid_texture_arguments')
        else:
            output = self.output
    
        if self.output_shape:
            output_shape = (self.output_shape, ) * len(self.shape)
        else:
            output_shape = self.output_shape
    
        if xp == cupy:
            m = cupyx.scipy.ndimage.affine_transform
            matrix = cupy.array(matrix)
>           return m(a, matrix, output_shape=output_shape,
                     output=output, order=self.order,
                     mode=self.mode, texture_memory=True)

tests/cupyx_tests/scipy_tests/ndimage_tests/test_interpolation.py:398: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
cupyx/scipy/ndimage/interpolation.py:376: in affine_transform
    return _texture.affine_transformation(data=input,
cupyx/_texture.py:168: in affine_transformation
    texture_object = _create_texture_object(data,
cupyx/_texture.py:98: in _create_texture_object
    array = texture.CUDAarray(texture_fmt, *data.shape[::-1])
cupy/cuda/texture.pyx:296: in cupy.cuda.texture.CUDAarray.__init__
    self.ptr = runtime.malloc3DArray(desc.ptr, width, height, depth,
cupy_backends/cuda/api/runtime.pyx:593: in cupy_backends.cuda.api.runtime.malloc3DArray
    check_status(status)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

>   raise CUDARuntimeError(status)
E   AssertionError: Only cupy raises error
E   
E   Traceback (most recent call last):
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.Np3X0NVCM9/cupy/cupy/testing/_helper.py", line 47, in _call_func
E       result = impl(self, *args, **kw)
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.Np3X0NVCM9/cupy/tests/cupyx_tests/scipy_tests/ndimage_tests/test_interpolation.py", line 398, in test_affine_transform_texture_memory
E       return m(a, matrix, output_shape=output_shape,
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.Np3X0NVCM9/cupy/cupyx/scipy/ndimage/interpolation.py", line 376, in affine_transform
E       return _texture.affine_transformation(data=input,
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.Np3X0NVCM9/cupy/cupyx/_texture.py", line 168, in affine_transformation
E       texture_object = _create_texture_object(data,
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.Np3X0NVCM9/cupy/cupyx/_texture.py", line 98, in _create_texture_object
E       array = texture.CUDAarray(texture_fmt, *data.shape[::-1])
E     File "cupy/cuda/texture.pyx", line 296, in cupy.cuda.texture.CUDAarray.__init__
E       self.ptr = runtime.malloc3DArray(desc.ptr, width, height, depth,
E     File "cupy_backends/cuda/api/runtime.pyx", line 593, in cupy_backends.cuda.api.runtime.malloc3DArray
E       check_status(status)
E     File "cupy_backends/cuda/api/runtime.pyx", line 265, in cupy_backends.cuda.api.runtime.check_status
E       raise CUDARuntimeError(status)
E   cupy_backends.cuda.api.runtime.CUDARuntimeError: hipErrorUnknown: hipErrorUnknown

cupy_backends/cuda/api/runtime.pyx:265: AssertionError
----------------------------- Captured stderr call -----------------------------
Traceback (most recent call last):
  File "cupy_backends/cuda/api/runtime.pyx", line 644, in cupy_backends.cuda.api.runtime.freeArray
    check_status(status)
  File "cupy_backends/cuda/api/runtime.pyx", line 265, in cupy_backends.cuda.api.runtime.check_status
    raise CUDARuntimeError(status)
cupy_backends.cuda.api.runtime.CUDARuntimeError: hipErrorUnknown: hipErrorUnknown
_ TestAffineTransformTextureMemory.test_affine_transform_texture_memory[_param_150_{mode='constant', order=1, output=float32, output_shape=10, shape=(10, 20), theta=180}] _

self = <<cupyx_tests.scipy_tests.ndimage_tests.test_interpolation.TestAffineTransformTextureMemory object at 0x7fd705e4d550> ...mode': 'constant', 'order': 1, 'output': <class 'numpy.float32'>, 'output_shape': 10, 'shape': (10, 20), 'theta': 180}>
xp = <module 'cupy' from '/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.Np3X0NVCM9/cupy/cupy/__init__.py'>
scp = <module 'cupyx.scipy' from '/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.Np3X0NVCM9/cupy/cupyx/scipy/__init__.py'>

    @testing.numpy_cupy_allclose(atol=0.1, scipy_name='scp')
    def test_affine_transform_texture_memory(self, xp, scp):
        a = xp.ones(self.shape, dtype=xp.float32)
        center = numpy.divide(numpy.subtract(self.shape, 1), 2)
    
        if len(self.shape) == 2:
            matrix = self._2d_rotation_matrix(self.theta, center)
        elif len(self.shape) == 3:
            matrix = self._3d_rotation_matrix(self.theta, center)
        else:
            return pytest.xfail('Unsupported shape')
    
        if self.output == 'empty':
            output = xp.empty(self.shape, dtype=xp.float32)
            if self.output_shape:
                return pytest.skip('This combination is tested in '
                                   'test_invalid_texture_arguments')
        else:
            output = self.output
    
        if self.output_shape:
            output_shape = (self.output_shape, ) * len(self.shape)
        else:
            output_shape = self.output_shape
    
        if xp == cupy:
            m = cupyx.scipy.ndimage.affine_transform
            matrix = cupy.array(matrix)
>           return m(a, matrix, output_shape=output_shape,
                     output=output, order=self.order,
                     mode=self.mode, texture_memory=True)

tests/cupyx_tests/scipy_tests/ndimage_tests/test_interpolation.py:398: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
cupyx/scipy/ndimage/interpolation.py:376: in affine_transform
    return _texture.affine_transformation(data=input,
cupyx/_texture.py:168: in affine_transformation
    texture_object = _create_texture_object(data,
cupyx/_texture.py:98: in _create_texture_object
    array = texture.CUDAarray(texture_fmt, *data.shape[::-1])
cupy/cuda/texture.pyx:296: in cupy.cuda.texture.CUDAarray.__init__
    self.ptr = runtime.malloc3DArray(desc.ptr, width, height, depth,
cupy_backends/cuda/api/runtime.pyx:593: in cupy_backends.cuda.api.runtime.malloc3DArray
    check_status(status)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

>   raise CUDARuntimeError(status)
E   AssertionError: Only cupy raises error
E   
E   Traceback (most recent call last):
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.Np3X0NVCM9/cupy/cupy/testing/_helper.py", line 47, in _call_func
E       result = impl(self, *args, **kw)
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.Np3X0NVCM9/cupy/tests/cupyx_tests/scipy_tests/ndimage_tests/test_interpolation.py", line 398, in test_affine_transform_texture_memory
E       return m(a, matrix, output_shape=output_shape,
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.Np3X0NVCM9/cupy/cupyx/scipy/ndimage/interpolation.py", line 376, in affine_transform
E       return _texture.affine_transformation(data=input,
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.Np3X0NVCM9/cupy/cupyx/_texture.py", line 168, in affine_transformation
E       texture_object = _create_texture_object(data,
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.Np3X0NVCM9/cupy/cupyx/_texture.py", line 98, in _create_texture_object
E       array = texture.CUDAarray(texture_fmt, *data.shape[::-1])
E     File "cupy/cuda/texture.pyx", line 296, in cupy.cuda.texture.CUDAarray.__init__
E       self.ptr = runtime.malloc3DArray(desc.ptr, width, height, depth,
E     File "cupy_backends/cuda/api/runtime.pyx", line 593, in cupy_backends.cuda.api.runtime.malloc3DArray
E       check_status(status)
E     File "cupy_backends/cuda/api/runtime.pyx", line 265, in cupy_backends.cuda.api.runtime.check_status
E       raise CUDARuntimeError(status)
E   cupy_backends.cuda.api.runtime.CUDARuntimeError: hipErrorUnknown: hipErrorUnknown

cupy_backends/cuda/api/runtime.pyx:265: AssertionError
----------------------------- Captured stderr call -----------------------------
Traceback (most recent call last):
  File "cupy_backends/cuda/api/runtime.pyx", line 644, in cupy_backends.cuda.api.runtime.freeArray
    check_status(status)
  File "cupy_backends/cuda/api/runtime.pyx", line 265, in cupy_backends.cuda.api.runtime.check_status
    raise CUDARuntimeError(status)
cupy_backends.cuda.api.runtime.CUDARuntimeError: hipErrorUnknown: hipErrorUnknown
_ TestAffineTransformTextureMemory.test_affine_transform_texture_memory[_param_151_{mode='constant', order=1, output=float32, output_shape=10, shape=(10, 20), theta=270}] _

self = <<cupyx_tests.scipy_tests.ndimage_tests.test_interpolation.TestAffineTransformTextureMemory object at 0x7fd70669d670> ...mode': 'constant', 'order': 1, 'output': <class 'numpy.float32'>, 'output_shape': 10, 'shape': (10, 20), 'theta': 270}>
xp = <module 'cupy' from '/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.Np3X0NVCM9/cupy/cupy/__init__.py'>
scp = <module 'cupyx.scipy' from '/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.Np3X0NVCM9/cupy/cupyx/scipy/__init__.py'>

    @testing.numpy_cupy_allclose(atol=0.1, scipy_name='scp')
    def test_affine_transform_texture_memory(self, xp, scp):
        a = xp.ones(self.shape, dtype=xp.float32)
        center = numpy.divide(numpy.subtract(self.shape, 1), 2)
    
        if len(self.shape) == 2:
            matrix = self._2d_rotation_matrix(self.theta, center)
        elif len(self.shape) == 3:
            matrix = self._3d_rotation_matrix(self.theta, center)
        else:
            return pytest.xfail('Unsupported shape')
    
        if self.output == 'empty':
            output = xp.empty(self.shape, dtype=xp.float32)
            if self.output_shape:
                return pytest.skip('This combination is tested in '
                                   'test_invalid_texture_arguments')
        else:
            output = self.output
    
        if self.output_shape:
            output_shape = (self.output_shape, ) * len(self.shape)
        else:
            output_shape = self.output_shape
    
        if xp == cupy:
            m = cupyx.scipy.ndimage.affine_transform
            matrix = cupy.array(matrix)
>           return m(a, matrix, output_shape=output_shape,
                     output=output, order=self.order,
                     mode=self.mode, texture_memory=True)

tests/cupyx_tests/scipy_tests/ndimage_tests/test_interpolation.py:398: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
cupyx/scipy/ndimage/interpolation.py:376: in affine_transform
    return _texture.affine_transformation(data=input,
cupyx/_texture.py:168: in affine_transformation
    texture_object = _create_texture_object(data,
cupyx/_texture.py:98: in _create_texture_object
    array = texture.CUDAarray(texture_fmt, *data.shape[::-1])
cupy/cuda/texture.pyx:296: in cupy.cuda.texture.CUDAarray.__init__
    self.ptr = runtime.malloc3DArray(desc.ptr, width, height, depth,
cupy_backends/cuda/api/runtime.pyx:593: in cupy_backends.cuda.api.runtime.malloc3DArray
    check_status(status)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

>   raise CUDARuntimeError(status)
E   AssertionError: Only cupy raises error
E   
E   Traceback (most recent call last):
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.Np3X0NVCM9/cupy/cupy/testing/_helper.py", line 47, in _call_func
E       result = impl(self, *args, **kw)
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.Np3X0NVCM9/cupy/tests/cupyx_tests/scipy_tests/ndimage_tests/test_interpolation.py", line 398, in test_affine_transform_texture_memory
E       return m(a, matrix, output_shape=output_shape,
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.Np3X0NVCM9/cupy/cupyx/scipy/ndimage/interpolation.py", line 376, in affine_transform
E       return _texture.affine_transformation(data=input,
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.Np3X0NVCM9/cupy/cupyx/_texture.py", line 168, in affine_transformation
E       texture_object = _create_texture_object(data,
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.Np3X0NVCM9/cupy/cupyx/_texture.py", line 98, in _create_texture_object
E       array = texture.CUDAarray(texture_fmt, *data.shape[::-1])
E     File "cupy/cuda/texture.pyx", line 296, in cupy.cuda.texture.CUDAarray.__init__
E       self.ptr = runtime.malloc3DArray(desc.ptr, width, height, depth,
E     File "cupy_backends/cuda/api/runtime.pyx", line 593, in cupy_backends.cuda.api.runtime.malloc3DArray
E       check_status(status)
E     File "cupy_backends/cuda/api/runtime.pyx", line 265, in cupy_backends.cuda.api.runtime.check_status
E       raise CUDARuntimeError(status)
E   cupy_backends.cuda.api.runtime.CUDARuntimeError: hipErrorUnknown: hipErrorUnknown

cupy_backends/cuda/api/runtime.pyx:265: AssertionError
----------------------------- Captured stderr call -----------------------------
Traceback (most recent call last):
  File "cupy_backends/cuda/api/runtime.pyx", line 644, in cupy_backends.cuda.api.runtime.freeArray
    check_status(status)
  File "cupy_backends/cuda/api/runtime.pyx", line 265, in cupy_backends.cuda.api.runtime.check_status
    raise CUDARuntimeError(status)
cupy_backends.cuda.api.runtime.CUDARuntimeError: hipErrorUnknown: hipErrorUnknown
_ TestAffineTransformTextureMemory.test_affine_transform_texture_memory[_param_152_{mode='constant', order=1, output=float32, output_shape=10, shape=(10, 10, 10), theta=0}] _

self = <<cupyx_tests.scipy_tests.ndimage_tests.test_interpolation.TestAffineTransformTextureMemory object at 0x7fd70580d1c0> ...de': 'constant', 'order': 1, 'output': <class 'numpy.float32'>, 'output_shape': 10, 'shape': (10, 10, 10), 'theta': 0}>
xp = <module 'cupy' from '/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.Np3X0NVCM9/cupy/cupy/__init__.py'>
scp = <module 'cupyx.scipy' from '/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.Np3X0NVCM9/cupy/cupyx/scipy/__init__.py'>

    @testing.numpy_cupy_allclose(atol=0.1, scipy_name='scp')
    def test_affine_transform_texture_memory(self, xp, scp):
        a = xp.ones(self.shape, dtype=xp.float32)
        center = numpy.divide(numpy.subtract(self.shape, 1), 2)
    
        if len(self.shape) == 2:
            matrix = self._2d_rotation_matrix(self.theta, center)
        elif len(self.shape) == 3:
            matrix = self._3d_rotation_matrix(self.theta, center)
        else:
            return pytest.xfail('Unsupported shape')
    
        if self.output == 'empty':
            output = xp.empty(self.shape, dtype=xp.float32)
            if self.output_shape:
                return pytest.skip('This combination is tested in '
                                   'test_invalid_texture_arguments')
        else:
            output = self.output
    
        if self.output_shape:
            output_shape = (self.output_shape, ) * len(self.shape)
        else:
            output_shape = self.output_shape
    
        if xp == cupy:
            m = cupyx.scipy.ndimage.affine_transform
            matrix = cupy.array(matrix)
>           return m(a, matrix, output_shape=output_shape,
                     output=output, order=self.order,
                     mode=self.mode, texture_memory=True)

tests/cupyx_tests/scipy_tests/ndimage_tests/test_interpolation.py:398: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
cupyx/scipy/ndimage/interpolation.py:376: in affine_transform
    return _texture.affine_transformation(data=input,
cupyx/_texture.py:168: in affine_transformation
    texture_object = _create_texture_object(data,
cupyx/_texture.py:98: in _create_texture_object
    array = texture.CUDAarray(texture_fmt, *data.shape[::-1])
cupy/cuda/texture.pyx:296: in cupy.cuda.texture.CUDAarray.__init__
    self.ptr = runtime.malloc3DArray(desc.ptr, width, height, depth,
cupy_backends/cuda/api/runtime.pyx:593: in cupy_backends.cuda.api.runtime.malloc3DArray
    check_status(status)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

>   raise CUDARuntimeError(status)
E   AssertionError: Only cupy raises error
E   
E   Traceback (most recent call last):
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.Np3X0NVCM9/cupy/cupy/testing/_helper.py", line 47, in _call_func
E       result = impl(self, *args, **kw)
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.Np3X0NVCM9/cupy/tests/cupyx_tests/scipy_tests/ndimage_tests/test_interpolation.py", line 398, in test_affine_transform_texture_memory
E       return m(a, matrix, output_shape=output_shape,
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.Np3X0NVCM9/cupy/cupyx/scipy/ndimage/interpolation.py", line 376, in affine_transform
E       return _texture.affine_transformation(data=input,
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.Np3X0NVCM9/cupy/cupyx/_texture.py", line 168, in affine_transformation
E       texture_object = _create_texture_object(data,
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.Np3X0NVCM9/cupy/cupyx/_texture.py", line 98, in _create_texture_object
E       array = texture.CUDAarray(texture_fmt, *data.shape[::-1])
E     File "cupy/cuda/texture.pyx", line 296, in cupy.cuda.texture.CUDAarray.__init__
E       self.ptr = runtime.malloc3DArray(desc.ptr, width, height, depth,
E     File "cupy_backends/cuda/api/runtime.pyx", line 593, in cupy_backends.cuda.api.runtime.malloc3DArray
E       check_status(status)
E     File "cupy_backends/cuda/api/runtime.pyx", line 265, in cupy_backends.cuda.api.runtime.check_status
E       raise CUDARuntimeError(status)
E   cupy_backends.cuda.api.runtime.CUDARuntimeError: hipErrorUnknown: hipErrorUnknown

cupy_backends/cuda/api/runtime.pyx:265: AssertionError
----------------------------- Captured stderr call -----------------------------
Traceback (most recent call last):
  File "cupy_backends/cuda/api/runtime.pyx", line 644, in cupy_backends.cuda.api.runtime.freeArray
    check_status(status)
  File "cupy_backends/cuda/api/runtime.pyx", line 265, in cupy_backends.cuda.api.runtime.check_status
    raise CUDARuntimeError(status)
cupy_backends.cuda.api.runtime.CUDARuntimeError: hipErrorUnknown: hipErrorUnknown
_ TestAffineTransformTextureMemory.test_affine_transform_texture_memory[_param_153_{mode='constant', order=1, output=float32, output_shape=10, shape=(10, 10, 10), theta=90}] _

self = <<cupyx_tests.scipy_tests.ndimage_tests.test_interpolation.TestAffineTransformTextureMemory object at 0x7fd70667f760> ...e': 'constant', 'order': 1, 'output': <class 'numpy.float32'>, 'output_shape': 10, 'shape': (10, 10, 10), 'theta': 90}>
xp = <module 'cupy' from '/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.Np3X0NVCM9/cupy/cupy/__init__.py'>
scp = <module 'cupyx.scipy' from '/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.Np3X0NVCM9/cupy/cupyx/scipy/__init__.py'>

    @testing.numpy_cupy_allclose(atol=0.1, scipy_name='scp')
    def test_affine_transform_texture_memory(self, xp, scp):
        a = xp.ones(self.shape, dtype=xp.float32)
        center = numpy.divide(numpy.subtract(self.shape, 1), 2)
    
        if len(self.shape) == 2:
            matrix = self._2d_rotation_matrix(self.theta, center)
        elif len(self.shape) == 3:
            matrix = self._3d_rotation_matrix(self.theta, center)
        else:
            return pytest.xfail('Unsupported shape')
    
        if self.output == 'empty':
            output = xp.empty(self.shape, dtype=xp.float32)
            if self.output_shape:
                return pytest.skip('This combination is tested in '
                                   'test_invalid_texture_arguments')
        else:
            output = self.output
    
        if self.output_shape:
            output_shape = (self.output_shape, ) * len(self.shape)
        else:
            output_shape = self.output_shape
    
        if xp == cupy:
            m = cupyx.scipy.ndimage.affine_transform
            matrix = cupy.array(matrix)
>           return m(a, matrix, output_shape=output_shape,
                     output=output, order=self.order,
                     mode=self.mode, texture_memory=True)

tests/cupyx_tests/scipy_tests/ndimage_tests/test_interpolation.py:398: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
cupyx/scipy/ndimage/interpolation.py:376: in affine_transform
    return _texture.affine_transformation(data=input,
cupyx/_texture.py:168: in affine_transformation
    texture_object = _create_texture_object(data,
cupyx/_texture.py:98: in _create_texture_object
    array = texture.CUDAarray(texture_fmt, *data.shape[::-1])
cupy/cuda/texture.pyx:296: in cupy.cuda.texture.CUDAarray.__init__
    self.ptr = runtime.malloc3DArray(desc.ptr, width, height, depth,
cupy_backends/cuda/api/runtime.pyx:593: in cupy_backends.cuda.api.runtime.malloc3DArray
    check_status(status)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

>   raise CUDARuntimeError(status)
E   AssertionError: Only cupy raises error
E   
E   Traceback (most recent call last):
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.Np3X0NVCM9/cupy/cupy/testing/_helper.py", line 47, in _call_func
E       result = impl(self, *args, **kw)
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.Np3X0NVCM9/cupy/tests/cupyx_tests/scipy_tests/ndimage_tests/test_interpolation.py", line 398, in test_affine_transform_texture_memory
E       return m(a, matrix, output_shape=output_shape,
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.Np3X0NVCM9/cupy/cupyx/scipy/ndimage/interpolation.py", line 376, in affine_transform
E       return _texture.affine_transformation(data=input,
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.Np3X0NVCM9/cupy/cupyx/_texture.py", line 168, in affine_transformation
E       texture_object = _create_texture_object(data,
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.Np3X0NVCM9/cupy/cupyx/_texture.py", line 98, in _create_texture_object
E       array = texture.CUDAarray(texture_fmt, *data.shape[::-1])
E     File "cupy/cuda/texture.pyx", line 296, in cupy.cuda.texture.CUDAarray.__init__
E       self.ptr = runtime.malloc3DArray(desc.ptr, width, height, depth,
E     File "cupy_backends/cuda/api/runtime.pyx", line 593, in cupy_backends.cuda.api.runtime.malloc3DArray
E       check_status(status)
E     File "cupy_backends/cuda/api/runtime.pyx", line 265, in cupy_backends.cuda.api.runtime.check_status
E       raise CUDARuntimeError(status)
E   cupy_backends.cuda.api.runtime.CUDARuntimeError: hipErrorUnknown: hipErrorUnknown

cupy_backends/cuda/api/runtime.pyx:265: AssertionError
----------------------------- Captured stderr call -----------------------------
Traceback (most recent call last):
  File "cupy_backends/cuda/api/runtime.pyx", line 644, in cupy_backends.cuda.api.runtime.freeArray
    check_status(status)
  File "cupy_backends/cuda/api/runtime.pyx", line 265, in cupy_backends.cuda.api.runtime.check_status
    raise CUDARuntimeError(status)
cupy_backends.cuda.api.runtime.CUDARuntimeError: hipErrorUnknown: hipErrorUnknown
_ TestAffineTransformTextureMemory.test_affine_transform_texture_memory[_param_154_{mode='constant', order=1, output=float32, output_shape=10, shape=(10, 10, 10), theta=180}] _

self = <<cupyx_tests.scipy_tests.ndimage_tests.test_interpolation.TestAffineTransformTextureMemory object at 0x7fd7059d8ee0> ...': 'constant', 'order': 1, 'output': <class 'numpy.float32'>, 'output_shape': 10, 'shape': (10, 10, 10), 'theta': 180}>
xp = <module 'cupy' from '/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.Np3X0NVCM9/cupy/cupy/__init__.py'>
scp = <module 'cupyx.scipy' from '/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.Np3X0NVCM9/cupy/cupyx/scipy/__init__.py'>

    @testing.numpy_cupy_allclose(atol=0.1, scipy_name='scp')
    def test_affine_transform_texture_memory(self, xp, scp):
        a = xp.ones(self.shape, dtype=xp.float32)
        center = numpy.divide(numpy.subtract(self.shape, 1), 2)
    
        if len(self.shape) == 2:
            matrix = self._2d_rotation_matrix(self.theta, center)
        elif len(self.shape) == 3:
            matrix = self._3d_rotation_matrix(self.theta, center)
        else:
            return pytest.xfail('Unsupported shape')
    
        if self.output == 'empty':
            output = xp.empty(self.shape, dtype=xp.float32)
            if self.output_shape:
                return pytest.skip('This combination is tested in '
                                   'test_invalid_texture_arguments')
        else:
            output = self.output
    
        if self.output_shape:
            output_shape = (self.output_shape, ) * len(self.shape)
        else:
            output_shape = self.output_shape
    
        if xp == cupy:
            m = cupyx.scipy.ndimage.affine_transform
            matrix = cupy.array(matrix)
>           return m(a, matrix, output_shape=output_shape,
                     output=output, order=self.order,
                     mode=self.mode, texture_memory=True)

tests/cupyx_tests/scipy_tests/ndimage_tests/test_interpolation.py:398: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
cupyx/scipy/ndimage/interpolation.py:376: in affine_transform
    return _texture.affine_transformation(data=input,
cupyx/_texture.py:168: in affine_transformation
    texture_object = _create_texture_object(data,
cupyx/_texture.py:98: in _create_texture_object
    array = texture.CUDAarray(texture_fmt, *data.shape[::-1])
cupy/cuda/texture.pyx:296: in cupy.cuda.texture.CUDAarray.__init__
    self.ptr = runtime.malloc3DArray(desc.ptr, width, height, depth,
cupy_backends/cuda/api/runtime.pyx:593: in cupy_backends.cuda.api.runtime.malloc3DArray
    check_status(status)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

>   raise CUDARuntimeError(status)
E   AssertionError: Only cupy raises error
E   
E   Traceback (most recent call last):
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.Np3X0NVCM9/cupy/cupy/testing/_helper.py", line 47, in _call_func
E       result = impl(self, *args, **kw)
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.Np3X0NVCM9/cupy/tests/cupyx_tests/scipy_tests/ndimage_tests/test_interpolation.py", line 398, in test_affine_transform_texture_memory
E       return m(a, matrix, output_shape=output_shape,
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.Np3X0NVCM9/cupy/cupyx/scipy/ndimage/interpolation.py", line 376, in affine_transform
E       return _texture.affine_transformation(data=input,
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.Np3X0NVCM9/cupy/cupyx/_texture.py", line 168, in affine_transformation
E       texture_object = _create_texture_object(data,
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.Np3X0NVCM9/cupy/cupyx/_texture.py", line 98, in _create_texture_object
E       array = texture.CUDAarray(texture_fmt, *data.shape[::-1])
E     File "cupy/cuda/texture.pyx", line 296, in cupy.cuda.texture.CUDAarray.__init__
E       self.ptr = runtime.malloc3DArray(desc.ptr, width, height, depth,
E     File "cupy_backends/cuda/api/runtime.pyx", line 593, in cupy_backends.cuda.api.runtime.malloc3DArray
E       check_status(status)
E     File "cupy_backends/cuda/api/runtime.pyx", line 265, in cupy_backends.cuda.api.runtime.check_status
E       raise CUDARuntimeError(status)
E   cupy_backends.cuda.api.runtime.CUDARuntimeError: hipErrorUnknown: hipErrorUnknown

cupy_backends/cuda/api/runtime.pyx:265: AssertionError
----------------------------- Captured stderr call -----------------------------
Traceback (most recent call last):
  File "cupy_backends/cuda/api/runtime.pyx", line 644, in cupy_backends.cuda.api.runtime.freeArray
    check_status(status)
  File "cupy_backends/cuda/api/runtime.pyx", line 265, in cupy_backends.cuda.api.runtime.check_status
    raise CUDARuntimeError(status)
cupy_backends.cuda.api.runtime.CUDARuntimeError: hipErrorUnknown: hipErrorUnknown
_ TestAffineTransformTextureMemory.test_affine_transform_texture_memory[_param_155_{mode='constant', order=1, output=float32, output_shape=10, shape=(10, 10, 10), theta=270}] _

self = <<cupyx_tests.scipy_tests.ndimage_tests.test_interpolation.TestAffineTransformTextureMemory object at 0x7fd705913c10> ...': 'constant', 'order': 1, 'output': <class 'numpy.float32'>, 'output_shape': 10, 'shape': (10, 10, 10), 'theta': 270}>
xp = <module 'cupy' from '/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.Np3X0NVCM9/cupy/cupy/__init__.py'>
scp = <module 'cupyx.scipy' from '/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.Np3X0NVCM9/cupy/cupyx/scipy/__init__.py'>

    @testing.numpy_cupy_allclose(atol=0.1, scipy_name='scp')
    def test_affine_transform_texture_memory(self, xp, scp):
        a = xp.ones(self.shape, dtype=xp.float32)
        center = numpy.divide(numpy.subtract(self.shape, 1), 2)
    
        if len(self.shape) == 2:
            matrix = self._2d_rotation_matrix(self.theta, center)
        elif len(self.shape) == 3:
            matrix = self._3d_rotation_matrix(self.theta, center)
        else:
            return pytest.xfail('Unsupported shape')
    
        if self.output == 'empty':
            output = xp.empty(self.shape, dtype=xp.float32)
            if self.output_shape:
                return pytest.skip('This combination is tested in '
                                   'test_invalid_texture_arguments')
        else:
            output = self.output
    
        if self.output_shape:
            output_shape = (self.output_shape, ) * len(self.shape)
        else:
            output_shape = self.output_shape
    
        if xp == cupy:
            m = cupyx.scipy.ndimage.affine_transform
            matrix = cupy.array(matrix)
>           return m(a, matrix, output_shape=output_shape,
                     output=output, order=self.order,
                     mode=self.mode, texture_memory=True)

tests/cupyx_tests/scipy_tests/ndimage_tests/test_interpolation.py:398: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
cupyx/scipy/ndimage/interpolation.py:376: in affine_transform
    return _texture.affine_transformation(data=input,
cupyx/_texture.py:168: in affine_transformation
    texture_object = _create_texture_object(data,
cupyx/_texture.py:98: in _create_texture_object
    array = texture.CUDAarray(texture_fmt, *data.shape[::-1])
cupy/cuda/texture.pyx:296: in cupy.cuda.texture.CUDAarray.__init__
    self.ptr = runtime.malloc3DArray(desc.ptr, width, height, depth,
cupy_backends/cuda/api/runtime.pyx:593: in cupy_backends.cuda.api.runtime.malloc3DArray
    check_status(status)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

>   raise CUDARuntimeError(status)
E   AssertionError: Only cupy raises error
E   
E   Traceback (most recent call last):
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.Np3X0NVCM9/cupy/cupy/testing/_helper.py", line 47, in _call_func
E       result = impl(self, *args, **kw)
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.Np3X0NVCM9/cupy/tests/cupyx_tests/scipy_tests/ndimage_tests/test_interpolation.py", line 398, in test_affine_transform_texture_memory
E       return m(a, matrix, output_shape=output_shape,
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.Np3X0NVCM9/cupy/cupyx/scipy/ndimage/interpolation.py", line 376, in affine_transform
E       return _texture.affine_transformation(data=input,
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.Np3X0NVCM9/cupy/cupyx/_texture.py", line 168, in affine_transformation
E       texture_object = _create_texture_object(data,
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.Np3X0NVCM9/cupy/cupyx/_texture.py", line 98, in _create_texture_object
E       array = texture.CUDAarray(texture_fmt, *data.shape[::-1])
E     File "cupy/cuda/texture.pyx", line 296, in cupy.cuda.texture.CUDAarray.__init__
E       self.ptr = runtime.malloc3DArray(desc.ptr, width, height, depth,
E     File "cupy_backends/cuda/api/runtime.pyx", line 593, in cupy_backends.cuda.api.runtime.malloc3DArray
E       check_status(status)
E     File "cupy_backends/cuda/api/runtime.pyx", line 265, in cupy_backends.cuda.api.runtime.check_status
E       raise CUDARuntimeError(status)
E   cupy_backends.cuda.api.runtime.CUDARuntimeError: hipErrorUnknown: hipErrorUnknown

cupy_backends/cuda/api/runtime.pyx:265: AssertionError
----------------------------- Captured stderr call -----------------------------
Traceback (most recent call last):
  File "cupy_backends/cuda/api/runtime.pyx", line 644, in cupy_backends.cuda.api.runtime.freeArray
    check_status(status)
  File "cupy_backends/cuda/api/runtime.pyx", line 265, in cupy_backends.cuda.api.runtime.check_status
    raise CUDARuntimeError(status)
cupy_backends.cuda.api.runtime.CUDARuntimeError: hipErrorUnknown: hipErrorUnknown
_ TestAffineTransformTextureMemory.test_affine_transform_texture_memory[_param_156_{mode='constant', order=1, output=float32, output_shape=10, shape=(10, 20, 30), theta=0}] _

self = <<cupyx_tests.scipy_tests.ndimage_tests.test_interpolation.TestAffineTransformTextureMemory object at 0x7fd7064f84f0> ...de': 'constant', 'order': 1, 'output': <class 'numpy.float32'>, 'output_shape': 10, 'shape': (10, 20, 30), 'theta': 0}>
xp = <module 'cupy' from '/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.Np3X0NVCM9/cupy/cupy/__init__.py'>
scp = <module 'cupyx.scipy' from '/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.Np3X0NVCM9/cupy/cupyx/scipy/__init__.py'>

    @testing.numpy_cupy_allclose(atol=0.1, scipy_name='scp')
    def test_affine_transform_texture_memory(self, xp, scp):
        a = xp.ones(self.shape, dtype=xp.float32)
        center = numpy.divide(numpy.subtract(self.shape, 1), 2)
    
        if len(self.shape) == 2:
            matrix = self._2d_rotation_matrix(self.theta, center)
        elif len(self.shape) == 3:
            matrix = self._3d_rotation_matrix(self.theta, center)
        else:
            return pytest.xfail('Unsupported shape')
    
        if self.output == 'empty':
            output = xp.empty(self.shape, dtype=xp.float32)
            if self.output_shape:
                return pytest.skip('This combination is tested in '
                                   'test_invalid_texture_arguments')
        else:
            output = self.output
    
        if self.output_shape:
            output_shape = (self.output_shape, ) * len(self.shape)
        else:
            output_shape = self.output_shape
    
        if xp == cupy:
            m = cupyx.scipy.ndimage.affine_transform
            matrix = cupy.array(matrix)
>           return m(a, matrix, output_shape=output_shape,
                     output=output, order=self.order,
                     mode=self.mode, texture_memory=True)

tests/cupyx_tests/scipy_tests/ndimage_tests/test_interpolation.py:398: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
cupyx/scipy/ndimage/interpolation.py:376: in affine_transform
    return _texture.affine_transformation(data=input,
cupyx/_texture.py:168: in affine_transformation
    texture_object = _create_texture_object(data,
cupyx/_texture.py:98: in _create_texture_object
    array = texture.CUDAarray(texture_fmt, *data.shape[::-1])
cupy/cuda/texture.pyx:296: in cupy.cuda.texture.CUDAarray.__init__
    self.ptr = runtime.malloc3DArray(desc.ptr, width, height, depth,
cupy_backends/cuda/api/runtime.pyx:593: in cupy_backends.cuda.api.runtime.malloc3DArray
    check_status(status)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

>   raise CUDARuntimeError(status)
E   AssertionError: Only cupy raises error
E   
E   Traceback (most recent call last):
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.Np3X0NVCM9/cupy/cupy/testing/_helper.py", line 47, in _call_func
E       result = impl(self, *args, **kw)
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.Np3X0NVCM9/cupy/tests/cupyx_tests/scipy_tests/ndimage_tests/test_interpolation.py", line 398, in test_affine_transform_texture_memory
E       return m(a, matrix, output_shape=output_shape,
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.Np3X0NVCM9/cupy/cupyx/scipy/ndimage/interpolation.py", line 376, in affine_transform
E       return _texture.affine_transformation(data=input,
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.Np3X0NVCM9/cupy/cupyx/_texture.py", line 168, in affine_transformation
E       texture_object = _create_texture_object(data,
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.Np3X0NVCM9/cupy/cupyx/_texture.py", line 98, in _create_texture_object
E       array = texture.CUDAarray(texture_fmt, *data.shape[::-1])
E     File "cupy/cuda/texture.pyx", line 296, in cupy.cuda.texture.CUDAarray.__init__
E       self.ptr = runtime.malloc3DArray(desc.ptr, width, height, depth,
E     File "cupy_backends/cuda/api/runtime.pyx", line 593, in cupy_backends.cuda.api.runtime.malloc3DArray
E       check_status(status)
E     File "cupy_backends/cuda/api/runtime.pyx", line 265, in cupy_backends.cuda.api.runtime.check_status
E       raise CUDARuntimeError(status)
E   cupy_backends.cuda.api.runtime.CUDARuntimeError: hipErrorUnknown: hipErrorUnknown

cupy_backends/cuda/api/runtime.pyx:265: AssertionError
----------------------------- Captured stderr call -----------------------------
Traceback (most recent call last):
  File "cupy_backends/cuda/api/runtime.pyx", line 644, in cupy_backends.cuda.api.runtime.freeArray
    check_status(status)
  File "cupy_backends/cuda/api/runtime.pyx", line 265, in cupy_backends.cuda.api.runtime.check_status
    raise CUDARuntimeError(status)
cupy_backends.cuda.api.runtime.CUDARuntimeError: hipErrorUnknown: hipErrorUnknown
_ TestAffineTransformTextureMemory.test_affine_transform_texture_memory[_param_157_{mode='constant', order=1, output=float32, output_shape=10, shape=(10, 20, 30), theta=90}] _

self = <<cupyx_tests.scipy_tests.ndimage_tests.test_interpolation.TestAffineTransformTextureMemory object at 0x7fd707907c70> ...e': 'constant', 'order': 1, 'output': <class 'numpy.float32'>, 'output_shape': 10, 'shape': (10, 20, 30), 'theta': 90}>
xp = <module 'cupy' from '/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.Np3X0NVCM9/cupy/cupy/__init__.py'>
scp = <module 'cupyx.scipy' from '/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.Np3X0NVCM9/cupy/cupyx/scipy/__init__.py'>

    @testing.numpy_cupy_allclose(atol=0.1, scipy_name='scp')
    def test_affine_transform_texture_memory(self, xp, scp):
        a = xp.ones(self.shape, dtype=xp.float32)
        center = numpy.divide(numpy.subtract(self.shape, 1), 2)
    
        if len(self.shape) == 2:
            matrix = self._2d_rotation_matrix(self.theta, center)
        elif len(self.shape) == 3:
            matrix = self._3d_rotation_matrix(self.theta, center)
        else:
            return pytest.xfail('Unsupported shape')
    
        if self.output == 'empty':
            output = xp.empty(self.shape, dtype=xp.float32)
            if self.output_shape:
                return pytest.skip('This combination is tested in '
                                   'test_invalid_texture_arguments')
        else:
            output = self.output
    
        if self.output_shape:
            output_shape = (self.output_shape, ) * len(self.shape)
        else:
            output_shape = self.output_shape
    
        if xp == cupy:
            m = cupyx.scipy.ndimage.affine_transform
            matrix = cupy.array(matrix)
>           return m(a, matrix, output_shape=output_shape,
                     output=output, order=self.order,
                     mode=self.mode, texture_memory=True)

tests/cupyx_tests/scipy_tests/ndimage_tests/test_interpolation.py:398: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
cupyx/scipy/ndimage/interpolation.py:376: in affine_transform
    return _texture.affine_transformation(data=input,
cupyx/_texture.py:168: in affine_transformation
    texture_object = _create_texture_object(data,
cupyx/_texture.py:98: in _create_texture_object
    array = texture.CUDAarray(texture_fmt, *data.shape[::-1])
cupy/cuda/texture.pyx:296: in cupy.cuda.texture.CUDAarray.__init__
    self.ptr = runtime.malloc3DArray(desc.ptr, width, height, depth,
cupy_backends/cuda/api/runtime.pyx:593: in cupy_backends.cuda.api.runtime.malloc3DArray
    check_status(status)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

>   raise CUDARuntimeError(status)
E   AssertionError: Only cupy raises error
E   
E   Traceback (most recent call last):
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.Np3X0NVCM9/cupy/cupy/testing/_helper.py", line 47, in _call_func
E       result = impl(self, *args, **kw)
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.Np3X0NVCM9/cupy/tests/cupyx_tests/scipy_tests/ndimage_tests/test_interpolation.py", line 398, in test_affine_transform_texture_memory
E       return m(a, matrix, output_shape=output_shape,
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.Np3X0NVCM9/cupy/cupyx/scipy/ndimage/interpolation.py", line 376, in affine_transform
E       return _texture.affine_transformation(data=input,
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.Np3X0NVCM9/cupy/cupyx/_texture.py", line 168, in affine_transformation
E       texture_object = _create_texture_object(data,
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.Np3X0NVCM9/cupy/cupyx/_texture.py", line 98, in _create_texture_object
E       array = texture.CUDAarray(texture_fmt, *data.shape[::-1])
E     File "cupy/cuda/texture.pyx", line 296, in cupy.cuda.texture.CUDAarray.__init__
E       self.ptr = runtime.malloc3DArray(desc.ptr, width, height, depth,
E     File "cupy_backends/cuda/api/runtime.pyx", line 593, in cupy_backends.cuda.api.runtime.malloc3DArray
E       check_status(status)
E     File "cupy_backends/cuda/api/runtime.pyx", line 265, in cupy_backends.cuda.api.runtime.check_status
E       raise CUDARuntimeError(status)
E   cupy_backends.cuda.api.runtime.CUDARuntimeError: hipErrorUnknown: hipErrorUnknown

cupy_backends/cuda/api/runtime.pyx:265: AssertionError
----------------------------- Captured stderr call -----------------------------
Traceback (most recent call last):
  File "cupy_backends/cuda/api/runtime.pyx", line 644, in cupy_backends.cuda.api.runtime.freeArray
    check_status(status)
  File "cupy_backends/cuda/api/runtime.pyx", line 265, in cupy_backends.cuda.api.runtime.check_status
    raise CUDARuntimeError(status)
cupy_backends.cuda.api.runtime.CUDARuntimeError: hipErrorUnknown: hipErrorUnknown
_ TestAffineTransformTextureMemory.test_affine_transform_texture_memory[_param_158_{mode='constant', order=1, output=float32, output_shape=10, shape=(10, 20, 30), theta=180}] _

self = <<cupyx_tests.scipy_tests.ndimage_tests.test_interpolation.TestAffineTransformTextureMemory object at 0x7fd7067bc130> ...': 'constant', 'order': 1, 'output': <class 'numpy.float32'>, 'output_shape': 10, 'shape': (10, 20, 30), 'theta': 180}>
xp = <module 'cupy' from '/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.Np3X0NVCM9/cupy/cupy/__init__.py'>
scp = <module 'cupyx.scipy' from '/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.Np3X0NVCM9/cupy/cupyx/scipy/__init__.py'>

    @testing.numpy_cupy_allclose(atol=0.1, scipy_name='scp')
    def test_affine_transform_texture_memory(self, xp, scp):
        a = xp.ones(self.shape, dtype=xp.float32)
        center = numpy.divide(numpy.subtract(self.shape, 1), 2)
    
        if len(self.shape) == 2:
            matrix = self._2d_rotation_matrix(self.theta, center)
        elif len(self.shape) == 3:
            matrix = self._3d_rotation_matrix(self.theta, center)
        else:
            return pytest.xfail('Unsupported shape')
    
        if self.output == 'empty':
            output = xp.empty(self.shape, dtype=xp.float32)
            if self.output_shape:
                return pytest.skip('This combination is tested in '
                                   'test_invalid_texture_arguments')
        else:
            output = self.output
    
        if self.output_shape:
            output_shape = (self.output_shape, ) * len(self.shape)
        else:
            output_shape = self.output_shape
    
        if xp == cupy:
            m = cupyx.scipy.ndimage.affine_transform
            matrix = cupy.array(matrix)
>           return m(a, matrix, output_shape=output_shape,
                     output=output, order=self.order,
                     mode=self.mode, texture_memory=True)

tests/cupyx_tests/scipy_tests/ndimage_tests/test_interpolation.py:398: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
cupyx/scipy/ndimage/interpolation.py:376: in affine_transform
    return _texture.affine_transformation(data=input,
cupyx/_texture.py:168: in affine_transformation
    texture_object = _create_texture_object(data,
cupyx/_texture.py:98: in _create_texture_object
    array = texture.CUDAarray(texture_fmt, *data.shape[::-1])
cupy/cuda/texture.pyx:296: in cupy.cuda.texture.CUDAarray.__init__
    self.ptr = runtime.malloc3DArray(desc.ptr, width, height, depth,
cupy_backends/cuda/api/runtime.pyx:593: in cupy_backends.cuda.api.runtime.malloc3DArray
    check_status(status)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

>   raise CUDARuntimeError(status)
E   AssertionError: Only cupy raises error
E   
E   Traceback (most recent call last):
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.Np3X0NVCM9/cupy/cupy/testing/_helper.py", line 47, in _call_func
E       result = impl(self, *args, **kw)
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.Np3X0NVCM9/cupy/tests/cupyx_tests/scipy_tests/ndimage_tests/test_interpolation.py", line 398, in test_affine_transform_texture_memory
E       return m(a, matrix, output_shape=output_shape,
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.Np3X0NVCM9/cupy/cupyx/scipy/ndimage/interpolation.py", line 376, in affine_transform
E       return _texture.affine_transformation(data=input,
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.Np3X0NVCM9/cupy/cupyx/_texture.py", line 168, in affine_transformation
E       texture_object = _create_texture_object(data,
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.Np3X0NVCM9/cupy/cupyx/_texture.py", line 98, in _create_texture_object
E       array = texture.CUDAarray(texture_fmt, *data.shape[::-1])
E     File "cupy/cuda/texture.pyx", line 296, in cupy.cuda.texture.CUDAarray.__init__
E       self.ptr = runtime.malloc3DArray(desc.ptr, width, height, depth,
E     File "cupy_backends/cuda/api/runtime.pyx", line 593, in cupy_backends.cuda.api.runtime.malloc3DArray
E       check_status(status)
E     File "cupy_backends/cuda/api/runtime.pyx", line 265, in cupy_backends.cuda.api.runtime.check_status
E       raise CUDARuntimeError(status)
E   cupy_backends.cuda.api.runtime.CUDARuntimeError: hipErrorUnknown: hipErrorUnknown

cupy_backends/cuda/api/runtime.pyx:265: AssertionError
----------------------------- Captured stderr call -----------------------------
Traceback (most recent call last):
  File "cupy_backends/cuda/api/runtime.pyx", line 644, in cupy_backends.cuda.api.runtime.freeArray
    check_status(status)
  File "cupy_backends/cuda/api/runtime.pyx", line 265, in cupy_backends.cuda.api.runtime.check_status
    raise CUDARuntimeError(status)
cupy_backends.cuda.api.runtime.CUDARuntimeError: hipErrorUnknown: hipErrorUnknown
_ TestAffineTransformTextureMemory.test_affine_transform_texture_memory[_param_159_{mode='constant', order=1, output=float32, output_shape=10, shape=(10, 20, 30), theta=270}] _

self = <<cupyx_tests.scipy_tests.ndimage_tests.test_interpolation.TestAffineTransformTextureMemory object at 0x7fd7064ae550> ...': 'constant', 'order': 1, 'output': <class 'numpy.float32'>, 'output_shape': 10, 'shape': (10, 20, 30), 'theta': 270}>
xp = <module 'cupy' from '/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.Np3X0NVCM9/cupy/cupy/__init__.py'>
scp = <module 'cupyx.scipy' from '/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.Np3X0NVCM9/cupy/cupyx/scipy/__init__.py'>

    @testing.numpy_cupy_allclose(atol=0.1, scipy_name='scp')
    def test_affine_transform_texture_memory(self, xp, scp):
        a = xp.ones(self.shape, dtype=xp.float32)
        center = numpy.divide(numpy.subtract(self.shape, 1), 2)
    
        if len(self.shape) == 2:
            matrix = self._2d_rotation_matrix(self.theta, center)
        elif len(self.shape) == 3:
            matrix = self._3d_rotation_matrix(self.theta, center)
        else:
            return pytest.xfail('Unsupported shape')
    
        if self.output == 'empty':
            output = xp.empty(self.shape, dtype=xp.float32)
            if self.output_shape:
                return pytest.skip('This combination is tested in '
                                   'test_invalid_texture_arguments')
        else:
            output = self.output
    
        if self.output_shape:
            output_shape = (self.output_shape, ) * len(self.shape)
        else:
            output_shape = self.output_shape
    
        if xp == cupy:
            m = cupyx.scipy.ndimage.affine_transform
            matrix = cupy.array(matrix)
>           return m(a, matrix, output_shape=output_shape,
                     output=output, order=self.order,
                     mode=self.mode, texture_memory=True)

tests/cupyx_tests/scipy_tests/ndimage_tests/test_interpolation.py:398: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
cupyx/scipy/ndimage/interpolation.py:376: in affine_transform
    return _texture.affine_transformation(data=input,
cupyx/_texture.py:168: in affine_transformation
    texture_object = _create_texture_object(data,
cupyx/_texture.py:98: in _create_texture_object
    array = texture.CUDAarray(texture_fmt, *data.shape[::-1])
cupy/cuda/texture.pyx:296: in cupy.cuda.texture.CUDAarray.__init__
    self.ptr = runtime.malloc3DArray(desc.ptr, width, height, depth,
cupy_backends/cuda/api/runtime.pyx:593: in cupy_backends.cuda.api.runtime.malloc3DArray
    check_status(status)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

>   raise CUDARuntimeError(status)
E   AssertionError: Only cupy raises error
E   
E   Traceback (most recent call last):
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.Np3X0NVCM9/cupy/cupy/testing/_helper.py", line 47, in _call_func
E       result = impl(self, *args, **kw)
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.Np3X0NVCM9/cupy/tests/cupyx_tests/scipy_tests/ndimage_tests/test_interpolation.py", line 398, in test_affine_transform_texture_memory
E       return m(a, matrix, output_shape=output_shape,
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.Np3X0NVCM9/cupy/cupyx/scipy/ndimage/interpolation.py", line 376, in affine_transform
E       return _texture.affine_transformation(data=input,
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.Np3X0NVCM9/cupy/cupyx/_texture.py", line 168, in affine_transformation
E       texture_object = _create_texture_object(data,
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.Np3X0NVCM9/cupy/cupyx/_texture.py", line 98, in _create_texture_object
E       array = texture.CUDAarray(texture_fmt, *data.shape[::-1])
E     File "cupy/cuda/texture.pyx", line 296, in cupy.cuda.texture.CUDAarray.__init__
E       self.ptr = runtime.malloc3DArray(desc.ptr, width, height, depth,
E     File "cupy_backends/cuda/api/runtime.pyx", line 593, in cupy_backends.cuda.api.runtime.malloc3DArray
E       check_status(status)
E     File "cupy_backends/cuda/api/runtime.pyx", line 265, in cupy_backends.cuda.api.runtime.check_status
E       raise CUDARuntimeError(status)
E   cupy_backends.cuda.api.runtime.CUDARuntimeError: hipErrorUnknown: hipErrorUnknown

cupy_backends/cuda/api/runtime.pyx:265: AssertionError
----------------------------- Captured stderr call -----------------------------
Traceback (most recent call last):
  File "cupy_backends/cuda/api/runtime.pyx", line 644, in cupy_backends.cuda.api.runtime.freeArray
    check_status(status)
  File "cupy_backends/cuda/api/runtime.pyx", line 265, in cupy_backends.cuda.api.runtime.check_status
    raise CUDARuntimeError(status)
cupy_backends.cuda.api.runtime.CUDARuntimeError: hipErrorUnknown: hipErrorUnknown
_ TestAffineTransformTextureMemory.test_affine_transform_texture_memory[_param_160_{mode='constant', order=1, output='empty', output_shape=None, shape=(100, 100), theta=0}] _

self = <<cupyx_tests.scipy_tests.ndimage_tests.test_interpolation.TestAffineTransformTextureMemory object at 0x7fd7055430d0>  parameter: {'mode': 'constant', 'order': 1, 'output': 'empty', 'output_shape': None, 'shape': (100, 100), 'theta': 0}>
xp = <module 'cupy' from '/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.Np3X0NVCM9/cupy/cupy/__init__.py'>
scp = <module 'cupyx.scipy' from '/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.Np3X0NVCM9/cupy/cupyx/scipy/__init__.py'>

    @testing.numpy_cupy_allclose(atol=0.1, scipy_name='scp')
    def test_affine_transform_texture_memory(self, xp, scp):
        a = xp.ones(self.shape, dtype=xp.float32)
        center = numpy.divide(numpy.subtract(self.shape, 1), 2)
    
        if len(self.shape) == 2:
            matrix = self._2d_rotation_matrix(self.theta, center)
        elif len(self.shape) == 3:
            matrix = self._3d_rotation_matrix(self.theta, center)
        else:
            return pytest.xfail('Unsupported shape')
    
        if self.output == 'empty':
            output = xp.empty(self.shape, dtype=xp.float32)
            if self.output_shape:
                return pytest.skip('This combination is tested in '
                                   'test_invalid_texture_arguments')
        else:
            output = self.output
    
        if self.output_shape:
            output_shape = (self.output_shape, ) * len(self.shape)
        else:
            output_shape = self.output_shape
    
        if xp == cupy:
            m = cupyx.scipy.ndimage.affine_transform
            matrix = cupy.array(matrix)
>           return m(a, matrix, output_shape=output_shape,
                     output=output, order=self.order,
                     mode=self.mode, texture_memory=True)

tests/cupyx_tests/scipy_tests/ndimage_tests/test_interpolation.py:398: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
cupyx/scipy/ndimage/interpolation.py:376: in affine_transform
    return _texture.affine_transformation(data=input,
cupyx/_texture.py:168: in affine_transformation
    texture_object = _create_texture_object(data,
cupyx/_texture.py:98: in _create_texture_object
    array = texture.CUDAarray(texture_fmt, *data.shape[::-1])
cupy/cuda/texture.pyx:296: in cupy.cuda.texture.CUDAarray.__init__
    self.ptr = runtime.malloc3DArray(desc.ptr, width, height, depth,
cupy_backends/cuda/api/runtime.pyx:593: in cupy_backends.cuda.api.runtime.malloc3DArray
    check_status(status)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

>   raise CUDARuntimeError(status)
E   AssertionError: Only cupy raises error
E   
E   Traceback (most recent call last):
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.Np3X0NVCM9/cupy/cupy/testing/_helper.py", line 47, in _call_func
E       result = impl(self, *args, **kw)
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.Np3X0NVCM9/cupy/tests/cupyx_tests/scipy_tests/ndimage_tests/test_interpolation.py", line 398, in test_affine_transform_texture_memory
E       return m(a, matrix, output_shape=output_shape,
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.Np3X0NVCM9/cupy/cupyx/scipy/ndimage/interpolation.py", line 376, in affine_transform
E       return _texture.affine_transformation(data=input,
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.Np3X0NVCM9/cupy/cupyx/_texture.py", line 168, in affine_transformation
E       texture_object = _create_texture_object(data,
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.Np3X0NVCM9/cupy/cupyx/_texture.py", line 98, in _create_texture_object
E       array = texture.CUDAarray(texture_fmt, *data.shape[::-1])
E     File "cupy/cuda/texture.pyx", line 296, in cupy.cuda.texture.CUDAarray.__init__
E       self.ptr = runtime.malloc3DArray(desc.ptr, width, height, depth,
E     File "cupy_backends/cuda/api/runtime.pyx", line 593, in cupy_backends.cuda.api.runtime.malloc3DArray
E       check_status(status)
E     File "cupy_backends/cuda/api/runtime.pyx", line 265, in cupy_backends.cuda.api.runtime.check_status
E       raise CUDARuntimeError(status)
E   cupy_backends.cuda.api.runtime.CUDARuntimeError: hipErrorUnknown: hipErrorUnknown

cupy_backends/cuda/api/runtime.pyx:265: AssertionError
----------------------------- Captured stderr call -----------------------------
Traceback (most recent call last):
  File "cupy_backends/cuda/api/runtime.pyx", line 644, in cupy_backends.cuda.api.runtime.freeArray
    check_status(status)
  File "cupy_backends/cuda/api/runtime.pyx", line 265, in cupy_backends.cuda.api.runtime.check_status
    raise CUDARuntimeError(status)
cupy_backends.cuda.api.runtime.CUDARuntimeError: hipErrorUnknown: hipErrorUnknown
_ TestAffineTransformTextureMemory.test_affine_transform_texture_memory[_param_161_{mode='constant', order=1, output='empty', output_shape=None, shape=(100, 100), theta=90}] _

self = <<cupyx_tests.scipy_tests.ndimage_tests.test_interpolation.TestAffineTransformTextureMemory object at 0x7fd707ea5d00>  parameter: {'mode': 'constant', 'order': 1, 'output': 'empty', 'output_shape': None, 'shape': (100, 100), 'theta': 90}>
xp = <module 'cupy' from '/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.Np3X0NVCM9/cupy/cupy/__init__.py'>
scp = <module 'cupyx.scipy' from '/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.Np3X0NVCM9/cupy/cupyx/scipy/__init__.py'>

    @testing.numpy_cupy_allclose(atol=0.1, scipy_name='scp')
    def test_affine_transform_texture_memory(self, xp, scp):
        a = xp.ones(self.shape, dtype=xp.float32)
        center = numpy.divide(numpy.subtract(self.shape, 1), 2)
    
        if len(self.shape) == 2:
            matrix = self._2d_rotation_matrix(self.theta, center)
        elif len(self.shape) == 3:
            matrix = self._3d_rotation_matrix(self.theta, center)
        else:
            return pytest.xfail('Unsupported shape')
    
        if self.output == 'empty':
            output = xp.empty(self.shape, dtype=xp.float32)
            if self.output_shape:
                return pytest.skip('This combination is tested in '
                                   'test_invalid_texture_arguments')
        else:
            output = self.output
    
        if self.output_shape:
            output_shape = (self.output_shape, ) * len(self.shape)
        else:
            output_shape = self.output_shape
    
        if xp == cupy:
            m = cupyx.scipy.ndimage.affine_transform
            matrix = cupy.array(matrix)
>           return m(a, matrix, output_shape=output_shape,
                     output=output, order=self.order,
                     mode=self.mode, texture_memory=True)

tests/cupyx_tests/scipy_tests/ndimage_tests/test_interpolation.py:398: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
cupyx/scipy/ndimage/interpolation.py:376: in affine_transform
    return _texture.affine_transformation(data=input,
cupyx/_texture.py:168: in affine_transformation
    texture_object = _create_texture_object(data,
cupyx/_texture.py:98: in _create_texture_object
    array = texture.CUDAarray(texture_fmt, *data.shape[::-1])
cupy/cuda/texture.pyx:296: in cupy.cuda.texture.CUDAarray.__init__
    self.ptr = runtime.malloc3DArray(desc.ptr, width, height, depth,
cupy_backends/cuda/api/runtime.pyx:593: in cupy_backends.cuda.api.runtime.malloc3DArray
    check_status(status)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

>   raise CUDARuntimeError(status)
E   AssertionError: Only cupy raises error
E   
E   Traceback (most recent call last):
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.Np3X0NVCM9/cupy/cupy/testing/_helper.py", line 47, in _call_func
E       result = impl(self, *args, **kw)
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.Np3X0NVCM9/cupy/tests/cupyx_tests/scipy_tests/ndimage_tests/test_interpolation.py", line 398, in test_affine_transform_texture_memory
E       return m(a, matrix, output_shape=output_shape,
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.Np3X0NVCM9/cupy/cupyx/scipy/ndimage/interpolation.py", line 376, in affine_transform
E       return _texture.affine_transformation(data=input,
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.Np3X0NVCM9/cupy/cupyx/_texture.py", line 168, in affine_transformation
E       texture_object = _create_texture_object(data,
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.Np3X0NVCM9/cupy/cupyx/_texture.py", line 98, in _create_texture_object
E       array = texture.CUDAarray(texture_fmt, *data.shape[::-1])
E     File "cupy/cuda/texture.pyx", line 296, in cupy.cuda.texture.CUDAarray.__init__
E       self.ptr = runtime.malloc3DArray(desc.ptr, width, height, depth,
E     File "cupy_backends/cuda/api/runtime.pyx", line 593, in cupy_backends.cuda.api.runtime.malloc3DArray
E       check_status(status)
E     File "cupy_backends/cuda/api/runtime.pyx", line 265, in cupy_backends.cuda.api.runtime.check_status
E       raise CUDARuntimeError(status)
E   cupy_backends.cuda.api.runtime.CUDARuntimeError: hipErrorUnknown: hipErrorUnknown

cupy_backends/cuda/api/runtime.pyx:265: AssertionError
----------------------------- Captured stderr call -----------------------------
Traceback (most recent call last):
  File "cupy_backends/cuda/api/runtime.pyx", line 644, in cupy_backends.cuda.api.runtime.freeArray
    check_status(status)
  File "cupy_backends/cuda/api/runtime.pyx", line 265, in cupy_backends.cuda.api.runtime.check_status
    raise CUDARuntimeError(status)
cupy_backends.cuda.api.runtime.CUDARuntimeError: hipErrorUnknown: hipErrorUnknown
_ TestAffineTransformTextureMemory.test_affine_transform_texture_memory[_param_162_{mode='constant', order=1, output='empty', output_shape=None, shape=(100, 100), theta=180}] _

self = <<cupyx_tests.scipy_tests.ndimage_tests.test_interpolation.TestAffineTransformTextureMemory object at 0x7fd705a7bfd0>  parameter: {'mode': 'constant', 'order': 1, 'output': 'empty', 'output_shape': None, 'shape': (100, 100), 'theta': 180}>
xp = <module 'cupy' from '/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.Np3X0NVCM9/cupy/cupy/__init__.py'>
scp = <module 'cupyx.scipy' from '/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.Np3X0NVCM9/cupy/cupyx/scipy/__init__.py'>

    @testing.numpy_cupy_allclose(atol=0.1, scipy_name='scp')
    def test_affine_transform_texture_memory(self, xp, scp):
        a = xp.ones(self.shape, dtype=xp.float32)
        center = numpy.divide(numpy.subtract(self.shape, 1), 2)
    
        if len(self.shape) == 2:
            matrix = self._2d_rotation_matrix(self.theta, center)
        elif len(self.shape) == 3:
            matrix = self._3d_rotation_matrix(self.theta, center)
        else:
            return pytest.xfail('Unsupported shape')
    
        if self.output == 'empty':
            output = xp.empty(self.shape, dtype=xp.float32)
            if self.output_shape:
                return pytest.skip('This combination is tested in '
                                   'test_invalid_texture_arguments')
        else:
            output = self.output
    
        if self.output_shape:
            output_shape = (self.output_shape, ) * len(self.shape)
        else:
            output_shape = self.output_shape
    
        if xp == cupy:
            m = cupyx.scipy.ndimage.affine_transform
            matrix = cupy.array(matrix)
>           return m(a, matrix, output_shape=output_shape,
                     output=output, order=self.order,
                     mode=self.mode, texture_memory=True)

tests/cupyx_tests/scipy_tests/ndimage_tests/test_interpolation.py:398: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
cupyx/scipy/ndimage/interpolation.py:376: in affine_transform
    return _texture.affine_transformation(data=input,
cupyx/_texture.py:168: in affine_transformation
    texture_object = _create_texture_object(data,
cupyx/_texture.py:98: in _create_texture_object
    array = texture.CUDAarray(texture_fmt, *data.shape[::-1])
cupy/cuda/texture.pyx:296: in cupy.cuda.texture.CUDAarray.__init__
    self.ptr = runtime.malloc3DArray(desc.ptr, width, height, depth,
cupy_backends/cuda/api/runtime.pyx:593: in cupy_backends.cuda.api.runtime.malloc3DArray
    check_status(status)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

>   raise CUDARuntimeError(status)
E   AssertionError: Only cupy raises error
E   
E   Traceback (most recent call last):
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.Np3X0NVCM9/cupy/cupy/testing/_helper.py", line 47, in _call_func
E       result = impl(self, *args, **kw)
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.Np3X0NVCM9/cupy/tests/cupyx_tests/scipy_tests/ndimage_tests/test_interpolation.py", line 398, in test_affine_transform_texture_memory
E       return m(a, matrix, output_shape=output_shape,
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.Np3X0NVCM9/cupy/cupyx/scipy/ndimage/interpolation.py", line 376, in affine_transform
E       return _texture.affine_transformation(data=input,
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.Np3X0NVCM9/cupy/cupyx/_texture.py", line 168, in affine_transformation
E       texture_object = _create_texture_object(data,
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.Np3X0NVCM9/cupy/cupyx/_texture.py", line 98, in _create_texture_object
E       array = texture.CUDAarray(texture_fmt, *data.shape[::-1])
E     File "cupy/cuda/texture.pyx", line 296, in cupy.cuda.texture.CUDAarray.__init__
E       self.ptr = runtime.malloc3DArray(desc.ptr, width, height, depth,
E     File "cupy_backends/cuda/api/runtime.pyx", line 593, in cupy_backends.cuda.api.runtime.malloc3DArray
E       check_status(status)
E     File "cupy_backends/cuda/api/runtime.pyx", line 265, in cupy_backends.cuda.api.runtime.check_status
E       raise CUDARuntimeError(status)
E   cupy_backends.cuda.api.runtime.CUDARuntimeError: hipErrorUnknown: hipErrorUnknown

cupy_backends/cuda/api/runtime.pyx:265: AssertionError
----------------------------- Captured stderr call -----------------------------
Traceback (most recent call last):
  File "cupy_backends/cuda/api/runtime.pyx", line 644, in cupy_backends.cuda.api.runtime.freeArray
    check_status(status)
  File "cupy_backends/cuda/api/runtime.pyx", line 265, in cupy_backends.cuda.api.runtime.check_status
    raise CUDARuntimeError(status)
cupy_backends.cuda.api.runtime.CUDARuntimeError: hipErrorUnknown: hipErrorUnknown
_ TestAffineTransformTextureMemory.test_affine_transform_texture_memory[_param_163_{mode='constant', order=1, output='empty', output_shape=None, shape=(100, 100), theta=270}] _

self = <<cupyx_tests.scipy_tests.ndimage_tests.test_interpolation.TestAffineTransformTextureMemory object at 0x7fd70578e7c0>  parameter: {'mode': 'constant', 'order': 1, 'output': 'empty', 'output_shape': None, 'shape': (100, 100), 'theta': 270}>
xp = <module 'cupy' from '/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.Np3X0NVCM9/cupy/cupy/__init__.py'>
scp = <module 'cupyx.scipy' from '/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.Np3X0NVCM9/cupy/cupyx/scipy/__init__.py'>

    @testing.numpy_cupy_allclose(atol=0.1, scipy_name='scp')
    def test_affine_transform_texture_memory(self, xp, scp):
        a = xp.ones(self.shape, dtype=xp.float32)
        center = numpy.divide(numpy.subtract(self.shape, 1), 2)
    
        if len(self.shape) == 2:
            matrix = self._2d_rotation_matrix(self.theta, center)
        elif len(self.shape) == 3:
            matrix = self._3d_rotation_matrix(self.theta, center)
        else:
            return pytest.xfail('Unsupported shape')
    
        if self.output == 'empty':
            output = xp.empty(self.shape, dtype=xp.float32)
            if self.output_shape:
                return pytest.skip('This combination is tested in '
                                   'test_invalid_texture_arguments')
        else:
            output = self.output
    
        if self.output_shape:
            output_shape = (self.output_shape, ) * len(self.shape)
        else:
            output_shape = self.output_shape
    
        if xp == cupy:
            m = cupyx.scipy.ndimage.affine_transform
            matrix = cupy.array(matrix)
>           return m(a, matrix, output_shape=output_shape,
                     output=output, order=self.order,
                     mode=self.mode, texture_memory=True)

tests/cupyx_tests/scipy_tests/ndimage_tests/test_interpolation.py:398: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
cupyx/scipy/ndimage/interpolation.py:376: in affine_transform
    return _texture.affine_transformation(data=input,
cupyx/_texture.py:168: in affine_transformation
    texture_object = _create_texture_object(data,
cupyx/_texture.py:98: in _create_texture_object
    array = texture.CUDAarray(texture_fmt, *data.shape[::-1])
cupy/cuda/texture.pyx:296: in cupy.cuda.texture.CUDAarray.__init__
    self.ptr = runtime.malloc3DArray(desc.ptr, width, height, depth,
cupy_backends/cuda/api/runtime.pyx:593: in cupy_backends.cuda.api.runtime.malloc3DArray
    check_status(status)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

>   raise CUDARuntimeError(status)
E   AssertionError: Only cupy raises error
E   
E   Traceback (most recent call last):
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.Np3X0NVCM9/cupy/cupy/testing/_helper.py", line 47, in _call_func
E       result = impl(self, *args, **kw)
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.Np3X0NVCM9/cupy/tests/cupyx_tests/scipy_tests/ndimage_tests/test_interpolation.py", line 398, in test_affine_transform_texture_memory
E       return m(a, matrix, output_shape=output_shape,
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.Np3X0NVCM9/cupy/cupyx/scipy/ndimage/interpolation.py", line 376, in affine_transform
E       return _texture.affine_transformation(data=input,
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.Np3X0NVCM9/cupy/cupyx/_texture.py", line 168, in affine_transformation
E       texture_object = _create_texture_object(data,
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.Np3X0NVCM9/cupy/cupyx/_texture.py", line 98, in _create_texture_object
E       array = texture.CUDAarray(texture_fmt, *data.shape[::-1])
E     File "cupy/cuda/texture.pyx", line 296, in cupy.cuda.texture.CUDAarray.__init__
E       self.ptr = runtime.malloc3DArray(desc.ptr, width, height, depth,
E     File "cupy_backends/cuda/api/runtime.pyx", line 593, in cupy_backends.cuda.api.runtime.malloc3DArray
E       check_status(status)
E     File "cupy_backends/cuda/api/runtime.pyx", line 265, in cupy_backends.cuda.api.runtime.check_status
E       raise CUDARuntimeError(status)
E   cupy_backends.cuda.api.runtime.CUDARuntimeError: hipErrorUnknown: hipErrorUnknown

cupy_backends/cuda/api/runtime.pyx:265: AssertionError
----------------------------- Captured stderr call -----------------------------
Traceback (most recent call last):
  File "cupy_backends/cuda/api/runtime.pyx", line 644, in cupy_backends.cuda.api.runtime.freeArray
    check_status(status)
  File "cupy_backends/cuda/api/runtime.pyx", line 265, in cupy_backends.cuda.api.runtime.check_status
    raise CUDARuntimeError(status)
cupy_backends.cuda.api.runtime.CUDARuntimeError: hipErrorUnknown: hipErrorUnknown
_ TestAffineTransformTextureMemory.test_affine_transform_texture_memory[_param_164_{mode='constant', order=1, output='empty', output_shape=None, shape=(10, 20), theta=0}] _

self = <<cupyx_tests.scipy_tests.ndimage_tests.test_interpolation.TestAffineTransformTextureMemory object at 0x7fd7072d0e80>  parameter: {'mode': 'constant', 'order': 1, 'output': 'empty', 'output_shape': None, 'shape': (10, 20), 'theta': 0}>
xp = <module 'cupy' from '/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.Np3X0NVCM9/cupy/cupy/__init__.py'>
scp = <module 'cupyx.scipy' from '/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.Np3X0NVCM9/cupy/cupyx/scipy/__init__.py'>

    @testing.numpy_cupy_allclose(atol=0.1, scipy_name='scp')
    def test_affine_transform_texture_memory(self, xp, scp):
        a = xp.ones(self.shape, dtype=xp.float32)
        center = numpy.divide(numpy.subtract(self.shape, 1), 2)
    
        if len(self.shape) == 2:
            matrix = self._2d_rotation_matrix(self.theta, center)
        elif len(self.shape) == 3:
            matrix = self._3d_rotation_matrix(self.theta, center)
        else:
            return pytest.xfail('Unsupported shape')
    
        if self.output == 'empty':
            output = xp.empty(self.shape, dtype=xp.float32)
            if self.output_shape:
                return pytest.skip('This combination is tested in '
                                   'test_invalid_texture_arguments')
        else:
            output = self.output
    
        if self.output_shape:
            output_shape = (self.output_shape, ) * len(self.shape)
        else:
            output_shape = self.output_shape
    
        if xp == cupy:
            m = cupyx.scipy.ndimage.affine_transform
            matrix = cupy.array(matrix)
>           return m(a, matrix, output_shape=output_shape,
                     output=output, order=self.order,
                     mode=self.mode, texture_memory=True)

tests/cupyx_tests/scipy_tests/ndimage_tests/test_interpolation.py:398: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
cupyx/scipy/ndimage/interpolation.py:376: in affine_transform
    return _texture.affine_transformation(data=input,
cupyx/_texture.py:168: in affine_transformation
    texture_object = _create_texture_object(data,
cupyx/_texture.py:98: in _create_texture_object
    array = texture.CUDAarray(texture_fmt, *data.shape[::-1])
cupy/cuda/texture.pyx:296: in cupy.cuda.texture.CUDAarray.__init__
    self.ptr = runtime.malloc3DArray(desc.ptr, width, height, depth,
cupy_backends/cuda/api/runtime.pyx:593: in cupy_backends.cuda.api.runtime.malloc3DArray
    check_status(status)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

>   raise CUDARuntimeError(status)
E   AssertionError: Only cupy raises error
E   
E   Traceback (most recent call last):
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.Np3X0NVCM9/cupy/cupy/testing/_helper.py", line 47, in _call_func
E       result = impl(self, *args, **kw)
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.Np3X0NVCM9/cupy/tests/cupyx_tests/scipy_tests/ndimage_tests/test_interpolation.py", line 398, in test_affine_transform_texture_memory
E       return m(a, matrix, output_shape=output_shape,
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.Np3X0NVCM9/cupy/cupyx/scipy/ndimage/interpolation.py", line 376, in affine_transform
E       return _texture.affine_transformation(data=input,
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.Np3X0NVCM9/cupy/cupyx/_texture.py", line 168, in affine_transformation
E       texture_object = _create_texture_object(data,
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.Np3X0NVCM9/cupy/cupyx/_texture.py", line 98, in _create_texture_object
E       array = texture.CUDAarray(texture_fmt, *data.shape[::-1])
E     File "cupy/cuda/texture.pyx", line 296, in cupy.cuda.texture.CUDAarray.__init__
E       self.ptr = runtime.malloc3DArray(desc.ptr, width, height, depth,
E     File "cupy_backends/cuda/api/runtime.pyx", line 593, in cupy_backends.cuda.api.runtime.malloc3DArray
E       check_status(status)
E     File "cupy_backends/cuda/api/runtime.pyx", line 265, in cupy_backends.cuda.api.runtime.check_status
E       raise CUDARuntimeError(status)
E   cupy_backends.cuda.api.runtime.CUDARuntimeError: hipErrorUnknown: hipErrorUnknown

cupy_backends/cuda/api/runtime.pyx:265: AssertionError
----------------------------- Captured stderr call -----------------------------
Traceback (most recent call last):
  File "cupy_backends/cuda/api/runtime.pyx", line 644, in cupy_backends.cuda.api.runtime.freeArray
    check_status(status)
  File "cupy_backends/cuda/api/runtime.pyx", line 265, in cupy_backends.cuda.api.runtime.check_status
    raise CUDARuntimeError(status)
cupy_backends.cuda.api.runtime.CUDARuntimeError: hipErrorUnknown: hipErrorUnknown
_ TestAffineTransformTextureMemory.test_affine_transform_texture_memory[_param_165_{mode='constant', order=1, output='empty', output_shape=None, shape=(10, 20), theta=90}] _

self = <<cupyx_tests.scipy_tests.ndimage_tests.test_interpolation.TestAffineTransformTextureMemory object at 0x7fd7067da670>  parameter: {'mode': 'constant', 'order': 1, 'output': 'empty', 'output_shape': None, 'shape': (10, 20), 'theta': 90}>
xp = <module 'cupy' from '/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.Np3X0NVCM9/cupy/cupy/__init__.py'>
scp = <module 'cupyx.scipy' from '/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.Np3X0NVCM9/cupy/cupyx/scipy/__init__.py'>

    @testing.numpy_cupy_allclose(atol=0.1, scipy_name='scp')
    def test_affine_transform_texture_memory(self, xp, scp):
        a = xp.ones(self.shape, dtype=xp.float32)
        center = numpy.divide(numpy.subtract(self.shape, 1), 2)
    
        if len(self.shape) == 2:
            matrix = self._2d_rotation_matrix(self.theta, center)
        elif len(self.shape) == 3:
            matrix = self._3d_rotation_matrix(self.theta, center)
        else:
            return pytest.xfail('Unsupported shape')
    
        if self.output == 'empty':
            output = xp.empty(self.shape, dtype=xp.float32)
            if self.output_shape:
                return pytest.skip('This combination is tested in '
                                   'test_invalid_texture_arguments')
        else:
            output = self.output
    
        if self.output_shape:
            output_shape = (self.output_shape, ) * len(self.shape)
        else:
            output_shape = self.output_shape
    
        if xp == cupy:
            m = cupyx.scipy.ndimage.affine_transform
            matrix = cupy.array(matrix)
>           return m(a, matrix, output_shape=output_shape,
                     output=output, order=self.order,
                     mode=self.mode, texture_memory=True)

tests/cupyx_tests/scipy_tests/ndimage_tests/test_interpolation.py:398: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
cupyx/scipy/ndimage/interpolation.py:376: in affine_transform
    return _texture.affine_transformation(data=input,
cupyx/_texture.py:168: in affine_transformation
    texture_object = _create_texture_object(data,
cupyx/_texture.py:98: in _create_texture_object
    array = texture.CUDAarray(texture_fmt, *data.shape[::-1])
cupy/cuda/texture.pyx:296: in cupy.cuda.texture.CUDAarray.__init__
    self.ptr = runtime.malloc3DArray(desc.ptr, width, height, depth,
cupy_backends/cuda/api/runtime.pyx:593: in cupy_backends.cuda.api.runtime.malloc3DArray
    check_status(status)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

>   raise CUDARuntimeError(status)
E   AssertionError: Only cupy raises error
E   
E   Traceback (most recent call last):
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.Np3X0NVCM9/cupy/cupy/testing/_helper.py", line 47, in _call_func
E       result = impl(self, *args, **kw)
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.Np3X0NVCM9/cupy/tests/cupyx_tests/scipy_tests/ndimage_tests/test_interpolation.py", line 398, in test_affine_transform_texture_memory
E       return m(a, matrix, output_shape=output_shape,
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.Np3X0NVCM9/cupy/cupyx/scipy/ndimage/interpolation.py", line 376, in affine_transform
E       return _texture.affine_transformation(data=input,
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.Np3X0NVCM9/cupy/cupyx/_texture.py", line 168, in affine_transformation
E       texture_object = _create_texture_object(data,
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.Np3X0NVCM9/cupy/cupyx/_texture.py", line 98, in _create_texture_object
E       array = texture.CUDAarray(texture_fmt, *data.shape[::-1])
E     File "cupy/cuda/texture.pyx", line 296, in cupy.cuda.texture.CUDAarray.__init__
E       self.ptr = runtime.malloc3DArray(desc.ptr, width, height, depth,
E     File "cupy_backends/cuda/api/runtime.pyx", line 593, in cupy_backends.cuda.api.runtime.malloc3DArray
E       check_status(status)
E     File "cupy_backends/cuda/api/runtime.pyx", line 265, in cupy_backends.cuda.api.runtime.check_status
E       raise CUDARuntimeError(status)
E   cupy_backends.cuda.api.runtime.CUDARuntimeError: hipErrorUnknown: hipErrorUnknown

cupy_backends/cuda/api/runtime.pyx:265: AssertionError
----------------------------- Captured stderr call -----------------------------
Traceback (most recent call last):
  File "cupy_backends/cuda/api/runtime.pyx", line 644, in cupy_backends.cuda.api.runtime.freeArray
    check_status(status)
  File "cupy_backends/cuda/api/runtime.pyx", line 265, in cupy_backends.cuda.api.runtime.check_status
    raise CUDARuntimeError(status)
cupy_backends.cuda.api.runtime.CUDARuntimeError: hipErrorUnknown: hipErrorUnknown
_ TestAffineTransformTextureMemory.test_affine_transform_texture_memory[_param_166_{mode='constant', order=1, output='empty', output_shape=None, shape=(10, 20), theta=180}] _

self = <<cupyx_tests.scipy_tests.ndimage_tests.test_interpolation.TestAffineTransformTextureMemory object at 0x7fd7057fe130>  parameter: {'mode': 'constant', 'order': 1, 'output': 'empty', 'output_shape': None, 'shape': (10, 20), 'theta': 180}>
xp = <module 'cupy' from '/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.Np3X0NVCM9/cupy/cupy/__init__.py'>
scp = <module 'cupyx.scipy' from '/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.Np3X0NVCM9/cupy/cupyx/scipy/__init__.py'>

    @testing.numpy_cupy_allclose(atol=0.1, scipy_name='scp')
    def test_affine_transform_texture_memory(self, xp, scp):
        a = xp.ones(self.shape, dtype=xp.float32)
        center = numpy.divide(numpy.subtract(self.shape, 1), 2)
    
        if len(self.shape) == 2:
            matrix = self._2d_rotation_matrix(self.theta, center)
        elif len(self.shape) == 3:
            matrix = self._3d_rotation_matrix(self.theta, center)
        else:
            return pytest.xfail('Unsupported shape')
    
        if self.output == 'empty':
            output = xp.empty(self.shape, dtype=xp.float32)
            if self.output_shape:
                return pytest.skip('This combination is tested in '
                                   'test_invalid_texture_arguments')
        else:
            output = self.output
    
        if self.output_shape:
            output_shape = (self.output_shape, ) * len(self.shape)
        else:
            output_shape = self.output_shape
    
        if xp == cupy:
            m = cupyx.scipy.ndimage.affine_transform
            matrix = cupy.array(matrix)
>           return m(a, matrix, output_shape=output_shape,
                     output=output, order=self.order,
                     mode=self.mode, texture_memory=True)

tests/cupyx_tests/scipy_tests/ndimage_tests/test_interpolation.py:398: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
cupyx/scipy/ndimage/interpolation.py:376: in affine_transform
    return _texture.affine_transformation(data=input,
cupyx/_texture.py:168: in affine_transformation
    texture_object = _create_texture_object(data,
cupyx/_texture.py:98: in _create_texture_object
    array = texture.CUDAarray(texture_fmt, *data.shape[::-1])
cupy/cuda/texture.pyx:296: in cupy.cuda.texture.CUDAarray.__init__
    self.ptr = runtime.malloc3DArray(desc.ptr, width, height, depth,
cupy_backends/cuda/api/runtime.pyx:593: in cupy_backends.cuda.api.runtime.malloc3DArray
    check_status(status)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

>   raise CUDARuntimeError(status)
E   AssertionError: Only cupy raises error
E   
E   Traceback (most recent call last):
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.Np3X0NVCM9/cupy/cupy/testing/_helper.py", line 47, in _call_func
E       result = impl(self, *args, **kw)
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.Np3X0NVCM9/cupy/tests/cupyx_tests/scipy_tests/ndimage_tests/test_interpolation.py", line 398, in test_affine_transform_texture_memory
E       return m(a, matrix, output_shape=output_shape,
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.Np3X0NVCM9/cupy/cupyx/scipy/ndimage/interpolation.py", line 376, in affine_transform
E       return _texture.affine_transformation(data=input,
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.Np3X0NVCM9/cupy/cupyx/_texture.py", line 168, in affine_transformation
E       texture_object = _create_texture_object(data,
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.Np3X0NVCM9/cupy/cupyx/_texture.py", line 98, in _create_texture_object
E       array = texture.CUDAarray(texture_fmt, *data.shape[::-1])
E     File "cupy/cuda/texture.pyx", line 296, in cupy.cuda.texture.CUDAarray.__init__
E       self.ptr = runtime.malloc3DArray(desc.ptr, width, height, depth,
E     File "cupy_backends/cuda/api/runtime.pyx", line 593, in cupy_backends.cuda.api.runtime.malloc3DArray
E       check_status(status)
E     File "cupy_backends/cuda/api/runtime.pyx", line 265, in cupy_backends.cuda.api.runtime.check_status
E       raise CUDARuntimeError(status)
E   cupy_backends.cuda.api.runtime.CUDARuntimeError: hipErrorUnknown: hipErrorUnknown

cupy_backends/cuda/api/runtime.pyx:265: AssertionError
----------------------------- Captured stderr call -----------------------------
Traceback (most recent call last):
  File "cupy_backends/cuda/api/runtime.pyx", line 644, in cupy_backends.cuda.api.runtime.freeArray
    check_status(status)
  File "cupy_backends/cuda/api/runtime.pyx", line 265, in cupy_backends.cuda.api.runtime.check_status
    raise CUDARuntimeError(status)
cupy_backends.cuda.api.runtime.CUDARuntimeError: hipErrorUnknown: hipErrorUnknown
_ TestAffineTransformTextureMemory.test_affine_transform_texture_memory[_param_167_{mode='constant', order=1, output='empty', output_shape=None, shape=(10, 20), theta=270}] _

self = <<cupyx_tests.scipy_tests.ndimage_tests.test_interpolation.TestAffineTransformTextureMemory object at 0x7fd70667fca0>  parameter: {'mode': 'constant', 'order': 1, 'output': 'empty', 'output_shape': None, 'shape': (10, 20), 'theta': 270}>
xp = <module 'cupy' from '/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.Np3X0NVCM9/cupy/cupy/__init__.py'>
scp = <module 'cupyx.scipy' from '/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.Np3X0NVCM9/cupy/cupyx/scipy/__init__.py'>

    @testing.numpy_cupy_allclose(atol=0.1, scipy_name='scp')
    def test_affine_transform_texture_memory(self, xp, scp):
        a = xp.ones(self.shape, dtype=xp.float32)
        center = numpy.divide(numpy.subtract(self.shape, 1), 2)
    
        if len(self.shape) == 2:
            matrix = self._2d_rotation_matrix(self.theta, center)
        elif len(self.shape) == 3:
            matrix = self._3d_rotation_matrix(self.theta, center)
        else:
            return pytest.xfail('Unsupported shape')
    
        if self.output == 'empty':
            output = xp.empty(self.shape, dtype=xp.float32)
            if self.output_shape:
                return pytest.skip('This combination is tested in '
                                   'test_invalid_texture_arguments')
        else:
            output = self.output
    
        if self.output_shape:
            output_shape = (self.output_shape, ) * len(self.shape)
        else:
            output_shape = self.output_shape
    
        if xp == cupy:
            m = cupyx.scipy.ndimage.affine_transform
            matrix = cupy.array(matrix)
>           return m(a, matrix, output_shape=output_shape,
                     output=output, order=self.order,
                     mode=self.mode, texture_memory=True)

tests/cupyx_tests/scipy_tests/ndimage_tests/test_interpolation.py:398: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
cupyx/scipy/ndimage/interpolation.py:376: in affine_transform
    return _texture.affine_transformation(data=input,
cupyx/_texture.py:168: in affine_transformation
    texture_object = _create_texture_object(data,
cupyx/_texture.py:98: in _create_texture_object
    array = texture.CUDAarray(texture_fmt, *data.shape[::-1])
cupy/cuda/texture.pyx:296: in cupy.cuda.texture.CUDAarray.__init__
    self.ptr = runtime.malloc3DArray(desc.ptr, width, height, depth,
cupy_backends/cuda/api/runtime.pyx:593: in cupy_backends.cuda.api.runtime.malloc3DArray
    check_status(status)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

>   raise CUDARuntimeError(status)
E   AssertionError: Only cupy raises error
E   
E   Traceback (most recent call last):
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.Np3X0NVCM9/cupy/cupy/testing/_helper.py", line 47, in _call_func
E       result = impl(self, *args, **kw)
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.Np3X0NVCM9/cupy/tests/cupyx_tests/scipy_tests/ndimage_tests/test_interpolation.py", line 398, in test_affine_transform_texture_memory
E       return m(a, matrix, output_shape=output_shape,
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.Np3X0NVCM9/cupy/cupyx/scipy/ndimage/interpolation.py", line 376, in affine_transform
E       return _texture.affine_transformation(data=input,
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.Np3X0NVCM9/cupy/cupyx/_texture.py", line 168, in affine_transformation
E       texture_object = _create_texture_object(data,
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.Np3X0NVCM9/cupy/cupyx/_texture.py", line 98, in _create_texture_object
E       array = texture.CUDAarray(texture_fmt, *data.shape[::-1])
E     File "cupy/cuda/texture.pyx", line 296, in cupy.cuda.texture.CUDAarray.__init__
E       self.ptr = runtime.malloc3DArray(desc.ptr, width, height, depth,
E     File "cupy_backends/cuda/api/runtime.pyx", line 593, in cupy_backends.cuda.api.runtime.malloc3DArray
E       check_status(status)
E     File "cupy_backends/cuda/api/runtime.pyx", line 265, in cupy_backends.cuda.api.runtime.check_status
E       raise CUDARuntimeError(status)
E   cupy_backends.cuda.api.runtime.CUDARuntimeError: hipErrorUnknown: hipErrorUnknown

cupy_backends/cuda/api/runtime.pyx:265: AssertionError
----------------------------- Captured stderr call -----------------------------
Traceback (most recent call last):
  File "cupy_backends/cuda/api/runtime.pyx", line 644, in cupy_backends.cuda.api.runtime.freeArray
    check_status(status)
  File "cupy_backends/cuda/api/runtime.pyx", line 265, in cupy_backends.cuda.api.runtime.check_status
    raise CUDARuntimeError(status)
cupy_backends.cuda.api.runtime.CUDARuntimeError: hipErrorUnknown: hipErrorUnknown
_ TestAffineTransformTextureMemory.test_affine_transform_texture_memory[_param_168_{mode='constant', order=1, output='empty', output_shape=None, shape=(10, 10, 10), theta=0}] _

self = <<cupyx_tests.scipy_tests.ndimage_tests.test_interpolation.TestAffineTransformTextureMemory object at 0x7fd705542130>  parameter: {'mode': 'constant', 'order': 1, 'output': 'empty', 'output_shape': None, 'shape': (10, 10, 10), 'theta': 0}>
xp = <module 'cupy' from '/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.Np3X0NVCM9/cupy/cupy/__init__.py'>
scp = <module 'cupyx.scipy' from '/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.Np3X0NVCM9/cupy/cupyx/scipy/__init__.py'>

    @testing.numpy_cupy_allclose(atol=0.1, scipy_name='scp')
    def test_affine_transform_texture_memory(self, xp, scp):
        a = xp.ones(self.shape, dtype=xp.float32)
        center = numpy.divide(numpy.subtract(self.shape, 1), 2)
    
        if len(self.shape) == 2:
            matrix = self._2d_rotation_matrix(self.theta, center)
        elif len(self.shape) == 3:
            matrix = self._3d_rotation_matrix(self.theta, center)
        else:
            return pytest.xfail('Unsupported shape')
    
        if self.output == 'empty':
            output = xp.empty(self.shape, dtype=xp.float32)
            if self.output_shape:
                return pytest.skip('This combination is tested in '
                                   'test_invalid_texture_arguments')
        else:
            output = self.output
    
        if self.output_shape:
            output_shape = (self.output_shape, ) * len(self.shape)
        else:
            output_shape = self.output_shape
    
        if xp == cupy:
            m = cupyx.scipy.ndimage.affine_transform
            matrix = cupy.array(matrix)
>           return m(a, matrix, output_shape=output_shape,
                     output=output, order=self.order,
                     mode=self.mode, texture_memory=True)

tests/cupyx_tests/scipy_tests/ndimage_tests/test_interpolation.py:398: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
cupyx/scipy/ndimage/interpolation.py:376: in affine_transform
    return _texture.affine_transformation(data=input,
cupyx/_texture.py:168: in affine_transformation
    texture_object = _create_texture_object(data,
cupyx/_texture.py:98: in _create_texture_object
    array = texture.CUDAarray(texture_fmt, *data.shape[::-1])
cupy/cuda/texture.pyx:296: in cupy.cuda.texture.CUDAarray.__init__
    self.ptr = runtime.malloc3DArray(desc.ptr, width, height, depth,
cupy_backends/cuda/api/runtime.pyx:593: in cupy_backends.cuda.api.runtime.malloc3DArray
    check_status(status)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

>   raise CUDARuntimeError(status)
E   AssertionError: Only cupy raises error
E   
E   Traceback (most recent call last):
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.Np3X0NVCM9/cupy/cupy/testing/_helper.py", line 47, in _call_func
E       result = impl(self, *args, **kw)
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.Np3X0NVCM9/cupy/tests/cupyx_tests/scipy_tests/ndimage_tests/test_interpolation.py", line 398, in test_affine_transform_texture_memory
E       return m(a, matrix, output_shape=output_shape,
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.Np3X0NVCM9/cupy/cupyx/scipy/ndimage/interpolation.py", line 376, in affine_transform
E       return _texture.affine_transformation(data=input,
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.Np3X0NVCM9/cupy/cupyx/_texture.py", line 168, in affine_transformation
E       texture_object = _create_texture_object(data,
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.Np3X0NVCM9/cupy/cupyx/_texture.py", line 98, in _create_texture_object
E       array = texture.CUDAarray(texture_fmt, *data.shape[::-1])
E     File "cupy/cuda/texture.pyx", line 296, in cupy.cuda.texture.CUDAarray.__init__
E       self.ptr = runtime.malloc3DArray(desc.ptr, width, height, depth,
E     File "cupy_backends/cuda/api/runtime.pyx", line 593, in cupy_backends.cuda.api.runtime.malloc3DArray
E       check_status(status)
E     File "cupy_backends/cuda/api/runtime.pyx", line 265, in cupy_backends.cuda.api.runtime.check_status
E       raise CUDARuntimeError(status)
E   cupy_backends.cuda.api.runtime.CUDARuntimeError: hipErrorUnknown: hipErrorUnknown

cupy_backends/cuda/api/runtime.pyx:265: AssertionError
----------------------------- Captured stderr call -----------------------------
Traceback (most recent call last):
  File "cupy_backends/cuda/api/runtime.pyx", line 644, in cupy_backends.cuda.api.runtime.freeArray
    check_status(status)
  File "cupy_backends/cuda/api/runtime.pyx", line 265, in cupy_backends.cuda.api.runtime.check_status
    raise CUDARuntimeError(status)
cupy_backends.cuda.api.runtime.CUDARuntimeError: hipErrorUnknown: hipErrorUnknown
_ TestAffineTransformTextureMemory.test_affine_transform_texture_memory[_param_169_{mode='constant', order=1, output='empty', output_shape=None, shape=(10, 10, 10), theta=90}] _

self = <<cupyx_tests.scipy_tests.ndimage_tests.test_interpolation.TestAffineTransformTextureMemory object at 0x7fd706585130>  parameter: {'mode': 'constant', 'order': 1, 'output': 'empty', 'output_shape': None, 'shape': (10, 10, 10), 'theta': 90}>
xp = <module 'cupy' from '/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.Np3X0NVCM9/cupy/cupy/__init__.py'>
scp = <module 'cupyx.scipy' from '/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.Np3X0NVCM9/cupy/cupyx/scipy/__init__.py'>

    @testing.numpy_cupy_allclose(atol=0.1, scipy_name='scp')
    def test_affine_transform_texture_memory(self, xp, scp):
        a = xp.ones(self.shape, dtype=xp.float32)
        center = numpy.divide(numpy.subtract(self.shape, 1), 2)
    
        if len(self.shape) == 2:
            matrix = self._2d_rotation_matrix(self.theta, center)
        elif len(self.shape) == 3:
            matrix = self._3d_rotation_matrix(self.theta, center)
        else:
            return pytest.xfail('Unsupported shape')
    
        if self.output == 'empty':
            output = xp.empty(self.shape, dtype=xp.float32)
            if self.output_shape:
                return pytest.skip('This combination is tested in '
                                   'test_invalid_texture_arguments')
        else:
            output = self.output
    
        if self.output_shape:
            output_shape = (self.output_shape, ) * len(self.shape)
        else:
            output_shape = self.output_shape
    
        if xp == cupy:
            m = cupyx.scipy.ndimage.affine_transform
            matrix = cupy.array(matrix)
>           return m(a, matrix, output_shape=output_shape,
                     output=output, order=self.order,
                     mode=self.mode, texture_memory=True)

tests/cupyx_tests/scipy_tests/ndimage_tests/test_interpolation.py:398: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
cupyx/scipy/ndimage/interpolation.py:376: in affine_transform
    return _texture.affine_transformation(data=input,
cupyx/_texture.py:168: in affine_transformation
    texture_object = _create_texture_object(data,
cupyx/_texture.py:98: in _create_texture_object
    array = texture.CUDAarray(texture_fmt, *data.shape[::-1])
cupy/cuda/texture.pyx:296: in cupy.cuda.texture.CUDAarray.__init__
    self.ptr = runtime.malloc3DArray(desc.ptr, width, height, depth,
cupy_backends/cuda/api/runtime.pyx:593: in cupy_backends.cuda.api.runtime.malloc3DArray
    check_status(status)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

>   raise CUDARuntimeError(status)
E   AssertionError: Only cupy raises error
E   
E   Traceback (most recent call last):
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.Np3X0NVCM9/cupy/cupy/testing/_helper.py", line 47, in _call_func
E       result = impl(self, *args, **kw)
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.Np3X0NVCM9/cupy/tests/cupyx_tests/scipy_tests/ndimage_tests/test_interpolation.py", line 398, in test_affine_transform_texture_memory
E       return m(a, matrix, output_shape=output_shape,
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.Np3X0NVCM9/cupy/cupyx/scipy/ndimage/interpolation.py", line 376, in affine_transform
E       return _texture.affine_transformation(data=input,
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.Np3X0NVCM9/cupy/cupyx/_texture.py", line 168, in affine_transformation
E       texture_object = _create_texture_object(data,
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.Np3X0NVCM9/cupy/cupyx/_texture.py", line 98, in _create_texture_object
E       array = texture.CUDAarray(texture_fmt, *data.shape[::-1])
E     File "cupy/cuda/texture.pyx", line 296, in cupy.cuda.texture.CUDAarray.__init__
E       self.ptr = runtime.malloc3DArray(desc.ptr, width, height, depth,
E     File "cupy_backends/cuda/api/runtime.pyx", line 593, in cupy_backends.cuda.api.runtime.malloc3DArray
E       check_status(status)
E     File "cupy_backends/cuda/api/runtime.pyx", line 265, in cupy_backends.cuda.api.runtime.check_status
E       raise CUDARuntimeError(status)
E   cupy_backends.cuda.api.runtime.CUDARuntimeError: hipErrorUnknown: hipErrorUnknown

cupy_backends/cuda/api/runtime.pyx:265: AssertionError
----------------------------- Captured stderr call -----------------------------
Traceback (most recent call last):
  File "cupy_backends/cuda/api/runtime.pyx", line 644, in cupy_backends.cuda.api.runtime.freeArray
    check_status(status)
  File "cupy_backends/cuda/api/runtime.pyx", line 265, in cupy_backends.cuda.api.runtime.check_status
    raise CUDARuntimeError(status)
cupy_backends.cuda.api.runtime.CUDARuntimeError: hipErrorUnknown: hipErrorUnknown
_ TestAffineTransformTextureMemory.test_affine_transform_texture_memory[_param_170_{mode='constant', order=1, output='empty', output_shape=None, shape=(10, 10, 10), theta=180}] _

self = <<cupyx_tests.scipy_tests.ndimage_tests.test_interpolation.TestAffineTransformTextureMemory object at 0x7fd7059ab550> ...ameter: {'mode': 'constant', 'order': 1, 'output': 'empty', 'output_shape': None, 'shape': (10, 10, 10), 'theta': 180}>
xp = <module 'cupy' from '/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.Np3X0NVCM9/cupy/cupy/__init__.py'>
scp = <module 'cupyx.scipy' from '/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.Np3X0NVCM9/cupy/cupyx/scipy/__init__.py'>

    @testing.numpy_cupy_allclose(atol=0.1, scipy_name='scp')
    def test_affine_transform_texture_memory(self, xp, scp):
        a = xp.ones(self.shape, dtype=xp.float32)
        center = numpy.divide(numpy.subtract(self.shape, 1), 2)
    
        if len(self.shape) == 2:
            matrix = self._2d_rotation_matrix(self.theta, center)
        elif len(self.shape) == 3:
            matrix = self._3d_rotation_matrix(self.theta, center)
        else:
            return pytest.xfail('Unsupported shape')
    
        if self.output == 'empty':
            output = xp.empty(self.shape, dtype=xp.float32)
            if self.output_shape:
                return pytest.skip('This combination is tested in '
                                   'test_invalid_texture_arguments')
        else:
            output = self.output
    
        if self.output_shape:
            output_shape = (self.output_shape, ) * len(self.shape)
        else:
            output_shape = self.output_shape
    
        if xp == cupy:
            m = cupyx.scipy.ndimage.affine_transform
            matrix = cupy.array(matrix)
>           return m(a, matrix, output_shape=output_shape,
                     output=output, order=self.order,
                     mode=self.mode, texture_memory=True)

tests/cupyx_tests/scipy_tests/ndimage_tests/test_interpolation.py:398: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
cupyx/scipy/ndimage/interpolation.py:376: in affine_transform
    return _texture.affine_transformation(data=input,
cupyx/_texture.py:168: in affine_transformation
    texture_object = _create_texture_object(data,
cupyx/_texture.py:98: in _create_texture_object
    array = texture.CUDAarray(texture_fmt, *data.shape[::-1])
cupy/cuda/texture.pyx:296: in cupy.cuda.texture.CUDAarray.__init__
    self.ptr = runtime.malloc3DArray(desc.ptr, width, height, depth,
cupy_backends/cuda/api/runtime.pyx:593: in cupy_backends.cuda.api.runtime.malloc3DArray
    check_status(status)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

>   raise CUDARuntimeError(status)
E   AssertionError: Only cupy raises error
E   
E   Traceback (most recent call last):
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.Np3X0NVCM9/cupy/cupy/testing/_helper.py", line 47, in _call_func
E       result = impl(self, *args, **kw)
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.Np3X0NVCM9/cupy/tests/cupyx_tests/scipy_tests/ndimage_tests/test_interpolation.py", line 398, in test_affine_transform_texture_memory
E       return m(a, matrix, output_shape=output_shape,
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.Np3X0NVCM9/cupy/cupyx/scipy/ndimage/interpolation.py", line 376, in affine_transform
E       return _texture.affine_transformation(data=input,
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.Np3X0NVCM9/cupy/cupyx/_texture.py", line 168, in affine_transformation
E       texture_object = _create_texture_object(data,
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.Np3X0NVCM9/cupy/cupyx/_texture.py", line 98, in _create_texture_object
E       array = texture.CUDAarray(texture_fmt, *data.shape[::-1])
E     File "cupy/cuda/texture.pyx", line 296, in cupy.cuda.texture.CUDAarray.__init__
E       self.ptr = runtime.malloc3DArray(desc.ptr, width, height, depth,
E     File "cupy_backends/cuda/api/runtime.pyx", line 593, in cupy_backends.cuda.api.runtime.malloc3DArray
E       check_status(status)
E     File "cupy_backends/cuda/api/runtime.pyx", line 265, in cupy_backends.cuda.api.runtime.check_status
E       raise CUDARuntimeError(status)
E   cupy_backends.cuda.api.runtime.CUDARuntimeError: hipErrorUnknown: hipErrorUnknown

cupy_backends/cuda/api/runtime.pyx:265: AssertionError
----------------------------- Captured stderr call -----------------------------
Traceback (most recent call last):
  File "cupy_backends/cuda/api/runtime.pyx", line 644, in cupy_backends.cuda.api.runtime.freeArray
    check_status(status)
  File "cupy_backends/cuda/api/runtime.pyx", line 265, in cupy_backends.cuda.api.runtime.check_status
    raise CUDARuntimeError(status)
cupy_backends.cuda.api.runtime.CUDARuntimeError: hipErrorUnknown: hipErrorUnknown
_ TestAffineTransformTextureMemory.test_affine_transform_texture_memory[_param_171_{mode='constant', order=1, output='empty', output_shape=None, shape=(10, 10, 10), theta=270}] _

self = <<cupyx_tests.scipy_tests.ndimage_tests.test_interpolation.TestAffineTransformTextureMemory object at 0x7fd7073e94f0> ...ameter: {'mode': 'constant', 'order': 1, 'output': 'empty', 'output_shape': None, 'shape': (10, 10, 10), 'theta': 270}>
xp = <module 'cupy' from '/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.Np3X0NVCM9/cupy/cupy/__init__.py'>
scp = <module 'cupyx.scipy' from '/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.Np3X0NVCM9/cupy/cupyx/scipy/__init__.py'>

    @testing.numpy_cupy_allclose(atol=0.1, scipy_name='scp')
    def test_affine_transform_texture_memory(self, xp, scp):
        a = xp.ones(self.shape, dtype=xp.float32)
        center = numpy.divide(numpy.subtract(self.shape, 1), 2)
    
        if len(self.shape) == 2:
            matrix = self._2d_rotation_matrix(self.theta, center)
        elif len(self.shape) == 3:
            matrix = self._3d_rotation_matrix(self.theta, center)
        else:
            return pytest.xfail('Unsupported shape')
    
        if self.output == 'empty':
            output = xp.empty(self.shape, dtype=xp.float32)
            if self.output_shape:
                return pytest.skip('This combination is tested in '
                                   'test_invalid_texture_arguments')
        else:
            output = self.output
    
        if self.output_shape:
            output_shape = (self.output_shape, ) * len(self.shape)
        else:
            output_shape = self.output_shape
    
        if xp == cupy:
            m = cupyx.scipy.ndimage.affine_transform
            matrix = cupy.array(matrix)
>           return m(a, matrix, output_shape=output_shape,
                     output=output, order=self.order,
                     mode=self.mode, texture_memory=True)

tests/cupyx_tests/scipy_tests/ndimage_tests/test_interpolation.py:398: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
cupyx/scipy/ndimage/interpolation.py:376: in affine_transform
    return _texture.affine_transformation(data=input,
cupyx/_texture.py:168: in affine_transformation
    texture_object = _create_texture_object(data,
cupyx/_texture.py:98: in _create_texture_object
    array = texture.CUDAarray(texture_fmt, *data.shape[::-1])
cupy/cuda/texture.pyx:296: in cupy.cuda.texture.CUDAarray.__init__
    self.ptr = runtime.malloc3DArray(desc.ptr, width, height, depth,
cupy_backends/cuda/api/runtime.pyx:593: in cupy_backends.cuda.api.runtime.malloc3DArray
    check_status(status)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

>   raise CUDARuntimeError(status)
E   AssertionError: Only cupy raises error
E   
E   Traceback (most recent call last):
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.Np3X0NVCM9/cupy/cupy/testing/_helper.py", line 47, in _call_func
E       result = impl(self, *args, **kw)
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.Np3X0NVCM9/cupy/tests/cupyx_tests/scipy_tests/ndimage_tests/test_interpolation.py", line 398, in test_affine_transform_texture_memory
E       return m(a, matrix, output_shape=output_shape,
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.Np3X0NVCM9/cupy/cupyx/scipy/ndimage/interpolation.py", line 376, in affine_transform
E       return _texture.affine_transformation(data=input,
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.Np3X0NVCM9/cupy/cupyx/_texture.py", line 168, in affine_transformation
E       texture_object = _create_texture_object(data,
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.Np3X0NVCM9/cupy/cupyx/_texture.py", line 98, in _create_texture_object
E       array = texture.CUDAarray(texture_fmt, *data.shape[::-1])
E     File "cupy/cuda/texture.pyx", line 296, in cupy.cuda.texture.CUDAarray.__init__
E       self.ptr = runtime.malloc3DArray(desc.ptr, width, height, depth,
E     File "cupy_backends/cuda/api/runtime.pyx", line 593, in cupy_backends.cuda.api.runtime.malloc3DArray
E       check_status(status)
E     File "cupy_backends/cuda/api/runtime.pyx", line 265, in cupy_backends.cuda.api.runtime.check_status
E       raise CUDARuntimeError(status)
E   cupy_backends.cuda.api.runtime.CUDARuntimeError: hipErrorUnknown: hipErrorUnknown

cupy_backends/cuda/api/runtime.pyx:265: AssertionError
----------------------------- Captured stderr call -----------------------------
Traceback (most recent call last):
  File "cupy_backends/cuda/api/runtime.pyx", line 644, in cupy_backends.cuda.api.runtime.freeArray
    check_status(status)
  File "cupy_backends/cuda/api/runtime.pyx", line 265, in cupy_backends.cuda.api.runtime.check_status
    raise CUDARuntimeError(status)
cupy_backends.cuda.api.runtime.CUDARuntimeError: hipErrorUnknown: hipErrorUnknown
_ TestAffineTransformTextureMemory.test_affine_transform_texture_memory[_param_172_{mode='constant', order=1, output='empty', output_shape=None, shape=(10, 20, 30), theta=0}] _

self = <<cupyx_tests.scipy_tests.ndimage_tests.test_interpolation.TestAffineTransformTextureMemory object at 0x7fd7059d4310>  parameter: {'mode': 'constant', 'order': 1, 'output': 'empty', 'output_shape': None, 'shape': (10, 20, 30), 'theta': 0}>
xp = <module 'cupy' from '/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.Np3X0NVCM9/cupy/cupy/__init__.py'>
scp = <module 'cupyx.scipy' from '/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.Np3X0NVCM9/cupy/cupyx/scipy/__init__.py'>

    @testing.numpy_cupy_allclose(atol=0.1, scipy_name='scp')
    def test_affine_transform_texture_memory(self, xp, scp):
        a = xp.ones(self.shape, dtype=xp.float32)
        center = numpy.divide(numpy.subtract(self.shape, 1), 2)
    
        if len(self.shape) == 2:
            matrix = self._2d_rotation_matrix(self.theta, center)
        elif len(self.shape) == 3:
            matrix = self._3d_rotation_matrix(self.theta, center)
        else:
            return pytest.xfail('Unsupported shape')
    
        if self.output == 'empty':
            output = xp.empty(self.shape, dtype=xp.float32)
            if self.output_shape:
                return pytest.skip('This combination is tested in '
                                   'test_invalid_texture_arguments')
        else:
            output = self.output
    
        if self.output_shape:
            output_shape = (self.output_shape, ) * len(self.shape)
        else:
            output_shape = self.output_shape
    
        if xp == cupy:
            m = cupyx.scipy.ndimage.affine_transform
            matrix = cupy.array(matrix)
>           return m(a, matrix, output_shape=output_shape,
                     output=output, order=self.order,
                     mode=self.mode, texture_memory=True)

tests/cupyx_tests/scipy_tests/ndimage_tests/test_interpolation.py:398: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
cupyx/scipy/ndimage/interpolation.py:376: in affine_transform
    return _texture.affine_transformation(data=input,
cupyx/_texture.py:168: in affine_transformation
    texture_object = _create_texture_object(data,
cupyx/_texture.py:98: in _create_texture_object
    array = texture.CUDAarray(texture_fmt, *data.shape[::-1])
cupy/cuda/texture.pyx:296: in cupy.cuda.texture.CUDAarray.__init__
    self.ptr = runtime.malloc3DArray(desc.ptr, width, height, depth,
cupy_backends/cuda/api/runtime.pyx:593: in cupy_backends.cuda.api.runtime.malloc3DArray
    check_status(status)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

>   raise CUDARuntimeError(status)
E   AssertionError: Only cupy raises error
E   
E   Traceback (most recent call last):
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.Np3X0NVCM9/cupy/cupy/testing/_helper.py", line 47, in _call_func
E       result = impl(self, *args, **kw)
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.Np3X0NVCM9/cupy/tests/cupyx_tests/scipy_tests/ndimage_tests/test_interpolation.py", line 398, in test_affine_transform_texture_memory
E       return m(a, matrix, output_shape=output_shape,
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.Np3X0NVCM9/cupy/cupyx/scipy/ndimage/interpolation.py", line 376, in affine_transform
E       return _texture.affine_transformation(data=input,
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.Np3X0NVCM9/cupy/cupyx/_texture.py", line 168, in affine_transformation
E       texture_object = _create_texture_object(data,
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.Np3X0NVCM9/cupy/cupyx/_texture.py", line 98, in _create_texture_object
E       array = texture.CUDAarray(texture_fmt, *data.shape[::-1])
E     File "cupy/cuda/texture.pyx", line 296, in cupy.cuda.texture.CUDAarray.__init__
E       self.ptr = runtime.malloc3DArray(desc.ptr, width, height, depth,
E     File "cupy_backends/cuda/api/runtime.pyx", line 593, in cupy_backends.cuda.api.runtime.malloc3DArray
E       check_status(status)
E     File "cupy_backends/cuda/api/runtime.pyx", line 265, in cupy_backends.cuda.api.runtime.check_status
E       raise CUDARuntimeError(status)
E   cupy_backends.cuda.api.runtime.CUDARuntimeError: hipErrorUnknown: hipErrorUnknown

cupy_backends/cuda/api/runtime.pyx:265: AssertionError
----------------------------- Captured stderr call -----------------------------
Traceback (most recent call last):
  File "cupy_backends/cuda/api/runtime.pyx", line 644, in cupy_backends.cuda.api.runtime.freeArray
    check_status(status)
  File "cupy_backends/cuda/api/runtime.pyx", line 265, in cupy_backends.cuda.api.runtime.check_status
    raise CUDARuntimeError(status)
cupy_backends.cuda.api.runtime.CUDARuntimeError: hipErrorUnknown: hipErrorUnknown
_ TestAffineTransformTextureMemory.test_affine_transform_texture_memory[_param_173_{mode='constant', order=1, output='empty', output_shape=None, shape=(10, 20, 30), theta=90}] _

self = <<cupyx_tests.scipy_tests.ndimage_tests.test_interpolation.TestAffineTransformTextureMemory object at 0x7fd7079339a0>  parameter: {'mode': 'constant', 'order': 1, 'output': 'empty', 'output_shape': None, 'shape': (10, 20, 30), 'theta': 90}>
xp = <module 'cupy' from '/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.Np3X0NVCM9/cupy/cupy/__init__.py'>
scp = <module 'cupyx.scipy' from '/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.Np3X0NVCM9/cupy/cupyx/scipy/__init__.py'>

    @testing.numpy_cupy_allclose(atol=0.1, scipy_name='scp')
    def test_affine_transform_texture_memory(self, xp, scp):
        a = xp.ones(self.shape, dtype=xp.float32)
        center = numpy.divide(numpy.subtract(self.shape, 1), 2)
    
        if len(self.shape) == 2:
            matrix = self._2d_rotation_matrix(self.theta, center)
        elif len(self.shape) == 3:
            matrix = self._3d_rotation_matrix(self.theta, center)
        else:
            return pytest.xfail('Unsupported shape')
    
        if self.output == 'empty':
            output = xp.empty(self.shape, dtype=xp.float32)
            if self.output_shape:
                return pytest.skip('This combination is tested in '
                                   'test_invalid_texture_arguments')
        else:
            output = self.output
    
        if self.output_shape:
            output_shape = (self.output_shape, ) * len(self.shape)
        else:
            output_shape = self.output_shape
    
        if xp == cupy:
            m = cupyx.scipy.ndimage.affine_transform
            matrix = cupy.array(matrix)
>           return m(a, matrix, output_shape=output_shape,
                     output=output, order=self.order,
                     mode=self.mode, texture_memory=True)

tests/cupyx_tests/scipy_tests/ndimage_tests/test_interpolation.py:398: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
cupyx/scipy/ndimage/interpolation.py:376: in affine_transform
    return _texture.affine_transformation(data=input,
cupyx/_texture.py:168: in affine_transformation
    texture_object = _create_texture_object(data,
cupyx/_texture.py:98: in _create_texture_object
    array = texture.CUDAarray(texture_fmt, *data.shape[::-1])
cupy/cuda/texture.pyx:296: in cupy.cuda.texture.CUDAarray.__init__
    self.ptr = runtime.malloc3DArray(desc.ptr, width, height, depth,
cupy_backends/cuda/api/runtime.pyx:593: in cupy_backends.cuda.api.runtime.malloc3DArray
    check_status(status)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

>   raise CUDARuntimeError(status)
E   AssertionError: Only cupy raises error
E   
E   Traceback (most recent call last):
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.Np3X0NVCM9/cupy/cupy/testing/_helper.py", line 47, in _call_func
E       result = impl(self, *args, **kw)
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.Np3X0NVCM9/cupy/tests/cupyx_tests/scipy_tests/ndimage_tests/test_interpolation.py", line 398, in test_affine_transform_texture_memory
E       return m(a, matrix, output_shape=output_shape,
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.Np3X0NVCM9/cupy/cupyx/scipy/ndimage/interpolation.py", line 376, in affine_transform
E       return _texture.affine_transformation(data=input,
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.Np3X0NVCM9/cupy/cupyx/_texture.py", line 168, in affine_transformation
E       texture_object = _create_texture_object(data,
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.Np3X0NVCM9/cupy/cupyx/_texture.py", line 98, in _create_texture_object
E       array = texture.CUDAarray(texture_fmt, *data.shape[::-1])
E     File "cupy/cuda/texture.pyx", line 296, in cupy.cuda.texture.CUDAarray.__init__
E       self.ptr = runtime.malloc3DArray(desc.ptr, width, height, depth,
E     File "cupy_backends/cuda/api/runtime.pyx", line 593, in cupy_backends.cuda.api.runtime.malloc3DArray
E       check_status(status)
E     File "cupy_backends/cuda/api/runtime.pyx", line 265, in cupy_backends.cuda.api.runtime.check_status
E       raise CUDARuntimeError(status)
E   cupy_backends.cuda.api.runtime.CUDARuntimeError: hipErrorUnknown: hipErrorUnknown

cupy_backends/cuda/api/runtime.pyx:265: AssertionError
----------------------------- Captured stderr call -----------------------------
Traceback (most recent call last):
  File "cupy_backends/cuda/api/runtime.pyx", line 644, in cupy_backends.cuda.api.runtime.freeArray
    check_status(status)
  File "cupy_backends/cuda/api/runtime.pyx", line 265, in cupy_backends.cuda.api.runtime.check_status
    raise CUDARuntimeError(status)
cupy_backends.cuda.api.runtime.CUDARuntimeError: hipErrorUnknown: hipErrorUnknown
_ TestAffineTransformTextureMemory.test_affine_transform_texture_memory[_param_174_{mode='constant', order=1, output='empty', output_shape=None, shape=(10, 20, 30), theta=180}] _

self = <<cupyx_tests.scipy_tests.ndimage_tests.test_interpolation.TestAffineTransformTextureMemory object at 0x7fd70570d820> ...ameter: {'mode': 'constant', 'order': 1, 'output': 'empty', 'output_shape': None, 'shape': (10, 20, 30), 'theta': 180}>
xp = <module 'cupy' from '/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.Np3X0NVCM9/cupy/cupy/__init__.py'>
scp = <module 'cupyx.scipy' from '/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.Np3X0NVCM9/cupy/cupyx/scipy/__init__.py'>

    @testing.numpy_cupy_allclose(atol=0.1, scipy_name='scp')
    def test_affine_transform_texture_memory(self, xp, scp):
        a = xp.ones(self.shape, dtype=xp.float32)
        center = numpy.divide(numpy.subtract(self.shape, 1), 2)
    
        if len(self.shape) == 2:
            matrix = self._2d_rotation_matrix(self.theta, center)
        elif len(self.shape) == 3:
            matrix = self._3d_rotation_matrix(self.theta, center)
        else:
            return pytest.xfail('Unsupported shape')
    
        if self.output == 'empty':
            output = xp.empty(self.shape, dtype=xp.float32)
            if self.output_shape:
                return pytest.skip('This combination is tested in '
                                   'test_invalid_texture_arguments')
        else:
            output = self.output
    
        if self.output_shape:
            output_shape = (self.output_shape, ) * len(self.shape)
        else:
            output_shape = self.output_shape
    
        if xp == cupy:
            m = cupyx.scipy.ndimage.affine_transform
            matrix = cupy.array(matrix)
>           return m(a, matrix, output_shape=output_shape,
                     output=output, order=self.order,
                     mode=self.mode, texture_memory=True)

tests/cupyx_tests/scipy_tests/ndimage_tests/test_interpolation.py:398: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
cupyx/scipy/ndimage/interpolation.py:376: in affine_transform
    return _texture.affine_transformation(data=input,
cupyx/_texture.py:168: in affine_transformation
    texture_object = _create_texture_object(data,
cupyx/_texture.py:98: in _create_texture_object
    array = texture.CUDAarray(texture_fmt, *data.shape[::-1])
cupy/cuda/texture.pyx:296: in cupy.cuda.texture.CUDAarray.__init__
    self.ptr = runtime.malloc3DArray(desc.ptr, width, height, depth,
cupy_backends/cuda/api/runtime.pyx:593: in cupy_backends.cuda.api.runtime.malloc3DArray
    check_status(status)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

>   raise CUDARuntimeError(status)
E   AssertionError: Only cupy raises error
E   
E   Traceback (most recent call last):
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.Np3X0NVCM9/cupy/cupy/testing/_helper.py", line 47, in _call_func
E       result = impl(self, *args, **kw)
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.Np3X0NVCM9/cupy/tests/cupyx_tests/scipy_tests/ndimage_tests/test_interpolation.py", line 398, in test_affine_transform_texture_memory
E       return m(a, matrix, output_shape=output_shape,
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.Np3X0NVCM9/cupy/cupyx/scipy/ndimage/interpolation.py", line 376, in affine_transform
E       return _texture.affine_transformation(data=input,
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.Np3X0NVCM9/cupy/cupyx/_texture.py", line 168, in affine_transformation
E       texture_object = _create_texture_object(data,
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.Np3X0NVCM9/cupy/cupyx/_texture.py", line 98, in _create_texture_object
E       array = texture.CUDAarray(texture_fmt, *data.shape[::-1])
E     File "cupy/cuda/texture.pyx", line 296, in cupy.cuda.texture.CUDAarray.__init__
E       self.ptr = runtime.malloc3DArray(desc.ptr, width, height, depth,
E     File "cupy_backends/cuda/api/runtime.pyx", line 593, in cupy_backends.cuda.api.runtime.malloc3DArray
E       check_status(status)
E     File "cupy_backends/cuda/api/runtime.pyx", line 265, in cupy_backends.cuda.api.runtime.check_status
E       raise CUDARuntimeError(status)
E   cupy_backends.cuda.api.runtime.CUDARuntimeError: hipErrorUnknown: hipErrorUnknown

cupy_backends/cuda/api/runtime.pyx:265: AssertionError
----------------------------- Captured stderr call -----------------------------
Traceback (most recent call last):
  File "cupy_backends/cuda/api/runtime.pyx", line 644, in cupy_backends.cuda.api.runtime.freeArray
    check_status(status)
  File "cupy_backends/cuda/api/runtime.pyx", line 265, in cupy_backends.cuda.api.runtime.check_status
    raise CUDARuntimeError(status)
cupy_backends.cuda.api.runtime.CUDARuntimeError: hipErrorUnknown: hipErrorUnknown
_ TestAffineTransformTextureMemory.test_affine_transform_texture_memory[_param_175_{mode='constant', order=1, output='empty', output_shape=None, shape=(10, 20, 30), theta=270}] _

self = <<cupyx_tests.scipy_tests.ndimage_tests.test_interpolation.TestAffineTransformTextureMemory object at 0x7fd708440ac0> ...ameter: {'mode': 'constant', 'order': 1, 'output': 'empty', 'output_shape': None, 'shape': (10, 20, 30), 'theta': 270}>
xp = <module 'cupy' from '/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.Np3X0NVCM9/cupy/cupy/__init__.py'>
scp = <module 'cupyx.scipy' from '/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.Np3X0NVCM9/cupy/cupyx/scipy/__init__.py'>

    @testing.numpy_cupy_allclose(atol=0.1, scipy_name='scp')
    def test_affine_transform_texture_memory(self, xp, scp):
        a = xp.ones(self.shape, dtype=xp.float32)
        center = numpy.divide(numpy.subtract(self.shape, 1), 2)
    
        if len(self.shape) == 2:
            matrix = self._2d_rotation_matrix(self.theta, center)
        elif len(self.shape) == 3:
            matrix = self._3d_rotation_matrix(self.theta, center)
        else:
            return pytest.xfail('Unsupported shape')
    
        if self.output == 'empty':
            output = xp.empty(self.shape, dtype=xp.float32)
            if self.output_shape:
                return pytest.skip('This combination is tested in '
                                   'test_invalid_texture_arguments')
        else:
            output = self.output
    
        if self.output_shape:
            output_shape = (self.output_shape, ) * len(self.shape)
        else:
            output_shape = self.output_shape
    
        if xp == cupy:
            m = cupyx.scipy.ndimage.affine_transform
            matrix = cupy.array(matrix)
>           return m(a, matrix, output_shape=output_shape,
                     output=output, order=self.order,
                     mode=self.mode, texture_memory=True)

tests/cupyx_tests/scipy_tests/ndimage_tests/test_interpolation.py:398: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
cupyx/scipy/ndimage/interpolation.py:376: in affine_transform
    return _texture.affine_transformation(data=input,
cupyx/_texture.py:168: in affine_transformation
    texture_object = _create_texture_object(data,
cupyx/_texture.py:98: in _create_texture_object
    array = texture.CUDAarray(texture_fmt, *data.shape[::-1])
cupy/cuda/texture.pyx:296: in cupy.cuda.texture.CUDAarray.__init__
    self.ptr = runtime.malloc3DArray(desc.ptr, width, height, depth,
cupy_backends/cuda/api/runtime.pyx:593: in cupy_backends.cuda.api.runtime.malloc3DArray
    check_status(status)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

>   raise CUDARuntimeError(status)
E   AssertionError: Only cupy raises error
E   
E   Traceback (most recent call last):
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.Np3X0NVCM9/cupy/cupy/testing/_helper.py", line 47, in _call_func
E       result = impl(self, *args, **kw)
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.Np3X0NVCM9/cupy/tests/cupyx_tests/scipy_tests/ndimage_tests/test_interpolation.py", line 398, in test_affine_transform_texture_memory
E       return m(a, matrix, output_shape=output_shape,
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.Np3X0NVCM9/cupy/cupyx/scipy/ndimage/interpolation.py", line 376, in affine_transform
E       return _texture.affine_transformation(data=input,
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.Np3X0NVCM9/cupy/cupyx/_texture.py", line 168, in affine_transformation
E       texture_object = _create_texture_object(data,
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.Np3X0NVCM9/cupy/cupyx/_texture.py", line 98, in _create_texture_object
E       array = texture.CUDAarray(texture_fmt, *data.shape[::-1])
E     File "cupy/cuda/texture.pyx", line 296, in cupy.cuda.texture.CUDAarray.__init__
E       self.ptr = runtime.malloc3DArray(desc.ptr, width, height, depth,
E     File "cupy_backends/cuda/api/runtime.pyx", line 593, in cupy_backends.cuda.api.runtime.malloc3DArray
E       check_status(status)
E     File "cupy_backends/cuda/api/runtime.pyx", line 265, in cupy_backends.cuda.api.runtime.check_status
E       raise CUDARuntimeError(status)
E   cupy_backends.cuda.api.runtime.CUDARuntimeError: hipErrorUnknown: hipErrorUnknown

cupy_backends/cuda/api/runtime.pyx:265: AssertionError
----------------------------- Captured stderr call -----------------------------
Traceback (most recent call last):
  File "cupy_backends/cuda/api/runtime.pyx", line 644, in cupy_backends.cuda.api.runtime.freeArray
    check_status(status)
  File "cupy_backends/cuda/api/runtime.pyx", line 265, in cupy_backends.cuda.api.runtime.check_status
    raise CUDARuntimeError(status)
cupy_backends.cuda.api.runtime.CUDARuntimeError: hipErrorUnknown: hipErrorUnknown
_ TestAffineTransformTextureMemory.test_affine_transform_texture_memory[_param_192_{mode='nearest', order=0, output=None, output_shape=None, shape=(100, 100), theta=0}] _

self = <<cupyx_tests.scipy_tests.ndimage_tests.test_interpolation.TestAffineTransformTextureMemory object at 0x7fd7064f8490>  parameter: {'mode': 'nearest', 'order': 0, 'output': None, 'output_shape': None, 'shape': (100, 100), 'theta': 0}>
xp = <module 'cupy' from '/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.Np3X0NVCM9/cupy/cupy/__init__.py'>
scp = <module 'cupyx.scipy' from '/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.Np3X0NVCM9/cupy/cupyx/scipy/__init__.py'>

    @testing.numpy_cupy_allclose(atol=0.1, scipy_name='scp')
    def test_affine_transform_texture_memory(self, xp, scp):
        a = xp.ones(self.shape, dtype=xp.float32)
        center = numpy.divide(numpy.subtract(self.shape, 1), 2)
    
        if len(self.shape) == 2:
            matrix = self._2d_rotation_matrix(self.theta, center)
        elif len(self.shape) == 3:
            matrix = self._3d_rotation_matrix(self.theta, center)
        else:
            return pytest.xfail('Unsupported shape')
    
        if self.output == 'empty':
            output = xp.empty(self.shape, dtype=xp.float32)
            if self.output_shape:
                return pytest.skip('This combination is tested in '
                                   'test_invalid_texture_arguments')
        else:
            output = self.output
    
        if self.output_shape:
            output_shape = (self.output_shape, ) * len(self.shape)
        else:
            output_shape = self.output_shape
    
        if xp == cupy:
            m = cupyx.scipy.ndimage.affine_transform
            matrix = cupy.array(matrix)
>           return m(a, matrix, output_shape=output_shape,
                     output=output, order=self.order,
                     mode=self.mode, texture_memory=True)

tests/cupyx_tests/scipy_tests/ndimage_tests/test_interpolation.py:398: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
cupyx/scipy/ndimage/interpolation.py:376: in affine_transform
    return _texture.affine_transformation(data=input,
cupyx/_texture.py:168: in affine_transformation
    texture_object = _create_texture_object(data,
cupyx/_texture.py:98: in _create_texture_object
    array = texture.CUDAarray(texture_fmt, *data.shape[::-1])
cupy/cuda/texture.pyx:296: in cupy.cuda.texture.CUDAarray.__init__
    self.ptr = runtime.malloc3DArray(desc.ptr, width, height, depth,
cupy_backends/cuda/api/runtime.pyx:593: in cupy_backends.cuda.api.runtime.malloc3DArray
    check_status(status)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

>   raise CUDARuntimeError(status)
E   AssertionError: Only cupy raises error
E   
E   Traceback (most recent call last):
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.Np3X0NVCM9/cupy/cupy/testing/_helper.py", line 47, in _call_func
E       result = impl(self, *args, **kw)
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.Np3X0NVCM9/cupy/tests/cupyx_tests/scipy_tests/ndimage_tests/test_interpolation.py", line 398, in test_affine_transform_texture_memory
E       return m(a, matrix, output_shape=output_shape,
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.Np3X0NVCM9/cupy/cupyx/scipy/ndimage/interpolation.py", line 376, in affine_transform
E       return _texture.affine_transformation(data=input,
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.Np3X0NVCM9/cupy/cupyx/_texture.py", line 168, in affine_transformation
E       texture_object = _create_texture_object(data,
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.Np3X0NVCM9/cupy/cupyx/_texture.py", line 98, in _create_texture_object
E       array = texture.CUDAarray(texture_fmt, *data.shape[::-1])
E     File "cupy/cuda/texture.pyx", line 296, in cupy.cuda.texture.CUDAarray.__init__
E       self.ptr = runtime.malloc3DArray(desc.ptr, width, height, depth,
E     File "cupy_backends/cuda/api/runtime.pyx", line 593, in cupy_backends.cuda.api.runtime.malloc3DArray
E       check_status(status)
E     File "cupy_backends/cuda/api/runtime.pyx", line 265, in cupy_backends.cuda.api.runtime.check_status
E       raise CUDARuntimeError(status)
E   cupy_backends.cuda.api.runtime.CUDARuntimeError: hipErrorUnknown: hipErrorUnknown

cupy_backends/cuda/api/runtime.pyx:265: AssertionError
----------------------------- Captured stderr call -----------------------------
Traceback (most recent call last):
  File "cupy_backends/cuda/api/runtime.pyx", line 644, in cupy_backends.cuda.api.runtime.freeArray
    check_status(status)
  File "cupy_backends/cuda/api/runtime.pyx", line 265, in cupy_backends.cuda.api.runtime.check_status
    raise CUDARuntimeError(status)
cupy_backends.cuda.api.runtime.CUDARuntimeError: hipErrorUnknown: hipErrorUnknown
_ TestAffineTransformTextureMemory.test_affine_transform_texture_memory[_param_193_{mode='nearest', order=0, output=None, output_shape=None, shape=(100, 100), theta=90}] _

self = <<cupyx_tests.scipy_tests.ndimage_tests.test_interpolation.TestAffineTransformTextureMemory object at 0x7fd705a3c2e0>  parameter: {'mode': 'nearest', 'order': 0, 'output': None, 'output_shape': None, 'shape': (100, 100), 'theta': 90}>
xp = <module 'cupy' from '/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.Np3X0NVCM9/cupy/cupy/__init__.py'>
scp = <module 'cupyx.scipy' from '/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.Np3X0NVCM9/cupy/cupyx/scipy/__init__.py'>

    @testing.numpy_cupy_allclose(atol=0.1, scipy_name='scp')
    def test_affine_transform_texture_memory(self, xp, scp):
        a = xp.ones(self.shape, dtype=xp.float32)
        center = numpy.divide(numpy.subtract(self.shape, 1), 2)
    
        if len(self.shape) == 2:
            matrix = self._2d_rotation_matrix(self.theta, center)
        elif len(self.shape) == 3:
            matrix = self._3d_rotation_matrix(self.theta, center)
        else:
            return pytest.xfail('Unsupported shape')
    
        if self.output == 'empty':
            output = xp.empty(self.shape, dtype=xp.float32)
            if self.output_shape:
                return pytest.skip('This combination is tested in '
                                   'test_invalid_texture_arguments')
        else:
            output = self.output
    
        if self.output_shape:
            output_shape = (self.output_shape, ) * len(self.shape)
        else:
            output_shape = self.output_shape
    
        if xp == cupy:
            m = cupyx.scipy.ndimage.affine_transform
            matrix = cupy.array(matrix)
>           return m(a, matrix, output_shape=output_shape,
                     output=output, order=self.order,
                     mode=self.mode, texture_memory=True)

tests/cupyx_tests/scipy_tests/ndimage_tests/test_interpolation.py:398: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
cupyx/scipy/ndimage/interpolation.py:376: in affine_transform
    return _texture.affine_transformation(data=input,
cupyx/_texture.py:168: in affine_transformation
    texture_object = _create_texture_object(data,
cupyx/_texture.py:98: in _create_texture_object
    array = texture.CUDAarray(texture_fmt, *data.shape[::-1])
cupy/cuda/texture.pyx:296: in cupy.cuda.texture.CUDAarray.__init__
    self.ptr = runtime.malloc3DArray(desc.ptr, width, height, depth,
cupy_backends/cuda/api/runtime.pyx:593: in cupy_backends.cuda.api.runtime.malloc3DArray
    check_status(status)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

>   raise CUDARuntimeError(status)
E   AssertionError: Only cupy raises error
E   
E   Traceback (most recent call last):
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.Np3X0NVCM9/cupy/cupy/testing/_helper.py", line 47, in _call_func
E       result = impl(self, *args, **kw)
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.Np3X0NVCM9/cupy/tests/cupyx_tests/scipy_tests/ndimage_tests/test_interpolation.py", line 398, in test_affine_transform_texture_memory
E       return m(a, matrix, output_shape=output_shape,
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.Np3X0NVCM9/cupy/cupyx/scipy/ndimage/interpolation.py", line 376, in affine_transform
E       return _texture.affine_transformation(data=input,
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.Np3X0NVCM9/cupy/cupyx/_texture.py", line 168, in affine_transformation
E       texture_object = _create_texture_object(data,
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.Np3X0NVCM9/cupy/cupyx/_texture.py", line 98, in _create_texture_object
E       array = texture.CUDAarray(texture_fmt, *data.shape[::-1])
E     File "cupy/cuda/texture.pyx", line 296, in cupy.cuda.texture.CUDAarray.__init__
E       self.ptr = runtime.malloc3DArray(desc.ptr, width, height, depth,
E     File "cupy_backends/cuda/api/runtime.pyx", line 593, in cupy_backends.cuda.api.runtime.malloc3DArray
E       check_status(status)
E     File "cupy_backends/cuda/api/runtime.pyx", line 265, in cupy_backends.cuda.api.runtime.check_status
E       raise CUDARuntimeError(status)
E   cupy_backends.cuda.api.runtime.CUDARuntimeError: hipErrorUnknown: hipErrorUnknown

cupy_backends/cuda/api/runtime.pyx:265: AssertionError
----------------------------- Captured stderr call -----------------------------
Traceback (most recent call last):
  File "cupy_backends/cuda/api/runtime.pyx", line 644, in cupy_backends.cuda.api.runtime.freeArray
    check_status(status)
  File "cupy_backends/cuda/api/runtime.pyx", line 265, in cupy_backends.cuda.api.runtime.check_status
    raise CUDARuntimeError(status)
cupy_backends.cuda.api.runtime.CUDARuntimeError: hipErrorUnknown: hipErrorUnknown
_ TestAffineTransformTextureMemory.test_affine_transform_texture_memory[_param_194_{mode='nearest', order=0, output=None, output_shape=None, shape=(100, 100), theta=180}] _

self = <<cupyx_tests.scipy_tests.ndimage_tests.test_interpolation.TestAffineTransformTextureMemory object at 0x7fd7055768e0>  parameter: {'mode': 'nearest', 'order': 0, 'output': None, 'output_shape': None, 'shape': (100, 100), 'theta': 180}>
xp = <module 'cupy' from '/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.Np3X0NVCM9/cupy/cupy/__init__.py'>
scp = <module 'cupyx.scipy' from '/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.Np3X0NVCM9/cupy/cupyx/scipy/__init__.py'>

    @testing.numpy_cupy_allclose(atol=0.1, scipy_name='scp')
    def test_affine_transform_texture_memory(self, xp, scp):
        a = xp.ones(self.shape, dtype=xp.float32)
        center = numpy.divide(numpy.subtract(self.shape, 1), 2)
    
        if len(self.shape) == 2:
            matrix = self._2d_rotation_matrix(self.theta, center)
        elif len(self.shape) == 3:
            matrix = self._3d_rotation_matrix(self.theta, center)
        else:
            return pytest.xfail('Unsupported shape')
    
        if self.output == 'empty':
            output = xp.empty(self.shape, dtype=xp.float32)
            if self.output_shape:
                return pytest.skip('This combination is tested in '
                                   'test_invalid_texture_arguments')
        else:
            output = self.output
    
        if self.output_shape:
            output_shape = (self.output_shape, ) * len(self.shape)
        else:
            output_shape = self.output_shape
    
        if xp == cupy:
            m = cupyx.scipy.ndimage.affine_transform
            matrix = cupy.array(matrix)
>           return m(a, matrix, output_shape=output_shape,
                     output=output, order=self.order,
                     mode=self.mode, texture_memory=True)

tests/cupyx_tests/scipy_tests/ndimage_tests/test_interpolation.py:398: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
cupyx/scipy/ndimage/interpolation.py:376: in affine_transform
    return _texture.affine_transformation(data=input,
cupyx/_texture.py:168: in affine_transformation
    texture_object = _create_texture_object(data,
cupyx/_texture.py:98: in _create_texture_object
    array = texture.CUDAarray(texture_fmt, *data.shape[::-1])
cupy/cuda/texture.pyx:296: in cupy.cuda.texture.CUDAarray.__init__
    self.ptr = runtime.malloc3DArray(desc.ptr, width, height, depth,
cupy_backends/cuda/api/runtime.pyx:593: in cupy_backends.cuda.api.runtime.malloc3DArray
    check_status(status)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

>   raise CUDARuntimeError(status)
E   AssertionError: Only cupy raises error
E   
E   Traceback (most recent call last):
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.Np3X0NVCM9/cupy/cupy/testing/_helper.py", line 47, in _call_func
E       result = impl(self, *args, **kw)
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.Np3X0NVCM9/cupy/tests/cupyx_tests/scipy_tests/ndimage_tests/test_interpolation.py", line 398, in test_affine_transform_texture_memory
E       return m(a, matrix, output_shape=output_shape,
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.Np3X0NVCM9/cupy/cupyx/scipy/ndimage/interpolation.py", line 376, in affine_transform
E       return _texture.affine_transformation(data=input,
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.Np3X0NVCM9/cupy/cupyx/_texture.py", line 168, in affine_transformation
E       texture_object = _create_texture_object(data,
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.Np3X0NVCM9/cupy/cupyx/_texture.py", line 98, in _create_texture_object
E       array = texture.CUDAarray(texture_fmt, *data.shape[::-1])
E     File "cupy/cuda/texture.pyx", line 296, in cupy.cuda.texture.CUDAarray.__init__
E       self.ptr = runtime.malloc3DArray(desc.ptr, width, height, depth,
E     File "cupy_backends/cuda/api/runtime.pyx", line 593, in cupy_backends.cuda.api.runtime.malloc3DArray
E       check_status(status)
E     File "cupy_backends/cuda/api/runtime.pyx", line 265, in cupy_backends.cuda.api.runtime.check_status
E       raise CUDARuntimeError(status)
E   cupy_backends.cuda.api.runtime.CUDARuntimeError: hipErrorUnknown: hipErrorUnknown

cupy_backends/cuda/api/runtime.pyx:265: AssertionError
----------------------------- Captured stderr call -----------------------------
Traceback (most recent call last):
  File "cupy_backends/cuda/api/runtime.pyx", line 644, in cupy_backends.cuda.api.runtime.freeArray
    check_status(status)
  File "cupy_backends/cuda/api/runtime.pyx", line 265, in cupy_backends.cuda.api.runtime.check_status
    raise CUDARuntimeError(status)
cupy_backends.cuda.api.runtime.CUDARuntimeError: hipErrorUnknown: hipErrorUnknown
_ TestAffineTransformTextureMemory.test_affine_transform_texture_memory[_param_195_{mode='nearest', order=0, output=None, output_shape=None, shape=(100, 100), theta=270}] _

self = <<cupyx_tests.scipy_tests.ndimage_tests.test_interpolation.TestAffineTransformTextureMemory object at 0x7fd7056c52b0>  parameter: {'mode': 'nearest', 'order': 0, 'output': None, 'output_shape': None, 'shape': (100, 100), 'theta': 270}>
xp = <module 'cupy' from '/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.Np3X0NVCM9/cupy/cupy/__init__.py'>
scp = <module 'cupyx.scipy' from '/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.Np3X0NVCM9/cupy/cupyx/scipy/__init__.py'>

    @testing.numpy_cupy_allclose(atol=0.1, scipy_name='scp')
    def test_affine_transform_texture_memory(self, xp, scp):
        a = xp.ones(self.shape, dtype=xp.float32)
        center = numpy.divide(numpy.subtract(self.shape, 1), 2)
    
        if len(self.shape) == 2:
            matrix = self._2d_rotation_matrix(self.theta, center)
        elif len(self.shape) == 3:
            matrix = self._3d_rotation_matrix(self.theta, center)
        else:
            return pytest.xfail('Unsupported shape')
    
        if self.output == 'empty':
            output = xp.empty(self.shape, dtype=xp.float32)
            if self.output_shape:
                return pytest.skip('This combination is tested in '
                                   'test_invalid_texture_arguments')
        else:
            output = self.output
    
        if self.output_shape:
            output_shape = (self.output_shape, ) * len(self.shape)
        else:
            output_shape = self.output_shape
    
        if xp == cupy:
            m = cupyx.scipy.ndimage.affine_transform
            matrix = cupy.array(matrix)
>           return m(a, matrix, output_shape=output_shape,
                     output=output, order=self.order,
                     mode=self.mode, texture_memory=True)

tests/cupyx_tests/scipy_tests/ndimage_tests/test_interpolation.py:398: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
cupyx/scipy/ndimage/interpolation.py:376: in affine_transform
    return _texture.affine_transformation(data=input,
cupyx/_texture.py:168: in affine_transformation
    texture_object = _create_texture_object(data,
cupyx/_texture.py:98: in _create_texture_object
    array = texture.CUDAarray(texture_fmt, *data.shape[::-1])
cupy/cuda/texture.pyx:296: in cupy.cuda.texture.CUDAarray.__init__
    self.ptr = runtime.malloc3DArray(desc.ptr, width, height, depth,
cupy_backends/cuda/api/runtime.pyx:593: in cupy_backends.cuda.api.runtime.malloc3DArray
    check_status(status)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

>   raise CUDARuntimeError(status)
E   AssertionError: Only cupy raises error
E   
E   Traceback (most recent call last):
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.Np3X0NVCM9/cupy/cupy/testing/_helper.py", line 47, in _call_func
E       result = impl(self, *args, **kw)
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.Np3X0NVCM9/cupy/tests/cupyx_tests/scipy_tests/ndimage_tests/test_interpolation.py", line 398, in test_affine_transform_texture_memory
E       return m(a, matrix, output_shape=output_shape,
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.Np3X0NVCM9/cupy/cupyx/scipy/ndimage/interpolation.py", line 376, in affine_transform
E       return _texture.affine_transformation(data=input,
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.Np3X0NVCM9/cupy/cupyx/_texture.py", line 168, in affine_transformation
E       texture_object = _create_texture_object(data,
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.Np3X0NVCM9/cupy/cupyx/_texture.py", line 98, in _create_texture_object
E       array = texture.CUDAarray(texture_fmt, *data.shape[::-1])
E     File "cupy/cuda/texture.pyx", line 296, in cupy.cuda.texture.CUDAarray.__init__
E       self.ptr = runtime.malloc3DArray(desc.ptr, width, height, depth,
E     File "cupy_backends/cuda/api/runtime.pyx", line 593, in cupy_backends.cuda.api.runtime.malloc3DArray
E       check_status(status)
E     File "cupy_backends/cuda/api/runtime.pyx", line 265, in cupy_backends.cuda.api.runtime.check_status
E       raise CUDARuntimeError(status)
E   cupy_backends.cuda.api.runtime.CUDARuntimeError: hipErrorUnknown: hipErrorUnknown

cupy_backends/cuda/api/runtime.pyx:265: AssertionError
----------------------------- Captured stderr call -----------------------------
Traceback (most recent call last):
  File "cupy_backends/cuda/api/runtime.pyx", line 644, in cupy_backends.cuda.api.runtime.freeArray
    check_status(status)
  File "cupy_backends/cuda/api/runtime.pyx", line 265, in cupy_backends.cuda.api.runtime.check_status
    raise CUDARuntimeError(status)
cupy_backends.cuda.api.runtime.CUDARuntimeError: hipErrorUnknown: hipErrorUnknown
_ TestAffineTransformTextureMemory.test_affine_transform_texture_memory[_param_196_{mode='nearest', order=0, output=None, output_shape=None, shape=(10, 20), theta=0}] _

self = <<cupyx_tests.scipy_tests.ndimage_tests.test_interpolation.TestAffineTransformTextureMemory object at 0x7fd7072b67c0>  parameter: {'mode': 'nearest', 'order': 0, 'output': None, 'output_shape': None, 'shape': (10, 20), 'theta': 0}>
xp = <module 'cupy' from '/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.Np3X0NVCM9/cupy/cupy/__init__.py'>
scp = <module 'cupyx.scipy' from '/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.Np3X0NVCM9/cupy/cupyx/scipy/__init__.py'>

    @testing.numpy_cupy_allclose(atol=0.1, scipy_name='scp')
    def test_affine_transform_texture_memory(self, xp, scp):
        a = xp.ones(self.shape, dtype=xp.float32)
        center = numpy.divide(numpy.subtract(self.shape, 1), 2)
    
        if len(self.shape) == 2:
            matrix = self._2d_rotation_matrix(self.theta, center)
        elif len(self.shape) == 3:
            matrix = self._3d_rotation_matrix(self.theta, center)
        else:
            return pytest.xfail('Unsupported shape')
    
        if self.output == 'empty':
            output = xp.empty(self.shape, dtype=xp.float32)
            if self.output_shape:
                return pytest.skip('This combination is tested in '
                                   'test_invalid_texture_arguments')
        else:
            output = self.output
    
        if self.output_shape:
            output_shape = (self.output_shape, ) * len(self.shape)
        else:
            output_shape = self.output_shape
    
        if xp == cupy:
            m = cupyx.scipy.ndimage.affine_transform
            matrix = cupy.array(matrix)
>           return m(a, matrix, output_shape=output_shape,
                     output=output, order=self.order,
                     mode=self.mode, texture_memory=True)

tests/cupyx_tests/scipy_tests/ndimage_tests/test_interpolation.py:398: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
cupyx/scipy/ndimage/interpolation.py:376: in affine_transform
    return _texture.affine_transformation(data=input,
cupyx/_texture.py:168: in affine_transformation
    texture_object = _create_texture_object(data,
cupyx/_texture.py:98: in _create_texture_object
    array = texture.CUDAarray(texture_fmt, *data.shape[::-1])
cupy/cuda/texture.pyx:296: in cupy.cuda.texture.CUDAarray.__init__
    self.ptr = runtime.malloc3DArray(desc.ptr, width, height, depth,
cupy_backends/cuda/api/runtime.pyx:593: in cupy_backends.cuda.api.runtime.malloc3DArray
    check_status(status)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

>   raise CUDARuntimeError(status)
E   AssertionError: Only cupy raises error
E   
E   Traceback (most recent call last):
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.Np3X0NVCM9/cupy/cupy/testing/_helper.py", line 47, in _call_func
E       result = impl(self, *args, **kw)
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.Np3X0NVCM9/cupy/tests/cupyx_tests/scipy_tests/ndimage_tests/test_interpolation.py", line 398, in test_affine_transform_texture_memory
E       return m(a, matrix, output_shape=output_shape,
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.Np3X0NVCM9/cupy/cupyx/scipy/ndimage/interpolation.py", line 376, in affine_transform
E       return _texture.affine_transformation(data=input,
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.Np3X0NVCM9/cupy/cupyx/_texture.py", line 168, in affine_transformation
E       texture_object = _create_texture_object(data,
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.Np3X0NVCM9/cupy/cupyx/_texture.py", line 98, in _create_texture_object
E       array = texture.CUDAarray(texture_fmt, *data.shape[::-1])
E     File "cupy/cuda/texture.pyx", line 296, in cupy.cuda.texture.CUDAarray.__init__
E       self.ptr = runtime.malloc3DArray(desc.ptr, width, height, depth,
E     File "cupy_backends/cuda/api/runtime.pyx", line 593, in cupy_backends.cuda.api.runtime.malloc3DArray
E       check_status(status)
E     File "cupy_backends/cuda/api/runtime.pyx", line 265, in cupy_backends.cuda.api.runtime.check_status
E       raise CUDARuntimeError(status)
E   cupy_backends.cuda.api.runtime.CUDARuntimeError: hipErrorUnknown: hipErrorUnknown

cupy_backends/cuda/api/runtime.pyx:265: AssertionError
----------------------------- Captured stderr call -----------------------------
Traceback (most recent call last):
  File "cupy_backends/cuda/api/runtime.pyx", line 644, in cupy_backends.cuda.api.runtime.freeArray
    check_status(status)
  File "cupy_backends/cuda/api/runtime.pyx", line 265, in cupy_backends.cuda.api.runtime.check_status
    raise CUDARuntimeError(status)
cupy_backends.cuda.api.runtime.CUDARuntimeError: hipErrorUnknown: hipErrorUnknown
_ TestAffineTransformTextureMemory.test_affine_transform_texture_memory[_param_197_{mode='nearest', order=0, output=None, output_shape=None, shape=(10, 20), theta=90}] _

self = <<cupyx_tests.scipy_tests.ndimage_tests.test_interpolation.TestAffineTransformTextureMemory object at 0x7fd708456130>  parameter: {'mode': 'nearest', 'order': 0, 'output': None, 'output_shape': None, 'shape': (10, 20), 'theta': 90}>
xp = <module 'cupy' from '/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.Np3X0NVCM9/cupy/cupy/__init__.py'>
scp = <module 'cupyx.scipy' from '/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.Np3X0NVCM9/cupy/cupyx/scipy/__init__.py'>

    @testing.numpy_cupy_allclose(atol=0.1, scipy_name='scp')
    def test_affine_transform_texture_memory(self, xp, scp):
        a = xp.ones(self.shape, dtype=xp.float32)
        center = numpy.divide(numpy.subtract(self.shape, 1), 2)
    
        if len(self.shape) == 2:
            matrix = self._2d_rotation_matrix(self.theta, center)
        elif len(self.shape) == 3:
            matrix = self._3d_rotation_matrix(self.theta, center)
        else:
            return pytest.xfail('Unsupported shape')
    
        if self.output == 'empty':
            output = xp.empty(self.shape, dtype=xp.float32)
            if self.output_shape:
                return pytest.skip('This combination is tested in '
                                   'test_invalid_texture_arguments')
        else:
            output = self.output
    
        if self.output_shape:
            output_shape = (self.output_shape, ) * len(self.shape)
        else:
            output_shape = self.output_shape
    
        if xp == cupy:
            m = cupyx.scipy.ndimage.affine_transform
            matrix = cupy.array(matrix)
>           return m(a, matrix, output_shape=output_shape,
                     output=output, order=self.order,
                     mode=self.mode, texture_memory=True)

tests/cupyx_tests/scipy_tests/ndimage_tests/test_interpolation.py:398: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
cupyx/scipy/ndimage/interpolation.py:376: in affine_transform
    return _texture.affine_transformation(data=input,
cupyx/_texture.py:168: in affine_transformation
    texture_object = _create_texture_object(data,
cupyx/_texture.py:98: in _create_texture_object
    array = texture.CUDAarray(texture_fmt, *data.shape[::-1])
cupy/cuda/texture.pyx:296: in cupy.cuda.texture.CUDAarray.__init__
    self.ptr = runtime.malloc3DArray(desc.ptr, width, height, depth,
cupy_backends/cuda/api/runtime.pyx:593: in cupy_backends.cuda.api.runtime.malloc3DArray
    check_status(status)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

>   raise CUDARuntimeError(status)
E   AssertionError: Only cupy raises error
E   
E   Traceback (most recent call last):
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.Np3X0NVCM9/cupy/cupy/testing/_helper.py", line 47, in _call_func
E       result = impl(self, *args, **kw)
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.Np3X0NVCM9/cupy/tests/cupyx_tests/scipy_tests/ndimage_tests/test_interpolation.py", line 398, in test_affine_transform_texture_memory
E       return m(a, matrix, output_shape=output_shape,
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.Np3X0NVCM9/cupy/cupyx/scipy/ndimage/interpolation.py", line 376, in affine_transform
E       return _texture.affine_transformation(data=input,
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.Np3X0NVCM9/cupy/cupyx/_texture.py", line 168, in affine_transformation
E       texture_object = _create_texture_object(data,
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.Np3X0NVCM9/cupy/cupyx/_texture.py", line 98, in _create_texture_object
E       array = texture.CUDAarray(texture_fmt, *data.shape[::-1])
E     File "cupy/cuda/texture.pyx", line 296, in cupy.cuda.texture.CUDAarray.__init__
E       self.ptr = runtime.malloc3DArray(desc.ptr, width, height, depth,
E     File "cupy_backends/cuda/api/runtime.pyx", line 593, in cupy_backends.cuda.api.runtime.malloc3DArray
E       check_status(status)
E     File "cupy_backends/cuda/api/runtime.pyx", line 265, in cupy_backends.cuda.api.runtime.check_status
E       raise CUDARuntimeError(status)
E   cupy_backends.cuda.api.runtime.CUDARuntimeError: hipErrorUnknown: hipErrorUnknown

cupy_backends/cuda/api/runtime.pyx:265: AssertionError
----------------------------- Captured stderr call -----------------------------
Traceback (most recent call last):
  File "cupy_backends/cuda/api/runtime.pyx", line 644, in cupy_backends.cuda.api.runtime.freeArray
    check_status(status)
  File "cupy_backends/cuda/api/runtime.pyx", line 265, in cupy_backends.cuda.api.runtime.check_status
    raise CUDARuntimeError(status)
cupy_backends.cuda.api.runtime.CUDARuntimeError: hipErrorUnknown: hipErrorUnknown
_ TestAffineTransformTextureMemory.test_affine_transform_texture_memory[_param_198_{mode='nearest', order=0, output=None, output_shape=None, shape=(10, 20), theta=180}] _

self = <<cupyx_tests.scipy_tests.ndimage_tests.test_interpolation.TestAffineTransformTextureMemory object at 0x7fd7065171c0>  parameter: {'mode': 'nearest', 'order': 0, 'output': None, 'output_shape': None, 'shape': (10, 20), 'theta': 180}>
xp = <module 'cupy' from '/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.Np3X0NVCM9/cupy/cupy/__init__.py'>
scp = <module 'cupyx.scipy' from '/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.Np3X0NVCM9/cupy/cupyx/scipy/__init__.py'>

    @testing.numpy_cupy_allclose(atol=0.1, scipy_name='scp')
    def test_affine_transform_texture_memory(self, xp, scp):
        a = xp.ones(self.shape, dtype=xp.float32)
        center = numpy.divide(numpy.subtract(self.shape, 1), 2)
    
        if len(self.shape) == 2:
            matrix = self._2d_rotation_matrix(self.theta, center)
        elif len(self.shape) == 3:
            matrix = self._3d_rotation_matrix(self.theta, center)
        else:
            return pytest.xfail('Unsupported shape')
    
        if self.output == 'empty':
            output = xp.empty(self.shape, dtype=xp.float32)
            if self.output_shape:
                return pytest.skip('This combination is tested in '
                                   'test_invalid_texture_arguments')
        else:
            output = self.output
    
        if self.output_shape:
            output_shape = (self.output_shape, ) * len(self.shape)
        else:
            output_shape = self.output_shape
    
        if xp == cupy:
            m = cupyx.scipy.ndimage.affine_transform
            matrix = cupy.array(matrix)
>           return m(a, matrix, output_shape=output_shape,
                     output=output, order=self.order,
                     mode=self.mode, texture_memory=True)

tests/cupyx_tests/scipy_tests/ndimage_tests/test_interpolation.py:398: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
cupyx/scipy/ndimage/interpolation.py:376: in affine_transform
    return _texture.affine_transformation(data=input,
cupyx/_texture.py:168: in affine_transformation
    texture_object = _create_texture_object(data,
cupyx/_texture.py:98: in _create_texture_object
    array = texture.CUDAarray(texture_fmt, *data.shape[::-1])
cupy/cuda/texture.pyx:296: in cupy.cuda.texture.CUDAarray.__init__
    self.ptr = runtime.malloc3DArray(desc.ptr, width, height, depth,
cupy_backends/cuda/api/runtime.pyx:593: in cupy_backends.cuda.api.runtime.malloc3DArray
    check_status(status)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

>   raise CUDARuntimeError(status)
E   AssertionError: Only cupy raises error
E   
E   Traceback (most recent call last):
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.Np3X0NVCM9/cupy/cupy/testing/_helper.py", line 47, in _call_func
E       result = impl(self, *args, **kw)
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.Np3X0NVCM9/cupy/tests/cupyx_tests/scipy_tests/ndimage_tests/test_interpolation.py", line 398, in test_affine_transform_texture_memory
E       return m(a, matrix, output_shape=output_shape,
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.Np3X0NVCM9/cupy/cupyx/scipy/ndimage/interpolation.py", line 376, in affine_transform
E       return _texture.affine_transformation(data=input,
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.Np3X0NVCM9/cupy/cupyx/_texture.py", line 168, in affine_transformation
E       texture_object = _create_texture_object(data,
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.Np3X0NVCM9/cupy/cupyx/_texture.py", line 98, in _create_texture_object
E       array = texture.CUDAarray(texture_fmt, *data.shape[::-1])
E     File "cupy/cuda/texture.pyx", line 296, in cupy.cuda.texture.CUDAarray.__init__
E       self.ptr = runtime.malloc3DArray(desc.ptr, width, height, depth,
E     File "cupy_backends/cuda/api/runtime.pyx", line 593, in cupy_backends.cuda.api.runtime.malloc3DArray
E       check_status(status)
E     File "cupy_backends/cuda/api/runtime.pyx", line 265, in cupy_backends.cuda.api.runtime.check_status
E       raise CUDARuntimeError(status)
E   cupy_backends.cuda.api.runtime.CUDARuntimeError: hipErrorUnknown: hipErrorUnknown

cupy_backends/cuda/api/runtime.pyx:265: AssertionError
----------------------------- Captured stderr call -----------------------------
Traceback (most recent call last):
  File "cupy_backends/cuda/api/runtime.pyx", line 644, in cupy_backends.cuda.api.runtime.freeArray
    check_status(status)
  File "cupy_backends/cuda/api/runtime.pyx", line 265, in cupy_backends.cuda.api.runtime.check_status
    raise CUDARuntimeError(status)
cupy_backends.cuda.api.runtime.CUDARuntimeError: hipErrorUnknown: hipErrorUnknown
_ TestAffineTransformTextureMemory.test_affine_transform_texture_memory[_param_199_{mode='nearest', order=0, output=None, output_shape=None, shape=(10, 20), theta=270}] _

self = <<cupyx_tests.scipy_tests.ndimage_tests.test_interpolation.TestAffineTransformTextureMemory object at 0x7fd706e80c10>  parameter: {'mode': 'nearest', 'order': 0, 'output': None, 'output_shape': None, 'shape': (10, 20), 'theta': 270}>
xp = <module 'cupy' from '/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.Np3X0NVCM9/cupy/cupy/__init__.py'>
scp = <module 'cupyx.scipy' from '/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.Np3X0NVCM9/cupy/cupyx/scipy/__init__.py'>

    @testing.numpy_cupy_allclose(atol=0.1, scipy_name='scp')
    def test_affine_transform_texture_memory(self, xp, scp):
        a = xp.ones(self.shape, dtype=xp.float32)
        center = numpy.divide(numpy.subtract(self.shape, 1), 2)
    
        if len(self.shape) == 2:
            matrix = self._2d_rotation_matrix(self.theta, center)
        elif len(self.shape) == 3:
            matrix = self._3d_rotation_matrix(self.theta, center)
        else:
            return pytest.xfail('Unsupported shape')
    
        if self.output == 'empty':
            output = xp.empty(self.shape, dtype=xp.float32)
            if self.output_shape:
                return pytest.skip('This combination is tested in '
                                   'test_invalid_texture_arguments')
        else:
            output = self.output
    
        if self.output_shape:
            output_shape = (self.output_shape, ) * len(self.shape)
        else:
            output_shape = self.output_shape
    
        if xp == cupy:
            m = cupyx.scipy.ndimage.affine_transform
            matrix = cupy.array(matrix)
>           return m(a, matrix, output_shape=output_shape,
                     output=output, order=self.order,
                     mode=self.mode, texture_memory=True)

tests/cupyx_tests/scipy_tests/ndimage_tests/test_interpolation.py:398: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
cupyx/scipy/ndimage/interpolation.py:376: in affine_transform
    return _texture.affine_transformation(data=input,
cupyx/_texture.py:168: in affine_transformation
    texture_object = _create_texture_object(data,
cupyx/_texture.py:98: in _create_texture_object
    array = texture.CUDAarray(texture_fmt, *data.shape[::-1])
cupy/cuda/texture.pyx:296: in cupy.cuda.texture.CUDAarray.__init__
    self.ptr = runtime.malloc3DArray(desc.ptr, width, height, depth,
cupy_backends/cuda/api/runtime.pyx:593: in cupy_backends.cuda.api.runtime.malloc3DArray
    check_status(status)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

>   raise CUDARuntimeError(status)
E   AssertionError: Only cupy raises error
E   
E   Traceback (most recent call last):
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.Np3X0NVCM9/cupy/cupy/testing/_helper.py", line 47, in _call_func
E       result = impl(self, *args, **kw)
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.Np3X0NVCM9/cupy/tests/cupyx_tests/scipy_tests/ndimage_tests/test_interpolation.py", line 398, in test_affine_transform_texture_memory
E       return m(a, matrix, output_shape=output_shape,
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.Np3X0NVCM9/cupy/cupyx/scipy/ndimage/interpolation.py", line 376, in affine_transform
E       return _texture.affine_transformation(data=input,
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.Np3X0NVCM9/cupy/cupyx/_texture.py", line 168, in affine_transformation
E       texture_object = _create_texture_object(data,
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.Np3X0NVCM9/cupy/cupyx/_texture.py", line 98, in _create_texture_object
E       array = texture.CUDAarray(texture_fmt, *data.shape[::-1])
E     File "cupy/cuda/texture.pyx", line 296, in cupy.cuda.texture.CUDAarray.__init__
E       self.ptr = runtime.malloc3DArray(desc.ptr, width, height, depth,
E     File "cupy_backends/cuda/api/runtime.pyx", line 593, in cupy_backends.cuda.api.runtime.malloc3DArray
E       check_status(status)
E     File "cupy_backends/cuda/api/runtime.pyx", line 265, in cupy_backends.cuda.api.runtime.check_status
E       raise CUDARuntimeError(status)
E   cupy_backends.cuda.api.runtime.CUDARuntimeError: hipErrorUnknown: hipErrorUnknown

cupy_backends/cuda/api/runtime.pyx:265: AssertionError
----------------------------- Captured stderr call -----------------------------
Traceback (most recent call last):
  File "cupy_backends/cuda/api/runtime.pyx", line 644, in cupy_backends.cuda.api.runtime.freeArray
    check_status(status)
  File "cupy_backends/cuda/api/runtime.pyx", line 265, in cupy_backends.cuda.api.runtime.check_status
    raise CUDARuntimeError(status)
cupy_backends.cuda.api.runtime.CUDARuntimeError: hipErrorUnknown: hipErrorUnknown
_ TestAffineTransformTextureMemory.test_affine_transform_texture_memory[_param_200_{mode='nearest', order=0, output=None, output_shape=None, shape=(10, 10, 10), theta=0}] _

self = <<cupyx_tests.scipy_tests.ndimage_tests.test_interpolation.TestAffineTransformTextureMemory object at 0x7fd7056b1a00>  parameter: {'mode': 'nearest', 'order': 0, 'output': None, 'output_shape': None, 'shape': (10, 10, 10), 'theta': 0}>
xp = <module 'cupy' from '/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.Np3X0NVCM9/cupy/cupy/__init__.py'>
scp = <module 'cupyx.scipy' from '/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.Np3X0NVCM9/cupy/cupyx/scipy/__init__.py'>

    @testing.numpy_cupy_allclose(atol=0.1, scipy_name='scp')
    def test_affine_transform_texture_memory(self, xp, scp):
        a = xp.ones(self.shape, dtype=xp.float32)
        center = numpy.divide(numpy.subtract(self.shape, 1), 2)
    
        if len(self.shape) == 2:
            matrix = self._2d_rotation_matrix(self.theta, center)
        elif len(self.shape) == 3:
            matrix = self._3d_rotation_matrix(self.theta, center)
        else:
            return pytest.xfail('Unsupported shape')
    
        if self.output == 'empty':
            output = xp.empty(self.shape, dtype=xp.float32)
            if self.output_shape:
                return pytest.skip('This combination is tested in '
                                   'test_invalid_texture_arguments')
        else:
            output = self.output
    
        if self.output_shape:
            output_shape = (self.output_shape, ) * len(self.shape)
        else:
            output_shape = self.output_shape
    
        if xp == cupy:
            m = cupyx.scipy.ndimage.affine_transform
            matrix = cupy.array(matrix)
>           return m(a, matrix, output_shape=output_shape,
                     output=output, order=self.order,
                     mode=self.mode, texture_memory=True)

tests/cupyx_tests/scipy_tests/ndimage_tests/test_interpolation.py:398: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
cupyx/scipy/ndimage/interpolation.py:376: in affine_transform
    return _texture.affine_transformation(data=input,
cupyx/_texture.py:168: in affine_transformation
    texture_object = _create_texture_object(data,
cupyx/_texture.py:98: in _create_texture_object
    array = texture.CUDAarray(texture_fmt, *data.shape[::-1])
cupy/cuda/texture.pyx:296: in cupy.cuda.texture.CUDAarray.__init__
    self.ptr = runtime.malloc3DArray(desc.ptr, width, height, depth,
cupy_backends/cuda/api/runtime.pyx:593: in cupy_backends.cuda.api.runtime.malloc3DArray
    check_status(status)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

>   raise CUDARuntimeError(status)
E   AssertionError: Only cupy raises error
E   
E   Traceback (most recent call last):
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.Np3X0NVCM9/cupy/cupy/testing/_helper.py", line 47, in _call_func
E       result = impl(self, *args, **kw)
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.Np3X0NVCM9/cupy/tests/cupyx_tests/scipy_tests/ndimage_tests/test_interpolation.py", line 398, in test_affine_transform_texture_memory
E       return m(a, matrix, output_shape=output_shape,
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.Np3X0NVCM9/cupy/cupyx/scipy/ndimage/interpolation.py", line 376, in affine_transform
E       return _texture.affine_transformation(data=input,
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.Np3X0NVCM9/cupy/cupyx/_texture.py", line 168, in affine_transformation
E       texture_object = _create_texture_object(data,
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.Np3X0NVCM9/cupy/cupyx/_texture.py", line 98, in _create_texture_object
E       array = texture.CUDAarray(texture_fmt, *data.shape[::-1])
E     File "cupy/cuda/texture.pyx", line 296, in cupy.cuda.texture.CUDAarray.__init__
E       self.ptr = runtime.malloc3DArray(desc.ptr, width, height, depth,
E     File "cupy_backends/cuda/api/runtime.pyx", line 593, in cupy_backends.cuda.api.runtime.malloc3DArray
E       check_status(status)
E     File "cupy_backends/cuda/api/runtime.pyx", line 265, in cupy_backends.cuda.api.runtime.check_status
E       raise CUDARuntimeError(status)
E   cupy_backends.cuda.api.runtime.CUDARuntimeError: hipErrorUnknown: hipErrorUnknown

cupy_backends/cuda/api/runtime.pyx:265: AssertionError
----------------------------- Captured stderr call -----------------------------
Traceback (most recent call last):
  File "cupy_backends/cuda/api/runtime.pyx", line 644, in cupy_backends.cuda.api.runtime.freeArray
    check_status(status)
  File "cupy_backends/cuda/api/runtime.pyx", line 265, in cupy_backends.cuda.api.runtime.check_status
    raise CUDARuntimeError(status)
cupy_backends.cuda.api.runtime.CUDARuntimeError: hipErrorUnknown: hipErrorUnknown
_ TestAffineTransformTextureMemory.test_affine_transform_texture_memory[_param_201_{mode='nearest', order=0, output=None, output_shape=None, shape=(10, 10, 10), theta=90}] _

self = <<cupyx_tests.scipy_tests.ndimage_tests.test_interpolation.TestAffineTransformTextureMemory object at 0x7fd7057412e0>  parameter: {'mode': 'nearest', 'order': 0, 'output': None, 'output_shape': None, 'shape': (10, 10, 10), 'theta': 90}>
xp = <module 'cupy' from '/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.Np3X0NVCM9/cupy/cupy/__init__.py'>
scp = <module 'cupyx.scipy' from '/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.Np3X0NVCM9/cupy/cupyx/scipy/__init__.py'>

    @testing.numpy_cupy_allclose(atol=0.1, scipy_name='scp')
    def test_affine_transform_texture_memory(self, xp, scp):
        a = xp.ones(self.shape, dtype=xp.float32)
        center = numpy.divide(numpy.subtract(self.shape, 1), 2)
    
        if len(self.shape) == 2:
            matrix = self._2d_rotation_matrix(self.theta, center)
        elif len(self.shape) == 3:
            matrix = self._3d_rotation_matrix(self.theta, center)
        else:
            return pytest.xfail('Unsupported shape')
    
        if self.output == 'empty':
            output = xp.empty(self.shape, dtype=xp.float32)
            if self.output_shape:
                return pytest.skip('This combination is tested in '
                                   'test_invalid_texture_arguments')
        else:
            output = self.output
    
        if self.output_shape:
            output_shape = (self.output_shape, ) * len(self.shape)
        else:
            output_shape = self.output_shape
    
        if xp == cupy:
            m = cupyx.scipy.ndimage.affine_transform
            matrix = cupy.array(matrix)
>           return m(a, matrix, output_shape=output_shape,
                     output=output, order=self.order,
                     mode=self.mode, texture_memory=True)

tests/cupyx_tests/scipy_tests/ndimage_tests/test_interpolation.py:398: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
cupyx/scipy/ndimage/interpolation.py:376: in affine_transform
    return _texture.affine_transformation(data=input,
cupyx/_texture.py:168: in affine_transformation
    texture_object = _create_texture_object(data,
cupyx/_texture.py:98: in _create_texture_object
    array = texture.CUDAarray(texture_fmt, *data.shape[::-1])
cupy/cuda/texture.pyx:296: in cupy.cuda.texture.CUDAarray.__init__
    self.ptr = runtime.malloc3DArray(desc.ptr, width, height, depth,
cupy_backends/cuda/api/runtime.pyx:593: in cupy_backends.cuda.api.runtime.malloc3DArray
    check_status(status)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

>   raise CUDARuntimeError(status)
E   AssertionError: Only cupy raises error
E   
E   Traceback (most recent call last):
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.Np3X0NVCM9/cupy/cupy/testing/_helper.py", line 47, in _call_func
E       result = impl(self, *args, **kw)
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.Np3X0NVCM9/cupy/tests/cupyx_tests/scipy_tests/ndimage_tests/test_interpolation.py", line 398, in test_affine_transform_texture_memory
E       return m(a, matrix, output_shape=output_shape,
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.Np3X0NVCM9/cupy/cupyx/scipy/ndimage/interpolation.py", line 376, in affine_transform
E       return _texture.affine_transformation(data=input,
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.Np3X0NVCM9/cupy/cupyx/_texture.py", line 168, in affine_transformation
E       texture_object = _create_texture_object(data,
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.Np3X0NVCM9/cupy/cupyx/_texture.py", line 98, in _create_texture_object
E       array = texture.CUDAarray(texture_fmt, *data.shape[::-1])
E     File "cupy/cuda/texture.pyx", line 296, in cupy.cuda.texture.CUDAarray.__init__
E       self.ptr = runtime.malloc3DArray(desc.ptr, width, height, depth,
E     File "cupy_backends/cuda/api/runtime.pyx", line 593, in cupy_backends.cuda.api.runtime.malloc3DArray
E       check_status(status)
E     File "cupy_backends/cuda/api/runtime.pyx", line 265, in cupy_backends.cuda.api.runtime.check_status
E       raise CUDARuntimeError(status)
E   cupy_backends.cuda.api.runtime.CUDARuntimeError: hipErrorUnknown: hipErrorUnknown

cupy_backends/cuda/api/runtime.pyx:265: AssertionError
----------------------------- Captured stderr call -----------------------------
Traceback (most recent call last):
  File "cupy_backends/cuda/api/runtime.pyx", line 644, in cupy_backends.cuda.api.runtime.freeArray
    check_status(status)
  File "cupy_backends/cuda/api/runtime.pyx", line 265, in cupy_backends.cuda.api.runtime.check_status
    raise CUDARuntimeError(status)
cupy_backends.cuda.api.runtime.CUDARuntimeError: hipErrorUnknown: hipErrorUnknown
_ TestAffineTransformTextureMemory.test_affine_transform_texture_memory[_param_202_{mode='nearest', order=0, output=None, output_shape=None, shape=(10, 10, 10), theta=180}] _

self = <<cupyx_tests.scipy_tests.ndimage_tests.test_interpolation.TestAffineTransformTextureMemory object at 0x7fd7079075e0>  parameter: {'mode': 'nearest', 'order': 0, 'output': None, 'output_shape': None, 'shape': (10, 10, 10), 'theta': 180}>
xp = <module 'cupy' from '/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.Np3X0NVCM9/cupy/cupy/__init__.py'>
scp = <module 'cupyx.scipy' from '/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.Np3X0NVCM9/cupy/cupyx/scipy/__init__.py'>

    @testing.numpy_cupy_allclose(atol=0.1, scipy_name='scp')
    def test_affine_transform_texture_memory(self, xp, scp):
        a = xp.ones(self.shape, dtype=xp.float32)
        center = numpy.divide(numpy.subtract(self.shape, 1), 2)
    
        if len(self.shape) == 2:
            matrix = self._2d_rotation_matrix(self.theta, center)
        elif len(self.shape) == 3:
            matrix = self._3d_rotation_matrix(self.theta, center)
        else:
            return pytest.xfail('Unsupported shape')
    
        if self.output == 'empty':
            output = xp.empty(self.shape, dtype=xp.float32)
            if self.output_shape:
                return pytest.skip('This combination is tested in '
                                   'test_invalid_texture_arguments')
        else:
            output = self.output
    
        if self.output_shape:
            output_shape = (self.output_shape, ) * len(self.shape)
        else:
            output_shape = self.output_shape
    
        if xp == cupy:
            m = cupyx.scipy.ndimage.affine_transform
            matrix = cupy.array(matrix)
>           return m(a, matrix, output_shape=output_shape,
                     output=output, order=self.order,
                     mode=self.mode, texture_memory=True)

tests/cupyx_tests/scipy_tests/ndimage_tests/test_interpolation.py:398: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
cupyx/scipy/ndimage/interpolation.py:376: in affine_transform
    return _texture.affine_transformation(data=input,
cupyx/_texture.py:168: in affine_transformation
    texture_object = _create_texture_object(data,
cupyx/_texture.py:98: in _create_texture_object
    array = texture.CUDAarray(texture_fmt, *data.shape[::-1])
cupy/cuda/texture.pyx:296: in cupy.cuda.texture.CUDAarray.__init__
    self.ptr = runtime.malloc3DArray(desc.ptr, width, height, depth,
cupy_backends/cuda/api/runtime.pyx:593: in cupy_backends.cuda.api.runtime.malloc3DArray
    check_status(status)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

>   raise CUDARuntimeError(status)
E   AssertionError: Only cupy raises error
E   
E   Traceback (most recent call last):
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.Np3X0NVCM9/cupy/cupy/testing/_helper.py", line 47, in _call_func
E       result = impl(self, *args, **kw)
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.Np3X0NVCM9/cupy/tests/cupyx_tests/scipy_tests/ndimage_tests/test_interpolation.py", line 398, in test_affine_transform_texture_memory
E       return m(a, matrix, output_shape=output_shape,
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.Np3X0NVCM9/cupy/cupyx/scipy/ndimage/interpolation.py", line 376, in affine_transform
E       return _texture.affine_transformation(data=input,
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.Np3X0NVCM9/cupy/cupyx/_texture.py", line 168, in affine_transformation
E       texture_object = _create_texture_object(data,
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.Np3X0NVCM9/cupy/cupyx/_texture.py", line 98, in _create_texture_object
E       array = texture.CUDAarray(texture_fmt, *data.shape[::-1])
E     File "cupy/cuda/texture.pyx", line 296, in cupy.cuda.texture.CUDAarray.__init__
E       self.ptr = runtime.malloc3DArray(desc.ptr, width, height, depth,
E     File "cupy_backends/cuda/api/runtime.pyx", line 593, in cupy_backends.cuda.api.runtime.malloc3DArray
E       check_status(status)
E     File "cupy_backends/cuda/api/runtime.pyx", line 265, in cupy_backends.cuda.api.runtime.check_status
E       raise CUDARuntimeError(status)
E   cupy_backends.cuda.api.runtime.CUDARuntimeError: hipErrorUnknown: hipErrorUnknown

cupy_backends/cuda/api/runtime.pyx:265: AssertionError
----------------------------- Captured stderr call -----------------------------
Traceback (most recent call last):
  File "cupy_backends/cuda/api/runtime.pyx", line 644, in cupy_backends.cuda.api.runtime.freeArray
    check_status(status)
  File "cupy_backends/cuda/api/runtime.pyx", line 265, in cupy_backends.cuda.api.runtime.check_status
    raise CUDARuntimeError(status)
cupy_backends.cuda.api.runtime.CUDARuntimeError: hipErrorUnknown: hipErrorUnknown
_ TestAffineTransformTextureMemory.test_affine_transform_texture_memory[_param_203_{mode='nearest', order=0, output=None, output_shape=None, shape=(10, 10, 10), theta=270}] _

self = <<cupyx_tests.scipy_tests.ndimage_tests.test_interpolation.TestAffineTransformTextureMemory object at 0x7fd819c6e640>  parameter: {'mode': 'nearest', 'order': 0, 'output': None, 'output_shape': None, 'shape': (10, 10, 10), 'theta': 270}>
xp = <module 'cupy' from '/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.Np3X0NVCM9/cupy/cupy/__init__.py'>
scp = <module 'cupyx.scipy' from '/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.Np3X0NVCM9/cupy/cupyx/scipy/__init__.py'>

    @testing.numpy_cupy_allclose(atol=0.1, scipy_name='scp')
    def test_affine_transform_texture_memory(self, xp, scp):
        a = xp.ones(self.shape, dtype=xp.float32)
        center = numpy.divide(numpy.subtract(self.shape, 1), 2)
    
        if len(self.shape) == 2:
            matrix = self._2d_rotation_matrix(self.theta, center)
        elif len(self.shape) == 3:
            matrix = self._3d_rotation_matrix(self.theta, center)
        else:
            return pytest.xfail('Unsupported shape')
    
        if self.output == 'empty':
            output = xp.empty(self.shape, dtype=xp.float32)
            if self.output_shape:
                return pytest.skip('This combination is tested in '
                                   'test_invalid_texture_arguments')
        else:
            output = self.output
    
        if self.output_shape:
            output_shape = (self.output_shape, ) * len(self.shape)
        else:
            output_shape = self.output_shape
    
        if xp == cupy:
            m = cupyx.scipy.ndimage.affine_transform
            matrix = cupy.array(matrix)
>           return m(a, matrix, output_shape=output_shape,
                     output=output, order=self.order,
                     mode=self.mode, texture_memory=True)

tests/cupyx_tests/scipy_tests/ndimage_tests/test_interpolation.py:398: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
cupyx/scipy/ndimage/interpolation.py:376: in affine_transform
    return _texture.affine_transformation(data=input,
cupyx/_texture.py:168: in affine_transformation
    texture_object = _create_texture_object(data,
cupyx/_texture.py:98: in _create_texture_object
    array = texture.CUDAarray(texture_fmt, *data.shape[::-1])
cupy/cuda/texture.pyx:296: in cupy.cuda.texture.CUDAarray.__init__
    self.ptr = runtime.malloc3DArray(desc.ptr, width, height, depth,
cupy_backends/cuda/api/runtime.pyx:593: in cupy_backends.cuda.api.runtime.malloc3DArray
    check_status(status)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

>   raise CUDARuntimeError(status)
E   AssertionError: Only cupy raises error
E   
E   Traceback (most recent call last):
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.Np3X0NVCM9/cupy/cupy/testing/_helper.py", line 47, in _call_func
E       result = impl(self, *args, **kw)
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.Np3X0NVCM9/cupy/tests/cupyx_tests/scipy_tests/ndimage_tests/test_interpolation.py", line 398, in test_affine_transform_texture_memory
E       return m(a, matrix, output_shape=output_shape,
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.Np3X0NVCM9/cupy/cupyx/scipy/ndimage/interpolation.py", line 376, in affine_transform
E       return _texture.affine_transformation(data=input,
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.Np3X0NVCM9/cupy/cupyx/_texture.py", line 168, in affine_transformation
E       texture_object = _create_texture_object(data,
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.Np3X0NVCM9/cupy/cupyx/_texture.py", line 98, in _create_texture_object
E       array = texture.CUDAarray(texture_fmt, *data.shape[::-1])
E     File "cupy/cuda/texture.pyx", line 296, in cupy.cuda.texture.CUDAarray.__init__
E       self.ptr = runtime.malloc3DArray(desc.ptr, width, height, depth,
E     File "cupy_backends/cuda/api/runtime.pyx", line 593, in cupy_backends.cuda.api.runtime.malloc3DArray
E       check_status(status)
E     File "cupy_backends/cuda/api/runtime.pyx", line 265, in cupy_backends.cuda.api.runtime.check_status
E       raise CUDARuntimeError(status)
E   cupy_backends.cuda.api.runtime.CUDARuntimeError: hipErrorUnknown: hipErrorUnknown

cupy_backends/cuda/api/runtime.pyx:265: AssertionError
----------------------------- Captured stderr call -----------------------------
Traceback (most recent call last):
  File "cupy_backends/cuda/api/runtime.pyx", line 644, in cupy_backends.cuda.api.runtime.freeArray
    check_status(status)
  File "cupy_backends/cuda/api/runtime.pyx", line 265, in cupy_backends.cuda.api.runtime.check_status
    raise CUDARuntimeError(status)
cupy_backends.cuda.api.runtime.CUDARuntimeError: hipErrorUnknown: hipErrorUnknown
_ TestAffineTransformTextureMemory.test_affine_transform_texture_memory[_param_204_{mode='nearest', order=0, output=None, output_shape=None, shape=(10, 20, 30), theta=0}] _

self = <<cupyx_tests.scipy_tests.ndimage_tests.test_interpolation.TestAffineTransformTextureMemory object at 0x7fd70736bcd0>  parameter: {'mode': 'nearest', 'order': 0, 'output': None, 'output_shape': None, 'shape': (10, 20, 30), 'theta': 0}>
xp = <module 'cupy' from '/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.Np3X0NVCM9/cupy/cupy/__init__.py'>
scp = <module 'cupyx.scipy' from '/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.Np3X0NVCM9/cupy/cupyx/scipy/__init__.py'>

    @testing.numpy_cupy_allclose(atol=0.1, scipy_name='scp')
    def test_affine_transform_texture_memory(self, xp, scp):
        a = xp.ones(self.shape, dtype=xp.float32)
        center = numpy.divide(numpy.subtract(self.shape, 1), 2)
    
        if len(self.shape) == 2:
            matrix = self._2d_rotation_matrix(self.theta, center)
        elif len(self.shape) == 3:
            matrix = self._3d_rotation_matrix(self.theta, center)
        else:
            return pytest.xfail('Unsupported shape')
    
        if self.output == 'empty':
            output = xp.empty(self.shape, dtype=xp.float32)
            if self.output_shape:
                return pytest.skip('This combination is tested in '
                                   'test_invalid_texture_arguments')
        else:
            output = self.output
    
        if self.output_shape:
            output_shape = (self.output_shape, ) * len(self.shape)
        else:
            output_shape = self.output_shape
    
        if xp == cupy:
            m = cupyx.scipy.ndimage.affine_transform
            matrix = cupy.array(matrix)
>           return m(a, matrix, output_shape=output_shape,
                     output=output, order=self.order,
                     mode=self.mode, texture_memory=True)

tests/cupyx_tests/scipy_tests/ndimage_tests/test_interpolation.py:398: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
cupyx/scipy/ndimage/interpolation.py:376: in affine_transform
    return _texture.affine_transformation(data=input,
cupyx/_texture.py:168: in affine_transformation
    texture_object = _create_texture_object(data,
cupyx/_texture.py:98: in _create_texture_object
    array = texture.CUDAarray(texture_fmt, *data.shape[::-1])
cupy/cuda/texture.pyx:296: in cupy.cuda.texture.CUDAarray.__init__
    self.ptr = runtime.malloc3DArray(desc.ptr, width, height, depth,
cupy_backends/cuda/api/runtime.pyx:593: in cupy_backends.cuda.api.runtime.malloc3DArray
    check_status(status)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

>   raise CUDARuntimeError(status)
E   AssertionError: Only cupy raises error
E   
E   Traceback (most recent call last):
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.Np3X0NVCM9/cupy/cupy/testing/_helper.py", line 47, in _call_func
E       result = impl(self, *args, **kw)
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.Np3X0NVCM9/cupy/tests/cupyx_tests/scipy_tests/ndimage_tests/test_interpolation.py", line 398, in test_affine_transform_texture_memory
E       return m(a, matrix, output_shape=output_shape,
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.Np3X0NVCM9/cupy/cupyx/scipy/ndimage/interpolation.py", line 376, in affine_transform
E       return _texture.affine_transformation(data=input,
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.Np3X0NVCM9/cupy/cupyx/_texture.py", line 168, in affine_transformation
E       texture_object = _create_texture_object(data,
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.Np3X0NVCM9/cupy/cupyx/_texture.py", line 98, in _create_texture_object
E       array = texture.CUDAarray(texture_fmt, *data.shape[::-1])
E     File "cupy/cuda/texture.pyx", line 296, in cupy.cuda.texture.CUDAarray.__init__
E       self.ptr = runtime.malloc3DArray(desc.ptr, width, height, depth,
E     File "cupy_backends/cuda/api/runtime.pyx", line 593, in cupy_backends.cuda.api.runtime.malloc3DArray
E       check_status(status)
E     File "cupy_backends/cuda/api/runtime.pyx", line 265, in cupy_backends.cuda.api.runtime.check_status
E       raise CUDARuntimeError(status)
E   cupy_backends.cuda.api.runtime.CUDARuntimeError: hipErrorUnknown: hipErrorUnknown

cupy_backends/cuda/api/runtime.pyx:265: AssertionError
----------------------------- Captured stderr call -----------------------------
Traceback (most recent call last):
  File "cupy_backends/cuda/api/runtime.pyx", line 644, in cupy_backends.cuda.api.runtime.freeArray
    check_status(status)
  File "cupy_backends/cuda/api/runtime.pyx", line 265, in cupy_backends.cuda.api.runtime.check_status
    raise CUDARuntimeError(status)
cupy_backends.cuda.api.runtime.CUDARuntimeError: hipErrorUnknown: hipErrorUnknown
_ TestAffineTransformTextureMemory.test_affine_transform_texture_memory[_param_205_{mode='nearest', order=0, output=None, output_shape=None, shape=(10, 20, 30), theta=90}] _

self = <<cupyx_tests.scipy_tests.ndimage_tests.test_interpolation.TestAffineTransformTextureMemory object at 0x7fd7059cafa0>  parameter: {'mode': 'nearest', 'order': 0, 'output': None, 'output_shape': None, 'shape': (10, 20, 30), 'theta': 90}>
xp = <module 'cupy' from '/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.Np3X0NVCM9/cupy/cupy/__init__.py'>
scp = <module 'cupyx.scipy' from '/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.Np3X0NVCM9/cupy/cupyx/scipy/__init__.py'>

    @testing.numpy_cupy_allclose(atol=0.1, scipy_name='scp')
    def test_affine_transform_texture_memory(self, xp, scp):
        a = xp.ones(self.shape, dtype=xp.float32)
        center = numpy.divide(numpy.subtract(self.shape, 1), 2)
    
        if len(self.shape) == 2:
            matrix = self._2d_rotation_matrix(self.theta, center)
        elif len(self.shape) == 3:
            matrix = self._3d_rotation_matrix(self.theta, center)
        else:
            return pytest.xfail('Unsupported shape')
    
        if self.output == 'empty':
            output = xp.empty(self.shape, dtype=xp.float32)
            if self.output_shape:
                return pytest.skip('This combination is tested in '
                                   'test_invalid_texture_arguments')
        else:
            output = self.output
    
        if self.output_shape:
            output_shape = (self.output_shape, ) * len(self.shape)
        else:
            output_shape = self.output_shape
    
        if xp == cupy:
            m = cupyx.scipy.ndimage.affine_transform
            matrix = cupy.array(matrix)
>           return m(a, matrix, output_shape=output_shape,
                     output=output, order=self.order,
                     mode=self.mode, texture_memory=True)

tests/cupyx_tests/scipy_tests/ndimage_tests/test_interpolation.py:398: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
cupyx/scipy/ndimage/interpolation.py:376: in affine_transform
    return _texture.affine_transformation(data=input,
cupyx/_texture.py:168: in affine_transformation
    texture_object = _create_texture_object(data,
cupyx/_texture.py:98: in _create_texture_object
    array = texture.CUDAarray(texture_fmt, *data.shape[::-1])
cupy/cuda/texture.pyx:296: in cupy.cuda.texture.CUDAarray.__init__
    self.ptr = runtime.malloc3DArray(desc.ptr, width, height, depth,
cupy_backends/cuda/api/runtime.pyx:593: in cupy_backends.cuda.api.runtime.malloc3DArray
    check_status(status)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

>   raise CUDARuntimeError(status)
E   AssertionError: Only cupy raises error
E   
E   Traceback (most recent call last):
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.Np3X0NVCM9/cupy/cupy/testing/_helper.py", line 47, in _call_func
E       result = impl(self, *args, **kw)
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.Np3X0NVCM9/cupy/tests/cupyx_tests/scipy_tests/ndimage_tests/test_interpolation.py", line 398, in test_affine_transform_texture_memory
E       return m(a, matrix, output_shape=output_shape,
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.Np3X0NVCM9/cupy/cupyx/scipy/ndimage/interpolation.py", line 376, in affine_transform
E       return _texture.affine_transformation(data=input,
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.Np3X0NVCM9/cupy/cupyx/_texture.py", line 168, in affine_transformation
E       texture_object = _create_texture_object(data,
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.Np3X0NVCM9/cupy/cupyx/_texture.py", line 98, in _create_texture_object
E       array = texture.CUDAarray(texture_fmt, *data.shape[::-1])
E     File "cupy/cuda/texture.pyx", line 296, in cupy.cuda.texture.CUDAarray.__init__
E       self.ptr = runtime.malloc3DArray(desc.ptr, width, height, depth,
E     File "cupy_backends/cuda/api/runtime.pyx", line 593, in cupy_backends.cuda.api.runtime.malloc3DArray
E       check_status(status)
E     File "cupy_backends/cuda/api/runtime.pyx", line 265, in cupy_backends.cuda.api.runtime.check_status
E       raise CUDARuntimeError(status)
E   cupy_backends.cuda.api.runtime.CUDARuntimeError: hipErrorUnknown: hipErrorUnknown

cupy_backends/cuda/api/runtime.pyx:265: AssertionError
----------------------------- Captured stderr call -----------------------------
Traceback (most recent call last):
  File "cupy_backends/cuda/api/runtime.pyx", line 644, in cupy_backends.cuda.api.runtime.freeArray
    check_status(status)
  File "cupy_backends/cuda/api/runtime.pyx", line 265, in cupy_backends.cuda.api.runtime.check_status
    raise CUDARuntimeError(status)
cupy_backends.cuda.api.runtime.CUDARuntimeError: hipErrorUnknown: hipErrorUnknown
_ TestAffineTransformTextureMemory.test_affine_transform_texture_memory[_param_206_{mode='nearest', order=0, output=None, output_shape=None, shape=(10, 20, 30), theta=180}] _

self = <<cupyx_tests.scipy_tests.ndimage_tests.test_interpolation.TestAffineTransformTextureMemory object at 0x7fd705ac68b0>  parameter: {'mode': 'nearest', 'order': 0, 'output': None, 'output_shape': None, 'shape': (10, 20, 30), 'theta': 180}>
xp = <module 'cupy' from '/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.Np3X0NVCM9/cupy/cupy/__init__.py'>
scp = <module 'cupyx.scipy' from '/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.Np3X0NVCM9/cupy/cupyx/scipy/__init__.py'>

    @testing.numpy_cupy_allclose(atol=0.1, scipy_name='scp')
    def test_affine_transform_texture_memory(self, xp, scp):
        a = xp.ones(self.shape, dtype=xp.float32)
        center = numpy.divide(numpy.subtract(self.shape, 1), 2)
    
        if len(self.shape) == 2:
            matrix = self._2d_rotation_matrix(self.theta, center)
        elif len(self.shape) == 3:
            matrix = self._3d_rotation_matrix(self.theta, center)
        else:
            return pytest.xfail('Unsupported shape')
    
        if self.output == 'empty':
            output = xp.empty(self.shape, dtype=xp.float32)
            if self.output_shape:
                return pytest.skip('This combination is tested in '
                                   'test_invalid_texture_arguments')
        else:
            output = self.output
    
        if self.output_shape:
            output_shape = (self.output_shape, ) * len(self.shape)
        else:
            output_shape = self.output_shape
    
        if xp == cupy:
            m = cupyx.scipy.ndimage.affine_transform
            matrix = cupy.array(matrix)
>           return m(a, matrix, output_shape=output_shape,
                     output=output, order=self.order,
                     mode=self.mode, texture_memory=True)

tests/cupyx_tests/scipy_tests/ndimage_tests/test_interpolation.py:398: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
cupyx/scipy/ndimage/interpolation.py:376: in affine_transform
    return _texture.affine_transformation(data=input,
cupyx/_texture.py:168: in affine_transformation
    texture_object = _create_texture_object(data,
cupyx/_texture.py:98: in _create_texture_object
    array = texture.CUDAarray(texture_fmt, *data.shape[::-1])
cupy/cuda/texture.pyx:296: in cupy.cuda.texture.CUDAarray.__init__
    self.ptr = runtime.malloc3DArray(desc.ptr, width, height, depth,
cupy_backends/cuda/api/runtime.pyx:593: in cupy_backends.cuda.api.runtime.malloc3DArray
    check_status(status)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

>   raise CUDARuntimeError(status)
E   AssertionError: Only cupy raises error
E   
E   Traceback (most recent call last):
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.Np3X0NVCM9/cupy/cupy/testing/_helper.py", line 47, in _call_func
E       result = impl(self, *args, **kw)
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.Np3X0NVCM9/cupy/tests/cupyx_tests/scipy_tests/ndimage_tests/test_interpolation.py", line 398, in test_affine_transform_texture_memory
E       return m(a, matrix, output_shape=output_shape,
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.Np3X0NVCM9/cupy/cupyx/scipy/ndimage/interpolation.py", line 376, in affine_transform
E       return _texture.affine_transformation(data=input,
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.Np3X0NVCM9/cupy/cupyx/_texture.py", line 168, in affine_transformation
E       texture_object = _create_texture_object(data,
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.Np3X0NVCM9/cupy/cupyx/_texture.py", line 98, in _create_texture_object
E       array = texture.CUDAarray(texture_fmt, *data.shape[::-1])
E     File "cupy/cuda/texture.pyx", line 296, in cupy.cuda.texture.CUDAarray.__init__
E       self.ptr = runtime.malloc3DArray(desc.ptr, width, height, depth,
E     File "cupy_backends/cuda/api/runtime.pyx", line 593, in cupy_backends.cuda.api.runtime.malloc3DArray
E       check_status(status)
E     File "cupy_backends/cuda/api/runtime.pyx", line 265, in cupy_backends.cuda.api.runtime.check_status
E       raise CUDARuntimeError(status)
E   cupy_backends.cuda.api.runtime.CUDARuntimeError: hipErrorUnknown: hipErrorUnknown

cupy_backends/cuda/api/runtime.pyx:265: AssertionError
----------------------------- Captured stderr call -----------------------------
Traceback (most recent call last):
  File "cupy_backends/cuda/api/runtime.pyx", line 644, in cupy_backends.cuda.api.runtime.freeArray
    check_status(status)
  File "cupy_backends/cuda/api/runtime.pyx", line 265, in cupy_backends.cuda.api.runtime.check_status
    raise CUDARuntimeError(status)
cupy_backends.cuda.api.runtime.CUDARuntimeError: hipErrorUnknown: hipErrorUnknown
_ TestAffineTransformTextureMemory.test_affine_transform_texture_memory[_param_207_{mode='nearest', order=0, output=None, output_shape=None, shape=(10, 20, 30), theta=270}] _

self = <<cupyx_tests.scipy_tests.ndimage_tests.test_interpolation.TestAffineTransformTextureMemory object at 0x7fd7078f84f0>  parameter: {'mode': 'nearest', 'order': 0, 'output': None, 'output_shape': None, 'shape': (10, 20, 30), 'theta': 270}>
xp = <module 'cupy' from '/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.Np3X0NVCM9/cupy/cupy/__init__.py'>
scp = <module 'cupyx.scipy' from '/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.Np3X0NVCM9/cupy/cupyx/scipy/__init__.py'>

    @testing.numpy_cupy_allclose(atol=0.1, scipy_name='scp')
    def test_affine_transform_texture_memory(self, xp, scp):
        a = xp.ones(self.shape, dtype=xp.float32)
        center = numpy.divide(numpy.subtract(self.shape, 1), 2)
    
        if len(self.shape) == 2:
            matrix = self._2d_rotation_matrix(self.theta, center)
        elif len(self.shape) == 3:
            matrix = self._3d_rotation_matrix(self.theta, center)
        else:
            return pytest.xfail('Unsupported shape')
    
        if self.output == 'empty':
            output = xp.empty(self.shape, dtype=xp.float32)
            if self.output_shape:
                return pytest.skip('This combination is tested in '
                                   'test_invalid_texture_arguments')
        else:
            output = self.output
    
        if self.output_shape:
            output_shape = (self.output_shape, ) * len(self.shape)
        else:
            output_shape = self.output_shape
    
        if xp == cupy:
            m = cupyx.scipy.ndimage.affine_transform
            matrix = cupy.array(matrix)
>           return m(a, matrix, output_shape=output_shape,
                     output=output, order=self.order,
                     mode=self.mode, texture_memory=True)

tests/cupyx_tests/scipy_tests/ndimage_tests/test_interpolation.py:398: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
cupyx/scipy/ndimage/interpolation.py:376: in affine_transform
    return _texture.affine_transformation(data=input,
cupyx/_texture.py:168: in affine_transformation
    texture_object = _create_texture_object(data,
cupyx/_texture.py:98: in _create_texture_object
    array = texture.CUDAarray(texture_fmt, *data.shape[::-1])
cupy/cuda/texture.pyx:296: in cupy.cuda.texture.CUDAarray.__init__
    self.ptr = runtime.malloc3DArray(desc.ptr, width, height, depth,
cupy_backends/cuda/api/runtime.pyx:593: in cupy_backends.cuda.api.runtime.malloc3DArray
    check_status(status)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

>   raise CUDARuntimeError(status)
E   AssertionError: Only cupy raises error
E   
E   Traceback (most recent call last):
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.Np3X0NVCM9/cupy/cupy/testing/_helper.py", line 47, in _call_func
E       result = impl(self, *args, **kw)
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.Np3X0NVCM9/cupy/tests/cupyx_tests/scipy_tests/ndimage_tests/test_interpolation.py", line 398, in test_affine_transform_texture_memory
E       return m(a, matrix, output_shape=output_shape,
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.Np3X0NVCM9/cupy/cupyx/scipy/ndimage/interpolation.py", line 376, in affine_transform
E       return _texture.affine_transformation(data=input,
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.Np3X0NVCM9/cupy/cupyx/_texture.py", line 168, in affine_transformation
E       texture_object = _create_texture_object(data,
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.Np3X0NVCM9/cupy/cupyx/_texture.py", line 98, in _create_texture_object
E       array = texture.CUDAarray(texture_fmt, *data.shape[::-1])
E     File "cupy/cuda/texture.pyx", line 296, in cupy.cuda.texture.CUDAarray.__init__
E       self.ptr = runtime.malloc3DArray(desc.ptr, width, height, depth,
E     File "cupy_backends/cuda/api/runtime.pyx", line 593, in cupy_backends.cuda.api.runtime.malloc3DArray
E       check_status(status)
E     File "cupy_backends/cuda/api/runtime.pyx", line 265, in cupy_backends.cuda.api.runtime.check_status
E       raise CUDARuntimeError(status)
E   cupy_backends.cuda.api.runtime.CUDARuntimeError: hipErrorUnknown: hipErrorUnknown

cupy_backends/cuda/api/runtime.pyx:265: AssertionError
----------------------------- Captured stderr call -----------------------------
Traceback (most recent call last):
  File "cupy_backends/cuda/api/runtime.pyx", line 644, in cupy_backends.cuda.api.runtime.freeArray
    check_status(status)
  File "cupy_backends/cuda/api/runtime.pyx", line 265, in cupy_backends.cuda.api.runtime.check_status
    raise CUDARuntimeError(status)
cupy_backends.cuda.api.runtime.CUDARuntimeError: hipErrorUnknown: hipErrorUnknown
_ TestAffineTransformTextureMemory.test_affine_transform_texture_memory[_param_208_{mode='nearest', order=0, output=None, output_shape=10, shape=(100, 100), theta=0}] _

self = <<cupyx_tests.scipy_tests.ndimage_tests.test_interpolation.TestAffineTransformTextureMemory object at 0x7fd7057530a0>  parameter: {'mode': 'nearest', 'order': 0, 'output': None, 'output_shape': 10, 'shape': (100, 100), 'theta': 0}>
xp = <module 'cupy' from '/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.Np3X0NVCM9/cupy/cupy/__init__.py'>
scp = <module 'cupyx.scipy' from '/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.Np3X0NVCM9/cupy/cupyx/scipy/__init__.py'>

    @testing.numpy_cupy_allclose(atol=0.1, scipy_name='scp')
    def test_affine_transform_texture_memory(self, xp, scp):
        a = xp.ones(self.shape, dtype=xp.float32)
        center = numpy.divide(numpy.subtract(self.shape, 1), 2)
    
        if len(self.shape) == 2:
            matrix = self._2d_rotation_matrix(self.theta, center)
        elif len(self.shape) == 3:
            matrix = self._3d_rotation_matrix(self.theta, center)
        else:
            return pytest.xfail('Unsupported shape')
    
        if self.output == 'empty':
            output = xp.empty(self.shape, dtype=xp.float32)
            if self.output_shape:
                return pytest.skip('This combination is tested in '
                                   'test_invalid_texture_arguments')
        else:
            output = self.output
    
        if self.output_shape:
            output_shape = (self.output_shape, ) * len(self.shape)
        else:
            output_shape = self.output_shape
    
        if xp == cupy:
            m = cupyx.scipy.ndimage.affine_transform
            matrix = cupy.array(matrix)
>           return m(a, matrix, output_shape=output_shape,
                     output=output, order=self.order,
                     mode=self.mode, texture_memory=True)

tests/cupyx_tests/scipy_tests/ndimage_tests/test_interpolation.py:398: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
cupyx/scipy/ndimage/interpolation.py:376: in affine_transform
    return _texture.affine_transformation(data=input,
cupyx/_texture.py:168: in affine_transformation
    texture_object = _create_texture_object(data,
cupyx/_texture.py:98: in _create_texture_object
    array = texture.CUDAarray(texture_fmt, *data.shape[::-1])
cupy/cuda/texture.pyx:296: in cupy.cuda.texture.CUDAarray.__init__
    self.ptr = runtime.malloc3DArray(desc.ptr, width, height, depth,
cupy_backends/cuda/api/runtime.pyx:593: in cupy_backends.cuda.api.runtime.malloc3DArray
    check_status(status)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

>   raise CUDARuntimeError(status)
E   AssertionError: Only cupy raises error
E   
E   Traceback (most recent call last):
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.Np3X0NVCM9/cupy/cupy/testing/_helper.py", line 47, in _call_func
E       result = impl(self, *args, **kw)
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.Np3X0NVCM9/cupy/tests/cupyx_tests/scipy_tests/ndimage_tests/test_interpolation.py", line 398, in test_affine_transform_texture_memory
E       return m(a, matrix, output_shape=output_shape,
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.Np3X0NVCM9/cupy/cupyx/scipy/ndimage/interpolation.py", line 376, in affine_transform
E       return _texture.affine_transformation(data=input,
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.Np3X0NVCM9/cupy/cupyx/_texture.py", line 168, in affine_transformation
E       texture_object = _create_texture_object(data,
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.Np3X0NVCM9/cupy/cupyx/_texture.py", line 98, in _create_texture_object
E       array = texture.CUDAarray(texture_fmt, *data.shape[::-1])
E     File "cupy/cuda/texture.pyx", line 296, in cupy.cuda.texture.CUDAarray.__init__
E       self.ptr = runtime.malloc3DArray(desc.ptr, width, height, depth,
E     File "cupy_backends/cuda/api/runtime.pyx", line 593, in cupy_backends.cuda.api.runtime.malloc3DArray
E       check_status(status)
E     File "cupy_backends/cuda/api/runtime.pyx", line 265, in cupy_backends.cuda.api.runtime.check_status
E       raise CUDARuntimeError(status)
E   cupy_backends.cuda.api.runtime.CUDARuntimeError: hipErrorUnknown: hipErrorUnknown

cupy_backends/cuda/api/runtime.pyx:265: AssertionError
----------------------------- Captured stderr call -----------------------------
Traceback (most recent call last):
  File "cupy_backends/cuda/api/runtime.pyx", line 644, in cupy_backends.cuda.api.runtime.freeArray
    check_status(status)
  File "cupy_backends/cuda/api/runtime.pyx", line 265, in cupy_backends.cuda.api.runtime.check_status
    raise CUDARuntimeError(status)
cupy_backends.cuda.api.runtime.CUDARuntimeError: hipErrorUnknown: hipErrorUnknown
_ TestAffineTransformTextureMemory.test_affine_transform_texture_memory[_param_209_{mode='nearest', order=0, output=None, output_shape=10, shape=(100, 100), theta=90}] _

self = <<cupyx_tests.scipy_tests.ndimage_tests.test_interpolation.TestAffineTransformTextureMemory object at 0x7fd705aa8a60>  parameter: {'mode': 'nearest', 'order': 0, 'output': None, 'output_shape': 10, 'shape': (100, 100), 'theta': 90}>
xp = <module 'cupy' from '/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.Np3X0NVCM9/cupy/cupy/__init__.py'>
scp = <module 'cupyx.scipy' from '/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.Np3X0NVCM9/cupy/cupyx/scipy/__init__.py'>

    @testing.numpy_cupy_allclose(atol=0.1, scipy_name='scp')
    def test_affine_transform_texture_memory(self, xp, scp):
        a = xp.ones(self.shape, dtype=xp.float32)
        center = numpy.divide(numpy.subtract(self.shape, 1), 2)
    
        if len(self.shape) == 2:
            matrix = self._2d_rotation_matrix(self.theta, center)
        elif len(self.shape) == 3:
            matrix = self._3d_rotation_matrix(self.theta, center)
        else:
            return pytest.xfail('Unsupported shape')
    
        if self.output == 'empty':
            output = xp.empty(self.shape, dtype=xp.float32)
            if self.output_shape:
                return pytest.skip('This combination is tested in '
                                   'test_invalid_texture_arguments')
        else:
            output = self.output
    
        if self.output_shape:
            output_shape = (self.output_shape, ) * len(self.shape)
        else:
            output_shape = self.output_shape
    
        if xp == cupy:
            m = cupyx.scipy.ndimage.affine_transform
            matrix = cupy.array(matrix)
>           return m(a, matrix, output_shape=output_shape,
                     output=output, order=self.order,
                     mode=self.mode, texture_memory=True)

tests/cupyx_tests/scipy_tests/ndimage_tests/test_interpolation.py:398: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
cupyx/scipy/ndimage/interpolation.py:376: in affine_transform
    return _texture.affine_transformation(data=input,
cupyx/_texture.py:168: in affine_transformation
    texture_object = _create_texture_object(data,
cupyx/_texture.py:98: in _create_texture_object
    array = texture.CUDAarray(texture_fmt, *data.shape[::-1])
cupy/cuda/texture.pyx:296: in cupy.cuda.texture.CUDAarray.__init__
    self.ptr = runtime.malloc3DArray(desc.ptr, width, height, depth,
cupy_backends/cuda/api/runtime.pyx:593: in cupy_backends.cuda.api.runtime.malloc3DArray
    check_status(status)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

>   raise CUDARuntimeError(status)
E   AssertionError: Only cupy raises error
E   
E   Traceback (most recent call last):
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.Np3X0NVCM9/cupy/cupy/testing/_helper.py", line 47, in _call_func
E       result = impl(self, *args, **kw)
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.Np3X0NVCM9/cupy/tests/cupyx_tests/scipy_tests/ndimage_tests/test_interpolation.py", line 398, in test_affine_transform_texture_memory
E       return m(a, matrix, output_shape=output_shape,
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.Np3X0NVCM9/cupy/cupyx/scipy/ndimage/interpolation.py", line 376, in affine_transform
E       return _texture.affine_transformation(data=input,
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.Np3X0NVCM9/cupy/cupyx/_texture.py", line 168, in affine_transformation
E       texture_object = _create_texture_object(data,
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.Np3X0NVCM9/cupy/cupyx/_texture.py", line 98, in _create_texture_object
E       array = texture.CUDAarray(texture_fmt, *data.shape[::-1])
E     File "cupy/cuda/texture.pyx", line 296, in cupy.cuda.texture.CUDAarray.__init__
E       self.ptr = runtime.malloc3DArray(desc.ptr, width, height, depth,
E     File "cupy_backends/cuda/api/runtime.pyx", line 593, in cupy_backends.cuda.api.runtime.malloc3DArray
E       check_status(status)
E     File "cupy_backends/cuda/api/runtime.pyx", line 265, in cupy_backends.cuda.api.runtime.check_status
E       raise CUDARuntimeError(status)
E   cupy_backends.cuda.api.runtime.CUDARuntimeError: hipErrorUnknown: hipErrorUnknown

cupy_backends/cuda/api/runtime.pyx:265: AssertionError
----------------------------- Captured stderr call -----------------------------
Traceback (most recent call last):
  File "cupy_backends/cuda/api/runtime.pyx", line 644, in cupy_backends.cuda.api.runtime.freeArray
    check_status(status)
  File "cupy_backends/cuda/api/runtime.pyx", line 265, in cupy_backends.cuda.api.runtime.check_status
    raise CUDARuntimeError(status)
cupy_backends.cuda.api.runtime.CUDARuntimeError: hipErrorUnknown: hipErrorUnknown
_ TestAffineTransformTextureMemory.test_affine_transform_texture_memory[_param_210_{mode='nearest', order=0, output=None, output_shape=10, shape=(100, 100), theta=180}] _

self = <<cupyx_tests.scipy_tests.ndimage_tests.test_interpolation.TestAffineTransformTextureMemory object at 0x7fd705556d60>  parameter: {'mode': 'nearest', 'order': 0, 'output': None, 'output_shape': 10, 'shape': (100, 100), 'theta': 180}>
xp = <module 'cupy' from '/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.Np3X0NVCM9/cupy/cupy/__init__.py'>
scp = <module 'cupyx.scipy' from '/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.Np3X0NVCM9/cupy/cupyx/scipy/__init__.py'>

    @testing.numpy_cupy_allclose(atol=0.1, scipy_name='scp')
    def test_affine_transform_texture_memory(self, xp, scp):
        a = xp.ones(self.shape, dtype=xp.float32)
        center = numpy.divide(numpy.subtract(self.shape, 1), 2)
    
        if len(self.shape) == 2:
            matrix = self._2d_rotation_matrix(self.theta, center)
        elif len(self.shape) == 3:
            matrix = self._3d_rotation_matrix(self.theta, center)
        else:
            return pytest.xfail('Unsupported shape')
    
        if self.output == 'empty':
            output = xp.empty(self.shape, dtype=xp.float32)
            if self.output_shape:
                return pytest.skip('This combination is tested in '
                                   'test_invalid_texture_arguments')
        else:
            output = self.output
    
        if self.output_shape:
            output_shape = (self.output_shape, ) * len(self.shape)
        else:
            output_shape = self.output_shape
    
        if xp == cupy:
            m = cupyx.scipy.ndimage.affine_transform
            matrix = cupy.array(matrix)
>           return m(a, matrix, output_shape=output_shape,
                     output=output, order=self.order,
                     mode=self.mode, texture_memory=True)

tests/cupyx_tests/scipy_tests/ndimage_tests/test_interpolation.py:398: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
cupyx/scipy/ndimage/interpolation.py:376: in affine_transform
    return _texture.affine_transformation(data=input,
cupyx/_texture.py:168: in affine_transformation
    texture_object = _create_texture_object(data,
cupyx/_texture.py:98: in _create_texture_object
    array = texture.CUDAarray(texture_fmt, *data.shape[::-1])
cupy/cuda/texture.pyx:296: in cupy.cuda.texture.CUDAarray.__init__
    self.ptr = runtime.malloc3DArray(desc.ptr, width, height, depth,
cupy_backends/cuda/api/runtime.pyx:593: in cupy_backends.cuda.api.runtime.malloc3DArray
    check_status(status)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

>   raise CUDARuntimeError(status)
E   AssertionError: Only cupy raises error
E   
E   Traceback (most recent call last):
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.Np3X0NVCM9/cupy/cupy/testing/_helper.py", line 47, in _call_func
E       result = impl(self, *args, **kw)
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.Np3X0NVCM9/cupy/tests/cupyx_tests/scipy_tests/ndimage_tests/test_interpolation.py", line 398, in test_affine_transform_texture_memory
E       return m(a, matrix, output_shape=output_shape,
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.Np3X0NVCM9/cupy/cupyx/scipy/ndimage/interpolation.py", line 376, in affine_transform
E       return _texture.affine_transformation(data=input,
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.Np3X0NVCM9/cupy/cupyx/_texture.py", line 168, in affine_transformation
E       texture_object = _create_texture_object(data,
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.Np3X0NVCM9/cupy/cupyx/_texture.py", line 98, in _create_texture_object
E       array = texture.CUDAarray(texture_fmt, *data.shape[::-1])
E     File "cupy/cuda/texture.pyx", line 296, in cupy.cuda.texture.CUDAarray.__init__
E       self.ptr = runtime.malloc3DArray(desc.ptr, width, height, depth,
E     File "cupy_backends/cuda/api/runtime.pyx", line 593, in cupy_backends.cuda.api.runtime.malloc3DArray
E       check_status(status)
E     File "cupy_backends/cuda/api/runtime.pyx", line 265, in cupy_backends.cuda.api.runtime.check_status
E       raise CUDARuntimeError(status)
E   cupy_backends.cuda.api.runtime.CUDARuntimeError: hipErrorUnknown: hipErrorUnknown

cupy_backends/cuda/api/runtime.pyx:265: AssertionError
----------------------------- Captured stderr call -----------------------------
Traceback (most recent call last):
  File "cupy_backends/cuda/api/runtime.pyx", line 644, in cupy_backends.cuda.api.runtime.freeArray
    check_status(status)
  File "cupy_backends/cuda/api/runtime.pyx", line 265, in cupy_backends.cuda.api.runtime.check_status
    raise CUDARuntimeError(status)
cupy_backends.cuda.api.runtime.CUDARuntimeError: hipErrorUnknown: hipErrorUnknown
_ TestAffineTransformTextureMemory.test_affine_transform_texture_memory[_param_211_{mode='nearest', order=0, output=None, output_shape=10, shape=(100, 100), theta=270}] _

self = <<cupyx_tests.scipy_tests.ndimage_tests.test_interpolation.TestAffineTransformTextureMemory object at 0x7fd705833dc0>  parameter: {'mode': 'nearest', 'order': 0, 'output': None, 'output_shape': 10, 'shape': (100, 100), 'theta': 270}>
xp = <module 'cupy' from '/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.Np3X0NVCM9/cupy/cupy/__init__.py'>
scp = <module 'cupyx.scipy' from '/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.Np3X0NVCM9/cupy/cupyx/scipy/__init__.py'>

    @testing.numpy_cupy_allclose(atol=0.1, scipy_name='scp')
    def test_affine_transform_texture_memory(self, xp, scp):
        a = xp.ones(self.shape, dtype=xp.float32)
        center = numpy.divide(numpy.subtract(self.shape, 1), 2)
    
        if len(self.shape) == 2:
            matrix = self._2d_rotation_matrix(self.theta, center)
        elif len(self.shape) == 3:
            matrix = self._3d_rotation_matrix(self.theta, center)
        else:
            return pytest.xfail('Unsupported shape')
    
        if self.output == 'empty':
            output = xp.empty(self.shape, dtype=xp.float32)
            if self.output_shape:
                return pytest.skip('This combination is tested in '
                                   'test_invalid_texture_arguments')
        else:
            output = self.output
    
        if self.output_shape:
            output_shape = (self.output_shape, ) * len(self.shape)
        else:
            output_shape = self.output_shape
    
        if xp == cupy:
            m = cupyx.scipy.ndimage.affine_transform
            matrix = cupy.array(matrix)
>           return m(a, matrix, output_shape=output_shape,
                     output=output, order=self.order,
                     mode=self.mode, texture_memory=True)

tests/cupyx_tests/scipy_tests/ndimage_tests/test_interpolation.py:398: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
cupyx/scipy/ndimage/interpolation.py:376: in affine_transform
    return _texture.affine_transformation(data=input,
cupyx/_texture.py:168: in affine_transformation
    texture_object = _create_texture_object(data,
cupyx/_texture.py:98: in _create_texture_object
    array = texture.CUDAarray(texture_fmt, *data.shape[::-1])
cupy/cuda/texture.pyx:296: in cupy.cuda.texture.CUDAarray.__init__
    self.ptr = runtime.malloc3DArray(desc.ptr, width, height, depth,
cupy_backends/cuda/api/runtime.pyx:593: in cupy_backends.cuda.api.runtime.malloc3DArray
    check_status(status)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

>   raise CUDARuntimeError(status)
E   AssertionError: Only cupy raises error
E   
E   Traceback (most recent call last):
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.Np3X0NVCM9/cupy/cupy/testing/_helper.py", line 47, in _call_func
E       result = impl(self, *args, **kw)
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.Np3X0NVCM9/cupy/tests/cupyx_tests/scipy_tests/ndimage_tests/test_interpolation.py", line 398, in test_affine_transform_texture_memory
E       return m(a, matrix, output_shape=output_shape,
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.Np3X0NVCM9/cupy/cupyx/scipy/ndimage/interpolation.py", line 376, in affine_transform
E       return _texture.affine_transformation(data=input,
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.Np3X0NVCM9/cupy/cupyx/_texture.py", line 168, in affine_transformation
E       texture_object = _create_texture_object(data,
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.Np3X0NVCM9/cupy/cupyx/_texture.py", line 98, in _create_texture_object
E       array = texture.CUDAarray(texture_fmt, *data.shape[::-1])
E     File "cupy/cuda/texture.pyx", line 296, in cupy.cuda.texture.CUDAarray.__init__
E       self.ptr = runtime.malloc3DArray(desc.ptr, width, height, depth,
E     File "cupy_backends/cuda/api/runtime.pyx", line 593, in cupy_backends.cuda.api.runtime.malloc3DArray
E       check_status(status)
E     File "cupy_backends/cuda/api/runtime.pyx", line 265, in cupy_backends.cuda.api.runtime.check_status
E       raise CUDARuntimeError(status)
E   cupy_backends.cuda.api.runtime.CUDARuntimeError: hipErrorUnknown: hipErrorUnknown

cupy_backends/cuda/api/runtime.pyx:265: AssertionError
----------------------------- Captured stderr call -----------------------------
Traceback (most recent call last):
  File "cupy_backends/cuda/api/runtime.pyx", line 644, in cupy_backends.cuda.api.runtime.freeArray
    check_status(status)
  File "cupy_backends/cuda/api/runtime.pyx", line 265, in cupy_backends.cuda.api.runtime.check_status
    raise CUDARuntimeError(status)
cupy_backends.cuda.api.runtime.CUDARuntimeError: hipErrorUnknown: hipErrorUnknown
_ TestAffineTransformTextureMemory.test_affine_transform_texture_memory[_param_212_{mode='nearest', order=0, output=None, output_shape=10, shape=(10, 20), theta=0}] _

self = <<cupyx_tests.scipy_tests.ndimage_tests.test_interpolation.TestAffineTransformTextureMemory object at 0x7fd7086d69a0>  parameter: {'mode': 'nearest', 'order': 0, 'output': None, 'output_shape': 10, 'shape': (10, 20), 'theta': 0}>
xp = <module 'cupy' from '/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.Np3X0NVCM9/cupy/cupy/__init__.py'>
scp = <module 'cupyx.scipy' from '/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.Np3X0NVCM9/cupy/cupyx/scipy/__init__.py'>

    @testing.numpy_cupy_allclose(atol=0.1, scipy_name='scp')
    def test_affine_transform_texture_memory(self, xp, scp):
        a = xp.ones(self.shape, dtype=xp.float32)
        center = numpy.divide(numpy.subtract(self.shape, 1), 2)
    
        if len(self.shape) == 2:
            matrix = self._2d_rotation_matrix(self.theta, center)
        elif len(self.shape) == 3:
            matrix = self._3d_rotation_matrix(self.theta, center)
        else:
            return pytest.xfail('Unsupported shape')
    
        if self.output == 'empty':
            output = xp.empty(self.shape, dtype=xp.float32)
            if self.output_shape:
                return pytest.skip('This combination is tested in '
                                   'test_invalid_texture_arguments')
        else:
            output = self.output
    
        if self.output_shape:
            output_shape = (self.output_shape, ) * len(self.shape)
        else:
            output_shape = self.output_shape
    
        if xp == cupy:
            m = cupyx.scipy.ndimage.affine_transform
            matrix = cupy.array(matrix)
>           return m(a, matrix, output_shape=output_shape,
                     output=output, order=self.order,
                     mode=self.mode, texture_memory=True)

tests/cupyx_tests/scipy_tests/ndimage_tests/test_interpolation.py:398: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
cupyx/scipy/ndimage/interpolation.py:376: in affine_transform
    return _texture.affine_transformation(data=input,
cupyx/_texture.py:168: in affine_transformation
    texture_object = _create_texture_object(data,
cupyx/_texture.py:98: in _create_texture_object
    array = texture.CUDAarray(texture_fmt, *data.shape[::-1])
cupy/cuda/texture.pyx:296: in cupy.cuda.texture.CUDAarray.__init__
    self.ptr = runtime.malloc3DArray(desc.ptr, width, height, depth,
cupy_backends/cuda/api/runtime.pyx:593: in cupy_backends.cuda.api.runtime.malloc3DArray
    check_status(status)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

>   raise CUDARuntimeError(status)
E   AssertionError: Only cupy raises error
E   
E   Traceback (most recent call last):
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.Np3X0NVCM9/cupy/cupy/testing/_helper.py", line 47, in _call_func
E       result = impl(self, *args, **kw)
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.Np3X0NVCM9/cupy/tests/cupyx_tests/scipy_tests/ndimage_tests/test_interpolation.py", line 398, in test_affine_transform_texture_memory
E       return m(a, matrix, output_shape=output_shape,
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.Np3X0NVCM9/cupy/cupyx/scipy/ndimage/interpolation.py", line 376, in affine_transform
E       return _texture.affine_transformation(data=input,
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.Np3X0NVCM9/cupy/cupyx/_texture.py", line 168, in affine_transformation
E       texture_object = _create_texture_object(data,
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.Np3X0NVCM9/cupy/cupyx/_texture.py", line 98, in _create_texture_object
E       array = texture.CUDAarray(texture_fmt, *data.shape[::-1])
E     File "cupy/cuda/texture.pyx", line 296, in cupy.cuda.texture.CUDAarray.__init__
E       self.ptr = runtime.malloc3DArray(desc.ptr, width, height, depth,
E     File "cupy_backends/cuda/api/runtime.pyx", line 593, in cupy_backends.cuda.api.runtime.malloc3DArray
E       check_status(status)
E     File "cupy_backends/cuda/api/runtime.pyx", line 265, in cupy_backends.cuda.api.runtime.check_status
E       raise CUDARuntimeError(status)
E   cupy_backends.cuda.api.runtime.CUDARuntimeError: hipErrorUnknown: hipErrorUnknown

cupy_backends/cuda/api/runtime.pyx:265: AssertionError
----------------------------- Captured stderr call -----------------------------
Traceback (most recent call last):
  File "cupy_backends/cuda/api/runtime.pyx", line 644, in cupy_backends.cuda.api.runtime.freeArray
    check_status(status)
  File "cupy_backends/cuda/api/runtime.pyx", line 265, in cupy_backends.cuda.api.runtime.check_status
    raise CUDARuntimeError(status)
cupy_backends.cuda.api.runtime.CUDARuntimeError: hipErrorUnknown: hipErrorUnknown
_ TestAffineTransformTextureMemory.test_affine_transform_texture_memory[_param_213_{mode='nearest', order=0, output=None, output_shape=10, shape=(10, 20), theta=90}] _

self = <<cupyx_tests.scipy_tests.ndimage_tests.test_interpolation.TestAffineTransformTextureMemory object at 0x7fd705a3c4f0>  parameter: {'mode': 'nearest', 'order': 0, 'output': None, 'output_shape': 10, 'shape': (10, 20), 'theta': 90}>
xp = <module 'cupy' from '/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.Np3X0NVCM9/cupy/cupy/__init__.py'>
scp = <module 'cupyx.scipy' from '/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.Np3X0NVCM9/cupy/cupyx/scipy/__init__.py'>

    @testing.numpy_cupy_allclose(atol=0.1, scipy_name='scp')
    def test_affine_transform_texture_memory(self, xp, scp):
        a = xp.ones(self.shape, dtype=xp.float32)
        center = numpy.divide(numpy.subtract(self.shape, 1), 2)
    
        if len(self.shape) == 2:
            matrix = self._2d_rotation_matrix(self.theta, center)
        elif len(self.shape) == 3:
            matrix = self._3d_rotation_matrix(self.theta, center)
        else:
            return pytest.xfail('Unsupported shape')
    
        if self.output == 'empty':
            output = xp.empty(self.shape, dtype=xp.float32)
            if self.output_shape:
                return pytest.skip('This combination is tested in '
                                   'test_invalid_texture_arguments')
        else:
            output = self.output
    
        if self.output_shape:
            output_shape = (self.output_shape, ) * len(self.shape)
        else:
            output_shape = self.output_shape
    
        if xp == cupy:
            m = cupyx.scipy.ndimage.affine_transform
            matrix = cupy.array(matrix)
>           return m(a, matrix, output_shape=output_shape,
                     output=output, order=self.order,
                     mode=self.mode, texture_memory=True)

tests/cupyx_tests/scipy_tests/ndimage_tests/test_interpolation.py:398: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
cupyx/scipy/ndimage/interpolation.py:376: in affine_transform
    return _texture.affine_transformation(data=input,
cupyx/_texture.py:168: in affine_transformation
    texture_object = _create_texture_object(data,
cupyx/_texture.py:98: in _create_texture_object
    array = texture.CUDAarray(texture_fmt, *data.shape[::-1])
cupy/cuda/texture.pyx:296: in cupy.cuda.texture.CUDAarray.__init__
    self.ptr = runtime.malloc3DArray(desc.ptr, width, height, depth,
cupy_backends/cuda/api/runtime.pyx:593: in cupy_backends.cuda.api.runtime.malloc3DArray
    check_status(status)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

>   raise CUDARuntimeError(status)
E   AssertionError: Only cupy raises error
E   
E   Traceback (most recent call last):
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.Np3X0NVCM9/cupy/cupy/testing/_helper.py", line 47, in _call_func
E       result = impl(self, *args, **kw)
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.Np3X0NVCM9/cupy/tests/cupyx_tests/scipy_tests/ndimage_tests/test_interpolation.py", line 398, in test_affine_transform_texture_memory
E       return m(a, matrix, output_shape=output_shape,
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.Np3X0NVCM9/cupy/cupyx/scipy/ndimage/interpolation.py", line 376, in affine_transform
E       return _texture.affine_transformation(data=input,
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.Np3X0NVCM9/cupy/cupyx/_texture.py", line 168, in affine_transformation
E       texture_object = _create_texture_object(data,
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.Np3X0NVCM9/cupy/cupyx/_texture.py", line 98, in _create_texture_object
E       array = texture.CUDAarray(texture_fmt, *data.shape[::-1])
E     File "cupy/cuda/texture.pyx", line 296, in cupy.cuda.texture.CUDAarray.__init__
E       self.ptr = runtime.malloc3DArray(desc.ptr, width, height, depth,
E     File "cupy_backends/cuda/api/runtime.pyx", line 593, in cupy_backends.cuda.api.runtime.malloc3DArray
E       check_status(status)
E     File "cupy_backends/cuda/api/runtime.pyx", line 265, in cupy_backends.cuda.api.runtime.check_status
E       raise CUDARuntimeError(status)
E   cupy_backends.cuda.api.runtime.CUDARuntimeError: hipErrorUnknown: hipErrorUnknown

cupy_backends/cuda/api/runtime.pyx:265: AssertionError
----------------------------- Captured stderr call -----------------------------
Traceback (most recent call last):
  File "cupy_backends/cuda/api/runtime.pyx", line 644, in cupy_backends.cuda.api.runtime.freeArray
    check_status(status)
  File "cupy_backends/cuda/api/runtime.pyx", line 265, in cupy_backends.cuda.api.runtime.check_status
    raise CUDARuntimeError(status)
cupy_backends.cuda.api.runtime.CUDARuntimeError: hipErrorUnknown: hipErrorUnknown
_ TestAffineTransformTextureMemory.test_affine_transform_texture_memory[_param_214_{mode='nearest', order=0, output=None, output_shape=10, shape=(10, 20), theta=180}] _

self = <<cupyx_tests.scipy_tests.ndimage_tests.test_interpolation.TestAffineTransformTextureMemory object at 0x7fd705572fa0>  parameter: {'mode': 'nearest', 'order': 0, 'output': None, 'output_shape': 10, 'shape': (10, 20), 'theta': 180}>
xp = <module 'cupy' from '/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.Np3X0NVCM9/cupy/cupy/__init__.py'>
scp = <module 'cupyx.scipy' from '/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.Np3X0NVCM9/cupy/cupyx/scipy/__init__.py'>

    @testing.numpy_cupy_allclose(atol=0.1, scipy_name='scp')
    def test_affine_transform_texture_memory(self, xp, scp):
        a = xp.ones(self.shape, dtype=xp.float32)
        center = numpy.divide(numpy.subtract(self.shape, 1), 2)
    
        if len(self.shape) == 2:
            matrix = self._2d_rotation_matrix(self.theta, center)
        elif len(self.shape) == 3:
            matrix = self._3d_rotation_matrix(self.theta, center)
        else:
            return pytest.xfail('Unsupported shape')
    
        if self.output == 'empty':
            output = xp.empty(self.shape, dtype=xp.float32)
            if self.output_shape:
                return pytest.skip('This combination is tested in '
                                   'test_invalid_texture_arguments')
        else:
            output = self.output
    
        if self.output_shape:
            output_shape = (self.output_shape, ) * len(self.shape)
        else:
            output_shape = self.output_shape
    
        if xp == cupy:
            m = cupyx.scipy.ndimage.affine_transform
            matrix = cupy.array(matrix)
>           return m(a, matrix, output_shape=output_shape,
                     output=output, order=self.order,
                     mode=self.mode, texture_memory=True)

tests/cupyx_tests/scipy_tests/ndimage_tests/test_interpolation.py:398: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
cupyx/scipy/ndimage/interpolation.py:376: in affine_transform
    return _texture.affine_transformation(data=input,
cupyx/_texture.py:168: in affine_transformation
    texture_object = _create_texture_object(data,
cupyx/_texture.py:98: in _create_texture_object
    array = texture.CUDAarray(texture_fmt, *data.shape[::-1])
cupy/cuda/texture.pyx:296: in cupy.cuda.texture.CUDAarray.__init__
    self.ptr = runtime.malloc3DArray(desc.ptr, width, height, depth,
cupy_backends/cuda/api/runtime.pyx:593: in cupy_backends.cuda.api.runtime.malloc3DArray
    check_status(status)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

>   raise CUDARuntimeError(status)
E   AssertionError: Only cupy raises error
E   
E   Traceback (most recent call last):
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.Np3X0NVCM9/cupy/cupy/testing/_helper.py", line 47, in _call_func
E       result = impl(self, *args, **kw)
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.Np3X0NVCM9/cupy/tests/cupyx_tests/scipy_tests/ndimage_tests/test_interpolation.py", line 398, in test_affine_transform_texture_memory
E       return m(a, matrix, output_shape=output_shape,
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.Np3X0NVCM9/cupy/cupyx/scipy/ndimage/interpolation.py", line 376, in affine_transform
E       return _texture.affine_transformation(data=input,
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.Np3X0NVCM9/cupy/cupyx/_texture.py", line 168, in affine_transformation
E       texture_object = _create_texture_object(data,
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.Np3X0NVCM9/cupy/cupyx/_texture.py", line 98, in _create_texture_object
E       array = texture.CUDAarray(texture_fmt, *data.shape[::-1])
E     File "cupy/cuda/texture.pyx", line 296, in cupy.cuda.texture.CUDAarray.__init__
E       self.ptr = runtime.malloc3DArray(desc.ptr, width, height, depth,
E     File "cupy_backends/cuda/api/runtime.pyx", line 593, in cupy_backends.cuda.api.runtime.malloc3DArray
E       check_status(status)
E     File "cupy_backends/cuda/api/runtime.pyx", line 265, in cupy_backends.cuda.api.runtime.check_status
E       raise CUDARuntimeError(status)
E   cupy_backends.cuda.api.runtime.CUDARuntimeError: hipErrorUnknown: hipErrorUnknown

cupy_backends/cuda/api/runtime.pyx:265: AssertionError
----------------------------- Captured stderr call -----------------------------
Traceback (most recent call last):
  File "cupy_backends/cuda/api/runtime.pyx", line 644, in cupy_backends.cuda.api.runtime.freeArray
    check_status(status)
  File "cupy_backends/cuda/api/runtime.pyx", line 265, in cupy_backends.cuda.api.runtime.check_status
    raise CUDARuntimeError(status)
cupy_backends.cuda.api.runtime.CUDARuntimeError: hipErrorUnknown: hipErrorUnknown
_ TestAffineTransformTextureMemory.test_affine_transform_texture_memory[_param_215_{mode='nearest', order=0, output=None, output_shape=10, shape=(10, 20), theta=270}] _

self = <<cupyx_tests.scipy_tests.ndimage_tests.test_interpolation.TestAffineTransformTextureMemory object at 0x7fd70790a070>  parameter: {'mode': 'nearest', 'order': 0, 'output': None, 'output_shape': 10, 'shape': (10, 20), 'theta': 270}>
xp = <module 'cupy' from '/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.Np3X0NVCM9/cupy/cupy/__init__.py'>
scp = <module 'cupyx.scipy' from '/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.Np3X0NVCM9/cupy/cupyx/scipy/__init__.py'>

    @testing.numpy_cupy_allclose(atol=0.1, scipy_name='scp')
    def test_affine_transform_texture_memory(self, xp, scp):
        a = xp.ones(self.shape, dtype=xp.float32)
        center = numpy.divide(numpy.subtract(self.shape, 1), 2)
    
        if len(self.shape) == 2:
            matrix = self._2d_rotation_matrix(self.theta, center)
        elif len(self.shape) == 3:
            matrix = self._3d_rotation_matrix(self.theta, center)
        else:
            return pytest.xfail('Unsupported shape')
    
        if self.output == 'empty':
            output = xp.empty(self.shape, dtype=xp.float32)
            if self.output_shape:
                return pytest.skip('This combination is tested in '
                                   'test_invalid_texture_arguments')
        else:
            output = self.output
    
        if self.output_shape:
            output_shape = (self.output_shape, ) * len(self.shape)
        else:
            output_shape = self.output_shape
    
        if xp == cupy:
            m = cupyx.scipy.ndimage.affine_transform
            matrix = cupy.array(matrix)
>           return m(a, matrix, output_shape=output_shape,
                     output=output, order=self.order,
                     mode=self.mode, texture_memory=True)

tests/cupyx_tests/scipy_tests/ndimage_tests/test_interpolation.py:398: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
cupyx/scipy/ndimage/interpolation.py:376: in affine_transform
    return _texture.affine_transformation(data=input,
cupyx/_texture.py:168: in affine_transformation
    texture_object = _create_texture_object(data,
cupyx/_texture.py:98: in _create_texture_object
    array = texture.CUDAarray(texture_fmt, *data.shape[::-1])
cupy/cuda/texture.pyx:296: in cupy.cuda.texture.CUDAarray.__init__
    self.ptr = runtime.malloc3DArray(desc.ptr, width, height, depth,
cupy_backends/cuda/api/runtime.pyx:593: in cupy_backends.cuda.api.runtime.malloc3DArray
    check_status(status)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

>   raise CUDARuntimeError(status)
E   AssertionError: Only cupy raises error
E   
E   Traceback (most recent call last):
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.Np3X0NVCM9/cupy/cupy/testing/_helper.py", line 47, in _call_func
E       result = impl(self, *args, **kw)
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.Np3X0NVCM9/cupy/tests/cupyx_tests/scipy_tests/ndimage_tests/test_interpolation.py", line 398, in test_affine_transform_texture_memory
E       return m(a, matrix, output_shape=output_shape,
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.Np3X0NVCM9/cupy/cupyx/scipy/ndimage/interpolation.py", line 376, in affine_transform
E       return _texture.affine_transformation(data=input,
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.Np3X0NVCM9/cupy/cupyx/_texture.py", line 168, in affine_transformation
E       texture_object = _create_texture_object(data,
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.Np3X0NVCM9/cupy/cupyx/_texture.py", line 98, in _create_texture_object
E       array = texture.CUDAarray(texture_fmt, *data.shape[::-1])
E     File "cupy/cuda/texture.pyx", line 296, in cupy.cuda.texture.CUDAarray.__init__
E       self.ptr = runtime.malloc3DArray(desc.ptr, width, height, depth,
E     File "cupy_backends/cuda/api/runtime.pyx", line 593, in cupy_backends.cuda.api.runtime.malloc3DArray
E       check_status(status)
E     File "cupy_backends/cuda/api/runtime.pyx", line 265, in cupy_backends.cuda.api.runtime.check_status
E       raise CUDARuntimeError(status)
E   cupy_backends.cuda.api.runtime.CUDARuntimeError: hipErrorUnknown: hipErrorUnknown

cupy_backends/cuda/api/runtime.pyx:265: AssertionError
----------------------------- Captured stderr call -----------------------------
Traceback (most recent call last):
  File "cupy_backends/cuda/api/runtime.pyx", line 644, in cupy_backends.cuda.api.runtime.freeArray
    check_status(status)
  File "cupy_backends/cuda/api/runtime.pyx", line 265, in cupy_backends.cuda.api.runtime.check_status
    raise CUDARuntimeError(status)
cupy_backends.cuda.api.runtime.CUDARuntimeError: hipErrorUnknown: hipErrorUnknown
_ TestAffineTransformTextureMemory.test_affine_transform_texture_memory[_param_216_{mode='nearest', order=0, output=None, output_shape=10, shape=(10, 10, 10), theta=0}] _

self = <<cupyx_tests.scipy_tests.ndimage_tests.test_interpolation.TestAffineTransformTextureMemory object at 0x7fd7061aa070>  parameter: {'mode': 'nearest', 'order': 0, 'output': None, 'output_shape': 10, 'shape': (10, 10, 10), 'theta': 0}>
xp = <module 'cupy' from '/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.Np3X0NVCM9/cupy/cupy/__init__.py'>
scp = <module 'cupyx.scipy' from '/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.Np3X0NVCM9/cupy/cupyx/scipy/__init__.py'>

    @testing.numpy_cupy_allclose(atol=0.1, scipy_name='scp')
    def test_affine_transform_texture_memory(self, xp, scp):
        a = xp.ones(self.shape, dtype=xp.float32)
        center = numpy.divide(numpy.subtract(self.shape, 1), 2)
    
        if len(self.shape) == 2:
            matrix = self._2d_rotation_matrix(self.theta, center)
        elif len(self.shape) == 3:
            matrix = self._3d_rotation_matrix(self.theta, center)
        else:
            return pytest.xfail('Unsupported shape')
    
        if self.output == 'empty':
            output = xp.empty(self.shape, dtype=xp.float32)
            if self.output_shape:
                return pytest.skip('This combination is tested in '
                                   'test_invalid_texture_arguments')
        else:
            output = self.output
    
        if self.output_shape:
            output_shape = (self.output_shape, ) * len(self.shape)
        else:
            output_shape = self.output_shape
    
        if xp == cupy:
            m = cupyx.scipy.ndimage.affine_transform
            matrix = cupy.array(matrix)
>           return m(a, matrix, output_shape=output_shape,
                     output=output, order=self.order,
                     mode=self.mode, texture_memory=True)

tests/cupyx_tests/scipy_tests/ndimage_tests/test_interpolation.py:398: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
cupyx/scipy/ndimage/interpolation.py:376: in affine_transform
    return _texture.affine_transformation(data=input,
cupyx/_texture.py:168: in affine_transformation
    texture_object = _create_texture_object(data,
cupyx/_texture.py:98: in _create_texture_object
    array = texture.CUDAarray(texture_fmt, *data.shape[::-1])
cupy/cuda/texture.pyx:296: in cupy.cuda.texture.CUDAarray.__init__
    self.ptr = runtime.malloc3DArray(desc.ptr, width, height, depth,
cupy_backends/cuda/api/runtime.pyx:593: in cupy_backends.cuda.api.runtime.malloc3DArray
    check_status(status)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

>   raise CUDARuntimeError(status)
E   AssertionError: Only cupy raises error
E   
E   Traceback (most recent call last):
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.Np3X0NVCM9/cupy/cupy/testing/_helper.py", line 47, in _call_func
E       result = impl(self, *args, **kw)
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.Np3X0NVCM9/cupy/tests/cupyx_tests/scipy_tests/ndimage_tests/test_interpolation.py", line 398, in test_affine_transform_texture_memory
E       return m(a, matrix, output_shape=output_shape,
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.Np3X0NVCM9/cupy/cupyx/scipy/ndimage/interpolation.py", line 376, in affine_transform
E       return _texture.affine_transformation(data=input,
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.Np3X0NVCM9/cupy/cupyx/_texture.py", line 168, in affine_transformation
E       texture_object = _create_texture_object(data,
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.Np3X0NVCM9/cupy/cupyx/_texture.py", line 98, in _create_texture_object
E       array = texture.CUDAarray(texture_fmt, *data.shape[::-1])
E     File "cupy/cuda/texture.pyx", line 296, in cupy.cuda.texture.CUDAarray.__init__
E       self.ptr = runtime.malloc3DArray(desc.ptr, width, height, depth,
E     File "cupy_backends/cuda/api/runtime.pyx", line 593, in cupy_backends.cuda.api.runtime.malloc3DArray
E       check_status(status)
E     File "cupy_backends/cuda/api/runtime.pyx", line 265, in cupy_backends.cuda.api.runtime.check_status
E       raise CUDARuntimeError(status)
E   cupy_backends.cuda.api.runtime.CUDARuntimeError: hipErrorUnknown: hipErrorUnknown

cupy_backends/cuda/api/runtime.pyx:265: AssertionError
----------------------------- Captured stderr call -----------------------------
Traceback (most recent call last):
  File "cupy_backends/cuda/api/runtime.pyx", line 644, in cupy_backends.cuda.api.runtime.freeArray
    check_status(status)
  File "cupy_backends/cuda/api/runtime.pyx", line 265, in cupy_backends.cuda.api.runtime.check_status
    raise CUDARuntimeError(status)
cupy_backends.cuda.api.runtime.CUDARuntimeError: hipErrorUnknown: hipErrorUnknown
_ TestAffineTransformTextureMemory.test_affine_transform_texture_memory[_param_217_{mode='nearest', order=0, output=None, output_shape=10, shape=(10, 10, 10), theta=90}] _

self = <<cupyx_tests.scipy_tests.ndimage_tests.test_interpolation.TestAffineTransformTextureMemory object at 0x7fd7058715b0>  parameter: {'mode': 'nearest', 'order': 0, 'output': None, 'output_shape': 10, 'shape': (10, 10, 10), 'theta': 90}>
xp = <module 'cupy' from '/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.Np3X0NVCM9/cupy/cupy/__init__.py'>
scp = <module 'cupyx.scipy' from '/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.Np3X0NVCM9/cupy/cupyx/scipy/__init__.py'>

    @testing.numpy_cupy_allclose(atol=0.1, scipy_name='scp')
    def test_affine_transform_texture_memory(self, xp, scp):
        a = xp.ones(self.shape, dtype=xp.float32)
        center = numpy.divide(numpy.subtract(self.shape, 1), 2)
    
        if len(self.shape) == 2:
            matrix = self._2d_rotation_matrix(self.theta, center)
        elif len(self.shape) == 3:
            matrix = self._3d_rotation_matrix(self.theta, center)
        else:
            return pytest.xfail('Unsupported shape')
    
        if self.output == 'empty':
            output = xp.empty(self.shape, dtype=xp.float32)
            if self.output_shape:
                return pytest.skip('This combination is tested in '
                                   'test_invalid_texture_arguments')
        else:
            output = self.output
    
        if self.output_shape:
            output_shape = (self.output_shape, ) * len(self.shape)
        else:
            output_shape = self.output_shape
    
        if xp == cupy:
            m = cupyx.scipy.ndimage.affine_transform
            matrix = cupy.array(matrix)
>           return m(a, matrix, output_shape=output_shape,
                     output=output, order=self.order,
                     mode=self.mode, texture_memory=True)

tests/cupyx_tests/scipy_tests/ndimage_tests/test_interpolation.py:398: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
cupyx/scipy/ndimage/interpolation.py:376: in affine_transform
    return _texture.affine_transformation(data=input,
cupyx/_texture.py:168: in affine_transformation
    texture_object = _create_texture_object(data,
cupyx/_texture.py:98: in _create_texture_object
    array = texture.CUDAarray(texture_fmt, *data.shape[::-1])
cupy/cuda/texture.pyx:296: in cupy.cuda.texture.CUDAarray.__init__
    self.ptr = runtime.malloc3DArray(desc.ptr, width, height, depth,
cupy_backends/cuda/api/runtime.pyx:593: in cupy_backends.cuda.api.runtime.malloc3DArray
    check_status(status)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

>   raise CUDARuntimeError(status)
E   AssertionError: Only cupy raises error
E   
E   Traceback (most recent call last):
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.Np3X0NVCM9/cupy/cupy/testing/_helper.py", line 47, in _call_func
E       result = impl(self, *args, **kw)
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.Np3X0NVCM9/cupy/tests/cupyx_tests/scipy_tests/ndimage_tests/test_interpolation.py", line 398, in test_affine_transform_texture_memory
E       return m(a, matrix, output_shape=output_shape,
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.Np3X0NVCM9/cupy/cupyx/scipy/ndimage/interpolation.py", line 376, in affine_transform
E       return _texture.affine_transformation(data=input,
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.Np3X0NVCM9/cupy/cupyx/_texture.py", line 168, in affine_transformation
E       texture_object = _create_texture_object(data,
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.Np3X0NVCM9/cupy/cupyx/_texture.py", line 98, in _create_texture_object
E       array = texture.CUDAarray(texture_fmt, *data.shape[::-1])
E     File "cupy/cuda/texture.pyx", line 296, in cupy.cuda.texture.CUDAarray.__init__
E       self.ptr = runtime.malloc3DArray(desc.ptr, width, height, depth,
E     File "cupy_backends/cuda/api/runtime.pyx", line 593, in cupy_backends.cuda.api.runtime.malloc3DArray
E       check_status(status)
E     File "cupy_backends/cuda/api/runtime.pyx", line 265, in cupy_backends.cuda.api.runtime.check_status
E       raise CUDARuntimeError(status)
E   cupy_backends.cuda.api.runtime.CUDARuntimeError: hipErrorUnknown: hipErrorUnknown

cupy_backends/cuda/api/runtime.pyx:265: AssertionError
----------------------------- Captured stderr call -----------------------------
Traceback (most recent call last):
  File "cupy_backends/cuda/api/runtime.pyx", line 644, in cupy_backends.cuda.api.runtime.freeArray
    check_status(status)
  File "cupy_backends/cuda/api/runtime.pyx", line 265, in cupy_backends.cuda.api.runtime.check_status
    raise CUDARuntimeError(status)
cupy_backends.cuda.api.runtime.CUDARuntimeError: hipErrorUnknown: hipErrorUnknown
_ TestAffineTransformTextureMemory.test_affine_transform_texture_memory[_param_218_{mode='nearest', order=0, output=None, output_shape=10, shape=(10, 10, 10), theta=180}] _

self = <<cupyx_tests.scipy_tests.ndimage_tests.test_interpolation.TestAffineTransformTextureMemory object at 0x7fd7058b29a0>  parameter: {'mode': 'nearest', 'order': 0, 'output': None, 'output_shape': 10, 'shape': (10, 10, 10), 'theta': 180}>
xp = <module 'cupy' from '/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.Np3X0NVCM9/cupy/cupy/__init__.py'>
scp = <module 'cupyx.scipy' from '/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.Np3X0NVCM9/cupy/cupyx/scipy/__init__.py'>

    @testing.numpy_cupy_allclose(atol=0.1, scipy_name='scp')
    def test_affine_transform_texture_memory(self, xp, scp):
        a = xp.ones(self.shape, dtype=xp.float32)
        center = numpy.divide(numpy.subtract(self.shape, 1), 2)
    
        if len(self.shape) == 2:
            matrix = self._2d_rotation_matrix(self.theta, center)
        elif len(self.shape) == 3:
            matrix = self._3d_rotation_matrix(self.theta, center)
        else:
            return pytest.xfail('Unsupported shape')
    
        if self.output == 'empty':
            output = xp.empty(self.shape, dtype=xp.float32)
            if self.output_shape:
                return pytest.skip('This combination is tested in '
                                   'test_invalid_texture_arguments')
        else:
            output = self.output
    
        if self.output_shape:
            output_shape = (self.output_shape, ) * len(self.shape)
        else:
            output_shape = self.output_shape
    
        if xp == cupy:
            m = cupyx.scipy.ndimage.affine_transform
            matrix = cupy.array(matrix)
>           return m(a, matrix, output_shape=output_shape,
                     output=output, order=self.order,
                     mode=self.mode, texture_memory=True)

tests/cupyx_tests/scipy_tests/ndimage_tests/test_interpolation.py:398: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
cupyx/scipy/ndimage/interpolation.py:376: in affine_transform
    return _texture.affine_transformation(data=input,
cupyx/_texture.py:168: in affine_transformation
    texture_object = _create_texture_object(data,
cupyx/_texture.py:98: in _create_texture_object
    array = texture.CUDAarray(texture_fmt, *data.shape[::-1])
cupy/cuda/texture.pyx:296: in cupy.cuda.texture.CUDAarray.__init__
    self.ptr = runtime.malloc3DArray(desc.ptr, width, height, depth,
cupy_backends/cuda/api/runtime.pyx:593: in cupy_backends.cuda.api.runtime.malloc3DArray
    check_status(status)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

>   raise CUDARuntimeError(status)
E   AssertionError: Only cupy raises error
E   
E   Traceback (most recent call last):
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.Np3X0NVCM9/cupy/cupy/testing/_helper.py", line 47, in _call_func
E       result = impl(self, *args, **kw)
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.Np3X0NVCM9/cupy/tests/cupyx_tests/scipy_tests/ndimage_tests/test_interpolation.py", line 398, in test_affine_transform_texture_memory
E       return m(a, matrix, output_shape=output_shape,
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.Np3X0NVCM9/cupy/cupyx/scipy/ndimage/interpolation.py", line 376, in affine_transform
E       return _texture.affine_transformation(data=input,
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.Np3X0NVCM9/cupy/cupyx/_texture.py", line 168, in affine_transformation
E       texture_object = _create_texture_object(data,
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.Np3X0NVCM9/cupy/cupyx/_texture.py", line 98, in _create_texture_object
E       array = texture.CUDAarray(texture_fmt, *data.shape[::-1])
E     File "cupy/cuda/texture.pyx", line 296, in cupy.cuda.texture.CUDAarray.__init__
E       self.ptr = runtime.malloc3DArray(desc.ptr, width, height, depth,
E     File "cupy_backends/cuda/api/runtime.pyx", line 593, in cupy_backends.cuda.api.runtime.malloc3DArray
E       check_status(status)
E     File "cupy_backends/cuda/api/runtime.pyx", line 265, in cupy_backends.cuda.api.runtime.check_status
E       raise CUDARuntimeError(status)
E   cupy_backends.cuda.api.runtime.CUDARuntimeError: hipErrorUnknown: hipErrorUnknown

cupy_backends/cuda/api/runtime.pyx:265: AssertionError
----------------------------- Captured stderr call -----------------------------
Traceback (most recent call last):
  File "cupy_backends/cuda/api/runtime.pyx", line 644, in cupy_backends.cuda.api.runtime.freeArray
    check_status(status)
  File "cupy_backends/cuda/api/runtime.pyx", line 265, in cupy_backends.cuda.api.runtime.check_status
    raise CUDARuntimeError(status)
cupy_backends.cuda.api.runtime.CUDARuntimeError: hipErrorUnknown: hipErrorUnknown
_ TestAffineTransformTextureMemory.test_affine_transform_texture_memory[_param_219_{mode='nearest', order=0, output=None, output_shape=10, shape=(10, 10, 10), theta=270}] _

self = <<cupyx_tests.scipy_tests.ndimage_tests.test_interpolation.TestAffineTransformTextureMemory object at 0x7fd7058e7a30>  parameter: {'mode': 'nearest', 'order': 0, 'output': None, 'output_shape': 10, 'shape': (10, 10, 10), 'theta': 270}>
xp = <module 'cupy' from '/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.Np3X0NVCM9/cupy/cupy/__init__.py'>
scp = <module 'cupyx.scipy' from '/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.Np3X0NVCM9/cupy/cupyx/scipy/__init__.py'>

    @testing.numpy_cupy_allclose(atol=0.1, scipy_name='scp')
    def test_affine_transform_texture_memory(self, xp, scp):
        a = xp.ones(self.shape, dtype=xp.float32)
        center = numpy.divide(numpy.subtract(self.shape, 1), 2)
    
        if len(self.shape) == 2:
            matrix = self._2d_rotation_matrix(self.theta, center)
        elif len(self.shape) == 3:
            matrix = self._3d_rotation_matrix(self.theta, center)
        else:
            return pytest.xfail('Unsupported shape')
    
        if self.output == 'empty':
            output = xp.empty(self.shape, dtype=xp.float32)
            if self.output_shape:
                return pytest.skip('This combination is tested in '
                                   'test_invalid_texture_arguments')
        else:
            output = self.output
    
        if self.output_shape:
            output_shape = (self.output_shape, ) * len(self.shape)
        else:
            output_shape = self.output_shape
    
        if xp == cupy:
            m = cupyx.scipy.ndimage.affine_transform
            matrix = cupy.array(matrix)
>           return m(a, matrix, output_shape=output_shape,
                     output=output, order=self.order,
                     mode=self.mode, texture_memory=True)

tests/cupyx_tests/scipy_tests/ndimage_tests/test_interpolation.py:398: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
cupyx/scipy/ndimage/interpolation.py:376: in affine_transform
    return _texture.affine_transformation(data=input,
cupyx/_texture.py:168: in affine_transformation
    texture_object = _create_texture_object(data,
cupyx/_texture.py:98: in _create_texture_object
    array = texture.CUDAarray(texture_fmt, *data.shape[::-1])
cupy/cuda/texture.pyx:296: in cupy.cuda.texture.CUDAarray.__init__
    self.ptr = runtime.malloc3DArray(desc.ptr, width, height, depth,
cupy_backends/cuda/api/runtime.pyx:593: in cupy_backends.cuda.api.runtime.malloc3DArray
    check_status(status)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

>   raise CUDARuntimeError(status)
E   AssertionError: Only cupy raises error
E   
E   Traceback (most recent call last):
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.Np3X0NVCM9/cupy/cupy/testing/_helper.py", line 47, in _call_func
E       result = impl(self, *args, **kw)
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.Np3X0NVCM9/cupy/tests/cupyx_tests/scipy_tests/ndimage_tests/test_interpolation.py", line 398, in test_affine_transform_texture_memory
E       return m(a, matrix, output_shape=output_shape,
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.Np3X0NVCM9/cupy/cupyx/scipy/ndimage/interpolation.py", line 376, in affine_transform
E       return _texture.affine_transformation(data=input,
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.Np3X0NVCM9/cupy/cupyx/_texture.py", line 168, in affine_transformation
E       texture_object = _create_texture_object(data,
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.Np3X0NVCM9/cupy/cupyx/_texture.py", line 98, in _create_texture_object
E       array = texture.CUDAarray(texture_fmt, *data.shape[::-1])
E     File "cupy/cuda/texture.pyx", line 296, in cupy.cuda.texture.CUDAarray.__init__
E       self.ptr = runtime.malloc3DArray(desc.ptr, width, height, depth,
E     File "cupy_backends/cuda/api/runtime.pyx", line 593, in cupy_backends.cuda.api.runtime.malloc3DArray
E       check_status(status)
E     File "cupy_backends/cuda/api/runtime.pyx", line 265, in cupy_backends.cuda.api.runtime.check_status
E       raise CUDARuntimeError(status)
E   cupy_backends.cuda.api.runtime.CUDARuntimeError: hipErrorUnknown: hipErrorUnknown

cupy_backends/cuda/api/runtime.pyx:265: AssertionError
----------------------------- Captured stderr call -----------------------------
Traceback (most recent call last):
  File "cupy_backends/cuda/api/runtime.pyx", line 644, in cupy_backends.cuda.api.runtime.freeArray
    check_status(status)
  File "cupy_backends/cuda/api/runtime.pyx", line 265, in cupy_backends.cuda.api.runtime.check_status
    raise CUDARuntimeError(status)
cupy_backends.cuda.api.runtime.CUDARuntimeError: hipErrorUnknown: hipErrorUnknown
_ TestAffineTransformTextureMemory.test_affine_transform_texture_memory[_param_220_{mode='nearest', order=0, output=None, output_shape=10, shape=(10, 20, 30), theta=0}] _

self = <<cupyx_tests.scipy_tests.ndimage_tests.test_interpolation.TestAffineTransformTextureMemory object at 0x7fd70667f040>  parameter: {'mode': 'nearest', 'order': 0, 'output': None, 'output_shape': 10, 'shape': (10, 20, 30), 'theta': 0}>
xp = <module 'cupy' from '/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.Np3X0NVCM9/cupy/cupy/__init__.py'>
scp = <module 'cupyx.scipy' from '/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.Np3X0NVCM9/cupy/cupyx/scipy/__init__.py'>

    @testing.numpy_cupy_allclose(atol=0.1, scipy_name='scp')
    def test_affine_transform_texture_memory(self, xp, scp):
        a = xp.ones(self.shape, dtype=xp.float32)
        center = numpy.divide(numpy.subtract(self.shape, 1), 2)
    
        if len(self.shape) == 2:
            matrix = self._2d_rotation_matrix(self.theta, center)
        elif len(self.shape) == 3:
            matrix = self._3d_rotation_matrix(self.theta, center)
        else:
            return pytest.xfail('Unsupported shape')
    
        if self.output == 'empty':
            output = xp.empty(self.shape, dtype=xp.float32)
            if self.output_shape:
                return pytest.skip('This combination is tested in '
                                   'test_invalid_texture_arguments')
        else:
            output = self.output
    
        if self.output_shape:
            output_shape = (self.output_shape, ) * len(self.shape)
        else:
            output_shape = self.output_shape
    
        if xp == cupy:
            m = cupyx.scipy.ndimage.affine_transform
            matrix = cupy.array(matrix)
>           return m(a, matrix, output_shape=output_shape,
                     output=output, order=self.order,
                     mode=self.mode, texture_memory=True)

tests/cupyx_tests/scipy_tests/ndimage_tests/test_interpolation.py:398: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
cupyx/scipy/ndimage/interpolation.py:376: in affine_transform
    return _texture.affine_transformation(data=input,
cupyx/_texture.py:168: in affine_transformation
    texture_object = _create_texture_object(data,
cupyx/_texture.py:98: in _create_texture_object
    array = texture.CUDAarray(texture_fmt, *data.shape[::-1])
cupy/cuda/texture.pyx:296: in cupy.cuda.texture.CUDAarray.__init__
    self.ptr = runtime.malloc3DArray(desc.ptr, width, height, depth,
cupy_backends/cuda/api/runtime.pyx:593: in cupy_backends.cuda.api.runtime.malloc3DArray
    check_status(status)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

>   raise CUDARuntimeError(status)
E   AssertionError: Only cupy raises error
E   
E   Traceback (most recent call last):
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.Np3X0NVCM9/cupy/cupy/testing/_helper.py", line 47, in _call_func
E       result = impl(self, *args, **kw)
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.Np3X0NVCM9/cupy/tests/cupyx_tests/scipy_tests/ndimage_tests/test_interpolation.py", line 398, in test_affine_transform_texture_memory
E       return m(a, matrix, output_shape=output_shape,
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.Np3X0NVCM9/cupy/cupyx/scipy/ndimage/interpolation.py", line 376, in affine_transform
E       return _texture.affine_transformation(data=input,
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.Np3X0NVCM9/cupy/cupyx/_texture.py", line 168, in affine_transformation
E       texture_object = _create_texture_object(data,
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.Np3X0NVCM9/cupy/cupyx/_texture.py", line 98, in _create_texture_object
E       array = texture.CUDAarray(texture_fmt, *data.shape[::-1])
E     File "cupy/cuda/texture.pyx", line 296, in cupy.cuda.texture.CUDAarray.__init__
E       self.ptr = runtime.malloc3DArray(desc.ptr, width, height, depth,
E     File "cupy_backends/cuda/api/runtime.pyx", line 593, in cupy_backends.cuda.api.runtime.malloc3DArray
E       check_status(status)
E     File "cupy_backends/cuda/api/runtime.pyx", line 265, in cupy_backends.cuda.api.runtime.check_status
E       raise CUDARuntimeError(status)
E   cupy_backends.cuda.api.runtime.CUDARuntimeError: hipErrorUnknown: hipErrorUnknown

cupy_backends/cuda/api/runtime.pyx:265: AssertionError
----------------------------- Captured stderr call -----------------------------
Traceback (most recent call last):
  File "cupy_backends/cuda/api/runtime.pyx", line 644, in cupy_backends.cuda.api.runtime.freeArray
    check_status(status)
  File "cupy_backends/cuda/api/runtime.pyx", line 265, in cupy_backends.cuda.api.runtime.check_status
    raise CUDARuntimeError(status)
cupy_backends.cuda.api.runtime.CUDARuntimeError: hipErrorUnknown: hipErrorUnknown
_ TestAffineTransformTextureMemory.test_affine_transform_texture_memory[_param_221_{mode='nearest', order=0, output=None, output_shape=10, shape=(10, 20, 30), theta=90}] _

self = <<cupyx_tests.scipy_tests.ndimage_tests.test_interpolation.TestAffineTransformTextureMemory object at 0x7fd7072d0d00>  parameter: {'mode': 'nearest', 'order': 0, 'output': None, 'output_shape': 10, 'shape': (10, 20, 30), 'theta': 90}>
xp = <module 'cupy' from '/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.Np3X0NVCM9/cupy/cupy/__init__.py'>
scp = <module 'cupyx.scipy' from '/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.Np3X0NVCM9/cupy/cupyx/scipy/__init__.py'>

    @testing.numpy_cupy_allclose(atol=0.1, scipy_name='scp')
    def test_affine_transform_texture_memory(self, xp, scp):
        a = xp.ones(self.shape, dtype=xp.float32)
        center = numpy.divide(numpy.subtract(self.shape, 1), 2)
    
        if len(self.shape) == 2:
            matrix = self._2d_rotation_matrix(self.theta, center)
        elif len(self.shape) == 3:
            matrix = self._3d_rotation_matrix(self.theta, center)
        else:
            return pytest.xfail('Unsupported shape')
    
        if self.output == 'empty':
            output = xp.empty(self.shape, dtype=xp.float32)
            if self.output_shape:
                return pytest.skip('This combination is tested in '
                                   'test_invalid_texture_arguments')
        else:
            output = self.output
    
        if self.output_shape:
            output_shape = (self.output_shape, ) * len(self.shape)
        else:
            output_shape = self.output_shape
    
        if xp == cupy:
            m = cupyx.scipy.ndimage.affine_transform
            matrix = cupy.array(matrix)
>           return m(a, matrix, output_shape=output_shape,
                     output=output, order=self.order,
                     mode=self.mode, texture_memory=True)

tests/cupyx_tests/scipy_tests/ndimage_tests/test_interpolation.py:398: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
cupyx/scipy/ndimage/interpolation.py:376: in affine_transform
    return _texture.affine_transformation(data=input,
cupyx/_texture.py:168: in affine_transformation
    texture_object = _create_texture_object(data,
cupyx/_texture.py:98: in _create_texture_object
    array = texture.CUDAarray(texture_fmt, *data.shape[::-1])
cupy/cuda/texture.pyx:296: in cupy.cuda.texture.CUDAarray.__init__
    self.ptr = runtime.malloc3DArray(desc.ptr, width, height, depth,
cupy_backends/cuda/api/runtime.pyx:593: in cupy_backends.cuda.api.runtime.malloc3DArray
    check_status(status)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

>   raise CUDARuntimeError(status)
E   AssertionError: Only cupy raises error
E   
E   Traceback (most recent call last):
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.Np3X0NVCM9/cupy/cupy/testing/_helper.py", line 47, in _call_func
E       result = impl(self, *args, **kw)
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.Np3X0NVCM9/cupy/tests/cupyx_tests/scipy_tests/ndimage_tests/test_interpolation.py", line 398, in test_affine_transform_texture_memory
E       return m(a, matrix, output_shape=output_shape,
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.Np3X0NVCM9/cupy/cupyx/scipy/ndimage/interpolation.py", line 376, in affine_transform
E       return _texture.affine_transformation(data=input,
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.Np3X0NVCM9/cupy/cupyx/_texture.py", line 168, in affine_transformation
E       texture_object = _create_texture_object(data,
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.Np3X0NVCM9/cupy/cupyx/_texture.py", line 98, in _create_texture_object
E       array = texture.CUDAarray(texture_fmt, *data.shape[::-1])
E     File "cupy/cuda/texture.pyx", line 296, in cupy.cuda.texture.CUDAarray.__init__
E       self.ptr = runtime.malloc3DArray(desc.ptr, width, height, depth,
E     File "cupy_backends/cuda/api/runtime.pyx", line 593, in cupy_backends.cuda.api.runtime.malloc3DArray
E       check_status(status)
E     File "cupy_backends/cuda/api/runtime.pyx", line 265, in cupy_backends.cuda.api.runtime.check_status
E       raise CUDARuntimeError(status)
E   cupy_backends.cuda.api.runtime.CUDARuntimeError: hipErrorUnknown: hipErrorUnknown

cupy_backends/cuda/api/runtime.pyx:265: AssertionError
----------------------------- Captured stderr call -----------------------------
Traceback (most recent call last):
  File "cupy_backends/cuda/api/runtime.pyx", line 644, in cupy_backends.cuda.api.runtime.freeArray
    check_status(status)
  File "cupy_backends/cuda/api/runtime.pyx", line 265, in cupy_backends.cuda.api.runtime.check_status
    raise CUDARuntimeError(status)
cupy_backends.cuda.api.runtime.CUDARuntimeError: hipErrorUnknown: hipErrorUnknown
_ TestAffineTransformTextureMemory.test_affine_transform_texture_memory[_param_222_{mode='nearest', order=0, output=None, output_shape=10, shape=(10, 20, 30), theta=180}] _

self = <<cupyx_tests.scipy_tests.ndimage_tests.test_interpolation.TestAffineTransformTextureMemory object at 0x7fd7061d8f70>  parameter: {'mode': 'nearest', 'order': 0, 'output': None, 'output_shape': 10, 'shape': (10, 20, 30), 'theta': 180}>
xp = <module 'cupy' from '/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.Np3X0NVCM9/cupy/cupy/__init__.py'>
scp = <module 'cupyx.scipy' from '/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.Np3X0NVCM9/cupy/cupyx/scipy/__init__.py'>

    @testing.numpy_cupy_allclose(atol=0.1, scipy_name='scp')
    def test_affine_transform_texture_memory(self, xp, scp):
        a = xp.ones(self.shape, dtype=xp.float32)
        center = numpy.divide(numpy.subtract(self.shape, 1), 2)
    
        if len(self.shape) == 2:
            matrix = self._2d_rotation_matrix(self.theta, center)
        elif len(self.shape) == 3:
            matrix = self._3d_rotation_matrix(self.theta, center)
        else:
            return pytest.xfail('Unsupported shape')
    
        if self.output == 'empty':
            output = xp.empty(self.shape, dtype=xp.float32)
            if self.output_shape:
                return pytest.skip('This combination is tested in '
                                   'test_invalid_texture_arguments')
        else:
            output = self.output
    
        if self.output_shape:
            output_shape = (self.output_shape, ) * len(self.shape)
        else:
            output_shape = self.output_shape
    
        if xp == cupy:
            m = cupyx.scipy.ndimage.affine_transform
            matrix = cupy.array(matrix)
>           return m(a, matrix, output_shape=output_shape,
                     output=output, order=self.order,
                     mode=self.mode, texture_memory=True)

tests/cupyx_tests/scipy_tests/ndimage_tests/test_interpolation.py:398: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
cupyx/scipy/ndimage/interpolation.py:376: in affine_transform
    return _texture.affine_transformation(data=input,
cupyx/_texture.py:168: in affine_transformation
    texture_object = _create_texture_object(data,
cupyx/_texture.py:98: in _create_texture_object
    array = texture.CUDAarray(texture_fmt, *data.shape[::-1])
cupy/cuda/texture.pyx:296: in cupy.cuda.texture.CUDAarray.__init__
    self.ptr = runtime.malloc3DArray(desc.ptr, width, height, depth,
cupy_backends/cuda/api/runtime.pyx:593: in cupy_backends.cuda.api.runtime.malloc3DArray
    check_status(status)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

>   raise CUDARuntimeError(status)
E   AssertionError: Only cupy raises error
E   
E   Traceback (most recent call last):
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.Np3X0NVCM9/cupy/cupy/testing/_helper.py", line 47, in _call_func
E       result = impl(self, *args, **kw)
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.Np3X0NVCM9/cupy/tests/cupyx_tests/scipy_tests/ndimage_tests/test_interpolation.py", line 398, in test_affine_transform_texture_memory
E       return m(a, matrix, output_shape=output_shape,
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.Np3X0NVCM9/cupy/cupyx/scipy/ndimage/interpolation.py", line 376, in affine_transform
E       return _texture.affine_transformation(data=input,
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.Np3X0NVCM9/cupy/cupyx/_texture.py", line 168, in affine_transformation
E       texture_object = _create_texture_object(data,
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.Np3X0NVCM9/cupy/cupyx/_texture.py", line 98, in _create_texture_object
E       array = texture.CUDAarray(texture_fmt, *data.shape[::-1])
E     File "cupy/cuda/texture.pyx", line 296, in cupy.cuda.texture.CUDAarray.__init__
E       self.ptr = runtime.malloc3DArray(desc.ptr, width, height, depth,
E     File "cupy_backends/cuda/api/runtime.pyx", line 593, in cupy_backends.cuda.api.runtime.malloc3DArray
E       check_status(status)
E     File "cupy_backends/cuda/api/runtime.pyx", line 265, in cupy_backends.cuda.api.runtime.check_status
E       raise CUDARuntimeError(status)
E   cupy_backends.cuda.api.runtime.CUDARuntimeError: hipErrorUnknown: hipErrorUnknown

cupy_backends/cuda/api/runtime.pyx:265: AssertionError
----------------------------- Captured stderr call -----------------------------
Traceback (most recent call last):
  File "cupy_backends/cuda/api/runtime.pyx", line 644, in cupy_backends.cuda.api.runtime.freeArray
    check_status(status)
  File "cupy_backends/cuda/api/runtime.pyx", line 265, in cupy_backends.cuda.api.runtime.check_status
    raise CUDARuntimeError(status)
cupy_backends.cuda.api.runtime.CUDARuntimeError: hipErrorUnknown: hipErrorUnknown
_ TestAffineTransformTextureMemory.test_affine_transform_texture_memory[_param_223_{mode='nearest', order=0, output=None, output_shape=10, shape=(10, 20, 30), theta=270}] _

self = <<cupyx_tests.scipy_tests.ndimage_tests.test_interpolation.TestAffineTransformTextureMemory object at 0x7fd706f3be80>  parameter: {'mode': 'nearest', 'order': 0, 'output': None, 'output_shape': 10, 'shape': (10, 20, 30), 'theta': 270}>
xp = <module 'cupy' from '/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.Np3X0NVCM9/cupy/cupy/__init__.py'>
scp = <module 'cupyx.scipy' from '/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.Np3X0NVCM9/cupy/cupyx/scipy/__init__.py'>

    @testing.numpy_cupy_allclose(atol=0.1, scipy_name='scp')
    def test_affine_transform_texture_memory(self, xp, scp):
        a = xp.ones(self.shape, dtype=xp.float32)
        center = numpy.divide(numpy.subtract(self.shape, 1), 2)
    
        if len(self.shape) == 2:
            matrix = self._2d_rotation_matrix(self.theta, center)
        elif len(self.shape) == 3:
            matrix = self._3d_rotation_matrix(self.theta, center)
        else:
            return pytest.xfail('Unsupported shape')
    
        if self.output == 'empty':
            output = xp.empty(self.shape, dtype=xp.float32)
            if self.output_shape:
                return pytest.skip('This combination is tested in '
                                   'test_invalid_texture_arguments')
        else:
            output = self.output
    
        if self.output_shape:
            output_shape = (self.output_shape, ) * len(self.shape)
        else:
            output_shape = self.output_shape
    
        if xp == cupy:
            m = cupyx.scipy.ndimage.affine_transform
            matrix = cupy.array(matrix)
>           return m(a, matrix, output_shape=output_shape,
                     output=output, order=self.order,
                     mode=self.mode, texture_memory=True)

tests/cupyx_tests/scipy_tests/ndimage_tests/test_interpolation.py:398: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
cupyx/scipy/ndimage/interpolation.py:376: in affine_transform
    return _texture.affine_transformation(data=input,
cupyx/_texture.py:168: in affine_transformation
    texture_object = _create_texture_object(data,
cupyx/_texture.py:98: in _create_texture_object
    array = texture.CUDAarray(texture_fmt, *data.shape[::-1])
cupy/cuda/texture.pyx:296: in cupy.cuda.texture.CUDAarray.__init__
    self.ptr = runtime.malloc3DArray(desc.ptr, width, height, depth,
cupy_backends/cuda/api/runtime.pyx:593: in cupy_backends.cuda.api.runtime.malloc3DArray
    check_status(status)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

>   raise CUDARuntimeError(status)
E   AssertionError: Only cupy raises error
E   
E   Traceback (most recent call last):
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.Np3X0NVCM9/cupy/cupy/testing/_helper.py", line 47, in _call_func
E       result = impl(self, *args, **kw)
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.Np3X0NVCM9/cupy/tests/cupyx_tests/scipy_tests/ndimage_tests/test_interpolation.py", line 398, in test_affine_transform_texture_memory
E       return m(a, matrix, output_shape=output_shape,
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.Np3X0NVCM9/cupy/cupyx/scipy/ndimage/interpolation.py", line 376, in affine_transform
E       return _texture.affine_transformation(data=input,
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.Np3X0NVCM9/cupy/cupyx/_texture.py", line 168, in affine_transformation
E       texture_object = _create_texture_object(data,
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.Np3X0NVCM9/cupy/cupyx/_texture.py", line 98, in _create_texture_object
E       array = texture.CUDAarray(texture_fmt, *data.shape[::-1])
E     File "cupy/cuda/texture.pyx", line 296, in cupy.cuda.texture.CUDAarray.__init__
E       self.ptr = runtime.malloc3DArray(desc.ptr, width, height, depth,
E     File "cupy_backends/cuda/api/runtime.pyx", line 593, in cupy_backends.cuda.api.runtime.malloc3DArray
E       check_status(status)
E     File "cupy_backends/cuda/api/runtime.pyx", line 265, in cupy_backends.cuda.api.runtime.check_status
E       raise CUDARuntimeError(status)
E   cupy_backends.cuda.api.runtime.CUDARuntimeError: hipErrorUnknown: hipErrorUnknown

cupy_backends/cuda/api/runtime.pyx:265: AssertionError
----------------------------- Captured stderr call -----------------------------
Traceback (most recent call last):
  File "cupy_backends/cuda/api/runtime.pyx", line 644, in cupy_backends.cuda.api.runtime.freeArray
    check_status(status)
  File "cupy_backends/cuda/api/runtime.pyx", line 265, in cupy_backends.cuda.api.runtime.check_status
    raise CUDARuntimeError(status)
cupy_backends.cuda.api.runtime.CUDARuntimeError: hipErrorUnknown: hipErrorUnknown
_ TestAffineTransformTextureMemory.test_affine_transform_texture_memory[_param_224_{mode='nearest', order=0, output=float32, output_shape=None, shape=(100, 100), theta=0}] _

self = <<cupyx_tests.scipy_tests.ndimage_tests.test_interpolation.TestAffineTransformTextureMemory object at 0x7fd705719d60> ...ode': 'nearest', 'order': 0, 'output': <class 'numpy.float32'>, 'output_shape': None, 'shape': (100, 100), 'theta': 0}>
xp = <module 'cupy' from '/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.Np3X0NVCM9/cupy/cupy/__init__.py'>
scp = <module 'cupyx.scipy' from '/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.Np3X0NVCM9/cupy/cupyx/scipy/__init__.py'>

    @testing.numpy_cupy_allclose(atol=0.1, scipy_name='scp')
    def test_affine_transform_texture_memory(self, xp, scp):
        a = xp.ones(self.shape, dtype=xp.float32)
        center = numpy.divide(numpy.subtract(self.shape, 1), 2)
    
        if len(self.shape) == 2:
            matrix = self._2d_rotation_matrix(self.theta, center)
        elif len(self.shape) == 3:
            matrix = self._3d_rotation_matrix(self.theta, center)
        else:
            return pytest.xfail('Unsupported shape')
    
        if self.output == 'empty':
            output = xp.empty(self.shape, dtype=xp.float32)
            if self.output_shape:
                return pytest.skip('This combination is tested in '
                                   'test_invalid_texture_arguments')
        else:
            output = self.output
    
        if self.output_shape:
            output_shape = (self.output_shape, ) * len(self.shape)
        else:
            output_shape = self.output_shape
    
        if xp == cupy:
            m = cupyx.scipy.ndimage.affine_transform
            matrix = cupy.array(matrix)
>           return m(a, matrix, output_shape=output_shape,
                     output=output, order=self.order,
                     mode=self.mode, texture_memory=True)

tests/cupyx_tests/scipy_tests/ndimage_tests/test_interpolation.py:398: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
cupyx/scipy/ndimage/interpolation.py:376: in affine_transform
    return _texture.affine_transformation(data=input,
cupyx/_texture.py:168: in affine_transformation
    texture_object = _create_texture_object(data,
cupyx/_texture.py:98: in _create_texture_object
    array = texture.CUDAarray(texture_fmt, *data.shape[::-1])
cupy/cuda/texture.pyx:296: in cupy.cuda.texture.CUDAarray.__init__
    self.ptr = runtime.malloc3DArray(desc.ptr, width, height, depth,
cupy_backends/cuda/api/runtime.pyx:593: in cupy_backends.cuda.api.runtime.malloc3DArray
    check_status(status)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

>   raise CUDARuntimeError(status)
E   AssertionError: Only cupy raises error
E   
E   Traceback (most recent call last):
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.Np3X0NVCM9/cupy/cupy/testing/_helper.py", line 47, in _call_func
E       result = impl(self, *args, **kw)
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.Np3X0NVCM9/cupy/tests/cupyx_tests/scipy_tests/ndimage_tests/test_interpolation.py", line 398, in test_affine_transform_texture_memory
E       return m(a, matrix, output_shape=output_shape,
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.Np3X0NVCM9/cupy/cupyx/scipy/ndimage/interpolation.py", line 376, in affine_transform
E       return _texture.affine_transformation(data=input,
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.Np3X0NVCM9/cupy/cupyx/_texture.py", line 168, in affine_transformation
E       texture_object = _create_texture_object(data,
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.Np3X0NVCM9/cupy/cupyx/_texture.py", line 98, in _create_texture_object
E       array = texture.CUDAarray(texture_fmt, *data.shape[::-1])
E     File "cupy/cuda/texture.pyx", line 296, in cupy.cuda.texture.CUDAarray.__init__
E       self.ptr = runtime.malloc3DArray(desc.ptr, width, height, depth,
E     File "cupy_backends/cuda/api/runtime.pyx", line 593, in cupy_backends.cuda.api.runtime.malloc3DArray
E       check_status(status)
E     File "cupy_backends/cuda/api/runtime.pyx", line 265, in cupy_backends.cuda.api.runtime.check_status
E       raise CUDARuntimeError(status)
E   cupy_backends.cuda.api.runtime.CUDARuntimeError: hipErrorUnknown: hipErrorUnknown

cupy_backends/cuda/api/runtime.pyx:265: AssertionError
----------------------------- Captured stderr call -----------------------------
Traceback (most recent call last):
  File "cupy_backends/cuda/api/runtime.pyx", line 644, in cupy_backends.cuda.api.runtime.freeArray
    check_status(status)
  File "cupy_backends/cuda/api/runtime.pyx", line 265, in cupy_backends.cuda.api.runtime.check_status
    raise CUDARuntimeError(status)
cupy_backends.cuda.api.runtime.CUDARuntimeError: hipErrorUnknown: hipErrorUnknown
_ TestAffineTransformTextureMemory.test_affine_transform_texture_memory[_param_225_{mode='nearest', order=0, output=float32, output_shape=None, shape=(100, 100), theta=90}] _

self = <<cupyx_tests.scipy_tests.ndimage_tests.test_interpolation.TestAffineTransformTextureMemory object at 0x7fd705693160> ...de': 'nearest', 'order': 0, 'output': <class 'numpy.float32'>, 'output_shape': None, 'shape': (100, 100), 'theta': 90}>
xp = <module 'cupy' from '/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.Np3X0NVCM9/cupy/cupy/__init__.py'>
scp = <module 'cupyx.scipy' from '/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.Np3X0NVCM9/cupy/cupyx/scipy/__init__.py'>

    @testing.numpy_cupy_allclose(atol=0.1, scipy_name='scp')
    def test_affine_transform_texture_memory(self, xp, scp):
        a = xp.ones(self.shape, dtype=xp.float32)
        center = numpy.divide(numpy.subtract(self.shape, 1), 2)
    
        if len(self.shape) == 2:
            matrix = self._2d_rotation_matrix(self.theta, center)
        elif len(self.shape) == 3:
            matrix = self._3d_rotation_matrix(self.theta, center)
        else:
            return pytest.xfail('Unsupported shape')
    
        if self.output == 'empty':
            output = xp.empty(self.shape, dtype=xp.float32)
            if self.output_shape:
                return pytest.skip('This combination is tested in '
                                   'test_invalid_texture_arguments')
        else:
            output = self.output
    
        if self.output_shape:
            output_shape = (self.output_shape, ) * len(self.shape)
        else:
            output_shape = self.output_shape
    
        if xp == cupy:
            m = cupyx.scipy.ndimage.affine_transform
            matrix = cupy.array(matrix)
>           return m(a, matrix, output_shape=output_shape,
                     output=output, order=self.order,
                     mode=self.mode, texture_memory=True)

tests/cupyx_tests/scipy_tests/ndimage_tests/test_interpolation.py:398: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
cupyx/scipy/ndimage/interpolation.py:376: in affine_transform
    return _texture.affine_transformation(data=input,
cupyx/_texture.py:168: in affine_transformation
    texture_object = _create_texture_object(data,
cupyx/_texture.py:98: in _create_texture_object
    array = texture.CUDAarray(texture_fmt, *data.shape[::-1])
cupy/cuda/texture.pyx:296: in cupy.cuda.texture.CUDAarray.__init__
    self.ptr = runtime.malloc3DArray(desc.ptr, width, height, depth,
cupy_backends/cuda/api/runtime.pyx:593: in cupy_backends.cuda.api.runtime.malloc3DArray
    check_status(status)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

>   raise CUDARuntimeError(status)
E   AssertionError: Only cupy raises error
E   
E   Traceback (most recent call last):
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.Np3X0NVCM9/cupy/cupy/testing/_helper.py", line 47, in _call_func
E       result = impl(self, *args, **kw)
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.Np3X0NVCM9/cupy/tests/cupyx_tests/scipy_tests/ndimage_tests/test_interpolation.py", line 398, in test_affine_transform_texture_memory
E       return m(a, matrix, output_shape=output_shape,
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.Np3X0NVCM9/cupy/cupyx/scipy/ndimage/interpolation.py", line 376, in affine_transform
E       return _texture.affine_transformation(data=input,
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.Np3X0NVCM9/cupy/cupyx/_texture.py", line 168, in affine_transformation
E       texture_object = _create_texture_object(data,
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.Np3X0NVCM9/cupy/cupyx/_texture.py", line 98, in _create_texture_object
E       array = texture.CUDAarray(texture_fmt, *data.shape[::-1])
E     File "cupy/cuda/texture.pyx", line 296, in cupy.cuda.texture.CUDAarray.__init__
E       self.ptr = runtime.malloc3DArray(desc.ptr, width, height, depth,
E     File "cupy_backends/cuda/api/runtime.pyx", line 593, in cupy_backends.cuda.api.runtime.malloc3DArray
E       check_status(status)
E     File "cupy_backends/cuda/api/runtime.pyx", line 265, in cupy_backends.cuda.api.runtime.check_status
E       raise CUDARuntimeError(status)
E   cupy_backends.cuda.api.runtime.CUDARuntimeError: hipErrorUnknown: hipErrorUnknown

cupy_backends/cuda/api/runtime.pyx:265: AssertionError
----------------------------- Captured stderr call -----------------------------
Traceback (most recent call last):
  File "cupy_backends/cuda/api/runtime.pyx", line 644, in cupy_backends.cuda.api.runtime.freeArray
    check_status(status)
  File "cupy_backends/cuda/api/runtime.pyx", line 265, in cupy_backends.cuda.api.runtime.check_status
    raise CUDARuntimeError(status)
cupy_backends.cuda.api.runtime.CUDARuntimeError: hipErrorUnknown: hipErrorUnknown
_ TestAffineTransformTextureMemory.test_affine_transform_texture_memory[_param_226_{mode='nearest', order=0, output=float32, output_shape=None, shape=(100, 100), theta=180}] _

self = <<cupyx_tests.scipy_tests.ndimage_tests.test_interpolation.TestAffineTransformTextureMemory object at 0x7fd7064e2310> ...e': 'nearest', 'order': 0, 'output': <class 'numpy.float32'>, 'output_shape': None, 'shape': (100, 100), 'theta': 180}>
xp = <module 'cupy' from '/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.Np3X0NVCM9/cupy/cupy/__init__.py'>
scp = <module 'cupyx.scipy' from '/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.Np3X0NVCM9/cupy/cupyx/scipy/__init__.py'>

    @testing.numpy_cupy_allclose(atol=0.1, scipy_name='scp')
    def test_affine_transform_texture_memory(self, xp, scp):
        a = xp.ones(self.shape, dtype=xp.float32)
        center = numpy.divide(numpy.subtract(self.shape, 1), 2)
    
        if len(self.shape) == 2:
            matrix = self._2d_rotation_matrix(self.theta, center)
        elif len(self.shape) == 3:
            matrix = self._3d_rotation_matrix(self.theta, center)
        else:
            return pytest.xfail('Unsupported shape')
    
        if self.output == 'empty':
            output = xp.empty(self.shape, dtype=xp.float32)
            if self.output_shape:
                return pytest.skip('This combination is tested in '
                                   'test_invalid_texture_arguments')
        else:
            output = self.output
    
        if self.output_shape:
            output_shape = (self.output_shape, ) * len(self.shape)
        else:
            output_shape = self.output_shape
    
        if xp == cupy:
            m = cupyx.scipy.ndimage.affine_transform
            matrix = cupy.array(matrix)
>           return m(a, matrix, output_shape=output_shape,
                     output=output, order=self.order,
                     mode=self.mode, texture_memory=True)

tests/cupyx_tests/scipy_tests/ndimage_tests/test_interpolation.py:398: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
cupyx/scipy/ndimage/interpolation.py:376: in affine_transform
    return _texture.affine_transformation(data=input,
cupyx/_texture.py:168: in affine_transformation
    texture_object = _create_texture_object(data,
cupyx/_texture.py:98: in _create_texture_object
    array = texture.CUDAarray(texture_fmt, *data.shape[::-1])
cupy/cuda/texture.pyx:296: in cupy.cuda.texture.CUDAarray.__init__
    self.ptr = runtime.malloc3DArray(desc.ptr, width, height, depth,
cupy_backends/cuda/api/runtime.pyx:593: in cupy_backends.cuda.api.runtime.malloc3DArray
    check_status(status)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

>   raise CUDARuntimeError(status)
E   AssertionError: Only cupy raises error
E   
E   Traceback (most recent call last):
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.Np3X0NVCM9/cupy/cupy/testing/_helper.py", line 47, in _call_func
E       result = impl(self, *args, **kw)
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.Np3X0NVCM9/cupy/tests/cupyx_tests/scipy_tests/ndimage_tests/test_interpolation.py", line 398, in test_affine_transform_texture_memory
E       return m(a, matrix, output_shape=output_shape,
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.Np3X0NVCM9/cupy/cupyx/scipy/ndimage/interpolation.py", line 376, in affine_transform
E       return _texture.affine_transformation(data=input,
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.Np3X0NVCM9/cupy/cupyx/_texture.py", line 168, in affine_transformation
E       texture_object = _create_texture_object(data,
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.Np3X0NVCM9/cupy/cupyx/_texture.py", line 98, in _create_texture_object
E       array = texture.CUDAarray(texture_fmt, *data.shape[::-1])
E     File "cupy/cuda/texture.pyx", line 296, in cupy.cuda.texture.CUDAarray.__init__
E       self.ptr = runtime.malloc3DArray(desc.ptr, width, height, depth,
E     File "cupy_backends/cuda/api/runtime.pyx", line 593, in cupy_backends.cuda.api.runtime.malloc3DArray
E       check_status(status)
E     File "cupy_backends/cuda/api/runtime.pyx", line 265, in cupy_backends.cuda.api.runtime.check_status
E       raise CUDARuntimeError(status)
E   cupy_backends.cuda.api.runtime.CUDARuntimeError: hipErrorUnknown: hipErrorUnknown

cupy_backends/cuda/api/runtime.pyx:265: AssertionError
----------------------------- Captured stderr call -----------------------------
Traceback (most recent call last):
  File "cupy_backends/cuda/api/runtime.pyx", line 644, in cupy_backends.cuda.api.runtime.freeArray
    check_status(status)
  File "cupy_backends/cuda/api/runtime.pyx", line 265, in cupy_backends.cuda.api.runtime.check_status
    raise CUDARuntimeError(status)
cupy_backends.cuda.api.runtime.CUDARuntimeError: hipErrorUnknown: hipErrorUnknown
_ TestAffineTransformTextureMemory.test_affine_transform_texture_memory[_param_227_{mode='nearest', order=0, output=float32, output_shape=None, shape=(100, 100), theta=270}] _

self = <<cupyx_tests.scipy_tests.ndimage_tests.test_interpolation.TestAffineTransformTextureMemory object at 0x7fd705afb2e0> ...e': 'nearest', 'order': 0, 'output': <class 'numpy.float32'>, 'output_shape': None, 'shape': (100, 100), 'theta': 270}>
xp = <module 'cupy' from '/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.Np3X0NVCM9/cupy/cupy/__init__.py'>
scp = <module 'cupyx.scipy' from '/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.Np3X0NVCM9/cupy/cupyx/scipy/__init__.py'>

    @testing.numpy_cupy_allclose(atol=0.1, scipy_name='scp')
    def test_affine_transform_texture_memory(self, xp, scp):
        a = xp.ones(self.shape, dtype=xp.float32)
        center = numpy.divide(numpy.subtract(self.shape, 1), 2)
    
        if len(self.shape) == 2:
            matrix = self._2d_rotation_matrix(self.theta, center)
        elif len(self.shape) == 3:
            matrix = self._3d_rotation_matrix(self.theta, center)
        else:
            return pytest.xfail('Unsupported shape')
    
        if self.output == 'empty':
            output = xp.empty(self.shape, dtype=xp.float32)
            if self.output_shape:
                return pytest.skip('This combination is tested in '
                                   'test_invalid_texture_arguments')
        else:
            output = self.output
    
        if self.output_shape:
            output_shape = (self.output_shape, ) * len(self.shape)
        else:
            output_shape = self.output_shape
    
        if xp == cupy:
            m = cupyx.scipy.ndimage.affine_transform
            matrix = cupy.array(matrix)
>           return m(a, matrix, output_shape=output_shape,
                     output=output, order=self.order,
                     mode=self.mode, texture_memory=True)

tests/cupyx_tests/scipy_tests/ndimage_tests/test_interpolation.py:398: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
cupyx/scipy/ndimage/interpolation.py:376: in affine_transform
    return _texture.affine_transformation(data=input,
cupyx/_texture.py:168: in affine_transformation
    texture_object = _create_texture_object(data,
cupyx/_texture.py:98: in _create_texture_object
    array = texture.CUDAarray(texture_fmt, *data.shape[::-1])
cupy/cuda/texture.pyx:296: in cupy.cuda.texture.CUDAarray.__init__
    self.ptr = runtime.malloc3DArray(desc.ptr, width, height, depth,
cupy_backends/cuda/api/runtime.pyx:593: in cupy_backends.cuda.api.runtime.malloc3DArray
    check_status(status)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

>   raise CUDARuntimeError(status)
E   AssertionError: Only cupy raises error
E   
E   Traceback (most recent call last):
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.Np3X0NVCM9/cupy/cupy/testing/_helper.py", line 47, in _call_func
E       result = impl(self, *args, **kw)
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.Np3X0NVCM9/cupy/tests/cupyx_tests/scipy_tests/ndimage_tests/test_interpolation.py", line 398, in test_affine_transform_texture_memory
E       return m(a, matrix, output_shape=output_shape,
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.Np3X0NVCM9/cupy/cupyx/scipy/ndimage/interpolation.py", line 376, in affine_transform
E       return _texture.affine_transformation(data=input,
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.Np3X0NVCM9/cupy/cupyx/_texture.py", line 168, in affine_transformation
E       texture_object = _create_texture_object(data,
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.Np3X0NVCM9/cupy/cupyx/_texture.py", line 98, in _create_texture_object
E       array = texture.CUDAarray(texture_fmt, *data.shape[::-1])
E     File "cupy/cuda/texture.pyx", line 296, in cupy.cuda.texture.CUDAarray.__init__
E       self.ptr = runtime.malloc3DArray(desc.ptr, width, height, depth,
E     File "cupy_backends/cuda/api/runtime.pyx", line 593, in cupy_backends.cuda.api.runtime.malloc3DArray
E       check_status(status)
E     File "cupy_backends/cuda/api/runtime.pyx", line 265, in cupy_backends.cuda.api.runtime.check_status
E       raise CUDARuntimeError(status)
E   cupy_backends.cuda.api.runtime.CUDARuntimeError: hipErrorUnknown: hipErrorUnknown

cupy_backends/cuda/api/runtime.pyx:265: AssertionError
----------------------------- Captured stderr call -----------------------------
Traceback (most recent call last):
  File "cupy_backends/cuda/api/runtime.pyx", line 644, in cupy_backends.cuda.api.runtime.freeArray
    check_status(status)
  File "cupy_backends/cuda/api/runtime.pyx", line 265, in cupy_backends.cuda.api.runtime.check_status
    raise CUDARuntimeError(status)
cupy_backends.cuda.api.runtime.CUDARuntimeError: hipErrorUnknown: hipErrorUnknown
_ TestAffineTransformTextureMemory.test_affine_transform_texture_memory[_param_228_{mode='nearest', order=0, output=float32, output_shape=None, shape=(10, 20), theta=0}] _

self = <<cupyx_tests.scipy_tests.ndimage_tests.test_interpolation.TestAffineTransformTextureMemory object at 0x7fd7056e7af0> ...'mode': 'nearest', 'order': 0, 'output': <class 'numpy.float32'>, 'output_shape': None, 'shape': (10, 20), 'theta': 0}>
xp = <module 'cupy' from '/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.Np3X0NVCM9/cupy/cupy/__init__.py'>
scp = <module 'cupyx.scipy' from '/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.Np3X0NVCM9/cupy/cupyx/scipy/__init__.py'>

    @testing.numpy_cupy_allclose(atol=0.1, scipy_name='scp')
    def test_affine_transform_texture_memory(self, xp, scp):
        a = xp.ones(self.shape, dtype=xp.float32)
        center = numpy.divide(numpy.subtract(self.shape, 1), 2)
    
        if len(self.shape) == 2:
            matrix = self._2d_rotation_matrix(self.theta, center)
        elif len(self.shape) == 3:
            matrix = self._3d_rotation_matrix(self.theta, center)
        else:
            return pytest.xfail('Unsupported shape')
    
        if self.output == 'empty':
            output = xp.empty(self.shape, dtype=xp.float32)
            if self.output_shape:
                return pytest.skip('This combination is tested in '
                                   'test_invalid_texture_arguments')
        else:
            output = self.output
    
        if self.output_shape:
            output_shape = (self.output_shape, ) * len(self.shape)
        else:
            output_shape = self.output_shape
    
        if xp == cupy:
            m = cupyx.scipy.ndimage.affine_transform
            matrix = cupy.array(matrix)
>           return m(a, matrix, output_shape=output_shape,
                     output=output, order=self.order,
                     mode=self.mode, texture_memory=True)

tests/cupyx_tests/scipy_tests/ndimage_tests/test_interpolation.py:398: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
cupyx/scipy/ndimage/interpolation.py:376: in affine_transform
    return _texture.affine_transformation(data=input,
cupyx/_texture.py:168: in affine_transformation
    texture_object = _create_texture_object(data,
cupyx/_texture.py:98: in _create_texture_object
    array = texture.CUDAarray(texture_fmt, *data.shape[::-1])
cupy/cuda/texture.pyx:296: in cupy.cuda.texture.CUDAarray.__init__
    self.ptr = runtime.malloc3DArray(desc.ptr, width, height, depth,
cupy_backends/cuda/api/runtime.pyx:593: in cupy_backends.cuda.api.runtime.malloc3DArray
    check_status(status)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

>   raise CUDARuntimeError(status)
E   AssertionError: Only cupy raises error
E   
E   Traceback (most recent call last):
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.Np3X0NVCM9/cupy/cupy/testing/_helper.py", line 47, in _call_func
E       result = impl(self, *args, **kw)
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.Np3X0NVCM9/cupy/tests/cupyx_tests/scipy_tests/ndimage_tests/test_interpolation.py", line 398, in test_affine_transform_texture_memory
E       return m(a, matrix, output_shape=output_shape,
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.Np3X0NVCM9/cupy/cupyx/scipy/ndimage/interpolation.py", line 376, in affine_transform
E       return _texture.affine_transformation(data=input,
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.Np3X0NVCM9/cupy/cupyx/_texture.py", line 168, in affine_transformation
E       texture_object = _create_texture_object(data,
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.Np3X0NVCM9/cupy/cupyx/_texture.py", line 98, in _create_texture_object
E       array = texture.CUDAarray(texture_fmt, *data.shape[::-1])
E     File "cupy/cuda/texture.pyx", line 296, in cupy.cuda.texture.CUDAarray.__init__
E       self.ptr = runtime.malloc3DArray(desc.ptr, width, height, depth,
E     File "cupy_backends/cuda/api/runtime.pyx", line 593, in cupy_backends.cuda.api.runtime.malloc3DArray
E       check_status(status)
E     File "cupy_backends/cuda/api/runtime.pyx", line 265, in cupy_backends.cuda.api.runtime.check_status
E       raise CUDARuntimeError(status)
E   cupy_backends.cuda.api.runtime.CUDARuntimeError: hipErrorUnknown: hipErrorUnknown

cupy_backends/cuda/api/runtime.pyx:265: AssertionError
----------------------------- Captured stderr call -----------------------------
Traceback (most recent call last):
  File "cupy_backends/cuda/api/runtime.pyx", line 644, in cupy_backends.cuda.api.runtime.freeArray
    check_status(status)
  File "cupy_backends/cuda/api/runtime.pyx", line 265, in cupy_backends.cuda.api.runtime.check_status
    raise CUDARuntimeError(status)
cupy_backends.cuda.api.runtime.CUDARuntimeError: hipErrorUnknown: hipErrorUnknown
_ TestAffineTransformTextureMemory.test_affine_transform_texture_memory[_param_229_{mode='nearest', order=0, output=float32, output_shape=None, shape=(10, 20), theta=90}] _

self = <<cupyx_tests.scipy_tests.ndimage_tests.test_interpolation.TestAffineTransformTextureMemory object at 0x7fd70570e400> ...mode': 'nearest', 'order': 0, 'output': <class 'numpy.float32'>, 'output_shape': None, 'shape': (10, 20), 'theta': 90}>
xp = <module 'cupy' from '/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.Np3X0NVCM9/cupy/cupy/__init__.py'>
scp = <module 'cupyx.scipy' from '/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.Np3X0NVCM9/cupy/cupyx/scipy/__init__.py'>

    @testing.numpy_cupy_allclose(atol=0.1, scipy_name='scp')
    def test_affine_transform_texture_memory(self, xp, scp):
        a = xp.ones(self.shape, dtype=xp.float32)
        center = numpy.divide(numpy.subtract(self.shape, 1), 2)
    
        if len(self.shape) == 2:
            matrix = self._2d_rotation_matrix(self.theta, center)
        elif len(self.shape) == 3:
            matrix = self._3d_rotation_matrix(self.theta, center)
        else:
            return pytest.xfail('Unsupported shape')
    
        if self.output == 'empty':
            output = xp.empty(self.shape, dtype=xp.float32)
            if self.output_shape:
                return pytest.skip('This combination is tested in '
                                   'test_invalid_texture_arguments')
        else:
            output = self.output
    
        if self.output_shape:
            output_shape = (self.output_shape, ) * len(self.shape)
        else:
            output_shape = self.output_shape
    
        if xp == cupy:
            m = cupyx.scipy.ndimage.affine_transform
            matrix = cupy.array(matrix)
>           return m(a, matrix, output_shape=output_shape,
                     output=output, order=self.order,
                     mode=self.mode, texture_memory=True)

tests/cupyx_tests/scipy_tests/ndimage_tests/test_interpolation.py:398: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
cupyx/scipy/ndimage/interpolation.py:376: in affine_transform
    return _texture.affine_transformation(data=input,
cupyx/_texture.py:168: in affine_transformation
    texture_object = _create_texture_object(data,
cupyx/_texture.py:98: in _create_texture_object
    array = texture.CUDAarray(texture_fmt, *data.shape[::-1])
cupy/cuda/texture.pyx:296: in cupy.cuda.texture.CUDAarray.__init__
    self.ptr = runtime.malloc3DArray(desc.ptr, width, height, depth,
cupy_backends/cuda/api/runtime.pyx:593: in cupy_backends.cuda.api.runtime.malloc3DArray
    check_status(status)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

>   raise CUDARuntimeError(status)
E   AssertionError: Only cupy raises error
E   
E   Traceback (most recent call last):
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.Np3X0NVCM9/cupy/cupy/testing/_helper.py", line 47, in _call_func
E       result = impl(self, *args, **kw)
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.Np3X0NVCM9/cupy/tests/cupyx_tests/scipy_tests/ndimage_tests/test_interpolation.py", line 398, in test_affine_transform_texture_memory
E       return m(a, matrix, output_shape=output_shape,
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.Np3X0NVCM9/cupy/cupyx/scipy/ndimage/interpolation.py", line 376, in affine_transform
E       return _texture.affine_transformation(data=input,
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.Np3X0NVCM9/cupy/cupyx/_texture.py", line 168, in affine_transformation
E       texture_object = _create_texture_object(data,
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.Np3X0NVCM9/cupy/cupyx/_texture.py", line 98, in _create_texture_object
E       array = texture.CUDAarray(texture_fmt, *data.shape[::-1])
E     File "cupy/cuda/texture.pyx", line 296, in cupy.cuda.texture.CUDAarray.__init__
E       self.ptr = runtime.malloc3DArray(desc.ptr, width, height, depth,
E     File "cupy_backends/cuda/api/runtime.pyx", line 593, in cupy_backends.cuda.api.runtime.malloc3DArray
E       check_status(status)
E     File "cupy_backends/cuda/api/runtime.pyx", line 265, in cupy_backends.cuda.api.runtime.check_status
E       raise CUDARuntimeError(status)
E   cupy_backends.cuda.api.runtime.CUDARuntimeError: hipErrorUnknown: hipErrorUnknown

cupy_backends/cuda/api/runtime.pyx:265: AssertionError
----------------------------- Captured stderr call -----------------------------
Traceback (most recent call last):
  File "cupy_backends/cuda/api/runtime.pyx", line 644, in cupy_backends.cuda.api.runtime.freeArray
    check_status(status)
  File "cupy_backends/cuda/api/runtime.pyx", line 265, in cupy_backends.cuda.api.runtime.check_status
    raise CUDARuntimeError(status)
cupy_backends.cuda.api.runtime.CUDARuntimeError: hipErrorUnknown: hipErrorUnknown
_ TestAffineTransformTextureMemory.test_affine_transform_texture_memory[_param_230_{mode='nearest', order=0, output=float32, output_shape=None, shape=(10, 20), theta=180}] _

self = <<cupyx_tests.scipy_tests.ndimage_tests.test_interpolation.TestAffineTransformTextureMemory object at 0x7fd707cf69a0> ...ode': 'nearest', 'order': 0, 'output': <class 'numpy.float32'>, 'output_shape': None, 'shape': (10, 20), 'theta': 180}>
xp = <module 'cupy' from '/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.Np3X0NVCM9/cupy/cupy/__init__.py'>
scp = <module 'cupyx.scipy' from '/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.Np3X0NVCM9/cupy/cupyx/scipy/__init__.py'>

    @testing.numpy_cupy_allclose(atol=0.1, scipy_name='scp')
    def test_affine_transform_texture_memory(self, xp, scp):
        a = xp.ones(self.shape, dtype=xp.float32)
        center = numpy.divide(numpy.subtract(self.shape, 1), 2)
    
        if len(self.shape) == 2:
            matrix = self._2d_rotation_matrix(self.theta, center)
        elif len(self.shape) == 3:
            matrix = self._3d_rotation_matrix(self.theta, center)
        else:
            return pytest.xfail('Unsupported shape')
    
        if self.output == 'empty':
            output = xp.empty(self.shape, dtype=xp.float32)
            if self.output_shape:
                return pytest.skip('This combination is tested in '
                                   'test_invalid_texture_arguments')
        else:
            output = self.output
    
        if self.output_shape:
            output_shape = (self.output_shape, ) * len(self.shape)
        else:
            output_shape = self.output_shape
    
        if xp == cupy:
            m = cupyx.scipy.ndimage.affine_transform
            matrix = cupy.array(matrix)
>           return m(a, matrix, output_shape=output_shape,
                     output=output, order=self.order,
                     mode=self.mode, texture_memory=True)

tests/cupyx_tests/scipy_tests/ndimage_tests/test_interpolation.py:398: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
cupyx/scipy/ndimage/interpolation.py:376: in affine_transform
    return _texture.affine_transformation(data=input,
cupyx/_texture.py:168: in affine_transformation
    texture_object = _create_texture_object(data,
cupyx/_texture.py:98: in _create_texture_object
    array = texture.CUDAarray(texture_fmt, *data.shape[::-1])
cupy/cuda/texture.pyx:296: in cupy.cuda.texture.CUDAarray.__init__
    self.ptr = runtime.malloc3DArray(desc.ptr, width, height, depth,
cupy_backends/cuda/api/runtime.pyx:593: in cupy_backends.cuda.api.runtime.malloc3DArray
    check_status(status)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

>   raise CUDARuntimeError(status)
E   AssertionError: Only cupy raises error
E   
E   Traceback (most recent call last):
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.Np3X0NVCM9/cupy/cupy/testing/_helper.py", line 47, in _call_func
E       result = impl(self, *args, **kw)
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.Np3X0NVCM9/cupy/tests/cupyx_tests/scipy_tests/ndimage_tests/test_interpolation.py", line 398, in test_affine_transform_texture_memory
E       return m(a, matrix, output_shape=output_shape,
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.Np3X0NVCM9/cupy/cupyx/scipy/ndimage/interpolation.py", line 376, in affine_transform
E       return _texture.affine_transformation(data=input,
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.Np3X0NVCM9/cupy/cupyx/_texture.py", line 168, in affine_transformation
E       texture_object = _create_texture_object(data,
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.Np3X0NVCM9/cupy/cupyx/_texture.py", line 98, in _create_texture_object
E       array = texture.CUDAarray(texture_fmt, *data.shape[::-1])
E     File "cupy/cuda/texture.pyx", line 296, in cupy.cuda.texture.CUDAarray.__init__
E       self.ptr = runtime.malloc3DArray(desc.ptr, width, height, depth,
E     File "cupy_backends/cuda/api/runtime.pyx", line 593, in cupy_backends.cuda.api.runtime.malloc3DArray
E       check_status(status)
E     File "cupy_backends/cuda/api/runtime.pyx", line 265, in cupy_backends.cuda.api.runtime.check_status
E       raise CUDARuntimeError(status)
E   cupy_backends.cuda.api.runtime.CUDARuntimeError: hipErrorUnknown: hipErrorUnknown

cupy_backends/cuda/api/runtime.pyx:265: AssertionError
----------------------------- Captured stderr call -----------------------------
Traceback (most recent call last):
  File "cupy_backends/cuda/api/runtime.pyx", line 644, in cupy_backends.cuda.api.runtime.freeArray
    check_status(status)
  File "cupy_backends/cuda/api/runtime.pyx", line 265, in cupy_backends.cuda.api.runtime.check_status
    raise CUDARuntimeError(status)
cupy_backends.cuda.api.runtime.CUDARuntimeError: hipErrorUnknown: hipErrorUnknown
_ TestAffineTransformTextureMemory.test_affine_transform_texture_memory[_param_231_{mode='nearest', order=0, output=float32, output_shape=None, shape=(10, 20), theta=270}] _

self = <<cupyx_tests.scipy_tests.ndimage_tests.test_interpolation.TestAffineTransformTextureMemory object at 0x7fd7058336d0> ...ode': 'nearest', 'order': 0, 'output': <class 'numpy.float32'>, 'output_shape': None, 'shape': (10, 20), 'theta': 270}>
xp = <module 'cupy' from '/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.Np3X0NVCM9/cupy/cupy/__init__.py'>
scp = <module 'cupyx.scipy' from '/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.Np3X0NVCM9/cupy/cupyx/scipy/__init__.py'>

    @testing.numpy_cupy_allclose(atol=0.1, scipy_name='scp')
    def test_affine_transform_texture_memory(self, xp, scp):
        a = xp.ones(self.shape, dtype=xp.float32)
        center = numpy.divide(numpy.subtract(self.shape, 1), 2)
    
        if len(self.shape) == 2:
            matrix = self._2d_rotation_matrix(self.theta, center)
        elif len(self.shape) == 3:
            matrix = self._3d_rotation_matrix(self.theta, center)
        else:
            return pytest.xfail('Unsupported shape')
    
        if self.output == 'empty':
            output = xp.empty(self.shape, dtype=xp.float32)
            if self.output_shape:
                return pytest.skip('This combination is tested in '
                                   'test_invalid_texture_arguments')
        else:
            output = self.output
    
        if self.output_shape:
            output_shape = (self.output_shape, ) * len(self.shape)
        else:
            output_shape = self.output_shape
    
        if xp == cupy:
            m = cupyx.scipy.ndimage.affine_transform
            matrix = cupy.array(matrix)
>           return m(a, matrix, output_shape=output_shape,
                     output=output, order=self.order,
                     mode=self.mode, texture_memory=True)

tests/cupyx_tests/scipy_tests/ndimage_tests/test_interpolation.py:398: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
cupyx/scipy/ndimage/interpolation.py:376: in affine_transform
    return _texture.affine_transformation(data=input,
cupyx/_texture.py:168: in affine_transformation
    texture_object = _create_texture_object(data,
cupyx/_texture.py:98: in _create_texture_object
    array = texture.CUDAarray(texture_fmt, *data.shape[::-1])
cupy/cuda/texture.pyx:296: in cupy.cuda.texture.CUDAarray.__init__
    self.ptr = runtime.malloc3DArray(desc.ptr, width, height, depth,
cupy_backends/cuda/api/runtime.pyx:593: in cupy_backends.cuda.api.runtime.malloc3DArray
    check_status(status)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

>   raise CUDARuntimeError(status)
E   AssertionError: Only cupy raises error
E   
E   Traceback (most recent call last):
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.Np3X0NVCM9/cupy/cupy/testing/_helper.py", line 47, in _call_func
E       result = impl(self, *args, **kw)
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.Np3X0NVCM9/cupy/tests/cupyx_tests/scipy_tests/ndimage_tests/test_interpolation.py", line 398, in test_affine_transform_texture_memory
E       return m(a, matrix, output_shape=output_shape,
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.Np3X0NVCM9/cupy/cupyx/scipy/ndimage/interpolation.py", line 376, in affine_transform
E       return _texture.affine_transformation(data=input,
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.Np3X0NVCM9/cupy/cupyx/_texture.py", line 168, in affine_transformation
E       texture_object = _create_texture_object(data,
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.Np3X0NVCM9/cupy/cupyx/_texture.py", line 98, in _create_texture_object
E       array = texture.CUDAarray(texture_fmt, *data.shape[::-1])
E     File "cupy/cuda/texture.pyx", line 296, in cupy.cuda.texture.CUDAarray.__init__
E       self.ptr = runtime.malloc3DArray(desc.ptr, width, height, depth,
E     File "cupy_backends/cuda/api/runtime.pyx", line 593, in cupy_backends.cuda.api.runtime.malloc3DArray
E       check_status(status)
E     File "cupy_backends/cuda/api/runtime.pyx", line 265, in cupy_backends.cuda.api.runtime.check_status
E       raise CUDARuntimeError(status)
E   cupy_backends.cuda.api.runtime.CUDARuntimeError: hipErrorUnknown: hipErrorUnknown

cupy_backends/cuda/api/runtime.pyx:265: AssertionError
----------------------------- Captured stderr call -----------------------------
Traceback (most recent call last):
  File "cupy_backends/cuda/api/runtime.pyx", line 644, in cupy_backends.cuda.api.runtime.freeArray
    check_status(status)
  File "cupy_backends/cuda/api/runtime.pyx", line 265, in cupy_backends.cuda.api.runtime.check_status
    raise CUDARuntimeError(status)
cupy_backends.cuda.api.runtime.CUDARuntimeError: hipErrorUnknown: hipErrorUnknown
_ TestAffineTransformTextureMemory.test_affine_transform_texture_memory[_param_232_{mode='nearest', order=0, output=float32, output_shape=None, shape=(10, 10, 10), theta=0}] _

self = <<cupyx_tests.scipy_tests.ndimage_tests.test_interpolation.TestAffineTransformTextureMemory object at 0x7fd705851400> ...e': 'nearest', 'order': 0, 'output': <class 'numpy.float32'>, 'output_shape': None, 'shape': (10, 10, 10), 'theta': 0}>
xp = <module 'cupy' from '/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.Np3X0NVCM9/cupy/cupy/__init__.py'>
scp = <module 'cupyx.scipy' from '/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.Np3X0NVCM9/cupy/cupyx/scipy/__init__.py'>

    @testing.numpy_cupy_allclose(atol=0.1, scipy_name='scp')
    def test_affine_transform_texture_memory(self, xp, scp):
        a = xp.ones(self.shape, dtype=xp.float32)
        center = numpy.divide(numpy.subtract(self.shape, 1), 2)
    
        if len(self.shape) == 2:
            matrix = self._2d_rotation_matrix(self.theta, center)
        elif len(self.shape) == 3:
            matrix = self._3d_rotation_matrix(self.theta, center)
        else:
            return pytest.xfail('Unsupported shape')
    
        if self.output == 'empty':
            output = xp.empty(self.shape, dtype=xp.float32)
            if self.output_shape:
                return pytest.skip('This combination is tested in '
                                   'test_invalid_texture_arguments')
        else:
            output = self.output
    
        if self.output_shape:
            output_shape = (self.output_shape, ) * len(self.shape)
        else:
            output_shape = self.output_shape
    
        if xp == cupy:
            m = cupyx.scipy.ndimage.affine_transform
            matrix = cupy.array(matrix)
>           return m(a, matrix, output_shape=output_shape,
                     output=output, order=self.order,
                     mode=self.mode, texture_memory=True)

tests/cupyx_tests/scipy_tests/ndimage_tests/test_interpolation.py:398: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
cupyx/scipy/ndimage/interpolation.py:376: in affine_transform
    return _texture.affine_transformation(data=input,
cupyx/_texture.py:168: in affine_transformation
    texture_object = _create_texture_object(data,
cupyx/_texture.py:98: in _create_texture_object
    array = texture.CUDAarray(texture_fmt, *data.shape[::-1])
cupy/cuda/texture.pyx:296: in cupy.cuda.texture.CUDAarray.__init__
    self.ptr = runtime.malloc3DArray(desc.ptr, width, height, depth,
cupy_backends/cuda/api/runtime.pyx:593: in cupy_backends.cuda.api.runtime.malloc3DArray
    check_status(status)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

>   raise CUDARuntimeError(status)
E   AssertionError: Only cupy raises error
E   
E   Traceback (most recent call last):
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.Np3X0NVCM9/cupy/cupy/testing/_helper.py", line 47, in _call_func
E       result = impl(self, *args, **kw)
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.Np3X0NVCM9/cupy/tests/cupyx_tests/scipy_tests/ndimage_tests/test_interpolation.py", line 398, in test_affine_transform_texture_memory
E       return m(a, matrix, output_shape=output_shape,
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.Np3X0NVCM9/cupy/cupyx/scipy/ndimage/interpolation.py", line 376, in affine_transform
E       return _texture.affine_transformation(data=input,
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.Np3X0NVCM9/cupy/cupyx/_texture.py", line 168, in affine_transformation
E       texture_object = _create_texture_object(data,
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.Np3X0NVCM9/cupy/cupyx/_texture.py", line 98, in _create_texture_object
E       array = texture.CUDAarray(texture_fmt, *data.shape[::-1])
E     File "cupy/cuda/texture.pyx", line 296, in cupy.cuda.texture.CUDAarray.__init__
E       self.ptr = runtime.malloc3DArray(desc.ptr, width, height, depth,
E     File "cupy_backends/cuda/api/runtime.pyx", line 593, in cupy_backends.cuda.api.runtime.malloc3DArray
E       check_status(status)
E     File "cupy_backends/cuda/api/runtime.pyx", line 265, in cupy_backends.cuda.api.runtime.check_status
E       raise CUDARuntimeError(status)
E   cupy_backends.cuda.api.runtime.CUDARuntimeError: hipErrorUnknown: hipErrorUnknown

cupy_backends/cuda/api/runtime.pyx:265: AssertionError
----------------------------- Captured stderr call -----------------------------
Traceback (most recent call last):
  File "cupy_backends/cuda/api/runtime.pyx", line 644, in cupy_backends.cuda.api.runtime.freeArray
    check_status(status)
  File "cupy_backends/cuda/api/runtime.pyx", line 265, in cupy_backends.cuda.api.runtime.check_status
    raise CUDARuntimeError(status)
cupy_backends.cuda.api.runtime.CUDARuntimeError: hipErrorUnknown: hipErrorUnknown
_ TestAffineTransformTextureMemory.test_affine_transform_texture_memory[_param_233_{mode='nearest', order=0, output=float32, output_shape=None, shape=(10, 10, 10), theta=90}] _

self = <<cupyx_tests.scipy_tests.ndimage_tests.test_interpolation.TestAffineTransformTextureMemory object at 0x7fd7064ae130> ...': 'nearest', 'order': 0, 'output': <class 'numpy.float32'>, 'output_shape': None, 'shape': (10, 10, 10), 'theta': 90}>
xp = <module 'cupy' from '/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.Np3X0NVCM9/cupy/cupy/__init__.py'>
scp = <module 'cupyx.scipy' from '/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.Np3X0NVCM9/cupy/cupyx/scipy/__init__.py'>

    @testing.numpy_cupy_allclose(atol=0.1, scipy_name='scp')
    def test_affine_transform_texture_memory(self, xp, scp):
        a = xp.ones(self.shape, dtype=xp.float32)
        center = numpy.divide(numpy.subtract(self.shape, 1), 2)
    
        if len(self.shape) == 2:
            matrix = self._2d_rotation_matrix(self.theta, center)
        elif len(self.shape) == 3:
            matrix = self._3d_rotation_matrix(self.theta, center)
        else:
            return pytest.xfail('Unsupported shape')
    
        if self.output == 'empty':
            output = xp.empty(self.shape, dtype=xp.float32)
            if self.output_shape:
                return pytest.skip('This combination is tested in '
                                   'test_invalid_texture_arguments')
        else:
            output = self.output
    
        if self.output_shape:
            output_shape = (self.output_shape, ) * len(self.shape)
        else:
            output_shape = self.output_shape
    
        if xp == cupy:
            m = cupyx.scipy.ndimage.affine_transform
            matrix = cupy.array(matrix)
>           return m(a, matrix, output_shape=output_shape,
                     output=output, order=self.order,
                     mode=self.mode, texture_memory=True)

tests/cupyx_tests/scipy_tests/ndimage_tests/test_interpolation.py:398: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
cupyx/scipy/ndimage/interpolation.py:376: in affine_transform
    return _texture.affine_transformation(data=input,
cupyx/_texture.py:168: in affine_transformation
    texture_object = _create_texture_object(data,
cupyx/_texture.py:98: in _create_texture_object
    array = texture.CUDAarray(texture_fmt, *data.shape[::-1])
cupy/cuda/texture.pyx:296: in cupy.cuda.texture.CUDAarray.__init__
    self.ptr = runtime.malloc3DArray(desc.ptr, width, height, depth,
cupy_backends/cuda/api/runtime.pyx:593: in cupy_backends.cuda.api.runtime.malloc3DArray
    check_status(status)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

>   raise CUDARuntimeError(status)
E   AssertionError: Only cupy raises error
E   
E   Traceback (most recent call last):
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.Np3X0NVCM9/cupy/cupy/testing/_helper.py", line 47, in _call_func
E       result = impl(self, *args, **kw)
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.Np3X0NVCM9/cupy/tests/cupyx_tests/scipy_tests/ndimage_tests/test_interpolation.py", line 398, in test_affine_transform_texture_memory
E       return m(a, matrix, output_shape=output_shape,
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.Np3X0NVCM9/cupy/cupyx/scipy/ndimage/interpolation.py", line 376, in affine_transform
E       return _texture.affine_transformation(data=input,
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.Np3X0NVCM9/cupy/cupyx/_texture.py", line 168, in affine_transformation
E       texture_object = _create_texture_object(data,
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.Np3X0NVCM9/cupy/cupyx/_texture.py", line 98, in _create_texture_object
E       array = texture.CUDAarray(texture_fmt, *data.shape[::-1])
E     File "cupy/cuda/texture.pyx", line 296, in cupy.cuda.texture.CUDAarray.__init__
E       self.ptr = runtime.malloc3DArray(desc.ptr, width, height, depth,
E     File "cupy_backends/cuda/api/runtime.pyx", line 593, in cupy_backends.cuda.api.runtime.malloc3DArray
E       check_status(status)
E     File "cupy_backends/cuda/api/runtime.pyx", line 265, in cupy_backends.cuda.api.runtime.check_status
E       raise CUDARuntimeError(status)
E   cupy_backends.cuda.api.runtime.CUDARuntimeError: hipErrorUnknown: hipErrorUnknown

cupy_backends/cuda/api/runtime.pyx:265: AssertionError
----------------------------- Captured stderr call -----------------------------
Traceback (most recent call last):
  File "cupy_backends/cuda/api/runtime.pyx", line 644, in cupy_backends.cuda.api.runtime.freeArray
    check_status(status)
  File "cupy_backends/cuda/api/runtime.pyx", line 265, in cupy_backends.cuda.api.runtime.check_status
    raise CUDARuntimeError(status)
cupy_backends.cuda.api.runtime.CUDARuntimeError: hipErrorUnknown: hipErrorUnknown
_ TestAffineTransformTextureMemory.test_affine_transform_texture_memory[_param_234_{mode='nearest', order=0, output=float32, output_shape=None, shape=(10, 10, 10), theta=180}] _

self = <<cupyx_tests.scipy_tests.ndimage_tests.test_interpolation.TestAffineTransformTextureMemory object at 0x7fd7067d6bb0> ...: 'nearest', 'order': 0, 'output': <class 'numpy.float32'>, 'output_shape': None, 'shape': (10, 10, 10), 'theta': 180}>
xp = <module 'cupy' from '/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.Np3X0NVCM9/cupy/cupy/__init__.py'>
scp = <module 'cupyx.scipy' from '/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.Np3X0NVCM9/cupy/cupyx/scipy/__init__.py'>

    @testing.numpy_cupy_allclose(atol=0.1, scipy_name='scp')
    def test_affine_transform_texture_memory(self, xp, scp):
        a = xp.ones(self.shape, dtype=xp.float32)
        center = numpy.divide(numpy.subtract(self.shape, 1), 2)
    
        if len(self.shape) == 2:
            matrix = self._2d_rotation_matrix(self.theta, center)
        elif len(self.shape) == 3:
            matrix = self._3d_rotation_matrix(self.theta, center)
        else:
            return pytest.xfail('Unsupported shape')
    
        if self.output == 'empty':
            output = xp.empty(self.shape, dtype=xp.float32)
            if self.output_shape:
                return pytest.skip('This combination is tested in '
                                   'test_invalid_texture_arguments')
        else:
            output = self.output
    
        if self.output_shape:
            output_shape = (self.output_shape, ) * len(self.shape)
        else:
            output_shape = self.output_shape
    
        if xp == cupy:
            m = cupyx.scipy.ndimage.affine_transform
            matrix = cupy.array(matrix)
>           return m(a, matrix, output_shape=output_shape,
                     output=output, order=self.order,
                     mode=self.mode, texture_memory=True)

tests/cupyx_tests/scipy_tests/ndimage_tests/test_interpolation.py:398: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
cupyx/scipy/ndimage/interpolation.py:376: in affine_transform
    return _texture.affine_transformation(data=input,
cupyx/_texture.py:168: in affine_transformation
    texture_object = _create_texture_object(data,
cupyx/_texture.py:98: in _create_texture_object
    array = texture.CUDAarray(texture_fmt, *data.shape[::-1])
cupy/cuda/texture.pyx:296: in cupy.cuda.texture.CUDAarray.__init__
    self.ptr = runtime.malloc3DArray(desc.ptr, width, height, depth,
cupy_backends/cuda/api/runtime.pyx:593: in cupy_backends.cuda.api.runtime.malloc3DArray
    check_status(status)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

>   raise CUDARuntimeError(status)
E   AssertionError: Only cupy raises error
E   
E   Traceback (most recent call last):
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.Np3X0NVCM9/cupy/cupy/testing/_helper.py", line 47, in _call_func
E       result = impl(self, *args, **kw)
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.Np3X0NVCM9/cupy/tests/cupyx_tests/scipy_tests/ndimage_tests/test_interpolation.py", line 398, in test_affine_transform_texture_memory
E       return m(a, matrix, output_shape=output_shape,
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.Np3X0NVCM9/cupy/cupyx/scipy/ndimage/interpolation.py", line 376, in affine_transform
E       return _texture.affine_transformation(data=input,
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.Np3X0NVCM9/cupy/cupyx/_texture.py", line 168, in affine_transformation
E       texture_object = _create_texture_object(data,
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.Np3X0NVCM9/cupy/cupyx/_texture.py", line 98, in _create_texture_object
E       array = texture.CUDAarray(texture_fmt, *data.shape[::-1])
E     File "cupy/cuda/texture.pyx", line 296, in cupy.cuda.texture.CUDAarray.__init__
E       self.ptr = runtime.malloc3DArray(desc.ptr, width, height, depth,
E     File "cupy_backends/cuda/api/runtime.pyx", line 593, in cupy_backends.cuda.api.runtime.malloc3DArray
E       check_status(status)
E     File "cupy_backends/cuda/api/runtime.pyx", line 265, in cupy_backends.cuda.api.runtime.check_status
E       raise CUDARuntimeError(status)
E   cupy_backends.cuda.api.runtime.CUDARuntimeError: hipErrorUnknown: hipErrorUnknown

cupy_backends/cuda/api/runtime.pyx:265: AssertionError
----------------------------- Captured stderr call -----------------------------
Traceback (most recent call last):
  File "cupy_backends/cuda/api/runtime.pyx", line 644, in cupy_backends.cuda.api.runtime.freeArray
    check_status(status)
  File "cupy_backends/cuda/api/runtime.pyx", line 265, in cupy_backends.cuda.api.runtime.check_status
    raise CUDARuntimeError(status)
cupy_backends.cuda.api.runtime.CUDARuntimeError: hipErrorUnknown: hipErrorUnknown
_ TestAffineTransformTextureMemory.test_affine_transform_texture_memory[_param_235_{mode='nearest', order=0, output=float32, output_shape=None, shape=(10, 10, 10), theta=270}] _

self = <<cupyx_tests.scipy_tests.ndimage_tests.test_interpolation.TestAffineTransformTextureMemory object at 0x7fd7067f60a0> ...: 'nearest', 'order': 0, 'output': <class 'numpy.float32'>, 'output_shape': None, 'shape': (10, 10, 10), 'theta': 270}>
xp = <module 'cupy' from '/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.Np3X0NVCM9/cupy/cupy/__init__.py'>
scp = <module 'cupyx.scipy' from '/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.Np3X0NVCM9/cupy/cupyx/scipy/__init__.py'>

    @testing.numpy_cupy_allclose(atol=0.1, scipy_name='scp')
    def test_affine_transform_texture_memory(self, xp, scp):
        a = xp.ones(self.shape, dtype=xp.float32)
        center = numpy.divide(numpy.subtract(self.shape, 1), 2)
    
        if len(self.shape) == 2:
            matrix = self._2d_rotation_matrix(self.theta, center)
        elif len(self.shape) == 3:
            matrix = self._3d_rotation_matrix(self.theta, center)
        else:
            return pytest.xfail('Unsupported shape')
    
        if self.output == 'empty':
            output = xp.empty(self.shape, dtype=xp.float32)
            if self.output_shape:
                return pytest.skip('This combination is tested in '
                                   'test_invalid_texture_arguments')
        else:
            output = self.output
    
        if self.output_shape:
            output_shape = (self.output_shape, ) * len(self.shape)
        else:
            output_shape = self.output_shape
    
        if xp == cupy:
            m = cupyx.scipy.ndimage.affine_transform
            matrix = cupy.array(matrix)
>           return m(a, matrix, output_shape=output_shape,
                     output=output, order=self.order,
                     mode=self.mode, texture_memory=True)

tests/cupyx_tests/scipy_tests/ndimage_tests/test_interpolation.py:398: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
cupyx/scipy/ndimage/interpolation.py:376: in affine_transform
    return _texture.affine_transformation(data=input,
cupyx/_texture.py:168: in affine_transformation
    texture_object = _create_texture_object(data,
cupyx/_texture.py:98: in _create_texture_object
    array = texture.CUDAarray(texture_fmt, *data.shape[::-1])
cupy/cuda/texture.pyx:296: in cupy.cuda.texture.CUDAarray.__init__
    self.ptr = runtime.malloc3DArray(desc.ptr, width, height, depth,
cupy_backends/cuda/api/runtime.pyx:593: in cupy_backends.cuda.api.runtime.malloc3DArray
    check_status(status)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

>   raise CUDARuntimeError(status)
E   AssertionError: Only cupy raises error
E   
E   Traceback (most recent call last):
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.Np3X0NVCM9/cupy/cupy/testing/_helper.py", line 47, in _call_func
E       result = impl(self, *args, **kw)
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.Np3X0NVCM9/cupy/tests/cupyx_tests/scipy_tests/ndimage_tests/test_interpolation.py", line 398, in test_affine_transform_texture_memory
E       return m(a, matrix, output_shape=output_shape,
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.Np3X0NVCM9/cupy/cupyx/scipy/ndimage/interpolation.py", line 376, in affine_transform
E       return _texture.affine_transformation(data=input,
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.Np3X0NVCM9/cupy/cupyx/_texture.py", line 168, in affine_transformation
E       texture_object = _create_texture_object(data,
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.Np3X0NVCM9/cupy/cupyx/_texture.py", line 98, in _create_texture_object
E       array = texture.CUDAarray(texture_fmt, *data.shape[::-1])
E     File "cupy/cuda/texture.pyx", line 296, in cupy.cuda.texture.CUDAarray.__init__
E       self.ptr = runtime.malloc3DArray(desc.ptr, width, height, depth,
E     File "cupy_backends/cuda/api/runtime.pyx", line 593, in cupy_backends.cuda.api.runtime.malloc3DArray
E       check_status(status)
E     File "cupy_backends/cuda/api/runtime.pyx", line 265, in cupy_backends.cuda.api.runtime.check_status
E       raise CUDARuntimeError(status)
E   cupy_backends.cuda.api.runtime.CUDARuntimeError: hipErrorUnknown: hipErrorUnknown

cupy_backends/cuda/api/runtime.pyx:265: AssertionError
----------------------------- Captured stderr call -----------------------------
Traceback (most recent call last):
  File "cupy_backends/cuda/api/runtime.pyx", line 644, in cupy_backends.cuda.api.runtime.freeArray
    check_status(status)
  File "cupy_backends/cuda/api/runtime.pyx", line 265, in cupy_backends.cuda.api.runtime.check_status
    raise CUDARuntimeError(status)
cupy_backends.cuda.api.runtime.CUDARuntimeError: hipErrorUnknown: hipErrorUnknown
_ TestAffineTransformTextureMemory.test_affine_transform_texture_memory[_param_236_{mode='nearest', order=0, output=float32, output_shape=None, shape=(10, 20, 30), theta=0}] _

self = <<cupyx_tests.scipy_tests.ndimage_tests.test_interpolation.TestAffineTransformTextureMemory object at 0x7fd7073768e0> ...e': 'nearest', 'order': 0, 'output': <class 'numpy.float32'>, 'output_shape': None, 'shape': (10, 20, 30), 'theta': 0}>
xp = <module 'cupy' from '/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.Np3X0NVCM9/cupy/cupy/__init__.py'>
scp = <module 'cupyx.scipy' from '/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.Np3X0NVCM9/cupy/cupyx/scipy/__init__.py'>

    @testing.numpy_cupy_allclose(atol=0.1, scipy_name='scp')
    def test_affine_transform_texture_memory(self, xp, scp):
        a = xp.ones(self.shape, dtype=xp.float32)
        center = numpy.divide(numpy.subtract(self.shape, 1), 2)
    
        if len(self.shape) == 2:
            matrix = self._2d_rotation_matrix(self.theta, center)
        elif len(self.shape) == 3:
            matrix = self._3d_rotation_matrix(self.theta, center)
        else:
            return pytest.xfail('Unsupported shape')
    
        if self.output == 'empty':
            output = xp.empty(self.shape, dtype=xp.float32)
            if self.output_shape:
                return pytest.skip('This combination is tested in '
                                   'test_invalid_texture_arguments')
        else:
            output = self.output
    
        if self.output_shape:
            output_shape = (self.output_shape, ) * len(self.shape)
        else:
            output_shape = self.output_shape
    
        if xp == cupy:
            m = cupyx.scipy.ndimage.affine_transform
            matrix = cupy.array(matrix)
>           return m(a, matrix, output_shape=output_shape,
                     output=output, order=self.order,
                     mode=self.mode, texture_memory=True)

tests/cupyx_tests/scipy_tests/ndimage_tests/test_interpolation.py:398: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
cupyx/scipy/ndimage/interpolation.py:376: in affine_transform
    return _texture.affine_transformation(data=input,
cupyx/_texture.py:168: in affine_transformation
    texture_object = _create_texture_object(data,
cupyx/_texture.py:98: in _create_texture_object
    array = texture.CUDAarray(texture_fmt, *data.shape[::-1])
cupy/cuda/texture.pyx:296: in cupy.cuda.texture.CUDAarray.__init__
    self.ptr = runtime.malloc3DArray(desc.ptr, width, height, depth,
cupy_backends/cuda/api/runtime.pyx:593: in cupy_backends.cuda.api.runtime.malloc3DArray
    check_status(status)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

>   raise CUDARuntimeError(status)
E   AssertionError: Only cupy raises error
E   
E   Traceback (most recent call last):
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.Np3X0NVCM9/cupy/cupy/testing/_helper.py", line 47, in _call_func
E       result = impl(self, *args, **kw)
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.Np3X0NVCM9/cupy/tests/cupyx_tests/scipy_tests/ndimage_tests/test_interpolation.py", line 398, in test_affine_transform_texture_memory
E       return m(a, matrix, output_shape=output_shape,
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.Np3X0NVCM9/cupy/cupyx/scipy/ndimage/interpolation.py", line 376, in affine_transform
E       return _texture.affine_transformation(data=input,
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.Np3X0NVCM9/cupy/cupyx/_texture.py", line 168, in affine_transformation
E       texture_object = _create_texture_object(data,
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.Np3X0NVCM9/cupy/cupyx/_texture.py", line 98, in _create_texture_object
E       array = texture.CUDAarray(texture_fmt, *data.shape[::-1])
E     File "cupy/cuda/texture.pyx", line 296, in cupy.cuda.texture.CUDAarray.__init__
E       self.ptr = runtime.malloc3DArray(desc.ptr, width, height, depth,
E     File "cupy_backends/cuda/api/runtime.pyx", line 593, in cupy_backends.cuda.api.runtime.malloc3DArray
E       check_status(status)
E     File "cupy_backends/cuda/api/runtime.pyx", line 265, in cupy_backends.cuda.api.runtime.check_status
E       raise CUDARuntimeError(status)
E   cupy_backends.cuda.api.runtime.CUDARuntimeError: hipErrorUnknown: hipErrorUnknown

cupy_backends/cuda/api/runtime.pyx:265: AssertionError
----------------------------- Captured stderr call -----------------------------
Traceback (most recent call last):
  File "cupy_backends/cuda/api/runtime.pyx", line 644, in cupy_backends.cuda.api.runtime.freeArray
    check_status(status)
  File "cupy_backends/cuda/api/runtime.pyx", line 265, in cupy_backends.cuda.api.runtime.check_status
    raise CUDARuntimeError(status)
cupy_backends.cuda.api.runtime.CUDARuntimeError: hipErrorUnknown: hipErrorUnknown
_ TestAffineTransformTextureMemory.test_affine_transform_texture_memory[_param_237_{mode='nearest', order=0, output=float32, output_shape=None, shape=(10, 20, 30), theta=90}] _

self = <<cupyx_tests.scipy_tests.ndimage_tests.test_interpolation.TestAffineTransformTextureMemory object at 0x7fd7055fd760> ...': 'nearest', 'order': 0, 'output': <class 'numpy.float32'>, 'output_shape': None, 'shape': (10, 20, 30), 'theta': 90}>
xp = <module 'cupy' from '/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.Np3X0NVCM9/cupy/cupy/__init__.py'>
scp = <module 'cupyx.scipy' from '/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.Np3X0NVCM9/cupy/cupyx/scipy/__init__.py'>

    @testing.numpy_cupy_allclose(atol=0.1, scipy_name='scp')
    def test_affine_transform_texture_memory(self, xp, scp):
        a = xp.ones(self.shape, dtype=xp.float32)
        center = numpy.divide(numpy.subtract(self.shape, 1), 2)
    
        if len(self.shape) == 2:
            matrix = self._2d_rotation_matrix(self.theta, center)
        elif len(self.shape) == 3:
            matrix = self._3d_rotation_matrix(self.theta, center)
        else:
            return pytest.xfail('Unsupported shape')
    
        if self.output == 'empty':
            output = xp.empty(self.shape, dtype=xp.float32)
            if self.output_shape:
                return pytest.skip('This combination is tested in '
                                   'test_invalid_texture_arguments')
        else:
            output = self.output
    
        if self.output_shape:
            output_shape = (self.output_shape, ) * len(self.shape)
        else:
            output_shape = self.output_shape
    
        if xp == cupy:
            m = cupyx.scipy.ndimage.affine_transform
            matrix = cupy.array(matrix)
>           return m(a, matrix, output_shape=output_shape,
                     output=output, order=self.order,
                     mode=self.mode, texture_memory=True)

tests/cupyx_tests/scipy_tests/ndimage_tests/test_interpolation.py:398: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
cupyx/scipy/ndimage/interpolation.py:376: in affine_transform
    return _texture.affine_transformation(data=input,
cupyx/_texture.py:168: in affine_transformation
    texture_object = _create_texture_object(data,
cupyx/_texture.py:98: in _create_texture_object
    array = texture.CUDAarray(texture_fmt, *data.shape[::-1])
cupy/cuda/texture.pyx:296: in cupy.cuda.texture.CUDAarray.__init__
    self.ptr = runtime.malloc3DArray(desc.ptr, width, height, depth,
cupy_backends/cuda/api/runtime.pyx:593: in cupy_backends.cuda.api.runtime.malloc3DArray
    check_status(status)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

>   raise CUDARuntimeError(status)
E   AssertionError: Only cupy raises error
E   
E   Traceback (most recent call last):
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.Np3X0NVCM9/cupy/cupy/testing/_helper.py", line 47, in _call_func
E       result = impl(self, *args, **kw)
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.Np3X0NVCM9/cupy/tests/cupyx_tests/scipy_tests/ndimage_tests/test_interpolation.py", line 398, in test_affine_transform_texture_memory
E       return m(a, matrix, output_shape=output_shape,
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.Np3X0NVCM9/cupy/cupyx/scipy/ndimage/interpolation.py", line 376, in affine_transform
E       return _texture.affine_transformation(data=input,
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.Np3X0NVCM9/cupy/cupyx/_texture.py", line 168, in affine_transformation
E       texture_object = _create_texture_object(data,
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.Np3X0NVCM9/cupy/cupyx/_texture.py", line 98, in _create_texture_object
E       array = texture.CUDAarray(texture_fmt, *data.shape[::-1])
E     File "cupy/cuda/texture.pyx", line 296, in cupy.cuda.texture.CUDAarray.__init__
E       self.ptr = runtime.malloc3DArray(desc.ptr, width, height, depth,
E     File "cupy_backends/cuda/api/runtime.pyx", line 593, in cupy_backends.cuda.api.runtime.malloc3DArray
E       check_status(status)
E     File "cupy_backends/cuda/api/runtime.pyx", line 265, in cupy_backends.cuda.api.runtime.check_status
E       raise CUDARuntimeError(status)
E   cupy_backends.cuda.api.runtime.CUDARuntimeError: hipErrorUnknown: hipErrorUnknown

cupy_backends/cuda/api/runtime.pyx:265: AssertionError
----------------------------- Captured stderr call -----------------------------
Traceback (most recent call last):
  File "cupy_backends/cuda/api/runtime.pyx", line 644, in cupy_backends.cuda.api.runtime.freeArray
    check_status(status)
  File "cupy_backends/cuda/api/runtime.pyx", line 265, in cupy_backends.cuda.api.runtime.check_status
    raise CUDARuntimeError(status)
cupy_backends.cuda.api.runtime.CUDARuntimeError: hipErrorUnknown: hipErrorUnknown
_ TestAffineTransformTextureMemory.test_affine_transform_texture_memory[_param_238_{mode='nearest', order=0, output=float32, output_shape=None, shape=(10, 20, 30), theta=180}] _

self = <<cupyx_tests.scipy_tests.ndimage_tests.test_interpolation.TestAffineTransformTextureMemory object at 0x7fd7058459a0> ...: 'nearest', 'order': 0, 'output': <class 'numpy.float32'>, 'output_shape': None, 'shape': (10, 20, 30), 'theta': 180}>
xp = <module 'cupy' from '/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.Np3X0NVCM9/cupy/cupy/__init__.py'>
scp = <module 'cupyx.scipy' from '/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.Np3X0NVCM9/cupy/cupyx/scipy/__init__.py'>

    @testing.numpy_cupy_allclose(atol=0.1, scipy_name='scp')
    def test_affine_transform_texture_memory(self, xp, scp):
        a = xp.ones(self.shape, dtype=xp.float32)
        center = numpy.divide(numpy.subtract(self.shape, 1), 2)
    
        if len(self.shape) == 2:
            matrix = self._2d_rotation_matrix(self.theta, center)
        elif len(self.shape) == 3:
            matrix = self._3d_rotation_matrix(self.theta, center)
        else:
            return pytest.xfail('Unsupported shape')
    
        if self.output == 'empty':
            output = xp.empty(self.shape, dtype=xp.float32)
            if self.output_shape:
                return pytest.skip('This combination is tested in '
                                   'test_invalid_texture_arguments')
        else:
            output = self.output
    
        if self.output_shape:
            output_shape = (self.output_shape, ) * len(self.shape)
        else:
            output_shape = self.output_shape
    
        if xp == cupy:
            m = cupyx.scipy.ndimage.affine_transform
            matrix = cupy.array(matrix)
>           return m(a, matrix, output_shape=output_shape,
                     output=output, order=self.order,
                     mode=self.mode, texture_memory=True)

tests/cupyx_tests/scipy_tests/ndimage_tests/test_interpolation.py:398: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
cupyx/scipy/ndimage/interpolation.py:376: in affine_transform
    return _texture.affine_transformation(data=input,
cupyx/_texture.py:168: in affine_transformation
    texture_object = _create_texture_object(data,
cupyx/_texture.py:98: in _create_texture_object
    array = texture.CUDAarray(texture_fmt, *data.shape[::-1])
cupy/cuda/texture.pyx:296: in cupy.cuda.texture.CUDAarray.__init__
    self.ptr = runtime.malloc3DArray(desc.ptr, width, height, depth,
cupy_backends/cuda/api/runtime.pyx:593: in cupy_backends.cuda.api.runtime.malloc3DArray
    check_status(status)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

>   raise CUDARuntimeError(status)
E   AssertionError: Only cupy raises error
E   
E   Traceback (most recent call last):
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.Np3X0NVCM9/cupy/cupy/testing/_helper.py", line 47, in _call_func
E       result = impl(self, *args, **kw)
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.Np3X0NVCM9/cupy/tests/cupyx_tests/scipy_tests/ndimage_tests/test_interpolation.py", line 398, in test_affine_transform_texture_memory
E       return m(a, matrix, output_shape=output_shape,
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.Np3X0NVCM9/cupy/cupyx/scipy/ndimage/interpolation.py", line 376, in affine_transform
E       return _texture.affine_transformation(data=input,
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.Np3X0NVCM9/cupy/cupyx/_texture.py", line 168, in affine_transformation
E       texture_object = _create_texture_object(data,
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.Np3X0NVCM9/cupy/cupyx/_texture.py", line 98, in _create_texture_object
E       array = texture.CUDAarray(texture_fmt, *data.shape[::-1])
E     File "cupy/cuda/texture.pyx", line 296, in cupy.cuda.texture.CUDAarray.__init__
E       self.ptr = runtime.malloc3DArray(desc.ptr, width, height, depth,
E     File "cupy_backends/cuda/api/runtime.pyx", line 593, in cupy_backends.cuda.api.runtime.malloc3DArray
E       check_status(status)
E     File "cupy_backends/cuda/api/runtime.pyx", line 265, in cupy_backends.cuda.api.runtime.check_status
E       raise CUDARuntimeError(status)
E   cupy_backends.cuda.api.runtime.CUDARuntimeError: hipErrorUnknown: hipErrorUnknown

cupy_backends/cuda/api/runtime.pyx:265: AssertionError
----------------------------- Captured stderr call -----------------------------
Traceback (most recent call last):
  File "cupy_backends/cuda/api/runtime.pyx", line 644, in cupy_backends.cuda.api.runtime.freeArray
    check_status(status)
  File "cupy_backends/cuda/api/runtime.pyx", line 265, in cupy_backends.cuda.api.runtime.check_status
    raise CUDARuntimeError(status)
cupy_backends.cuda.api.runtime.CUDARuntimeError: hipErrorUnknown: hipErrorUnknown
_ TestAffineTransformTextureMemory.test_affine_transform_texture_memory[_param_239_{mode='nearest', order=0, output=float32, output_shape=None, shape=(10, 20, 30), theta=270}] _

self = <<cupyx_tests.scipy_tests.ndimage_tests.test_interpolation.TestAffineTransformTextureMemory object at 0x7fd7059d4040> ...: 'nearest', 'order': 0, 'output': <class 'numpy.float32'>, 'output_shape': None, 'shape': (10, 20, 30), 'theta': 270}>
xp = <module 'cupy' from '/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.Np3X0NVCM9/cupy/cupy/__init__.py'>
scp = <module 'cupyx.scipy' from '/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.Np3X0NVCM9/cupy/cupyx/scipy/__init__.py'>

    @testing.numpy_cupy_allclose(atol=0.1, scipy_name='scp')
    def test_affine_transform_texture_memory(self, xp, scp):
        a = xp.ones(self.shape, dtype=xp.float32)
        center = numpy.divide(numpy.subtract(self.shape, 1), 2)
    
        if len(self.shape) == 2:
            matrix = self._2d_rotation_matrix(self.theta, center)
        elif len(self.shape) == 3:
            matrix = self._3d_rotation_matrix(self.theta, center)
        else:
            return pytest.xfail('Unsupported shape')
    
        if self.output == 'empty':
            output = xp.empty(self.shape, dtype=xp.float32)
            if self.output_shape:
                return pytest.skip('This combination is tested in '
                                   'test_invalid_texture_arguments')
        else:
            output = self.output
    
        if self.output_shape:
            output_shape = (self.output_shape, ) * len(self.shape)
        else:
            output_shape = self.output_shape
    
        if xp == cupy:
            m = cupyx.scipy.ndimage.affine_transform
            matrix = cupy.array(matrix)
>           return m(a, matrix, output_shape=output_shape,
                     output=output, order=self.order,
                     mode=self.mode, texture_memory=True)

tests/cupyx_tests/scipy_tests/ndimage_tests/test_interpolation.py:398: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
cupyx/scipy/ndimage/interpolation.py:376: in affine_transform
    return _texture.affine_transformation(data=input,
cupyx/_texture.py:168: in affine_transformation
    texture_object = _create_texture_object(data,
cupyx/_texture.py:98: in _create_texture_object
    array = texture.CUDAarray(texture_fmt, *data.shape[::-1])
cupy/cuda/texture.pyx:296: in cupy.cuda.texture.CUDAarray.__init__
    self.ptr = runtime.malloc3DArray(desc.ptr, width, height, depth,
cupy_backends/cuda/api/runtime.pyx:593: in cupy_backends.cuda.api.runtime.malloc3DArray
    check_status(status)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

>   raise CUDARuntimeError(status)
E   AssertionError: Only cupy raises error
E   
E   Traceback (most recent call last):
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.Np3X0NVCM9/cupy/cupy/testing/_helper.py", line 47, in _call_func
E       result = impl(self, *args, **kw)
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.Np3X0NVCM9/cupy/tests/cupyx_tests/scipy_tests/ndimage_tests/test_interpolation.py", line 398, in test_affine_transform_texture_memory
E       return m(a, matrix, output_shape=output_shape,
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.Np3X0NVCM9/cupy/cupyx/scipy/ndimage/interpolation.py", line 376, in affine_transform
E       return _texture.affine_transformation(data=input,
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.Np3X0NVCM9/cupy/cupyx/_texture.py", line 168, in affine_transformation
E       texture_object = _create_texture_object(data,
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.Np3X0NVCM9/cupy/cupyx/_texture.py", line 98, in _create_texture_object
E       array = texture.CUDAarray(texture_fmt, *data.shape[::-1])
E     File "cupy/cuda/texture.pyx", line 296, in cupy.cuda.texture.CUDAarray.__init__
E       self.ptr = runtime.malloc3DArray(desc.ptr, width, height, depth,
E     File "cupy_backends/cuda/api/runtime.pyx", line 593, in cupy_backends.cuda.api.runtime.malloc3DArray
E       check_status(status)
E     File "cupy_backends/cuda/api/runtime.pyx", line 265, in cupy_backends.cuda.api.runtime.check_status
E       raise CUDARuntimeError(status)
E   cupy_backends.cuda.api.runtime.CUDARuntimeError: hipErrorUnknown: hipErrorUnknown

cupy_backends/cuda/api/runtime.pyx:265: AssertionError
----------------------------- Captured stderr call -----------------------------
Traceback (most recent call last):
  File "cupy_backends/cuda/api/runtime.pyx", line 644, in cupy_backends.cuda.api.runtime.freeArray
    check_status(status)
  File "cupy_backends/cuda/api/runtime.pyx", line 265, in cupy_backends.cuda.api.runtime.check_status
    raise CUDARuntimeError(status)
cupy_backends.cuda.api.runtime.CUDARuntimeError: hipErrorUnknown: hipErrorUnknown
_ TestAffineTransformTextureMemory.test_affine_transform_texture_memory[_param_240_{mode='nearest', order=0, output=float32, output_shape=10, shape=(100, 100), theta=0}] _

self = <<cupyx_tests.scipy_tests.ndimage_tests.test_interpolation.TestAffineTransformTextureMemory object at 0x7fd70649da00> ...'mode': 'nearest', 'order': 0, 'output': <class 'numpy.float32'>, 'output_shape': 10, 'shape': (100, 100), 'theta': 0}>
xp = <module 'cupy' from '/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.Np3X0NVCM9/cupy/cupy/__init__.py'>
scp = <module 'cupyx.scipy' from '/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.Np3X0NVCM9/cupy/cupyx/scipy/__init__.py'>

    @testing.numpy_cupy_allclose(atol=0.1, scipy_name='scp')
    def test_affine_transform_texture_memory(self, xp, scp):
        a = xp.ones(self.shape, dtype=xp.float32)
        center = numpy.divide(numpy.subtract(self.shape, 1), 2)
    
        if len(self.shape) == 2:
            matrix = self._2d_rotation_matrix(self.theta, center)
        elif len(self.shape) == 3:
            matrix = self._3d_rotation_matrix(self.theta, center)
        else:
            return pytest.xfail('Unsupported shape')
    
        if self.output == 'empty':
            output = xp.empty(self.shape, dtype=xp.float32)
            if self.output_shape:
                return pytest.skip('This combination is tested in '
                                   'test_invalid_texture_arguments')
        else:
            output = self.output
    
        if self.output_shape:
            output_shape = (self.output_shape, ) * len(self.shape)
        else:
            output_shape = self.output_shape
    
        if xp == cupy:
            m = cupyx.scipy.ndimage.affine_transform
            matrix = cupy.array(matrix)
>           return m(a, matrix, output_shape=output_shape,
                     output=output, order=self.order,
                     mode=self.mode, texture_memory=True)

tests/cupyx_tests/scipy_tests/ndimage_tests/test_interpolation.py:398: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
cupyx/scipy/ndimage/interpolation.py:376: in affine_transform
    return _texture.affine_transformation(data=input,
cupyx/_texture.py:168: in affine_transformation
    texture_object = _create_texture_object(data,
cupyx/_texture.py:98: in _create_texture_object
    array = texture.CUDAarray(texture_fmt, *data.shape[::-1])
cupy/cuda/texture.pyx:296: in cupy.cuda.texture.CUDAarray.__init__
    self.ptr = runtime.malloc3DArray(desc.ptr, width, height, depth,
cupy_backends/cuda/api/runtime.pyx:593: in cupy_backends.cuda.api.runtime.malloc3DArray
    check_status(status)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

>   raise CUDARuntimeError(status)
E   AssertionError: Only cupy raises error
E   
E   Traceback (most recent call last):
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.Np3X0NVCM9/cupy/cupy/testing/_helper.py", line 47, in _call_func
E       result = impl(self, *args, **kw)
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.Np3X0NVCM9/cupy/tests/cupyx_tests/scipy_tests/ndimage_tests/test_interpolation.py", line 398, in test_affine_transform_texture_memory
E       return m(a, matrix, output_shape=output_shape,
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.Np3X0NVCM9/cupy/cupyx/scipy/ndimage/interpolation.py", line 376, in affine_transform
E       return _texture.affine_transformation(data=input,
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.Np3X0NVCM9/cupy/cupyx/_texture.py", line 168, in affine_transformation
E       texture_object = _create_texture_object(data,
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.Np3X0NVCM9/cupy/cupyx/_texture.py", line 98, in _create_texture_object
E       array = texture.CUDAarray(texture_fmt, *data.shape[::-1])
E     File "cupy/cuda/texture.pyx", line 296, in cupy.cuda.texture.CUDAarray.__init__
E       self.ptr = runtime.malloc3DArray(desc.ptr, width, height, depth,
E     File "cupy_backends/cuda/api/runtime.pyx", line 593, in cupy_backends.cuda.api.runtime.malloc3DArray
E       check_status(status)
E     File "cupy_backends/cuda/api/runtime.pyx", line 265, in cupy_backends.cuda.api.runtime.check_status
E       raise CUDARuntimeError(status)
E   cupy_backends.cuda.api.runtime.CUDARuntimeError: hipErrorUnknown: hipErrorUnknown

cupy_backends/cuda/api/runtime.pyx:265: AssertionError
----------------------------- Captured stderr call -----------------------------
Traceback (most recent call last):
  File "cupy_backends/cuda/api/runtime.pyx", line 644, in cupy_backends.cuda.api.runtime.freeArray
    check_status(status)
  File "cupy_backends/cuda/api/runtime.pyx", line 265, in cupy_backends.cuda.api.runtime.check_status
    raise CUDARuntimeError(status)
cupy_backends.cuda.api.runtime.CUDARuntimeError: hipErrorUnknown: hipErrorUnknown
_ TestAffineTransformTextureMemory.test_affine_transform_texture_memory[_param_241_{mode='nearest', order=0, output=float32, output_shape=10, shape=(100, 100), theta=90}] _

self = <<cupyx_tests.scipy_tests.ndimage_tests.test_interpolation.TestAffineTransformTextureMemory object at 0x7fd7086c9490> ...mode': 'nearest', 'order': 0, 'output': <class 'numpy.float32'>, 'output_shape': 10, 'shape': (100, 100), 'theta': 90}>
xp = <module 'cupy' from '/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.Np3X0NVCM9/cupy/cupy/__init__.py'>
scp = <module 'cupyx.scipy' from '/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.Np3X0NVCM9/cupy/cupyx/scipy/__init__.py'>

    @testing.numpy_cupy_allclose(atol=0.1, scipy_name='scp')
    def test_affine_transform_texture_memory(self, xp, scp):
        a = xp.ones(self.shape, dtype=xp.float32)
        center = numpy.divide(numpy.subtract(self.shape, 1), 2)
    
        if len(self.shape) == 2:
            matrix = self._2d_rotation_matrix(self.theta, center)
        elif len(self.shape) == 3:
            matrix = self._3d_rotation_matrix(self.theta, center)
        else:
            return pytest.xfail('Unsupported shape')
    
        if self.output == 'empty':
            output = xp.empty(self.shape, dtype=xp.float32)
            if self.output_shape:
                return pytest.skip('This combination is tested in '
                                   'test_invalid_texture_arguments')
        else:
            output = self.output
    
        if self.output_shape:
            output_shape = (self.output_shape, ) * len(self.shape)
        else:
            output_shape = self.output_shape
    
        if xp == cupy:
            m = cupyx.scipy.ndimage.affine_transform
            matrix = cupy.array(matrix)
>           return m(a, matrix, output_shape=output_shape,
                     output=output, order=self.order,
                     mode=self.mode, texture_memory=True)

tests/cupyx_tests/scipy_tests/ndimage_tests/test_interpolation.py:398: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
cupyx/scipy/ndimage/interpolation.py:376: in affine_transform
    return _texture.affine_transformation(data=input,
cupyx/_texture.py:168: in affine_transformation
    texture_object = _create_texture_object(data,
cupyx/_texture.py:98: in _create_texture_object
    array = texture.CUDAarray(texture_fmt, *data.shape[::-1])
cupy/cuda/texture.pyx:296: in cupy.cuda.texture.CUDAarray.__init__
    self.ptr = runtime.malloc3DArray(desc.ptr, width, height, depth,
cupy_backends/cuda/api/runtime.pyx:593: in cupy_backends.cuda.api.runtime.malloc3DArray
    check_status(status)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

>   raise CUDARuntimeError(status)
E   AssertionError: Only cupy raises error
E   
E   Traceback (most recent call last):
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.Np3X0NVCM9/cupy/cupy/testing/_helper.py", line 47, in _call_func
E       result = impl(self, *args, **kw)
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.Np3X0NVCM9/cupy/tests/cupyx_tests/scipy_tests/ndimage_tests/test_interpolation.py", line 398, in test_affine_transform_texture_memory
E       return m(a, matrix, output_shape=output_shape,
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.Np3X0NVCM9/cupy/cupyx/scipy/ndimage/interpolation.py", line 376, in affine_transform
E       return _texture.affine_transformation(data=input,
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.Np3X0NVCM9/cupy/cupyx/_texture.py", line 168, in affine_transformation
E       texture_object = _create_texture_object(data,
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.Np3X0NVCM9/cupy/cupyx/_texture.py", line 98, in _create_texture_object
E       array = texture.CUDAarray(texture_fmt, *data.shape[::-1])
E     File "cupy/cuda/texture.pyx", line 296, in cupy.cuda.texture.CUDAarray.__init__
E       self.ptr = runtime.malloc3DArray(desc.ptr, width, height, depth,
E     File "cupy_backends/cuda/api/runtime.pyx", line 593, in cupy_backends.cuda.api.runtime.malloc3DArray
E       check_status(status)
E     File "cupy_backends/cuda/api/runtime.pyx", line 265, in cupy_backends.cuda.api.runtime.check_status
E       raise CUDARuntimeError(status)
E   cupy_backends.cuda.api.runtime.CUDARuntimeError: hipErrorUnknown: hipErrorUnknown

cupy_backends/cuda/api/runtime.pyx:265: AssertionError
----------------------------- Captured stderr call -----------------------------
Traceback (most recent call last):
  File "cupy_backends/cuda/api/runtime.pyx", line 644, in cupy_backends.cuda.api.runtime.freeArray
    check_status(status)
  File "cupy_backends/cuda/api/runtime.pyx", line 265, in cupy_backends.cuda.api.runtime.check_status
    raise CUDARuntimeError(status)
cupy_backends.cuda.api.runtime.CUDARuntimeError: hipErrorUnknown: hipErrorUnknown
_ TestAffineTransformTextureMemory.test_affine_transform_texture_memory[_param_242_{mode='nearest', order=0, output=float32, output_shape=10, shape=(100, 100), theta=180}] _

self = <<cupyx_tests.scipy_tests.ndimage_tests.test_interpolation.TestAffineTransformTextureMemory object at 0x7fd707927430> ...ode': 'nearest', 'order': 0, 'output': <class 'numpy.float32'>, 'output_shape': 10, 'shape': (100, 100), 'theta': 180}>
xp = <module 'cupy' from '/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.Np3X0NVCM9/cupy/cupy/__init__.py'>
scp = <module 'cupyx.scipy' from '/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.Np3X0NVCM9/cupy/cupyx/scipy/__init__.py'>

    @testing.numpy_cupy_allclose(atol=0.1, scipy_name='scp')
    def test_affine_transform_texture_memory(self, xp, scp):
        a = xp.ones(self.shape, dtype=xp.float32)
        center = numpy.divide(numpy.subtract(self.shape, 1), 2)
    
        if len(self.shape) == 2:
            matrix = self._2d_rotation_matrix(self.theta, center)
        elif len(self.shape) == 3:
            matrix = self._3d_rotation_matrix(self.theta, center)
        else:
            return pytest.xfail('Unsupported shape')
    
        if self.output == 'empty':
            output = xp.empty(self.shape, dtype=xp.float32)
            if self.output_shape:
                return pytest.skip('This combination is tested in '
                                   'test_invalid_texture_arguments')
        else:
            output = self.output
    
        if self.output_shape:
            output_shape = (self.output_shape, ) * len(self.shape)
        else:
            output_shape = self.output_shape
    
        if xp == cupy:
            m = cupyx.scipy.ndimage.affine_transform
            matrix = cupy.array(matrix)
>           return m(a, matrix, output_shape=output_shape,
                     output=output, order=self.order,
                     mode=self.mode, texture_memory=True)

tests/cupyx_tests/scipy_tests/ndimage_tests/test_interpolation.py:398: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
cupyx/scipy/ndimage/interpolation.py:376: in affine_transform
    return _texture.affine_transformation(data=input,
cupyx/_texture.py:168: in affine_transformation
    texture_object = _create_texture_object(data,
cupyx/_texture.py:98: in _create_texture_object
    array = texture.CUDAarray(texture_fmt, *data.shape[::-1])
cupy/cuda/texture.pyx:296: in cupy.cuda.texture.CUDAarray.__init__
    self.ptr = runtime.malloc3DArray(desc.ptr, width, height, depth,
cupy_backends/cuda/api/runtime.pyx:593: in cupy_backends.cuda.api.runtime.malloc3DArray
    check_status(status)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

>   raise CUDARuntimeError(status)
E   AssertionError: Only cupy raises error
E   
E   Traceback (most recent call last):
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.Np3X0NVCM9/cupy/cupy/testing/_helper.py", line 47, in _call_func
E       result = impl(self, *args, **kw)
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.Np3X0NVCM9/cupy/tests/cupyx_tests/scipy_tests/ndimage_tests/test_interpolation.py", line 398, in test_affine_transform_texture_memory
E       return m(a, matrix, output_shape=output_shape,
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.Np3X0NVCM9/cupy/cupyx/scipy/ndimage/interpolation.py", line 376, in affine_transform
E       return _texture.affine_transformation(data=input,
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.Np3X0NVCM9/cupy/cupyx/_texture.py", line 168, in affine_transformation
E       texture_object = _create_texture_object(data,
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.Np3X0NVCM9/cupy/cupyx/_texture.py", line 98, in _create_texture_object
E       array = texture.CUDAarray(texture_fmt, *data.shape[::-1])
E     File "cupy/cuda/texture.pyx", line 296, in cupy.cuda.texture.CUDAarray.__init__
E       self.ptr = runtime.malloc3DArray(desc.ptr, width, height, depth,
E     File "cupy_backends/cuda/api/runtime.pyx", line 593, in cupy_backends.cuda.api.runtime.malloc3DArray
E       check_status(status)
E     File "cupy_backends/cuda/api/runtime.pyx", line 265, in cupy_backends.cuda.api.runtime.check_status
E       raise CUDARuntimeError(status)
E   cupy_backends.cuda.api.runtime.CUDARuntimeError: hipErrorUnknown: hipErrorUnknown

cupy_backends/cuda/api/runtime.pyx:265: AssertionError
----------------------------- Captured stderr call -----------------------------
Traceback (most recent call last):
  File "cupy_backends/cuda/api/runtime.pyx", line 644, in cupy_backends.cuda.api.runtime.freeArray
    check_status(status)
  File "cupy_backends/cuda/api/runtime.pyx", line 265, in cupy_backends.cuda.api.runtime.check_status
    raise CUDARuntimeError(status)
cupy_backends.cuda.api.runtime.CUDARuntimeError: hipErrorUnknown: hipErrorUnknown
_ TestAffineTransformTextureMemory.test_affine_transform_texture_memory[_param_243_{mode='nearest', order=0, output=float32, output_shape=10, shape=(100, 100), theta=270}] _

self = <<cupyx_tests.scipy_tests.ndimage_tests.test_interpolation.TestAffineTransformTextureMemory object at 0x7fd705b2c6a0> ...ode': 'nearest', 'order': 0, 'output': <class 'numpy.float32'>, 'output_shape': 10, 'shape': (100, 100), 'theta': 270}>
xp = <module 'cupy' from '/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.Np3X0NVCM9/cupy/cupy/__init__.py'>
scp = <module 'cupyx.scipy' from '/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.Np3X0NVCM9/cupy/cupyx/scipy/__init__.py'>

    @testing.numpy_cupy_allclose(atol=0.1, scipy_name='scp')
    def test_affine_transform_texture_memory(self, xp, scp):
        a = xp.ones(self.shape, dtype=xp.float32)
        center = numpy.divide(numpy.subtract(self.shape, 1), 2)
    
        if len(self.shape) == 2:
            matrix = self._2d_rotation_matrix(self.theta, center)
        elif len(self.shape) == 3:
            matrix = self._3d_rotation_matrix(self.theta, center)
        else:
            return pytest.xfail('Unsupported shape')
    
        if self.output == 'empty':
            output = xp.empty(self.shape, dtype=xp.float32)
            if self.output_shape:
                return pytest.skip('This combination is tested in '
                                   'test_invalid_texture_arguments')
        else:
            output = self.output
    
        if self.output_shape:
            output_shape = (self.output_shape, ) * len(self.shape)
        else:
            output_shape = self.output_shape
    
        if xp == cupy:
            m = cupyx.scipy.ndimage.affine_transform
            matrix = cupy.array(matrix)
>           return m(a, matrix, output_shape=output_shape,
                     output=output, order=self.order,
                     mode=self.mode, texture_memory=True)

tests/cupyx_tests/scipy_tests/ndimage_tests/test_interpolation.py:398: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
cupyx/scipy/ndimage/interpolation.py:376: in affine_transform
    return _texture.affine_transformation(data=input,
cupyx/_texture.py:168: in affine_transformation
    texture_object = _create_texture_object(data,
cupyx/_texture.py:98: in _create_texture_object
    array = texture.CUDAarray(texture_fmt, *data.shape[::-1])
cupy/cuda/texture.pyx:296: in cupy.cuda.texture.CUDAarray.__init__
    self.ptr = runtime.malloc3DArray(desc.ptr, width, height, depth,
cupy_backends/cuda/api/runtime.pyx:593: in cupy_backends.cuda.api.runtime.malloc3DArray
    check_status(status)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

>   raise CUDARuntimeError(status)
E   AssertionError: Only cupy raises error
E   
E   Traceback (most recent call last):
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.Np3X0NVCM9/cupy/cupy/testing/_helper.py", line 47, in _call_func
E       result = impl(self, *args, **kw)
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.Np3X0NVCM9/cupy/tests/cupyx_tests/scipy_tests/ndimage_tests/test_interpolation.py", line 398, in test_affine_transform_texture_memory
E       return m(a, matrix, output_shape=output_shape,
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.Np3X0NVCM9/cupy/cupyx/scipy/ndimage/interpolation.py", line 376, in affine_transform
E       return _texture.affine_transformation(data=input,
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.Np3X0NVCM9/cupy/cupyx/_texture.py", line 168, in affine_transformation
E       texture_object = _create_texture_object(data,
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.Np3X0NVCM9/cupy/cupyx/_texture.py", line 98, in _create_texture_object
E       array = texture.CUDAarray(texture_fmt, *data.shape[::-1])
E     File "cupy/cuda/texture.pyx", line 296, in cupy.cuda.texture.CUDAarray.__init__
E       self.ptr = runtime.malloc3DArray(desc.ptr, width, height, depth,
E     File "cupy_backends/cuda/api/runtime.pyx", line 593, in cupy_backends.cuda.api.runtime.malloc3DArray
E       check_status(status)
E     File "cupy_backends/cuda/api/runtime.pyx", line 265, in cupy_backends.cuda.api.runtime.check_status
E       raise CUDARuntimeError(status)
E   cupy_backends.cuda.api.runtime.CUDARuntimeError: hipErrorUnknown: hipErrorUnknown

cupy_backends/cuda/api/runtime.pyx:265: AssertionError
----------------------------- Captured stderr call -----------------------------
Traceback (most recent call last):
  File "cupy_backends/cuda/api/runtime.pyx", line 644, in cupy_backends.cuda.api.runtime.freeArray
    check_status(status)
  File "cupy_backends/cuda/api/runtime.pyx", line 265, in cupy_backends.cuda.api.runtime.check_status
    raise CUDARuntimeError(status)
cupy_backends.cuda.api.runtime.CUDARuntimeError: hipErrorUnknown: hipErrorUnknown
_ TestAffineTransformTextureMemory.test_affine_transform_texture_memory[_param_244_{mode='nearest', order=0, output=float32, output_shape=10, shape=(10, 20), theta=0}] _

self = <<cupyx_tests.scipy_tests.ndimage_tests.test_interpolation.TestAffineTransformTextureMemory object at 0x7fd705b28070> ... {'mode': 'nearest', 'order': 0, 'output': <class 'numpy.float32'>, 'output_shape': 10, 'shape': (10, 20), 'theta': 0}>
xp = <module 'cupy' from '/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.Np3X0NVCM9/cupy/cupy/__init__.py'>
scp = <module 'cupyx.scipy' from '/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.Np3X0NVCM9/cupy/cupyx/scipy/__init__.py'>

    @testing.numpy_cupy_allclose(atol=0.1, scipy_name='scp')
    def test_affine_transform_texture_memory(self, xp, scp):
        a = xp.ones(self.shape, dtype=xp.float32)
        center = numpy.divide(numpy.subtract(self.shape, 1), 2)
    
        if len(self.shape) == 2:
            matrix = self._2d_rotation_matrix(self.theta, center)
        elif len(self.shape) == 3:
            matrix = self._3d_rotation_matrix(self.theta, center)
        else:
            return pytest.xfail('Unsupported shape')
    
        if self.output == 'empty':
            output = xp.empty(self.shape, dtype=xp.float32)
            if self.output_shape:
                return pytest.skip('This combination is tested in '
                                   'test_invalid_texture_arguments')
        else:
            output = self.output
    
        if self.output_shape:
            output_shape = (self.output_shape, ) * len(self.shape)
        else:
            output_shape = self.output_shape
    
        if xp == cupy:
            m = cupyx.scipy.ndimage.affine_transform
            matrix = cupy.array(matrix)
>           return m(a, matrix, output_shape=output_shape,
                     output=output, order=self.order,
                     mode=self.mode, texture_memory=True)

tests/cupyx_tests/scipy_tests/ndimage_tests/test_interpolation.py:398: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
cupyx/scipy/ndimage/interpolation.py:376: in affine_transform
    return _texture.affine_transformation(data=input,
cupyx/_texture.py:168: in affine_transformation
    texture_object = _create_texture_object(data,
cupyx/_texture.py:98: in _create_texture_object
    array = texture.CUDAarray(texture_fmt, *data.shape[::-1])
cupy/cuda/texture.pyx:296: in cupy.cuda.texture.CUDAarray.__init__
    self.ptr = runtime.malloc3DArray(desc.ptr, width, height, depth,
cupy_backends/cuda/api/runtime.pyx:593: in cupy_backends.cuda.api.runtime.malloc3DArray
    check_status(status)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

>   raise CUDARuntimeError(status)
E   AssertionError: Only cupy raises error
E   
E   Traceback (most recent call last):
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.Np3X0NVCM9/cupy/cupy/testing/_helper.py", line 47, in _call_func
E       result = impl(self, *args, **kw)
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.Np3X0NVCM9/cupy/tests/cupyx_tests/scipy_tests/ndimage_tests/test_interpolation.py", line 398, in test_affine_transform_texture_memory
E       return m(a, matrix, output_shape=output_shape,
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.Np3X0NVCM9/cupy/cupyx/scipy/ndimage/interpolation.py", line 376, in affine_transform
E       return _texture.affine_transformation(data=input,
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.Np3X0NVCM9/cupy/cupyx/_texture.py", line 168, in affine_transformation
E       texture_object = _create_texture_object(data,
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.Np3X0NVCM9/cupy/cupyx/_texture.py", line 98, in _create_texture_object
E       array = texture.CUDAarray(texture_fmt, *data.shape[::-1])
E     File "cupy/cuda/texture.pyx", line 296, in cupy.cuda.texture.CUDAarray.__init__
E       self.ptr = runtime.malloc3DArray(desc.ptr, width, height, depth,
E     File "cupy_backends/cuda/api/runtime.pyx", line 593, in cupy_backends.cuda.api.runtime.malloc3DArray
E       check_status(status)
E     File "cupy_backends/cuda/api/runtime.pyx", line 265, in cupy_backends.cuda.api.runtime.check_status
E       raise CUDARuntimeError(status)
E   cupy_backends.cuda.api.runtime.CUDARuntimeError: hipErrorUnknown: hipErrorUnknown

cupy_backends/cuda/api/runtime.pyx:265: AssertionError
----------------------------- Captured stderr call -----------------------------
Traceback (most recent call last):
  File "cupy_backends/cuda/api/runtime.pyx", line 644, in cupy_backends.cuda.api.runtime.freeArray
    check_status(status)
  File "cupy_backends/cuda/api/runtime.pyx", line 265, in cupy_backends.cuda.api.runtime.check_status
    raise CUDARuntimeError(status)
cupy_backends.cuda.api.runtime.CUDARuntimeError: hipErrorUnknown: hipErrorUnknown
_ TestAffineTransformTextureMemory.test_affine_transform_texture_memory[_param_245_{mode='nearest', order=0, output=float32, output_shape=10, shape=(10, 20), theta=90}] _

self = <<cupyx_tests.scipy_tests.ndimage_tests.test_interpolation.TestAffineTransformTextureMemory object at 0x7fd7057c92e0> ...{'mode': 'nearest', 'order': 0, 'output': <class 'numpy.float32'>, 'output_shape': 10, 'shape': (10, 20), 'theta': 90}>
xp = <module 'cupy' from '/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.Np3X0NVCM9/cupy/cupy/__init__.py'>
scp = <module 'cupyx.scipy' from '/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.Np3X0NVCM9/cupy/cupyx/scipy/__init__.py'>

    @testing.numpy_cupy_allclose(atol=0.1, scipy_name='scp')
    def test_affine_transform_texture_memory(self, xp, scp):
        a = xp.ones(self.shape, dtype=xp.float32)
        center = numpy.divide(numpy.subtract(self.shape, 1), 2)
    
        if len(self.shape) == 2:
            matrix = self._2d_rotation_matrix(self.theta, center)
        elif len(self.shape) == 3:
            matrix = self._3d_rotation_matrix(self.theta, center)
        else:
            return pytest.xfail('Unsupported shape')
    
        if self.output == 'empty':
            output = xp.empty(self.shape, dtype=xp.float32)
            if self.output_shape:
                return pytest.skip('This combination is tested in '
                                   'test_invalid_texture_arguments')
        else:
            output = self.output
    
        if self.output_shape:
            output_shape = (self.output_shape, ) * len(self.shape)
        else:
            output_shape = self.output_shape
    
        if xp == cupy:
            m = cupyx.scipy.ndimage.affine_transform
            matrix = cupy.array(matrix)
>           return m(a, matrix, output_shape=output_shape,
                     output=output, order=self.order,
                     mode=self.mode, texture_memory=True)

tests/cupyx_tests/scipy_tests/ndimage_tests/test_interpolation.py:398: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
cupyx/scipy/ndimage/interpolation.py:376: in affine_transform
    return _texture.affine_transformation(data=input,
cupyx/_texture.py:168: in affine_transformation
    texture_object = _create_texture_object(data,
cupyx/_texture.py:98: in _create_texture_object
    array = texture.CUDAarray(texture_fmt, *data.shape[::-1])
cupy/cuda/texture.pyx:296: in cupy.cuda.texture.CUDAarray.__init__
    self.ptr = runtime.malloc3DArray(desc.ptr, width, height, depth,
cupy_backends/cuda/api/runtime.pyx:593: in cupy_backends.cuda.api.runtime.malloc3DArray
    check_status(status)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

>   raise CUDARuntimeError(status)
E   AssertionError: Only cupy raises error
E   
E   Traceback (most recent call last):
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.Np3X0NVCM9/cupy/cupy/testing/_helper.py", line 47, in _call_func
E       result = impl(self, *args, **kw)
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.Np3X0NVCM9/cupy/tests/cupyx_tests/scipy_tests/ndimage_tests/test_interpolation.py", line 398, in test_affine_transform_texture_memory
E       return m(a, matrix, output_shape=output_shape,
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.Np3X0NVCM9/cupy/cupyx/scipy/ndimage/interpolation.py", line 376, in affine_transform
E       return _texture.affine_transformation(data=input,
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.Np3X0NVCM9/cupy/cupyx/_texture.py", line 168, in affine_transformation
E       texture_object = _create_texture_object(data,
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.Np3X0NVCM9/cupy/cupyx/_texture.py", line 98, in _create_texture_object
E       array = texture.CUDAarray(texture_fmt, *data.shape[::-1])
E     File "cupy/cuda/texture.pyx", line 296, in cupy.cuda.texture.CUDAarray.__init__
E       self.ptr = runtime.malloc3DArray(desc.ptr, width, height, depth,
E     File "cupy_backends/cuda/api/runtime.pyx", line 593, in cupy_backends.cuda.api.runtime.malloc3DArray
E       check_status(status)
E     File "cupy_backends/cuda/api/runtime.pyx", line 265, in cupy_backends.cuda.api.runtime.check_status
E       raise CUDARuntimeError(status)
E   cupy_backends.cuda.api.runtime.CUDARuntimeError: hipErrorUnknown: hipErrorUnknown

cupy_backends/cuda/api/runtime.pyx:265: AssertionError
----------------------------- Captured stderr call -----------------------------
Traceback (most recent call last):
  File "cupy_backends/cuda/api/runtime.pyx", line 644, in cupy_backends.cuda.api.runtime.freeArray
    check_status(status)
  File "cupy_backends/cuda/api/runtime.pyx", line 265, in cupy_backends.cuda.api.runtime.check_status
    raise CUDARuntimeError(status)
cupy_backends.cuda.api.runtime.CUDARuntimeError: hipErrorUnknown: hipErrorUnknown
_ TestAffineTransformTextureMemory.test_affine_transform_texture_memory[_param_246_{mode='nearest', order=0, output=float32, output_shape=10, shape=(10, 20), theta=180}] _

self = <<cupyx_tests.scipy_tests.ndimage_tests.test_interpolation.TestAffineTransformTextureMemory object at 0x7fd705572490> ...'mode': 'nearest', 'order': 0, 'output': <class 'numpy.float32'>, 'output_shape': 10, 'shape': (10, 20), 'theta': 180}>
xp = <module 'cupy' from '/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.Np3X0NVCM9/cupy/cupy/__init__.py'>
scp = <module 'cupyx.scipy' from '/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.Np3X0NVCM9/cupy/cupyx/scipy/__init__.py'>

    @testing.numpy_cupy_allclose(atol=0.1, scipy_name='scp')
    def test_affine_transform_texture_memory(self, xp, scp):
        a = xp.ones(self.shape, dtype=xp.float32)
        center = numpy.divide(numpy.subtract(self.shape, 1), 2)
    
        if len(self.shape) == 2:
            matrix = self._2d_rotation_matrix(self.theta, center)
        elif len(self.shape) == 3:
            matrix = self._3d_rotation_matrix(self.theta, center)
        else:
            return pytest.xfail('Unsupported shape')
    
        if self.output == 'empty':
            output = xp.empty(self.shape, dtype=xp.float32)
            if self.output_shape:
                return pytest.skip('This combination is tested in '
                                   'test_invalid_texture_arguments')
        else:
            output = self.output
    
        if self.output_shape:
            output_shape = (self.output_shape, ) * len(self.shape)
        else:
            output_shape = self.output_shape
    
        if xp == cupy:
            m = cupyx.scipy.ndimage.affine_transform
            matrix = cupy.array(matrix)
>           return m(a, matrix, output_shape=output_shape,
                     output=output, order=self.order,
                     mode=self.mode, texture_memory=True)

tests/cupyx_tests/scipy_tests/ndimage_tests/test_interpolation.py:398: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
cupyx/scipy/ndimage/interpolation.py:376: in affine_transform
    return _texture.affine_transformation(data=input,
cupyx/_texture.py:168: in affine_transformation
    texture_object = _create_texture_object(data,
cupyx/_texture.py:98: in _create_texture_object
    array = texture.CUDAarray(texture_fmt, *data.shape[::-1])
cupy/cuda/texture.pyx:296: in cupy.cuda.texture.CUDAarray.__init__
    self.ptr = runtime.malloc3DArray(desc.ptr, width, height, depth,
cupy_backends/cuda/api/runtime.pyx:593: in cupy_backends.cuda.api.runtime.malloc3DArray
    check_status(status)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

>   raise CUDARuntimeError(status)
E   AssertionError: Only cupy raises error
E   
E   Traceback (most recent call last):
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.Np3X0NVCM9/cupy/cupy/testing/_helper.py", line 47, in _call_func
E       result = impl(self, *args, **kw)
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.Np3X0NVCM9/cupy/tests/cupyx_tests/scipy_tests/ndimage_tests/test_interpolation.py", line 398, in test_affine_transform_texture_memory
E       return m(a, matrix, output_shape=output_shape,
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.Np3X0NVCM9/cupy/cupyx/scipy/ndimage/interpolation.py", line 376, in affine_transform
E       return _texture.affine_transformation(data=input,
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.Np3X0NVCM9/cupy/cupyx/_texture.py", line 168, in affine_transformation
E       texture_object = _create_texture_object(data,
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.Np3X0NVCM9/cupy/cupyx/_texture.py", line 98, in _create_texture_object
E       array = texture.CUDAarray(texture_fmt, *data.shape[::-1])
E     File "cupy/cuda/texture.pyx", line 296, in cupy.cuda.texture.CUDAarray.__init__
E       self.ptr = runtime.malloc3DArray(desc.ptr, width, height, depth,
E     File "cupy_backends/cuda/api/runtime.pyx", line 593, in cupy_backends.cuda.api.runtime.malloc3DArray
E       check_status(status)
E     File "cupy_backends/cuda/api/runtime.pyx", line 265, in cupy_backends.cuda.api.runtime.check_status
E       raise CUDARuntimeError(status)
E   cupy_backends.cuda.api.runtime.CUDARuntimeError: hipErrorUnknown: hipErrorUnknown

cupy_backends/cuda/api/runtime.pyx:265: AssertionError
----------------------------- Captured stderr call -----------------------------
Traceback (most recent call last):
  File "cupy_backends/cuda/api/runtime.pyx", line 644, in cupy_backends.cuda.api.runtime.freeArray
    check_status(status)
  File "cupy_backends/cuda/api/runtime.pyx", line 265, in cupy_backends.cuda.api.runtime.check_status
    raise CUDARuntimeError(status)
cupy_backends.cuda.api.runtime.CUDARuntimeError: hipErrorUnknown: hipErrorUnknown
_ TestAffineTransformTextureMemory.test_affine_transform_texture_memory[_param_247_{mode='nearest', order=0, output=float32, output_shape=10, shape=(10, 20), theta=270}] _

self = <<cupyx_tests.scipy_tests.ndimage_tests.test_interpolation.TestAffineTransformTextureMemory object at 0x7fd7058c0df0> ...'mode': 'nearest', 'order': 0, 'output': <class 'numpy.float32'>, 'output_shape': 10, 'shape': (10, 20), 'theta': 270}>
xp = <module 'cupy' from '/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.Np3X0NVCM9/cupy/cupy/__init__.py'>
scp = <module 'cupyx.scipy' from '/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.Np3X0NVCM9/cupy/cupyx/scipy/__init__.py'>

    @testing.numpy_cupy_allclose(atol=0.1, scipy_name='scp')
    def test_affine_transform_texture_memory(self, xp, scp):
        a = xp.ones(self.shape, dtype=xp.float32)
        center = numpy.divide(numpy.subtract(self.shape, 1), 2)
    
        if len(self.shape) == 2:
            matrix = self._2d_rotation_matrix(self.theta, center)
        elif len(self.shape) == 3:
            matrix = self._3d_rotation_matrix(self.theta, center)
        else:
            return pytest.xfail('Unsupported shape')
    
        if self.output == 'empty':
            output = xp.empty(self.shape, dtype=xp.float32)
            if self.output_shape:
                return pytest.skip('This combination is tested in '
                                   'test_invalid_texture_arguments')
        else:
            output = self.output
    
        if self.output_shape:
            output_shape = (self.output_shape, ) * len(self.shape)
        else:
            output_shape = self.output_shape
    
        if xp == cupy:
            m = cupyx.scipy.ndimage.affine_transform
            matrix = cupy.array(matrix)
>           return m(a, matrix, output_shape=output_shape,
                     output=output, order=self.order,
                     mode=self.mode, texture_memory=True)

tests/cupyx_tests/scipy_tests/ndimage_tests/test_interpolation.py:398: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
cupyx/scipy/ndimage/interpolation.py:376: in affine_transform
    return _texture.affine_transformation(data=input,
cupyx/_texture.py:168: in affine_transformation
    texture_object = _create_texture_object(data,
cupyx/_texture.py:98: in _create_texture_object
    array = texture.CUDAarray(texture_fmt, *data.shape[::-1])
cupy/cuda/texture.pyx:296: in cupy.cuda.texture.CUDAarray.__init__
    self.ptr = runtime.malloc3DArray(desc.ptr, width, height, depth,
cupy_backends/cuda/api/runtime.pyx:593: in cupy_backends.cuda.api.runtime.malloc3DArray
    check_status(status)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

>   raise CUDARuntimeError(status)
E   AssertionError: Only cupy raises error
E   
E   Traceback (most recent call last):
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.Np3X0NVCM9/cupy/cupy/testing/_helper.py", line 47, in _call_func
E       result = impl(self, *args, **kw)
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.Np3X0NVCM9/cupy/tests/cupyx_tests/scipy_tests/ndimage_tests/test_interpolation.py", line 398, in test_affine_transform_texture_memory
E       return m(a, matrix, output_shape=output_shape,
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.Np3X0NVCM9/cupy/cupyx/scipy/ndimage/interpolation.py", line 376, in affine_transform
E       return _texture.affine_transformation(data=input,
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.Np3X0NVCM9/cupy/cupyx/_texture.py", line 168, in affine_transformation
E       texture_object = _create_texture_object(data,
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.Np3X0NVCM9/cupy/cupyx/_texture.py", line 98, in _create_texture_object
E       array = texture.CUDAarray(texture_fmt, *data.shape[::-1])
E     File "cupy/cuda/texture.pyx", line 296, in cupy.cuda.texture.CUDAarray.__init__
E       self.ptr = runtime.malloc3DArray(desc.ptr, width, height, depth,
E     File "cupy_backends/cuda/api/runtime.pyx", line 593, in cupy_backends.cuda.api.runtime.malloc3DArray
E       check_status(status)
E     File "cupy_backends/cuda/api/runtime.pyx", line 265, in cupy_backends.cuda.api.runtime.check_status
E       raise CUDARuntimeError(status)
E   cupy_backends.cuda.api.runtime.CUDARuntimeError: hipErrorUnknown: hipErrorUnknown

cupy_backends/cuda/api/runtime.pyx:265: AssertionError
----------------------------- Captured stderr call -----------------------------
Traceback (most recent call last):
  File "cupy_backends/cuda/api/runtime.pyx", line 644, in cupy_backends.cuda.api.runtime.freeArray
    check_status(status)
  File "cupy_backends/cuda/api/runtime.pyx", line 265, in cupy_backends.cuda.api.runtime.check_status
    raise CUDARuntimeError(status)
cupy_backends.cuda.api.runtime.CUDARuntimeError: hipErrorUnknown: hipErrorUnknown
_ TestAffineTransformTextureMemory.test_affine_transform_texture_memory[_param_248_{mode='nearest', order=0, output=float32, output_shape=10, shape=(10, 10, 10), theta=0}] _

self = <<cupyx_tests.scipy_tests.ndimage_tests.test_interpolation.TestAffineTransformTextureMemory object at 0x7fd7056e7ca0> ...ode': 'nearest', 'order': 0, 'output': <class 'numpy.float32'>, 'output_shape': 10, 'shape': (10, 10, 10), 'theta': 0}>
xp = <module 'cupy' from '/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.Np3X0NVCM9/cupy/cupy/__init__.py'>
scp = <module 'cupyx.scipy' from '/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.Np3X0NVCM9/cupy/cupyx/scipy/__init__.py'>

    @testing.numpy_cupy_allclose(atol=0.1, scipy_name='scp')
    def test_affine_transform_texture_memory(self, xp, scp):
        a = xp.ones(self.shape, dtype=xp.float32)
        center = numpy.divide(numpy.subtract(self.shape, 1), 2)
    
        if len(self.shape) == 2:
            matrix = self._2d_rotation_matrix(self.theta, center)
        elif len(self.shape) == 3:
            matrix = self._3d_rotation_matrix(self.theta, center)
        else:
            return pytest.xfail('Unsupported shape')
    
        if self.output == 'empty':
            output = xp.empty(self.shape, dtype=xp.float32)
            if self.output_shape:
                return pytest.skip('This combination is tested in '
                                   'test_invalid_texture_arguments')
        else:
            output = self.output
    
        if self.output_shape:
            output_shape = (self.output_shape, ) * len(self.shape)
        else:
            output_shape = self.output_shape
    
        if xp == cupy:
            m = cupyx.scipy.ndimage.affine_transform
            matrix = cupy.array(matrix)
>           return m(a, matrix, output_shape=output_shape,
                     output=output, order=self.order,
                     mode=self.mode, texture_memory=True)

tests/cupyx_tests/scipy_tests/ndimage_tests/test_interpolation.py:398: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
cupyx/scipy/ndimage/interpolation.py:376: in affine_transform
    return _texture.affine_transformation(data=input,
cupyx/_texture.py:168: in affine_transformation
    texture_object = _create_texture_object(data,
cupyx/_texture.py:98: in _create_texture_object
    array = texture.CUDAarray(texture_fmt, *data.shape[::-1])
cupy/cuda/texture.pyx:296: in cupy.cuda.texture.CUDAarray.__init__
    self.ptr = runtime.malloc3DArray(desc.ptr, width, height, depth,
cupy_backends/cuda/api/runtime.pyx:593: in cupy_backends.cuda.api.runtime.malloc3DArray
    check_status(status)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

>   raise CUDARuntimeError(status)
E   AssertionError: Only cupy raises error
E   
E   Traceback (most recent call last):
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.Np3X0NVCM9/cupy/cupy/testing/_helper.py", line 47, in _call_func
E       result = impl(self, *args, **kw)
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.Np3X0NVCM9/cupy/tests/cupyx_tests/scipy_tests/ndimage_tests/test_interpolation.py", line 398, in test_affine_transform_texture_memory
E       return m(a, matrix, output_shape=output_shape,
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.Np3X0NVCM9/cupy/cupyx/scipy/ndimage/interpolation.py", line 376, in affine_transform
E       return _texture.affine_transformation(data=input,
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.Np3X0NVCM9/cupy/cupyx/_texture.py", line 168, in affine_transformation
E       texture_object = _create_texture_object(data,
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.Np3X0NVCM9/cupy/cupyx/_texture.py", line 98, in _create_texture_object
E       array = texture.CUDAarray(texture_fmt, *data.shape[::-1])
E     File "cupy/cuda/texture.pyx", line 296, in cupy.cuda.texture.CUDAarray.__init__
E       self.ptr = runtime.malloc3DArray(desc.ptr, width, height, depth,
E     File "cupy_backends/cuda/api/runtime.pyx", line 593, in cupy_backends.cuda.api.runtime.malloc3DArray
E       check_status(status)
E     File "cupy_backends/cuda/api/runtime.pyx", line 265, in cupy_backends.cuda.api.runtime.check_status
E       raise CUDARuntimeError(status)
E   cupy_backends.cuda.api.runtime.CUDARuntimeError: hipErrorUnknown: hipErrorUnknown

cupy_backends/cuda/api/runtime.pyx:265: AssertionError
----------------------------- Captured stderr call -----------------------------
Traceback (most recent call last):
  File "cupy_backends/cuda/api/runtime.pyx", line 644, in cupy_backends.cuda.api.runtime.freeArray
    check_status(status)
  File "cupy_backends/cuda/api/runtime.pyx", line 265, in cupy_backends.cuda.api.runtime.check_status
    raise CUDARuntimeError(status)
cupy_backends.cuda.api.runtime.CUDARuntimeError: hipErrorUnknown: hipErrorUnknown
_ TestAffineTransformTextureMemory.test_affine_transform_texture_memory[_param_249_{mode='nearest', order=0, output=float32, output_shape=10, shape=(10, 10, 10), theta=90}] _

self = <<cupyx_tests.scipy_tests.ndimage_tests.test_interpolation.TestAffineTransformTextureMemory object at 0x7fd705500640> ...de': 'nearest', 'order': 0, 'output': <class 'numpy.float32'>, 'output_shape': 10, 'shape': (10, 10, 10), 'theta': 90}>
xp = <module 'cupy' from '/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.Np3X0NVCM9/cupy/cupy/__init__.py'>
scp = <module 'cupyx.scipy' from '/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.Np3X0NVCM9/cupy/cupyx/scipy/__init__.py'>

    @testing.numpy_cupy_allclose(atol=0.1, scipy_name='scp')
    def test_affine_transform_texture_memory(self, xp, scp):
        a = xp.ones(self.shape, dtype=xp.float32)
        center = numpy.divide(numpy.subtract(self.shape, 1), 2)
    
        if len(self.shape) == 2:
            matrix = self._2d_rotation_matrix(self.theta, center)
        elif len(self.shape) == 3:
            matrix = self._3d_rotation_matrix(self.theta, center)
        else:
            return pytest.xfail('Unsupported shape')
    
        if self.output == 'empty':
            output = xp.empty(self.shape, dtype=xp.float32)
            if self.output_shape:
                return pytest.skip('This combination is tested in '
                                   'test_invalid_texture_arguments')
        else:
            output = self.output
    
        if self.output_shape:
            output_shape = (self.output_shape, ) * len(self.shape)
        else:
            output_shape = self.output_shape
    
        if xp == cupy:
            m = cupyx.scipy.ndimage.affine_transform
            matrix = cupy.array(matrix)
>           return m(a, matrix, output_shape=output_shape,
                     output=output, order=self.order,
                     mode=self.mode, texture_memory=True)

tests/cupyx_tests/scipy_tests/ndimage_tests/test_interpolation.py:398: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
cupyx/scipy/ndimage/interpolation.py:376: in affine_transform
    return _texture.affine_transformation(data=input,
cupyx/_texture.py:168: in affine_transformation
    texture_object = _create_texture_object(data,
cupyx/_texture.py:98: in _create_texture_object
    array = texture.CUDAarray(texture_fmt, *data.shape[::-1])
cupy/cuda/texture.pyx:296: in cupy.cuda.texture.CUDAarray.__init__
    self.ptr = runtime.malloc3DArray(desc.ptr, width, height, depth,
cupy_backends/cuda/api/runtime.pyx:593: in cupy_backends.cuda.api.runtime.malloc3DArray
    check_status(status)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

>   raise CUDARuntimeError(status)
E   AssertionError: Only cupy raises error
E   
E   Traceback (most recent call last):
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.Np3X0NVCM9/cupy/cupy/testing/_helper.py", line 47, in _call_func
E       result = impl(self, *args, **kw)
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.Np3X0NVCM9/cupy/tests/cupyx_tests/scipy_tests/ndimage_tests/test_interpolation.py", line 398, in test_affine_transform_texture_memory
E       return m(a, matrix, output_shape=output_shape,
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.Np3X0NVCM9/cupy/cupyx/scipy/ndimage/interpolation.py", line 376, in affine_transform
E       return _texture.affine_transformation(data=input,
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.Np3X0NVCM9/cupy/cupyx/_texture.py", line 168, in affine_transformation
E       texture_object = _create_texture_object(data,
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.Np3X0NVCM9/cupy/cupyx/_texture.py", line 98, in _create_texture_object
E       array = texture.CUDAarray(texture_fmt, *data.shape[::-1])
E     File "cupy/cuda/texture.pyx", line 296, in cupy.cuda.texture.CUDAarray.__init__
E       self.ptr = runtime.malloc3DArray(desc.ptr, width, height, depth,
E     File "cupy_backends/cuda/api/runtime.pyx", line 593, in cupy_backends.cuda.api.runtime.malloc3DArray
E       check_status(status)
E     File "cupy_backends/cuda/api/runtime.pyx", line 265, in cupy_backends.cuda.api.runtime.check_status
E       raise CUDARuntimeError(status)
E   cupy_backends.cuda.api.runtime.CUDARuntimeError: hipErrorUnknown: hipErrorUnknown

cupy_backends/cuda/api/runtime.pyx:265: AssertionError
----------------------------- Captured stderr call -----------------------------
Traceback (most recent call last):
  File "cupy_backends/cuda/api/runtime.pyx", line 644, in cupy_backends.cuda.api.runtime.freeArray
    check_status(status)
  File "cupy_backends/cuda/api/runtime.pyx", line 265, in cupy_backends.cuda.api.runtime.check_status
    raise CUDARuntimeError(status)
cupy_backends.cuda.api.runtime.CUDARuntimeError: hipErrorUnknown: hipErrorUnknown
_ TestAffineTransformTextureMemory.test_affine_transform_texture_memory[_param_250_{mode='nearest', order=0, output=float32, output_shape=10, shape=(10, 10, 10), theta=180}] _

self = <<cupyx_tests.scipy_tests.ndimage_tests.test_interpolation.TestAffineTransformTextureMemory object at 0x7fd7057f89d0> ...e': 'nearest', 'order': 0, 'output': <class 'numpy.float32'>, 'output_shape': 10, 'shape': (10, 10, 10), 'theta': 180}>
xp = <module 'cupy' from '/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.Np3X0NVCM9/cupy/cupy/__init__.py'>
scp = <module 'cupyx.scipy' from '/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.Np3X0NVCM9/cupy/cupyx/scipy/__init__.py'>

    @testing.numpy_cupy_allclose(atol=0.1, scipy_name='scp')
    def test_affine_transform_texture_memory(self, xp, scp):
        a = xp.ones(self.shape, dtype=xp.float32)
        center = numpy.divide(numpy.subtract(self.shape, 1), 2)
    
        if len(self.shape) == 2:
            matrix = self._2d_rotation_matrix(self.theta, center)
        elif len(self.shape) == 3:
            matrix = self._3d_rotation_matrix(self.theta, center)
        else:
            return pytest.xfail('Unsupported shape')
    
        if self.output == 'empty':
            output = xp.empty(self.shape, dtype=xp.float32)
            if self.output_shape:
                return pytest.skip('This combination is tested in '
                                   'test_invalid_texture_arguments')
        else:
            output = self.output
    
        if self.output_shape:
            output_shape = (self.output_shape, ) * len(self.shape)
        else:
            output_shape = self.output_shape
    
        if xp == cupy:
            m = cupyx.scipy.ndimage.affine_transform
            matrix = cupy.array(matrix)
>           return m(a, matrix, output_shape=output_shape,
                     output=output, order=self.order,
                     mode=self.mode, texture_memory=True)

tests/cupyx_tests/scipy_tests/ndimage_tests/test_interpolation.py:398: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
cupyx/scipy/ndimage/interpolation.py:376: in affine_transform
    return _texture.affine_transformation(data=input,
cupyx/_texture.py:168: in affine_transformation
    texture_object = _create_texture_object(data,
cupyx/_texture.py:98: in _create_texture_object
    array = texture.CUDAarray(texture_fmt, *data.shape[::-1])
cupy/cuda/texture.pyx:296: in cupy.cuda.texture.CUDAarray.__init__
    self.ptr = runtime.malloc3DArray(desc.ptr, width, height, depth,
cupy_backends/cuda/api/runtime.pyx:593: in cupy_backends.cuda.api.runtime.malloc3DArray
    check_status(status)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

>   raise CUDARuntimeError(status)
E   AssertionError: Only cupy raises error
E   
E   Traceback (most recent call last):
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.Np3X0NVCM9/cupy/cupy/testing/_helper.py", line 47, in _call_func
E       result = impl(self, *args, **kw)
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.Np3X0NVCM9/cupy/tests/cupyx_tests/scipy_tests/ndimage_tests/test_interpolation.py", line 398, in test_affine_transform_texture_memory
E       return m(a, matrix, output_shape=output_shape,
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.Np3X0NVCM9/cupy/cupyx/scipy/ndimage/interpolation.py", line 376, in affine_transform
E       return _texture.affine_transformation(data=input,
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.Np3X0NVCM9/cupy/cupyx/_texture.py", line 168, in affine_transformation
E       texture_object = _create_texture_object(data,
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.Np3X0NVCM9/cupy/cupyx/_texture.py", line 98, in _create_texture_object
E       array = texture.CUDAarray(texture_fmt, *data.shape[::-1])
E     File "cupy/cuda/texture.pyx", line 296, in cupy.cuda.texture.CUDAarray.__init__
E       self.ptr = runtime.malloc3DArray(desc.ptr, width, height, depth,
E     File "cupy_backends/cuda/api/runtime.pyx", line 593, in cupy_backends.cuda.api.runtime.malloc3DArray
E       check_status(status)
E     File "cupy_backends/cuda/api/runtime.pyx", line 265, in cupy_backends.cuda.api.runtime.check_status
E       raise CUDARuntimeError(status)
E   cupy_backends.cuda.api.runtime.CUDARuntimeError: hipErrorUnknown: hipErrorUnknown

cupy_backends/cuda/api/runtime.pyx:265: AssertionError
----------------------------- Captured stderr call -----------------------------
Traceback (most recent call last):
  File "cupy_backends/cuda/api/runtime.pyx", line 644, in cupy_backends.cuda.api.runtime.freeArray
    check_status(status)
  File "cupy_backends/cuda/api/runtime.pyx", line 265, in cupy_backends.cuda.api.runtime.check_status
    raise CUDARuntimeError(status)
cupy_backends.cuda.api.runtime.CUDARuntimeError: hipErrorUnknown: hipErrorUnknown
_ TestAffineTransformTextureMemory.test_affine_transform_texture_memory[_param_251_{mode='nearest', order=0, output=float32, output_shape=10, shape=(10, 10, 10), theta=270}] _

self = <<cupyx_tests.scipy_tests.ndimage_tests.test_interpolation.TestAffineTransformTextureMemory object at 0x7fd705773310> ...e': 'nearest', 'order': 0, 'output': <class 'numpy.float32'>, 'output_shape': 10, 'shape': (10, 10, 10), 'theta': 270}>
xp = <module 'cupy' from '/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.Np3X0NVCM9/cupy/cupy/__init__.py'>
scp = <module 'cupyx.scipy' from '/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.Np3X0NVCM9/cupy/cupyx/scipy/__init__.py'>

    @testing.numpy_cupy_allclose(atol=0.1, scipy_name='scp')
    def test_affine_transform_texture_memory(self, xp, scp):
        a = xp.ones(self.shape, dtype=xp.float32)
        center = numpy.divide(numpy.subtract(self.shape, 1), 2)
    
        if len(self.shape) == 2:
            matrix = self._2d_rotation_matrix(self.theta, center)
        elif len(self.shape) == 3:
            matrix = self._3d_rotation_matrix(self.theta, center)
        else:
            return pytest.xfail('Unsupported shape')
    
        if self.output == 'empty':
            output = xp.empty(self.shape, dtype=xp.float32)
            if self.output_shape:
                return pytest.skip('This combination is tested in '
                                   'test_invalid_texture_arguments')
        else:
            output = self.output
    
        if self.output_shape:
            output_shape = (self.output_shape, ) * len(self.shape)
        else:
            output_shape = self.output_shape
    
        if xp == cupy:
            m = cupyx.scipy.ndimage.affine_transform
            matrix = cupy.array(matrix)
>           return m(a, matrix, output_shape=output_shape,
                     output=output, order=self.order,
                     mode=self.mode, texture_memory=True)

tests/cupyx_tests/scipy_tests/ndimage_tests/test_interpolation.py:398: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
cupyx/scipy/ndimage/interpolation.py:376: in affine_transform
    return _texture.affine_transformation(data=input,
cupyx/_texture.py:168: in affine_transformation
    texture_object = _create_texture_object(data,
cupyx/_texture.py:98: in _create_texture_object
    array = texture.CUDAarray(texture_fmt, *data.shape[::-1])
cupy/cuda/texture.pyx:296: in cupy.cuda.texture.CUDAarray.__init__
    self.ptr = runtime.malloc3DArray(desc.ptr, width, height, depth,
cupy_backends/cuda/api/runtime.pyx:593: in cupy_backends.cuda.api.runtime.malloc3DArray
    check_status(status)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

>   raise CUDARuntimeError(status)
E   AssertionError: Only cupy raises error
E   
E   Traceback (most recent call last):
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.Np3X0NVCM9/cupy/cupy/testing/_helper.py", line 47, in _call_func
E       result = impl(self, *args, **kw)
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.Np3X0NVCM9/cupy/tests/cupyx_tests/scipy_tests/ndimage_tests/test_interpolation.py", line 398, in test_affine_transform_texture_memory
E       return m(a, matrix, output_shape=output_shape,
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.Np3X0NVCM9/cupy/cupyx/scipy/ndimage/interpolation.py", line 376, in affine_transform
E       return _texture.affine_transformation(data=input,
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.Np3X0NVCM9/cupy/cupyx/_texture.py", line 168, in affine_transformation
E       texture_object = _create_texture_object(data,
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.Np3X0NVCM9/cupy/cupyx/_texture.py", line 98, in _create_texture_object
E       array = texture.CUDAarray(texture_fmt, *data.shape[::-1])
E     File "cupy/cuda/texture.pyx", line 296, in cupy.cuda.texture.CUDAarray.__init__
E       self.ptr = runtime.malloc3DArray(desc.ptr, width, height, depth,
E     File "cupy_backends/cuda/api/runtime.pyx", line 593, in cupy_backends.cuda.api.runtime.malloc3DArray
E       check_status(status)
E     File "cupy_backends/cuda/api/runtime.pyx", line 265, in cupy_backends.cuda.api.runtime.check_status
E       raise CUDARuntimeError(status)
E   cupy_backends.cuda.api.runtime.CUDARuntimeError: hipErrorUnknown: hipErrorUnknown

cupy_backends/cuda/api/runtime.pyx:265: AssertionError
----------------------------- Captured stderr call -----------------------------
Traceback (most recent call last):
  File "cupy_backends/cuda/api/runtime.pyx", line 644, in cupy_backends.cuda.api.runtime.freeArray
    check_status(status)
  File "cupy_backends/cuda/api/runtime.pyx", line 265, in cupy_backends.cuda.api.runtime.check_status
    raise CUDARuntimeError(status)
cupy_backends.cuda.api.runtime.CUDARuntimeError: hipErrorUnknown: hipErrorUnknown
_ TestAffineTransformTextureMemory.test_affine_transform_texture_memory[_param_252_{mode='nearest', order=0, output=float32, output_shape=10, shape=(10, 20, 30), theta=0}] _

self = <<cupyx_tests.scipy_tests.ndimage_tests.test_interpolation.TestAffineTransformTextureMemory object at 0x7fd7073c88b0> ...ode': 'nearest', 'order': 0, 'output': <class 'numpy.float32'>, 'output_shape': 10, 'shape': (10, 20, 30), 'theta': 0}>
xp = <module 'cupy' from '/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.Np3X0NVCM9/cupy/cupy/__init__.py'>
scp = <module 'cupyx.scipy' from '/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.Np3X0NVCM9/cupy/cupyx/scipy/__init__.py'>

    @testing.numpy_cupy_allclose(atol=0.1, scipy_name='scp')
    def test_affine_transform_texture_memory(self, xp, scp):
        a = xp.ones(self.shape, dtype=xp.float32)
        center = numpy.divide(numpy.subtract(self.shape, 1), 2)
    
        if len(self.shape) == 2:
            matrix = self._2d_rotation_matrix(self.theta, center)
        elif len(self.shape) == 3:
            matrix = self._3d_rotation_matrix(self.theta, center)
        else:
            return pytest.xfail('Unsupported shape')
    
        if self.output == 'empty':
            output = xp.empty(self.shape, dtype=xp.float32)
            if self.output_shape:
                return pytest.skip('This combination is tested in '
                                   'test_invalid_texture_arguments')
        else:
            output = self.output
    
        if self.output_shape:
            output_shape = (self.output_shape, ) * len(self.shape)
        else:
            output_shape = self.output_shape
    
        if xp == cupy:
            m = cupyx.scipy.ndimage.affine_transform
            matrix = cupy.array(matrix)
>           return m(a, matrix, output_shape=output_shape,
                     output=output, order=self.order,
                     mode=self.mode, texture_memory=True)

tests/cupyx_tests/scipy_tests/ndimage_tests/test_interpolation.py:398: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
cupyx/scipy/ndimage/interpolation.py:376: in affine_transform
    return _texture.affine_transformation(data=input,
cupyx/_texture.py:168: in affine_transformation
    texture_object = _create_texture_object(data,
cupyx/_texture.py:98: in _create_texture_object
    array = texture.CUDAarray(texture_fmt, *data.shape[::-1])
cupy/cuda/texture.pyx:296: in cupy.cuda.texture.CUDAarray.__init__
    self.ptr = runtime.malloc3DArray(desc.ptr, width, height, depth,
cupy_backends/cuda/api/runtime.pyx:593: in cupy_backends.cuda.api.runtime.malloc3DArray
    check_status(status)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

>   raise CUDARuntimeError(status)
E   AssertionError: Only cupy raises error
E   
E   Traceback (most recent call last):
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.Np3X0NVCM9/cupy/cupy/testing/_helper.py", line 47, in _call_func
E       result = impl(self, *args, **kw)
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.Np3X0NVCM9/cupy/tests/cupyx_tests/scipy_tests/ndimage_tests/test_interpolation.py", line 398, in test_affine_transform_texture_memory
E       return m(a, matrix, output_shape=output_shape,
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.Np3X0NVCM9/cupy/cupyx/scipy/ndimage/interpolation.py", line 376, in affine_transform
E       return _texture.affine_transformation(data=input,
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.Np3X0NVCM9/cupy/cupyx/_texture.py", line 168, in affine_transformation
E       texture_object = _create_texture_object(data,
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.Np3X0NVCM9/cupy/cupyx/_texture.py", line 98, in _create_texture_object
E       array = texture.CUDAarray(texture_fmt, *data.shape[::-1])
E     File "cupy/cuda/texture.pyx", line 296, in cupy.cuda.texture.CUDAarray.__init__
E       self.ptr = runtime.malloc3DArray(desc.ptr, width, height, depth,
E     File "cupy_backends/cuda/api/runtime.pyx", line 593, in cupy_backends.cuda.api.runtime.malloc3DArray
E       check_status(status)
E     File "cupy_backends/cuda/api/runtime.pyx", line 265, in cupy_backends.cuda.api.runtime.check_status
E       raise CUDARuntimeError(status)
E   cupy_backends.cuda.api.runtime.CUDARuntimeError: hipErrorUnknown: hipErrorUnknown

cupy_backends/cuda/api/runtime.pyx:265: AssertionError
----------------------------- Captured stderr call -----------------------------
Traceback (most recent call last):
  File "cupy_backends/cuda/api/runtime.pyx", line 644, in cupy_backends.cuda.api.runtime.freeArray
    check_status(status)
  File "cupy_backends/cuda/api/runtime.pyx", line 265, in cupy_backends.cuda.api.runtime.check_status
    raise CUDARuntimeError(status)
cupy_backends.cuda.api.runtime.CUDARuntimeError: hipErrorUnknown: hipErrorUnknown
_ TestAffineTransformTextureMemory.test_affine_transform_texture_memory[_param_253_{mode='nearest', order=0, output=float32, output_shape=10, shape=(10, 20, 30), theta=90}] _

self = <<cupyx_tests.scipy_tests.ndimage_tests.test_interpolation.TestAffineTransformTextureMemory object at 0x7fd7065b0040> ...de': 'nearest', 'order': 0, 'output': <class 'numpy.float32'>, 'output_shape': 10, 'shape': (10, 20, 30), 'theta': 90}>
xp = <module 'cupy' from '/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.Np3X0NVCM9/cupy/cupy/__init__.py'>
scp = <module 'cupyx.scipy' from '/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.Np3X0NVCM9/cupy/cupyx/scipy/__init__.py'>

    @testing.numpy_cupy_allclose(atol=0.1, scipy_name='scp')
    def test_affine_transform_texture_memory(self, xp, scp):
        a = xp.ones(self.shape, dtype=xp.float32)
        center = numpy.divide(numpy.subtract(self.shape, 1), 2)
    
        if len(self.shape) == 2:
            matrix = self._2d_rotation_matrix(self.theta, center)
        elif len(self.shape) == 3:
            matrix = self._3d_rotation_matrix(self.theta, center)
        else:
            return pytest.xfail('Unsupported shape')
    
        if self.output == 'empty':
            output = xp.empty(self.shape, dtype=xp.float32)
            if self.output_shape:
                return pytest.skip('This combination is tested in '
                                   'test_invalid_texture_arguments')
        else:
            output = self.output
    
        if self.output_shape:
            output_shape = (self.output_shape, ) * len(self.shape)
        else:
            output_shape = self.output_shape
    
        if xp == cupy:
            m = cupyx.scipy.ndimage.affine_transform
            matrix = cupy.array(matrix)
>           return m(a, matrix, output_shape=output_shape,
                     output=output, order=self.order,
                     mode=self.mode, texture_memory=True)

tests/cupyx_tests/scipy_tests/ndimage_tests/test_interpolation.py:398: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
cupyx/scipy/ndimage/interpolation.py:376: in affine_transform
    return _texture.affine_transformation(data=input,
cupyx/_texture.py:168: in affine_transformation
    texture_object = _create_texture_object(data,
cupyx/_texture.py:98: in _create_texture_object
    array = texture.CUDAarray(texture_fmt, *data.shape[::-1])
cupy/cuda/texture.pyx:296: in cupy.cuda.texture.CUDAarray.__init__
    self.ptr = runtime.malloc3DArray(desc.ptr, width, height, depth,
cupy_backends/cuda/api/runtime.pyx:593: in cupy_backends.cuda.api.runtime.malloc3DArray
    check_status(status)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

>   raise CUDARuntimeError(status)
E   AssertionError: Only cupy raises error
E   
E   Traceback (most recent call last):
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.Np3X0NVCM9/cupy/cupy/testing/_helper.py", line 47, in _call_func
E       result = impl(self, *args, **kw)
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.Np3X0NVCM9/cupy/tests/cupyx_tests/scipy_tests/ndimage_tests/test_interpolation.py", line 398, in test_affine_transform_texture_memory
E       return m(a, matrix, output_shape=output_shape,
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.Np3X0NVCM9/cupy/cupyx/scipy/ndimage/interpolation.py", line 376, in affine_transform
E       return _texture.affine_transformation(data=input,
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.Np3X0NVCM9/cupy/cupyx/_texture.py", line 168, in affine_transformation
E       texture_object = _create_texture_object(data,
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.Np3X0NVCM9/cupy/cupyx/_texture.py", line 98, in _create_texture_object
E       array = texture.CUDAarray(texture_fmt, *data.shape[::-1])
E     File "cupy/cuda/texture.pyx", line 296, in cupy.cuda.texture.CUDAarray.__init__
E       self.ptr = runtime.malloc3DArray(desc.ptr, width, height, depth,
E     File "cupy_backends/cuda/api/runtime.pyx", line 593, in cupy_backends.cuda.api.runtime.malloc3DArray
E       check_status(status)
E     File "cupy_backends/cuda/api/runtime.pyx", line 265, in cupy_backends.cuda.api.runtime.check_status
E       raise CUDARuntimeError(status)
E   cupy_backends.cuda.api.runtime.CUDARuntimeError: hipErrorUnknown: hipErrorUnknown

cupy_backends/cuda/api/runtime.pyx:265: AssertionError
----------------------------- Captured stderr call -----------------------------
Traceback (most recent call last):
  File "cupy_backends/cuda/api/runtime.pyx", line 644, in cupy_backends.cuda.api.runtime.freeArray
    check_status(status)
  File "cupy_backends/cuda/api/runtime.pyx", line 265, in cupy_backends.cuda.api.runtime.check_status
    raise CUDARuntimeError(status)
cupy_backends.cuda.api.runtime.CUDARuntimeError: hipErrorUnknown: hipErrorUnknown
_ TestAffineTransformTextureMemory.test_affine_transform_texture_memory[_param_254_{mode='nearest', order=0, output=float32, output_shape=10, shape=(10, 20, 30), theta=180}] _

self = <<cupyx_tests.scipy_tests.ndimage_tests.test_interpolation.TestAffineTransformTextureMemory object at 0x7fd705565cd0> ...e': 'nearest', 'order': 0, 'output': <class 'numpy.float32'>, 'output_shape': 10, 'shape': (10, 20, 30), 'theta': 180}>
xp = <module 'cupy' from '/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.Np3X0NVCM9/cupy/cupy/__init__.py'>
scp = <module 'cupyx.scipy' from '/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.Np3X0NVCM9/cupy/cupyx/scipy/__init__.py'>

    @testing.numpy_cupy_allclose(atol=0.1, scipy_name='scp')
    def test_affine_transform_texture_memory(self, xp, scp):
        a = xp.ones(self.shape, dtype=xp.float32)
        center = numpy.divide(numpy.subtract(self.shape, 1), 2)
    
        if len(self.shape) == 2:
            matrix = self._2d_rotation_matrix(self.theta, center)
        elif len(self.shape) == 3:
            matrix = self._3d_rotation_matrix(self.theta, center)
        else:
            return pytest.xfail('Unsupported shape')
    
        if self.output == 'empty':
            output = xp.empty(self.shape, dtype=xp.float32)
            if self.output_shape:
                return pytest.skip('This combination is tested in '
                                   'test_invalid_texture_arguments')
        else:
            output = self.output
    
        if self.output_shape:
            output_shape = (self.output_shape, ) * len(self.shape)
        else:
            output_shape = self.output_shape
    
        if xp == cupy:
            m = cupyx.scipy.ndimage.affine_transform
            matrix = cupy.array(matrix)
>           return m(a, matrix, output_shape=output_shape,
                     output=output, order=self.order,
                     mode=self.mode, texture_memory=True)

tests/cupyx_tests/scipy_tests/ndimage_tests/test_interpolation.py:398: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
cupyx/scipy/ndimage/interpolation.py:376: in affine_transform
    return _texture.affine_transformation(data=input,
cupyx/_texture.py:168: in affine_transformation
    texture_object = _create_texture_object(data,
cupyx/_texture.py:98: in _create_texture_object
    array = texture.CUDAarray(texture_fmt, *data.shape[::-1])
cupy/cuda/texture.pyx:296: in cupy.cuda.texture.CUDAarray.__init__
    self.ptr = runtime.malloc3DArray(desc.ptr, width, height, depth,
cupy_backends/cuda/api/runtime.pyx:593: in cupy_backends.cuda.api.runtime.malloc3DArray
    check_status(status)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

>   raise CUDARuntimeError(status)
E   AssertionError: Only cupy raises error
E   
E   Traceback (most recent call last):
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.Np3X0NVCM9/cupy/cupy/testing/_helper.py", line 47, in _call_func
E       result = impl(self, *args, **kw)
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.Np3X0NVCM9/cupy/tests/cupyx_tests/scipy_tests/ndimage_tests/test_interpolation.py", line 398, in test_affine_transform_texture_memory
E       return m(a, matrix, output_shape=output_shape,
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.Np3X0NVCM9/cupy/cupyx/scipy/ndimage/interpolation.py", line 376, in affine_transform
E       return _texture.affine_transformation(data=input,
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.Np3X0NVCM9/cupy/cupyx/_texture.py", line 168, in affine_transformation
E       texture_object = _create_texture_object(data,
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.Np3X0NVCM9/cupy/cupyx/_texture.py", line 98, in _create_texture_object
E       array = texture.CUDAarray(texture_fmt, *data.shape[::-1])
E     File "cupy/cuda/texture.pyx", line 296, in cupy.cuda.texture.CUDAarray.__init__
E       self.ptr = runtime.malloc3DArray(desc.ptr, width, height, depth,
E     File "cupy_backends/cuda/api/runtime.pyx", line 593, in cupy_backends.cuda.api.runtime.malloc3DArray
E       check_status(status)
E     File "cupy_backends/cuda/api/runtime.pyx", line 265, in cupy_backends.cuda.api.runtime.check_status
E       raise CUDARuntimeError(status)
E   cupy_backends.cuda.api.runtime.CUDARuntimeError: hipErrorUnknown: hipErrorUnknown

cupy_backends/cuda/api/runtime.pyx:265: AssertionError
----------------------------- Captured stderr call -----------------------------
Traceback (most recent call last):
  File "cupy_backends/cuda/api/runtime.pyx", line 644, in cupy_backends.cuda.api.runtime.freeArray
    check_status(status)
  File "cupy_backends/cuda/api/runtime.pyx", line 265, in cupy_backends.cuda.api.runtime.check_status
    raise CUDARuntimeError(status)
cupy_backends.cuda.api.runtime.CUDARuntimeError: hipErrorUnknown: hipErrorUnknown
_ TestAffineTransformTextureMemory.test_affine_transform_texture_memory[_param_255_{mode='nearest', order=0, output=float32, output_shape=10, shape=(10, 20, 30), theta=270}] _

self = <<cupyx_tests.scipy_tests.ndimage_tests.test_interpolation.TestAffineTransformTextureMemory object at 0x7fd7057d5040> ...e': 'nearest', 'order': 0, 'output': <class 'numpy.float32'>, 'output_shape': 10, 'shape': (10, 20, 30), 'theta': 270}>
xp = <module 'cupy' from '/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.Np3X0NVCM9/cupy/cupy/__init__.py'>
scp = <module 'cupyx.scipy' from '/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.Np3X0NVCM9/cupy/cupyx/scipy/__init__.py'>

    @testing.numpy_cupy_allclose(atol=0.1, scipy_name='scp')
    def test_affine_transform_texture_memory(self, xp, scp):
        a = xp.ones(self.shape, dtype=xp.float32)
        center = numpy.divide(numpy.subtract(self.shape, 1), 2)
    
        if len(self.shape) == 2:
            matrix = self._2d_rotation_matrix(self.theta, center)
        elif len(self.shape) == 3:
            matrix = self._3d_rotation_matrix(self.theta, center)
        else:
            return pytest.xfail('Unsupported shape')
    
        if self.output == 'empty':
            output = xp.empty(self.shape, dtype=xp.float32)
            if self.output_shape:
                return pytest.skip('This combination is tested in '
                                   'test_invalid_texture_arguments')
        else:
            output = self.output
    
        if self.output_shape:
            output_shape = (self.output_shape, ) * len(self.shape)
        else:
            output_shape = self.output_shape
    
        if xp == cupy:
            m = cupyx.scipy.ndimage.affine_transform
            matrix = cupy.array(matrix)
>           return m(a, matrix, output_shape=output_shape,
                     output=output, order=self.order,
                     mode=self.mode, texture_memory=True)

tests/cupyx_tests/scipy_tests/ndimage_tests/test_interpolation.py:398: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
cupyx/scipy/ndimage/interpolation.py:376: in affine_transform
    return _texture.affine_transformation(data=input,
cupyx/_texture.py:168: in affine_transformation
    texture_object = _create_texture_object(data,
cupyx/_texture.py:98: in _create_texture_object
    array = texture.CUDAarray(texture_fmt, *data.shape[::-1])
cupy/cuda/texture.pyx:296: in cupy.cuda.texture.CUDAarray.__init__
    self.ptr = runtime.malloc3DArray(desc.ptr, width, height, depth,
cupy_backends/cuda/api/runtime.pyx:593: in cupy_backends.cuda.api.runtime.malloc3DArray
    check_status(status)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

>   raise CUDARuntimeError(status)
E   AssertionError: Only cupy raises error
E   
E   Traceback (most recent call last):
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.Np3X0NVCM9/cupy/cupy/testing/_helper.py", line 47, in _call_func
E       result = impl(self, *args, **kw)
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.Np3X0NVCM9/cupy/tests/cupyx_tests/scipy_tests/ndimage_tests/test_interpolation.py", line 398, in test_affine_transform_texture_memory
E       return m(a, matrix, output_shape=output_shape,
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.Np3X0NVCM9/cupy/cupyx/scipy/ndimage/interpolation.py", line 376, in affine_transform
E       return _texture.affine_transformation(data=input,
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.Np3X0NVCM9/cupy/cupyx/_texture.py", line 168, in affine_transformation
E       texture_object = _create_texture_object(data,
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.Np3X0NVCM9/cupy/cupyx/_texture.py", line 98, in _create_texture_object
E       array = texture.CUDAarray(texture_fmt, *data.shape[::-1])
E     File "cupy/cuda/texture.pyx", line 296, in cupy.cuda.texture.CUDAarray.__init__
E       self.ptr = runtime.malloc3DArray(desc.ptr, width, height, depth,
E     File "cupy_backends/cuda/api/runtime.pyx", line 593, in cupy_backends.cuda.api.runtime.malloc3DArray
E       check_status(status)
E     File "cupy_backends/cuda/api/runtime.pyx", line 265, in cupy_backends.cuda.api.runtime.check_status
E       raise CUDARuntimeError(status)
E   cupy_backends.cuda.api.runtime.CUDARuntimeError: hipErrorUnknown: hipErrorUnknown

cupy_backends/cuda/api/runtime.pyx:265: AssertionError
----------------------------- Captured stderr call -----------------------------
Traceback (most recent call last):
  File "cupy_backends/cuda/api/runtime.pyx", line 644, in cupy_backends.cuda.api.runtime.freeArray
    check_status(status)
  File "cupy_backends/cuda/api/runtime.pyx", line 265, in cupy_backends.cuda.api.runtime.check_status
    raise CUDARuntimeError(status)
cupy_backends.cuda.api.runtime.CUDARuntimeError: hipErrorUnknown: hipErrorUnknown
_ TestAffineTransformTextureMemory.test_affine_transform_texture_memory[_param_256_{mode='nearest', order=0, output='empty', output_shape=None, shape=(100, 100), theta=0}] _

self = <<cupyx_tests.scipy_tests.ndimage_tests.test_interpolation.TestAffineTransformTextureMemory object at 0x7fd7084406a0>  parameter: {'mode': 'nearest', 'order': 0, 'output': 'empty', 'output_shape': None, 'shape': (100, 100), 'theta': 0}>
xp = <module 'cupy' from '/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.Np3X0NVCM9/cupy/cupy/__init__.py'>
scp = <module 'cupyx.scipy' from '/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.Np3X0NVCM9/cupy/cupyx/scipy/__init__.py'>

    @testing.numpy_cupy_allclose(atol=0.1, scipy_name='scp')
    def test_affine_transform_texture_memory(self, xp, scp):
        a = xp.ones(self.shape, dtype=xp.float32)
        center = numpy.divide(numpy.subtract(self.shape, 1), 2)
    
        if len(self.shape) == 2:
            matrix = self._2d_rotation_matrix(self.theta, center)
        elif len(self.shape) == 3:
            matrix = self._3d_rotation_matrix(self.theta, center)
        else:
            return pytest.xfail('Unsupported shape')
    
        if self.output == 'empty':
            output = xp.empty(self.shape, dtype=xp.float32)
            if self.output_shape:
                return pytest.skip('This combination is tested in '
                                   'test_invalid_texture_arguments')
        else:
            output = self.output
    
        if self.output_shape:
            output_shape = (self.output_shape, ) * len(self.shape)
        else:
            output_shape = self.output_shape
    
        if xp == cupy:
            m = cupyx.scipy.ndimage.affine_transform
            matrix = cupy.array(matrix)
>           return m(a, matrix, output_shape=output_shape,
                     output=output, order=self.order,
                     mode=self.mode, texture_memory=True)

tests/cupyx_tests/scipy_tests/ndimage_tests/test_interpolation.py:398: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
cupyx/scipy/ndimage/interpolation.py:376: in affine_transform
    return _texture.affine_transformation(data=input,
cupyx/_texture.py:168: in affine_transformation
    texture_object = _create_texture_object(data,
cupyx/_texture.py:98: in _create_texture_object
    array = texture.CUDAarray(texture_fmt, *data.shape[::-1])
cupy/cuda/texture.pyx:296: in cupy.cuda.texture.CUDAarray.__init__
    self.ptr = runtime.malloc3DArray(desc.ptr, width, height, depth,
cupy_backends/cuda/api/runtime.pyx:593: in cupy_backends.cuda.api.runtime.malloc3DArray
    check_status(status)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

>   raise CUDARuntimeError(status)
E   AssertionError: Only cupy raises error
E   
E   Traceback (most recent call last):
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.Np3X0NVCM9/cupy/cupy/testing/_helper.py", line 47, in _call_func
E       result = impl(self, *args, **kw)
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.Np3X0NVCM9/cupy/tests/cupyx_tests/scipy_tests/ndimage_tests/test_interpolation.py", line 398, in test_affine_transform_texture_memory
E       return m(a, matrix, output_shape=output_shape,
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.Np3X0NVCM9/cupy/cupyx/scipy/ndimage/interpolation.py", line 376, in affine_transform
E       return _texture.affine_transformation(data=input,
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.Np3X0NVCM9/cupy/cupyx/_texture.py", line 168, in affine_transformation
E       texture_object = _create_texture_object(data,
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.Np3X0NVCM9/cupy/cupyx/_texture.py", line 98, in _create_texture_object
E       array = texture.CUDAarray(texture_fmt, *data.shape[::-1])
E     File "cupy/cuda/texture.pyx", line 296, in cupy.cuda.texture.CUDAarray.__init__
E       self.ptr = runtime.malloc3DArray(desc.ptr, width, height, depth,
E     File "cupy_backends/cuda/api/runtime.pyx", line 593, in cupy_backends.cuda.api.runtime.malloc3DArray
E       check_status(status)
E     File "cupy_backends/cuda/api/runtime.pyx", line 265, in cupy_backends.cuda.api.runtime.check_status
E       raise CUDARuntimeError(status)
E   cupy_backends.cuda.api.runtime.CUDARuntimeError: hipErrorUnknown: hipErrorUnknown

cupy_backends/cuda/api/runtime.pyx:265: AssertionError
----------------------------- Captured stderr call -----------------------------
Traceback (most recent call last):
  File "cupy_backends/cuda/api/runtime.pyx", line 644, in cupy_backends.cuda.api.runtime.freeArray
    check_status(status)
  File "cupy_backends/cuda/api/runtime.pyx", line 265, in cupy_backends.cuda.api.runtime.check_status
    raise CUDARuntimeError(status)
cupy_backends.cuda.api.runtime.CUDARuntimeError: hipErrorUnknown: hipErrorUnknown
_ TestAffineTransformTextureMemory.test_affine_transform_texture_memory[_param_257_{mode='nearest', order=0, output='empty', output_shape=None, shape=(100, 100), theta=90}] _

self = <<cupyx_tests.scipy_tests.ndimage_tests.test_interpolation.TestAffineTransformTextureMemory object at 0x7fd7061da490>  parameter: {'mode': 'nearest', 'order': 0, 'output': 'empty', 'output_shape': None, 'shape': (100, 100), 'theta': 90}>
xp = <module 'cupy' from '/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.Np3X0NVCM9/cupy/cupy/__init__.py'>
scp = <module 'cupyx.scipy' from '/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.Np3X0NVCM9/cupy/cupyx/scipy/__init__.py'>

    @testing.numpy_cupy_allclose(atol=0.1, scipy_name='scp')
    def test_affine_transform_texture_memory(self, xp, scp):
        a = xp.ones(self.shape, dtype=xp.float32)
        center = numpy.divide(numpy.subtract(self.shape, 1), 2)
    
        if len(self.shape) == 2:
            matrix = self._2d_rotation_matrix(self.theta, center)
        elif len(self.shape) == 3:
            matrix = self._3d_rotation_matrix(self.theta, center)
        else:
            return pytest.xfail('Unsupported shape')
    
        if self.output == 'empty':
            output = xp.empty(self.shape, dtype=xp.float32)
            if self.output_shape:
                return pytest.skip('This combination is tested in '
                                   'test_invalid_texture_arguments')
        else:
            output = self.output
    
        if self.output_shape:
            output_shape = (self.output_shape, ) * len(self.shape)
        else:
            output_shape = self.output_shape
    
        if xp == cupy:
            m = cupyx.scipy.ndimage.affine_transform
            matrix = cupy.array(matrix)
>           return m(a, matrix, output_shape=output_shape,
                     output=output, order=self.order,
                     mode=self.mode, texture_memory=True)

tests/cupyx_tests/scipy_tests/ndimage_tests/test_interpolation.py:398: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
cupyx/scipy/ndimage/interpolation.py:376: in affine_transform
    return _texture.affine_transformation(data=input,
cupyx/_texture.py:168: in affine_transformation
    texture_object = _create_texture_object(data,
cupyx/_texture.py:98: in _create_texture_object
    array = texture.CUDAarray(texture_fmt, *data.shape[::-1])
cupy/cuda/texture.pyx:296: in cupy.cuda.texture.CUDAarray.__init__
    self.ptr = runtime.malloc3DArray(desc.ptr, width, height, depth,
cupy_backends/cuda/api/runtime.pyx:593: in cupy_backends.cuda.api.runtime.malloc3DArray
    check_status(status)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

>   raise CUDARuntimeError(status)
E   AssertionError: Only cupy raises error
E   
E   Traceback (most recent call last):
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.Np3X0NVCM9/cupy/cupy/testing/_helper.py", line 47, in _call_func
E       result = impl(self, *args, **kw)
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.Np3X0NVCM9/cupy/tests/cupyx_tests/scipy_tests/ndimage_tests/test_interpolation.py", line 398, in test_affine_transform_texture_memory
E       return m(a, matrix, output_shape=output_shape,
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.Np3X0NVCM9/cupy/cupyx/scipy/ndimage/interpolation.py", line 376, in affine_transform
E       return _texture.affine_transformation(data=input,
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.Np3X0NVCM9/cupy/cupyx/_texture.py", line 168, in affine_transformation
E       texture_object = _create_texture_object(data,
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.Np3X0NVCM9/cupy/cupyx/_texture.py", line 98, in _create_texture_object
E       array = texture.CUDAarray(texture_fmt, *data.shape[::-1])
E     File "cupy/cuda/texture.pyx", line 296, in cupy.cuda.texture.CUDAarray.__init__
E       self.ptr = runtime.malloc3DArray(desc.ptr, width, height, depth,
E     File "cupy_backends/cuda/api/runtime.pyx", line 593, in cupy_backends.cuda.api.runtime.malloc3DArray
E       check_status(status)
E     File "cupy_backends/cuda/api/runtime.pyx", line 265, in cupy_backends.cuda.api.runtime.check_status
E       raise CUDARuntimeError(status)
E   cupy_backends.cuda.api.runtime.CUDARuntimeError: hipErrorUnknown: hipErrorUnknown

cupy_backends/cuda/api/runtime.pyx:265: AssertionError
----------------------------- Captured stderr call -----------------------------
Traceback (most recent call last):
  File "cupy_backends/cuda/api/runtime.pyx", line 644, in cupy_backends.cuda.api.runtime.freeArray
    check_status(status)
  File "cupy_backends/cuda/api/runtime.pyx", line 265, in cupy_backends.cuda.api.runtime.check_status
    raise CUDARuntimeError(status)
cupy_backends.cuda.api.runtime.CUDARuntimeError: hipErrorUnknown: hipErrorUnknown
_ TestAffineTransformTextureMemory.test_affine_transform_texture_memory[_param_258_{mode='nearest', order=0, output='empty', output_shape=None, shape=(100, 100), theta=180}] _

self = <<cupyx_tests.scipy_tests.ndimage_tests.test_interpolation.TestAffineTransformTextureMemory object at 0x7fd7058e8310>  parameter: {'mode': 'nearest', 'order': 0, 'output': 'empty', 'output_shape': None, 'shape': (100, 100), 'theta': 180}>
xp = <module 'cupy' from '/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.Np3X0NVCM9/cupy/cupy/__init__.py'>
scp = <module 'cupyx.scipy' from '/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.Np3X0NVCM9/cupy/cupyx/scipy/__init__.py'>

    @testing.numpy_cupy_allclose(atol=0.1, scipy_name='scp')
    def test_affine_transform_texture_memory(self, xp, scp):
        a = xp.ones(self.shape, dtype=xp.float32)
        center = numpy.divide(numpy.subtract(self.shape, 1), 2)
    
        if len(self.shape) == 2:
            matrix = self._2d_rotation_matrix(self.theta, center)
        elif len(self.shape) == 3:
            matrix = self._3d_rotation_matrix(self.theta, center)
        else:
            return pytest.xfail('Unsupported shape')
    
        if self.output == 'empty':
            output = xp.empty(self.shape, dtype=xp.float32)
            if self.output_shape:
                return pytest.skip('This combination is tested in '
                                   'test_invalid_texture_arguments')
        else:
            output = self.output
    
        if self.output_shape:
            output_shape = (self.output_shape, ) * len(self.shape)
        else:
            output_shape = self.output_shape
    
        if xp == cupy:
            m = cupyx.scipy.ndimage.affine_transform
            matrix = cupy.array(matrix)
>           return m(a, matrix, output_shape=output_shape,
                     output=output, order=self.order,
                     mode=self.mode, texture_memory=True)

tests/cupyx_tests/scipy_tests/ndimage_tests/test_interpolation.py:398: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
cupyx/scipy/ndimage/interpolation.py:376: in affine_transform
    return _texture.affine_transformation(data=input,
cupyx/_texture.py:168: in affine_transformation
    texture_object = _create_texture_object(data,
cupyx/_texture.py:98: in _create_texture_object
    array = texture.CUDAarray(texture_fmt, *data.shape[::-1])
cupy/cuda/texture.pyx:296: in cupy.cuda.texture.CUDAarray.__init__
    self.ptr = runtime.malloc3DArray(desc.ptr, width, height, depth,
cupy_backends/cuda/api/runtime.pyx:593: in cupy_backends.cuda.api.runtime.malloc3DArray
    check_status(status)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

>   raise CUDARuntimeError(status)
E   AssertionError: Only cupy raises error
E   
E   Traceback (most recent call last):
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.Np3X0NVCM9/cupy/cupy/testing/_helper.py", line 47, in _call_func
E       result = impl(self, *args, **kw)
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.Np3X0NVCM9/cupy/tests/cupyx_tests/scipy_tests/ndimage_tests/test_interpolation.py", line 398, in test_affine_transform_texture_memory
E       return m(a, matrix, output_shape=output_shape,
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.Np3X0NVCM9/cupy/cupyx/scipy/ndimage/interpolation.py", line 376, in affine_transform
E       return _texture.affine_transformation(data=input,
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.Np3X0NVCM9/cupy/cupyx/_texture.py", line 168, in affine_transformation
E       texture_object = _create_texture_object(data,
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.Np3X0NVCM9/cupy/cupyx/_texture.py", line 98, in _create_texture_object
E       array = texture.CUDAarray(texture_fmt, *data.shape[::-1])
E     File "cupy/cuda/texture.pyx", line 296, in cupy.cuda.texture.CUDAarray.__init__
E       self.ptr = runtime.malloc3DArray(desc.ptr, width, height, depth,
E     File "cupy_backends/cuda/api/runtime.pyx", line 593, in cupy_backends.cuda.api.runtime.malloc3DArray
E       check_status(status)
E     File "cupy_backends/cuda/api/runtime.pyx", line 265, in cupy_backends.cuda.api.runtime.check_status
E       raise CUDARuntimeError(status)
E   cupy_backends.cuda.api.runtime.CUDARuntimeError: hipErrorUnknown: hipErrorUnknown

cupy_backends/cuda/api/runtime.pyx:265: AssertionError
----------------------------- Captured stderr call -----------------------------
Traceback (most recent call last):
  File "cupy_backends/cuda/api/runtime.pyx", line 644, in cupy_backends.cuda.api.runtime.freeArray
    check_status(status)
  File "cupy_backends/cuda/api/runtime.pyx", line 265, in cupy_backends.cuda.api.runtime.check_status
    raise CUDARuntimeError(status)
cupy_backends.cuda.api.runtime.CUDARuntimeError: hipErrorUnknown: hipErrorUnknown
_ TestAffineTransformTextureMemory.test_affine_transform_texture_memory[_param_259_{mode='nearest', order=0, output='empty', output_shape=None, shape=(100, 100), theta=270}] _

self = <<cupyx_tests.scipy_tests.ndimage_tests.test_interpolation.TestAffineTransformTextureMemory object at 0x7fd7056a28b0>  parameter: {'mode': 'nearest', 'order': 0, 'output': 'empty', 'output_shape': None, 'shape': (100, 100), 'theta': 270}>
xp = <module 'cupy' from '/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.Np3X0NVCM9/cupy/cupy/__init__.py'>
scp = <module 'cupyx.scipy' from '/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.Np3X0NVCM9/cupy/cupyx/scipy/__init__.py'>

    @testing.numpy_cupy_allclose(atol=0.1, scipy_name='scp')
    def test_affine_transform_texture_memory(self, xp, scp):
        a = xp.ones(self.shape, dtype=xp.float32)
        center = numpy.divide(numpy.subtract(self.shape, 1), 2)
    
        if len(self.shape) == 2:
            matrix = self._2d_rotation_matrix(self.theta, center)
        elif len(self.shape) == 3:
            matrix = self._3d_rotation_matrix(self.theta, center)
        else:
            return pytest.xfail('Unsupported shape')
    
        if self.output == 'empty':
            output = xp.empty(self.shape, dtype=xp.float32)
            if self.output_shape:
                return pytest.skip('This combination is tested in '
                                   'test_invalid_texture_arguments')
        else:
            output = self.output
    
        if self.output_shape:
            output_shape = (self.output_shape, ) * len(self.shape)
        else:
            output_shape = self.output_shape
    
        if xp == cupy:
            m = cupyx.scipy.ndimage.affine_transform
            matrix = cupy.array(matrix)
>           return m(a, matrix, output_shape=output_shape,
                     output=output, order=self.order,
                     mode=self.mode, texture_memory=True)

tests/cupyx_tests/scipy_tests/ndimage_tests/test_interpolation.py:398: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
cupyx/scipy/ndimage/interpolation.py:376: in affine_transform
    return _texture.affine_transformation(data=input,
cupyx/_texture.py:168: in affine_transformation
    texture_object = _create_texture_object(data,
cupyx/_texture.py:98: in _create_texture_object
    array = texture.CUDAarray(texture_fmt, *data.shape[::-1])
cupy/cuda/texture.pyx:296: in cupy.cuda.texture.CUDAarray.__init__
    self.ptr = runtime.malloc3DArray(desc.ptr, width, height, depth,
cupy_backends/cuda/api/runtime.pyx:593: in cupy_backends.cuda.api.runtime.malloc3DArray
    check_status(status)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

>   raise CUDARuntimeError(status)
E   AssertionError: Only cupy raises error
E   
E   Traceback (most recent call last):
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.Np3X0NVCM9/cupy/cupy/testing/_helper.py", line 47, in _call_func
E       result = impl(self, *args, **kw)
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.Np3X0NVCM9/cupy/tests/cupyx_tests/scipy_tests/ndimage_tests/test_interpolation.py", line 398, in test_affine_transform_texture_memory
E       return m(a, matrix, output_shape=output_shape,
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.Np3X0NVCM9/cupy/cupyx/scipy/ndimage/interpolation.py", line 376, in affine_transform
E       return _texture.affine_transformation(data=input,
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.Np3X0NVCM9/cupy/cupyx/_texture.py", line 168, in affine_transformation
E       texture_object = _create_texture_object(data,
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.Np3X0NVCM9/cupy/cupyx/_texture.py", line 98, in _create_texture_object
E       array = texture.CUDAarray(texture_fmt, *data.shape[::-1])
E     File "cupy/cuda/texture.pyx", line 296, in cupy.cuda.texture.CUDAarray.__init__
E       self.ptr = runtime.malloc3DArray(desc.ptr, width, height, depth,
E     File "cupy_backends/cuda/api/runtime.pyx", line 593, in cupy_backends.cuda.api.runtime.malloc3DArray
E       check_status(status)
E     File "cupy_backends/cuda/api/runtime.pyx", line 265, in cupy_backends.cuda.api.runtime.check_status
E       raise CUDARuntimeError(status)
E   cupy_backends.cuda.api.runtime.CUDARuntimeError: hipErrorUnknown: hipErrorUnknown

cupy_backends/cuda/api/runtime.pyx:265: AssertionError
----------------------------- Captured stderr call -----------------------------
Traceback (most recent call last):
  File "cupy_backends/cuda/api/runtime.pyx", line 644, in cupy_backends.cuda.api.runtime.freeArray
    check_status(status)
  File "cupy_backends/cuda/api/runtime.pyx", line 265, in cupy_backends.cuda.api.runtime.check_status
    raise CUDARuntimeError(status)
cupy_backends.cuda.api.runtime.CUDARuntimeError: hipErrorUnknown: hipErrorUnknown
_ TestAffineTransformTextureMemory.test_affine_transform_texture_memory[_param_260_{mode='nearest', order=0, output='empty', output_shape=None, shape=(10, 20), theta=0}] _

self = <<cupyx_tests.scipy_tests.ndimage_tests.test_interpolation.TestAffineTransformTextureMemory object at 0x7fd705aa8580>  parameter: {'mode': 'nearest', 'order': 0, 'output': 'empty', 'output_shape': None, 'shape': (10, 20), 'theta': 0}>
xp = <module 'cupy' from '/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.Np3X0NVCM9/cupy/cupy/__init__.py'>
scp = <module 'cupyx.scipy' from '/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.Np3X0NVCM9/cupy/cupyx/scipy/__init__.py'>

    @testing.numpy_cupy_allclose(atol=0.1, scipy_name='scp')
    def test_affine_transform_texture_memory(self, xp, scp):
        a = xp.ones(self.shape, dtype=xp.float32)
        center = numpy.divide(numpy.subtract(self.shape, 1), 2)
    
        if len(self.shape) == 2:
            matrix = self._2d_rotation_matrix(self.theta, center)
        elif len(self.shape) == 3:
            matrix = self._3d_rotation_matrix(self.theta, center)
        else:
            return pytest.xfail('Unsupported shape')
    
        if self.output == 'empty':
            output = xp.empty(self.shape, dtype=xp.float32)
            if self.output_shape:
                return pytest.skip('This combination is tested in '
                                   'test_invalid_texture_arguments')
        else:
            output = self.output
    
        if self.output_shape:
            output_shape = (self.output_shape, ) * len(self.shape)
        else:
            output_shape = self.output_shape
    
        if xp == cupy:
            m = cupyx.scipy.ndimage.affine_transform
            matrix = cupy.array(matrix)
>           return m(a, matrix, output_shape=output_shape,
                     output=output, order=self.order,
                     mode=self.mode, texture_memory=True)

tests/cupyx_tests/scipy_tests/ndimage_tests/test_interpolation.py:398: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
cupyx/scipy/ndimage/interpolation.py:376: in affine_transform
    return _texture.affine_transformation(data=input,
cupyx/_texture.py:168: in affine_transformation
    texture_object = _create_texture_object(data,
cupyx/_texture.py:98: in _create_texture_object
    array = texture.CUDAarray(texture_fmt, *data.shape[::-1])
cupy/cuda/texture.pyx:296: in cupy.cuda.texture.CUDAarray.__init__
    self.ptr = runtime.malloc3DArray(desc.ptr, width, height, depth,
cupy_backends/cuda/api/runtime.pyx:593: in cupy_backends.cuda.api.runtime.malloc3DArray
    check_status(status)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

>   raise CUDARuntimeError(status)
E   AssertionError: Only cupy raises error
E   
E   Traceback (most recent call last):
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.Np3X0NVCM9/cupy/cupy/testing/_helper.py", line 47, in _call_func
E       result = impl(self, *args, **kw)
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.Np3X0NVCM9/cupy/tests/cupyx_tests/scipy_tests/ndimage_tests/test_interpolation.py", line 398, in test_affine_transform_texture_memory
E       return m(a, matrix, output_shape=output_shape,
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.Np3X0NVCM9/cupy/cupyx/scipy/ndimage/interpolation.py", line 376, in affine_transform
E       return _texture.affine_transformation(data=input,
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.Np3X0NVCM9/cupy/cupyx/_texture.py", line 168, in affine_transformation
E       texture_object = _create_texture_object(data,
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.Np3X0NVCM9/cupy/cupyx/_texture.py", line 98, in _create_texture_object
E       array = texture.CUDAarray(texture_fmt, *data.shape[::-1])
E     File "cupy/cuda/texture.pyx", line 296, in cupy.cuda.texture.CUDAarray.__init__
E       self.ptr = runtime.malloc3DArray(desc.ptr, width, height, depth,
E     File "cupy_backends/cuda/api/runtime.pyx", line 593, in cupy_backends.cuda.api.runtime.malloc3DArray
E       check_status(status)
E     File "cupy_backends/cuda/api/runtime.pyx", line 265, in cupy_backends.cuda.api.runtime.check_status
E       raise CUDARuntimeError(status)
E   cupy_backends.cuda.api.runtime.CUDARuntimeError: hipErrorUnknown: hipErrorUnknown

cupy_backends/cuda/api/runtime.pyx:265: AssertionError
----------------------------- Captured stderr call -----------------------------
Traceback (most recent call last):
  File "cupy_backends/cuda/api/runtime.pyx", line 644, in cupy_backends.cuda.api.runtime.freeArray
    check_status(status)
  File "cupy_backends/cuda/api/runtime.pyx", line 265, in cupy_backends.cuda.api.runtime.check_status
    raise CUDARuntimeError(status)
cupy_backends.cuda.api.runtime.CUDARuntimeError: hipErrorUnknown: hipErrorUnknown
_ TestAffineTransformTextureMemory.test_affine_transform_texture_memory[_param_261_{mode='nearest', order=0, output='empty', output_shape=None, shape=(10, 20), theta=90}] _

self = <<cupyx_tests.scipy_tests.ndimage_tests.test_interpolation.TestAffineTransformTextureMemory object at 0x7fd705542430>  parameter: {'mode': 'nearest', 'order': 0, 'output': 'empty', 'output_shape': None, 'shape': (10, 20), 'theta': 90}>
xp = <module 'cupy' from '/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.Np3X0NVCM9/cupy/cupy/__init__.py'>
scp = <module 'cupyx.scipy' from '/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.Np3X0NVCM9/cupy/cupyx/scipy/__init__.py'>

    @testing.numpy_cupy_allclose(atol=0.1, scipy_name='scp')
    def test_affine_transform_texture_memory(self, xp, scp):
        a = xp.ones(self.shape, dtype=xp.float32)
        center = numpy.divide(numpy.subtract(self.shape, 1), 2)
    
        if len(self.shape) == 2:
            matrix = self._2d_rotation_matrix(self.theta, center)
        elif len(self.shape) == 3:
            matrix = self._3d_rotation_matrix(self.theta, center)
        else:
            return pytest.xfail('Unsupported shape')
    
        if self.output == 'empty':
            output = xp.empty(self.shape, dtype=xp.float32)
            if self.output_shape:
                return pytest.skip('This combination is tested in '
                                   'test_invalid_texture_arguments')
        else:
            output = self.output
    
        if self.output_shape:
            output_shape = (self.output_shape, ) * len(self.shape)
        else:
            output_shape = self.output_shape
    
        if xp == cupy:
            m = cupyx.scipy.ndimage.affine_transform
            matrix = cupy.array(matrix)
>           return m(a, matrix, output_shape=output_shape,
                     output=output, order=self.order,
                     mode=self.mode, texture_memory=True)

tests/cupyx_tests/scipy_tests/ndimage_tests/test_interpolation.py:398: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
cupyx/scipy/ndimage/interpolation.py:376: in affine_transform
    return _texture.affine_transformation(data=input,
cupyx/_texture.py:168: in affine_transformation
    texture_object = _create_texture_object(data,
cupyx/_texture.py:98: in _create_texture_object
    array = texture.CUDAarray(texture_fmt, *data.shape[::-1])
cupy/cuda/texture.pyx:296: in cupy.cuda.texture.CUDAarray.__init__
    self.ptr = runtime.malloc3DArray(desc.ptr, width, height, depth,
cupy_backends/cuda/api/runtime.pyx:593: in cupy_backends.cuda.api.runtime.malloc3DArray
    check_status(status)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

>   raise CUDARuntimeError(status)
E   AssertionError: Only cupy raises error
E   
E   Traceback (most recent call last):
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.Np3X0NVCM9/cupy/cupy/testing/_helper.py", line 47, in _call_func
E       result = impl(self, *args, **kw)
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.Np3X0NVCM9/cupy/tests/cupyx_tests/scipy_tests/ndimage_tests/test_interpolation.py", line 398, in test_affine_transform_texture_memory
E       return m(a, matrix, output_shape=output_shape,
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.Np3X0NVCM9/cupy/cupyx/scipy/ndimage/interpolation.py", line 376, in affine_transform
E       return _texture.affine_transformation(data=input,
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.Np3X0NVCM9/cupy/cupyx/_texture.py", line 168, in affine_transformation
E       texture_object = _create_texture_object(data,
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.Np3X0NVCM9/cupy/cupyx/_texture.py", line 98, in _create_texture_object
E       array = texture.CUDAarray(texture_fmt, *data.shape[::-1])
E     File "cupy/cuda/texture.pyx", line 296, in cupy.cuda.texture.CUDAarray.__init__
E       self.ptr = runtime.malloc3DArray(desc.ptr, width, height, depth,
E     File "cupy_backends/cuda/api/runtime.pyx", line 593, in cupy_backends.cuda.api.runtime.malloc3DArray
E       check_status(status)
E     File "cupy_backends/cuda/api/runtime.pyx", line 265, in cupy_backends.cuda.api.runtime.check_status
E       raise CUDARuntimeError(status)
E   cupy_backends.cuda.api.runtime.CUDARuntimeError: hipErrorUnknown: hipErrorUnknown

cupy_backends/cuda/api/runtime.pyx:265: AssertionError
----------------------------- Captured stderr call -----------------------------
Traceback (most recent call last):
  File "cupy_backends/cuda/api/runtime.pyx", line 644, in cupy_backends.cuda.api.runtime.freeArray
    check_status(status)
  File "cupy_backends/cuda/api/runtime.pyx", line 265, in cupy_backends.cuda.api.runtime.check_status
    raise CUDARuntimeError(status)
cupy_backends.cuda.api.runtime.CUDARuntimeError: hipErrorUnknown: hipErrorUnknown
_ TestAffineTransformTextureMemory.test_affine_transform_texture_memory[_param_262_{mode='nearest', order=0, output='empty', output_shape=None, shape=(10, 20), theta=180}] _

self = <<cupyx_tests.scipy_tests.ndimage_tests.test_interpolation.TestAffineTransformTextureMemory object at 0x7fd705543790>  parameter: {'mode': 'nearest', 'order': 0, 'output': 'empty', 'output_shape': None, 'shape': (10, 20), 'theta': 180}>
xp = <module 'cupy' from '/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.Np3X0NVCM9/cupy/cupy/__init__.py'>
scp = <module 'cupyx.scipy' from '/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.Np3X0NVCM9/cupy/cupyx/scipy/__init__.py'>

    @testing.numpy_cupy_allclose(atol=0.1, scipy_name='scp')
    def test_affine_transform_texture_memory(self, xp, scp):
        a = xp.ones(self.shape, dtype=xp.float32)
        center = numpy.divide(numpy.subtract(self.shape, 1), 2)
    
        if len(self.shape) == 2:
            matrix = self._2d_rotation_matrix(self.theta, center)
        elif len(self.shape) == 3:
            matrix = self._3d_rotation_matrix(self.theta, center)
        else:
            return pytest.xfail('Unsupported shape')
    
        if self.output == 'empty':
            output = xp.empty(self.shape, dtype=xp.float32)
            if self.output_shape:
                return pytest.skip('This combination is tested in '
                                   'test_invalid_texture_arguments')
        else:
            output = self.output
    
        if self.output_shape:
            output_shape = (self.output_shape, ) * len(self.shape)
        else:
            output_shape = self.output_shape
    
        if xp == cupy:
            m = cupyx.scipy.ndimage.affine_transform
            matrix = cupy.array(matrix)
>           return m(a, matrix, output_shape=output_shape,
                     output=output, order=self.order,
                     mode=self.mode, texture_memory=True)

tests/cupyx_tests/scipy_tests/ndimage_tests/test_interpolation.py:398: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
cupyx/scipy/ndimage/interpolation.py:376: in affine_transform
    return _texture.affine_transformation(data=input,
cupyx/_texture.py:168: in affine_transformation
    texture_object = _create_texture_object(data,
cupyx/_texture.py:98: in _create_texture_object
    array = texture.CUDAarray(texture_fmt, *data.shape[::-1])
cupy/cuda/texture.pyx:296: in cupy.cuda.texture.CUDAarray.__init__
    self.ptr = runtime.malloc3DArray(desc.ptr, width, height, depth,
cupy_backends/cuda/api/runtime.pyx:593: in cupy_backends.cuda.api.runtime.malloc3DArray
    check_status(status)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

>   raise CUDARuntimeError(status)
E   AssertionError: Only cupy raises error
E   
E   Traceback (most recent call last):
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.Np3X0NVCM9/cupy/cupy/testing/_helper.py", line 47, in _call_func
E       result = impl(self, *args, **kw)
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.Np3X0NVCM9/cupy/tests/cupyx_tests/scipy_tests/ndimage_tests/test_interpolation.py", line 398, in test_affine_transform_texture_memory
E       return m(a, matrix, output_shape=output_shape,
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.Np3X0NVCM9/cupy/cupyx/scipy/ndimage/interpolation.py", line 376, in affine_transform
E       return _texture.affine_transformation(data=input,
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.Np3X0NVCM9/cupy/cupyx/_texture.py", line 168, in affine_transformation
E       texture_object = _create_texture_object(data,
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.Np3X0NVCM9/cupy/cupyx/_texture.py", line 98, in _create_texture_object
E       array = texture.CUDAarray(texture_fmt, *data.shape[::-1])
E     File "cupy/cuda/texture.pyx", line 296, in cupy.cuda.texture.CUDAarray.__init__
E       self.ptr = runtime.malloc3DArray(desc.ptr, width, height, depth,
E     File "cupy_backends/cuda/api/runtime.pyx", line 593, in cupy_backends.cuda.api.runtime.malloc3DArray
E       check_status(status)
E     File "cupy_backends/cuda/api/runtime.pyx", line 265, in cupy_backends.cuda.api.runtime.check_status
E       raise CUDARuntimeError(status)
E   cupy_backends.cuda.api.runtime.CUDARuntimeError: hipErrorUnknown: hipErrorUnknown

cupy_backends/cuda/api/runtime.pyx:265: AssertionError
----------------------------- Captured stderr call -----------------------------
Traceback (most recent call last):
  File "cupy_backends/cuda/api/runtime.pyx", line 644, in cupy_backends.cuda.api.runtime.freeArray
    check_status(status)
  File "cupy_backends/cuda/api/runtime.pyx", line 265, in cupy_backends.cuda.api.runtime.check_status
    raise CUDARuntimeError(status)
cupy_backends.cuda.api.runtime.CUDARuntimeError: hipErrorUnknown: hipErrorUnknown
_ TestAffineTransformTextureMemory.test_affine_transform_texture_memory[_param_263_{mode='nearest', order=0, output='empty', output_shape=None, shape=(10, 20), theta=270}] _

self = <<cupyx_tests.scipy_tests.ndimage_tests.test_interpolation.TestAffineTransformTextureMemory object at 0x7fd705871f70>  parameter: {'mode': 'nearest', 'order': 0, 'output': 'empty', 'output_shape': None, 'shape': (10, 20), 'theta': 270}>
xp = <module 'cupy' from '/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.Np3X0NVCM9/cupy/cupy/__init__.py'>
scp = <module 'cupyx.scipy' from '/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.Np3X0NVCM9/cupy/cupyx/scipy/__init__.py'>

    @testing.numpy_cupy_allclose(atol=0.1, scipy_name='scp')
    def test_affine_transform_texture_memory(self, xp, scp):
        a = xp.ones(self.shape, dtype=xp.float32)
        center = numpy.divide(numpy.subtract(self.shape, 1), 2)
    
        if len(self.shape) == 2:
            matrix = self._2d_rotation_matrix(self.theta, center)
        elif len(self.shape) == 3:
            matrix = self._3d_rotation_matrix(self.theta, center)
        else:
            return pytest.xfail('Unsupported shape')
    
        if self.output == 'empty':
            output = xp.empty(self.shape, dtype=xp.float32)
            if self.output_shape:
                return pytest.skip('This combination is tested in '
                                   'test_invalid_texture_arguments')
        else:
            output = self.output
    
        if self.output_shape:
            output_shape = (self.output_shape, ) * len(self.shape)
        else:
            output_shape = self.output_shape
    
        if xp == cupy:
            m = cupyx.scipy.ndimage.affine_transform
            matrix = cupy.array(matrix)
>           return m(a, matrix, output_shape=output_shape,
                     output=output, order=self.order,
                     mode=self.mode, texture_memory=True)

tests/cupyx_tests/scipy_tests/ndimage_tests/test_interpolation.py:398: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
cupyx/scipy/ndimage/interpolation.py:376: in affine_transform
    return _texture.affine_transformation(data=input,
cupyx/_texture.py:168: in affine_transformation
    texture_object = _create_texture_object(data,
cupyx/_texture.py:98: in _create_texture_object
    array = texture.CUDAarray(texture_fmt, *data.shape[::-1])
cupy/cuda/texture.pyx:296: in cupy.cuda.texture.CUDAarray.__init__
    self.ptr = runtime.malloc3DArray(desc.ptr, width, height, depth,
cupy_backends/cuda/api/runtime.pyx:593: in cupy_backends.cuda.api.runtime.malloc3DArray
    check_status(status)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

>   raise CUDARuntimeError(status)
E   AssertionError: Only cupy raises error
E   
E   Traceback (most recent call last):
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.Np3X0NVCM9/cupy/cupy/testing/_helper.py", line 47, in _call_func
E       result = impl(self, *args, **kw)
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.Np3X0NVCM9/cupy/tests/cupyx_tests/scipy_tests/ndimage_tests/test_interpolation.py", line 398, in test_affine_transform_texture_memory
E       return m(a, matrix, output_shape=output_shape,
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.Np3X0NVCM9/cupy/cupyx/scipy/ndimage/interpolation.py", line 376, in affine_transform
E       return _texture.affine_transformation(data=input,
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.Np3X0NVCM9/cupy/cupyx/_texture.py", line 168, in affine_transformation
E       texture_object = _create_texture_object(data,
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.Np3X0NVCM9/cupy/cupyx/_texture.py", line 98, in _create_texture_object
E       array = texture.CUDAarray(texture_fmt, *data.shape[::-1])
E     File "cupy/cuda/texture.pyx", line 296, in cupy.cuda.texture.CUDAarray.__init__
E       self.ptr = runtime.malloc3DArray(desc.ptr, width, height, depth,
E     File "cupy_backends/cuda/api/runtime.pyx", line 593, in cupy_backends.cuda.api.runtime.malloc3DArray
E       check_status(status)
E     File "cupy_backends/cuda/api/runtime.pyx", line 265, in cupy_backends.cuda.api.runtime.check_status
E       raise CUDARuntimeError(status)
E   cupy_backends.cuda.api.runtime.CUDARuntimeError: hipErrorUnknown: hipErrorUnknown

cupy_backends/cuda/api/runtime.pyx:265: AssertionError
----------------------------- Captured stderr call -----------------------------
Traceback (most recent call last):
  File "cupy_backends/cuda/api/runtime.pyx", line 644, in cupy_backends.cuda.api.runtime.freeArray
    check_status(status)
  File "cupy_backends/cuda/api/runtime.pyx", line 265, in cupy_backends.cuda.api.runtime.check_status
    raise CUDARuntimeError(status)
cupy_backends.cuda.api.runtime.CUDARuntimeError: hipErrorUnknown: hipErrorUnknown
_ TestAffineTransformTextureMemory.test_affine_transform_texture_memory[_param_264_{mode='nearest', order=0, output='empty', output_shape=None, shape=(10, 10, 10), theta=0}] _

self = <<cupyx_tests.scipy_tests.ndimage_tests.test_interpolation.TestAffineTransformTextureMemory object at 0x7fd70788b9d0>  parameter: {'mode': 'nearest', 'order': 0, 'output': 'empty', 'output_shape': None, 'shape': (10, 10, 10), 'theta': 0}>
xp = <module 'cupy' from '/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.Np3X0NVCM9/cupy/cupy/__init__.py'>
scp = <module 'cupyx.scipy' from '/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.Np3X0NVCM9/cupy/cupyx/scipy/__init__.py'>

    @testing.numpy_cupy_allclose(atol=0.1, scipy_name='scp')
    def test_affine_transform_texture_memory(self, xp, scp):
        a = xp.ones(self.shape, dtype=xp.float32)
        center = numpy.divide(numpy.subtract(self.shape, 1), 2)
    
        if len(self.shape) == 2:
            matrix = self._2d_rotation_matrix(self.theta, center)
        elif len(self.shape) == 3:
            matrix = self._3d_rotation_matrix(self.theta, center)
        else:
            return pytest.xfail('Unsupported shape')
    
        if self.output == 'empty':
            output = xp.empty(self.shape, dtype=xp.float32)
            if self.output_shape:
                return pytest.skip('This combination is tested in '
                                   'test_invalid_texture_arguments')
        else:
            output = self.output
    
        if self.output_shape:
            output_shape = (self.output_shape, ) * len(self.shape)
        else:
            output_shape = self.output_shape
    
        if xp == cupy:
            m = cupyx.scipy.ndimage.affine_transform
            matrix = cupy.array(matrix)
>           return m(a, matrix, output_shape=output_shape,
                     output=output, order=self.order,
                     mode=self.mode, texture_memory=True)

tests/cupyx_tests/scipy_tests/ndimage_tests/test_interpolation.py:398: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
cupyx/scipy/ndimage/interpolation.py:376: in affine_transform
    return _texture.affine_transformation(data=input,
cupyx/_texture.py:168: in affine_transformation
    texture_object = _create_texture_object(data,
cupyx/_texture.py:98: in _create_texture_object
    array = texture.CUDAarray(texture_fmt, *data.shape[::-1])
cupy/cuda/texture.pyx:296: in cupy.cuda.texture.CUDAarray.__init__
    self.ptr = runtime.malloc3DArray(desc.ptr, width, height, depth,
cupy_backends/cuda/api/runtime.pyx:593: in cupy_backends.cuda.api.runtime.malloc3DArray
    check_status(status)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

>   raise CUDARuntimeError(status)
E   AssertionError: Only cupy raises error
E   
E   Traceback (most recent call last):
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.Np3X0NVCM9/cupy/cupy/testing/_helper.py", line 47, in _call_func
E       result = impl(self, *args, **kw)
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.Np3X0NVCM9/cupy/tests/cupyx_tests/scipy_tests/ndimage_tests/test_interpolation.py", line 398, in test_affine_transform_texture_memory
E       return m(a, matrix, output_shape=output_shape,
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.Np3X0NVCM9/cupy/cupyx/scipy/ndimage/interpolation.py", line 376, in affine_transform
E       return _texture.affine_transformation(data=input,
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.Np3X0NVCM9/cupy/cupyx/_texture.py", line 168, in affine_transformation
E       texture_object = _create_texture_object(data,
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.Np3X0NVCM9/cupy/cupyx/_texture.py", line 98, in _create_texture_object
E       array = texture.CUDAarray(texture_fmt, *data.shape[::-1])
E     File "cupy/cuda/texture.pyx", line 296, in cupy.cuda.texture.CUDAarray.__init__
E       self.ptr = runtime.malloc3DArray(desc.ptr, width, height, depth,
E     File "cupy_backends/cuda/api/runtime.pyx", line 593, in cupy_backends.cuda.api.runtime.malloc3DArray
E       check_status(status)
E     File "cupy_backends/cuda/api/runtime.pyx", line 265, in cupy_backends.cuda.api.runtime.check_status
E       raise CUDARuntimeError(status)
E   cupy_backends.cuda.api.runtime.CUDARuntimeError: hipErrorUnknown: hipErrorUnknown

cupy_backends/cuda/api/runtime.pyx:265: AssertionError
----------------------------- Captured stderr call -----------------------------
Traceback (most recent call last):
  File "cupy_backends/cuda/api/runtime.pyx", line 644, in cupy_backends.cuda.api.runtime.freeArray
    check_status(status)
  File "cupy_backends/cuda/api/runtime.pyx", line 265, in cupy_backends.cuda.api.runtime.check_status
    raise CUDARuntimeError(status)
cupy_backends.cuda.api.runtime.CUDARuntimeError: hipErrorUnknown: hipErrorUnknown
_ TestAffineTransformTextureMemory.test_affine_transform_texture_memory[_param_265_{mode='nearest', order=0, output='empty', output_shape=None, shape=(10, 10, 10), theta=90}] _

self = <<cupyx_tests.scipy_tests.ndimage_tests.test_interpolation.TestAffineTransformTextureMemory object at 0x7fd707376580>  parameter: {'mode': 'nearest', 'order': 0, 'output': 'empty', 'output_shape': None, 'shape': (10, 10, 10), 'theta': 90}>
xp = <module 'cupy' from '/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.Np3X0NVCM9/cupy/cupy/__init__.py'>
scp = <module 'cupyx.scipy' from '/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.Np3X0NVCM9/cupy/cupyx/scipy/__init__.py'>

    @testing.numpy_cupy_allclose(atol=0.1, scipy_name='scp')
    def test_affine_transform_texture_memory(self, xp, scp):
        a = xp.ones(self.shape, dtype=xp.float32)
        center = numpy.divide(numpy.subtract(self.shape, 1), 2)
    
        if len(self.shape) == 2:
            matrix = self._2d_rotation_matrix(self.theta, center)
        elif len(self.shape) == 3:
            matrix = self._3d_rotation_matrix(self.theta, center)
        else:
            return pytest.xfail('Unsupported shape')
    
        if self.output == 'empty':
            output = xp.empty(self.shape, dtype=xp.float32)
            if self.output_shape:
                return pytest.skip('This combination is tested in '
                                   'test_invalid_texture_arguments')
        else:
            output = self.output
    
        if self.output_shape:
            output_shape = (self.output_shape, ) * len(self.shape)
        else:
            output_shape = self.output_shape
    
        if xp == cupy:
            m = cupyx.scipy.ndimage.affine_transform
            matrix = cupy.array(matrix)
>           return m(a, matrix, output_shape=output_shape,
                     output=output, order=self.order,
                     mode=self.mode, texture_memory=True)

tests/cupyx_tests/scipy_tests/ndimage_tests/test_interpolation.py:398: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
cupyx/scipy/ndimage/interpolation.py:376: in affine_transform
    return _texture.affine_transformation(data=input,
cupyx/_texture.py:168: in affine_transformation
    texture_object = _create_texture_object(data,
cupyx/_texture.py:98: in _create_texture_object
    array = texture.CUDAarray(texture_fmt, *data.shape[::-1])
cupy/cuda/texture.pyx:296: in cupy.cuda.texture.CUDAarray.__init__
    self.ptr = runtime.malloc3DArray(desc.ptr, width, height, depth,
cupy_backends/cuda/api/runtime.pyx:593: in cupy_backends.cuda.api.runtime.malloc3DArray
    check_status(status)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

>   raise CUDARuntimeError(status)
E   AssertionError: Only cupy raises error
E   
E   Traceback (most recent call last):
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.Np3X0NVCM9/cupy/cupy/testing/_helper.py", line 47, in _call_func
E       result = impl(self, *args, **kw)
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.Np3X0NVCM9/cupy/tests/cupyx_tests/scipy_tests/ndimage_tests/test_interpolation.py", line 398, in test_affine_transform_texture_memory
E       return m(a, matrix, output_shape=output_shape,
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.Np3X0NVCM9/cupy/cupyx/scipy/ndimage/interpolation.py", line 376, in affine_transform
E       return _texture.affine_transformation(data=input,
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.Np3X0NVCM9/cupy/cupyx/_texture.py", line 168, in affine_transformation
E       texture_object = _create_texture_object(data,
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.Np3X0NVCM9/cupy/cupyx/_texture.py", line 98, in _create_texture_object
E       array = texture.CUDAarray(texture_fmt, *data.shape[::-1])
E     File "cupy/cuda/texture.pyx", line 296, in cupy.cuda.texture.CUDAarray.__init__
E       self.ptr = runtime.malloc3DArray(desc.ptr, width, height, depth,
E     File "cupy_backends/cuda/api/runtime.pyx", line 593, in cupy_backends.cuda.api.runtime.malloc3DArray
E       check_status(status)
E     File "cupy_backends/cuda/api/runtime.pyx", line 265, in cupy_backends.cuda.api.runtime.check_status
E       raise CUDARuntimeError(status)
E   cupy_backends.cuda.api.runtime.CUDARuntimeError: hipErrorUnknown: hipErrorUnknown

cupy_backends/cuda/api/runtime.pyx:265: AssertionError
----------------------------- Captured stderr call -----------------------------
Traceback (most recent call last):
  File "cupy_backends/cuda/api/runtime.pyx", line 644, in cupy_backends.cuda.api.runtime.freeArray
    check_status(status)
  File "cupy_backends/cuda/api/runtime.pyx", line 265, in cupy_backends.cuda.api.runtime.check_status
    raise CUDARuntimeError(status)
cupy_backends.cuda.api.runtime.CUDARuntimeError: hipErrorUnknown: hipErrorUnknown
_ TestAffineTransformTextureMemory.test_affine_transform_texture_memory[_param_266_{mode='nearest', order=0, output='empty', output_shape=None, shape=(10, 10, 10), theta=180}] _

self = <<cupyx_tests.scipy_tests.ndimage_tests.test_interpolation.TestAffineTransformTextureMemory object at 0x7fd70593d700>  parameter: {'mode': 'nearest', 'order': 0, 'output': 'empty', 'output_shape': None, 'shape': (10, 10, 10), 'theta': 180}>
xp = <module 'cupy' from '/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.Np3X0NVCM9/cupy/cupy/__init__.py'>
scp = <module 'cupyx.scipy' from '/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.Np3X0NVCM9/cupy/cupyx/scipy/__init__.py'>

    @testing.numpy_cupy_allclose(atol=0.1, scipy_name='scp')
    def test_affine_transform_texture_memory(self, xp, scp):
        a = xp.ones(self.shape, dtype=xp.float32)
        center = numpy.divide(numpy.subtract(self.shape, 1), 2)
    
        if len(self.shape) == 2:
            matrix = self._2d_rotation_matrix(self.theta, center)
        elif len(self.shape) == 3:
            matrix = self._3d_rotation_matrix(self.theta, center)
        else:
            return pytest.xfail('Unsupported shape')
    
        if self.output == 'empty':
            output = xp.empty(self.shape, dtype=xp.float32)
            if self.output_shape:
                return pytest.skip('This combination is tested in '
                                   'test_invalid_texture_arguments')
        else:
            output = self.output
    
        if self.output_shape:
            output_shape = (self.output_shape, ) * len(self.shape)
        else:
            output_shape = self.output_shape
    
        if xp == cupy:
            m = cupyx.scipy.ndimage.affine_transform
            matrix = cupy.array(matrix)
>           return m(a, matrix, output_shape=output_shape,
                     output=output, order=self.order,
                     mode=self.mode, texture_memory=True)

tests/cupyx_tests/scipy_tests/ndimage_tests/test_interpolation.py:398: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
cupyx/scipy/ndimage/interpolation.py:376: in affine_transform
    return _texture.affine_transformation(data=input,
cupyx/_texture.py:168: in affine_transformation
    texture_object = _create_texture_object(data,
cupyx/_texture.py:98: in _create_texture_object
    array = texture.CUDAarray(texture_fmt, *data.shape[::-1])
cupy/cuda/texture.pyx:296: in cupy.cuda.texture.CUDAarray.__init__
    self.ptr = runtime.malloc3DArray(desc.ptr, width, height, depth,
cupy_backends/cuda/api/runtime.pyx:593: in cupy_backends.cuda.api.runtime.malloc3DArray
    check_status(status)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

>   raise CUDARuntimeError(status)
E   AssertionError: Only cupy raises error
E   
E   Traceback (most recent call last):
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.Np3X0NVCM9/cupy/cupy/testing/_helper.py", line 47, in _call_func
E       result = impl(self, *args, **kw)
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.Np3X0NVCM9/cupy/tests/cupyx_tests/scipy_tests/ndimage_tests/test_interpolation.py", line 398, in test_affine_transform_texture_memory
E       return m(a, matrix, output_shape=output_shape,
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.Np3X0NVCM9/cupy/cupyx/scipy/ndimage/interpolation.py", line 376, in affine_transform
E       return _texture.affine_transformation(data=input,
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.Np3X0NVCM9/cupy/cupyx/_texture.py", line 168, in affine_transformation
E       texture_object = _create_texture_object(data,
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.Np3X0NVCM9/cupy/cupyx/_texture.py", line 98, in _create_texture_object
E       array = texture.CUDAarray(texture_fmt, *data.shape[::-1])
E     File "cupy/cuda/texture.pyx", line 296, in cupy.cuda.texture.CUDAarray.__init__
E       self.ptr = runtime.malloc3DArray(desc.ptr, width, height, depth,
E     File "cupy_backends/cuda/api/runtime.pyx", line 593, in cupy_backends.cuda.api.runtime.malloc3DArray
E       check_status(status)
E     File "cupy_backends/cuda/api/runtime.pyx", line 265, in cupy_backends.cuda.api.runtime.check_status
E       raise CUDARuntimeError(status)
E   cupy_backends.cuda.api.runtime.CUDARuntimeError: hipErrorUnknown: hipErrorUnknown

cupy_backends/cuda/api/runtime.pyx:265: AssertionError
----------------------------- Captured stderr call -----------------------------
Traceback (most recent call last):
  File "cupy_backends/cuda/api/runtime.pyx", line 644, in cupy_backends.cuda.api.runtime.freeArray
    check_status(status)
  File "cupy_backends/cuda/api/runtime.pyx", line 265, in cupy_backends.cuda.api.runtime.check_status
    raise CUDARuntimeError(status)
cupy_backends.cuda.api.runtime.CUDARuntimeError: hipErrorUnknown: hipErrorUnknown
_ TestAffineTransformTextureMemory.test_affine_transform_texture_memory[_param_267_{mode='nearest', order=0, output='empty', output_shape=None, shape=(10, 10, 10), theta=270}] _

self = <<cupyx_tests.scipy_tests.ndimage_tests.test_interpolation.TestAffineTransformTextureMemory object at 0x7fd705847640>  parameter: {'mode': 'nearest', 'order': 0, 'output': 'empty', 'output_shape': None, 'shape': (10, 10, 10), 'theta': 270}>
xp = <module 'cupy' from '/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.Np3X0NVCM9/cupy/cupy/__init__.py'>
scp = <module 'cupyx.scipy' from '/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.Np3X0NVCM9/cupy/cupyx/scipy/__init__.py'>

    @testing.numpy_cupy_allclose(atol=0.1, scipy_name='scp')
    def test_affine_transform_texture_memory(self, xp, scp):
        a = xp.ones(self.shape, dtype=xp.float32)
        center = numpy.divide(numpy.subtract(self.shape, 1), 2)
    
        if len(self.shape) == 2:
            matrix = self._2d_rotation_matrix(self.theta, center)
        elif len(self.shape) == 3:
            matrix = self._3d_rotation_matrix(self.theta, center)
        else:
            return pytest.xfail('Unsupported shape')
    
        if self.output == 'empty':
            output = xp.empty(self.shape, dtype=xp.float32)
            if self.output_shape:
                return pytest.skip('This combination is tested in '
                                   'test_invalid_texture_arguments')
        else:
            output = self.output
    
        if self.output_shape:
            output_shape = (self.output_shape, ) * len(self.shape)
        else:
            output_shape = self.output_shape
    
        if xp == cupy:
            m = cupyx.scipy.ndimage.affine_transform
            matrix = cupy.array(matrix)
>           return m(a, matrix, output_shape=output_shape,
                     output=output, order=self.order,
                     mode=self.mode, texture_memory=True)

tests/cupyx_tests/scipy_tests/ndimage_tests/test_interpolation.py:398: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
cupyx/scipy/ndimage/interpolation.py:376: in affine_transform
    return _texture.affine_transformation(data=input,
cupyx/_texture.py:168: in affine_transformation
    texture_object = _create_texture_object(data,
cupyx/_texture.py:98: in _create_texture_object
    array = texture.CUDAarray(texture_fmt, *data.shape[::-1])
cupy/cuda/texture.pyx:296: in cupy.cuda.texture.CUDAarray.__init__
    self.ptr = runtime.malloc3DArray(desc.ptr, width, height, depth,
cupy_backends/cuda/api/runtime.pyx:593: in cupy_backends.cuda.api.runtime.malloc3DArray
    check_status(status)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

>   raise CUDARuntimeError(status)
E   AssertionError: Only cupy raises error
E   
E   Traceback (most recent call last):
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.Np3X0NVCM9/cupy/cupy/testing/_helper.py", line 47, in _call_func
E       result = impl(self, *args, **kw)
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.Np3X0NVCM9/cupy/tests/cupyx_tests/scipy_tests/ndimage_tests/test_interpolation.py", line 398, in test_affine_transform_texture_memory
E       return m(a, matrix, output_shape=output_shape,
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.Np3X0NVCM9/cupy/cupyx/scipy/ndimage/interpolation.py", line 376, in affine_transform
E       return _texture.affine_transformation(data=input,
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.Np3X0NVCM9/cupy/cupyx/_texture.py", line 168, in affine_transformation
E       texture_object = _create_texture_object(data,
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.Np3X0NVCM9/cupy/cupyx/_texture.py", line 98, in _create_texture_object
E       array = texture.CUDAarray(texture_fmt, *data.shape[::-1])
E     File "cupy/cuda/texture.pyx", line 296, in cupy.cuda.texture.CUDAarray.__init__
E       self.ptr = runtime.malloc3DArray(desc.ptr, width, height, depth,
E     File "cupy_backends/cuda/api/runtime.pyx", line 593, in cupy_backends.cuda.api.runtime.malloc3DArray
E       check_status(status)
E     File "cupy_backends/cuda/api/runtime.pyx", line 265, in cupy_backends.cuda.api.runtime.check_status
E       raise CUDARuntimeError(status)
E   cupy_backends.cuda.api.runtime.CUDARuntimeError: hipErrorUnknown: hipErrorUnknown

cupy_backends/cuda/api/runtime.pyx:265: AssertionError
----------------------------- Captured stderr call -----------------------------
Traceback (most recent call last):
  File "cupy_backends/cuda/api/runtime.pyx", line 644, in cupy_backends.cuda.api.runtime.freeArray
    check_status(status)
  File "cupy_backends/cuda/api/runtime.pyx", line 265, in cupy_backends.cuda.api.runtime.check_status
    raise CUDARuntimeError(status)
cupy_backends.cuda.api.runtime.CUDARuntimeError: hipErrorUnknown: hipErrorUnknown
_ TestAffineTransformTextureMemory.test_affine_transform_texture_memory[_param_268_{mode='nearest', order=0, output='empty', output_shape=None, shape=(10, 20, 30), theta=0}] _

self = <<cupyx_tests.scipy_tests.ndimage_tests.test_interpolation.TestAffineTransformTextureMemory object at 0x7fd7058ba1f0>  parameter: {'mode': 'nearest', 'order': 0, 'output': 'empty', 'output_shape': None, 'shape': (10, 20, 30), 'theta': 0}>
xp = <module 'cupy' from '/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.Np3X0NVCM9/cupy/cupy/__init__.py'>
scp = <module 'cupyx.scipy' from '/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.Np3X0NVCM9/cupy/cupyx/scipy/__init__.py'>

    @testing.numpy_cupy_allclose(atol=0.1, scipy_name='scp')
    def test_affine_transform_texture_memory(self, xp, scp):
        a = xp.ones(self.shape, dtype=xp.float32)
        center = numpy.divide(numpy.subtract(self.shape, 1), 2)
    
        if len(self.shape) == 2:
            matrix = self._2d_rotation_matrix(self.theta, center)
        elif len(self.shape) == 3:
            matrix = self._3d_rotation_matrix(self.theta, center)
        else:
            return pytest.xfail('Unsupported shape')
    
        if self.output == 'empty':
            output = xp.empty(self.shape, dtype=xp.float32)
            if self.output_shape:
                return pytest.skip('This combination is tested in '
                                   'test_invalid_texture_arguments')
        else:
            output = self.output
    
        if self.output_shape:
            output_shape = (self.output_shape, ) * len(self.shape)
        else:
            output_shape = self.output_shape
    
        if xp == cupy:
            m = cupyx.scipy.ndimage.affine_transform
            matrix = cupy.array(matrix)
>           return m(a, matrix, output_shape=output_shape,
                     output=output, order=self.order,
                     mode=self.mode, texture_memory=True)

tests/cupyx_tests/scipy_tests/ndimage_tests/test_interpolation.py:398: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
cupyx/scipy/ndimage/interpolation.py:376: in affine_transform
    return _texture.affine_transformation(data=input,
cupyx/_texture.py:168: in affine_transformation
    texture_object = _create_texture_object(data,
cupyx/_texture.py:98: in _create_texture_object
    array = texture.CUDAarray(texture_fmt, *data.shape[::-1])
cupy/cuda/texture.pyx:296: in cupy.cuda.texture.CUDAarray.__init__
    self.ptr = runtime.malloc3DArray(desc.ptr, width, height, depth,
cupy_backends/cuda/api/runtime.pyx:593: in cupy_backends.cuda.api.runtime.malloc3DArray
    check_status(status)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

>   raise CUDARuntimeError(status)
E   AssertionError: Only cupy raises error
E   
E   Traceback (most recent call last):
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.Np3X0NVCM9/cupy/cupy/testing/_helper.py", line 47, in _call_func
E       result = impl(self, *args, **kw)
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.Np3X0NVCM9/cupy/tests/cupyx_tests/scipy_tests/ndimage_tests/test_interpolation.py", line 398, in test_affine_transform_texture_memory
E       return m(a, matrix, output_shape=output_shape,
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.Np3X0NVCM9/cupy/cupyx/scipy/ndimage/interpolation.py", line 376, in affine_transform
E       return _texture.affine_transformation(data=input,
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.Np3X0NVCM9/cupy/cupyx/_texture.py", line 168, in affine_transformation
E       texture_object = _create_texture_object(data,
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.Np3X0NVCM9/cupy/cupyx/_texture.py", line 98, in _create_texture_object
E       array = texture.CUDAarray(texture_fmt, *data.shape[::-1])
E     File "cupy/cuda/texture.pyx", line 296, in cupy.cuda.texture.CUDAarray.__init__
E       self.ptr = runtime.malloc3DArray(desc.ptr, width, height, depth,
E     File "cupy_backends/cuda/api/runtime.pyx", line 593, in cupy_backends.cuda.api.runtime.malloc3DArray
E       check_status(status)
E     File "cupy_backends/cuda/api/runtime.pyx", line 265, in cupy_backends.cuda.api.runtime.check_status
E       raise CUDARuntimeError(status)
E   cupy_backends.cuda.api.runtime.CUDARuntimeError: hipErrorUnknown: hipErrorUnknown

cupy_backends/cuda/api/runtime.pyx:265: AssertionError
----------------------------- Captured stderr call -----------------------------
Traceback (most recent call last):
  File "cupy_backends/cuda/api/runtime.pyx", line 644, in cupy_backends.cuda.api.runtime.freeArray
    check_status(status)
  File "cupy_backends/cuda/api/runtime.pyx", line 265, in cupy_backends.cuda.api.runtime.check_status
    raise CUDARuntimeError(status)
cupy_backends.cuda.api.runtime.CUDARuntimeError: hipErrorUnknown: hipErrorUnknown
_ TestAffineTransformTextureMemory.test_affine_transform_texture_memory[_param_269_{mode='nearest', order=0, output='empty', output_shape=None, shape=(10, 20, 30), theta=90}] _

self = <<cupyx_tests.scipy_tests.ndimage_tests.test_interpolation.TestAffineTransformTextureMemory object at 0x7fd705576850>  parameter: {'mode': 'nearest', 'order': 0, 'output': 'empty', 'output_shape': None, 'shape': (10, 20, 30), 'theta': 90}>
xp = <module 'cupy' from '/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.Np3X0NVCM9/cupy/cupy/__init__.py'>
scp = <module 'cupyx.scipy' from '/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.Np3X0NVCM9/cupy/cupyx/scipy/__init__.py'>

    @testing.numpy_cupy_allclose(atol=0.1, scipy_name='scp')
    def test_affine_transform_texture_memory(self, xp, scp):
        a = xp.ones(self.shape, dtype=xp.float32)
        center = numpy.divide(numpy.subtract(self.shape, 1), 2)
    
        if len(self.shape) == 2:
            matrix = self._2d_rotation_matrix(self.theta, center)
        elif len(self.shape) == 3:
            matrix = self._3d_rotation_matrix(self.theta, center)
        else:
            return pytest.xfail('Unsupported shape')
    
        if self.output == 'empty':
            output = xp.empty(self.shape, dtype=xp.float32)
            if self.output_shape:
                return pytest.skip('This combination is tested in '
                                   'test_invalid_texture_arguments')
        else:
            output = self.output
    
        if self.output_shape:
            output_shape = (self.output_shape, ) * len(self.shape)
        else:
            output_shape = self.output_shape
    
        if xp == cupy:
            m = cupyx.scipy.ndimage.affine_transform
            matrix = cupy.array(matrix)
>           return m(a, matrix, output_shape=output_shape,
                     output=output, order=self.order,
                     mode=self.mode, texture_memory=True)

tests/cupyx_tests/scipy_tests/ndimage_tests/test_interpolation.py:398: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
cupyx/scipy/ndimage/interpolation.py:376: in affine_transform
    return _texture.affine_transformation(data=input,
cupyx/_texture.py:168: in affine_transformation
    texture_object = _create_texture_object(data,
cupyx/_texture.py:98: in _create_texture_object
    array = texture.CUDAarray(texture_fmt, *data.shape[::-1])
cupy/cuda/texture.pyx:296: in cupy.cuda.texture.CUDAarray.__init__
    self.ptr = runtime.malloc3DArray(desc.ptr, width, height, depth,
cupy_backends/cuda/api/runtime.pyx:593: in cupy_backends.cuda.api.runtime.malloc3DArray
    check_status(status)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

>   raise CUDARuntimeError(status)
E   AssertionError: Only cupy raises error
E   
E   Traceback (most recent call last):
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.Np3X0NVCM9/cupy/cupy/testing/_helper.py", line 47, in _call_func
E       result = impl(self, *args, **kw)
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.Np3X0NVCM9/cupy/tests/cupyx_tests/scipy_tests/ndimage_tests/test_interpolation.py", line 398, in test_affine_transform_texture_memory
E       return m(a, matrix, output_shape=output_shape,
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.Np3X0NVCM9/cupy/cupyx/scipy/ndimage/interpolation.py", line 376, in affine_transform
E       return _texture.affine_transformation(data=input,
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.Np3X0NVCM9/cupy/cupyx/_texture.py", line 168, in affine_transformation
E       texture_object = _create_texture_object(data,
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.Np3X0NVCM9/cupy/cupyx/_texture.py", line 98, in _create_texture_object
E       array = texture.CUDAarray(texture_fmt, *data.shape[::-1])
E     File "cupy/cuda/texture.pyx", line 296, in cupy.cuda.texture.CUDAarray.__init__
E       self.ptr = runtime.malloc3DArray(desc.ptr, width, height, depth,
E     File "cupy_backends/cuda/api/runtime.pyx", line 593, in cupy_backends.cuda.api.runtime.malloc3DArray
E       check_status(status)
E     File "cupy_backends/cuda/api/runtime.pyx", line 265, in cupy_backends.cuda.api.runtime.check_status
E       raise CUDARuntimeError(status)
E   cupy_backends.cuda.api.runtime.CUDARuntimeError: hipErrorUnknown: hipErrorUnknown

cupy_backends/cuda/api/runtime.pyx:265: AssertionError
----------------------------- Captured stderr call -----------------------------
Traceback (most recent call last):
  File "cupy_backends/cuda/api/runtime.pyx", line 644, in cupy_backends.cuda.api.runtime.freeArray
    check_status(status)
  File "cupy_backends/cuda/api/runtime.pyx", line 265, in cupy_backends.cuda.api.runtime.check_status
    raise CUDARuntimeError(status)
cupy_backends.cuda.api.runtime.CUDARuntimeError: hipErrorUnknown: hipErrorUnknown
_ TestAffineTransformTextureMemory.test_affine_transform_texture_memory[_param_270_{mode='nearest', order=0, output='empty', output_shape=None, shape=(10, 20, 30), theta=180}] _

self = <<cupyx_tests.scipy_tests.ndimage_tests.test_interpolation.TestAffineTransformTextureMemory object at 0x7fd705719310>  parameter: {'mode': 'nearest', 'order': 0, 'output': 'empty', 'output_shape': None, 'shape': (10, 20, 30), 'theta': 180}>
xp = <module 'cupy' from '/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.Np3X0NVCM9/cupy/cupy/__init__.py'>
scp = <module 'cupyx.scipy' from '/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.Np3X0NVCM9/cupy/cupyx/scipy/__init__.py'>

    @testing.numpy_cupy_allclose(atol=0.1, scipy_name='scp')
    def test_affine_transform_texture_memory(self, xp, scp):
        a = xp.ones(self.shape, dtype=xp.float32)
        center = numpy.divide(numpy.subtract(self.shape, 1), 2)
    
        if len(self.shape) == 2:
            matrix = self._2d_rotation_matrix(self.theta, center)
        elif len(self.shape) == 3:
            matrix = self._3d_rotation_matrix(self.theta, center)
        else:
            return pytest.xfail('Unsupported shape')
    
        if self.output == 'empty':
            output = xp.empty(self.shape, dtype=xp.float32)
            if self.output_shape:
                return pytest.skip('This combination is tested in '
                                   'test_invalid_texture_arguments')
        else:
            output = self.output
    
        if self.output_shape:
            output_shape = (self.output_shape, ) * len(self.shape)
        else:
            output_shape = self.output_shape
    
        if xp == cupy:
            m = cupyx.scipy.ndimage.affine_transform
            matrix = cupy.array(matrix)
>           return m(a, matrix, output_shape=output_shape,
                     output=output, order=self.order,
                     mode=self.mode, texture_memory=True)

tests/cupyx_tests/scipy_tests/ndimage_tests/test_interpolation.py:398: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
cupyx/scipy/ndimage/interpolation.py:376: in affine_transform
    return _texture.affine_transformation(data=input,
cupyx/_texture.py:168: in affine_transformation
    texture_object = _create_texture_object(data,
cupyx/_texture.py:98: in _create_texture_object
    array = texture.CUDAarray(texture_fmt, *data.shape[::-1])
cupy/cuda/texture.pyx:296: in cupy.cuda.texture.CUDAarray.__init__
    self.ptr = runtime.malloc3DArray(desc.ptr, width, height, depth,
cupy_backends/cuda/api/runtime.pyx:593: in cupy_backends.cuda.api.runtime.malloc3DArray
    check_status(status)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

>   raise CUDARuntimeError(status)
E   AssertionError: Only cupy raises error
E   
E   Traceback (most recent call last):
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.Np3X0NVCM9/cupy/cupy/testing/_helper.py", line 47, in _call_func
E       result = impl(self, *args, **kw)
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.Np3X0NVCM9/cupy/tests/cupyx_tests/scipy_tests/ndimage_tests/test_interpolation.py", line 398, in test_affine_transform_texture_memory
E       return m(a, matrix, output_shape=output_shape,
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.Np3X0NVCM9/cupy/cupyx/scipy/ndimage/interpolation.py", line 376, in affine_transform
E       return _texture.affine_transformation(data=input,
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.Np3X0NVCM9/cupy/cupyx/_texture.py", line 168, in affine_transformation
E       texture_object = _create_texture_object(data,
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.Np3X0NVCM9/cupy/cupyx/_texture.py", line 98, in _create_texture_object
E       array = texture.CUDAarray(texture_fmt, *data.shape[::-1])
E     File "cupy/cuda/texture.pyx", line 296, in cupy.cuda.texture.CUDAarray.__init__
E       self.ptr = runtime.malloc3DArray(desc.ptr, width, height, depth,
E     File "cupy_backends/cuda/api/runtime.pyx", line 593, in cupy_backends.cuda.api.runtime.malloc3DArray
E       check_status(status)
E     File "cupy_backends/cuda/api/runtime.pyx", line 265, in cupy_backends.cuda.api.runtime.check_status
E       raise CUDARuntimeError(status)
E   cupy_backends.cuda.api.runtime.CUDARuntimeError: hipErrorUnknown: hipErrorUnknown

cupy_backends/cuda/api/runtime.pyx:265: AssertionError
----------------------------- Captured stderr call -----------------------------
Traceback (most recent call last):
  File "cupy_backends/cuda/api/runtime.pyx", line 644, in cupy_backends.cuda.api.runtime.freeArray
    check_status(status)
  File "cupy_backends/cuda/api/runtime.pyx", line 265, in cupy_backends.cuda.api.runtime.check_status
    raise CUDARuntimeError(status)
cupy_backends.cuda.api.runtime.CUDARuntimeError: hipErrorUnknown: hipErrorUnknown
_ TestAffineTransformTextureMemory.test_affine_transform_texture_memory[_param_271_{mode='nearest', order=0, output='empty', output_shape=None, shape=(10, 20, 30), theta=270}] _

self = <<cupyx_tests.scipy_tests.ndimage_tests.test_interpolation.TestAffineTransformTextureMemory object at 0x7fd705833fd0>  parameter: {'mode': 'nearest', 'order': 0, 'output': 'empty', 'output_shape': None, 'shape': (10, 20, 30), 'theta': 270}>
xp = <module 'cupy' from '/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.Np3X0NVCM9/cupy/cupy/__init__.py'>
scp = <module 'cupyx.scipy' from '/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.Np3X0NVCM9/cupy/cupyx/scipy/__init__.py'>

    @testing.numpy_cupy_allclose(atol=0.1, scipy_name='scp')
    def test_affine_transform_texture_memory(self, xp, scp):
        a = xp.ones(self.shape, dtype=xp.float32)
        center = numpy.divide(numpy.subtract(self.shape, 1), 2)
    
        if len(self.shape) == 2:
            matrix = self._2d_rotation_matrix(self.theta, center)
        elif len(self.shape) == 3:
            matrix = self._3d_rotation_matrix(self.theta, center)
        else:
            return pytest.xfail('Unsupported shape')
    
        if self.output == 'empty':
            output = xp.empty(self.shape, dtype=xp.float32)
            if self.output_shape:
                return pytest.skip('This combination is tested in '
                                   'test_invalid_texture_arguments')
        else:
            output = self.output
    
        if self.output_shape:
            output_shape = (self.output_shape, ) * len(self.shape)
        else:
            output_shape = self.output_shape
    
        if xp == cupy:
            m = cupyx.scipy.ndimage.affine_transform
            matrix = cupy.array(matrix)
>           return m(a, matrix, output_shape=output_shape,
                     output=output, order=self.order,
                     mode=self.mode, texture_memory=True)

tests/cupyx_tests/scipy_tests/ndimage_tests/test_interpolation.py:398: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
cupyx/scipy/ndimage/interpolation.py:376: in affine_transform
    return _texture.affine_transformation(data=input,
cupyx/_texture.py:168: in affine_transformation
    texture_object = _create_texture_object(data,
cupyx/_texture.py:98: in _create_texture_object
    array = texture.CUDAarray(texture_fmt, *data.shape[::-1])
cupy/cuda/texture.pyx:296: in cupy.cuda.texture.CUDAarray.__init__
    self.ptr = runtime.malloc3DArray(desc.ptr, width, height, depth,
cupy_backends/cuda/api/runtime.pyx:593: in cupy_backends.cuda.api.runtime.malloc3DArray
    check_status(status)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

>   raise CUDARuntimeError(status)
E   AssertionError: Only cupy raises error
E   
E   Traceback (most recent call last):
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.Np3X0NVCM9/cupy/cupy/testing/_helper.py", line 47, in _call_func
E       result = impl(self, *args, **kw)
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.Np3X0NVCM9/cupy/tests/cupyx_tests/scipy_tests/ndimage_tests/test_interpolation.py", line 398, in test_affine_transform_texture_memory
E       return m(a, matrix, output_shape=output_shape,
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.Np3X0NVCM9/cupy/cupyx/scipy/ndimage/interpolation.py", line 376, in affine_transform
E       return _texture.affine_transformation(data=input,
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.Np3X0NVCM9/cupy/cupyx/_texture.py", line 168, in affine_transformation
E       texture_object = _create_texture_object(data,
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.Np3X0NVCM9/cupy/cupyx/_texture.py", line 98, in _create_texture_object
E       array = texture.CUDAarray(texture_fmt, *data.shape[::-1])
E     File "cupy/cuda/texture.pyx", line 296, in cupy.cuda.texture.CUDAarray.__init__
E       self.ptr = runtime.malloc3DArray(desc.ptr, width, height, depth,
E     File "cupy_backends/cuda/api/runtime.pyx", line 593, in cupy_backends.cuda.api.runtime.malloc3DArray
E       check_status(status)
E     File "cupy_backends/cuda/api/runtime.pyx", line 265, in cupy_backends.cuda.api.runtime.check_status
E       raise CUDARuntimeError(status)
E   cupy_backends.cuda.api.runtime.CUDARuntimeError: hipErrorUnknown: hipErrorUnknown

cupy_backends/cuda/api/runtime.pyx:265: AssertionError
----------------------------- Captured stderr call -----------------------------
Traceback (most recent call last):
  File "cupy_backends/cuda/api/runtime.pyx", line 644, in cupy_backends.cuda.api.runtime.freeArray
    check_status(status)
  File "cupy_backends/cuda/api/runtime.pyx", line 265, in cupy_backends.cuda.api.runtime.check_status
    raise CUDARuntimeError(status)
cupy_backends.cuda.api.runtime.CUDARuntimeError: hipErrorUnknown: hipErrorUnknown
_ TestAffineTransformTextureMemory.test_affine_transform_texture_memory[_param_288_{mode='nearest', order=1, output=None, output_shape=None, shape=(100, 100), theta=0}] _

self = <<cupyx_tests.scipy_tests.ndimage_tests.test_interpolation.TestAffineTransformTextureMemory object at 0x7fd70587c7f0>  parameter: {'mode': 'nearest', 'order': 1, 'output': None, 'output_shape': None, 'shape': (100, 100), 'theta': 0}>
xp = <module 'cupy' from '/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.Np3X0NVCM9/cupy/cupy/__init__.py'>
scp = <module 'cupyx.scipy' from '/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.Np3X0NVCM9/cupy/cupyx/scipy/__init__.py'>

    @testing.numpy_cupy_allclose(atol=0.1, scipy_name='scp')
    def test_affine_transform_texture_memory(self, xp, scp):
        a = xp.ones(self.shape, dtype=xp.float32)
        center = numpy.divide(numpy.subtract(self.shape, 1), 2)
    
        if len(self.shape) == 2:
            matrix = self._2d_rotation_matrix(self.theta, center)
        elif len(self.shape) == 3:
            matrix = self._3d_rotation_matrix(self.theta, center)
        else:
            return pytest.xfail('Unsupported shape')
    
        if self.output == 'empty':
            output = xp.empty(self.shape, dtype=xp.float32)
            if self.output_shape:
                return pytest.skip('This combination is tested in '
                                   'test_invalid_texture_arguments')
        else:
            output = self.output
    
        if self.output_shape:
            output_shape = (self.output_shape, ) * len(self.shape)
        else:
            output_shape = self.output_shape
    
        if xp == cupy:
            m = cupyx.scipy.ndimage.affine_transform
            matrix = cupy.array(matrix)
>           return m(a, matrix, output_shape=output_shape,
                     output=output, order=self.order,
                     mode=self.mode, texture_memory=True)

tests/cupyx_tests/scipy_tests/ndimage_tests/test_interpolation.py:398: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
cupyx/scipy/ndimage/interpolation.py:376: in affine_transform
    return _texture.affine_transformation(data=input,
cupyx/_texture.py:168: in affine_transformation
    texture_object = _create_texture_object(data,
cupyx/_texture.py:98: in _create_texture_object
    array = texture.CUDAarray(texture_fmt, *data.shape[::-1])
cupy/cuda/texture.pyx:296: in cupy.cuda.texture.CUDAarray.__init__
    self.ptr = runtime.malloc3DArray(desc.ptr, width, height, depth,
cupy_backends/cuda/api/runtime.pyx:593: in cupy_backends.cuda.api.runtime.malloc3DArray
    check_status(status)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

>   raise CUDARuntimeError(status)
E   AssertionError: Only cupy raises error
E   
E   Traceback (most recent call last):
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.Np3X0NVCM9/cupy/cupy/testing/_helper.py", line 47, in _call_func
E       result = impl(self, *args, **kw)
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.Np3X0NVCM9/cupy/tests/cupyx_tests/scipy_tests/ndimage_tests/test_interpolation.py", line 398, in test_affine_transform_texture_memory
E       return m(a, matrix, output_shape=output_shape,
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.Np3X0NVCM9/cupy/cupyx/scipy/ndimage/interpolation.py", line 376, in affine_transform
E       return _texture.affine_transformation(data=input,
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.Np3X0NVCM9/cupy/cupyx/_texture.py", line 168, in affine_transformation
E       texture_object = _create_texture_object(data,
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.Np3X0NVCM9/cupy/cupyx/_texture.py", line 98, in _create_texture_object
E       array = texture.CUDAarray(texture_fmt, *data.shape[::-1])
E     File "cupy/cuda/texture.pyx", line 296, in cupy.cuda.texture.CUDAarray.__init__
E       self.ptr = runtime.malloc3DArray(desc.ptr, width, height, depth,
E     File "cupy_backends/cuda/api/runtime.pyx", line 593, in cupy_backends.cuda.api.runtime.malloc3DArray
E       check_status(status)
E     File "cupy_backends/cuda/api/runtime.pyx", line 265, in cupy_backends.cuda.api.runtime.check_status
E       raise CUDARuntimeError(status)
E   cupy_backends.cuda.api.runtime.CUDARuntimeError: hipErrorUnknown: hipErrorUnknown

cupy_backends/cuda/api/runtime.pyx:265: AssertionError
----------------------------- Captured stderr call -----------------------------
Traceback (most recent call last):
  File "cupy_backends/cuda/api/runtime.pyx", line 644, in cupy_backends.cuda.api.runtime.freeArray
    check_status(status)
  File "cupy_backends/cuda/api/runtime.pyx", line 265, in cupy_backends.cuda.api.runtime.check_status
    raise CUDARuntimeError(status)
cupy_backends.cuda.api.runtime.CUDARuntimeError: hipErrorUnknown: hipErrorUnknown
_ TestAffineTransformTextureMemory.test_affine_transform_texture_memory[_param_289_{mode='nearest', order=1, output=None, output_shape=None, shape=(100, 100), theta=90}] _

self = <<cupyx_tests.scipy_tests.ndimage_tests.test_interpolation.TestAffineTransformTextureMemory object at 0x7fd7058334f0>  parameter: {'mode': 'nearest', 'order': 1, 'output': None, 'output_shape': None, 'shape': (100, 100), 'theta': 90}>
xp = <module 'cupy' from '/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.Np3X0NVCM9/cupy/cupy/__init__.py'>
scp = <module 'cupyx.scipy' from '/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.Np3X0NVCM9/cupy/cupyx/scipy/__init__.py'>

    @testing.numpy_cupy_allclose(atol=0.1, scipy_name='scp')
    def test_affine_transform_texture_memory(self, xp, scp):
        a = xp.ones(self.shape, dtype=xp.float32)
        center = numpy.divide(numpy.subtract(self.shape, 1), 2)
    
        if len(self.shape) == 2:
            matrix = self._2d_rotation_matrix(self.theta, center)
        elif len(self.shape) == 3:
            matrix = self._3d_rotation_matrix(self.theta, center)
        else:
            return pytest.xfail('Unsupported shape')
    
        if self.output == 'empty':
            output = xp.empty(self.shape, dtype=xp.float32)
            if self.output_shape:
                return pytest.skip('This combination is tested in '
                                   'test_invalid_texture_arguments')
        else:
            output = self.output
    
        if self.output_shape:
            output_shape = (self.output_shape, ) * len(self.shape)
        else:
            output_shape = self.output_shape
    
        if xp == cupy:
            m = cupyx.scipy.ndimage.affine_transform
            matrix = cupy.array(matrix)
>           return m(a, matrix, output_shape=output_shape,
                     output=output, order=self.order,
                     mode=self.mode, texture_memory=True)

tests/cupyx_tests/scipy_tests/ndimage_tests/test_interpolation.py:398: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
cupyx/scipy/ndimage/interpolation.py:376: in affine_transform
    return _texture.affine_transformation(data=input,
cupyx/_texture.py:168: in affine_transformation
    texture_object = _create_texture_object(data,
cupyx/_texture.py:98: in _create_texture_object
    array = texture.CUDAarray(texture_fmt, *data.shape[::-1])
cupy/cuda/texture.pyx:296: in cupy.cuda.texture.CUDAarray.__init__
    self.ptr = runtime.malloc3DArray(desc.ptr, width, height, depth,
cupy_backends/cuda/api/runtime.pyx:593: in cupy_backends.cuda.api.runtime.malloc3DArray
    check_status(status)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

>   raise CUDARuntimeError(status)
E   AssertionError: Only cupy raises error
E   
E   Traceback (most recent call last):
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.Np3X0NVCM9/cupy/cupy/testing/_helper.py", line 47, in _call_func
E       result = impl(self, *args, **kw)
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.Np3X0NVCM9/cupy/tests/cupyx_tests/scipy_tests/ndimage_tests/test_interpolation.py", line 398, in test_affine_transform_texture_memory
E       return m(a, matrix, output_shape=output_shape,
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.Np3X0NVCM9/cupy/cupyx/scipy/ndimage/interpolation.py", line 376, in affine_transform
E       return _texture.affine_transformation(data=input,
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.Np3X0NVCM9/cupy/cupyx/_texture.py", line 168, in affine_transformation
E       texture_object = _create_texture_object(data,
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.Np3X0NVCM9/cupy/cupyx/_texture.py", line 98, in _create_texture_object
E       array = texture.CUDAarray(texture_fmt, *data.shape[::-1])
E     File "cupy/cuda/texture.pyx", line 296, in cupy.cuda.texture.CUDAarray.__init__
E       self.ptr = runtime.malloc3DArray(desc.ptr, width, height, depth,
E     File "cupy_backends/cuda/api/runtime.pyx", line 593, in cupy_backends.cuda.api.runtime.malloc3DArray
E       check_status(status)
E     File "cupy_backends/cuda/api/runtime.pyx", line 265, in cupy_backends.cuda.api.runtime.check_status
E       raise CUDARuntimeError(status)
E   cupy_backends.cuda.api.runtime.CUDARuntimeError: hipErrorUnknown: hipErrorUnknown

cupy_backends/cuda/api/runtime.pyx:265: AssertionError
----------------------------- Captured stderr call -----------------------------
Traceback (most recent call last):
  File "cupy_backends/cuda/api/runtime.pyx", line 644, in cupy_backends.cuda.api.runtime.freeArray
    check_status(status)
  File "cupy_backends/cuda/api/runtime.pyx", line 265, in cupy_backends.cuda.api.runtime.check_status
    raise CUDARuntimeError(status)
cupy_backends.cuda.api.runtime.CUDARuntimeError: hipErrorUnknown: hipErrorUnknown
_ TestAffineTransformTextureMemory.test_affine_transform_texture_memory[_param_290_{mode='nearest', order=1, output=None, output_shape=None, shape=(100, 100), theta=180}] _

self = <<cupyx_tests.scipy_tests.ndimage_tests.test_interpolation.TestAffineTransformTextureMemory object at 0x7fd70880e550>  parameter: {'mode': 'nearest', 'order': 1, 'output': None, 'output_shape': None, 'shape': (100, 100), 'theta': 180}>
xp = <module 'cupy' from '/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.Np3X0NVCM9/cupy/cupy/__init__.py'>
scp = <module 'cupyx.scipy' from '/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.Np3X0NVCM9/cupy/cupyx/scipy/__init__.py'>

    @testing.numpy_cupy_allclose(atol=0.1, scipy_name='scp')
    def test_affine_transform_texture_memory(self, xp, scp):
        a = xp.ones(self.shape, dtype=xp.float32)
        center = numpy.divide(numpy.subtract(self.shape, 1), 2)
    
        if len(self.shape) == 2:
            matrix = self._2d_rotation_matrix(self.theta, center)
        elif len(self.shape) == 3:
            matrix = self._3d_rotation_matrix(self.theta, center)
        else:
            return pytest.xfail('Unsupported shape')
    
        if self.output == 'empty':
            output = xp.empty(self.shape, dtype=xp.float32)
            if self.output_shape:
                return pytest.skip('This combination is tested in '
                                   'test_invalid_texture_arguments')
        else:
            output = self.output
    
        if self.output_shape:
            output_shape = (self.output_shape, ) * len(self.shape)
        else:
            output_shape = self.output_shape
    
        if xp == cupy:
            m = cupyx.scipy.ndimage.affine_transform
            matrix = cupy.array(matrix)
>           return m(a, matrix, output_shape=output_shape,
                     output=output, order=self.order,
                     mode=self.mode, texture_memory=True)

tests/cupyx_tests/scipy_tests/ndimage_tests/test_interpolation.py:398: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
cupyx/scipy/ndimage/interpolation.py:376: in affine_transform
    return _texture.affine_transformation(data=input,
cupyx/_texture.py:168: in affine_transformation
    texture_object = _create_texture_object(data,
cupyx/_texture.py:98: in _create_texture_object
    array = texture.CUDAarray(texture_fmt, *data.shape[::-1])
cupy/cuda/texture.pyx:296: in cupy.cuda.texture.CUDAarray.__init__
    self.ptr = runtime.malloc3DArray(desc.ptr, width, height, depth,
cupy_backends/cuda/api/runtime.pyx:593: in cupy_backends.cuda.api.runtime.malloc3DArray
    check_status(status)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

>   raise CUDARuntimeError(status)
E   AssertionError: Only cupy raises error
E   
E   Traceback (most recent call last):
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.Np3X0NVCM9/cupy/cupy/testing/_helper.py", line 47, in _call_func
E       result = impl(self, *args, **kw)
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.Np3X0NVCM9/cupy/tests/cupyx_tests/scipy_tests/ndimage_tests/test_interpolation.py", line 398, in test_affine_transform_texture_memory
E       return m(a, matrix, output_shape=output_shape,
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.Np3X0NVCM9/cupy/cupyx/scipy/ndimage/interpolation.py", line 376, in affine_transform
E       return _texture.affine_transformation(data=input,
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.Np3X0NVCM9/cupy/cupyx/_texture.py", line 168, in affine_transformation
E       texture_object = _create_texture_object(data,
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.Np3X0NVCM9/cupy/cupyx/_texture.py", line 98, in _create_texture_object
E       array = texture.CUDAarray(texture_fmt, *data.shape[::-1])
E     File "cupy/cuda/texture.pyx", line 296, in cupy.cuda.texture.CUDAarray.__init__
E       self.ptr = runtime.malloc3DArray(desc.ptr, width, height, depth,
E     File "cupy_backends/cuda/api/runtime.pyx", line 593, in cupy_backends.cuda.api.runtime.malloc3DArray
E       check_status(status)
E     File "cupy_backends/cuda/api/runtime.pyx", line 265, in cupy_backends.cuda.api.runtime.check_status
E       raise CUDARuntimeError(status)
E   cupy_backends.cuda.api.runtime.CUDARuntimeError: hipErrorUnknown: hipErrorUnknown

cupy_backends/cuda/api/runtime.pyx:265: AssertionError
----------------------------- Captured stderr call -----------------------------
Traceback (most recent call last):
  File "cupy_backends/cuda/api/runtime.pyx", line 644, in cupy_backends.cuda.api.runtime.freeArray
    check_status(status)
  File "cupy_backends/cuda/api/runtime.pyx", line 265, in cupy_backends.cuda.api.runtime.check_status
    raise CUDARuntimeError(status)
cupy_backends.cuda.api.runtime.CUDARuntimeError: hipErrorUnknown: hipErrorUnknown
_ TestAffineTransformTextureMemory.test_affine_transform_texture_memory[_param_291_{mode='nearest', order=1, output=None, output_shape=None, shape=(100, 100), theta=270}] _

self = <<cupyx_tests.scipy_tests.ndimage_tests.test_interpolation.TestAffineTransformTextureMemory object at 0x7fd705609400>  parameter: {'mode': 'nearest', 'order': 1, 'output': None, 'output_shape': None, 'shape': (100, 100), 'theta': 270}>
xp = <module 'cupy' from '/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.Np3X0NVCM9/cupy/cupy/__init__.py'>
scp = <module 'cupyx.scipy' from '/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.Np3X0NVCM9/cupy/cupyx/scipy/__init__.py'>

    @testing.numpy_cupy_allclose(atol=0.1, scipy_name='scp')
    def test_affine_transform_texture_memory(self, xp, scp):
        a = xp.ones(self.shape, dtype=xp.float32)
        center = numpy.divide(numpy.subtract(self.shape, 1), 2)
    
        if len(self.shape) == 2:
            matrix = self._2d_rotation_matrix(self.theta, center)
        elif len(self.shape) == 3:
            matrix = self._3d_rotation_matrix(self.theta, center)
        else:
            return pytest.xfail('Unsupported shape')
    
        if self.output == 'empty':
            output = xp.empty(self.shape, dtype=xp.float32)
            if self.output_shape:
                return pytest.skip('This combination is tested in '
                                   'test_invalid_texture_arguments')
        else:
            output = self.output
    
        if self.output_shape:
            output_shape = (self.output_shape, ) * len(self.shape)
        else:
            output_shape = self.output_shape
    
        if xp == cupy:
            m = cupyx.scipy.ndimage.affine_transform
            matrix = cupy.array(matrix)
>           return m(a, matrix, output_shape=output_shape,
                     output=output, order=self.order,
                     mode=self.mode, texture_memory=True)

tests/cupyx_tests/scipy_tests/ndimage_tests/test_interpolation.py:398: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
cupyx/scipy/ndimage/interpolation.py:376: in affine_transform
    return _texture.affine_transformation(data=input,
cupyx/_texture.py:168: in affine_transformation
    texture_object = _create_texture_object(data,
cupyx/_texture.py:98: in _create_texture_object
    array = texture.CUDAarray(texture_fmt, *data.shape[::-1])
cupy/cuda/texture.pyx:296: in cupy.cuda.texture.CUDAarray.__init__
    self.ptr = runtime.malloc3DArray(desc.ptr, width, height, depth,
cupy_backends/cuda/api/runtime.pyx:593: in cupy_backends.cuda.api.runtime.malloc3DArray
    check_status(status)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

>   raise CUDARuntimeError(status)
E   AssertionError: Only cupy raises error
E   
E   Traceback (most recent call last):
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.Np3X0NVCM9/cupy/cupy/testing/_helper.py", line 47, in _call_func
E       result = impl(self, *args, **kw)
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.Np3X0NVCM9/cupy/tests/cupyx_tests/scipy_tests/ndimage_tests/test_interpolation.py", line 398, in test_affine_transform_texture_memory
E       return m(a, matrix, output_shape=output_shape,
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.Np3X0NVCM9/cupy/cupyx/scipy/ndimage/interpolation.py", line 376, in affine_transform
E       return _texture.affine_transformation(data=input,
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.Np3X0NVCM9/cupy/cupyx/_texture.py", line 168, in affine_transformation
E       texture_object = _create_texture_object(data,
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.Np3X0NVCM9/cupy/cupyx/_texture.py", line 98, in _create_texture_object
E       array = texture.CUDAarray(texture_fmt, *data.shape[::-1])
E     File "cupy/cuda/texture.pyx", line 296, in cupy.cuda.texture.CUDAarray.__init__
E       self.ptr = runtime.malloc3DArray(desc.ptr, width, height, depth,
E     File "cupy_backends/cuda/api/runtime.pyx", line 593, in cupy_backends.cuda.api.runtime.malloc3DArray
E       check_status(status)
E     File "cupy_backends/cuda/api/runtime.pyx", line 265, in cupy_backends.cuda.api.runtime.check_status
E       raise CUDARuntimeError(status)
E   cupy_backends.cuda.api.runtime.CUDARuntimeError: hipErrorUnknown: hipErrorUnknown

cupy_backends/cuda/api/runtime.pyx:265: AssertionError
----------------------------- Captured stderr call -----------------------------
Traceback (most recent call last):
  File "cupy_backends/cuda/api/runtime.pyx", line 644, in cupy_backends.cuda.api.runtime.freeArray
    check_status(status)
  File "cupy_backends/cuda/api/runtime.pyx", line 265, in cupy_backends.cuda.api.runtime.check_status
    raise CUDARuntimeError(status)
cupy_backends.cuda.api.runtime.CUDARuntimeError: hipErrorUnknown: hipErrorUnknown
_ TestAffineTransformTextureMemory.test_affine_transform_texture_memory[_param_292_{mode='nearest', order=1, output=None, output_shape=None, shape=(10, 20), theta=0}] _

self = <<cupyx_tests.scipy_tests.ndimage_tests.test_interpolation.TestAffineTransformTextureMemory object at 0x7fd7056ec460>  parameter: {'mode': 'nearest', 'order': 1, 'output': None, 'output_shape': None, 'shape': (10, 20), 'theta': 0}>
xp = <module 'cupy' from '/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.Np3X0NVCM9/cupy/cupy/__init__.py'>
scp = <module 'cupyx.scipy' from '/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.Np3X0NVCM9/cupy/cupyx/scipy/__init__.py'>

    @testing.numpy_cupy_allclose(atol=0.1, scipy_name='scp')
    def test_affine_transform_texture_memory(self, xp, scp):
        a = xp.ones(self.shape, dtype=xp.float32)
        center = numpy.divide(numpy.subtract(self.shape, 1), 2)
    
        if len(self.shape) == 2:
            matrix = self._2d_rotation_matrix(self.theta, center)
        elif len(self.shape) == 3:
            matrix = self._3d_rotation_matrix(self.theta, center)
        else:
            return pytest.xfail('Unsupported shape')
    
        if self.output == 'empty':
            output = xp.empty(self.shape, dtype=xp.float32)
            if self.output_shape:
                return pytest.skip('This combination is tested in '
                                   'test_invalid_texture_arguments')
        else:
            output = self.output
    
        if self.output_shape:
            output_shape = (self.output_shape, ) * len(self.shape)
        else:
            output_shape = self.output_shape
    
        if xp == cupy:
            m = cupyx.scipy.ndimage.affine_transform
            matrix = cupy.array(matrix)
>           return m(a, matrix, output_shape=output_shape,
                     output=output, order=self.order,
                     mode=self.mode, texture_memory=True)

tests/cupyx_tests/scipy_tests/ndimage_tests/test_interpolation.py:398: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
cupyx/scipy/ndimage/interpolation.py:376: in affine_transform
    return _texture.affine_transformation(data=input,
cupyx/_texture.py:168: in affine_transformation
    texture_object = _create_texture_object(data,
cupyx/_texture.py:98: in _create_texture_object
    array = texture.CUDAarray(texture_fmt, *data.shape[::-1])
cupy/cuda/texture.pyx:296: in cupy.cuda.texture.CUDAarray.__init__
    self.ptr = runtime.malloc3DArray(desc.ptr, width, height, depth,
cupy_backends/cuda/api/runtime.pyx:593: in cupy_backends.cuda.api.runtime.malloc3DArray
    check_status(status)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

>   raise CUDARuntimeError(status)
E   AssertionError: Only cupy raises error
E   
E   Traceback (most recent call last):
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.Np3X0NVCM9/cupy/cupy/testing/_helper.py", line 47, in _call_func
E       result = impl(self, *args, **kw)
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.Np3X0NVCM9/cupy/tests/cupyx_tests/scipy_tests/ndimage_tests/test_interpolation.py", line 398, in test_affine_transform_texture_memory
E       return m(a, matrix, output_shape=output_shape,
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.Np3X0NVCM9/cupy/cupyx/scipy/ndimage/interpolation.py", line 376, in affine_transform
E       return _texture.affine_transformation(data=input,
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.Np3X0NVCM9/cupy/cupyx/_texture.py", line 168, in affine_transformation
E       texture_object = _create_texture_object(data,
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.Np3X0NVCM9/cupy/cupyx/_texture.py", line 98, in _create_texture_object
E       array = texture.CUDAarray(texture_fmt, *data.shape[::-1])
E     File "cupy/cuda/texture.pyx", line 296, in cupy.cuda.texture.CUDAarray.__init__
E       self.ptr = runtime.malloc3DArray(desc.ptr, width, height, depth,
E     File "cupy_backends/cuda/api/runtime.pyx", line 593, in cupy_backends.cuda.api.runtime.malloc3DArray
E       check_status(status)
E     File "cupy_backends/cuda/api/runtime.pyx", line 265, in cupy_backends.cuda.api.runtime.check_status
E       raise CUDARuntimeError(status)
E   cupy_backends.cuda.api.runtime.CUDARuntimeError: hipErrorUnknown: hipErrorUnknown

cupy_backends/cuda/api/runtime.pyx:265: AssertionError
----------------------------- Captured stderr call -----------------------------
Traceback (most recent call last):
  File "cupy_backends/cuda/api/runtime.pyx", line 644, in cupy_backends.cuda.api.runtime.freeArray
    check_status(status)
  File "cupy_backends/cuda/api/runtime.pyx", line 265, in cupy_backends.cuda.api.runtime.check_status
    raise CUDARuntimeError(status)
cupy_backends.cuda.api.runtime.CUDARuntimeError: hipErrorUnknown: hipErrorUnknown
_ TestAffineTransformTextureMemory.test_affine_transform_texture_memory[_param_293_{mode='nearest', order=1, output=None, output_shape=None, shape=(10, 20), theta=90}] _

self = <<cupyx_tests.scipy_tests.ndimage_tests.test_interpolation.TestAffineTransformTextureMemory object at 0x7fd70565d190>  parameter: {'mode': 'nearest', 'order': 1, 'output': None, 'output_shape': None, 'shape': (10, 20), 'theta': 90}>
xp = <module 'cupy' from '/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.Np3X0NVCM9/cupy/cupy/__init__.py'>
scp = <module 'cupyx.scipy' from '/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.Np3X0NVCM9/cupy/cupyx/scipy/__init__.py'>

    @testing.numpy_cupy_allclose(atol=0.1, scipy_name='scp')
    def test_affine_transform_texture_memory(self, xp, scp):
        a = xp.ones(self.shape, dtype=xp.float32)
        center = numpy.divide(numpy.subtract(self.shape, 1), 2)
    
        if len(self.shape) == 2:
            matrix = self._2d_rotation_matrix(self.theta, center)
        elif len(self.shape) == 3:
            matrix = self._3d_rotation_matrix(self.theta, center)
        else:
            return pytest.xfail('Unsupported shape')
    
        if self.output == 'empty':
            output = xp.empty(self.shape, dtype=xp.float32)
            if self.output_shape:
                return pytest.skip('This combination is tested in '
                                   'test_invalid_texture_arguments')
        else:
            output = self.output
    
        if self.output_shape:
            output_shape = (self.output_shape, ) * len(self.shape)
        else:
            output_shape = self.output_shape
    
        if xp == cupy:
            m = cupyx.scipy.ndimage.affine_transform
            matrix = cupy.array(matrix)
>           return m(a, matrix, output_shape=output_shape,
                     output=output, order=self.order,
                     mode=self.mode, texture_memory=True)

tests/cupyx_tests/scipy_tests/ndimage_tests/test_interpolation.py:398: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
cupyx/scipy/ndimage/interpolation.py:376: in affine_transform
    return _texture.affine_transformation(data=input,
cupyx/_texture.py:168: in affine_transformation
    texture_object = _create_texture_object(data,
cupyx/_texture.py:98: in _create_texture_object
    array = texture.CUDAarray(texture_fmt, *data.shape[::-1])
cupy/cuda/texture.pyx:296: in cupy.cuda.texture.CUDAarray.__init__
    self.ptr = runtime.malloc3DArray(desc.ptr, width, height, depth,
cupy_backends/cuda/api/runtime.pyx:593: in cupy_backends.cuda.api.runtime.malloc3DArray
    check_status(status)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

>   raise CUDARuntimeError(status)
E   AssertionError: Only cupy raises error
E   
E   Traceback (most recent call last):
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.Np3X0NVCM9/cupy/cupy/testing/_helper.py", line 47, in _call_func
E       result = impl(self, *args, **kw)
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.Np3X0NVCM9/cupy/tests/cupyx_tests/scipy_tests/ndimage_tests/test_interpolation.py", line 398, in test_affine_transform_texture_memory
E       return m(a, matrix, output_shape=output_shape,
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.Np3X0NVCM9/cupy/cupyx/scipy/ndimage/interpolation.py", line 376, in affine_transform
E       return _texture.affine_transformation(data=input,
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.Np3X0NVCM9/cupy/cupyx/_texture.py", line 168, in affine_transformation
E       texture_object = _create_texture_object(data,
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.Np3X0NVCM9/cupy/cupyx/_texture.py", line 98, in _create_texture_object
E       array = texture.CUDAarray(texture_fmt, *data.shape[::-1])
E     File "cupy/cuda/texture.pyx", line 296, in cupy.cuda.texture.CUDAarray.__init__
E       self.ptr = runtime.malloc3DArray(desc.ptr, width, height, depth,
E     File "cupy_backends/cuda/api/runtime.pyx", line 593, in cupy_backends.cuda.api.runtime.malloc3DArray
E       check_status(status)
E     File "cupy_backends/cuda/api/runtime.pyx", line 265, in cupy_backends.cuda.api.runtime.check_status
E       raise CUDARuntimeError(status)
E   cupy_backends.cuda.api.runtime.CUDARuntimeError: hipErrorUnknown: hipErrorUnknown

cupy_backends/cuda/api/runtime.pyx:265: AssertionError
----------------------------- Captured stderr call -----------------------------
Traceback (most recent call last):
  File "cupy_backends/cuda/api/runtime.pyx", line 644, in cupy_backends.cuda.api.runtime.freeArray
    check_status(status)
  File "cupy_backends/cuda/api/runtime.pyx", line 265, in cupy_backends.cuda.api.runtime.check_status
    raise CUDARuntimeError(status)
cupy_backends.cuda.api.runtime.CUDARuntimeError: hipErrorUnknown: hipErrorUnknown
_ TestAffineTransformTextureMemory.test_affine_transform_texture_memory[_param_294_{mode='nearest', order=1, output=None, output_shape=None, shape=(10, 20), theta=180}] _

self = <<cupyx_tests.scipy_tests.ndimage_tests.test_interpolation.TestAffineTransformTextureMemory object at 0x7fd819c43580>  parameter: {'mode': 'nearest', 'order': 1, 'output': None, 'output_shape': None, 'shape': (10, 20), 'theta': 180}>
xp = <module 'cupy' from '/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.Np3X0NVCM9/cupy/cupy/__init__.py'>
scp = <module 'cupyx.scipy' from '/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.Np3X0NVCM9/cupy/cupyx/scipy/__init__.py'>

    @testing.numpy_cupy_allclose(atol=0.1, scipy_name='scp')
    def test_affine_transform_texture_memory(self, xp, scp):
        a = xp.ones(self.shape, dtype=xp.float32)
        center = numpy.divide(numpy.subtract(self.shape, 1), 2)
    
        if len(self.shape) == 2:
            matrix = self._2d_rotation_matrix(self.theta, center)
        elif len(self.shape) == 3:
            matrix = self._3d_rotation_matrix(self.theta, center)
        else:
            return pytest.xfail('Unsupported shape')
    
        if self.output == 'empty':
            output = xp.empty(self.shape, dtype=xp.float32)
            if self.output_shape:
                return pytest.skip('This combination is tested in '
                                   'test_invalid_texture_arguments')
        else:
            output = self.output
    
        if self.output_shape:
            output_shape = (self.output_shape, ) * len(self.shape)
        else:
            output_shape = self.output_shape
    
        if xp == cupy:
            m = cupyx.scipy.ndimage.affine_transform
            matrix = cupy.array(matrix)
>           return m(a, matrix, output_shape=output_shape,
                     output=output, order=self.order,
                     mode=self.mode, texture_memory=True)

tests/cupyx_tests/scipy_tests/ndimage_tests/test_interpolation.py:398: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
cupyx/scipy/ndimage/interpolation.py:376: in affine_transform
    return _texture.affine_transformation(data=input,
cupyx/_texture.py:168: in affine_transformation
    texture_object = _create_texture_object(data,
cupyx/_texture.py:98: in _create_texture_object
    array = texture.CUDAarray(texture_fmt, *data.shape[::-1])
cupy/cuda/texture.pyx:296: in cupy.cuda.texture.CUDAarray.__init__
    self.ptr = runtime.malloc3DArray(desc.ptr, width, height, depth,
cupy_backends/cuda/api/runtime.pyx:593: in cupy_backends.cuda.api.runtime.malloc3DArray
    check_status(status)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

>   raise CUDARuntimeError(status)
E   AssertionError: Only cupy raises error
E   
E   Traceback (most recent call last):
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.Np3X0NVCM9/cupy/cupy/testing/_helper.py", line 47, in _call_func
E       result = impl(self, *args, **kw)
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.Np3X0NVCM9/cupy/tests/cupyx_tests/scipy_tests/ndimage_tests/test_interpolation.py", line 398, in test_affine_transform_texture_memory
E       return m(a, matrix, output_shape=output_shape,
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.Np3X0NVCM9/cupy/cupyx/scipy/ndimage/interpolation.py", line 376, in affine_transform
E       return _texture.affine_transformation(data=input,
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.Np3X0NVCM9/cupy/cupyx/_texture.py", line 168, in affine_transformation
E       texture_object = _create_texture_object(data,
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.Np3X0NVCM9/cupy/cupyx/_texture.py", line 98, in _create_texture_object
E       array = texture.CUDAarray(texture_fmt, *data.shape[::-1])
E     File "cupy/cuda/texture.pyx", line 296, in cupy.cuda.texture.CUDAarray.__init__
E       self.ptr = runtime.malloc3DArray(desc.ptr, width, height, depth,
E     File "cupy_backends/cuda/api/runtime.pyx", line 593, in cupy_backends.cuda.api.runtime.malloc3DArray
E       check_status(status)
E     File "cupy_backends/cuda/api/runtime.pyx", line 265, in cupy_backends.cuda.api.runtime.check_status
E       raise CUDARuntimeError(status)
E   cupy_backends.cuda.api.runtime.CUDARuntimeError: hipErrorUnknown: hipErrorUnknown

cupy_backends/cuda/api/runtime.pyx:265: AssertionError
----------------------------- Captured stderr call -----------------------------
Traceback (most recent call last):
  File "cupy_backends/cuda/api/runtime.pyx", line 644, in cupy_backends.cuda.api.runtime.freeArray
    check_status(status)
  File "cupy_backends/cuda/api/runtime.pyx", line 265, in cupy_backends.cuda.api.runtime.check_status
    raise CUDARuntimeError(status)
cupy_backends.cuda.api.runtime.CUDARuntimeError: hipErrorUnknown: hipErrorUnknown
_ TestAffineTransformTextureMemory.test_affine_transform_texture_memory[_param_295_{mode='nearest', order=1, output=None, output_shape=None, shape=(10, 20), theta=270}] _

self = <<cupyx_tests.scipy_tests.ndimage_tests.test_interpolation.TestAffineTransformTextureMemory object at 0x7fd705a3ca90>  parameter: {'mode': 'nearest', 'order': 1, 'output': None, 'output_shape': None, 'shape': (10, 20), 'theta': 270}>
xp = <module 'cupy' from '/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.Np3X0NVCM9/cupy/cupy/__init__.py'>
scp = <module 'cupyx.scipy' from '/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.Np3X0NVCM9/cupy/cupyx/scipy/__init__.py'>

    @testing.numpy_cupy_allclose(atol=0.1, scipy_name='scp')
    def test_affine_transform_texture_memory(self, xp, scp):
        a = xp.ones(self.shape, dtype=xp.float32)
        center = numpy.divide(numpy.subtract(self.shape, 1), 2)
    
        if len(self.shape) == 2:
            matrix = self._2d_rotation_matrix(self.theta, center)
        elif len(self.shape) == 3:
            matrix = self._3d_rotation_matrix(self.theta, center)
        else:
            return pytest.xfail('Unsupported shape')
    
        if self.output == 'empty':
            output = xp.empty(self.shape, dtype=xp.float32)
            if self.output_shape:
                return pytest.skip('This combination is tested in '
                                   'test_invalid_texture_arguments')
        else:
            output = self.output
    
        if self.output_shape:
            output_shape = (self.output_shape, ) * len(self.shape)
        else:
            output_shape = self.output_shape
    
        if xp == cupy:
            m = cupyx.scipy.ndimage.affine_transform
            matrix = cupy.array(matrix)
>           return m(a, matrix, output_shape=output_shape,
                     output=output, order=self.order,
                     mode=self.mode, texture_memory=True)

tests/cupyx_tests/scipy_tests/ndimage_tests/test_interpolation.py:398: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
cupyx/scipy/ndimage/interpolation.py:376: in affine_transform
    return _texture.affine_transformation(data=input,
cupyx/_texture.py:168: in affine_transformation
    texture_object = _create_texture_object(data,
cupyx/_texture.py:98: in _create_texture_object
    array = texture.CUDAarray(texture_fmt, *data.shape[::-1])
cupy/cuda/texture.pyx:296: in cupy.cuda.texture.CUDAarray.__init__
    self.ptr = runtime.malloc3DArray(desc.ptr, width, height, depth,
cupy_backends/cuda/api/runtime.pyx:593: in cupy_backends.cuda.api.runtime.malloc3DArray
    check_status(status)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

>   raise CUDARuntimeError(status)
E   AssertionError: Only cupy raises error
E   
E   Traceback (most recent call last):
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.Np3X0NVCM9/cupy/cupy/testing/_helper.py", line 47, in _call_func
E       result = impl(self, *args, **kw)
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.Np3X0NVCM9/cupy/tests/cupyx_tests/scipy_tests/ndimage_tests/test_interpolation.py", line 398, in test_affine_transform_texture_memory
E       return m(a, matrix, output_shape=output_shape,
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.Np3X0NVCM9/cupy/cupyx/scipy/ndimage/interpolation.py", line 376, in affine_transform
E       return _texture.affine_transformation(data=input,
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.Np3X0NVCM9/cupy/cupyx/_texture.py", line 168, in affine_transformation
E       texture_object = _create_texture_object(data,
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.Np3X0NVCM9/cupy/cupyx/_texture.py", line 98, in _create_texture_object
E       array = texture.CUDAarray(texture_fmt, *data.shape[::-1])
E     File "cupy/cuda/texture.pyx", line 296, in cupy.cuda.texture.CUDAarray.__init__
E       self.ptr = runtime.malloc3DArray(desc.ptr, width, height, depth,
E     File "cupy_backends/cuda/api/runtime.pyx", line 593, in cupy_backends.cuda.api.runtime.malloc3DArray
E       check_status(status)
E     File "cupy_backends/cuda/api/runtime.pyx", line 265, in cupy_backends.cuda.api.runtime.check_status
E       raise CUDARuntimeError(status)
E   cupy_backends.cuda.api.runtime.CUDARuntimeError: hipErrorUnknown: hipErrorUnknown

cupy_backends/cuda/api/runtime.pyx:265: AssertionError
----------------------------- Captured stderr call -----------------------------
Traceback (most recent call last):
  File "cupy_backends/cuda/api/runtime.pyx", line 644, in cupy_backends.cuda.api.runtime.freeArray
    check_status(status)
  File "cupy_backends/cuda/api/runtime.pyx", line 265, in cupy_backends.cuda.api.runtime.check_status
    raise CUDARuntimeError(status)
cupy_backends.cuda.api.runtime.CUDARuntimeError: hipErrorUnknown: hipErrorUnknown
_ TestAffineTransformTextureMemory.test_affine_transform_texture_memory[_param_296_{mode='nearest', order=1, output=None, output_shape=None, shape=(10, 10, 10), theta=0}] _

self = <<cupyx_tests.scipy_tests.ndimage_tests.test_interpolation.TestAffineTransformTextureMemory object at 0x7fd70668b280>  parameter: {'mode': 'nearest', 'order': 1, 'output': None, 'output_shape': None, 'shape': (10, 10, 10), 'theta': 0}>
xp = <module 'cupy' from '/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.Np3X0NVCM9/cupy/cupy/__init__.py'>
scp = <module 'cupyx.scipy' from '/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.Np3X0NVCM9/cupy/cupyx/scipy/__init__.py'>

    @testing.numpy_cupy_allclose(atol=0.1, scipy_name='scp')
    def test_affine_transform_texture_memory(self, xp, scp):
        a = xp.ones(self.shape, dtype=xp.float32)
        center = numpy.divide(numpy.subtract(self.shape, 1), 2)
    
        if len(self.shape) == 2:
            matrix = self._2d_rotation_matrix(self.theta, center)
        elif len(self.shape) == 3:
            matrix = self._3d_rotation_matrix(self.theta, center)
        else:
            return pytest.xfail('Unsupported shape')
    
        if self.output == 'empty':
            output = xp.empty(self.shape, dtype=xp.float32)
            if self.output_shape:
                return pytest.skip('This combination is tested in '
                                   'test_invalid_texture_arguments')
        else:
            output = self.output
    
        if self.output_shape:
            output_shape = (self.output_shape, ) * len(self.shape)
        else:
            output_shape = self.output_shape
    
        if xp == cupy:
            m = cupyx.scipy.ndimage.affine_transform
            matrix = cupy.array(matrix)
>           return m(a, matrix, output_shape=output_shape,
                     output=output, order=self.order,
                     mode=self.mode, texture_memory=True)

tests/cupyx_tests/scipy_tests/ndimage_tests/test_interpolation.py:398: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
cupyx/scipy/ndimage/interpolation.py:376: in affine_transform
    return _texture.affine_transformation(data=input,
cupyx/_texture.py:168: in affine_transformation
    texture_object = _create_texture_object(data,
cupyx/_texture.py:98: in _create_texture_object
    array = texture.CUDAarray(texture_fmt, *data.shape[::-1])
cupy/cuda/texture.pyx:296: in cupy.cuda.texture.CUDAarray.__init__
    self.ptr = runtime.malloc3DArray(desc.ptr, width, height, depth,
cupy_backends/cuda/api/runtime.pyx:593: in cupy_backends.cuda.api.runtime.malloc3DArray
    check_status(status)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

>   raise CUDARuntimeError(status)
E   AssertionError: Only cupy raises error
E   
E   Traceback (most recent call last):
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.Np3X0NVCM9/cupy/cupy/testing/_helper.py", line 47, in _call_func
E       result = impl(self, *args, **kw)
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.Np3X0NVCM9/cupy/tests/cupyx_tests/scipy_tests/ndimage_tests/test_interpolation.py", line 398, in test_affine_transform_texture_memory
E       return m(a, matrix, output_shape=output_shape,
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.Np3X0NVCM9/cupy/cupyx/scipy/ndimage/interpolation.py", line 376, in affine_transform
E       return _texture.affine_transformation(data=input,
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.Np3X0NVCM9/cupy/cupyx/_texture.py", line 168, in affine_transformation
E       texture_object = _create_texture_object(data,
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.Np3X0NVCM9/cupy/cupyx/_texture.py", line 98, in _create_texture_object
E       array = texture.CUDAarray(texture_fmt, *data.shape[::-1])
E     File "cupy/cuda/texture.pyx", line 296, in cupy.cuda.texture.CUDAarray.__init__
E       self.ptr = runtime.malloc3DArray(desc.ptr, width, height, depth,
E     File "cupy_backends/cuda/api/runtime.pyx", line 593, in cupy_backends.cuda.api.runtime.malloc3DArray
E       check_status(status)
E     File "cupy_backends/cuda/api/runtime.pyx", line 265, in cupy_backends.cuda.api.runtime.check_status
E       raise CUDARuntimeError(status)
E   cupy_backends.cuda.api.runtime.CUDARuntimeError: hipErrorUnknown: hipErrorUnknown

cupy_backends/cuda/api/runtime.pyx:265: AssertionError
----------------------------- Captured stderr call -----------------------------
Traceback (most recent call last):
  File "cupy_backends/cuda/api/runtime.pyx", line 644, in cupy_backends.cuda.api.runtime.freeArray
    check_status(status)
  File "cupy_backends/cuda/api/runtime.pyx", line 265, in cupy_backends.cuda.api.runtime.check_status
    raise CUDARuntimeError(status)
cupy_backends.cuda.api.runtime.CUDARuntimeError: hipErrorUnknown: hipErrorUnknown
_ TestAffineTransformTextureMemory.test_affine_transform_texture_memory[_param_297_{mode='nearest', order=1, output=None, output_shape=None, shape=(10, 10, 10), theta=90}] _

self = <<cupyx_tests.scipy_tests.ndimage_tests.test_interpolation.TestAffineTransformTextureMemory object at 0x7fd70583fd00>  parameter: {'mode': 'nearest', 'order': 1, 'output': None, 'output_shape': None, 'shape': (10, 10, 10), 'theta': 90}>
xp = <module 'cupy' from '/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.Np3X0NVCM9/cupy/cupy/__init__.py'>
scp = <module 'cupyx.scipy' from '/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.Np3X0NVCM9/cupy/cupyx/scipy/__init__.py'>

    @testing.numpy_cupy_allclose(atol=0.1, scipy_name='scp')
    def test_affine_transform_texture_memory(self, xp, scp):
        a = xp.ones(self.shape, dtype=xp.float32)
        center = numpy.divide(numpy.subtract(self.shape, 1), 2)
    
        if len(self.shape) == 2:
            matrix = self._2d_rotation_matrix(self.theta, center)
        elif len(self.shape) == 3:
            matrix = self._3d_rotation_matrix(self.theta, center)
        else:
            return pytest.xfail('Unsupported shape')
    
        if self.output == 'empty':
            output = xp.empty(self.shape, dtype=xp.float32)
            if self.output_shape:
                return pytest.skip('This combination is tested in '
                                   'test_invalid_texture_arguments')
        else:
            output = self.output
    
        if self.output_shape:
            output_shape = (self.output_shape, ) * len(self.shape)
        else:
            output_shape = self.output_shape
    
        if xp == cupy:
            m = cupyx.scipy.ndimage.affine_transform
            matrix = cupy.array(matrix)
>           return m(a, matrix, output_shape=output_shape,
                     output=output, order=self.order,
                     mode=self.mode, texture_memory=True)

tests/cupyx_tests/scipy_tests/ndimage_tests/test_interpolation.py:398: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
cupyx/scipy/ndimage/interpolation.py:376: in affine_transform
    return _texture.affine_transformation(data=input,
cupyx/_texture.py:168: in affine_transformation
    texture_object = _create_texture_object(data,
cupyx/_texture.py:98: in _create_texture_object
    array = texture.CUDAarray(texture_fmt, *data.shape[::-1])
cupy/cuda/texture.pyx:296: in cupy.cuda.texture.CUDAarray.__init__
    self.ptr = runtime.malloc3DArray(desc.ptr, width, height, depth,
cupy_backends/cuda/api/runtime.pyx:593: in cupy_backends.cuda.api.runtime.malloc3DArray
    check_status(status)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

>   raise CUDARuntimeError(status)
E   AssertionError: Only cupy raises error
E   
E   Traceback (most recent call last):
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.Np3X0NVCM9/cupy/cupy/testing/_helper.py", line 47, in _call_func
E       result = impl(self, *args, **kw)
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.Np3X0NVCM9/cupy/tests/cupyx_tests/scipy_tests/ndimage_tests/test_interpolation.py", line 398, in test_affine_transform_texture_memory
E       return m(a, matrix, output_shape=output_shape,
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.Np3X0NVCM9/cupy/cupyx/scipy/ndimage/interpolation.py", line 376, in affine_transform
E       return _texture.affine_transformation(data=input,
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.Np3X0NVCM9/cupy/cupyx/_texture.py", line 168, in affine_transformation
E       texture_object = _create_texture_object(data,
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.Np3X0NVCM9/cupy/cupyx/_texture.py", line 98, in _create_texture_object
E       array = texture.CUDAarray(texture_fmt, *data.shape[::-1])
E     File "cupy/cuda/texture.pyx", line 296, in cupy.cuda.texture.CUDAarray.__init__
E       self.ptr = runtime.malloc3DArray(desc.ptr, width, height, depth,
E     File "cupy_backends/cuda/api/runtime.pyx", line 593, in cupy_backends.cuda.api.runtime.malloc3DArray
E       check_status(status)
E     File "cupy_backends/cuda/api/runtime.pyx", line 265, in cupy_backends.cuda.api.runtime.check_status
E       raise CUDARuntimeError(status)
E   cupy_backends.cuda.api.runtime.CUDARuntimeError: hipErrorUnknown: hipErrorUnknown

cupy_backends/cuda/api/runtime.pyx:265: AssertionError
----------------------------- Captured stderr call -----------------------------
Traceback (most recent call last):
  File "cupy_backends/cuda/api/runtime.pyx", line 644, in cupy_backends.cuda.api.runtime.freeArray
    check_status(status)
  File "cupy_backends/cuda/api/runtime.pyx", line 265, in cupy_backends.cuda.api.runtime.check_status
    raise CUDARuntimeError(status)
cupy_backends.cuda.api.runtime.CUDARuntimeError: hipErrorUnknown: hipErrorUnknown
_ TestAffineTransformTextureMemory.test_affine_transform_texture_memory[_param_298_{mode='nearest', order=1, output=None, output_shape=None, shape=(10, 10, 10), theta=180}] _

self = <<cupyx_tests.scipy_tests.ndimage_tests.test_interpolation.TestAffineTransformTextureMemory object at 0x7fd7058b15b0>  parameter: {'mode': 'nearest', 'order': 1, 'output': None, 'output_shape': None, 'shape': (10, 10, 10), 'theta': 180}>
xp = <module 'cupy' from '/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.Np3X0NVCM9/cupy/cupy/__init__.py'>
scp = <module 'cupyx.scipy' from '/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.Np3X0NVCM9/cupy/cupyx/scipy/__init__.py'>

    @testing.numpy_cupy_allclose(atol=0.1, scipy_name='scp')
    def test_affine_transform_texture_memory(self, xp, scp):
        a = xp.ones(self.shape, dtype=xp.float32)
        center = numpy.divide(numpy.subtract(self.shape, 1), 2)
    
        if len(self.shape) == 2:
            matrix = self._2d_rotation_matrix(self.theta, center)
        elif len(self.shape) == 3:
            matrix = self._3d_rotation_matrix(self.theta, center)
        else:
            return pytest.xfail('Unsupported shape')
    
        if self.output == 'empty':
            output = xp.empty(self.shape, dtype=xp.float32)
            if self.output_shape:
                return pytest.skip('This combination is tested in '
                                   'test_invalid_texture_arguments')
        else:
            output = self.output
    
        if self.output_shape:
            output_shape = (self.output_shape, ) * len(self.shape)
        else:
            output_shape = self.output_shape
    
        if xp == cupy:
            m = cupyx.scipy.ndimage.affine_transform
            matrix = cupy.array(matrix)
>           return m(a, matrix, output_shape=output_shape,
                     output=output, order=self.order,
                     mode=self.mode, texture_memory=True)

tests/cupyx_tests/scipy_tests/ndimage_tests/test_interpolation.py:398: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
cupyx/scipy/ndimage/interpolation.py:376: in affine_transform
    return _texture.affine_transformation(data=input,
cupyx/_texture.py:168: in affine_transformation
    texture_object = _create_texture_object(data,
cupyx/_texture.py:98: in _create_texture_object
    array = texture.CUDAarray(texture_fmt, *data.shape[::-1])
cupy/cuda/texture.pyx:296: in cupy.cuda.texture.CUDAarray.__init__
    self.ptr = runtime.malloc3DArray(desc.ptr, width, height, depth,
cupy_backends/cuda/api/runtime.pyx:593: in cupy_backends.cuda.api.runtime.malloc3DArray
    check_status(status)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

>   raise CUDARuntimeError(status)
E   AssertionError: Only cupy raises error
E   
E   Traceback (most recent call last):
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.Np3X0NVCM9/cupy/cupy/testing/_helper.py", line 47, in _call_func
E       result = impl(self, *args, **kw)
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.Np3X0NVCM9/cupy/tests/cupyx_tests/scipy_tests/ndimage_tests/test_interpolation.py", line 398, in test_affine_transform_texture_memory
E       return m(a, matrix, output_shape=output_shape,
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.Np3X0NVCM9/cupy/cupyx/scipy/ndimage/interpolation.py", line 376, in affine_transform
E       return _texture.affine_transformation(data=input,
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.Np3X0NVCM9/cupy/cupyx/_texture.py", line 168, in affine_transformation
E       texture_object = _create_texture_object(data,
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.Np3X0NVCM9/cupy/cupyx/_texture.py", line 98, in _create_texture_object
E       array = texture.CUDAarray(texture_fmt, *data.shape[::-1])
E     File "cupy/cuda/texture.pyx", line 296, in cupy.cuda.texture.CUDAarray.__init__
E       self.ptr = runtime.malloc3DArray(desc.ptr, width, height, depth,
E     File "cupy_backends/cuda/api/runtime.pyx", line 593, in cupy_backends.cuda.api.runtime.malloc3DArray
E       check_status(status)
E     File "cupy_backends/cuda/api/runtime.pyx", line 265, in cupy_backends.cuda.api.runtime.check_status
E       raise CUDARuntimeError(status)
E   cupy_backends.cuda.api.runtime.CUDARuntimeError: hipErrorUnknown: hipErrorUnknown

cupy_backends/cuda/api/runtime.pyx:265: AssertionError
----------------------------- Captured stderr call -----------------------------
Traceback (most recent call last):
  File "cupy_backends/cuda/api/runtime.pyx", line 644, in cupy_backends.cuda.api.runtime.freeArray
    check_status(status)
  File "cupy_backends/cuda/api/runtime.pyx", line 265, in cupy_backends.cuda.api.runtime.check_status
    raise CUDARuntimeError(status)
cupy_backends.cuda.api.runtime.CUDARuntimeError: hipErrorUnknown: hipErrorUnknown
_ TestAffineTransformTextureMemory.test_affine_transform_texture_memory[_param_299_{mode='nearest', order=1, output=None, output_shape=None, shape=(10, 10, 10), theta=270}] _

self = <<cupyx_tests.scipy_tests.ndimage_tests.test_interpolation.TestAffineTransformTextureMemory object at 0x7fd7055d5a00>  parameter: {'mode': 'nearest', 'order': 1, 'output': None, 'output_shape': None, 'shape': (10, 10, 10), 'theta': 270}>
xp = <module 'cupy' from '/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.Np3X0NVCM9/cupy/cupy/__init__.py'>
scp = <module 'cupyx.scipy' from '/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.Np3X0NVCM9/cupy/cupyx/scipy/__init__.py'>

    @testing.numpy_cupy_allclose(atol=0.1, scipy_name='scp')
    def test_affine_transform_texture_memory(self, xp, scp):
        a = xp.ones(self.shape, dtype=xp.float32)
        center = numpy.divide(numpy.subtract(self.shape, 1), 2)
    
        if len(self.shape) == 2:
            matrix = self._2d_rotation_matrix(self.theta, center)
        elif len(self.shape) == 3:
            matrix = self._3d_rotation_matrix(self.theta, center)
        else:
            return pytest.xfail('Unsupported shape')
    
        if self.output == 'empty':
            output = xp.empty(self.shape, dtype=xp.float32)
            if self.output_shape:
                return pytest.skip('This combination is tested in '
                                   'test_invalid_texture_arguments')
        else:
            output = self.output
    
        if self.output_shape:
            output_shape = (self.output_shape, ) * len(self.shape)
        else:
            output_shape = self.output_shape
    
        if xp == cupy:
            m = cupyx.scipy.ndimage.affine_transform
            matrix = cupy.array(matrix)
>           return m(a, matrix, output_shape=output_shape,
                     output=output, order=self.order,
                     mode=self.mode, texture_memory=True)

tests/cupyx_tests/scipy_tests/ndimage_tests/test_interpolation.py:398: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
cupyx/scipy/ndimage/interpolation.py:376: in affine_transform
    return _texture.affine_transformation(data=input,
cupyx/_texture.py:168: in affine_transformation
    texture_object = _create_texture_object(data,
cupyx/_texture.py:98: in _create_texture_object
    array = texture.CUDAarray(texture_fmt, *data.shape[::-1])
cupy/cuda/texture.pyx:296: in cupy.cuda.texture.CUDAarray.__init__
    self.ptr = runtime.malloc3DArray(desc.ptr, width, height, depth,
cupy_backends/cuda/api/runtime.pyx:593: in cupy_backends.cuda.api.runtime.malloc3DArray
    check_status(status)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

>   raise CUDARuntimeError(status)
E   AssertionError: Only cupy raises error
E   
E   Traceback (most recent call last):
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.Np3X0NVCM9/cupy/cupy/testing/_helper.py", line 47, in _call_func
E       result = impl(self, *args, **kw)
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.Np3X0NVCM9/cupy/tests/cupyx_tests/scipy_tests/ndimage_tests/test_interpolation.py", line 398, in test_affine_transform_texture_memory
E       return m(a, matrix, output_shape=output_shape,
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.Np3X0NVCM9/cupy/cupyx/scipy/ndimage/interpolation.py", line 376, in affine_transform
E       return _texture.affine_transformation(data=input,
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.Np3X0NVCM9/cupy/cupyx/_texture.py", line 168, in affine_transformation
E       texture_object = _create_texture_object(data,
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.Np3X0NVCM9/cupy/cupyx/_texture.py", line 98, in _create_texture_object
E       array = texture.CUDAarray(texture_fmt, *data.shape[::-1])
E     File "cupy/cuda/texture.pyx", line 296, in cupy.cuda.texture.CUDAarray.__init__
E       self.ptr = runtime.malloc3DArray(desc.ptr, width, height, depth,
E     File "cupy_backends/cuda/api/runtime.pyx", line 593, in cupy_backends.cuda.api.runtime.malloc3DArray
E       check_status(status)
E     File "cupy_backends/cuda/api/runtime.pyx", line 265, in cupy_backends.cuda.api.runtime.check_status
E       raise CUDARuntimeError(status)
E   cupy_backends.cuda.api.runtime.CUDARuntimeError: hipErrorUnknown: hipErrorUnknown

cupy_backends/cuda/api/runtime.pyx:265: AssertionError
----------------------------- Captured stderr call -----------------------------
Traceback (most recent call last):
  File "cupy_backends/cuda/api/runtime.pyx", line 644, in cupy_backends.cuda.api.runtime.freeArray
    check_status(status)
  File "cupy_backends/cuda/api/runtime.pyx", line 265, in cupy_backends.cuda.api.runtime.check_status
    raise CUDARuntimeError(status)
cupy_backends.cuda.api.runtime.CUDARuntimeError: hipErrorUnknown: hipErrorUnknown
_ TestAffineTransformTextureMemory.test_affine_transform_texture_memory[_param_300_{mode='nearest', order=1, output=None, output_shape=None, shape=(10, 20, 30), theta=0}] _

self = <<cupyx_tests.scipy_tests.ndimage_tests.test_interpolation.TestAffineTransformTextureMemory object at 0x7fd705858790>  parameter: {'mode': 'nearest', 'order': 1, 'output': None, 'output_shape': None, 'shape': (10, 20, 30), 'theta': 0}>
xp = <module 'cupy' from '/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.Np3X0NVCM9/cupy/cupy/__init__.py'>
scp = <module 'cupyx.scipy' from '/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.Np3X0NVCM9/cupy/cupyx/scipy/__init__.py'>

    @testing.numpy_cupy_allclose(atol=0.1, scipy_name='scp')
    def test_affine_transform_texture_memory(self, xp, scp):
        a = xp.ones(self.shape, dtype=xp.float32)
        center = numpy.divide(numpy.subtract(self.shape, 1), 2)
    
        if len(self.shape) == 2:
            matrix = self._2d_rotation_matrix(self.theta, center)
        elif len(self.shape) == 3:
            matrix = self._3d_rotation_matrix(self.theta, center)
        else:
            return pytest.xfail('Unsupported shape')
    
        if self.output == 'empty':
            output = xp.empty(self.shape, dtype=xp.float32)
            if self.output_shape:
                return pytest.skip('This combination is tested in '
                                   'test_invalid_texture_arguments')
        else:
            output = self.output
    
        if self.output_shape:
            output_shape = (self.output_shape, ) * len(self.shape)
        else:
            output_shape = self.output_shape
    
        if xp == cupy:
            m = cupyx.scipy.ndimage.affine_transform
            matrix = cupy.array(matrix)
>           return m(a, matrix, output_shape=output_shape,
                     output=output, order=self.order,
                     mode=self.mode, texture_memory=True)

tests/cupyx_tests/scipy_tests/ndimage_tests/test_interpolation.py:398: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
cupyx/scipy/ndimage/interpolation.py:376: in affine_transform
    return _texture.affine_transformation(data=input,
cupyx/_texture.py:168: in affine_transformation
    texture_object = _create_texture_object(data,
cupyx/_texture.py:98: in _create_texture_object
    array = texture.CUDAarray(texture_fmt, *data.shape[::-1])
cupy/cuda/texture.pyx:296: in cupy.cuda.texture.CUDAarray.__init__
    self.ptr = runtime.malloc3DArray(desc.ptr, width, height, depth,
cupy_backends/cuda/api/runtime.pyx:593: in cupy_backends.cuda.api.runtime.malloc3DArray
    check_status(status)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

>   raise CUDARuntimeError(status)
E   AssertionError: Only cupy raises error
E   
E   Traceback (most recent call last):
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.Np3X0NVCM9/cupy/cupy/testing/_helper.py", line 47, in _call_func
E       result = impl(self, *args, **kw)
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.Np3X0NVCM9/cupy/tests/cupyx_tests/scipy_tests/ndimage_tests/test_interpolation.py", line 398, in test_affine_transform_texture_memory
E       return m(a, matrix, output_shape=output_shape,
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.Np3X0NVCM9/cupy/cupyx/scipy/ndimage/interpolation.py", line 376, in affine_transform
E       return _texture.affine_transformation(data=input,
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.Np3X0NVCM9/cupy/cupyx/_texture.py", line 168, in affine_transformation
E       texture_object = _create_texture_object(data,
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.Np3X0NVCM9/cupy/cupyx/_texture.py", line 98, in _create_texture_object
E       array = texture.CUDAarray(texture_fmt, *data.shape[::-1])
E     File "cupy/cuda/texture.pyx", line 296, in cupy.cuda.texture.CUDAarray.__init__
E       self.ptr = runtime.malloc3DArray(desc.ptr, width, height, depth,
E     File "cupy_backends/cuda/api/runtime.pyx", line 593, in cupy_backends.cuda.api.runtime.malloc3DArray
E       check_status(status)
E     File "cupy_backends/cuda/api/runtime.pyx", line 265, in cupy_backends.cuda.api.runtime.check_status
E       raise CUDARuntimeError(status)
E   cupy_backends.cuda.api.runtime.CUDARuntimeError: hipErrorUnknown: hipErrorUnknown

cupy_backends/cuda/api/runtime.pyx:265: AssertionError
----------------------------- Captured stderr call -----------------------------
Traceback (most recent call last):
  File "cupy_backends/cuda/api/runtime.pyx", line 644, in cupy_backends.cuda.api.runtime.freeArray
    check_status(status)
  File "cupy_backends/cuda/api/runtime.pyx", line 265, in cupy_backends.cuda.api.runtime.check_status
    raise CUDARuntimeError(status)
cupy_backends.cuda.api.runtime.CUDARuntimeError: hipErrorUnknown: hipErrorUnknown
_ TestAffineTransformTextureMemory.test_affine_transform_texture_memory[_param_301_{mode='nearest', order=1, output=None, output_shape=None, shape=(10, 20, 30), theta=90}] _

self = <<cupyx_tests.scipy_tests.ndimage_tests.test_interpolation.TestAffineTransformTextureMemory object at 0x7fd706f23100>  parameter: {'mode': 'nearest', 'order': 1, 'output': None, 'output_shape': None, 'shape': (10, 20, 30), 'theta': 90}>
xp = <module 'cupy' from '/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.Np3X0NVCM9/cupy/cupy/__init__.py'>
scp = <module 'cupyx.scipy' from '/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.Np3X0NVCM9/cupy/cupyx/scipy/__init__.py'>

    @testing.numpy_cupy_allclose(atol=0.1, scipy_name='scp')
    def test_affine_transform_texture_memory(self, xp, scp):
        a = xp.ones(self.shape, dtype=xp.float32)
        center = numpy.divide(numpy.subtract(self.shape, 1), 2)
    
        if len(self.shape) == 2:
            matrix = self._2d_rotation_matrix(self.theta, center)
        elif len(self.shape) == 3:
            matrix = self._3d_rotation_matrix(self.theta, center)
        else:
            return pytest.xfail('Unsupported shape')
    
        if self.output == 'empty':
            output = xp.empty(self.shape, dtype=xp.float32)
            if self.output_shape:
                return pytest.skip('This combination is tested in '
                                   'test_invalid_texture_arguments')
        else:
            output = self.output
    
        if self.output_shape:
            output_shape = (self.output_shape, ) * len(self.shape)
        else:
            output_shape = self.output_shape
    
        if xp == cupy:
            m = cupyx.scipy.ndimage.affine_transform
            matrix = cupy.array(matrix)
>           return m(a, matrix, output_shape=output_shape,
                     output=output, order=self.order,
                     mode=self.mode, texture_memory=True)

tests/cupyx_tests/scipy_tests/ndimage_tests/test_interpolation.py:398: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
cupyx/scipy/ndimage/interpolation.py:376: in affine_transform
    return _texture.affine_transformation(data=input,
cupyx/_texture.py:168: in affine_transformation
    texture_object = _create_texture_object(data,
cupyx/_texture.py:98: in _create_texture_object
    array = texture.CUDAarray(texture_fmt, *data.shape[::-1])
cupy/cuda/texture.pyx:296: in cupy.cuda.texture.CUDAarray.__init__
    self.ptr = runtime.malloc3DArray(desc.ptr, width, height, depth,
cupy_backends/cuda/api/runtime.pyx:593: in cupy_backends.cuda.api.runtime.malloc3DArray
    check_status(status)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

>   raise CUDARuntimeError(status)
E   AssertionError: Only cupy raises error
E   
E   Traceback (most recent call last):
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.Np3X0NVCM9/cupy/cupy/testing/_helper.py", line 47, in _call_func
E       result = impl(self, *args, **kw)
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.Np3X0NVCM9/cupy/tests/cupyx_tests/scipy_tests/ndimage_tests/test_interpolation.py", line 398, in test_affine_transform_texture_memory
E       return m(a, matrix, output_shape=output_shape,
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.Np3X0NVCM9/cupy/cupyx/scipy/ndimage/interpolation.py", line 376, in affine_transform
E       return _texture.affine_transformation(data=input,
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.Np3X0NVCM9/cupy/cupyx/_texture.py", line 168, in affine_transformation
E       texture_object = _create_texture_object(data,
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.Np3X0NVCM9/cupy/cupyx/_texture.py", line 98, in _create_texture_object
E       array = texture.CUDAarray(texture_fmt, *data.shape[::-1])
E     File "cupy/cuda/texture.pyx", line 296, in cupy.cuda.texture.CUDAarray.__init__
E       self.ptr = runtime.malloc3DArray(desc.ptr, width, height, depth,
E     File "cupy_backends/cuda/api/runtime.pyx", line 593, in cupy_backends.cuda.api.runtime.malloc3DArray
E       check_status(status)
E     File "cupy_backends/cuda/api/runtime.pyx", line 265, in cupy_backends.cuda.api.runtime.check_status
E       raise CUDARuntimeError(status)
E   cupy_backends.cuda.api.runtime.CUDARuntimeError: hipErrorUnknown: hipErrorUnknown

cupy_backends/cuda/api/runtime.pyx:265: AssertionError
----------------------------- Captured stderr call -----------------------------
Traceback (most recent call last):
  File "cupy_backends/cuda/api/runtime.pyx", line 644, in cupy_backends.cuda.api.runtime.freeArray
    check_status(status)
  File "cupy_backends/cuda/api/runtime.pyx", line 265, in cupy_backends.cuda.api.runtime.check_status
    raise CUDARuntimeError(status)
cupy_backends.cuda.api.runtime.CUDARuntimeError: hipErrorUnknown: hipErrorUnknown
_ TestAffineTransformTextureMemory.test_affine_transform_texture_memory[_param_302_{mode='nearest', order=1, output=None, output_shape=None, shape=(10, 20, 30), theta=180}] _

self = <<cupyx_tests.scipy_tests.ndimage_tests.test_interpolation.TestAffineTransformTextureMemory object at 0x7fd7055c1b20>  parameter: {'mode': 'nearest', 'order': 1, 'output': None, 'output_shape': None, 'shape': (10, 20, 30), 'theta': 180}>
xp = <module 'cupy' from '/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.Np3X0NVCM9/cupy/cupy/__init__.py'>
scp = <module 'cupyx.scipy' from '/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.Np3X0NVCM9/cupy/cupyx/scipy/__init__.py'>

    @testing.numpy_cupy_allclose(atol=0.1, scipy_name='scp')
    def test_affine_transform_texture_memory(self, xp, scp):
        a = xp.ones(self.shape, dtype=xp.float32)
        center = numpy.divide(numpy.subtract(self.shape, 1), 2)
    
        if len(self.shape) == 2:
            matrix = self._2d_rotation_matrix(self.theta, center)
        elif len(self.shape) == 3:
            matrix = self._3d_rotation_matrix(self.theta, center)
        else:
            return pytest.xfail('Unsupported shape')
    
        if self.output == 'empty':
            output = xp.empty(self.shape, dtype=xp.float32)
            if self.output_shape:
                return pytest.skip('This combination is tested in '
                                   'test_invalid_texture_arguments')
        else:
            output = self.output
    
        if self.output_shape:
            output_shape = (self.output_shape, ) * len(self.shape)
        else:
            output_shape = self.output_shape
    
        if xp == cupy:
            m = cupyx.scipy.ndimage.affine_transform
            matrix = cupy.array(matrix)
>           return m(a, matrix, output_shape=output_shape,
                     output=output, order=self.order,
                     mode=self.mode, texture_memory=True)

tests/cupyx_tests/scipy_tests/ndimage_tests/test_interpolation.py:398: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
cupyx/scipy/ndimage/interpolation.py:376: in affine_transform
    return _texture.affine_transformation(data=input,
cupyx/_texture.py:168: in affine_transformation
    texture_object = _create_texture_object(data,
cupyx/_texture.py:98: in _create_texture_object
    array = texture.CUDAarray(texture_fmt, *data.shape[::-1])
cupy/cuda/texture.pyx:296: in cupy.cuda.texture.CUDAarray.__init__
    self.ptr = runtime.malloc3DArray(desc.ptr, width, height, depth,
cupy_backends/cuda/api/runtime.pyx:593: in cupy_backends.cuda.api.runtime.malloc3DArray
    check_status(status)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

>   raise CUDARuntimeError(status)
E   AssertionError: Only cupy raises error
E   
E   Traceback (most recent call last):
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.Np3X0NVCM9/cupy/cupy/testing/_helper.py", line 47, in _call_func
E       result = impl(self, *args, **kw)
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.Np3X0NVCM9/cupy/tests/cupyx_tests/scipy_tests/ndimage_tests/test_interpolation.py", line 398, in test_affine_transform_texture_memory
E       return m(a, matrix, output_shape=output_shape,
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.Np3X0NVCM9/cupy/cupyx/scipy/ndimage/interpolation.py", line 376, in affine_transform
E       return _texture.affine_transformation(data=input,
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.Np3X0NVCM9/cupy/cupyx/_texture.py", line 168, in affine_transformation
E       texture_object = _create_texture_object(data,
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.Np3X0NVCM9/cupy/cupyx/_texture.py", line 98, in _create_texture_object
E       array = texture.CUDAarray(texture_fmt, *data.shape[::-1])
E     File "cupy/cuda/texture.pyx", line 296, in cupy.cuda.texture.CUDAarray.__init__
E       self.ptr = runtime.malloc3DArray(desc.ptr, width, height, depth,
E     File "cupy_backends/cuda/api/runtime.pyx", line 593, in cupy_backends.cuda.api.runtime.malloc3DArray
E       check_status(status)
E     File "cupy_backends/cuda/api/runtime.pyx", line 265, in cupy_backends.cuda.api.runtime.check_status
E       raise CUDARuntimeError(status)
E   cupy_backends.cuda.api.runtime.CUDARuntimeError: hipErrorUnknown: hipErrorUnknown

cupy_backends/cuda/api/runtime.pyx:265: AssertionError
----------------------------- Captured stderr call -----------------------------
Traceback (most recent call last):
  File "cupy_backends/cuda/api/runtime.pyx", line 644, in cupy_backends.cuda.api.runtime.freeArray
    check_status(status)
  File "cupy_backends/cuda/api/runtime.pyx", line 265, in cupy_backends.cuda.api.runtime.check_status
    raise CUDARuntimeError(status)
cupy_backends.cuda.api.runtime.CUDARuntimeError: hipErrorUnknown: hipErrorUnknown
_ TestAffineTransformTextureMemory.test_affine_transform_texture_memory[_param_303_{mode='nearest', order=1, output=None, output_shape=None, shape=(10, 20, 30), theta=270}] _

self = <<cupyx_tests.scipy_tests.ndimage_tests.test_interpolation.TestAffineTransformTextureMemory object at 0x7fd705851f70>  parameter: {'mode': 'nearest', 'order': 1, 'output': None, 'output_shape': None, 'shape': (10, 20, 30), 'theta': 270}>
xp = <module 'cupy' from '/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.Np3X0NVCM9/cupy/cupy/__init__.py'>
scp = <module 'cupyx.scipy' from '/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.Np3X0NVCM9/cupy/cupyx/scipy/__init__.py'>

    @testing.numpy_cupy_allclose(atol=0.1, scipy_name='scp')
    def test_affine_transform_texture_memory(self, xp, scp):
        a = xp.ones(self.shape, dtype=xp.float32)
        center = numpy.divide(numpy.subtract(self.shape, 1), 2)
    
        if len(self.shape) == 2:
            matrix = self._2d_rotation_matrix(self.theta, center)
        elif len(self.shape) == 3:
            matrix = self._3d_rotation_matrix(self.theta, center)
        else:
            return pytest.xfail('Unsupported shape')
    
        if self.output == 'empty':
            output = xp.empty(self.shape, dtype=xp.float32)
            if self.output_shape:
                return pytest.skip('This combination is tested in '
                                   'test_invalid_texture_arguments')
        else:
            output = self.output
    
        if self.output_shape:
            output_shape = (self.output_shape, ) * len(self.shape)
        else:
            output_shape = self.output_shape
    
        if xp == cupy:
            m = cupyx.scipy.ndimage.affine_transform
            matrix = cupy.array(matrix)
>           return m(a, matrix, output_shape=output_shape,
                     output=output, order=self.order,
                     mode=self.mode, texture_memory=True)

tests/cupyx_tests/scipy_tests/ndimage_tests/test_interpolation.py:398: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
cupyx/scipy/ndimage/interpolation.py:376: in affine_transform
    return _texture.affine_transformation(data=input,
cupyx/_texture.py:168: in affine_transformation
    texture_object = _create_texture_object(data,
cupyx/_texture.py:98: in _create_texture_object
    array = texture.CUDAarray(texture_fmt, *data.shape[::-1])
cupy/cuda/texture.pyx:296: in cupy.cuda.texture.CUDAarray.__init__
    self.ptr = runtime.malloc3DArray(desc.ptr, width, height, depth,
cupy_backends/cuda/api/runtime.pyx:593: in cupy_backends.cuda.api.runtime.malloc3DArray
    check_status(status)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

>   raise CUDARuntimeError(status)
E   AssertionError: Only cupy raises error
E   
E   Traceback (most recent call last):
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.Np3X0NVCM9/cupy/cupy/testing/_helper.py", line 47, in _call_func
E       result = impl(self, *args, **kw)
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.Np3X0NVCM9/cupy/tests/cupyx_tests/scipy_tests/ndimage_tests/test_interpolation.py", line 398, in test_affine_transform_texture_memory
E       return m(a, matrix, output_shape=output_shape,
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.Np3X0NVCM9/cupy/cupyx/scipy/ndimage/interpolation.py", line 376, in affine_transform
E       return _texture.affine_transformation(data=input,
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.Np3X0NVCM9/cupy/cupyx/_texture.py", line 168, in affine_transformation
E       texture_object = _create_texture_object(data,
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.Np3X0NVCM9/cupy/cupyx/_texture.py", line 98, in _create_texture_object
E       array = texture.CUDAarray(texture_fmt, *data.shape[::-1])
E     File "cupy/cuda/texture.pyx", line 296, in cupy.cuda.texture.CUDAarray.__init__
E       self.ptr = runtime.malloc3DArray(desc.ptr, width, height, depth,
E     File "cupy_backends/cuda/api/runtime.pyx", line 593, in cupy_backends.cuda.api.runtime.malloc3DArray
E       check_status(status)
E     File "cupy_backends/cuda/api/runtime.pyx", line 265, in cupy_backends.cuda.api.runtime.check_status
E       raise CUDARuntimeError(status)
E   cupy_backends.cuda.api.runtime.CUDARuntimeError: hipErrorUnknown: hipErrorUnknown

cupy_backends/cuda/api/runtime.pyx:265: AssertionError
----------------------------- Captured stderr call -----------------------------
Traceback (most recent call last):
  File "cupy_backends/cuda/api/runtime.pyx", line 644, in cupy_backends.cuda.api.runtime.freeArray
    check_status(status)
  File "cupy_backends/cuda/api/runtime.pyx", line 265, in cupy_backends.cuda.api.runtime.check_status
    raise CUDARuntimeError(status)
cupy_backends.cuda.api.runtime.CUDARuntimeError: hipErrorUnknown: hipErrorUnknown
_ TestAffineTransformTextureMemory.test_affine_transform_texture_memory[_param_304_{mode='nearest', order=1, output=None, output_shape=10, shape=(100, 100), theta=0}] _

self = <<cupyx_tests.scipy_tests.ndimage_tests.test_interpolation.TestAffineTransformTextureMemory object at 0x7fd7065aa310>  parameter: {'mode': 'nearest', 'order': 1, 'output': None, 'output_shape': 10, 'shape': (100, 100), 'theta': 0}>
xp = <module 'cupy' from '/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.Np3X0NVCM9/cupy/cupy/__init__.py'>
scp = <module 'cupyx.scipy' from '/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.Np3X0NVCM9/cupy/cupyx/scipy/__init__.py'>

    @testing.numpy_cupy_allclose(atol=0.1, scipy_name='scp')
    def test_affine_transform_texture_memory(self, xp, scp):
        a = xp.ones(self.shape, dtype=xp.float32)
        center = numpy.divide(numpy.subtract(self.shape, 1), 2)
    
        if len(self.shape) == 2:
            matrix = self._2d_rotation_matrix(self.theta, center)
        elif len(self.shape) == 3:
            matrix = self._3d_rotation_matrix(self.theta, center)
        else:
            return pytest.xfail('Unsupported shape')
    
        if self.output == 'empty':
            output = xp.empty(self.shape, dtype=xp.float32)
            if self.output_shape:
                return pytest.skip('This combination is tested in '
                                   'test_invalid_texture_arguments')
        else:
            output = self.output
    
        if self.output_shape:
            output_shape = (self.output_shape, ) * len(self.shape)
        else:
            output_shape = self.output_shape
    
        if xp == cupy:
            m = cupyx.scipy.ndimage.affine_transform
            matrix = cupy.array(matrix)
>           return m(a, matrix, output_shape=output_shape,
                     output=output, order=self.order,
                     mode=self.mode, texture_memory=True)

tests/cupyx_tests/scipy_tests/ndimage_tests/test_interpolation.py:398: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
cupyx/scipy/ndimage/interpolation.py:376: in affine_transform
    return _texture.affine_transformation(data=input,
cupyx/_texture.py:168: in affine_transformation
    texture_object = _create_texture_object(data,
cupyx/_texture.py:98: in _create_texture_object
    array = texture.CUDAarray(texture_fmt, *data.shape[::-1])
cupy/cuda/texture.pyx:296: in cupy.cuda.texture.CUDAarray.__init__
    self.ptr = runtime.malloc3DArray(desc.ptr, width, height, depth,
cupy_backends/cuda/api/runtime.pyx:593: in cupy_backends.cuda.api.runtime.malloc3DArray
    check_status(status)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

>   raise CUDARuntimeError(status)
E   AssertionError: Only cupy raises error
E   
E   Traceback (most recent call last):
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.Np3X0NVCM9/cupy/cupy/testing/_helper.py", line 47, in _call_func
E       result = impl(self, *args, **kw)
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.Np3X0NVCM9/cupy/tests/cupyx_tests/scipy_tests/ndimage_tests/test_interpolation.py", line 398, in test_affine_transform_texture_memory
E       return m(a, matrix, output_shape=output_shape,
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.Np3X0NVCM9/cupy/cupyx/scipy/ndimage/interpolation.py", line 376, in affine_transform
E       return _texture.affine_transformation(data=input,
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.Np3X0NVCM9/cupy/cupyx/_texture.py", line 168, in affine_transformation
E       texture_object = _create_texture_object(data,
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.Np3X0NVCM9/cupy/cupyx/_texture.py", line 98, in _create_texture_object
E       array = texture.CUDAarray(texture_fmt, *data.shape[::-1])
E     File "cupy/cuda/texture.pyx", line 296, in cupy.cuda.texture.CUDAarray.__init__
E       self.ptr = runtime.malloc3DArray(desc.ptr, width, height, depth,
E     File "cupy_backends/cuda/api/runtime.pyx", line 593, in cupy_backends.cuda.api.runtime.malloc3DArray
E       check_status(status)
E     File "cupy_backends/cuda/api/runtime.pyx", line 265, in cupy_backends.cuda.api.runtime.check_status
E       raise CUDARuntimeError(status)
E   cupy_backends.cuda.api.runtime.CUDARuntimeError: hipErrorUnknown: hipErrorUnknown

cupy_backends/cuda/api/runtime.pyx:265: AssertionError
----------------------------- Captured stderr call -----------------------------
Traceback (most recent call last):
  File "cupy_backends/cuda/api/runtime.pyx", line 644, in cupy_backends.cuda.api.runtime.freeArray
    check_status(status)
  File "cupy_backends/cuda/api/runtime.pyx", line 265, in cupy_backends.cuda.api.runtime.check_status
    raise CUDARuntimeError(status)
cupy_backends.cuda.api.runtime.CUDARuntimeError: hipErrorUnknown: hipErrorUnknown
_ TestAffineTransformTextureMemory.test_affine_transform_texture_memory[_param_305_{mode='nearest', order=1, output=None, output_shape=10, shape=(100, 100), theta=90}] _

self = <<cupyx_tests.scipy_tests.ndimage_tests.test_interpolation.TestAffineTransformTextureMemory object at 0x7fd705e4d640>  parameter: {'mode': 'nearest', 'order': 1, 'output': None, 'output_shape': 10, 'shape': (100, 100), 'theta': 90}>
xp = <module 'cupy' from '/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.Np3X0NVCM9/cupy/cupy/__init__.py'>
scp = <module 'cupyx.scipy' from '/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.Np3X0NVCM9/cupy/cupyx/scipy/__init__.py'>

    @testing.numpy_cupy_allclose(atol=0.1, scipy_name='scp')
    def test_affine_transform_texture_memory(self, xp, scp):
        a = xp.ones(self.shape, dtype=xp.float32)
        center = numpy.divide(numpy.subtract(self.shape, 1), 2)
    
        if len(self.shape) == 2:
            matrix = self._2d_rotation_matrix(self.theta, center)
        elif len(self.shape) == 3:
            matrix = self._3d_rotation_matrix(self.theta, center)
        else:
            return pytest.xfail('Unsupported shape')
    
        if self.output == 'empty':
            output = xp.empty(self.shape, dtype=xp.float32)
            if self.output_shape:
                return pytest.skip('This combination is tested in '
                                   'test_invalid_texture_arguments')
        else:
            output = self.output
    
        if self.output_shape:
            output_shape = (self.output_shape, ) * len(self.shape)
        else:
            output_shape = self.output_shape
    
        if xp == cupy:
            m = cupyx.scipy.ndimage.affine_transform
            matrix = cupy.array(matrix)
>           return m(a, matrix, output_shape=output_shape,
                     output=output, order=self.order,
                     mode=self.mode, texture_memory=True)

tests/cupyx_tests/scipy_tests/ndimage_tests/test_interpolation.py:398: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
cupyx/scipy/ndimage/interpolation.py:376: in affine_transform
    return _texture.affine_transformation(data=input,
cupyx/_texture.py:168: in affine_transformation
    texture_object = _create_texture_object(data,
cupyx/_texture.py:98: in _create_texture_object
    array = texture.CUDAarray(texture_fmt, *data.shape[::-1])
cupy/cuda/texture.pyx:296: in cupy.cuda.texture.CUDAarray.__init__
    self.ptr = runtime.malloc3DArray(desc.ptr, width, height, depth,
cupy_backends/cuda/api/runtime.pyx:593: in cupy_backends.cuda.api.runtime.malloc3DArray
    check_status(status)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

>   raise CUDARuntimeError(status)
E   AssertionError: Only cupy raises error
E   
E   Traceback (most recent call last):
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.Np3X0NVCM9/cupy/cupy/testing/_helper.py", line 47, in _call_func
E       result = impl(self, *args, **kw)
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.Np3X0NVCM9/cupy/tests/cupyx_tests/scipy_tests/ndimage_tests/test_interpolation.py", line 398, in test_affine_transform_texture_memory
E       return m(a, matrix, output_shape=output_shape,
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.Np3X0NVCM9/cupy/cupyx/scipy/ndimage/interpolation.py", line 376, in affine_transform
E       return _texture.affine_transformation(data=input,
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.Np3X0NVCM9/cupy/cupyx/_texture.py", line 168, in affine_transformation
E       texture_object = _create_texture_object(data,
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.Np3X0NVCM9/cupy/cupyx/_texture.py", line 98, in _create_texture_object
E       array = texture.CUDAarray(texture_fmt, *data.shape[::-1])
E     File "cupy/cuda/texture.pyx", line 296, in cupy.cuda.texture.CUDAarray.__init__
E       self.ptr = runtime.malloc3DArray(desc.ptr, width, height, depth,
E     File "cupy_backends/cuda/api/runtime.pyx", line 593, in cupy_backends.cuda.api.runtime.malloc3DArray
E       check_status(status)
E     File "cupy_backends/cuda/api/runtime.pyx", line 265, in cupy_backends.cuda.api.runtime.check_status
E       raise CUDARuntimeError(status)
E   cupy_backends.cuda.api.runtime.CUDARuntimeError: hipErrorUnknown: hipErrorUnknown

cupy_backends/cuda/api/runtime.pyx:265: AssertionError
----------------------------- Captured stderr call -----------------------------
Traceback (most recent call last):
  File "cupy_backends/cuda/api/runtime.pyx", line 644, in cupy_backends.cuda.api.runtime.freeArray
    check_status(status)
  File "cupy_backends/cuda/api/runtime.pyx", line 265, in cupy_backends.cuda.api.runtime.check_status
    raise CUDARuntimeError(status)
cupy_backends.cuda.api.runtime.CUDARuntimeError: hipErrorUnknown: hipErrorUnknown
_ TestAffineTransformTextureMemory.test_affine_transform_texture_memory[_param_306_{mode='nearest', order=1, output=None, output_shape=10, shape=(100, 100), theta=180}] _

self = <<cupyx_tests.scipy_tests.ndimage_tests.test_interpolation.TestAffineTransformTextureMemory object at 0x7fd7067bc070>  parameter: {'mode': 'nearest', 'order': 1, 'output': None, 'output_shape': 10, 'shape': (100, 100), 'theta': 180}>
xp = <module 'cupy' from '/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.Np3X0NVCM9/cupy/cupy/__init__.py'>
scp = <module 'cupyx.scipy' from '/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.Np3X0NVCM9/cupy/cupyx/scipy/__init__.py'>

    @testing.numpy_cupy_allclose(atol=0.1, scipy_name='scp')
    def test_affine_transform_texture_memory(self, xp, scp):
        a = xp.ones(self.shape, dtype=xp.float32)
        center = numpy.divide(numpy.subtract(self.shape, 1), 2)
    
        if len(self.shape) == 2:
            matrix = self._2d_rotation_matrix(self.theta, center)
        elif len(self.shape) == 3:
            matrix = self._3d_rotation_matrix(self.theta, center)
        else:
            return pytest.xfail('Unsupported shape')
    
        if self.output == 'empty':
            output = xp.empty(self.shape, dtype=xp.float32)
            if self.output_shape:
                return pytest.skip('This combination is tested in '
                                   'test_invalid_texture_arguments')
        else:
            output = self.output
    
        if self.output_shape:
            output_shape = (self.output_shape, ) * len(self.shape)
        else:
            output_shape = self.output_shape
    
        if xp == cupy:
            m = cupyx.scipy.ndimage.affine_transform
            matrix = cupy.array(matrix)
>           return m(a, matrix, output_shape=output_shape,
                     output=output, order=self.order,
                     mode=self.mode, texture_memory=True)

tests/cupyx_tests/scipy_tests/ndimage_tests/test_interpolation.py:398: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
cupyx/scipy/ndimage/interpolation.py:376: in affine_transform
    return _texture.affine_transformation(data=input,
cupyx/_texture.py:168: in affine_transformation
    texture_object = _create_texture_object(data,
cupyx/_texture.py:98: in _create_texture_object
    array = texture.CUDAarray(texture_fmt, *data.shape[::-1])
cupy/cuda/texture.pyx:296: in cupy.cuda.texture.CUDAarray.__init__
    self.ptr = runtime.malloc3DArray(desc.ptr, width, height, depth,
cupy_backends/cuda/api/runtime.pyx:593: in cupy_backends.cuda.api.runtime.malloc3DArray
    check_status(status)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

>   raise CUDARuntimeError(status)
E   AssertionError: Only cupy raises error
E   
E   Traceback (most recent call last):
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.Np3X0NVCM9/cupy/cupy/testing/_helper.py", line 47, in _call_func
E       result = impl(self, *args, **kw)
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.Np3X0NVCM9/cupy/tests/cupyx_tests/scipy_tests/ndimage_tests/test_interpolation.py", line 398, in test_affine_transform_texture_memory
E       return m(a, matrix, output_shape=output_shape,
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.Np3X0NVCM9/cupy/cupyx/scipy/ndimage/interpolation.py", line 376, in affine_transform
E       return _texture.affine_transformation(data=input,
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.Np3X0NVCM9/cupy/cupyx/_texture.py", line 168, in affine_transformation
E       texture_object = _create_texture_object(data,
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.Np3X0NVCM9/cupy/cupyx/_texture.py", line 98, in _create_texture_object
E       array = texture.CUDAarray(texture_fmt, *data.shape[::-1])
E     File "cupy/cuda/texture.pyx", line 296, in cupy.cuda.texture.CUDAarray.__init__
E       self.ptr = runtime.malloc3DArray(desc.ptr, width, height, depth,
E     File "cupy_backends/cuda/api/runtime.pyx", line 593, in cupy_backends.cuda.api.runtime.malloc3DArray
E       check_status(status)
E     File "cupy_backends/cuda/api/runtime.pyx", line 265, in cupy_backends.cuda.api.runtime.check_status
E       raise CUDARuntimeError(status)
E   cupy_backends.cuda.api.runtime.CUDARuntimeError: hipErrorUnknown: hipErrorUnknown

cupy_backends/cuda/api/runtime.pyx:265: AssertionError
----------------------------- Captured stderr call -----------------------------
Traceback (most recent call last):
  File "cupy_backends/cuda/api/runtime.pyx", line 644, in cupy_backends.cuda.api.runtime.freeArray
    check_status(status)
  File "cupy_backends/cuda/api/runtime.pyx", line 265, in cupy_backends.cuda.api.runtime.check_status
    raise CUDARuntimeError(status)
cupy_backends.cuda.api.runtime.CUDARuntimeError: hipErrorUnknown: hipErrorUnknown
_ TestAffineTransformTextureMemory.test_affine_transform_texture_memory[_param_307_{mode='nearest', order=1, output=None, output_shape=10, shape=(100, 100), theta=270}] _

self = <<cupyx_tests.scipy_tests.ndimage_tests.test_interpolation.TestAffineTransformTextureMemory object at 0x7fd819c2a1c0>  parameter: {'mode': 'nearest', 'order': 1, 'output': None, 'output_shape': 10, 'shape': (100, 100), 'theta': 270}>
xp = <module 'cupy' from '/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.Np3X0NVCM9/cupy/cupy/__init__.py'>
scp = <module 'cupyx.scipy' from '/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.Np3X0NVCM9/cupy/cupyx/scipy/__init__.py'>

    @testing.numpy_cupy_allclose(atol=0.1, scipy_name='scp')
    def test_affine_transform_texture_memory(self, xp, scp):
        a = xp.ones(self.shape, dtype=xp.float32)
        center = numpy.divide(numpy.subtract(self.shape, 1), 2)
    
        if len(self.shape) == 2:
            matrix = self._2d_rotation_matrix(self.theta, center)
        elif len(self.shape) == 3:
            matrix = self._3d_rotation_matrix(self.theta, center)
        else:
            return pytest.xfail('Unsupported shape')
    
        if self.output == 'empty':
            output = xp.empty(self.shape, dtype=xp.float32)
            if self.output_shape:
                return pytest.skip('This combination is tested in '
                                   'test_invalid_texture_arguments')
        else:
            output = self.output
    
        if self.output_shape:
            output_shape = (self.output_shape, ) * len(self.shape)
        else:
            output_shape = self.output_shape
    
        if xp == cupy:
            m = cupyx.scipy.ndimage.affine_transform
            matrix = cupy.array(matrix)
>           return m(a, matrix, output_shape=output_shape,
                     output=output, order=self.order,
                     mode=self.mode, texture_memory=True)

tests/cupyx_tests/scipy_tests/ndimage_tests/test_interpolation.py:398: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
cupyx/scipy/ndimage/interpolation.py:376: in affine_transform
    return _texture.affine_transformation(data=input,
cupyx/_texture.py:168: in affine_transformation
    texture_object = _create_texture_object(data,
cupyx/_texture.py:98: in _create_texture_object
    array = texture.CUDAarray(texture_fmt, *data.shape[::-1])
cupy/cuda/texture.pyx:296: in cupy.cuda.texture.CUDAarray.__init__
    self.ptr = runtime.malloc3DArray(desc.ptr, width, height, depth,
cupy_backends/cuda/api/runtime.pyx:593: in cupy_backends.cuda.api.runtime.malloc3DArray
    check_status(status)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

>   raise CUDARuntimeError(status)
E   AssertionError: Only cupy raises error
E   
E   Traceback (most recent call last):
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.Np3X0NVCM9/cupy/cupy/testing/_helper.py", line 47, in _call_func
E       result = impl(self, *args, **kw)
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.Np3X0NVCM9/cupy/tests/cupyx_tests/scipy_tests/ndimage_tests/test_interpolation.py", line 398, in test_affine_transform_texture_memory
E       return m(a, matrix, output_shape=output_shape,
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.Np3X0NVCM9/cupy/cupyx/scipy/ndimage/interpolation.py", line 376, in affine_transform
E       return _texture.affine_transformation(data=input,
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.Np3X0NVCM9/cupy/cupyx/_texture.py", line 168, in affine_transformation
E       texture_object = _create_texture_object(data,
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.Np3X0NVCM9/cupy/cupyx/_texture.py", line 98, in _create_texture_object
E       array = texture.CUDAarray(texture_fmt, *data.shape[::-1])
E     File "cupy/cuda/texture.pyx", line 296, in cupy.cuda.texture.CUDAarray.__init__
E       self.ptr = runtime.malloc3DArray(desc.ptr, width, height, depth,
E     File "cupy_backends/cuda/api/runtime.pyx", line 593, in cupy_backends.cuda.api.runtime.malloc3DArray
E       check_status(status)
E     File "cupy_backends/cuda/api/runtime.pyx", line 265, in cupy_backends.cuda.api.runtime.check_status
E       raise CUDARuntimeError(status)
E   cupy_backends.cuda.api.runtime.CUDARuntimeError: hipErrorUnknown: hipErrorUnknown

cupy_backends/cuda/api/runtime.pyx:265: AssertionError
----------------------------- Captured stderr call -----------------------------
Traceback (most recent call last):
  File "cupy_backends/cuda/api/runtime.pyx", line 644, in cupy_backends.cuda.api.runtime.freeArray
    check_status(status)
  File "cupy_backends/cuda/api/runtime.pyx", line 265, in cupy_backends.cuda.api.runtime.check_status
    raise CUDARuntimeError(status)
cupy_backends.cuda.api.runtime.CUDARuntimeError: hipErrorUnknown: hipErrorUnknown
_ TestAffineTransformTextureMemory.test_affine_transform_texture_memory[_param_308_{mode='nearest', order=1, output=None, output_shape=10, shape=(10, 20), theta=0}] _

self = <<cupyx_tests.scipy_tests.ndimage_tests.test_interpolation.TestAffineTransformTextureMemory object at 0x7fd7056096a0>  parameter: {'mode': 'nearest', 'order': 1, 'output': None, 'output_shape': 10, 'shape': (10, 20), 'theta': 0}>
xp = <module 'cupy' from '/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.Np3X0NVCM9/cupy/cupy/__init__.py'>
scp = <module 'cupyx.scipy' from '/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.Np3X0NVCM9/cupy/cupyx/scipy/__init__.py'>

    @testing.numpy_cupy_allclose(atol=0.1, scipy_name='scp')
    def test_affine_transform_texture_memory(self, xp, scp):
        a = xp.ones(self.shape, dtype=xp.float32)
        center = numpy.divide(numpy.subtract(self.shape, 1), 2)
    
        if len(self.shape) == 2:
            matrix = self._2d_rotation_matrix(self.theta, center)
        elif len(self.shape) == 3:
            matrix = self._3d_rotation_matrix(self.theta, center)
        else:
            return pytest.xfail('Unsupported shape')
    
        if self.output == 'empty':
            output = xp.empty(self.shape, dtype=xp.float32)
            if self.output_shape:
                return pytest.skip('This combination is tested in '
                                   'test_invalid_texture_arguments')
        else:
            output = self.output
    
        if self.output_shape:
            output_shape = (self.output_shape, ) * len(self.shape)
        else:
            output_shape = self.output_shape
    
        if xp == cupy:
            m = cupyx.scipy.ndimage.affine_transform
            matrix = cupy.array(matrix)
>           return m(a, matrix, output_shape=output_shape,
                     output=output, order=self.order,
                     mode=self.mode, texture_memory=True)

tests/cupyx_tests/scipy_tests/ndimage_tests/test_interpolation.py:398: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
cupyx/scipy/ndimage/interpolation.py:376: in affine_transform
    return _texture.affine_transformation(data=input,
cupyx/_texture.py:168: in affine_transformation
    texture_object = _create_texture_object(data,
cupyx/_texture.py:98: in _create_texture_object
    array = texture.CUDAarray(texture_fmt, *data.shape[::-1])
cupy/cuda/texture.pyx:296: in cupy.cuda.texture.CUDAarray.__init__
    self.ptr = runtime.malloc3DArray(desc.ptr, width, height, depth,
cupy_backends/cuda/api/runtime.pyx:593: in cupy_backends.cuda.api.runtime.malloc3DArray
    check_status(status)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

>   raise CUDARuntimeError(status)
E   AssertionError: Only cupy raises error
E   
E   Traceback (most recent call last):
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.Np3X0NVCM9/cupy/cupy/testing/_helper.py", line 47, in _call_func
E       result = impl(self, *args, **kw)
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.Np3X0NVCM9/cupy/tests/cupyx_tests/scipy_tests/ndimage_tests/test_interpolation.py", line 398, in test_affine_transform_texture_memory
E       return m(a, matrix, output_shape=output_shape,
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.Np3X0NVCM9/cupy/cupyx/scipy/ndimage/interpolation.py", line 376, in affine_transform
E       return _texture.affine_transformation(data=input,
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.Np3X0NVCM9/cupy/cupyx/_texture.py", line 168, in affine_transformation
E       texture_object = _create_texture_object(data,
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.Np3X0NVCM9/cupy/cupyx/_texture.py", line 98, in _create_texture_object
E       array = texture.CUDAarray(texture_fmt, *data.shape[::-1])
E     File "cupy/cuda/texture.pyx", line 296, in cupy.cuda.texture.CUDAarray.__init__
E       self.ptr = runtime.malloc3DArray(desc.ptr, width, height, depth,
E     File "cupy_backends/cuda/api/runtime.pyx", line 593, in cupy_backends.cuda.api.runtime.malloc3DArray
E       check_status(status)
E     File "cupy_backends/cuda/api/runtime.pyx", line 265, in cupy_backends.cuda.api.runtime.check_status
E       raise CUDARuntimeError(status)
E   cupy_backends.cuda.api.runtime.CUDARuntimeError: hipErrorUnknown: hipErrorUnknown

cupy_backends/cuda/api/runtime.pyx:265: AssertionError
----------------------------- Captured stderr call -----------------------------
Traceback (most recent call last):
  File "cupy_backends/cuda/api/runtime.pyx", line 644, in cupy_backends.cuda.api.runtime.freeArray
    check_status(status)
  File "cupy_backends/cuda/api/runtime.pyx", line 265, in cupy_backends.cuda.api.runtime.check_status
    raise CUDARuntimeError(status)
cupy_backends.cuda.api.runtime.CUDARuntimeError: hipErrorUnknown: hipErrorUnknown
_ TestAffineTransformTextureMemory.test_affine_transform_texture_memory[_param_309_{mode='nearest', order=1, output=None, output_shape=10, shape=(10, 20), theta=90}] _

self = <<cupyx_tests.scipy_tests.ndimage_tests.test_interpolation.TestAffineTransformTextureMemory object at 0x7fd7060fc730>  parameter: {'mode': 'nearest', 'order': 1, 'output': None, 'output_shape': 10, 'shape': (10, 20), 'theta': 90}>
xp = <module 'cupy' from '/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.Np3X0NVCM9/cupy/cupy/__init__.py'>
scp = <module 'cupyx.scipy' from '/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.Np3X0NVCM9/cupy/cupyx/scipy/__init__.py'>

    @testing.numpy_cupy_allclose(atol=0.1, scipy_name='scp')
    def test_affine_transform_texture_memory(self, xp, scp):
        a = xp.ones(self.shape, dtype=xp.float32)
        center = numpy.divide(numpy.subtract(self.shape, 1), 2)
    
        if len(self.shape) == 2:
            matrix = self._2d_rotation_matrix(self.theta, center)
        elif len(self.shape) == 3:
            matrix = self._3d_rotation_matrix(self.theta, center)
        else:
            return pytest.xfail('Unsupported shape')
    
        if self.output == 'empty':
            output = xp.empty(self.shape, dtype=xp.float32)
            if self.output_shape:
                return pytest.skip('This combination is tested in '
                                   'test_invalid_texture_arguments')
        else:
            output = self.output
    
        if self.output_shape:
            output_shape = (self.output_shape, ) * len(self.shape)
        else:
            output_shape = self.output_shape
    
        if xp == cupy:
            m = cupyx.scipy.ndimage.affine_transform
            matrix = cupy.array(matrix)
>           return m(a, matrix, output_shape=output_shape,
                     output=output, order=self.order,
                     mode=self.mode, texture_memory=True)

tests/cupyx_tests/scipy_tests/ndimage_tests/test_interpolation.py:398: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
cupyx/scipy/ndimage/interpolation.py:376: in affine_transform
    return _texture.affine_transformation(data=input,
cupyx/_texture.py:168: in affine_transformation
    texture_object = _create_texture_object(data,
cupyx/_texture.py:98: in _create_texture_object
    array = texture.CUDAarray(texture_fmt, *data.shape[::-1])
cupy/cuda/texture.pyx:296: in cupy.cuda.texture.CUDAarray.__init__
    self.ptr = runtime.malloc3DArray(desc.ptr, width, height, depth,
cupy_backends/cuda/api/runtime.pyx:593: in cupy_backends.cuda.api.runtime.malloc3DArray
    check_status(status)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

>   raise CUDARuntimeError(status)
E   AssertionError: Only cupy raises error
E   
E   Traceback (most recent call last):
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.Np3X0NVCM9/cupy/cupy/testing/_helper.py", line 47, in _call_func
E       result = impl(self, *args, **kw)
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.Np3X0NVCM9/cupy/tests/cupyx_tests/scipy_tests/ndimage_tests/test_interpolation.py", line 398, in test_affine_transform_texture_memory
E       return m(a, matrix, output_shape=output_shape,
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.Np3X0NVCM9/cupy/cupyx/scipy/ndimage/interpolation.py", line 376, in affine_transform
E       return _texture.affine_transformation(data=input,
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.Np3X0NVCM9/cupy/cupyx/_texture.py", line 168, in affine_transformation
E       texture_object = _create_texture_object(data,
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.Np3X0NVCM9/cupy/cupyx/_texture.py", line 98, in _create_texture_object
E       array = texture.CUDAarray(texture_fmt, *data.shape[::-1])
E     File "cupy/cuda/texture.pyx", line 296, in cupy.cuda.texture.CUDAarray.__init__
E       self.ptr = runtime.malloc3DArray(desc.ptr, width, height, depth,
E     File "cupy_backends/cuda/api/runtime.pyx", line 593, in cupy_backends.cuda.api.runtime.malloc3DArray
E       check_status(status)
E     File "cupy_backends/cuda/api/runtime.pyx", line 265, in cupy_backends.cuda.api.runtime.check_status
E       raise CUDARuntimeError(status)
E   cupy_backends.cuda.api.runtime.CUDARuntimeError: hipErrorUnknown: hipErrorUnknown

cupy_backends/cuda/api/runtime.pyx:265: AssertionError
----------------------------- Captured stderr call -----------------------------
Traceback (most recent call last):
  File "cupy_backends/cuda/api/runtime.pyx", line 644, in cupy_backends.cuda.api.runtime.freeArray
    check_status(status)
  File "cupy_backends/cuda/api/runtime.pyx", line 265, in cupy_backends.cuda.api.runtime.check_status
    raise CUDARuntimeError(status)
cupy_backends.cuda.api.runtime.CUDARuntimeError: hipErrorUnknown: hipErrorUnknown
_ TestAffineTransformTextureMemory.test_affine_transform_texture_memory[_param_310_{mode='nearest', order=1, output=None, output_shape=10, shape=(10, 20), theta=180}] _

self = <<cupyx_tests.scipy_tests.ndimage_tests.test_interpolation.TestAffineTransformTextureMemory object at 0x7fd70667fc40>  parameter: {'mode': 'nearest', 'order': 1, 'output': None, 'output_shape': 10, 'shape': (10, 20), 'theta': 180}>
xp = <module 'cupy' from '/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.Np3X0NVCM9/cupy/cupy/__init__.py'>
scp = <module 'cupyx.scipy' from '/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.Np3X0NVCM9/cupy/cupyx/scipy/__init__.py'>

    @testing.numpy_cupy_allclose(atol=0.1, scipy_name='scp')
    def test_affine_transform_texture_memory(self, xp, scp):
        a = xp.ones(self.shape, dtype=xp.float32)
        center = numpy.divide(numpy.subtract(self.shape, 1), 2)
    
        if len(self.shape) == 2:
            matrix = self._2d_rotation_matrix(self.theta, center)
        elif len(self.shape) == 3:
            matrix = self._3d_rotation_matrix(self.theta, center)
        else:
            return pytest.xfail('Unsupported shape')
    
        if self.output == 'empty':
            output = xp.empty(self.shape, dtype=xp.float32)
            if self.output_shape:
                return pytest.skip('This combination is tested in '
                                   'test_invalid_texture_arguments')
        else:
            output = self.output
    
        if self.output_shape:
            output_shape = (self.output_shape, ) * len(self.shape)
        else:
            output_shape = self.output_shape
    
        if xp == cupy:
            m = cupyx.scipy.ndimage.affine_transform
            matrix = cupy.array(matrix)
>           return m(a, matrix, output_shape=output_shape,
                     output=output, order=self.order,
                     mode=self.mode, texture_memory=True)

tests/cupyx_tests/scipy_tests/ndimage_tests/test_interpolation.py:398: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
cupyx/scipy/ndimage/interpolation.py:376: in affine_transform
    return _texture.affine_transformation(data=input,
cupyx/_texture.py:168: in affine_transformation
    texture_object = _create_texture_object(data,
cupyx/_texture.py:98: in _create_texture_object
    array = texture.CUDAarray(texture_fmt, *data.shape[::-1])
cupy/cuda/texture.pyx:296: in cupy.cuda.texture.CUDAarray.__init__
    self.ptr = runtime.malloc3DArray(desc.ptr, width, height, depth,
cupy_backends/cuda/api/runtime.pyx:593: in cupy_backends.cuda.api.runtime.malloc3DArray
    check_status(status)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

>   raise CUDARuntimeError(status)
E   AssertionError: Only cupy raises error
E   
E   Traceback (most recent call last):
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.Np3X0NVCM9/cupy/cupy/testing/_helper.py", line 47, in _call_func
E       result = impl(self, *args, **kw)
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.Np3X0NVCM9/cupy/tests/cupyx_tests/scipy_tests/ndimage_tests/test_interpolation.py", line 398, in test_affine_transform_texture_memory
E       return m(a, matrix, output_shape=output_shape,
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.Np3X0NVCM9/cupy/cupyx/scipy/ndimage/interpolation.py", line 376, in affine_transform
E       return _texture.affine_transformation(data=input,
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.Np3X0NVCM9/cupy/cupyx/_texture.py", line 168, in affine_transformation
E       texture_object = _create_texture_object(data,
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.Np3X0NVCM9/cupy/cupyx/_texture.py", line 98, in _create_texture_object
E       array = texture.CUDAarray(texture_fmt, *data.shape[::-1])
E     File "cupy/cuda/texture.pyx", line 296, in cupy.cuda.texture.CUDAarray.__init__
E       self.ptr = runtime.malloc3DArray(desc.ptr, width, height, depth,
E     File "cupy_backends/cuda/api/runtime.pyx", line 593, in cupy_backends.cuda.api.runtime.malloc3DArray
E       check_status(status)
E     File "cupy_backends/cuda/api/runtime.pyx", line 265, in cupy_backends.cuda.api.runtime.check_status
E       raise CUDARuntimeError(status)
E   cupy_backends.cuda.api.runtime.CUDARuntimeError: hipErrorUnknown: hipErrorUnknown

cupy_backends/cuda/api/runtime.pyx:265: AssertionError
----------------------------- Captured stderr call -----------------------------
Traceback (most recent call last):
  File "cupy_backends/cuda/api/runtime.pyx", line 644, in cupy_backends.cuda.api.runtime.freeArray
    check_status(status)
  File "cupy_backends/cuda/api/runtime.pyx", line 265, in cupy_backends.cuda.api.runtime.check_status
    raise CUDARuntimeError(status)
cupy_backends.cuda.api.runtime.CUDARuntimeError: hipErrorUnknown: hipErrorUnknown
_ TestAffineTransformTextureMemory.test_affine_transform_texture_memory[_param_311_{mode='nearest', order=1, output=None, output_shape=10, shape=(10, 20), theta=270}] _

self = <<cupyx_tests.scipy_tests.ndimage_tests.test_interpolation.TestAffineTransformTextureMemory object at 0x7fd70599fb80>  parameter: {'mode': 'nearest', 'order': 1, 'output': None, 'output_shape': 10, 'shape': (10, 20), 'theta': 270}>
xp = <module 'cupy' from '/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.Np3X0NVCM9/cupy/cupy/__init__.py'>
scp = <module 'cupyx.scipy' from '/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.Np3X0NVCM9/cupy/cupyx/scipy/__init__.py'>

    @testing.numpy_cupy_allclose(atol=0.1, scipy_name='scp')
    def test_affine_transform_texture_memory(self, xp, scp):
        a = xp.ones(self.shape, dtype=xp.float32)
        center = numpy.divide(numpy.subtract(self.shape, 1), 2)
    
        if len(self.shape) == 2:
            matrix = self._2d_rotation_matrix(self.theta, center)
        elif len(self.shape) == 3:
            matrix = self._3d_rotation_matrix(self.theta, center)
        else:
            return pytest.xfail('Unsupported shape')
    
        if self.output == 'empty':
            output = xp.empty(self.shape, dtype=xp.float32)
            if self.output_shape:
                return pytest.skip('This combination is tested in '
                                   'test_invalid_texture_arguments')
        else:
            output = self.output
    
        if self.output_shape:
            output_shape = (self.output_shape, ) * len(self.shape)
        else:
            output_shape = self.output_shape
    
        if xp == cupy:
            m = cupyx.scipy.ndimage.affine_transform
            matrix = cupy.array(matrix)
>           return m(a, matrix, output_shape=output_shape,
                     output=output, order=self.order,
                     mode=self.mode, texture_memory=True)

tests/cupyx_tests/scipy_tests/ndimage_tests/test_interpolation.py:398: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
cupyx/scipy/ndimage/interpolation.py:376: in affine_transform
    return _texture.affine_transformation(data=input,
cupyx/_texture.py:168: in affine_transformation
    texture_object = _create_texture_object(data,
cupyx/_texture.py:98: in _create_texture_object
    array = texture.CUDAarray(texture_fmt, *data.shape[::-1])
cupy/cuda/texture.pyx:296: in cupy.cuda.texture.CUDAarray.__init__
    self.ptr = runtime.malloc3DArray(desc.ptr, width, height, depth,
cupy_backends/cuda/api/runtime.pyx:593: in cupy_backends.cuda.api.runtime.malloc3DArray
    check_status(status)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

>   raise CUDARuntimeError(status)
E   AssertionError: Only cupy raises error
E   
E   Traceback (most recent call last):
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.Np3X0NVCM9/cupy/cupy/testing/_helper.py", line 47, in _call_func
E       result = impl(self, *args, **kw)
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.Np3X0NVCM9/cupy/tests/cupyx_tests/scipy_tests/ndimage_tests/test_interpolation.py", line 398, in test_affine_transform_texture_memory
E       return m(a, matrix, output_shape=output_shape,
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.Np3X0NVCM9/cupy/cupyx/scipy/ndimage/interpolation.py", line 376, in affine_transform
E       return _texture.affine_transformation(data=input,
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.Np3X0NVCM9/cupy/cupyx/_texture.py", line 168, in affine_transformation
E       texture_object = _create_texture_object(data,
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.Np3X0NVCM9/cupy/cupyx/_texture.py", line 98, in _create_texture_object
E       array = texture.CUDAarray(texture_fmt, *data.shape[::-1])
E     File "cupy/cuda/texture.pyx", line 296, in cupy.cuda.texture.CUDAarray.__init__
E       self.ptr = runtime.malloc3DArray(desc.ptr, width, height, depth,
E     File "cupy_backends/cuda/api/runtime.pyx", line 593, in cupy_backends.cuda.api.runtime.malloc3DArray
E       check_status(status)
E     File "cupy_backends/cuda/api/runtime.pyx", line 265, in cupy_backends.cuda.api.runtime.check_status
E       raise CUDARuntimeError(status)
E   cupy_backends.cuda.api.runtime.CUDARuntimeError: hipErrorUnknown: hipErrorUnknown

cupy_backends/cuda/api/runtime.pyx:265: AssertionError
----------------------------- Captured stderr call -----------------------------
Traceback (most recent call last):
  File "cupy_backends/cuda/api/runtime.pyx", line 644, in cupy_backends.cuda.api.runtime.freeArray
    check_status(status)
  File "cupy_backends/cuda/api/runtime.pyx", line 265, in cupy_backends.cuda.api.runtime.check_status
    raise CUDARuntimeError(status)
cupy_backends.cuda.api.runtime.CUDARuntimeError: hipErrorUnknown: hipErrorUnknown
_ TestAffineTransformTextureMemory.test_affine_transform_texture_memory[_param_312_{mode='nearest', order=1, output=None, output_shape=10, shape=(10, 10, 10), theta=0}] _

self = <<cupyx_tests.scipy_tests.ndimage_tests.test_interpolation.TestAffineTransformTextureMemory object at 0x7fd70580dbb0>  parameter: {'mode': 'nearest', 'order': 1, 'output': None, 'output_shape': 10, 'shape': (10, 10, 10), 'theta': 0}>
xp = <module 'cupy' from '/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.Np3X0NVCM9/cupy/cupy/__init__.py'>
scp = <module 'cupyx.scipy' from '/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.Np3X0NVCM9/cupy/cupyx/scipy/__init__.py'>

    @testing.numpy_cupy_allclose(atol=0.1, scipy_name='scp')
    def test_affine_transform_texture_memory(self, xp, scp):
        a = xp.ones(self.shape, dtype=xp.float32)
        center = numpy.divide(numpy.subtract(self.shape, 1), 2)
    
        if len(self.shape) == 2:
            matrix = self._2d_rotation_matrix(self.theta, center)
        elif len(self.shape) == 3:
            matrix = self._3d_rotation_matrix(self.theta, center)
        else:
            return pytest.xfail('Unsupported shape')
    
        if self.output == 'empty':
            output = xp.empty(self.shape, dtype=xp.float32)
            if self.output_shape:
                return pytest.skip('This combination is tested in '
                                   'test_invalid_texture_arguments')
        else:
            output = self.output
    
        if self.output_shape:
            output_shape = (self.output_shape, ) * len(self.shape)
        else:
            output_shape = self.output_shape
    
        if xp == cupy:
            m = cupyx.scipy.ndimage.affine_transform
            matrix = cupy.array(matrix)
>           return m(a, matrix, output_shape=output_shape,
                     output=output, order=self.order,
                     mode=self.mode, texture_memory=True)

tests/cupyx_tests/scipy_tests/ndimage_tests/test_interpolation.py:398: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
cupyx/scipy/ndimage/interpolation.py:376: in affine_transform
    return _texture.affine_transformation(data=input,
cupyx/_texture.py:168: in affine_transformation
    texture_object = _create_texture_object(data,
cupyx/_texture.py:98: in _create_texture_object
    array = texture.CUDAarray(texture_fmt, *data.shape[::-1])
cupy/cuda/texture.pyx:296: in cupy.cuda.texture.CUDAarray.__init__
    self.ptr = runtime.malloc3DArray(desc.ptr, width, height, depth,
cupy_backends/cuda/api/runtime.pyx:593: in cupy_backends.cuda.api.runtime.malloc3DArray
    check_status(status)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

>   raise CUDARuntimeError(status)
E   AssertionError: Only cupy raises error
E   
E   Traceback (most recent call last):
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.Np3X0NVCM9/cupy/cupy/testing/_helper.py", line 47, in _call_func
E       result = impl(self, *args, **kw)
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.Np3X0NVCM9/cupy/tests/cupyx_tests/scipy_tests/ndimage_tests/test_interpolation.py", line 398, in test_affine_transform_texture_memory
E       return m(a, matrix, output_shape=output_shape,
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.Np3X0NVCM9/cupy/cupyx/scipy/ndimage/interpolation.py", line 376, in affine_transform
E       return _texture.affine_transformation(data=input,
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.Np3X0NVCM9/cupy/cupyx/_texture.py", line 168, in affine_transformation
E       texture_object = _create_texture_object(data,
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.Np3X0NVCM9/cupy/cupyx/_texture.py", line 98, in _create_texture_object
E       array = texture.CUDAarray(texture_fmt, *data.shape[::-1])
E     File "cupy/cuda/texture.pyx", line 296, in cupy.cuda.texture.CUDAarray.__init__
E       self.ptr = runtime.malloc3DArray(desc.ptr, width, height, depth,
E     File "cupy_backends/cuda/api/runtime.pyx", line 593, in cupy_backends.cuda.api.runtime.malloc3DArray
E       check_status(status)
E     File "cupy_backends/cuda/api/runtime.pyx", line 265, in cupy_backends.cuda.api.runtime.check_status
E       raise CUDARuntimeError(status)
E   cupy_backends.cuda.api.runtime.CUDARuntimeError: hipErrorUnknown: hipErrorUnknown

cupy_backends/cuda/api/runtime.pyx:265: AssertionError
----------------------------- Captured stderr call -----------------------------
Traceback (most recent call last):
  File "cupy_backends/cuda/api/runtime.pyx", line 644, in cupy_backends.cuda.api.runtime.freeArray
    check_status(status)
  File "cupy_backends/cuda/api/runtime.pyx", line 265, in cupy_backends.cuda.api.runtime.check_status
    raise CUDARuntimeError(status)
cupy_backends.cuda.api.runtime.CUDARuntimeError: hipErrorUnknown: hipErrorUnknown
_ TestAffineTransformTextureMemory.test_affine_transform_texture_memory[_param_313_{mode='nearest', order=1, output=None, output_shape=10, shape=(10, 10, 10), theta=90}] _

self = <<cupyx_tests.scipy_tests.ndimage_tests.test_interpolation.TestAffineTransformTextureMemory object at 0x7fd819c1d580>  parameter: {'mode': 'nearest', 'order': 1, 'output': None, 'output_shape': 10, 'shape': (10, 10, 10), 'theta': 90}>
xp = <module 'cupy' from '/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.Np3X0NVCM9/cupy/cupy/__init__.py'>
scp = <module 'cupyx.scipy' from '/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.Np3X0NVCM9/cupy/cupyx/scipy/__init__.py'>

    @testing.numpy_cupy_allclose(atol=0.1, scipy_name='scp')
    def test_affine_transform_texture_memory(self, xp, scp):
        a = xp.ones(self.shape, dtype=xp.float32)
        center = numpy.divide(numpy.subtract(self.shape, 1), 2)
    
        if len(self.shape) == 2:
            matrix = self._2d_rotation_matrix(self.theta, center)
        elif len(self.shape) == 3:
            matrix = self._3d_rotation_matrix(self.theta, center)
        else:
            return pytest.xfail('Unsupported shape')
    
        if self.output == 'empty':
            output = xp.empty(self.shape, dtype=xp.float32)
            if self.output_shape:
                return pytest.skip('This combination is tested in '
                                   'test_invalid_texture_arguments')
        else:
            output = self.output
    
        if self.output_shape:
            output_shape = (self.output_shape, ) * len(self.shape)
        else:
            output_shape = self.output_shape
    
        if xp == cupy:
            m = cupyx.scipy.ndimage.affine_transform
            matrix = cupy.array(matrix)
>           return m(a, matrix, output_shape=output_shape,
                     output=output, order=self.order,
                     mode=self.mode, texture_memory=True)

tests/cupyx_tests/scipy_tests/ndimage_tests/test_interpolation.py:398: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
cupyx/scipy/ndimage/interpolation.py:376: in affine_transform
    return _texture.affine_transformation(data=input,
cupyx/_texture.py:168: in affine_transformation
    texture_object = _create_texture_object(data,
cupyx/_texture.py:98: in _create_texture_object
    array = texture.CUDAarray(texture_fmt, *data.shape[::-1])
cupy/cuda/texture.pyx:296: in cupy.cuda.texture.CUDAarray.__init__
    self.ptr = runtime.malloc3DArray(desc.ptr, width, height, depth,
cupy_backends/cuda/api/runtime.pyx:593: in cupy_backends.cuda.api.runtime.malloc3DArray
    check_status(status)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

>   raise CUDARuntimeError(status)
E   AssertionError: Only cupy raises error
E   
E   Traceback (most recent call last):
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.Np3X0NVCM9/cupy/cupy/testing/_helper.py", line 47, in _call_func
E       result = impl(self, *args, **kw)
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.Np3X0NVCM9/cupy/tests/cupyx_tests/scipy_tests/ndimage_tests/test_interpolation.py", line 398, in test_affine_transform_texture_memory
E       return m(a, matrix, output_shape=output_shape,
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.Np3X0NVCM9/cupy/cupyx/scipy/ndimage/interpolation.py", line 376, in affine_transform
E       return _texture.affine_transformation(data=input,
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.Np3X0NVCM9/cupy/cupyx/_texture.py", line 168, in affine_transformation
E       texture_object = _create_texture_object(data,
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.Np3X0NVCM9/cupy/cupyx/_texture.py", line 98, in _create_texture_object
E       array = texture.CUDAarray(texture_fmt, *data.shape[::-1])
E     File "cupy/cuda/texture.pyx", line 296, in cupy.cuda.texture.CUDAarray.__init__
E       self.ptr = runtime.malloc3DArray(desc.ptr, width, height, depth,
E     File "cupy_backends/cuda/api/runtime.pyx", line 593, in cupy_backends.cuda.api.runtime.malloc3DArray
E       check_status(status)
E     File "cupy_backends/cuda/api/runtime.pyx", line 265, in cupy_backends.cuda.api.runtime.check_status
E       raise CUDARuntimeError(status)
E   cupy_backends.cuda.api.runtime.CUDARuntimeError: hipErrorUnknown: hipErrorUnknown

cupy_backends/cuda/api/runtime.pyx:265: AssertionError
----------------------------- Captured stderr call -----------------------------
Traceback (most recent call last):
  File "cupy_backends/cuda/api/runtime.pyx", line 644, in cupy_backends.cuda.api.runtime.freeArray
    check_status(status)
  File "cupy_backends/cuda/api/runtime.pyx", line 265, in cupy_backends.cuda.api.runtime.check_status
    raise CUDARuntimeError(status)
cupy_backends.cuda.api.runtime.CUDARuntimeError: hipErrorUnknown: hipErrorUnknown
_ TestAffineTransformTextureMemory.test_affine_transform_texture_memory[_param_314_{mode='nearest', order=1, output=None, output_shape=10, shape=(10, 10, 10), theta=180}] _

self = <<cupyx_tests.scipy_tests.ndimage_tests.test_interpolation.TestAffineTransformTextureMemory object at 0x7fd706f3ba90>  parameter: {'mode': 'nearest', 'order': 1, 'output': None, 'output_shape': 10, 'shape': (10, 10, 10), 'theta': 180}>
xp = <module 'cupy' from '/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.Np3X0NVCM9/cupy/cupy/__init__.py'>
scp = <module 'cupyx.scipy' from '/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.Np3X0NVCM9/cupy/cupyx/scipy/__init__.py'>

    @testing.numpy_cupy_allclose(atol=0.1, scipy_name='scp')
    def test_affine_transform_texture_memory(self, xp, scp):
        a = xp.ones(self.shape, dtype=xp.float32)
        center = numpy.divide(numpy.subtract(self.shape, 1), 2)
    
        if len(self.shape) == 2:
            matrix = self._2d_rotation_matrix(self.theta, center)
        elif len(self.shape) == 3:
            matrix = self._3d_rotation_matrix(self.theta, center)
        else:
            return pytest.xfail('Unsupported shape')
    
        if self.output == 'empty':
            output = xp.empty(self.shape, dtype=xp.float32)
            if self.output_shape:
                return pytest.skip('This combination is tested in '
                                   'test_invalid_texture_arguments')
        else:
            output = self.output
    
        if self.output_shape:
            output_shape = (self.output_shape, ) * len(self.shape)
        else:
            output_shape = self.output_shape
    
        if xp == cupy:
            m = cupyx.scipy.ndimage.affine_transform
            matrix = cupy.array(matrix)
>           return m(a, matrix, output_shape=output_shape,
                     output=output, order=self.order,
                     mode=self.mode, texture_memory=True)

tests/cupyx_tests/scipy_tests/ndimage_tests/test_interpolation.py:398: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
cupyx/scipy/ndimage/interpolation.py:376: in affine_transform
    return _texture.affine_transformation(data=input,
cupyx/_texture.py:168: in affine_transformation
    texture_object = _create_texture_object(data,
cupyx/_texture.py:98: in _create_texture_object
    array = texture.CUDAarray(texture_fmt, *data.shape[::-1])
cupy/cuda/texture.pyx:296: in cupy.cuda.texture.CUDAarray.__init__
    self.ptr = runtime.malloc3DArray(desc.ptr, width, height, depth,
cupy_backends/cuda/api/runtime.pyx:593: in cupy_backends.cuda.api.runtime.malloc3DArray
    check_status(status)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

>   raise CUDARuntimeError(status)
E   AssertionError: Only cupy raises error
E   
E   Traceback (most recent call last):
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.Np3X0NVCM9/cupy/cupy/testing/_helper.py", line 47, in _call_func
E       result = impl(self, *args, **kw)
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.Np3X0NVCM9/cupy/tests/cupyx_tests/scipy_tests/ndimage_tests/test_interpolation.py", line 398, in test_affine_transform_texture_memory
E       return m(a, matrix, output_shape=output_shape,
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.Np3X0NVCM9/cupy/cupyx/scipy/ndimage/interpolation.py", line 376, in affine_transform
E       return _texture.affine_transformation(data=input,
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.Np3X0NVCM9/cupy/cupyx/_texture.py", line 168, in affine_transformation
E       texture_object = _create_texture_object(data,
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.Np3X0NVCM9/cupy/cupyx/_texture.py", line 98, in _create_texture_object
E       array = texture.CUDAarray(texture_fmt, *data.shape[::-1])
E     File "cupy/cuda/texture.pyx", line 296, in cupy.cuda.texture.CUDAarray.__init__
E       self.ptr = runtime.malloc3DArray(desc.ptr, width, height, depth,
E     File "cupy_backends/cuda/api/runtime.pyx", line 593, in cupy_backends.cuda.api.runtime.malloc3DArray
E       check_status(status)
E     File "cupy_backends/cuda/api/runtime.pyx", line 265, in cupy_backends.cuda.api.runtime.check_status
E       raise CUDARuntimeError(status)
E   cupy_backends.cuda.api.runtime.CUDARuntimeError: hipErrorUnknown: hipErrorUnknown

cupy_backends/cuda/api/runtime.pyx:265: AssertionError
----------------------------- Captured stderr call -----------------------------
Traceback (most recent call last):
  File "cupy_backends/cuda/api/runtime.pyx", line 644, in cupy_backends.cuda.api.runtime.freeArray
    check_status(status)
  File "cupy_backends/cuda/api/runtime.pyx", line 265, in cupy_backends.cuda.api.runtime.check_status
    raise CUDARuntimeError(status)
cupy_backends.cuda.api.runtime.CUDARuntimeError: hipErrorUnknown: hipErrorUnknown
_ TestAffineTransformTextureMemory.test_affine_transform_texture_memory[_param_315_{mode='nearest', order=1, output=None, output_shape=10, shape=(10, 10, 10), theta=270}] _

self = <<cupyx_tests.scipy_tests.ndimage_tests.test_interpolation.TestAffineTransformTextureMemory object at 0x7fd705573100>  parameter: {'mode': 'nearest', 'order': 1, 'output': None, 'output_shape': 10, 'shape': (10, 10, 10), 'theta': 270}>
xp = <module 'cupy' from '/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.Np3X0NVCM9/cupy/cupy/__init__.py'>
scp = <module 'cupyx.scipy' from '/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.Np3X0NVCM9/cupy/cupyx/scipy/__init__.py'>

    @testing.numpy_cupy_allclose(atol=0.1, scipy_name='scp')
    def test_affine_transform_texture_memory(self, xp, scp):
        a = xp.ones(self.shape, dtype=xp.float32)
        center = numpy.divide(numpy.subtract(self.shape, 1), 2)
    
        if len(self.shape) == 2:
            matrix = self._2d_rotation_matrix(self.theta, center)
        elif len(self.shape) == 3:
            matrix = self._3d_rotation_matrix(self.theta, center)
        else:
            return pytest.xfail('Unsupported shape')
    
        if self.output == 'empty':
            output = xp.empty(self.shape, dtype=xp.float32)
            if self.output_shape:
                return pytest.skip('This combination is tested in '
                                   'test_invalid_texture_arguments')
        else:
            output = self.output
    
        if self.output_shape:
            output_shape = (self.output_shape, ) * len(self.shape)
        else:
            output_shape = self.output_shape
    
        if xp == cupy:
            m = cupyx.scipy.ndimage.affine_transform
            matrix = cupy.array(matrix)
>           return m(a, matrix, output_shape=output_shape,
                     output=output, order=self.order,
                     mode=self.mode, texture_memory=True)

tests/cupyx_tests/scipy_tests/ndimage_tests/test_interpolation.py:398: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
cupyx/scipy/ndimage/interpolation.py:376: in affine_transform
    return _texture.affine_transformation(data=input,
cupyx/_texture.py:168: in affine_transformation
    texture_object = _create_texture_object(data,
cupyx/_texture.py:98: in _create_texture_object
    array = texture.CUDAarray(texture_fmt, *data.shape[::-1])
cupy/cuda/texture.pyx:296: in cupy.cuda.texture.CUDAarray.__init__
    self.ptr = runtime.malloc3DArray(desc.ptr, width, height, depth,
cupy_backends/cuda/api/runtime.pyx:593: in cupy_backends.cuda.api.runtime.malloc3DArray
    check_status(status)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

>   raise CUDARuntimeError(status)
E   AssertionError: Only cupy raises error
E   
E   Traceback (most recent call last):
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.Np3X0NVCM9/cupy/cupy/testing/_helper.py", line 47, in _call_func
E       result = impl(self, *args, **kw)
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.Np3X0NVCM9/cupy/tests/cupyx_tests/scipy_tests/ndimage_tests/test_interpolation.py", line 398, in test_affine_transform_texture_memory
E       return m(a, matrix, output_shape=output_shape,
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.Np3X0NVCM9/cupy/cupyx/scipy/ndimage/interpolation.py", line 376, in affine_transform
E       return _texture.affine_transformation(data=input,
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.Np3X0NVCM9/cupy/cupyx/_texture.py", line 168, in affine_transformation
E       texture_object = _create_texture_object(data,
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.Np3X0NVCM9/cupy/cupyx/_texture.py", line 98, in _create_texture_object
E       array = texture.CUDAarray(texture_fmt, *data.shape[::-1])
E     File "cupy/cuda/texture.pyx", line 296, in cupy.cuda.texture.CUDAarray.__init__
E       self.ptr = runtime.malloc3DArray(desc.ptr, width, height, depth,
E     File "cupy_backends/cuda/api/runtime.pyx", line 593, in cupy_backends.cuda.api.runtime.malloc3DArray
E       check_status(status)
E     File "cupy_backends/cuda/api/runtime.pyx", line 265, in cupy_backends.cuda.api.runtime.check_status
E       raise CUDARuntimeError(status)
E   cupy_backends.cuda.api.runtime.CUDARuntimeError: hipErrorUnknown: hipErrorUnknown

cupy_backends/cuda/api/runtime.pyx:265: AssertionError
----------------------------- Captured stderr call -----------------------------
Traceback (most recent call last):
  File "cupy_backends/cuda/api/runtime.pyx", line 644, in cupy_backends.cuda.api.runtime.freeArray
    check_status(status)
  File "cupy_backends/cuda/api/runtime.pyx", line 265, in cupy_backends.cuda.api.runtime.check_status
    raise CUDARuntimeError(status)
cupy_backends.cuda.api.runtime.CUDARuntimeError: hipErrorUnknown: hipErrorUnknown
_ TestAffineTransformTextureMemory.test_affine_transform_texture_memory[_param_316_{mode='nearest', order=1, output=None, output_shape=10, shape=(10, 20, 30), theta=0}] _

self = <<cupyx_tests.scipy_tests.ndimage_tests.test_interpolation.TestAffineTransformTextureMemory object at 0x7fd70576cd00>  parameter: {'mode': 'nearest', 'order': 1, 'output': None, 'output_shape': 10, 'shape': (10, 20, 30), 'theta': 0}>
xp = <module 'cupy' from '/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.Np3X0NVCM9/cupy/cupy/__init__.py'>
scp = <module 'cupyx.scipy' from '/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.Np3X0NVCM9/cupy/cupyx/scipy/__init__.py'>

    @testing.numpy_cupy_allclose(atol=0.1, scipy_name='scp')
    def test_affine_transform_texture_memory(self, xp, scp):
        a = xp.ones(self.shape, dtype=xp.float32)
        center = numpy.divide(numpy.subtract(self.shape, 1), 2)
    
        if len(self.shape) == 2:
            matrix = self._2d_rotation_matrix(self.theta, center)
        elif len(self.shape) == 3:
            matrix = self._3d_rotation_matrix(self.theta, center)
        else:
            return pytest.xfail('Unsupported shape')
    
        if self.output == 'empty':
            output = xp.empty(self.shape, dtype=xp.float32)
            if self.output_shape:
                return pytest.skip('This combination is tested in '
                                   'test_invalid_texture_arguments')
        else:
            output = self.output
    
        if self.output_shape:
            output_shape = (self.output_shape, ) * len(self.shape)
        else:
            output_shape = self.output_shape
    
        if xp == cupy:
            m = cupyx.scipy.ndimage.affine_transform
            matrix = cupy.array(matrix)
>           return m(a, matrix, output_shape=output_shape,
                     output=output, order=self.order,
                     mode=self.mode, texture_memory=True)

tests/cupyx_tests/scipy_tests/ndimage_tests/test_interpolation.py:398: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
cupyx/scipy/ndimage/interpolation.py:376: in affine_transform
    return _texture.affine_transformation(data=input,
cupyx/_texture.py:168: in affine_transformation
    texture_object = _create_texture_object(data,
cupyx/_texture.py:98: in _create_texture_object
    array = texture.CUDAarray(texture_fmt, *data.shape[::-1])
cupy/cuda/texture.pyx:296: in cupy.cuda.texture.CUDAarray.__init__
    self.ptr = runtime.malloc3DArray(desc.ptr, width, height, depth,
cupy_backends/cuda/api/runtime.pyx:593: in cupy_backends.cuda.api.runtime.malloc3DArray
    check_status(status)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

>   raise CUDARuntimeError(status)
E   AssertionError: Only cupy raises error
E   
E   Traceback (most recent call last):
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.Np3X0NVCM9/cupy/cupy/testing/_helper.py", line 47, in _call_func
E       result = impl(self, *args, **kw)
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.Np3X0NVCM9/cupy/tests/cupyx_tests/scipy_tests/ndimage_tests/test_interpolation.py", line 398, in test_affine_transform_texture_memory
E       return m(a, matrix, output_shape=output_shape,
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.Np3X0NVCM9/cupy/cupyx/scipy/ndimage/interpolation.py", line 376, in affine_transform
E       return _texture.affine_transformation(data=input,
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.Np3X0NVCM9/cupy/cupyx/_texture.py", line 168, in affine_transformation
E       texture_object = _create_texture_object(data,
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.Np3X0NVCM9/cupy/cupyx/_texture.py", line 98, in _create_texture_object
E       array = texture.CUDAarray(texture_fmt, *data.shape[::-1])
E     File "cupy/cuda/texture.pyx", line 296, in cupy.cuda.texture.CUDAarray.__init__
E       self.ptr = runtime.malloc3DArray(desc.ptr, width, height, depth,
E     File "cupy_backends/cuda/api/runtime.pyx", line 593, in cupy_backends.cuda.api.runtime.malloc3DArray
E       check_status(status)
E     File "cupy_backends/cuda/api/runtime.pyx", line 265, in cupy_backends.cuda.api.runtime.check_status
E       raise CUDARuntimeError(status)
E   cupy_backends.cuda.api.runtime.CUDARuntimeError: hipErrorUnknown: hipErrorUnknown

cupy_backends/cuda/api/runtime.pyx:265: AssertionError
----------------------------- Captured stderr call -----------------------------
Traceback (most recent call last):
  File "cupy_backends/cuda/api/runtime.pyx", line 644, in cupy_backends.cuda.api.runtime.freeArray
    check_status(status)
  File "cupy_backends/cuda/api/runtime.pyx", line 265, in cupy_backends.cuda.api.runtime.check_status
    raise CUDARuntimeError(status)
cupy_backends.cuda.api.runtime.CUDARuntimeError: hipErrorUnknown: hipErrorUnknown
_ TestAffineTransformTextureMemory.test_affine_transform_texture_memory[_param_317_{mode='nearest', order=1, output=None, output_shape=10, shape=(10, 20, 30), theta=90}] _

self = <<cupyx_tests.scipy_tests.ndimage_tests.test_interpolation.TestAffineTransformTextureMemory object at 0x7fd7057d6e80>  parameter: {'mode': 'nearest', 'order': 1, 'output': None, 'output_shape': 10, 'shape': (10, 20, 30), 'theta': 90}>
xp = <module 'cupy' from '/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.Np3X0NVCM9/cupy/cupy/__init__.py'>
scp = <module 'cupyx.scipy' from '/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.Np3X0NVCM9/cupy/cupyx/scipy/__init__.py'>

    @testing.numpy_cupy_allclose(atol=0.1, scipy_name='scp')
    def test_affine_transform_texture_memory(self, xp, scp):
        a = xp.ones(self.shape, dtype=xp.float32)
        center = numpy.divide(numpy.subtract(self.shape, 1), 2)
    
        if len(self.shape) == 2:
            matrix = self._2d_rotation_matrix(self.theta, center)
        elif len(self.shape) == 3:
            matrix = self._3d_rotation_matrix(self.theta, center)
        else:
            return pytest.xfail('Unsupported shape')
    
        if self.output == 'empty':
            output = xp.empty(self.shape, dtype=xp.float32)
            if self.output_shape:
                return pytest.skip('This combination is tested in '
                                   'test_invalid_texture_arguments')
        else:
            output = self.output
    
        if self.output_shape:
            output_shape = (self.output_shape, ) * len(self.shape)
        else:
            output_shape = self.output_shape
    
        if xp == cupy:
            m = cupyx.scipy.ndimage.affine_transform
            matrix = cupy.array(matrix)
>           return m(a, matrix, output_shape=output_shape,
                     output=output, order=self.order,
                     mode=self.mode, texture_memory=True)

tests/cupyx_tests/scipy_tests/ndimage_tests/test_interpolation.py:398: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
cupyx/scipy/ndimage/interpolation.py:376: in affine_transform
    return _texture.affine_transformation(data=input,
cupyx/_texture.py:168: in affine_transformation
    texture_object = _create_texture_object(data,
cupyx/_texture.py:98: in _create_texture_object
    array = texture.CUDAarray(texture_fmt, *data.shape[::-1])
cupy/cuda/texture.pyx:296: in cupy.cuda.texture.CUDAarray.__init__
    self.ptr = runtime.malloc3DArray(desc.ptr, width, height, depth,
cupy_backends/cuda/api/runtime.pyx:593: in cupy_backends.cuda.api.runtime.malloc3DArray
    check_status(status)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

>   raise CUDARuntimeError(status)
E   AssertionError: Only cupy raises error
E   
E   Traceback (most recent call last):
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.Np3X0NVCM9/cupy/cupy/testing/_helper.py", line 47, in _call_func
E       result = impl(self, *args, **kw)
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.Np3X0NVCM9/cupy/tests/cupyx_tests/scipy_tests/ndimage_tests/test_interpolation.py", line 398, in test_affine_transform_texture_memory
E       return m(a, matrix, output_shape=output_shape,
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.Np3X0NVCM9/cupy/cupyx/scipy/ndimage/interpolation.py", line 376, in affine_transform
E       return _texture.affine_transformation(data=input,
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.Np3X0NVCM9/cupy/cupyx/_texture.py", line 168, in affine_transformation
E       texture_object = _create_texture_object(data,
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.Np3X0NVCM9/cupy/cupyx/_texture.py", line 98, in _create_texture_object
E       array = texture.CUDAarray(texture_fmt, *data.shape[::-1])
E     File "cupy/cuda/texture.pyx", line 296, in cupy.cuda.texture.CUDAarray.__init__
E       self.ptr = runtime.malloc3DArray(desc.ptr, width, height, depth,
E     File "cupy_backends/cuda/api/runtime.pyx", line 593, in cupy_backends.cuda.api.runtime.malloc3DArray
E       check_status(status)
E     File "cupy_backends/cuda/api/runtime.pyx", line 265, in cupy_backends.cuda.api.runtime.check_status
E       raise CUDARuntimeError(status)
E   cupy_backends.cuda.api.runtime.CUDARuntimeError: hipErrorUnknown: hipErrorUnknown

cupy_backends/cuda/api/runtime.pyx:265: AssertionError
----------------------------- Captured stderr call -----------------------------
Traceback (most recent call last):
  File "cupy_backends/cuda/api/runtime.pyx", line 644, in cupy_backends.cuda.api.runtime.freeArray
    check_status(status)
  File "cupy_backends/cuda/api/runtime.pyx", line 265, in cupy_backends.cuda.api.runtime.check_status
    raise CUDARuntimeError(status)
cupy_backends.cuda.api.runtime.CUDARuntimeError: hipErrorUnknown: hipErrorUnknown
_ TestAffineTransformTextureMemory.test_affine_transform_texture_memory[_param_318_{mode='nearest', order=1, output=None, output_shape=10, shape=(10, 20, 30), theta=180}] _

self = <<cupyx_tests.scipy_tests.ndimage_tests.test_interpolation.TestAffineTransformTextureMemory object at 0x7fd70540f340>  parameter: {'mode': 'nearest', 'order': 1, 'output': None, 'output_shape': 10, 'shape': (10, 20, 30), 'theta': 180}>
xp = <module 'cupy' from '/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.Np3X0NVCM9/cupy/cupy/__init__.py'>
scp = <module 'cupyx.scipy' from '/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.Np3X0NVCM9/cupy/cupyx/scipy/__init__.py'>

    @testing.numpy_cupy_allclose(atol=0.1, scipy_name='scp')
    def test_affine_transform_texture_memory(self, xp, scp):
        a = xp.ones(self.shape, dtype=xp.float32)
        center = numpy.divide(numpy.subtract(self.shape, 1), 2)
    
        if len(self.shape) == 2:
            matrix = self._2d_rotation_matrix(self.theta, center)
        elif len(self.shape) == 3:
            matrix = self._3d_rotation_matrix(self.theta, center)
        else:
            return pytest.xfail('Unsupported shape')
    
        if self.output == 'empty':
            output = xp.empty(self.shape, dtype=xp.float32)
            if self.output_shape:
                return pytest.skip('This combination is tested in '
                                   'test_invalid_texture_arguments')
        else:
            output = self.output
    
        if self.output_shape:
            output_shape = (self.output_shape, ) * len(self.shape)
        else:
            output_shape = self.output_shape
    
        if xp == cupy:
            m = cupyx.scipy.ndimage.affine_transform
            matrix = cupy.array(matrix)
>           return m(a, matrix, output_shape=output_shape,
                     output=output, order=self.order,
                     mode=self.mode, texture_memory=True)

tests/cupyx_tests/scipy_tests/ndimage_tests/test_interpolation.py:398: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
cupyx/scipy/ndimage/interpolation.py:376: in affine_transform
    return _texture.affine_transformation(data=input,
cupyx/_texture.py:168: in affine_transformation
    texture_object = _create_texture_object(data,
cupyx/_texture.py:98: in _create_texture_object
    array = texture.CUDAarray(texture_fmt, *data.shape[::-1])
cupy/cuda/texture.pyx:296: in cupy.cuda.texture.CUDAarray.__init__
    self.ptr = runtime.malloc3DArray(desc.ptr, width, height, depth,
cupy_backends/cuda/api/runtime.pyx:593: in cupy_backends.cuda.api.runtime.malloc3DArray
    check_status(status)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

>   raise CUDARuntimeError(status)
E   AssertionError: Only cupy raises error
E   
E   Traceback (most recent call last):
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.Np3X0NVCM9/cupy/cupy/testing/_helper.py", line 47, in _call_func
E       result = impl(self, *args, **kw)
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.Np3X0NVCM9/cupy/tests/cupyx_tests/scipy_tests/ndimage_tests/test_interpolation.py", line 398, in test_affine_transform_texture_memory
E       return m(a, matrix, output_shape=output_shape,
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.Np3X0NVCM9/cupy/cupyx/scipy/ndimage/interpolation.py", line 376, in affine_transform
E       return _texture.affine_transformation(data=input,
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.Np3X0NVCM9/cupy/cupyx/_texture.py", line 168, in affine_transformation
E       texture_object = _create_texture_object(data,
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.Np3X0NVCM9/cupy/cupyx/_texture.py", line 98, in _create_texture_object
E       array = texture.CUDAarray(texture_fmt, *data.shape[::-1])
E     File "cupy/cuda/texture.pyx", line 296, in cupy.cuda.texture.CUDAarray.__init__
E       self.ptr = runtime.malloc3DArray(desc.ptr, width, height, depth,
E     File "cupy_backends/cuda/api/runtime.pyx", line 593, in cupy_backends.cuda.api.runtime.malloc3DArray
E       check_status(status)
E     File "cupy_backends/cuda/api/runtime.pyx", line 265, in cupy_backends.cuda.api.runtime.check_status
E       raise CUDARuntimeError(status)
E   cupy_backends.cuda.api.runtime.CUDARuntimeError: hipErrorUnknown: hipErrorUnknown

cupy_backends/cuda/api/runtime.pyx:265: AssertionError
----------------------------- Captured stderr call -----------------------------
Traceback (most recent call last):
  File "cupy_backends/cuda/api/runtime.pyx", line 644, in cupy_backends.cuda.api.runtime.freeArray
    check_status(status)
  File "cupy_backends/cuda/api/runtime.pyx", line 265, in cupy_backends.cuda.api.runtime.check_status
    raise CUDARuntimeError(status)
cupy_backends.cuda.api.runtime.CUDARuntimeError: hipErrorUnknown: hipErrorUnknown
_ TestAffineTransformTextureMemory.test_affine_transform_texture_memory[_param_319_{mode='nearest', order=1, output=None, output_shape=10, shape=(10, 20, 30), theta=270}] _

self = <<cupyx_tests.scipy_tests.ndimage_tests.test_interpolation.TestAffineTransformTextureMemory object at 0x7fd705813580>  parameter: {'mode': 'nearest', 'order': 1, 'output': None, 'output_shape': 10, 'shape': (10, 20, 30), 'theta': 270}>
xp = <module 'cupy' from '/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.Np3X0NVCM9/cupy/cupy/__init__.py'>
scp = <module 'cupyx.scipy' from '/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.Np3X0NVCM9/cupy/cupyx/scipy/__init__.py'>

    @testing.numpy_cupy_allclose(atol=0.1, scipy_name='scp')
    def test_affine_transform_texture_memory(self, xp, scp):
        a = xp.ones(self.shape, dtype=xp.float32)
        center = numpy.divide(numpy.subtract(self.shape, 1), 2)
    
        if len(self.shape) == 2:
            matrix = self._2d_rotation_matrix(self.theta, center)
        elif len(self.shape) == 3:
            matrix = self._3d_rotation_matrix(self.theta, center)
        else:
            return pytest.xfail('Unsupported shape')
    
        if self.output == 'empty':
            output = xp.empty(self.shape, dtype=xp.float32)
            if self.output_shape:
                return pytest.skip('This combination is tested in '
                                   'test_invalid_texture_arguments')
        else:
            output = self.output
    
        if self.output_shape:
            output_shape = (self.output_shape, ) * len(self.shape)
        else:
            output_shape = self.output_shape
    
        if xp == cupy:
            m = cupyx.scipy.ndimage.affine_transform
            matrix = cupy.array(matrix)
>           return m(a, matrix, output_shape=output_shape,
                     output=output, order=self.order,
                     mode=self.mode, texture_memory=True)

tests/cupyx_tests/scipy_tests/ndimage_tests/test_interpolation.py:398: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
cupyx/scipy/ndimage/interpolation.py:376: in affine_transform
    return _texture.affine_transformation(data=input,
cupyx/_texture.py:168: in affine_transformation
    texture_object = _create_texture_object(data,
cupyx/_texture.py:98: in _create_texture_object
    array = texture.CUDAarray(texture_fmt, *data.shape[::-1])
cupy/cuda/texture.pyx:296: in cupy.cuda.texture.CUDAarray.__init__
    self.ptr = runtime.malloc3DArray(desc.ptr, width, height, depth,
cupy_backends/cuda/api/runtime.pyx:593: in cupy_backends.cuda.api.runtime.malloc3DArray
    check_status(status)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

>   raise CUDARuntimeError(status)
E   AssertionError: Only cupy raises error
E   
E   Traceback (most recent call last):
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.Np3X0NVCM9/cupy/cupy/testing/_helper.py", line 47, in _call_func
E       result = impl(self, *args, **kw)
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.Np3X0NVCM9/cupy/tests/cupyx_tests/scipy_tests/ndimage_tests/test_interpolation.py", line 398, in test_affine_transform_texture_memory
E       return m(a, matrix, output_shape=output_shape,
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.Np3X0NVCM9/cupy/cupyx/scipy/ndimage/interpolation.py", line 376, in affine_transform
E       return _texture.affine_transformation(data=input,
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.Np3X0NVCM9/cupy/cupyx/_texture.py", line 168, in affine_transformation
E       texture_object = _create_texture_object(data,
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.Np3X0NVCM9/cupy/cupyx/_texture.py", line 98, in _create_texture_object
E       array = texture.CUDAarray(texture_fmt, *data.shape[::-1])
E     File "cupy/cuda/texture.pyx", line 296, in cupy.cuda.texture.CUDAarray.__init__
E       self.ptr = runtime.malloc3DArray(desc.ptr, width, height, depth,
E     File "cupy_backends/cuda/api/runtime.pyx", line 593, in cupy_backends.cuda.api.runtime.malloc3DArray
E       check_status(status)
E     File "cupy_backends/cuda/api/runtime.pyx", line 265, in cupy_backends.cuda.api.runtime.check_status
E       raise CUDARuntimeError(status)
E   cupy_backends.cuda.api.runtime.CUDARuntimeError: hipErrorUnknown: hipErrorUnknown

cupy_backends/cuda/api/runtime.pyx:265: AssertionError
----------------------------- Captured stderr call -----------------------------
Traceback (most recent call last):
  File "cupy_backends/cuda/api/runtime.pyx", line 644, in cupy_backends.cuda.api.runtime.freeArray
    check_status(status)
  File "cupy_backends/cuda/api/runtime.pyx", line 265, in cupy_backends.cuda.api.runtime.check_status
    raise CUDARuntimeError(status)
cupy_backends.cuda.api.runtime.CUDARuntimeError: hipErrorUnknown: hipErrorUnknown
_ TestAffineTransformTextureMemory.test_affine_transform_texture_memory[_param_320_{mode='nearest', order=1, output=float32, output_shape=None, shape=(100, 100), theta=0}] _

self = <<cupyx_tests.scipy_tests.ndimage_tests.test_interpolation.TestAffineTransformTextureMemory object at 0x7fd7055eef40> ...ode': 'nearest', 'order': 1, 'output': <class 'numpy.float32'>, 'output_shape': None, 'shape': (100, 100), 'theta': 0}>
xp = <module 'cupy' from '/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.Np3X0NVCM9/cupy/cupy/__init__.py'>
scp = <module 'cupyx.scipy' from '/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.Np3X0NVCM9/cupy/cupyx/scipy/__init__.py'>

    @testing.numpy_cupy_allclose(atol=0.1, scipy_name='scp')
    def test_affine_transform_texture_memory(self, xp, scp):
        a = xp.ones(self.shape, dtype=xp.float32)
        center = numpy.divide(numpy.subtract(self.shape, 1), 2)
    
        if len(self.shape) == 2:
            matrix = self._2d_rotation_matrix(self.theta, center)
        elif len(self.shape) == 3:
            matrix = self._3d_rotation_matrix(self.theta, center)
        else:
            return pytest.xfail('Unsupported shape')
    
        if self.output == 'empty':
            output = xp.empty(self.shape, dtype=xp.float32)
            if self.output_shape:
                return pytest.skip('This combination is tested in '
                                   'test_invalid_texture_arguments')
        else:
            output = self.output
    
        if self.output_shape:
            output_shape = (self.output_shape, ) * len(self.shape)
        else:
            output_shape = self.output_shape
    
        if xp == cupy:
            m = cupyx.scipy.ndimage.affine_transform
            matrix = cupy.array(matrix)
>           return m(a, matrix, output_shape=output_shape,
                     output=output, order=self.order,
                     mode=self.mode, texture_memory=True)

tests/cupyx_tests/scipy_tests/ndimage_tests/test_interpolation.py:398: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
cupyx/scipy/ndimage/interpolation.py:376: in affine_transform
    return _texture.affine_transformation(data=input,
cupyx/_texture.py:168: in affine_transformation
    texture_object = _create_texture_object(data,
cupyx/_texture.py:98: in _create_texture_object
    array = texture.CUDAarray(texture_fmt, *data.shape[::-1])
cupy/cuda/texture.pyx:296: in cupy.cuda.texture.CUDAarray.__init__
    self.ptr = runtime.malloc3DArray(desc.ptr, width, height, depth,
cupy_backends/cuda/api/runtime.pyx:593: in cupy_backends.cuda.api.runtime.malloc3DArray
    check_status(status)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

>   raise CUDARuntimeError(status)
E   AssertionError: Only cupy raises error
E   
E   Traceback (most recent call last):
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.Np3X0NVCM9/cupy/cupy/testing/_helper.py", line 47, in _call_func
E       result = impl(self, *args, **kw)
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.Np3X0NVCM9/cupy/tests/cupyx_tests/scipy_tests/ndimage_tests/test_interpolation.py", line 398, in test_affine_transform_texture_memory
E       return m(a, matrix, output_shape=output_shape,
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.Np3X0NVCM9/cupy/cupyx/scipy/ndimage/interpolation.py", line 376, in affine_transform
E       return _texture.affine_transformation(data=input,
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.Np3X0NVCM9/cupy/cupyx/_texture.py", line 168, in affine_transformation
E       texture_object = _create_texture_object(data,
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.Np3X0NVCM9/cupy/cupyx/_texture.py", line 98, in _create_texture_object
E       array = texture.CUDAarray(texture_fmt, *data.shape[::-1])
E     File "cupy/cuda/texture.pyx", line 296, in cupy.cuda.texture.CUDAarray.__init__
E       self.ptr = runtime.malloc3DArray(desc.ptr, width, height, depth,
E     File "cupy_backends/cuda/api/runtime.pyx", line 593, in cupy_backends.cuda.api.runtime.malloc3DArray
E       check_status(status)
E     File "cupy_backends/cuda/api/runtime.pyx", line 265, in cupy_backends.cuda.api.runtime.check_status
E       raise CUDARuntimeError(status)
E   cupy_backends.cuda.api.runtime.CUDARuntimeError: hipErrorUnknown: hipErrorUnknown

cupy_backends/cuda/api/runtime.pyx:265: AssertionError
----------------------------- Captured stderr call -----------------------------
Traceback (most recent call last):
  File "cupy_backends/cuda/api/runtime.pyx", line 644, in cupy_backends.cuda.api.runtime.freeArray
    check_status(status)
  File "cupy_backends/cuda/api/runtime.pyx", line 265, in cupy_backends.cuda.api.runtime.check_status
    raise CUDARuntimeError(status)
cupy_backends.cuda.api.runtime.CUDARuntimeError: hipErrorUnknown: hipErrorUnknown
_ TestAffineTransformTextureMemory.test_affine_transform_texture_memory[_param_321_{mode='nearest', order=1, output=float32, output_shape=None, shape=(100, 100), theta=90}] _

self = <<cupyx_tests.scipy_tests.ndimage_tests.test_interpolation.TestAffineTransformTextureMemory object at 0x7fd7061dacd0> ...de': 'nearest', 'order': 1, 'output': <class 'numpy.float32'>, 'output_shape': None, 'shape': (100, 100), 'theta': 90}>
xp = <module 'cupy' from '/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.Np3X0NVCM9/cupy/cupy/__init__.py'>
scp = <module 'cupyx.scipy' from '/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.Np3X0NVCM9/cupy/cupyx/scipy/__init__.py'>

    @testing.numpy_cupy_allclose(atol=0.1, scipy_name='scp')
    def test_affine_transform_texture_memory(self, xp, scp):
        a = xp.ones(self.shape, dtype=xp.float32)
        center = numpy.divide(numpy.subtract(self.shape, 1), 2)
    
        if len(self.shape) == 2:
            matrix = self._2d_rotation_matrix(self.theta, center)
        elif len(self.shape) == 3:
            matrix = self._3d_rotation_matrix(self.theta, center)
        else:
            return pytest.xfail('Unsupported shape')
    
        if self.output == 'empty':
            output = xp.empty(self.shape, dtype=xp.float32)
            if self.output_shape:
                return pytest.skip('This combination is tested in '
                                   'test_invalid_texture_arguments')
        else:
            output = self.output
    
        if self.output_shape:
            output_shape = (self.output_shape, ) * len(self.shape)
        else:
            output_shape = self.output_shape
    
        if xp == cupy:
            m = cupyx.scipy.ndimage.affine_transform
            matrix = cupy.array(matrix)
>           return m(a, matrix, output_shape=output_shape,
                     output=output, order=self.order,
                     mode=self.mode, texture_memory=True)

tests/cupyx_tests/scipy_tests/ndimage_tests/test_interpolation.py:398: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
cupyx/scipy/ndimage/interpolation.py:376: in affine_transform
    return _texture.affine_transformation(data=input,
cupyx/_texture.py:168: in affine_transformation
    texture_object = _create_texture_object(data,
cupyx/_texture.py:98: in _create_texture_object
    array = texture.CUDAarray(texture_fmt, *data.shape[::-1])
cupy/cuda/texture.pyx:296: in cupy.cuda.texture.CUDAarray.__init__
    self.ptr = runtime.malloc3DArray(desc.ptr, width, height, depth,
cupy_backends/cuda/api/runtime.pyx:593: in cupy_backends.cuda.api.runtime.malloc3DArray
    check_status(status)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

>   raise CUDARuntimeError(status)
E   AssertionError: Only cupy raises error
E   
E   Traceback (most recent call last):
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.Np3X0NVCM9/cupy/cupy/testing/_helper.py", line 47, in _call_func
E       result = impl(self, *args, **kw)
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.Np3X0NVCM9/cupy/tests/cupyx_tests/scipy_tests/ndimage_tests/test_interpolation.py", line 398, in test_affine_transform_texture_memory
E       return m(a, matrix, output_shape=output_shape,
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.Np3X0NVCM9/cupy/cupyx/scipy/ndimage/interpolation.py", line 376, in affine_transform
E       return _texture.affine_transformation(data=input,
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.Np3X0NVCM9/cupy/cupyx/_texture.py", line 168, in affine_transformation
E       texture_object = _create_texture_object(data,
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.Np3X0NVCM9/cupy/cupyx/_texture.py", line 98, in _create_texture_object
E       array = texture.CUDAarray(texture_fmt, *data.shape[::-1])
E     File "cupy/cuda/texture.pyx", line 296, in cupy.cuda.texture.CUDAarray.__init__
E       self.ptr = runtime.malloc3DArray(desc.ptr, width, height, depth,
E     File "cupy_backends/cuda/api/runtime.pyx", line 593, in cupy_backends.cuda.api.runtime.malloc3DArray
E       check_status(status)
E     File "cupy_backends/cuda/api/runtime.pyx", line 265, in cupy_backends.cuda.api.runtime.check_status
E       raise CUDARuntimeError(status)
E   cupy_backends.cuda.api.runtime.CUDARuntimeError: hipErrorUnknown: hipErrorUnknown

cupy_backends/cuda/api/runtime.pyx:265: AssertionError
----------------------------- Captured stderr call -----------------------------
Traceback (most recent call last):
  File "cupy_backends/cuda/api/runtime.pyx", line 644, in cupy_backends.cuda.api.runtime.freeArray
    check_status(status)
  File "cupy_backends/cuda/api/runtime.pyx", line 265, in cupy_backends.cuda.api.runtime.check_status
    raise CUDARuntimeError(status)
cupy_backends.cuda.api.runtime.CUDARuntimeError: hipErrorUnknown: hipErrorUnknown
_ TestAffineTransformTextureMemory.test_affine_transform_texture_memory[_param_322_{mode='nearest', order=1, output=float32, output_shape=None, shape=(100, 100), theta=180}] _

self = <<cupyx_tests.scipy_tests.ndimage_tests.test_interpolation.TestAffineTransformTextureMemory object at 0x7fd7056a2340> ...e': 'nearest', 'order': 1, 'output': <class 'numpy.float32'>, 'output_shape': None, 'shape': (100, 100), 'theta': 180}>
xp = <module 'cupy' from '/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.Np3X0NVCM9/cupy/cupy/__init__.py'>
scp = <module 'cupyx.scipy' from '/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.Np3X0NVCM9/cupy/cupyx/scipy/__init__.py'>

    @testing.numpy_cupy_allclose(atol=0.1, scipy_name='scp')
    def test_affine_transform_texture_memory(self, xp, scp):
        a = xp.ones(self.shape, dtype=xp.float32)
        center = numpy.divide(numpy.subtract(self.shape, 1), 2)
    
        if len(self.shape) == 2:
            matrix = self._2d_rotation_matrix(self.theta, center)
        elif len(self.shape) == 3:
            matrix = self._3d_rotation_matrix(self.theta, center)
        else:
            return pytest.xfail('Unsupported shape')
    
        if self.output == 'empty':
            output = xp.empty(self.shape, dtype=xp.float32)
            if self.output_shape:
                return pytest.skip('This combination is tested in '
                                   'test_invalid_texture_arguments')
        else:
            output = self.output
    
        if self.output_shape:
            output_shape = (self.output_shape, ) * len(self.shape)
        else:
            output_shape = self.output_shape
    
        if xp == cupy:
            m = cupyx.scipy.ndimage.affine_transform
            matrix = cupy.array(matrix)
>           return m(a, matrix, output_shape=output_shape,
                     output=output, order=self.order,
                     mode=self.mode, texture_memory=True)

tests/cupyx_tests/scipy_tests/ndimage_tests/test_interpolation.py:398: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
cupyx/scipy/ndimage/interpolation.py:376: in affine_transform
    return _texture.affine_transformation(data=input,
cupyx/_texture.py:168: in affine_transformation
    texture_object = _create_texture_object(data,
cupyx/_texture.py:98: in _create_texture_object
    array = texture.CUDAarray(texture_fmt, *data.shape[::-1])
cupy/cuda/texture.pyx:296: in cupy.cuda.texture.CUDAarray.__init__
    self.ptr = runtime.malloc3DArray(desc.ptr, width, height, depth,
cupy_backends/cuda/api/runtime.pyx:593: in cupy_backends.cuda.api.runtime.malloc3DArray
    check_status(status)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

>   raise CUDARuntimeError(status)
E   AssertionError: Only cupy raises error
E   
E   Traceback (most recent call last):
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.Np3X0NVCM9/cupy/cupy/testing/_helper.py", line 47, in _call_func
E       result = impl(self, *args, **kw)
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.Np3X0NVCM9/cupy/tests/cupyx_tests/scipy_tests/ndimage_tests/test_interpolation.py", line 398, in test_affine_transform_texture_memory
E       return m(a, matrix, output_shape=output_shape,
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.Np3X0NVCM9/cupy/cupyx/scipy/ndimage/interpolation.py", line 376, in affine_transform
E       return _texture.affine_transformation(data=input,
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.Np3X0NVCM9/cupy/cupyx/_texture.py", line 168, in affine_transformation
E       texture_object = _create_texture_object(data,
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.Np3X0NVCM9/cupy/cupyx/_texture.py", line 98, in _create_texture_object
E       array = texture.CUDAarray(texture_fmt, *data.shape[::-1])
E     File "cupy/cuda/texture.pyx", line 296, in cupy.cuda.texture.CUDAarray.__init__
E       self.ptr = runtime.malloc3DArray(desc.ptr, width, height, depth,
E     File "cupy_backends/cuda/api/runtime.pyx", line 593, in cupy_backends.cuda.api.runtime.malloc3DArray
E       check_status(status)
E     File "cupy_backends/cuda/api/runtime.pyx", line 265, in cupy_backends.cuda.api.runtime.check_status
E       raise CUDARuntimeError(status)
E   cupy_backends.cuda.api.runtime.CUDARuntimeError: hipErrorUnknown: hipErrorUnknown

cupy_backends/cuda/api/runtime.pyx:265: AssertionError
----------------------------- Captured stderr call -----------------------------
Traceback (most recent call last):
  File "cupy_backends/cuda/api/runtime.pyx", line 644, in cupy_backends.cuda.api.runtime.freeArray
    check_status(status)
  File "cupy_backends/cuda/api/runtime.pyx", line 265, in cupy_backends.cuda.api.runtime.check_status
    raise CUDARuntimeError(status)
cupy_backends.cuda.api.runtime.CUDARuntimeError: hipErrorUnknown: hipErrorUnknown
_ TestAffineTransformTextureMemory.test_affine_transform_texture_memory[_param_323_{mode='nearest', order=1, output=float32, output_shape=None, shape=(100, 100), theta=270}] _

self = <<cupyx_tests.scipy_tests.ndimage_tests.test_interpolation.TestAffineTransformTextureMemory object at 0x7fd705946490> ...e': 'nearest', 'order': 1, 'output': <class 'numpy.float32'>, 'output_shape': None, 'shape': (100, 100), 'theta': 270}>
xp = <module 'cupy' from '/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.Np3X0NVCM9/cupy/cupy/__init__.py'>
scp = <module 'cupyx.scipy' from '/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.Np3X0NVCM9/cupy/cupyx/scipy/__init__.py'>

    @testing.numpy_cupy_allclose(atol=0.1, scipy_name='scp')
    def test_affine_transform_texture_memory(self, xp, scp):
        a = xp.ones(self.shape, dtype=xp.float32)
        center = numpy.divide(numpy.subtract(self.shape, 1), 2)
    
        if len(self.shape) == 2:
            matrix = self._2d_rotation_matrix(self.theta, center)
        elif len(self.shape) == 3:
            matrix = self._3d_rotation_matrix(self.theta, center)
        else:
            return pytest.xfail('Unsupported shape')
    
        if self.output == 'empty':
            output = xp.empty(self.shape, dtype=xp.float32)
            if self.output_shape:
                return pytest.skip('This combination is tested in '
                                   'test_invalid_texture_arguments')
        else:
            output = self.output
    
        if self.output_shape:
            output_shape = (self.output_shape, ) * len(self.shape)
        else:
            output_shape = self.output_shape
    
        if xp == cupy:
            m = cupyx.scipy.ndimage.affine_transform
            matrix = cupy.array(matrix)
>           return m(a, matrix, output_shape=output_shape,
                     output=output, order=self.order,
                     mode=self.mode, texture_memory=True)

tests/cupyx_tests/scipy_tests/ndimage_tests/test_interpolation.py:398: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
cupyx/scipy/ndimage/interpolation.py:376: in affine_transform
    return _texture.affine_transformation(data=input,
cupyx/_texture.py:168: in affine_transformation
    texture_object = _create_texture_object(data,
cupyx/_texture.py:98: in _create_texture_object
    array = texture.CUDAarray(texture_fmt, *data.shape[::-1])
cupy/cuda/texture.pyx:296: in cupy.cuda.texture.CUDAarray.__init__
    self.ptr = runtime.malloc3DArray(desc.ptr, width, height, depth,
cupy_backends/cuda/api/runtime.pyx:593: in cupy_backends.cuda.api.runtime.malloc3DArray
    check_status(status)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

>   raise CUDARuntimeError(status)
E   AssertionError: Only cupy raises error
E   
E   Traceback (most recent call last):
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.Np3X0NVCM9/cupy/cupy/testing/_helper.py", line 47, in _call_func
E       result = impl(self, *args, **kw)
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.Np3X0NVCM9/cupy/tests/cupyx_tests/scipy_tests/ndimage_tests/test_interpolation.py", line 398, in test_affine_transform_texture_memory
E       return m(a, matrix, output_shape=output_shape,
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.Np3X0NVCM9/cupy/cupyx/scipy/ndimage/interpolation.py", line 376, in affine_transform
E       return _texture.affine_transformation(data=input,
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.Np3X0NVCM9/cupy/cupyx/_texture.py", line 168, in affine_transformation
E       texture_object = _create_texture_object(data,
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.Np3X0NVCM9/cupy/cupyx/_texture.py", line 98, in _create_texture_object
E       array = texture.CUDAarray(texture_fmt, *data.shape[::-1])
E     File "cupy/cuda/texture.pyx", line 296, in cupy.cuda.texture.CUDAarray.__init__
E       self.ptr = runtime.malloc3DArray(desc.ptr, width, height, depth,
E     File "cupy_backends/cuda/api/runtime.pyx", line 593, in cupy_backends.cuda.api.runtime.malloc3DArray
E       check_status(status)
E     File "cupy_backends/cuda/api/runtime.pyx", line 265, in cupy_backends.cuda.api.runtime.check_status
E       raise CUDARuntimeError(status)
E   cupy_backends.cuda.api.runtime.CUDARuntimeError: hipErrorUnknown: hipErrorUnknown

cupy_backends/cuda/api/runtime.pyx:265: AssertionError
----------------------------- Captured stderr call -----------------------------
Traceback (most recent call last):
  File "cupy_backends/cuda/api/runtime.pyx", line 644, in cupy_backends.cuda.api.runtime.freeArray
    check_status(status)
  File "cupy_backends/cuda/api/runtime.pyx", line 265, in cupy_backends.cuda.api.runtime.check_status
    raise CUDARuntimeError(status)
cupy_backends.cuda.api.runtime.CUDARuntimeError: hipErrorUnknown: hipErrorUnknown
_ TestAffineTransformTextureMemory.test_affine_transform_texture_memory[_param_324_{mode='nearest', order=1, output=float32, output_shape=None, shape=(10, 20), theta=0}] _

self = <<cupyx_tests.scipy_tests.ndimage_tests.test_interpolation.TestAffineTransformTextureMemory object at 0x7fd707376220> ...'mode': 'nearest', 'order': 1, 'output': <class 'numpy.float32'>, 'output_shape': None, 'shape': (10, 20), 'theta': 0}>
xp = <module 'cupy' from '/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.Np3X0NVCM9/cupy/cupy/__init__.py'>
scp = <module 'cupyx.scipy' from '/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.Np3X0NVCM9/cupy/cupyx/scipy/__init__.py'>

    @testing.numpy_cupy_allclose(atol=0.1, scipy_name='scp')
    def test_affine_transform_texture_memory(self, xp, scp):
        a = xp.ones(self.shape, dtype=xp.float32)
        center = numpy.divide(numpy.subtract(self.shape, 1), 2)
    
        if len(self.shape) == 2:
            matrix = self._2d_rotation_matrix(self.theta, center)
        elif len(self.shape) == 3:
            matrix = self._3d_rotation_matrix(self.theta, center)
        else:
            return pytest.xfail('Unsupported shape')
    
        if self.output == 'empty':
            output = xp.empty(self.shape, dtype=xp.float32)
            if self.output_shape:
                return pytest.skip('This combination is tested in '
                                   'test_invalid_texture_arguments')
        else:
            output = self.output
    
        if self.output_shape:
            output_shape = (self.output_shape, ) * len(self.shape)
        else:
            output_shape = self.output_shape
    
        if xp == cupy:
            m = cupyx.scipy.ndimage.affine_transform
            matrix = cupy.array(matrix)
>           return m(a, matrix, output_shape=output_shape,
                     output=output, order=self.order,
                     mode=self.mode, texture_memory=True)

tests/cupyx_tests/scipy_tests/ndimage_tests/test_interpolation.py:398: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
cupyx/scipy/ndimage/interpolation.py:376: in affine_transform
    return _texture.affine_transformation(data=input,
cupyx/_texture.py:168: in affine_transformation
    texture_object = _create_texture_object(data,
cupyx/_texture.py:98: in _create_texture_object
    array = texture.CUDAarray(texture_fmt, *data.shape[::-1])
cupy/cuda/texture.pyx:296: in cupy.cuda.texture.CUDAarray.__init__
    self.ptr = runtime.malloc3DArray(desc.ptr, width, height, depth,
cupy_backends/cuda/api/runtime.pyx:593: in cupy_backends.cuda.api.runtime.malloc3DArray
    check_status(status)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

>   raise CUDARuntimeError(status)
E   AssertionError: Only cupy raises error
E   
E   Traceback (most recent call last):
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.Np3X0NVCM9/cupy/cupy/testing/_helper.py", line 47, in _call_func
E       result = impl(self, *args, **kw)
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.Np3X0NVCM9/cupy/tests/cupyx_tests/scipy_tests/ndimage_tests/test_interpolation.py", line 398, in test_affine_transform_texture_memory
E       return m(a, matrix, output_shape=output_shape,
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.Np3X0NVCM9/cupy/cupyx/scipy/ndimage/interpolation.py", line 376, in affine_transform
E       return _texture.affine_transformation(data=input,
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.Np3X0NVCM9/cupy/cupyx/_texture.py", line 168, in affine_transformation
E       texture_object = _create_texture_object(data,
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.Np3X0NVCM9/cupy/cupyx/_texture.py", line 98, in _create_texture_object
E       array = texture.CUDAarray(texture_fmt, *data.shape[::-1])
E     File "cupy/cuda/texture.pyx", line 296, in cupy.cuda.texture.CUDAarray.__init__
E       self.ptr = runtime.malloc3DArray(desc.ptr, width, height, depth,
E     File "cupy_backends/cuda/api/runtime.pyx", line 593, in cupy_backends.cuda.api.runtime.malloc3DArray
E       check_status(status)
E     File "cupy_backends/cuda/api/runtime.pyx", line 265, in cupy_backends.cuda.api.runtime.check_status
E       raise CUDARuntimeError(status)
E   cupy_backends.cuda.api.runtime.CUDARuntimeError: hipErrorUnknown: hipErrorUnknown

cupy_backends/cuda/api/runtime.pyx:265: AssertionError
----------------------------- Captured stderr call -----------------------------
Traceback (most recent call last):
  File "cupy_backends/cuda/api/runtime.pyx", line 644, in cupy_backends.cuda.api.runtime.freeArray
    check_status(status)
  File "cupy_backends/cuda/api/runtime.pyx", line 265, in cupy_backends.cuda.api.runtime.check_status
    raise CUDARuntimeError(status)
cupy_backends.cuda.api.runtime.CUDARuntimeError: hipErrorUnknown: hipErrorUnknown
_ TestAffineTransformTextureMemory.test_affine_transform_texture_memory[_param_325_{mode='nearest', order=1, output=float32, output_shape=None, shape=(10, 20), theta=90}] _

self = <<cupyx_tests.scipy_tests.ndimage_tests.test_interpolation.TestAffineTransformTextureMemory object at 0x7fd705742340> ...mode': 'nearest', 'order': 1, 'output': <class 'numpy.float32'>, 'output_shape': None, 'shape': (10, 20), 'theta': 90}>
xp = <module 'cupy' from '/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.Np3X0NVCM9/cupy/cupy/__init__.py'>
scp = <module 'cupyx.scipy' from '/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.Np3X0NVCM9/cupy/cupyx/scipy/__init__.py'>

    @testing.numpy_cupy_allclose(atol=0.1, scipy_name='scp')
    def test_affine_transform_texture_memory(self, xp, scp):
        a = xp.ones(self.shape, dtype=xp.float32)
        center = numpy.divide(numpy.subtract(self.shape, 1), 2)
    
        if len(self.shape) == 2:
            matrix = self._2d_rotation_matrix(self.theta, center)
        elif len(self.shape) == 3:
            matrix = self._3d_rotation_matrix(self.theta, center)
        else:
            return pytest.xfail('Unsupported shape')
    
        if self.output == 'empty':
            output = xp.empty(self.shape, dtype=xp.float32)
            if self.output_shape:
                return pytest.skip('This combination is tested in '
                                   'test_invalid_texture_arguments')
        else:
            output = self.output
    
        if self.output_shape:
            output_shape = (self.output_shape, ) * len(self.shape)
        else:
            output_shape = self.output_shape
    
        if xp == cupy:
            m = cupyx.scipy.ndimage.affine_transform
            matrix = cupy.array(matrix)
>           return m(a, matrix, output_shape=output_shape,
                     output=output, order=self.order,
                     mode=self.mode, texture_memory=True)

tests/cupyx_tests/scipy_tests/ndimage_tests/test_interpolation.py:398: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
cupyx/scipy/ndimage/interpolation.py:376: in affine_transform
    return _texture.affine_transformation(data=input,
cupyx/_texture.py:168: in affine_transformation
    texture_object = _create_texture_object(data,
cupyx/_texture.py:98: in _create_texture_object
    array = texture.CUDAarray(texture_fmt, *data.shape[::-1])
cupy/cuda/texture.pyx:296: in cupy.cuda.texture.CUDAarray.__init__
    self.ptr = runtime.malloc3DArray(desc.ptr, width, height, depth,
cupy_backends/cuda/api/runtime.pyx:593: in cupy_backends.cuda.api.runtime.malloc3DArray
    check_status(status)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

>   raise CUDARuntimeError(status)
E   AssertionError: Only cupy raises error
E   
E   Traceback (most recent call last):
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.Np3X0NVCM9/cupy/cupy/testing/_helper.py", line 47, in _call_func
E       result = impl(self, *args, **kw)
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.Np3X0NVCM9/cupy/tests/cupyx_tests/scipy_tests/ndimage_tests/test_interpolation.py", line 398, in test_affine_transform_texture_memory
E       return m(a, matrix, output_shape=output_shape,
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.Np3X0NVCM9/cupy/cupyx/scipy/ndimage/interpolation.py", line 376, in affine_transform
E       return _texture.affine_transformation(data=input,
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.Np3X0NVCM9/cupy/cupyx/_texture.py", line 168, in affine_transformation
E       texture_object = _create_texture_object(data,
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.Np3X0NVCM9/cupy/cupyx/_texture.py", line 98, in _create_texture_object
E       array = texture.CUDAarray(texture_fmt, *data.shape[::-1])
E     File "cupy/cuda/texture.pyx", line 296, in cupy.cuda.texture.CUDAarray.__init__
E       self.ptr = runtime.malloc3DArray(desc.ptr, width, height, depth,
E     File "cupy_backends/cuda/api/runtime.pyx", line 593, in cupy_backends.cuda.api.runtime.malloc3DArray
E       check_status(status)
E     File "cupy_backends/cuda/api/runtime.pyx", line 265, in cupy_backends.cuda.api.runtime.check_status
E       raise CUDARuntimeError(status)
E   cupy_backends.cuda.api.runtime.CUDARuntimeError: hipErrorUnknown: hipErrorUnknown

cupy_backends/cuda/api/runtime.pyx:265: AssertionError
----------------------------- Captured stderr call -----------------------------
Traceback (most recent call last):
  File "cupy_backends/cuda/api/runtime.pyx", line 644, in cupy_backends.cuda.api.runtime.freeArray
    check_status(status)
  File "cupy_backends/cuda/api/runtime.pyx", line 265, in cupy_backends.cuda.api.runtime.check_status
    raise CUDARuntimeError(status)
cupy_backends.cuda.api.runtime.CUDARuntimeError: hipErrorUnknown: hipErrorUnknown
_ TestAffineTransformTextureMemory.test_affine_transform_texture_memory[_param_326_{mode='nearest', order=1, output=float32, output_shape=None, shape=(10, 20), theta=180}] _

self = <<cupyx_tests.scipy_tests.ndimage_tests.test_interpolation.TestAffineTransformTextureMemory object at 0x7fd707cf6880> ...ode': 'nearest', 'order': 1, 'output': <class 'numpy.float32'>, 'output_shape': None, 'shape': (10, 20), 'theta': 180}>
xp = <module 'cupy' from '/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.Np3X0NVCM9/cupy/cupy/__init__.py'>
scp = <module 'cupyx.scipy' from '/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.Np3X0NVCM9/cupy/cupyx/scipy/__init__.py'>

    @testing.numpy_cupy_allclose(atol=0.1, scipy_name='scp')
    def test_affine_transform_texture_memory(self, xp, scp):
        a = xp.ones(self.shape, dtype=xp.float32)
        center = numpy.divide(numpy.subtract(self.shape, 1), 2)
    
        if len(self.shape) == 2:
            matrix = self._2d_rotation_matrix(self.theta, center)
        elif len(self.shape) == 3:
            matrix = self._3d_rotation_matrix(self.theta, center)
        else:
            return pytest.xfail('Unsupported shape')
    
        if self.output == 'empty':
            output = xp.empty(self.shape, dtype=xp.float32)
            if self.output_shape:
                return pytest.skip('This combination is tested in '
                                   'test_invalid_texture_arguments')
        else:
            output = self.output
    
        if self.output_shape:
            output_shape = (self.output_shape, ) * len(self.shape)
        else:
            output_shape = self.output_shape
    
        if xp == cupy:
            m = cupyx.scipy.ndimage.affine_transform
            matrix = cupy.array(matrix)
>           return m(a, matrix, output_shape=output_shape,
                     output=output, order=self.order,
                     mode=self.mode, texture_memory=True)

tests/cupyx_tests/scipy_tests/ndimage_tests/test_interpolation.py:398: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
cupyx/scipy/ndimage/interpolation.py:376: in affine_transform
    return _texture.affine_transformation(data=input,
cupyx/_texture.py:168: in affine_transformation
    texture_object = _create_texture_object(data,
cupyx/_texture.py:98: in _create_texture_object
    array = texture.CUDAarray(texture_fmt, *data.shape[::-1])
cupy/cuda/texture.pyx:296: in cupy.cuda.texture.CUDAarray.__init__
    self.ptr = runtime.malloc3DArray(desc.ptr, width, height, depth,
cupy_backends/cuda/api/runtime.pyx:593: in cupy_backends.cuda.api.runtime.malloc3DArray
    check_status(status)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

>   raise CUDARuntimeError(status)
E   AssertionError: Only cupy raises error
E   
E   Traceback (most recent call last):
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.Np3X0NVCM9/cupy/cupy/testing/_helper.py", line 47, in _call_func
E       result = impl(self, *args, **kw)
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.Np3X0NVCM9/cupy/tests/cupyx_tests/scipy_tests/ndimage_tests/test_interpolation.py", line 398, in test_affine_transform_texture_memory
E       return m(a, matrix, output_shape=output_shape,
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.Np3X0NVCM9/cupy/cupyx/scipy/ndimage/interpolation.py", line 376, in affine_transform
E       return _texture.affine_transformation(data=input,
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.Np3X0NVCM9/cupy/cupyx/_texture.py", line 168, in affine_transformation
E       texture_object = _create_texture_object(data,
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.Np3X0NVCM9/cupy/cupyx/_texture.py", line 98, in _create_texture_object
E       array = texture.CUDAarray(texture_fmt, *data.shape[::-1])
E     File "cupy/cuda/texture.pyx", line 296, in cupy.cuda.texture.CUDAarray.__init__
E       self.ptr = runtime.malloc3DArray(desc.ptr, width, height, depth,
E     File "cupy_backends/cuda/api/runtime.pyx", line 593, in cupy_backends.cuda.api.runtime.malloc3DArray
E       check_status(status)
E     File "cupy_backends/cuda/api/runtime.pyx", line 265, in cupy_backends.cuda.api.runtime.check_status
E       raise CUDARuntimeError(status)
E   cupy_backends.cuda.api.runtime.CUDARuntimeError: hipErrorUnknown: hipErrorUnknown

cupy_backends/cuda/api/runtime.pyx:265: AssertionError
----------------------------- Captured stderr call -----------------------------
Traceback (most recent call last):
  File "cupy_backends/cuda/api/runtime.pyx", line 644, in cupy_backends.cuda.api.runtime.freeArray
    check_status(status)
  File "cupy_backends/cuda/api/runtime.pyx", line 265, in cupy_backends.cuda.api.runtime.check_status
    raise CUDARuntimeError(status)
cupy_backends.cuda.api.runtime.CUDARuntimeError: hipErrorUnknown: hipErrorUnknown
_ TestAffineTransformTextureMemory.test_affine_transform_texture_memory[_param_327_{mode='nearest', order=1, output=float32, output_shape=None, shape=(10, 20), theta=270}] _

self = <<cupyx_tests.scipy_tests.ndimage_tests.test_interpolation.TestAffineTransformTextureMemory object at 0x7fd7055fd460> ...ode': 'nearest', 'order': 1, 'output': <class 'numpy.float32'>, 'output_shape': None, 'shape': (10, 20), 'theta': 270}>
xp = <module 'cupy' from '/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.Np3X0NVCM9/cupy/cupy/__init__.py'>
scp = <module 'cupyx.scipy' from '/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.Np3X0NVCM9/cupy/cupyx/scipy/__init__.py'>

    @testing.numpy_cupy_allclose(atol=0.1, scipy_name='scp')
    def test_affine_transform_texture_memory(self, xp, scp):
        a = xp.ones(self.shape, dtype=xp.float32)
        center = numpy.divide(numpy.subtract(self.shape, 1), 2)
    
        if len(self.shape) == 2:
            matrix = self._2d_rotation_matrix(self.theta, center)
        elif len(self.shape) == 3:
            matrix = self._3d_rotation_matrix(self.theta, center)
        else:
            return pytest.xfail('Unsupported shape')
    
        if self.output == 'empty':
            output = xp.empty(self.shape, dtype=xp.float32)
            if self.output_shape:
                return pytest.skip('This combination is tested in '
                                   'test_invalid_texture_arguments')
        else:
            output = self.output
    
        if self.output_shape:
            output_shape = (self.output_shape, ) * len(self.shape)
        else:
            output_shape = self.output_shape
    
        if xp == cupy:
            m = cupyx.scipy.ndimage.affine_transform
            matrix = cupy.array(matrix)
>           return m(a, matrix, output_shape=output_shape,
                     output=output, order=self.order,
                     mode=self.mode, texture_memory=True)

tests/cupyx_tests/scipy_tests/ndimage_tests/test_interpolation.py:398: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
cupyx/scipy/ndimage/interpolation.py:376: in affine_transform
    return _texture.affine_transformation(data=input,
cupyx/_texture.py:168: in affine_transformation
    texture_object = _create_texture_object(data,
cupyx/_texture.py:98: in _create_texture_object
    array = texture.CUDAarray(texture_fmt, *data.shape[::-1])
cupy/cuda/texture.pyx:296: in cupy.cuda.texture.CUDAarray.__init__
    self.ptr = runtime.malloc3DArray(desc.ptr, width, height, depth,
cupy_backends/cuda/api/runtime.pyx:593: in cupy_backends.cuda.api.runtime.malloc3DArray
    check_status(status)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

>   raise CUDARuntimeError(status)
E   AssertionError: Only cupy raises error
E   
E   Traceback (most recent call last):
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.Np3X0NVCM9/cupy/cupy/testing/_helper.py", line 47, in _call_func
E       result = impl(self, *args, **kw)
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.Np3X0NVCM9/cupy/tests/cupyx_tests/scipy_tests/ndimage_tests/test_interpolation.py", line 398, in test_affine_transform_texture_memory
E       return m(a, matrix, output_shape=output_shape,
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.Np3X0NVCM9/cupy/cupyx/scipy/ndimage/interpolation.py", line 376, in affine_transform
E       return _texture.affine_transformation(data=input,
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.Np3X0NVCM9/cupy/cupyx/_texture.py", line 168, in affine_transformation
E       texture_object = _create_texture_object(data,
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.Np3X0NVCM9/cupy/cupyx/_texture.py", line 98, in _create_texture_object
E       array = texture.CUDAarray(texture_fmt, *data.shape[::-1])
E     File "cupy/cuda/texture.pyx", line 296, in cupy.cuda.texture.CUDAarray.__init__
E       self.ptr = runtime.malloc3DArray(desc.ptr, width, height, depth,
E     File "cupy_backends/cuda/api/runtime.pyx", line 593, in cupy_backends.cuda.api.runtime.malloc3DArray
E       check_status(status)
E     File "cupy_backends/cuda/api/runtime.pyx", line 265, in cupy_backends.cuda.api.runtime.check_status
E       raise CUDARuntimeError(status)
E   cupy_backends.cuda.api.runtime.CUDARuntimeError: hipErrorUnknown: hipErrorUnknown

cupy_backends/cuda/api/runtime.pyx:265: AssertionError
----------------------------- Captured stderr call -----------------------------
Traceback (most recent call last):
  File "cupy_backends/cuda/api/runtime.pyx", line 644, in cupy_backends.cuda.api.runtime.freeArray
    check_status(status)
  File "cupy_backends/cuda/api/runtime.pyx", line 265, in cupy_backends.cuda.api.runtime.check_status
    raise CUDARuntimeError(status)
cupy_backends.cuda.api.runtime.CUDARuntimeError: hipErrorUnknown: hipErrorUnknown
_ TestAffineTransformTextureMemory.test_affine_transform_texture_memory[_param_328_{mode='nearest', order=1, output=float32, output_shape=None, shape=(10, 10, 10), theta=0}] _

self = <<cupyx_tests.scipy_tests.ndimage_tests.test_interpolation.TestAffineTransformTextureMemory object at 0x7fd7073e9310> ...e': 'nearest', 'order': 1, 'output': <class 'numpy.float32'>, 'output_shape': None, 'shape': (10, 10, 10), 'theta': 0}>
xp = <module 'cupy' from '/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.Np3X0NVCM9/cupy/cupy/__init__.py'>
scp = <module 'cupyx.scipy' from '/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.Np3X0NVCM9/cupy/cupyx/scipy/__init__.py'>

    @testing.numpy_cupy_allclose(atol=0.1, scipy_name='scp')
    def test_affine_transform_texture_memory(self, xp, scp):
        a = xp.ones(self.shape, dtype=xp.float32)
        center = numpy.divide(numpy.subtract(self.shape, 1), 2)
    
        if len(self.shape) == 2:
            matrix = self._2d_rotation_matrix(self.theta, center)
        elif len(self.shape) == 3:
            matrix = self._3d_rotation_matrix(self.theta, center)
        else:
            return pytest.xfail('Unsupported shape')
    
        if self.output == 'empty':
            output = xp.empty(self.shape, dtype=xp.float32)
            if self.output_shape:
                return pytest.skip('This combination is tested in '
                                   'test_invalid_texture_arguments')
        else:
            output = self.output
    
        if self.output_shape:
            output_shape = (self.output_shape, ) * len(self.shape)
        else:
            output_shape = self.output_shape
    
        if xp == cupy:
            m = cupyx.scipy.ndimage.affine_transform
            matrix = cupy.array(matrix)
>           return m(a, matrix, output_shape=output_shape,
                     output=output, order=self.order,
                     mode=self.mode, texture_memory=True)

tests/cupyx_tests/scipy_tests/ndimage_tests/test_interpolation.py:398: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
cupyx/scipy/ndimage/interpolation.py:376: in affine_transform
    return _texture.affine_transformation(data=input,
cupyx/_texture.py:168: in affine_transformation
    texture_object = _create_texture_object(data,
cupyx/_texture.py:98: in _create_texture_object
    array = texture.CUDAarray(texture_fmt, *data.shape[::-1])
cupy/cuda/texture.pyx:296: in cupy.cuda.texture.CUDAarray.__init__
    self.ptr = runtime.malloc3DArray(desc.ptr, width, height, depth,
cupy_backends/cuda/api/runtime.pyx:593: in cupy_backends.cuda.api.runtime.malloc3DArray
    check_status(status)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

>   raise CUDARuntimeError(status)
E   AssertionError: Only cupy raises error
E   
E   Traceback (most recent call last):
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.Np3X0NVCM9/cupy/cupy/testing/_helper.py", line 47, in _call_func
E       result = impl(self, *args, **kw)
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.Np3X0NVCM9/cupy/tests/cupyx_tests/scipy_tests/ndimage_tests/test_interpolation.py", line 398, in test_affine_transform_texture_memory
E       return m(a, matrix, output_shape=output_shape,
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.Np3X0NVCM9/cupy/cupyx/scipy/ndimage/interpolation.py", line 376, in affine_transform
E       return _texture.affine_transformation(data=input,
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.Np3X0NVCM9/cupy/cupyx/_texture.py", line 168, in affine_transformation
E       texture_object = _create_texture_object(data,
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.Np3X0NVCM9/cupy/cupyx/_texture.py", line 98, in _create_texture_object
E       array = texture.CUDAarray(texture_fmt, *data.shape[::-1])
E     File "cupy/cuda/texture.pyx", line 296, in cupy.cuda.texture.CUDAarray.__init__
E       self.ptr = runtime.malloc3DArray(desc.ptr, width, height, depth,
E     File "cupy_backends/cuda/api/runtime.pyx", line 593, in cupy_backends.cuda.api.runtime.malloc3DArray
E       check_status(status)
E     File "cupy_backends/cuda/api/runtime.pyx", line 265, in cupy_backends.cuda.api.runtime.check_status
E       raise CUDARuntimeError(status)
E   cupy_backends.cuda.api.runtime.CUDARuntimeError: hipErrorUnknown: hipErrorUnknown

cupy_backends/cuda/api/runtime.pyx:265: AssertionError
----------------------------- Captured stderr call -----------------------------
Traceback (most recent call last):
  File "cupy_backends/cuda/api/runtime.pyx", line 644, in cupy_backends.cuda.api.runtime.freeArray
    check_status(status)
  File "cupy_backends/cuda/api/runtime.pyx", line 265, in cupy_backends.cuda.api.runtime.check_status
    raise CUDARuntimeError(status)
cupy_backends.cuda.api.runtime.CUDARuntimeError: hipErrorUnknown: hipErrorUnknown
_ TestAffineTransformTextureMemory.test_affine_transform_texture_memory[_param_329_{mode='nearest', order=1, output=float32, output_shape=None, shape=(10, 10, 10), theta=90}] _

self = <<cupyx_tests.scipy_tests.ndimage_tests.test_interpolation.TestAffineTransformTextureMemory object at 0x7fd70574e850> ...': 'nearest', 'order': 1, 'output': <class 'numpy.float32'>, 'output_shape': None, 'shape': (10, 10, 10), 'theta': 90}>
xp = <module 'cupy' from '/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.Np3X0NVCM9/cupy/cupy/__init__.py'>
scp = <module 'cupyx.scipy' from '/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.Np3X0NVCM9/cupy/cupyx/scipy/__init__.py'>

    @testing.numpy_cupy_allclose(atol=0.1, scipy_name='scp')
    def test_affine_transform_texture_memory(self, xp, scp):
        a = xp.ones(self.shape, dtype=xp.float32)
        center = numpy.divide(numpy.subtract(self.shape, 1), 2)
    
        if len(self.shape) == 2:
            matrix = self._2d_rotation_matrix(self.theta, center)
        elif len(self.shape) == 3:
            matrix = self._3d_rotation_matrix(self.theta, center)
        else:
            return pytest.xfail('Unsupported shape')
    
        if self.output == 'empty':
            output = xp.empty(self.shape, dtype=xp.float32)
            if self.output_shape:
                return pytest.skip('This combination is tested in '
                                   'test_invalid_texture_arguments')
        else:
            output = self.output
    
        if self.output_shape:
            output_shape = (self.output_shape, ) * len(self.shape)
        else:
            output_shape = self.output_shape
    
        if xp == cupy:
            m = cupyx.scipy.ndimage.affine_transform
            matrix = cupy.array(matrix)
>           return m(a, matrix, output_shape=output_shape,
                     output=output, order=self.order,
                     mode=self.mode, texture_memory=True)

tests/cupyx_tests/scipy_tests/ndimage_tests/test_interpolation.py:398: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
cupyx/scipy/ndimage/interpolation.py:376: in affine_transform
    return _texture.affine_transformation(data=input,
cupyx/_texture.py:168: in affine_transformation
    texture_object = _create_texture_object(data,
cupyx/_texture.py:98: in _create_texture_object
    array = texture.CUDAarray(texture_fmt, *data.shape[::-1])
cupy/cuda/texture.pyx:296: in cupy.cuda.texture.CUDAarray.__init__
    self.ptr = runtime.malloc3DArray(desc.ptr, width, height, depth,
cupy_backends/cuda/api/runtime.pyx:593: in cupy_backends.cuda.api.runtime.malloc3DArray
    check_status(status)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

>   raise CUDARuntimeError(status)
E   AssertionError: Only cupy raises error
E   
E   Traceback (most recent call last):
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.Np3X0NVCM9/cupy/cupy/testing/_helper.py", line 47, in _call_func
E       result = impl(self, *args, **kw)
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.Np3X0NVCM9/cupy/tests/cupyx_tests/scipy_tests/ndimage_tests/test_interpolation.py", line 398, in test_affine_transform_texture_memory
E       return m(a, matrix, output_shape=output_shape,
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.Np3X0NVCM9/cupy/cupyx/scipy/ndimage/interpolation.py", line 376, in affine_transform
E       return _texture.affine_transformation(data=input,
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.Np3X0NVCM9/cupy/cupyx/_texture.py", line 168, in affine_transformation
E       texture_object = _create_texture_object(data,
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.Np3X0NVCM9/cupy/cupyx/_texture.py", line 98, in _create_texture_object
E       array = texture.CUDAarray(texture_fmt, *data.shape[::-1])
E     File "cupy/cuda/texture.pyx", line 296, in cupy.cuda.texture.CUDAarray.__init__
E       self.ptr = runtime.malloc3DArray(desc.ptr, width, height, depth,
E     File "cupy_backends/cuda/api/runtime.pyx", line 593, in cupy_backends.cuda.api.runtime.malloc3DArray
E       check_status(status)
E     File "cupy_backends/cuda/api/runtime.pyx", line 265, in cupy_backends.cuda.api.runtime.check_status
E       raise CUDARuntimeError(status)
E   cupy_backends.cuda.api.runtime.CUDARuntimeError: hipErrorUnknown: hipErrorUnknown

cupy_backends/cuda/api/runtime.pyx:265: AssertionError
----------------------------- Captured stderr call -----------------------------
Traceback (most recent call last):
  File "cupy_backends/cuda/api/runtime.pyx", line 644, in cupy_backends.cuda.api.runtime.freeArray
    check_status(status)
  File "cupy_backends/cuda/api/runtime.pyx", line 265, in cupy_backends.cuda.api.runtime.check_status
    raise CUDARuntimeError(status)
cupy_backends.cuda.api.runtime.CUDARuntimeError: hipErrorUnknown: hipErrorUnknown
_ TestAffineTransformTextureMemory.test_affine_transform_texture_memory[_param_330_{mode='nearest', order=1, output=float32, output_shape=None, shape=(10, 10, 10), theta=180}] _

self = <<cupyx_tests.scipy_tests.ndimage_tests.test_interpolation.TestAffineTransformTextureMemory object at 0x7fd7078982e0> ...: 'nearest', 'order': 1, 'output': <class 'numpy.float32'>, 'output_shape': None, 'shape': (10, 10, 10), 'theta': 180}>
xp = <module 'cupy' from '/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.Np3X0NVCM9/cupy/cupy/__init__.py'>
scp = <module 'cupyx.scipy' from '/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.Np3X0NVCM9/cupy/cupyx/scipy/__init__.py'>

    @testing.numpy_cupy_allclose(atol=0.1, scipy_name='scp')
    def test_affine_transform_texture_memory(self, xp, scp):
        a = xp.ones(self.shape, dtype=xp.float32)
        center = numpy.divide(numpy.subtract(self.shape, 1), 2)
    
        if len(self.shape) == 2:
            matrix = self._2d_rotation_matrix(self.theta, center)
        elif len(self.shape) == 3:
            matrix = self._3d_rotation_matrix(self.theta, center)
        else:
            return pytest.xfail('Unsupported shape')
    
        if self.output == 'empty':
            output = xp.empty(self.shape, dtype=xp.float32)
            if self.output_shape:
                return pytest.skip('This combination is tested in '
                                   'test_invalid_texture_arguments')
        else:
            output = self.output
    
        if self.output_shape:
            output_shape = (self.output_shape, ) * len(self.shape)
        else:
            output_shape = self.output_shape
    
        if xp == cupy:
            m = cupyx.scipy.ndimage.affine_transform
            matrix = cupy.array(matrix)
>           return m(a, matrix, output_shape=output_shape,
                     output=output, order=self.order,
                     mode=self.mode, texture_memory=True)

tests/cupyx_tests/scipy_tests/ndimage_tests/test_interpolation.py:398: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
cupyx/scipy/ndimage/interpolation.py:376: in affine_transform
    return _texture.affine_transformation(data=input,
cupyx/_texture.py:168: in affine_transformation
    texture_object = _create_texture_object(data,
cupyx/_texture.py:98: in _create_texture_object
    array = texture.CUDAarray(texture_fmt, *data.shape[::-1])
cupy/cuda/texture.pyx:296: in cupy.cuda.texture.CUDAarray.__init__
    self.ptr = runtime.malloc3DArray(desc.ptr, width, height, depth,
cupy_backends/cuda/api/runtime.pyx:593: in cupy_backends.cuda.api.runtime.malloc3DArray
    check_status(status)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

>   raise CUDARuntimeError(status)
E   AssertionError: Only cupy raises error
E   
E   Traceback (most recent call last):
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.Np3X0NVCM9/cupy/cupy/testing/_helper.py", line 47, in _call_func
E       result = impl(self, *args, **kw)
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.Np3X0NVCM9/cupy/tests/cupyx_tests/scipy_tests/ndimage_tests/test_interpolation.py", line 398, in test_affine_transform_texture_memory
E       return m(a, matrix, output_shape=output_shape,
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.Np3X0NVCM9/cupy/cupyx/scipy/ndimage/interpolation.py", line 376, in affine_transform
E       return _texture.affine_transformation(data=input,
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.Np3X0NVCM9/cupy/cupyx/_texture.py", line 168, in affine_transformation
E       texture_object = _create_texture_object(data,
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.Np3X0NVCM9/cupy/cupyx/_texture.py", line 98, in _create_texture_object
E       array = texture.CUDAarray(texture_fmt, *data.shape[::-1])
E     File "cupy/cuda/texture.pyx", line 296, in cupy.cuda.texture.CUDAarray.__init__
E       self.ptr = runtime.malloc3DArray(desc.ptr, width, height, depth,
E     File "cupy_backends/cuda/api/runtime.pyx", line 593, in cupy_backends.cuda.api.runtime.malloc3DArray
E       check_status(status)
E     File "cupy_backends/cuda/api/runtime.pyx", line 265, in cupy_backends.cuda.api.runtime.check_status
E       raise CUDARuntimeError(status)
E   cupy_backends.cuda.api.runtime.CUDARuntimeError: hipErrorUnknown: hipErrorUnknown

cupy_backends/cuda/api/runtime.pyx:265: AssertionError
----------------------------- Captured stderr call -----------------------------
Traceback (most recent call last):
  File "cupy_backends/cuda/api/runtime.pyx", line 644, in cupy_backends.cuda.api.runtime.freeArray
    check_status(status)
  File "cupy_backends/cuda/api/runtime.pyx", line 265, in cupy_backends.cuda.api.runtime.check_status
    raise CUDARuntimeError(status)
cupy_backends.cuda.api.runtime.CUDARuntimeError: hipErrorUnknown: hipErrorUnknown
_ TestAffineTransformTextureMemory.test_affine_transform_texture_memory[_param_331_{mode='nearest', order=1, output=float32, output_shape=None, shape=(10, 10, 10), theta=270}] _

self = <<cupyx_tests.scipy_tests.ndimage_tests.test_interpolation.TestAffineTransformTextureMemory object at 0x7fd7061aa970> ...: 'nearest', 'order': 1, 'output': <class 'numpy.float32'>, 'output_shape': None, 'shape': (10, 10, 10), 'theta': 270}>
xp = <module 'cupy' from '/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.Np3X0NVCM9/cupy/cupy/__init__.py'>
scp = <module 'cupyx.scipy' from '/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.Np3X0NVCM9/cupy/cupyx/scipy/__init__.py'>

    @testing.numpy_cupy_allclose(atol=0.1, scipy_name='scp')
    def test_affine_transform_texture_memory(self, xp, scp):
        a = xp.ones(self.shape, dtype=xp.float32)
        center = numpy.divide(numpy.subtract(self.shape, 1), 2)
    
        if len(self.shape) == 2:
            matrix = self._2d_rotation_matrix(self.theta, center)
        elif len(self.shape) == 3:
            matrix = self._3d_rotation_matrix(self.theta, center)
        else:
            return pytest.xfail('Unsupported shape')
    
        if self.output == 'empty':
            output = xp.empty(self.shape, dtype=xp.float32)
            if self.output_shape:
                return pytest.skip('This combination is tested in '
                                   'test_invalid_texture_arguments')
        else:
            output = self.output
    
        if self.output_shape:
            output_shape = (self.output_shape, ) * len(self.shape)
        else:
            output_shape = self.output_shape
    
        if xp == cupy:
            m = cupyx.scipy.ndimage.affine_transform
            matrix = cupy.array(matrix)
>           return m(a, matrix, output_shape=output_shape,
                     output=output, order=self.order,
                     mode=self.mode, texture_memory=True)

tests/cupyx_tests/scipy_tests/ndimage_tests/test_interpolation.py:398: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
cupyx/scipy/ndimage/interpolation.py:376: in affine_transform
    return _texture.affine_transformation(data=input,
cupyx/_texture.py:168: in affine_transformation
    texture_object = _create_texture_object(data,
cupyx/_texture.py:98: in _create_texture_object
    array = texture.CUDAarray(texture_fmt, *data.shape[::-1])
cupy/cuda/texture.pyx:296: in cupy.cuda.texture.CUDAarray.__init__
    self.ptr = runtime.malloc3DArray(desc.ptr, width, height, depth,
cupy_backends/cuda/api/runtime.pyx:593: in cupy_backends.cuda.api.runtime.malloc3DArray
    check_status(status)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

>   raise CUDARuntimeError(status)
E   AssertionError: Only cupy raises error
E   
E   Traceback (most recent call last):
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.Np3X0NVCM9/cupy/cupy/testing/_helper.py", line 47, in _call_func
E       result = impl(self, *args, **kw)
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.Np3X0NVCM9/cupy/tests/cupyx_tests/scipy_tests/ndimage_tests/test_interpolation.py", line 398, in test_affine_transform_texture_memory
E       return m(a, matrix, output_shape=output_shape,
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.Np3X0NVCM9/cupy/cupyx/scipy/ndimage/interpolation.py", line 376, in affine_transform
E       return _texture.affine_transformation(data=input,
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.Np3X0NVCM9/cupy/cupyx/_texture.py", line 168, in affine_transformation
E       texture_object = _create_texture_object(data,
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.Np3X0NVCM9/cupy/cupyx/_texture.py", line 98, in _create_texture_object
E       array = texture.CUDAarray(texture_fmt, *data.shape[::-1])
E     File "cupy/cuda/texture.pyx", line 296, in cupy.cuda.texture.CUDAarray.__init__
E       self.ptr = runtime.malloc3DArray(desc.ptr, width, height, depth,
E     File "cupy_backends/cuda/api/runtime.pyx", line 593, in cupy_backends.cuda.api.runtime.malloc3DArray
E       check_status(status)
E     File "cupy_backends/cuda/api/runtime.pyx", line 265, in cupy_backends.cuda.api.runtime.check_status
E       raise CUDARuntimeError(status)
E   cupy_backends.cuda.api.runtime.CUDARuntimeError: hipErrorUnknown: hipErrorUnknown

cupy_backends/cuda/api/runtime.pyx:265: AssertionError
----------------------------- Captured stderr call -----------------------------
Traceback (most recent call last):
  File "cupy_backends/cuda/api/runtime.pyx", line 644, in cupy_backends.cuda.api.runtime.freeArray
    check_status(status)
  File "cupy_backends/cuda/api/runtime.pyx", line 265, in cupy_backends.cuda.api.runtime.check_status
    raise CUDARuntimeError(status)
cupy_backends.cuda.api.runtime.CUDARuntimeError: hipErrorUnknown: hipErrorUnknown
_ TestAffineTransformTextureMemory.test_affine_transform_texture_memory[_param_332_{mode='nearest', order=1, output=float32, output_shape=None, shape=(10, 20, 30), theta=0}] _

self = <<cupyx_tests.scipy_tests.ndimage_tests.test_interpolation.TestAffineTransformTextureMemory object at 0x7fd7065a29a0> ...e': 'nearest', 'order': 1, 'output': <class 'numpy.float32'>, 'output_shape': None, 'shape': (10, 20, 30), 'theta': 0}>
xp = <module 'cupy' from '/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.Np3X0NVCM9/cupy/cupy/__init__.py'>
scp = <module 'cupyx.scipy' from '/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.Np3X0NVCM9/cupy/cupyx/scipy/__init__.py'>

    @testing.numpy_cupy_allclose(atol=0.1, scipy_name='scp')
    def test_affine_transform_texture_memory(self, xp, scp):
        a = xp.ones(self.shape, dtype=xp.float32)
        center = numpy.divide(numpy.subtract(self.shape, 1), 2)
    
        if len(self.shape) == 2:
            matrix = self._2d_rotation_matrix(self.theta, center)
        elif len(self.shape) == 3:
            matrix = self._3d_rotation_matrix(self.theta, center)
        else:
            return pytest.xfail('Unsupported shape')
    
        if self.output == 'empty':
            output = xp.empty(self.shape, dtype=xp.float32)
            if self.output_shape:
                return pytest.skip('This combination is tested in '
                                   'test_invalid_texture_arguments')
        else:
            output = self.output
    
        if self.output_shape:
            output_shape = (self.output_shape, ) * len(self.shape)
        else:
            output_shape = self.output_shape
    
        if xp == cupy:
            m = cupyx.scipy.ndimage.affine_transform
            matrix = cupy.array(matrix)
>           return m(a, matrix, output_shape=output_shape,
                     output=output, order=self.order,
                     mode=self.mode, texture_memory=True)

tests/cupyx_tests/scipy_tests/ndimage_tests/test_interpolation.py:398: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
cupyx/scipy/ndimage/interpolation.py:376: in affine_transform
    return _texture.affine_transformation(data=input,
cupyx/_texture.py:168: in affine_transformation
    texture_object = _create_texture_object(data,
cupyx/_texture.py:98: in _create_texture_object
    array = texture.CUDAarray(texture_fmt, *data.shape[::-1])
cupy/cuda/texture.pyx:296: in cupy.cuda.texture.CUDAarray.__init__
    self.ptr = runtime.malloc3DArray(desc.ptr, width, height, depth,
cupy_backends/cuda/api/runtime.pyx:593: in cupy_backends.cuda.api.runtime.malloc3DArray
    check_status(status)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

>   raise CUDARuntimeError(status)
E   AssertionError: Only cupy raises error
E   
E   Traceback (most recent call last):
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.Np3X0NVCM9/cupy/cupy/testing/_helper.py", line 47, in _call_func
E       result = impl(self, *args, **kw)
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.Np3X0NVCM9/cupy/tests/cupyx_tests/scipy_tests/ndimage_tests/test_interpolation.py", line 398, in test_affine_transform_texture_memory
E       return m(a, matrix, output_shape=output_shape,
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.Np3X0NVCM9/cupy/cupyx/scipy/ndimage/interpolation.py", line 376, in affine_transform
E       return _texture.affine_transformation(data=input,
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.Np3X0NVCM9/cupy/cupyx/_texture.py", line 168, in affine_transformation
E       texture_object = _create_texture_object(data,
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.Np3X0NVCM9/cupy/cupyx/_texture.py", line 98, in _create_texture_object
E       array = texture.CUDAarray(texture_fmt, *data.shape[::-1])
E     File "cupy/cuda/texture.pyx", line 296, in cupy.cuda.texture.CUDAarray.__init__
E       self.ptr = runtime.malloc3DArray(desc.ptr, width, height, depth,
E     File "cupy_backends/cuda/api/runtime.pyx", line 593, in cupy_backends.cuda.api.runtime.malloc3DArray
E       check_status(status)
E     File "cupy_backends/cuda/api/runtime.pyx", line 265, in cupy_backends.cuda.api.runtime.check_status
E       raise CUDARuntimeError(status)
E   cupy_backends.cuda.api.runtime.CUDARuntimeError: hipErrorUnknown: hipErrorUnknown

cupy_backends/cuda/api/runtime.pyx:265: AssertionError
----------------------------- Captured stderr call -----------------------------
Traceback (most recent call last):
  File "cupy_backends/cuda/api/runtime.pyx", line 644, in cupy_backends.cuda.api.runtime.freeArray
    check_status(status)
  File "cupy_backends/cuda/api/runtime.pyx", line 265, in cupy_backends.cuda.api.runtime.check_status
    raise CUDARuntimeError(status)
cupy_backends.cuda.api.runtime.CUDARuntimeError: hipErrorUnknown: hipErrorUnknown
_ TestAffineTransformTextureMemory.test_affine_transform_texture_memory[_param_333_{mode='nearest', order=1, output=float32, output_shape=None, shape=(10, 20, 30), theta=90}] _

self = <<cupyx_tests.scipy_tests.ndimage_tests.test_interpolation.TestAffineTransformTextureMemory object at 0x7fd705785b80> ...': 'nearest', 'order': 1, 'output': <class 'numpy.float32'>, 'output_shape': None, 'shape': (10, 20, 30), 'theta': 90}>
xp = <module 'cupy' from '/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.Np3X0NVCM9/cupy/cupy/__init__.py'>
scp = <module 'cupyx.scipy' from '/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.Np3X0NVCM9/cupy/cupyx/scipy/__init__.py'>

    @testing.numpy_cupy_allclose(atol=0.1, scipy_name='scp')
    def test_affine_transform_texture_memory(self, xp, scp):
        a = xp.ones(self.shape, dtype=xp.float32)
        center = numpy.divide(numpy.subtract(self.shape, 1), 2)
    
        if len(self.shape) == 2:
            matrix = self._2d_rotation_matrix(self.theta, center)
        elif len(self.shape) == 3:
            matrix = self._3d_rotation_matrix(self.theta, center)
        else:
            return pytest.xfail('Unsupported shape')
    
        if self.output == 'empty':
            output = xp.empty(self.shape, dtype=xp.float32)
            if self.output_shape:
                return pytest.skip('This combination is tested in '
                                   'test_invalid_texture_arguments')
        else:
            output = self.output
    
        if self.output_shape:
            output_shape = (self.output_shape, ) * len(self.shape)
        else:
            output_shape = self.output_shape
    
        if xp == cupy:
            m = cupyx.scipy.ndimage.affine_transform
            matrix = cupy.array(matrix)
>           return m(a, matrix, output_shape=output_shape,
                     output=output, order=self.order,
                     mode=self.mode, texture_memory=True)

tests/cupyx_tests/scipy_tests/ndimage_tests/test_interpolation.py:398: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
cupyx/scipy/ndimage/interpolation.py:376: in affine_transform
    return _texture.affine_transformation(data=input,
cupyx/_texture.py:168: in affine_transformation
    texture_object = _create_texture_object(data,
cupyx/_texture.py:98: in _create_texture_object
    array = texture.CUDAarray(texture_fmt, *data.shape[::-1])
cupy/cuda/texture.pyx:296: in cupy.cuda.texture.CUDAarray.__init__
    self.ptr = runtime.malloc3DArray(desc.ptr, width, height, depth,
cupy_backends/cuda/api/runtime.pyx:593: in cupy_backends.cuda.api.runtime.malloc3DArray
    check_status(status)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

>   raise CUDARuntimeError(status)
E   AssertionError: Only cupy raises error
E   
E   Traceback (most recent call last):
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.Np3X0NVCM9/cupy/cupy/testing/_helper.py", line 47, in _call_func
E       result = impl(self, *args, **kw)
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.Np3X0NVCM9/cupy/tests/cupyx_tests/scipy_tests/ndimage_tests/test_interpolation.py", line 398, in test_affine_transform_texture_memory
E       return m(a, matrix, output_shape=output_shape,
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.Np3X0NVCM9/cupy/cupyx/scipy/ndimage/interpolation.py", line 376, in affine_transform
E       return _texture.affine_transformation(data=input,
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.Np3X0NVCM9/cupy/cupyx/_texture.py", line 168, in affine_transformation
E       texture_object = _create_texture_object(data,
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.Np3X0NVCM9/cupy/cupyx/_texture.py", line 98, in _create_texture_object
E       array = texture.CUDAarray(texture_fmt, *data.shape[::-1])
E     File "cupy/cuda/texture.pyx", line 296, in cupy.cuda.texture.CUDAarray.__init__
E       self.ptr = runtime.malloc3DArray(desc.ptr, width, height, depth,
E     File "cupy_backends/cuda/api/runtime.pyx", line 593, in cupy_backends.cuda.api.runtime.malloc3DArray
E       check_status(status)
E     File "cupy_backends/cuda/api/runtime.pyx", line 265, in cupy_backends.cuda.api.runtime.check_status
E       raise CUDARuntimeError(status)
E   cupy_backends.cuda.api.runtime.CUDARuntimeError: hipErrorUnknown: hipErrorUnknown

cupy_backends/cuda/api/runtime.pyx:265: AssertionError
----------------------------- Captured stderr call -----------------------------
Traceback (most recent call last):
  File "cupy_backends/cuda/api/runtime.pyx", line 644, in cupy_backends.cuda.api.runtime.freeArray
    check_status(status)
  File "cupy_backends/cuda/api/runtime.pyx", line 265, in cupy_backends.cuda.api.runtime.check_status
    raise CUDARuntimeError(status)
cupy_backends.cuda.api.runtime.CUDARuntimeError: hipErrorUnknown: hipErrorUnknown
_ TestAffineTransformTextureMemory.test_affine_transform_texture_memory[_param_334_{mode='nearest', order=1, output=float32, output_shape=None, shape=(10, 20, 30), theta=180}] _

self = <<cupyx_tests.scipy_tests.ndimage_tests.test_interpolation.TestAffineTransformTextureMemory object at 0x7fd70584fd90> ...: 'nearest', 'order': 1, 'output': <class 'numpy.float32'>, 'output_shape': None, 'shape': (10, 20, 30), 'theta': 180}>
xp = <module 'cupy' from '/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.Np3X0NVCM9/cupy/cupy/__init__.py'>
scp = <module 'cupyx.scipy' from '/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.Np3X0NVCM9/cupy/cupyx/scipy/__init__.py'>

    @testing.numpy_cupy_allclose(atol=0.1, scipy_name='scp')
    def test_affine_transform_texture_memory(self, xp, scp):
        a = xp.ones(self.shape, dtype=xp.float32)
        center = numpy.divide(numpy.subtract(self.shape, 1), 2)
    
        if len(self.shape) == 2:
            matrix = self._2d_rotation_matrix(self.theta, center)
        elif len(self.shape) == 3:
            matrix = self._3d_rotation_matrix(self.theta, center)
        else:
            return pytest.xfail('Unsupported shape')
    
        if self.output == 'empty':
            output = xp.empty(self.shape, dtype=xp.float32)
            if self.output_shape:
                return pytest.skip('This combination is tested in '
                                   'test_invalid_texture_arguments')
        else:
            output = self.output
    
        if self.output_shape:
            output_shape = (self.output_shape, ) * len(self.shape)
        else:
            output_shape = self.output_shape
    
        if xp == cupy:
            m = cupyx.scipy.ndimage.affine_transform
            matrix = cupy.array(matrix)
>           return m(a, matrix, output_shape=output_shape,
                     output=output, order=self.order,
                     mode=self.mode, texture_memory=True)

tests/cupyx_tests/scipy_tests/ndimage_tests/test_interpolation.py:398: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
cupyx/scipy/ndimage/interpolation.py:376: in affine_transform
    return _texture.affine_transformation(data=input,
cupyx/_texture.py:168: in affine_transformation
    texture_object = _create_texture_object(data,
cupyx/_texture.py:98: in _create_texture_object
    array = texture.CUDAarray(texture_fmt, *data.shape[::-1])
cupy/cuda/texture.pyx:296: in cupy.cuda.texture.CUDAarray.__init__
    self.ptr = runtime.malloc3DArray(desc.ptr, width, height, depth,
cupy_backends/cuda/api/runtime.pyx:593: in cupy_backends.cuda.api.runtime.malloc3DArray
    check_status(status)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

>   raise CUDARuntimeError(status)
E   AssertionError: Only cupy raises error
E   
E   Traceback (most recent call last):
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.Np3X0NVCM9/cupy/cupy/testing/_helper.py", line 47, in _call_func
E       result = impl(self, *args, **kw)
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.Np3X0NVCM9/cupy/tests/cupyx_tests/scipy_tests/ndimage_tests/test_interpolation.py", line 398, in test_affine_transform_texture_memory
E       return m(a, matrix, output_shape=output_shape,
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.Np3X0NVCM9/cupy/cupyx/scipy/ndimage/interpolation.py", line 376, in affine_transform
E       return _texture.affine_transformation(data=input,
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.Np3X0NVCM9/cupy/cupyx/_texture.py", line 168, in affine_transformation
E       texture_object = _create_texture_object(data,
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.Np3X0NVCM9/cupy/cupyx/_texture.py", line 98, in _create_texture_object
E       array = texture.CUDAarray(texture_fmt, *data.shape[::-1])
E     File "cupy/cuda/texture.pyx", line 296, in cupy.cuda.texture.CUDAarray.__init__
E       self.ptr = runtime.malloc3DArray(desc.ptr, width, height, depth,
E     File "cupy_backends/cuda/api/runtime.pyx", line 593, in cupy_backends.cuda.api.runtime.malloc3DArray
E       check_status(status)
E     File "cupy_backends/cuda/api/runtime.pyx", line 265, in cupy_backends.cuda.api.runtime.check_status
E       raise CUDARuntimeError(status)
E   cupy_backends.cuda.api.runtime.CUDARuntimeError: hipErrorUnknown: hipErrorUnknown

cupy_backends/cuda/api/runtime.pyx:265: AssertionError
----------------------------- Captured stderr call -----------------------------
Traceback (most recent call last):
  File "cupy_backends/cuda/api/runtime.pyx", line 644, in cupy_backends.cuda.api.runtime.freeArray
    check_status(status)
  File "cupy_backends/cuda/api/runtime.pyx", line 265, in cupy_backends.cuda.api.runtime.check_status
    raise CUDARuntimeError(status)
cupy_backends.cuda.api.runtime.CUDARuntimeError: hipErrorUnknown: hipErrorUnknown
_ TestAffineTransformTextureMemory.test_affine_transform_texture_memory[_param_335_{mode='nearest', order=1, output=float32, output_shape=None, shape=(10, 20, 30), theta=270}] _

self = <<cupyx_tests.scipy_tests.ndimage_tests.test_interpolation.TestAffineTransformTextureMemory object at 0x7fd706124460> ...: 'nearest', 'order': 1, 'output': <class 'numpy.float32'>, 'output_shape': None, 'shape': (10, 20, 30), 'theta': 270}>
xp = <module 'cupy' from '/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.Np3X0NVCM9/cupy/cupy/__init__.py'>
scp = <module 'cupyx.scipy' from '/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.Np3X0NVCM9/cupy/cupyx/scipy/__init__.py'>

    @testing.numpy_cupy_allclose(atol=0.1, scipy_name='scp')
    def test_affine_transform_texture_memory(self, xp, scp):
        a = xp.ones(self.shape, dtype=xp.float32)
        center = numpy.divide(numpy.subtract(self.shape, 1), 2)
    
        if len(self.shape) == 2:
            matrix = self._2d_rotation_matrix(self.theta, center)
        elif len(self.shape) == 3:
            matrix = self._3d_rotation_matrix(self.theta, center)
        else:
            return pytest.xfail('Unsupported shape')
    
        if self.output == 'empty':
            output = xp.empty(self.shape, dtype=xp.float32)
            if self.output_shape:
                return pytest.skip('This combination is tested in '
                                   'test_invalid_texture_arguments')
        else:
            output = self.output
    
        if self.output_shape:
            output_shape = (self.output_shape, ) * len(self.shape)
        else:
            output_shape = self.output_shape
    
        if xp == cupy:
            m = cupyx.scipy.ndimage.affine_transform
            matrix = cupy.array(matrix)
>           return m(a, matrix, output_shape=output_shape,
                     output=output, order=self.order,
                     mode=self.mode, texture_memory=True)

tests/cupyx_tests/scipy_tests/ndimage_tests/test_interpolation.py:398: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
cupyx/scipy/ndimage/interpolation.py:376: in affine_transform
    return _texture.affine_transformation(data=input,
cupyx/_texture.py:168: in affine_transformation
    texture_object = _create_texture_object(data,
cupyx/_texture.py:98: in _create_texture_object
    array = texture.CUDAarray(texture_fmt, *data.shape[::-1])
cupy/cuda/texture.pyx:296: in cupy.cuda.texture.CUDAarray.__init__
    self.ptr = runtime.malloc3DArray(desc.ptr, width, height, depth,
cupy_backends/cuda/api/runtime.pyx:593: in cupy_backends.cuda.api.runtime.malloc3DArray
    check_status(status)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

>   raise CUDARuntimeError(status)
E   AssertionError: Only cupy raises error
E   
E   Traceback (most recent call last):
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.Np3X0NVCM9/cupy/cupy/testing/_helper.py", line 47, in _call_func
E       result = impl(self, *args, **kw)
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.Np3X0NVCM9/cupy/tests/cupyx_tests/scipy_tests/ndimage_tests/test_interpolation.py", line 398, in test_affine_transform_texture_memory
E       return m(a, matrix, output_shape=output_shape,
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.Np3X0NVCM9/cupy/cupyx/scipy/ndimage/interpolation.py", line 376, in affine_transform
E       return _texture.affine_transformation(data=input,
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.Np3X0NVCM9/cupy/cupyx/_texture.py", line 168, in affine_transformation
E       texture_object = _create_texture_object(data,
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.Np3X0NVCM9/cupy/cupyx/_texture.py", line 98, in _create_texture_object
E       array = texture.CUDAarray(texture_fmt, *data.shape[::-1])
E     File "cupy/cuda/texture.pyx", line 296, in cupy.cuda.texture.CUDAarray.__init__
E       self.ptr = runtime.malloc3DArray(desc.ptr, width, height, depth,
E     File "cupy_backends/cuda/api/runtime.pyx", line 593, in cupy_backends.cuda.api.runtime.malloc3DArray
E       check_status(status)
E     File "cupy_backends/cuda/api/runtime.pyx", line 265, in cupy_backends.cuda.api.runtime.check_status
E       raise CUDARuntimeError(status)
E   cupy_backends.cuda.api.runtime.CUDARuntimeError: hipErrorUnknown: hipErrorUnknown

cupy_backends/cuda/api/runtime.pyx:265: AssertionError
----------------------------- Captured stderr call -----------------------------
Traceback (most recent call last):
  File "cupy_backends/cuda/api/runtime.pyx", line 644, in cupy_backends.cuda.api.runtime.freeArray
    check_status(status)
  File "cupy_backends/cuda/api/runtime.pyx", line 265, in cupy_backends.cuda.api.runtime.check_status
    raise CUDARuntimeError(status)
cupy_backends.cuda.api.runtime.CUDARuntimeError: hipErrorUnknown: hipErrorUnknown
_ TestAffineTransformTextureMemory.test_affine_transform_texture_memory[_param_336_{mode='nearest', order=1, output=float32, output_shape=10, shape=(100, 100), theta=0}] _

self = <<cupyx_tests.scipy_tests.ndimage_tests.test_interpolation.TestAffineTransformTextureMemory object at 0x7fd7065b0df0> ...'mode': 'nearest', 'order': 1, 'output': <class 'numpy.float32'>, 'output_shape': 10, 'shape': (100, 100), 'theta': 0}>
xp = <module 'cupy' from '/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.Np3X0NVCM9/cupy/cupy/__init__.py'>
scp = <module 'cupyx.scipy' from '/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.Np3X0NVCM9/cupy/cupyx/scipy/__init__.py'>

    @testing.numpy_cupy_allclose(atol=0.1, scipy_name='scp')
    def test_affine_transform_texture_memory(self, xp, scp):
        a = xp.ones(self.shape, dtype=xp.float32)
        center = numpy.divide(numpy.subtract(self.shape, 1), 2)
    
        if len(self.shape) == 2:
            matrix = self._2d_rotation_matrix(self.theta, center)
        elif len(self.shape) == 3:
            matrix = self._3d_rotation_matrix(self.theta, center)
        else:
            return pytest.xfail('Unsupported shape')
    
        if self.output == 'empty':
            output = xp.empty(self.shape, dtype=xp.float32)
            if self.output_shape:
                return pytest.skip('This combination is tested in '
                                   'test_invalid_texture_arguments')
        else:
            output = self.output
    
        if self.output_shape:
            output_shape = (self.output_shape, ) * len(self.shape)
        else:
            output_shape = self.output_shape
    
        if xp == cupy:
            m = cupyx.scipy.ndimage.affine_transform
            matrix = cupy.array(matrix)
>           return m(a, matrix, output_shape=output_shape,
                     output=output, order=self.order,
                     mode=self.mode, texture_memory=True)

tests/cupyx_tests/scipy_tests/ndimage_tests/test_interpolation.py:398: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
cupyx/scipy/ndimage/interpolation.py:376: in affine_transform
    return _texture.affine_transformation(data=input,
cupyx/_texture.py:168: in affine_transformation
    texture_object = _create_texture_object(data,
cupyx/_texture.py:98: in _create_texture_object
    array = texture.CUDAarray(texture_fmt, *data.shape[::-1])
cupy/cuda/texture.pyx:296: in cupy.cuda.texture.CUDAarray.__init__
    self.ptr = runtime.malloc3DArray(desc.ptr, width, height, depth,
cupy_backends/cuda/api/runtime.pyx:593: in cupy_backends.cuda.api.runtime.malloc3DArray
    check_status(status)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

>   raise CUDARuntimeError(status)
E   AssertionError: Only cupy raises error
E   
E   Traceback (most recent call last):
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.Np3X0NVCM9/cupy/cupy/testing/_helper.py", line 47, in _call_func
E       result = impl(self, *args, **kw)
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.Np3X0NVCM9/cupy/tests/cupyx_tests/scipy_tests/ndimage_tests/test_interpolation.py", line 398, in test_affine_transform_texture_memory
E       return m(a, matrix, output_shape=output_shape,
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.Np3X0NVCM9/cupy/cupyx/scipy/ndimage/interpolation.py", line 376, in affine_transform
E       return _texture.affine_transformation(data=input,
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.Np3X0NVCM9/cupy/cupyx/_texture.py", line 168, in affine_transformation
E       texture_object = _create_texture_object(data,
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.Np3X0NVCM9/cupy/cupyx/_texture.py", line 98, in _create_texture_object
E       array = texture.CUDAarray(texture_fmt, *data.shape[::-1])
E     File "cupy/cuda/texture.pyx", line 296, in cupy.cuda.texture.CUDAarray.__init__
E       self.ptr = runtime.malloc3DArray(desc.ptr, width, height, depth,
E     File "cupy_backends/cuda/api/runtime.pyx", line 593, in cupy_backends.cuda.api.runtime.malloc3DArray
E       check_status(status)
E     File "cupy_backends/cuda/api/runtime.pyx", line 265, in cupy_backends.cuda.api.runtime.check_status
E       raise CUDARuntimeError(status)
E   cupy_backends.cuda.api.runtime.CUDARuntimeError: hipErrorUnknown: hipErrorUnknown

cupy_backends/cuda/api/runtime.pyx:265: AssertionError
----------------------------- Captured stderr call -----------------------------
Traceback (most recent call last):
  File "cupy_backends/cuda/api/runtime.pyx", line 644, in cupy_backends.cuda.api.runtime.freeArray
    check_status(status)
  File "cupy_backends/cuda/api/runtime.pyx", line 265, in cupy_backends.cuda.api.runtime.check_status
    raise CUDARuntimeError(status)
cupy_backends.cuda.api.runtime.CUDARuntimeError: hipErrorUnknown: hipErrorUnknown
_ TestAffineTransformTextureMemory.test_affine_transform_texture_memory[_param_337_{mode='nearest', order=1, output=float32, output_shape=10, shape=(100, 100), theta=90}] _

self = <<cupyx_tests.scipy_tests.ndimage_tests.test_interpolation.TestAffineTransformTextureMemory object at 0x7fd7059b4a30> ...mode': 'nearest', 'order': 1, 'output': <class 'numpy.float32'>, 'output_shape': 10, 'shape': (100, 100), 'theta': 90}>
xp = <module 'cupy' from '/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.Np3X0NVCM9/cupy/cupy/__init__.py'>
scp = <module 'cupyx.scipy' from '/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.Np3X0NVCM9/cupy/cupyx/scipy/__init__.py'>

    @testing.numpy_cupy_allclose(atol=0.1, scipy_name='scp')
    def test_affine_transform_texture_memory(self, xp, scp):
        a = xp.ones(self.shape, dtype=xp.float32)
        center = numpy.divide(numpy.subtract(self.shape, 1), 2)
    
        if len(self.shape) == 2:
            matrix = self._2d_rotation_matrix(self.theta, center)
        elif len(self.shape) == 3:
            matrix = self._3d_rotation_matrix(self.theta, center)
        else:
            return pytest.xfail('Unsupported shape')
    
        if self.output == 'empty':
            output = xp.empty(self.shape, dtype=xp.float32)
            if self.output_shape:
                return pytest.skip('This combination is tested in '
                                   'test_invalid_texture_arguments')
        else:
            output = self.output
    
        if self.output_shape:
            output_shape = (self.output_shape, ) * len(self.shape)
        else:
            output_shape = self.output_shape
    
        if xp == cupy:
            m = cupyx.scipy.ndimage.affine_transform
            matrix = cupy.array(matrix)
>           return m(a, matrix, output_shape=output_shape,
                     output=output, order=self.order,
                     mode=self.mode, texture_memory=True)

tests/cupyx_tests/scipy_tests/ndimage_tests/test_interpolation.py:398: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
cupyx/scipy/ndimage/interpolation.py:376: in affine_transform
    return _texture.affine_transformation(data=input,
cupyx/_texture.py:168: in affine_transformation
    texture_object = _create_texture_object(data,
cupyx/_texture.py:98: in _create_texture_object
    array = texture.CUDAarray(texture_fmt, *data.shape[::-1])
cupy/cuda/texture.pyx:296: in cupy.cuda.texture.CUDAarray.__init__
    self.ptr = runtime.malloc3DArray(desc.ptr, width, height, depth,
cupy_backends/cuda/api/runtime.pyx:593: in cupy_backends.cuda.api.runtime.malloc3DArray
    check_status(status)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

>   raise CUDARuntimeError(status)
E   AssertionError: Only cupy raises error
E   
E   Traceback (most recent call last):
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.Np3X0NVCM9/cupy/cupy/testing/_helper.py", line 47, in _call_func
E       result = impl(self, *args, **kw)
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.Np3X0NVCM9/cupy/tests/cupyx_tests/scipy_tests/ndimage_tests/test_interpolation.py", line 398, in test_affine_transform_texture_memory
E       return m(a, matrix, output_shape=output_shape,
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.Np3X0NVCM9/cupy/cupyx/scipy/ndimage/interpolation.py", line 376, in affine_transform
E       return _texture.affine_transformation(data=input,
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.Np3X0NVCM9/cupy/cupyx/_texture.py", line 168, in affine_transformation
E       texture_object = _create_texture_object(data,
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.Np3X0NVCM9/cupy/cupyx/_texture.py", line 98, in _create_texture_object
E       array = texture.CUDAarray(texture_fmt, *data.shape[::-1])
E     File "cupy/cuda/texture.pyx", line 296, in cupy.cuda.texture.CUDAarray.__init__
E       self.ptr = runtime.malloc3DArray(desc.ptr, width, height, depth,
E     File "cupy_backends/cuda/api/runtime.pyx", line 593, in cupy_backends.cuda.api.runtime.malloc3DArray
E       check_status(status)
E     File "cupy_backends/cuda/api/runtime.pyx", line 265, in cupy_backends.cuda.api.runtime.check_status
E       raise CUDARuntimeError(status)
E   cupy_backends.cuda.api.runtime.CUDARuntimeError: hipErrorUnknown: hipErrorUnknown

cupy_backends/cuda/api/runtime.pyx:265: AssertionError
----------------------------- Captured stderr call -----------------------------
Traceback (most recent call last):
  File "cupy_backends/cuda/api/runtime.pyx", line 644, in cupy_backends.cuda.api.runtime.freeArray
    check_status(status)
  File "cupy_backends/cuda/api/runtime.pyx", line 265, in cupy_backends.cuda.api.runtime.check_status
    raise CUDARuntimeError(status)
cupy_backends.cuda.api.runtime.CUDARuntimeError: hipErrorUnknown: hipErrorUnknown
_ TestAffineTransformTextureMemory.test_affine_transform_texture_memory[_param_338_{mode='nearest', order=1, output=float32, output_shape=10, shape=(100, 100), theta=180}] _

self = <<cupyx_tests.scipy_tests.ndimage_tests.test_interpolation.TestAffineTransformTextureMemory object at 0x7fd7058339a0> ...ode': 'nearest', 'order': 1, 'output': <class 'numpy.float32'>, 'output_shape': 10, 'shape': (100, 100), 'theta': 180}>
xp = <module 'cupy' from '/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.Np3X0NVCM9/cupy/cupy/__init__.py'>
scp = <module 'cupyx.scipy' from '/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.Np3X0NVCM9/cupy/cupyx/scipy/__init__.py'>

    @testing.numpy_cupy_allclose(atol=0.1, scipy_name='scp')
    def test_affine_transform_texture_memory(self, xp, scp):
        a = xp.ones(self.shape, dtype=xp.float32)
        center = numpy.divide(numpy.subtract(self.shape, 1), 2)
    
        if len(self.shape) == 2:
            matrix = self._2d_rotation_matrix(self.theta, center)
        elif len(self.shape) == 3:
            matrix = self._3d_rotation_matrix(self.theta, center)
        else:
            return pytest.xfail('Unsupported shape')
    
        if self.output == 'empty':
            output = xp.empty(self.shape, dtype=xp.float32)
            if self.output_shape:
                return pytest.skip('This combination is tested in '
                                   'test_invalid_texture_arguments')
        else:
            output = self.output
    
        if self.output_shape:
            output_shape = (self.output_shape, ) * len(self.shape)
        else:
            output_shape = self.output_shape
    
        if xp == cupy:
            m = cupyx.scipy.ndimage.affine_transform
            matrix = cupy.array(matrix)
>           return m(a, matrix, output_shape=output_shape,
                     output=output, order=self.order,
                     mode=self.mode, texture_memory=True)

tests/cupyx_tests/scipy_tests/ndimage_tests/test_interpolation.py:398: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
cupyx/scipy/ndimage/interpolation.py:376: in affine_transform
    return _texture.affine_transformation(data=input,
cupyx/_texture.py:168: in affine_transformation
    texture_object = _create_texture_object(data,
cupyx/_texture.py:98: in _create_texture_object
    array = texture.CUDAarray(texture_fmt, *data.shape[::-1])
cupy/cuda/texture.pyx:296: in cupy.cuda.texture.CUDAarray.__init__
    self.ptr = runtime.malloc3DArray(desc.ptr, width, height, depth,
cupy_backends/cuda/api/runtime.pyx:593: in cupy_backends.cuda.api.runtime.malloc3DArray
    check_status(status)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

>   raise CUDARuntimeError(status)
E   AssertionError: Only cupy raises error
E   
E   Traceback (most recent call last):
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.Np3X0NVCM9/cupy/cupy/testing/_helper.py", line 47, in _call_func
E       result = impl(self, *args, **kw)
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.Np3X0NVCM9/cupy/tests/cupyx_tests/scipy_tests/ndimage_tests/test_interpolation.py", line 398, in test_affine_transform_texture_memory
E       return m(a, matrix, output_shape=output_shape,
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.Np3X0NVCM9/cupy/cupyx/scipy/ndimage/interpolation.py", line 376, in affine_transform
E       return _texture.affine_transformation(data=input,
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.Np3X0NVCM9/cupy/cupyx/_texture.py", line 168, in affine_transformation
E       texture_object = _create_texture_object(data,
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.Np3X0NVCM9/cupy/cupyx/_texture.py", line 98, in _create_texture_object
E       array = texture.CUDAarray(texture_fmt, *data.shape[::-1])
E     File "cupy/cuda/texture.pyx", line 296, in cupy.cuda.texture.CUDAarray.__init__
E       self.ptr = runtime.malloc3DArray(desc.ptr, width, height, depth,
E     File "cupy_backends/cuda/api/runtime.pyx", line 593, in cupy_backends.cuda.api.runtime.malloc3DArray
E       check_status(status)
E     File "cupy_backends/cuda/api/runtime.pyx", line 265, in cupy_backends.cuda.api.runtime.check_status
E       raise CUDARuntimeError(status)
E   cupy_backends.cuda.api.runtime.CUDARuntimeError: hipErrorUnknown: hipErrorUnknown

cupy_backends/cuda/api/runtime.pyx:265: AssertionError
----------------------------- Captured stderr call -----------------------------
Traceback (most recent call last):
  File "cupy_backends/cuda/api/runtime.pyx", line 644, in cupy_backends.cuda.api.runtime.freeArray
    check_status(status)
  File "cupy_backends/cuda/api/runtime.pyx", line 265, in cupy_backends.cuda.api.runtime.check_status
    raise CUDARuntimeError(status)
cupy_backends.cuda.api.runtime.CUDARuntimeError: hipErrorUnknown: hipErrorUnknown
_ TestAffineTransformTextureMemory.test_affine_transform_texture_memory[_param_339_{mode='nearest', order=1, output=float32, output_shape=10, shape=(100, 100), theta=270}] _

self = <<cupyx_tests.scipy_tests.ndimage_tests.test_interpolation.TestAffineTransformTextureMemory object at 0x7fd7059d19d0> ...ode': 'nearest', 'order': 1, 'output': <class 'numpy.float32'>, 'output_shape': 10, 'shape': (100, 100), 'theta': 270}>
xp = <module 'cupy' from '/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.Np3X0NVCM9/cupy/cupy/__init__.py'>
scp = <module 'cupyx.scipy' from '/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.Np3X0NVCM9/cupy/cupyx/scipy/__init__.py'>

    @testing.numpy_cupy_allclose(atol=0.1, scipy_name='scp')
    def test_affine_transform_texture_memory(self, xp, scp):
        a = xp.ones(self.shape, dtype=xp.float32)
        center = numpy.divide(numpy.subtract(self.shape, 1), 2)
    
        if len(self.shape) == 2:
            matrix = self._2d_rotation_matrix(self.theta, center)
        elif len(self.shape) == 3:
            matrix = self._3d_rotation_matrix(self.theta, center)
        else:
            return pytest.xfail('Unsupported shape')
    
        if self.output == 'empty':
            output = xp.empty(self.shape, dtype=xp.float32)
            if self.output_shape:
                return pytest.skip('This combination is tested in '
                                   'test_invalid_texture_arguments')
        else:
            output = self.output
    
        if self.output_shape:
            output_shape = (self.output_shape, ) * len(self.shape)
        else:
            output_shape = self.output_shape
    
        if xp == cupy:
            m = cupyx.scipy.ndimage.affine_transform
            matrix = cupy.array(matrix)
>           return m(a, matrix, output_shape=output_shape,
                     output=output, order=self.order,
                     mode=self.mode, texture_memory=True)

tests/cupyx_tests/scipy_tests/ndimage_tests/test_interpolation.py:398: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
cupyx/scipy/ndimage/interpolation.py:376: in affine_transform
    return _texture.affine_transformation(data=input,
cupyx/_texture.py:168: in affine_transformation
    texture_object = _create_texture_object(data,
cupyx/_texture.py:98: in _create_texture_object
    array = texture.CUDAarray(texture_fmt, *data.shape[::-1])
cupy/cuda/texture.pyx:296: in cupy.cuda.texture.CUDAarray.__init__
    self.ptr = runtime.malloc3DArray(desc.ptr, width, height, depth,
cupy_backends/cuda/api/runtime.pyx:593: in cupy_backends.cuda.api.runtime.malloc3DArray
    check_status(status)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

>   raise CUDARuntimeError(status)
E   AssertionError: Only cupy raises error
E   
E   Traceback (most recent call last):
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.Np3X0NVCM9/cupy/cupy/testing/_helper.py", line 47, in _call_func
E       result = impl(self, *args, **kw)
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.Np3X0NVCM9/cupy/tests/cupyx_tests/scipy_tests/ndimage_tests/test_interpolation.py", line 398, in test_affine_transform_texture_memory
E       return m(a, matrix, output_shape=output_shape,
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.Np3X0NVCM9/cupy/cupyx/scipy/ndimage/interpolation.py", line 376, in affine_transform
E       return _texture.affine_transformation(data=input,
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.Np3X0NVCM9/cupy/cupyx/_texture.py", line 168, in affine_transformation
E       texture_object = _create_texture_object(data,
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.Np3X0NVCM9/cupy/cupyx/_texture.py", line 98, in _create_texture_object
E       array = texture.CUDAarray(texture_fmt, *data.shape[::-1])
E     File "cupy/cuda/texture.pyx", line 296, in cupy.cuda.texture.CUDAarray.__init__
E       self.ptr = runtime.malloc3DArray(desc.ptr, width, height, depth,
E     File "cupy_backends/cuda/api/runtime.pyx", line 593, in cupy_backends.cuda.api.runtime.malloc3DArray
E       check_status(status)
E     File "cupy_backends/cuda/api/runtime.pyx", line 265, in cupy_backends.cuda.api.runtime.check_status
E       raise CUDARuntimeError(status)
E   cupy_backends.cuda.api.runtime.CUDARuntimeError: hipErrorUnknown: hipErrorUnknown

cupy_backends/cuda/api/runtime.pyx:265: AssertionError
----------------------------- Captured stderr call -----------------------------
Traceback (most recent call last):
  File "cupy_backends/cuda/api/runtime.pyx", line 644, in cupy_backends.cuda.api.runtime.freeArray
    check_status(status)
  File "cupy_backends/cuda/api/runtime.pyx", line 265, in cupy_backends.cuda.api.runtime.check_status
    raise CUDARuntimeError(status)
cupy_backends.cuda.api.runtime.CUDARuntimeError: hipErrorUnknown: hipErrorUnknown
_ TestAffineTransformTextureMemory.test_affine_transform_texture_memory[_param_340_{mode='nearest', order=1, output=float32, output_shape=10, shape=(10, 20), theta=0}] _

self = <<cupyx_tests.scipy_tests.ndimage_tests.test_interpolation.TestAffineTransformTextureMemory object at 0x7fd70666e580> ... {'mode': 'nearest', 'order': 1, 'output': <class 'numpy.float32'>, 'output_shape': 10, 'shape': (10, 20), 'theta': 0}>
xp = <module 'cupy' from '/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.Np3X0NVCM9/cupy/cupy/__init__.py'>
scp = <module 'cupyx.scipy' from '/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.Np3X0NVCM9/cupy/cupyx/scipy/__init__.py'>

    @testing.numpy_cupy_allclose(atol=0.1, scipy_name='scp')
    def test_affine_transform_texture_memory(self, xp, scp):
        a = xp.ones(self.shape, dtype=xp.float32)
        center = numpy.divide(numpy.subtract(self.shape, 1), 2)
    
        if len(self.shape) == 2:
            matrix = self._2d_rotation_matrix(self.theta, center)
        elif len(self.shape) == 3:
            matrix = self._3d_rotation_matrix(self.theta, center)
        else:
            return pytest.xfail('Unsupported shape')
    
        if self.output == 'empty':
            output = xp.empty(self.shape, dtype=xp.float32)
            if self.output_shape:
                return pytest.skip('This combination is tested in '
                                   'test_invalid_texture_arguments')
        else:
            output = self.output
    
        if self.output_shape:
            output_shape = (self.output_shape, ) * len(self.shape)
        else:
            output_shape = self.output_shape
    
        if xp == cupy:
            m = cupyx.scipy.ndimage.affine_transform
            matrix = cupy.array(matrix)
>           return m(a, matrix, output_shape=output_shape,
                     output=output, order=self.order,
                     mode=self.mode, texture_memory=True)

tests/cupyx_tests/scipy_tests/ndimage_tests/test_interpolation.py:398: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
cupyx/scipy/ndimage/interpolation.py:376: in affine_transform
    return _texture.affine_transformation(data=input,
cupyx/_texture.py:168: in affine_transformation
    texture_object = _create_texture_object(data,
cupyx/_texture.py:98: in _create_texture_object
    array = texture.CUDAarray(texture_fmt, *data.shape[::-1])
cupy/cuda/texture.pyx:296: in cupy.cuda.texture.CUDAarray.__init__
    self.ptr = runtime.malloc3DArray(desc.ptr, width, height, depth,
cupy_backends/cuda/api/runtime.pyx:593: in cupy_backends.cuda.api.runtime.malloc3DArray
    check_status(status)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

>   raise CUDARuntimeError(status)
E   AssertionError: Only cupy raises error
E   
E   Traceback (most recent call last):
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.Np3X0NVCM9/cupy/cupy/testing/_helper.py", line 47, in _call_func
E       result = impl(self, *args, **kw)
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.Np3X0NVCM9/cupy/tests/cupyx_tests/scipy_tests/ndimage_tests/test_interpolation.py", line 398, in test_affine_transform_texture_memory
E       return m(a, matrix, output_shape=output_shape,
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.Np3X0NVCM9/cupy/cupyx/scipy/ndimage/interpolation.py", line 376, in affine_transform
E       return _texture.affine_transformation(data=input,
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.Np3X0NVCM9/cupy/cupyx/_texture.py", line 168, in affine_transformation
E       texture_object = _create_texture_object(data,
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.Np3X0NVCM9/cupy/cupyx/_texture.py", line 98, in _create_texture_object
E       array = texture.CUDAarray(texture_fmt, *data.shape[::-1])
E     File "cupy/cuda/texture.pyx", line 296, in cupy.cuda.texture.CUDAarray.__init__
E       self.ptr = runtime.malloc3DArray(desc.ptr, width, height, depth,
E     File "cupy_backends/cuda/api/runtime.pyx", line 593, in cupy_backends.cuda.api.runtime.malloc3DArray
E       check_status(status)
E     File "cupy_backends/cuda/api/runtime.pyx", line 265, in cupy_backends.cuda.api.runtime.check_status
E       raise CUDARuntimeError(status)
E   cupy_backends.cuda.api.runtime.CUDARuntimeError: hipErrorUnknown: hipErrorUnknown

cupy_backends/cuda/api/runtime.pyx:265: AssertionError
----------------------------- Captured stderr call -----------------------------
Traceback (most recent call last):
  File "cupy_backends/cuda/api/runtime.pyx", line 644, in cupy_backends.cuda.api.runtime.freeArray
    check_status(status)
  File "cupy_backends/cuda/api/runtime.pyx", line 265, in cupy_backends.cuda.api.runtime.check_status
    raise CUDARuntimeError(status)
cupy_backends.cuda.api.runtime.CUDARuntimeError: hipErrorUnknown: hipErrorUnknown
_ TestAffineTransformTextureMemory.test_affine_transform_texture_memory[_param_341_{mode='nearest', order=1, output=float32, output_shape=10, shape=(10, 20), theta=90}] _

self = <<cupyx_tests.scipy_tests.ndimage_tests.test_interpolation.TestAffineTransformTextureMemory object at 0x7fd706e80580> ...{'mode': 'nearest', 'order': 1, 'output': <class 'numpy.float32'>, 'output_shape': 10, 'shape': (10, 20), 'theta': 90}>
xp = <module 'cupy' from '/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.Np3X0NVCM9/cupy/cupy/__init__.py'>
scp = <module 'cupyx.scipy' from '/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.Np3X0NVCM9/cupy/cupyx/scipy/__init__.py'>

    @testing.numpy_cupy_allclose(atol=0.1, scipy_name='scp')
    def test_affine_transform_texture_memory(self, xp, scp):
        a = xp.ones(self.shape, dtype=xp.float32)
        center = numpy.divide(numpy.subtract(self.shape, 1), 2)
    
        if len(self.shape) == 2:
            matrix = self._2d_rotation_matrix(self.theta, center)
        elif len(self.shape) == 3:
            matrix = self._3d_rotation_matrix(self.theta, center)
        else:
            return pytest.xfail('Unsupported shape')
    
        if self.output == 'empty':
            output = xp.empty(self.shape, dtype=xp.float32)
            if self.output_shape:
                return pytest.skip('This combination is tested in '
                                   'test_invalid_texture_arguments')
        else:
            output = self.output
    
        if self.output_shape:
            output_shape = (self.output_shape, ) * len(self.shape)
        else:
            output_shape = self.output_shape
    
        if xp == cupy:
            m = cupyx.scipy.ndimage.affine_transform
            matrix = cupy.array(matrix)
>           return m(a, matrix, output_shape=output_shape,
                     output=output, order=self.order,
                     mode=self.mode, texture_memory=True)

tests/cupyx_tests/scipy_tests/ndimage_tests/test_interpolation.py:398: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
cupyx/scipy/ndimage/interpolation.py:376: in affine_transform
    return _texture.affine_transformation(data=input,
cupyx/_texture.py:168: in affine_transformation
    texture_object = _create_texture_object(data,
cupyx/_texture.py:98: in _create_texture_object
    array = texture.CUDAarray(texture_fmt, *data.shape[::-1])
cupy/cuda/texture.pyx:296: in cupy.cuda.texture.CUDAarray.__init__
    self.ptr = runtime.malloc3DArray(desc.ptr, width, height, depth,
cupy_backends/cuda/api/runtime.pyx:593: in cupy_backends.cuda.api.runtime.malloc3DArray
    check_status(status)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

>   raise CUDARuntimeError(status)
E   AssertionError: Only cupy raises error
E   
E   Traceback (most recent call last):
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.Np3X0NVCM9/cupy/cupy/testing/_helper.py", line 47, in _call_func
E       result = impl(self, *args, **kw)
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.Np3X0NVCM9/cupy/tests/cupyx_tests/scipy_tests/ndimage_tests/test_interpolation.py", line 398, in test_affine_transform_texture_memory
E       return m(a, matrix, output_shape=output_shape,
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.Np3X0NVCM9/cupy/cupyx/scipy/ndimage/interpolation.py", line 376, in affine_transform
E       return _texture.affine_transformation(data=input,
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.Np3X0NVCM9/cupy/cupyx/_texture.py", line 168, in affine_transformation
E       texture_object = _create_texture_object(data,
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.Np3X0NVCM9/cupy/cupyx/_texture.py", line 98, in _create_texture_object
E       array = texture.CUDAarray(texture_fmt, *data.shape[::-1])
E     File "cupy/cuda/texture.pyx", line 296, in cupy.cuda.texture.CUDAarray.__init__
E       self.ptr = runtime.malloc3DArray(desc.ptr, width, height, depth,
E     File "cupy_backends/cuda/api/runtime.pyx", line 593, in cupy_backends.cuda.api.runtime.malloc3DArray
E       check_status(status)
E     File "cupy_backends/cuda/api/runtime.pyx", line 265, in cupy_backends.cuda.api.runtime.check_status
E       raise CUDARuntimeError(status)
E   cupy_backends.cuda.api.runtime.CUDARuntimeError: hipErrorUnknown: hipErrorUnknown

cupy_backends/cuda/api/runtime.pyx:265: AssertionError
----------------------------- Captured stderr call -----------------------------
Traceback (most recent call last):
  File "cupy_backends/cuda/api/runtime.pyx", line 644, in cupy_backends.cuda.api.runtime.freeArray
    check_status(status)
  File "cupy_backends/cuda/api/runtime.pyx", line 265, in cupy_backends.cuda.api.runtime.check_status
    raise CUDARuntimeError(status)
cupy_backends.cuda.api.runtime.CUDARuntimeError: hipErrorUnknown: hipErrorUnknown
_ TestAffineTransformTextureMemory.test_affine_transform_texture_memory[_param_342_{mode='nearest', order=1, output=float32, output_shape=10, shape=(10, 20), theta=180}] _

self = <<cupyx_tests.scipy_tests.ndimage_tests.test_interpolation.TestAffineTransformTextureMemory object at 0x7fd819c00c40> ...'mode': 'nearest', 'order': 1, 'output': <class 'numpy.float32'>, 'output_shape': 10, 'shape': (10, 20), 'theta': 180}>
xp = <module 'cupy' from '/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.Np3X0NVCM9/cupy/cupy/__init__.py'>
scp = <module 'cupyx.scipy' from '/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.Np3X0NVCM9/cupy/cupyx/scipy/__init__.py'>

    @testing.numpy_cupy_allclose(atol=0.1, scipy_name='scp')
    def test_affine_transform_texture_memory(self, xp, scp):
        a = xp.ones(self.shape, dtype=xp.float32)
        center = numpy.divide(numpy.subtract(self.shape, 1), 2)
    
        if len(self.shape) == 2:
            matrix = self._2d_rotation_matrix(self.theta, center)
        elif len(self.shape) == 3:
            matrix = self._3d_rotation_matrix(self.theta, center)
        else:
            return pytest.xfail('Unsupported shape')
    
        if self.output == 'empty':
            output = xp.empty(self.shape, dtype=xp.float32)
            if self.output_shape:
                return pytest.skip('This combination is tested in '
                                   'test_invalid_texture_arguments')
        else:
            output = self.output
    
        if self.output_shape:
            output_shape = (self.output_shape, ) * len(self.shape)
        else:
            output_shape = self.output_shape
    
        if xp == cupy:
            m = cupyx.scipy.ndimage.affine_transform
            matrix = cupy.array(matrix)
>           return m(a, matrix, output_shape=output_shape,
                     output=output, order=self.order,
                     mode=self.mode, texture_memory=True)

tests/cupyx_tests/scipy_tests/ndimage_tests/test_interpolation.py:398: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
cupyx/scipy/ndimage/interpolation.py:376: in affine_transform
    return _texture.affine_transformation(data=input,
cupyx/_texture.py:168: in affine_transformation
    texture_object = _create_texture_object(data,
cupyx/_texture.py:98: in _create_texture_object
    array = texture.CUDAarray(texture_fmt, *data.shape[::-1])
cupy/cuda/texture.pyx:296: in cupy.cuda.texture.CUDAarray.__init__
    self.ptr = runtime.malloc3DArray(desc.ptr, width, height, depth,
cupy_backends/cuda/api/runtime.pyx:593: in cupy_backends.cuda.api.runtime.malloc3DArray
    check_status(status)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

>   raise CUDARuntimeError(status)
E   AssertionError: Only cupy raises error
E   
E   Traceback (most recent call last):
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.Np3X0NVCM9/cupy/cupy/testing/_helper.py", line 47, in _call_func
E       result = impl(self, *args, **kw)
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.Np3X0NVCM9/cupy/tests/cupyx_tests/scipy_tests/ndimage_tests/test_interpolation.py", line 398, in test_affine_transform_texture_memory
E       return m(a, matrix, output_shape=output_shape,
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.Np3X0NVCM9/cupy/cupyx/scipy/ndimage/interpolation.py", line 376, in affine_transform
E       return _texture.affine_transformation(data=input,
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.Np3X0NVCM9/cupy/cupyx/_texture.py", line 168, in affine_transformation
E       texture_object = _create_texture_object(data,
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.Np3X0NVCM9/cupy/cupyx/_texture.py", line 98, in _create_texture_object
E       array = texture.CUDAarray(texture_fmt, *data.shape[::-1])
E     File "cupy/cuda/texture.pyx", line 296, in cupy.cuda.texture.CUDAarray.__init__
E       self.ptr = runtime.malloc3DArray(desc.ptr, width, height, depth,
E     File "cupy_backends/cuda/api/runtime.pyx", line 593, in cupy_backends.cuda.api.runtime.malloc3DArray
E       check_status(status)
E     File "cupy_backends/cuda/api/runtime.pyx", line 265, in cupy_backends.cuda.api.runtime.check_status
E       raise CUDARuntimeError(status)
E   cupy_backends.cuda.api.runtime.CUDARuntimeError: hipErrorUnknown: hipErrorUnknown

cupy_backends/cuda/api/runtime.pyx:265: AssertionError
----------------------------- Captured stderr call -----------------------------
Traceback (most recent call last):
  File "cupy_backends/cuda/api/runtime.pyx", line 644, in cupy_backends.cuda.api.runtime.freeArray
    check_status(status)
  File "cupy_backends/cuda/api/runtime.pyx", line 265, in cupy_backends.cuda.api.runtime.check_status
    raise CUDARuntimeError(status)
cupy_backends.cuda.api.runtime.CUDARuntimeError: hipErrorUnknown: hipErrorUnknown
_ TestAffineTransformTextureMemory.test_affine_transform_texture_memory[_param_343_{mode='nearest', order=1, output=float32, output_shape=10, shape=(10, 20), theta=270}] _

self = <<cupyx_tests.scipy_tests.ndimage_tests.test_interpolation.TestAffineTransformTextureMemory object at 0x7fd7055692b0> ...'mode': 'nearest', 'order': 1, 'output': <class 'numpy.float32'>, 'output_shape': 10, 'shape': (10, 20), 'theta': 270}>
xp = <module 'cupy' from '/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.Np3X0NVCM9/cupy/cupy/__init__.py'>
scp = <module 'cupyx.scipy' from '/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.Np3X0NVCM9/cupy/cupyx/scipy/__init__.py'>

    @testing.numpy_cupy_allclose(atol=0.1, scipy_name='scp')
    def test_affine_transform_texture_memory(self, xp, scp):
        a = xp.ones(self.shape, dtype=xp.float32)
        center = numpy.divide(numpy.subtract(self.shape, 1), 2)
    
        if len(self.shape) == 2:
            matrix = self._2d_rotation_matrix(self.theta, center)
        elif len(self.shape) == 3:
            matrix = self._3d_rotation_matrix(self.theta, center)
        else:
            return pytest.xfail('Unsupported shape')
    
        if self.output == 'empty':
            output = xp.empty(self.shape, dtype=xp.float32)
            if self.output_shape:
                return pytest.skip('This combination is tested in '
                                   'test_invalid_texture_arguments')
        else:
            output = self.output
    
        if self.output_shape:
            output_shape = (self.output_shape, ) * len(self.shape)
        else:
            output_shape = self.output_shape
    
        if xp == cupy:
            m = cupyx.scipy.ndimage.affine_transform
            matrix = cupy.array(matrix)
>           return m(a, matrix, output_shape=output_shape,
                     output=output, order=self.order,
                     mode=self.mode, texture_memory=True)

tests/cupyx_tests/scipy_tests/ndimage_tests/test_interpolation.py:398: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
cupyx/scipy/ndimage/interpolation.py:376: in affine_transform
    return _texture.affine_transformation(data=input,
cupyx/_texture.py:168: in affine_transformation
    texture_object = _create_texture_object(data,
cupyx/_texture.py:98: in _create_texture_object
    array = texture.CUDAarray(texture_fmt, *data.shape[::-1])
cupy/cuda/texture.pyx:296: in cupy.cuda.texture.CUDAarray.__init__
    self.ptr = runtime.malloc3DArray(desc.ptr, width, height, depth,
cupy_backends/cuda/api/runtime.pyx:593: in cupy_backends.cuda.api.runtime.malloc3DArray
    check_status(status)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

>   raise CUDARuntimeError(status)
E   AssertionError: Only cupy raises error
E   
E   Traceback (most recent call last):
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.Np3X0NVCM9/cupy/cupy/testing/_helper.py", line 47, in _call_func
E       result = impl(self, *args, **kw)
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.Np3X0NVCM9/cupy/tests/cupyx_tests/scipy_tests/ndimage_tests/test_interpolation.py", line 398, in test_affine_transform_texture_memory
E       return m(a, matrix, output_shape=output_shape,
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.Np3X0NVCM9/cupy/cupyx/scipy/ndimage/interpolation.py", line 376, in affine_transform
E       return _texture.affine_transformation(data=input,
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.Np3X0NVCM9/cupy/cupyx/_texture.py", line 168, in affine_transformation
E       texture_object = _create_texture_object(data,
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.Np3X0NVCM9/cupy/cupyx/_texture.py", line 98, in _create_texture_object
E       array = texture.CUDAarray(texture_fmt, *data.shape[::-1])
E     File "cupy/cuda/texture.pyx", line 296, in cupy.cuda.texture.CUDAarray.__init__
E       self.ptr = runtime.malloc3DArray(desc.ptr, width, height, depth,
E     File "cupy_backends/cuda/api/runtime.pyx", line 593, in cupy_backends.cuda.api.runtime.malloc3DArray
E       check_status(status)
E     File "cupy_backends/cuda/api/runtime.pyx", line 265, in cupy_backends.cuda.api.runtime.check_status
E       raise CUDARuntimeError(status)
E   cupy_backends.cuda.api.runtime.CUDARuntimeError: hipErrorUnknown: hipErrorUnknown

cupy_backends/cuda/api/runtime.pyx:265: AssertionError
----------------------------- Captured stderr call -----------------------------
Traceback (most recent call last):
  File "cupy_backends/cuda/api/runtime.pyx", line 644, in cupy_backends.cuda.api.runtime.freeArray
    check_status(status)
  File "cupy_backends/cuda/api/runtime.pyx", line 265, in cupy_backends.cuda.api.runtime.check_status
    raise CUDARuntimeError(status)
cupy_backends.cuda.api.runtime.CUDARuntimeError: hipErrorUnknown: hipErrorUnknown
_ TestAffineTransformTextureMemory.test_affine_transform_texture_memory[_param_344_{mode='nearest', order=1, output=float32, output_shape=10, shape=(10, 10, 10), theta=0}] _

self = <<cupyx_tests.scipy_tests.ndimage_tests.test_interpolation.TestAffineTransformTextureMemory object at 0x7fd7057d5430> ...ode': 'nearest', 'order': 1, 'output': <class 'numpy.float32'>, 'output_shape': 10, 'shape': (10, 10, 10), 'theta': 0}>
xp = <module 'cupy' from '/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.Np3X0NVCM9/cupy/cupy/__init__.py'>
scp = <module 'cupyx.scipy' from '/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.Np3X0NVCM9/cupy/cupyx/scipy/__init__.py'>

    @testing.numpy_cupy_allclose(atol=0.1, scipy_name='scp')
    def test_affine_transform_texture_memory(self, xp, scp):
        a = xp.ones(self.shape, dtype=xp.float32)
        center = numpy.divide(numpy.subtract(self.shape, 1), 2)
    
        if len(self.shape) == 2:
            matrix = self._2d_rotation_matrix(self.theta, center)
        elif len(self.shape) == 3:
            matrix = self._3d_rotation_matrix(self.theta, center)
        else:
            return pytest.xfail('Unsupported shape')
    
        if self.output == 'empty':
            output = xp.empty(self.shape, dtype=xp.float32)
            if self.output_shape:
                return pytest.skip('This combination is tested in '
                                   'test_invalid_texture_arguments')
        else:
            output = self.output
    
        if self.output_shape:
            output_shape = (self.output_shape, ) * len(self.shape)
        else:
            output_shape = self.output_shape
    
        if xp == cupy:
            m = cupyx.scipy.ndimage.affine_transform
            matrix = cupy.array(matrix)
>           return m(a, matrix, output_shape=output_shape,
                     output=output, order=self.order,
                     mode=self.mode, texture_memory=True)

tests/cupyx_tests/scipy_tests/ndimage_tests/test_interpolation.py:398: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
cupyx/scipy/ndimage/interpolation.py:376: in affine_transform
    return _texture.affine_transformation(data=input,
cupyx/_texture.py:168: in affine_transformation
    texture_object = _create_texture_object(data,
cupyx/_texture.py:98: in _create_texture_object
    array = texture.CUDAarray(texture_fmt, *data.shape[::-1])
cupy/cuda/texture.pyx:296: in cupy.cuda.texture.CUDAarray.__init__
    self.ptr = runtime.malloc3DArray(desc.ptr, width, height, depth,
cupy_backends/cuda/api/runtime.pyx:593: in cupy_backends.cuda.api.runtime.malloc3DArray
    check_status(status)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

>   raise CUDARuntimeError(status)
E   AssertionError: Only cupy raises error
E   
E   Traceback (most recent call last):
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.Np3X0NVCM9/cupy/cupy/testing/_helper.py", line 47, in _call_func
E       result = impl(self, *args, **kw)
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.Np3X0NVCM9/cupy/tests/cupyx_tests/scipy_tests/ndimage_tests/test_interpolation.py", line 398, in test_affine_transform_texture_memory
E       return m(a, matrix, output_shape=output_shape,
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.Np3X0NVCM9/cupy/cupyx/scipy/ndimage/interpolation.py", line 376, in affine_transform
E       return _texture.affine_transformation(data=input,
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.Np3X0NVCM9/cupy/cupyx/_texture.py", line 168, in affine_transformation
E       texture_object = _create_texture_object(data,
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.Np3X0NVCM9/cupy/cupyx/_texture.py", line 98, in _create_texture_object
E       array = texture.CUDAarray(texture_fmt, *data.shape[::-1])
E     File "cupy/cuda/texture.pyx", line 296, in cupy.cuda.texture.CUDAarray.__init__
E       self.ptr = runtime.malloc3DArray(desc.ptr, width, height, depth,
E     File "cupy_backends/cuda/api/runtime.pyx", line 593, in cupy_backends.cuda.api.runtime.malloc3DArray
E       check_status(status)
E     File "cupy_backends/cuda/api/runtime.pyx", line 265, in cupy_backends.cuda.api.runtime.check_status
E       raise CUDARuntimeError(status)
E   cupy_backends.cuda.api.runtime.CUDARuntimeError: hipErrorUnknown: hipErrorUnknown

cupy_backends/cuda/api/runtime.pyx:265: AssertionError
----------------------------- Captured stderr call -----------------------------
Traceback (most recent call last):
  File "cupy_backends/cuda/api/runtime.pyx", line 644, in cupy_backends.cuda.api.runtime.freeArray
    check_status(status)
  File "cupy_backends/cuda/api/runtime.pyx", line 265, in cupy_backends.cuda.api.runtime.check_status
    raise CUDARuntimeError(status)
cupy_backends.cuda.api.runtime.CUDARuntimeError: hipErrorUnknown: hipErrorUnknown
_ TestAffineTransformTextureMemory.test_affine_transform_texture_memory[_param_345_{mode='nearest', order=1, output=float32, output_shape=10, shape=(10, 10, 10), theta=90}] _

self = <<cupyx_tests.scipy_tests.ndimage_tests.test_interpolation.TestAffineTransformTextureMemory object at 0x7fd705932a60> ...de': 'nearest', 'order': 1, 'output': <class 'numpy.float32'>, 'output_shape': 10, 'shape': (10, 10, 10), 'theta': 90}>
xp = <module 'cupy' from '/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.Np3X0NVCM9/cupy/cupy/__init__.py'>
scp = <module 'cupyx.scipy' from '/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.Np3X0NVCM9/cupy/cupyx/scipy/__init__.py'>

    @testing.numpy_cupy_allclose(atol=0.1, scipy_name='scp')
    def test_affine_transform_texture_memory(self, xp, scp):
        a = xp.ones(self.shape, dtype=xp.float32)
        center = numpy.divide(numpy.subtract(self.shape, 1), 2)
    
        if len(self.shape) == 2:
            matrix = self._2d_rotation_matrix(self.theta, center)
        elif len(self.shape) == 3:
            matrix = self._3d_rotation_matrix(self.theta, center)
        else:
            return pytest.xfail('Unsupported shape')
    
        if self.output == 'empty':
            output = xp.empty(self.shape, dtype=xp.float32)
            if self.output_shape:
                return pytest.skip('This combination is tested in '
                                   'test_invalid_texture_arguments')
        else:
            output = self.output
    
        if self.output_shape:
            output_shape = (self.output_shape, ) * len(self.shape)
        else:
            output_shape = self.output_shape
    
        if xp == cupy:
            m = cupyx.scipy.ndimage.affine_transform
            matrix = cupy.array(matrix)
>           return m(a, matrix, output_shape=output_shape,
                     output=output, order=self.order,
                     mode=self.mode, texture_memory=True)

tests/cupyx_tests/scipy_tests/ndimage_tests/test_interpolation.py:398: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
cupyx/scipy/ndimage/interpolation.py:376: in affine_transform
    return _texture.affine_transformation(data=input,
cupyx/_texture.py:168: in affine_transformation
    texture_object = _create_texture_object(data,
cupyx/_texture.py:98: in _create_texture_object
    array = texture.CUDAarray(texture_fmt, *data.shape[::-1])
cupy/cuda/texture.pyx:296: in cupy.cuda.texture.CUDAarray.__init__
    self.ptr = runtime.malloc3DArray(desc.ptr, width, height, depth,
cupy_backends/cuda/api/runtime.pyx:593: in cupy_backends.cuda.api.runtime.malloc3DArray
    check_status(status)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

>   raise CUDARuntimeError(status)
E   AssertionError: Only cupy raises error
E   
E   Traceback (most recent call last):
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.Np3X0NVCM9/cupy/cupy/testing/_helper.py", line 47, in _call_func
E       result = impl(self, *args, **kw)
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.Np3X0NVCM9/cupy/tests/cupyx_tests/scipy_tests/ndimage_tests/test_interpolation.py", line 398, in test_affine_transform_texture_memory
E       return m(a, matrix, output_shape=output_shape,
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.Np3X0NVCM9/cupy/cupyx/scipy/ndimage/interpolation.py", line 376, in affine_transform
E       return _texture.affine_transformation(data=input,
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.Np3X0NVCM9/cupy/cupyx/_texture.py", line 168, in affine_transformation
E       texture_object = _create_texture_object(data,
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.Np3X0NVCM9/cupy/cupyx/_texture.py", line 98, in _create_texture_object
E       array = texture.CUDAarray(texture_fmt, *data.shape[::-1])
E     File "cupy/cuda/texture.pyx", line 296, in cupy.cuda.texture.CUDAarray.__init__
E       self.ptr = runtime.malloc3DArray(desc.ptr, width, height, depth,
E     File "cupy_backends/cuda/api/runtime.pyx", line 593, in cupy_backends.cuda.api.runtime.malloc3DArray
E       check_status(status)
E     File "cupy_backends/cuda/api/runtime.pyx", line 265, in cupy_backends.cuda.api.runtime.check_status
E       raise CUDARuntimeError(status)
E   cupy_backends.cuda.api.runtime.CUDARuntimeError: hipErrorUnknown: hipErrorUnknown

cupy_backends/cuda/api/runtime.pyx:265: AssertionError
----------------------------- Captured stderr call -----------------------------
Traceback (most recent call last):
  File "cupy_backends/cuda/api/runtime.pyx", line 644, in cupy_backends.cuda.api.runtime.freeArray
    check_status(status)
  File "cupy_backends/cuda/api/runtime.pyx", line 265, in cupy_backends.cuda.api.runtime.check_status
    raise CUDARuntimeError(status)
cupy_backends.cuda.api.runtime.CUDARuntimeError: hipErrorUnknown: hipErrorUnknown
_ TestAffineTransformTextureMemory.test_affine_transform_texture_memory[_param_346_{mode='nearest', order=1, output=float32, output_shape=10, shape=(10, 10, 10), theta=180}] _

self = <<cupyx_tests.scipy_tests.ndimage_tests.test_interpolation.TestAffineTransformTextureMemory object at 0x7fd7056ba820> ...e': 'nearest', 'order': 1, 'output': <class 'numpy.float32'>, 'output_shape': 10, 'shape': (10, 10, 10), 'theta': 180}>
xp = <module 'cupy' from '/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.Np3X0NVCM9/cupy/cupy/__init__.py'>
scp = <module 'cupyx.scipy' from '/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.Np3X0NVCM9/cupy/cupyx/scipy/__init__.py'>

    @testing.numpy_cupy_allclose(atol=0.1, scipy_name='scp')
    def test_affine_transform_texture_memory(self, xp, scp):
        a = xp.ones(self.shape, dtype=xp.float32)
        center = numpy.divide(numpy.subtract(self.shape, 1), 2)
    
        if len(self.shape) == 2:
            matrix = self._2d_rotation_matrix(self.theta, center)
        elif len(self.shape) == 3:
            matrix = self._3d_rotation_matrix(self.theta, center)
        else:
            return pytest.xfail('Unsupported shape')
    
        if self.output == 'empty':
            output = xp.empty(self.shape, dtype=xp.float32)
            if self.output_shape:
                return pytest.skip('This combination is tested in '
                                   'test_invalid_texture_arguments')
        else:
            output = self.output
    
        if self.output_shape:
            output_shape = (self.output_shape, ) * len(self.shape)
        else:
            output_shape = self.output_shape
    
        if xp == cupy:
            m = cupyx.scipy.ndimage.affine_transform
            matrix = cupy.array(matrix)
>           return m(a, matrix, output_shape=output_shape,
                     output=output, order=self.order,
                     mode=self.mode, texture_memory=True)

tests/cupyx_tests/scipy_tests/ndimage_tests/test_interpolation.py:398: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
cupyx/scipy/ndimage/interpolation.py:376: in affine_transform
    return _texture.affine_transformation(data=input,
cupyx/_texture.py:168: in affine_transformation
    texture_object = _create_texture_object(data,
cupyx/_texture.py:98: in _create_texture_object
    array = texture.CUDAarray(texture_fmt, *data.shape[::-1])
cupy/cuda/texture.pyx:296: in cupy.cuda.texture.CUDAarray.__init__
    self.ptr = runtime.malloc3DArray(desc.ptr, width, height, depth,
cupy_backends/cuda/api/runtime.pyx:593: in cupy_backends.cuda.api.runtime.malloc3DArray
    check_status(status)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

>   raise CUDARuntimeError(status)
E   AssertionError: Only cupy raises error
E   
E   Traceback (most recent call last):
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.Np3X0NVCM9/cupy/cupy/testing/_helper.py", line 47, in _call_func
E       result = impl(self, *args, **kw)
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.Np3X0NVCM9/cupy/tests/cupyx_tests/scipy_tests/ndimage_tests/test_interpolation.py", line 398, in test_affine_transform_texture_memory
E       return m(a, matrix, output_shape=output_shape,
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.Np3X0NVCM9/cupy/cupyx/scipy/ndimage/interpolation.py", line 376, in affine_transform
E       return _texture.affine_transformation(data=input,
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.Np3X0NVCM9/cupy/cupyx/_texture.py", line 168, in affine_transformation
E       texture_object = _create_texture_object(data,
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.Np3X0NVCM9/cupy/cupyx/_texture.py", line 98, in _create_texture_object
E       array = texture.CUDAarray(texture_fmt, *data.shape[::-1])
E     File "cupy/cuda/texture.pyx", line 296, in cupy.cuda.texture.CUDAarray.__init__
E       self.ptr = runtime.malloc3DArray(desc.ptr, width, height, depth,
E     File "cupy_backends/cuda/api/runtime.pyx", line 593, in cupy_backends.cuda.api.runtime.malloc3DArray
E       check_status(status)
E     File "cupy_backends/cuda/api/runtime.pyx", line 265, in cupy_backends.cuda.api.runtime.check_status
E       raise CUDARuntimeError(status)
E   cupy_backends.cuda.api.runtime.CUDARuntimeError: hipErrorUnknown: hipErrorUnknown

cupy_backends/cuda/api/runtime.pyx:265: AssertionError
----------------------------- Captured stderr call -----------------------------
Traceback (most recent call last):
  File "cupy_backends/cuda/api/runtime.pyx", line 644, in cupy_backends.cuda.api.runtime.freeArray
    check_status(status)
  File "cupy_backends/cuda/api/runtime.pyx", line 265, in cupy_backends.cuda.api.runtime.check_status
    raise CUDARuntimeError(status)
cupy_backends.cuda.api.runtime.CUDARuntimeError: hipErrorUnknown: hipErrorUnknown
_ TestAffineTransformTextureMemory.test_affine_transform_texture_memory[_param_347_{mode='nearest', order=1, output=float32, output_shape=10, shape=(10, 10, 10), theta=270}] _

self = <<cupyx_tests.scipy_tests.ndimage_tests.test_interpolation.TestAffineTransformTextureMemory object at 0x7fd819bda1c0> ...e': 'nearest', 'order': 1, 'output': <class 'numpy.float32'>, 'output_shape': 10, 'shape': (10, 10, 10), 'theta': 270}>
xp = <module 'cupy' from '/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.Np3X0NVCM9/cupy/cupy/__init__.py'>
scp = <module 'cupyx.scipy' from '/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.Np3X0NVCM9/cupy/cupyx/scipy/__init__.py'>

    @testing.numpy_cupy_allclose(atol=0.1, scipy_name='scp')
    def test_affine_transform_texture_memory(self, xp, scp):
        a = xp.ones(self.shape, dtype=xp.float32)
        center = numpy.divide(numpy.subtract(self.shape, 1), 2)
    
        if len(self.shape) == 2:
            matrix = self._2d_rotation_matrix(self.theta, center)
        elif len(self.shape) == 3:
            matrix = self._3d_rotation_matrix(self.theta, center)
        else:
            return pytest.xfail('Unsupported shape')
    
        if self.output == 'empty':
            output = xp.empty(self.shape, dtype=xp.float32)
            if self.output_shape:
                return pytest.skip('This combination is tested in '
                                   'test_invalid_texture_arguments')
        else:
            output = self.output
    
        if self.output_shape:
            output_shape = (self.output_shape, ) * len(self.shape)
        else:
            output_shape = self.output_shape
    
        if xp == cupy:
            m = cupyx.scipy.ndimage.affine_transform
            matrix = cupy.array(matrix)
>           return m(a, matrix, output_shape=output_shape,
                     output=output, order=self.order,
                     mode=self.mode, texture_memory=True)

tests/cupyx_tests/scipy_tests/ndimage_tests/test_interpolation.py:398: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
cupyx/scipy/ndimage/interpolation.py:376: in affine_transform
    return _texture.affine_transformation(data=input,
cupyx/_texture.py:168: in affine_transformation
    texture_object = _create_texture_object(data,
cupyx/_texture.py:98: in _create_texture_object
    array = texture.CUDAarray(texture_fmt, *data.shape[::-1])
cupy/cuda/texture.pyx:296: in cupy.cuda.texture.CUDAarray.__init__
    self.ptr = runtime.malloc3DArray(desc.ptr, width, height, depth,
cupy_backends/cuda/api/runtime.pyx:593: in cupy_backends.cuda.api.runtime.malloc3DArray
    check_status(status)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

>   raise CUDARuntimeError(status)
E   AssertionError: Only cupy raises error
E   
E   Traceback (most recent call last):
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.Np3X0NVCM9/cupy/cupy/testing/_helper.py", line 47, in _call_func
E       result = impl(self, *args, **kw)
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.Np3X0NVCM9/cupy/tests/cupyx_tests/scipy_tests/ndimage_tests/test_interpolation.py", line 398, in test_affine_transform_texture_memory
E       return m(a, matrix, output_shape=output_shape,
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.Np3X0NVCM9/cupy/cupyx/scipy/ndimage/interpolation.py", line 376, in affine_transform
E       return _texture.affine_transformation(data=input,
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.Np3X0NVCM9/cupy/cupyx/_texture.py", line 168, in affine_transformation
E       texture_object = _create_texture_object(data,
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.Np3X0NVCM9/cupy/cupyx/_texture.py", line 98, in _create_texture_object
E       array = texture.CUDAarray(texture_fmt, *data.shape[::-1])
E     File "cupy/cuda/texture.pyx", line 296, in cupy.cuda.texture.CUDAarray.__init__
E       self.ptr = runtime.malloc3DArray(desc.ptr, width, height, depth,
E     File "cupy_backends/cuda/api/runtime.pyx", line 593, in cupy_backends.cuda.api.runtime.malloc3DArray
E       check_status(status)
E     File "cupy_backends/cuda/api/runtime.pyx", line 265, in cupy_backends.cuda.api.runtime.check_status
E       raise CUDARuntimeError(status)
E   cupy_backends.cuda.api.runtime.CUDARuntimeError: hipErrorUnknown: hipErrorUnknown

cupy_backends/cuda/api/runtime.pyx:265: AssertionError
----------------------------- Captured stderr call -----------------------------
Traceback (most recent call last):
  File "cupy_backends/cuda/api/runtime.pyx", line 644, in cupy_backends.cuda.api.runtime.freeArray
    check_status(status)
  File "cupy_backends/cuda/api/runtime.pyx", line 265, in cupy_backends.cuda.api.runtime.check_status
    raise CUDARuntimeError(status)
cupy_backends.cuda.api.runtime.CUDARuntimeError: hipErrorUnknown: hipErrorUnknown
_ TestAffineTransformTextureMemory.test_affine_transform_texture_memory[_param_348_{mode='nearest', order=1, output=float32, output_shape=10, shape=(10, 20, 30), theta=0}] _

self = <<cupyx_tests.scipy_tests.ndimage_tests.test_interpolation.TestAffineTransformTextureMemory object at 0x7fd705ad1d90> ...ode': 'nearest', 'order': 1, 'output': <class 'numpy.float32'>, 'output_shape': 10, 'shape': (10, 20, 30), 'theta': 0}>
xp = <module 'cupy' from '/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.Np3X0NVCM9/cupy/cupy/__init__.py'>
scp = <module 'cupyx.scipy' from '/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.Np3X0NVCM9/cupy/cupyx/scipy/__init__.py'>

    @testing.numpy_cupy_allclose(atol=0.1, scipy_name='scp')
    def test_affine_transform_texture_memory(self, xp, scp):
        a = xp.ones(self.shape, dtype=xp.float32)
        center = numpy.divide(numpy.subtract(self.shape, 1), 2)
    
        if len(self.shape) == 2:
            matrix = self._2d_rotation_matrix(self.theta, center)
        elif len(self.shape) == 3:
            matrix = self._3d_rotation_matrix(self.theta, center)
        else:
            return pytest.xfail('Unsupported shape')
    
        if self.output == 'empty':
            output = xp.empty(self.shape, dtype=xp.float32)
            if self.output_shape:
                return pytest.skip('This combination is tested in '
                                   'test_invalid_texture_arguments')
        else:
            output = self.output
    
        if self.output_shape:
            output_shape = (self.output_shape, ) * len(self.shape)
        else:
            output_shape = self.output_shape
    
        if xp == cupy:
            m = cupyx.scipy.ndimage.affine_transform
            matrix = cupy.array(matrix)
>           return m(a, matrix, output_shape=output_shape,
                     output=output, order=self.order,
                     mode=self.mode, texture_memory=True)

tests/cupyx_tests/scipy_tests/ndimage_tests/test_interpolation.py:398: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
cupyx/scipy/ndimage/interpolation.py:376: in affine_transform
    return _texture.affine_transformation(data=input,
cupyx/_texture.py:168: in affine_transformation
    texture_object = _create_texture_object(data,
cupyx/_texture.py:98: in _create_texture_object
    array = texture.CUDAarray(texture_fmt, *data.shape[::-1])
cupy/cuda/texture.pyx:296: in cupy.cuda.texture.CUDAarray.__init__
    self.ptr = runtime.malloc3DArray(desc.ptr, width, height, depth,
cupy_backends/cuda/api/runtime.pyx:593: in cupy_backends.cuda.api.runtime.malloc3DArray
    check_status(status)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

>   raise CUDARuntimeError(status)
E   AssertionError: Only cupy raises error
E   
E   Traceback (most recent call last):
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.Np3X0NVCM9/cupy/cupy/testing/_helper.py", line 47, in _call_func
E       result = impl(self, *args, **kw)
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.Np3X0NVCM9/cupy/tests/cupyx_tests/scipy_tests/ndimage_tests/test_interpolation.py", line 398, in test_affine_transform_texture_memory
E       return m(a, matrix, output_shape=output_shape,
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.Np3X0NVCM9/cupy/cupyx/scipy/ndimage/interpolation.py", line 376, in affine_transform
E       return _texture.affine_transformation(data=input,
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.Np3X0NVCM9/cupy/cupyx/_texture.py", line 168, in affine_transformation
E       texture_object = _create_texture_object(data,
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.Np3X0NVCM9/cupy/cupyx/_texture.py", line 98, in _create_texture_object
E       array = texture.CUDAarray(texture_fmt, *data.shape[::-1])
E     File "cupy/cuda/texture.pyx", line 296, in cupy.cuda.texture.CUDAarray.__init__
E       self.ptr = runtime.malloc3DArray(desc.ptr, width, height, depth,
E     File "cupy_backends/cuda/api/runtime.pyx", line 593, in cupy_backends.cuda.api.runtime.malloc3DArray
E       check_status(status)
E     File "cupy_backends/cuda/api/runtime.pyx", line 265, in cupy_backends.cuda.api.runtime.check_status
E       raise CUDARuntimeError(status)
E   cupy_backends.cuda.api.runtime.CUDARuntimeError: hipErrorUnknown: hipErrorUnknown

cupy_backends/cuda/api/runtime.pyx:265: AssertionError
----------------------------- Captured stderr call -----------------------------
Traceback (most recent call last):
  File "cupy_backends/cuda/api/runtime.pyx", line 644, in cupy_backends.cuda.api.runtime.freeArray
    check_status(status)
  File "cupy_backends/cuda/api/runtime.pyx", line 265, in cupy_backends.cuda.api.runtime.check_status
    raise CUDARuntimeError(status)
cupy_backends.cuda.api.runtime.CUDARuntimeError: hipErrorUnknown: hipErrorUnknown
_ TestAffineTransformTextureMemory.test_affine_transform_texture_memory[_param_349_{mode='nearest', order=1, output=float32, output_shape=10, shape=(10, 20, 30), theta=90}] _

self = <<cupyx_tests.scipy_tests.ndimage_tests.test_interpolation.TestAffineTransformTextureMemory object at 0x7fd708440f10> ...de': 'nearest', 'order': 1, 'output': <class 'numpy.float32'>, 'output_shape': 10, 'shape': (10, 20, 30), 'theta': 90}>
xp = <module 'cupy' from '/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.Np3X0NVCM9/cupy/cupy/__init__.py'>
scp = <module 'cupyx.scipy' from '/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.Np3X0NVCM9/cupy/cupyx/scipy/__init__.py'>

    @testing.numpy_cupy_allclose(atol=0.1, scipy_name='scp')
    def test_affine_transform_texture_memory(self, xp, scp):
        a = xp.ones(self.shape, dtype=xp.float32)
        center = numpy.divide(numpy.subtract(self.shape, 1), 2)
    
        if len(self.shape) == 2:
            matrix = self._2d_rotation_matrix(self.theta, center)
        elif len(self.shape) == 3:
            matrix = self._3d_rotation_matrix(self.theta, center)
        else:
            return pytest.xfail('Unsupported shape')
    
        if self.output == 'empty':
            output = xp.empty(self.shape, dtype=xp.float32)
            if self.output_shape:
                return pytest.skip('This combination is tested in '
                                   'test_invalid_texture_arguments')
        else:
            output = self.output
    
        if self.output_shape:
            output_shape = (self.output_shape, ) * len(self.shape)
        else:
            output_shape = self.output_shape
    
        if xp == cupy:
            m = cupyx.scipy.ndimage.affine_transform
            matrix = cupy.array(matrix)
>           return m(a, matrix, output_shape=output_shape,
                     output=output, order=self.order,
                     mode=self.mode, texture_memory=True)

tests/cupyx_tests/scipy_tests/ndimage_tests/test_interpolation.py:398: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
cupyx/scipy/ndimage/interpolation.py:376: in affine_transform
    return _texture.affine_transformation(data=input,
cupyx/_texture.py:168: in affine_transformation
    texture_object = _create_texture_object(data,
cupyx/_texture.py:98: in _create_texture_object
    array = texture.CUDAarray(texture_fmt, *data.shape[::-1])
cupy/cuda/texture.pyx:296: in cupy.cuda.texture.CUDAarray.__init__
    self.ptr = runtime.malloc3DArray(desc.ptr, width, height, depth,
cupy_backends/cuda/api/runtime.pyx:593: in cupy_backends.cuda.api.runtime.malloc3DArray
    check_status(status)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

>   raise CUDARuntimeError(status)
E   AssertionError: Only cupy raises error
E   
E   Traceback (most recent call last):
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.Np3X0NVCM9/cupy/cupy/testing/_helper.py", line 47, in _call_func
E       result = impl(self, *args, **kw)
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.Np3X0NVCM9/cupy/tests/cupyx_tests/scipy_tests/ndimage_tests/test_interpolation.py", line 398, in test_affine_transform_texture_memory
E       return m(a, matrix, output_shape=output_shape,
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.Np3X0NVCM9/cupy/cupyx/scipy/ndimage/interpolation.py", line 376, in affine_transform
E       return _texture.affine_transformation(data=input,
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.Np3X0NVCM9/cupy/cupyx/_texture.py", line 168, in affine_transformation
E       texture_object = _create_texture_object(data,
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.Np3X0NVCM9/cupy/cupyx/_texture.py", line 98, in _create_texture_object
E       array = texture.CUDAarray(texture_fmt, *data.shape[::-1])
E     File "cupy/cuda/texture.pyx", line 296, in cupy.cuda.texture.CUDAarray.__init__
E       self.ptr = runtime.malloc3DArray(desc.ptr, width, height, depth,
E     File "cupy_backends/cuda/api/runtime.pyx", line 593, in cupy_backends.cuda.api.runtime.malloc3DArray
E       check_status(status)
E     File "cupy_backends/cuda/api/runtime.pyx", line 265, in cupy_backends.cuda.api.runtime.check_status
E       raise CUDARuntimeError(status)
E   cupy_backends.cuda.api.runtime.CUDARuntimeError: hipErrorUnknown: hipErrorUnknown

cupy_backends/cuda/api/runtime.pyx:265: AssertionError
----------------------------- Captured stderr call -----------------------------
Traceback (most recent call last):
  File "cupy_backends/cuda/api/runtime.pyx", line 644, in cupy_backends.cuda.api.runtime.freeArray
    check_status(status)
  File "cupy_backends/cuda/api/runtime.pyx", line 265, in cupy_backends.cuda.api.runtime.check_status
    raise CUDARuntimeError(status)
cupy_backends.cuda.api.runtime.CUDARuntimeError: hipErrorUnknown: hipErrorUnknown
_ TestAffineTransformTextureMemory.test_affine_transform_texture_memory[_param_350_{mode='nearest', order=1, output=float32, output_shape=10, shape=(10, 20, 30), theta=180}] _

self = <<cupyx_tests.scipy_tests.ndimage_tests.test_interpolation.TestAffineTransformTextureMemory object at 0x7fd706f23070> ...e': 'nearest', 'order': 1, 'output': <class 'numpy.float32'>, 'output_shape': 10, 'shape': (10, 20, 30), 'theta': 180}>
xp = <module 'cupy' from '/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.Np3X0NVCM9/cupy/cupy/__init__.py'>
scp = <module 'cupyx.scipy' from '/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.Np3X0NVCM9/cupy/cupyx/scipy/__init__.py'>

    @testing.numpy_cupy_allclose(atol=0.1, scipy_name='scp')
    def test_affine_transform_texture_memory(self, xp, scp):
        a = xp.ones(self.shape, dtype=xp.float32)
        center = numpy.divide(numpy.subtract(self.shape, 1), 2)
    
        if len(self.shape) == 2:
            matrix = self._2d_rotation_matrix(self.theta, center)
        elif len(self.shape) == 3:
            matrix = self._3d_rotation_matrix(self.theta, center)
        else:
            return pytest.xfail('Unsupported shape')
    
        if self.output == 'empty':
            output = xp.empty(self.shape, dtype=xp.float32)
            if self.output_shape:
                return pytest.skip('This combination is tested in '
                                   'test_invalid_texture_arguments')
        else:
            output = self.output
    
        if self.output_shape:
            output_shape = (self.output_shape, ) * len(self.shape)
        else:
            output_shape = self.output_shape
    
        if xp == cupy:
            m = cupyx.scipy.ndimage.affine_transform
            matrix = cupy.array(matrix)
>           return m(a, matrix, output_shape=output_shape,
                     output=output, order=self.order,
                     mode=self.mode, texture_memory=True)

tests/cupyx_tests/scipy_tests/ndimage_tests/test_interpolation.py:398: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
cupyx/scipy/ndimage/interpolation.py:376: in affine_transform
    return _texture.affine_transformation(data=input,
cupyx/_texture.py:168: in affine_transformation
    texture_object = _create_texture_object(data,
cupyx/_texture.py:98: in _create_texture_object
    array = texture.CUDAarray(texture_fmt, *data.shape[::-1])
cupy/cuda/texture.pyx:296: in cupy.cuda.texture.CUDAarray.__init__
    self.ptr = runtime.malloc3DArray(desc.ptr, width, height, depth,
cupy_backends/cuda/api/runtime.pyx:593: in cupy_backends.cuda.api.runtime.malloc3DArray
    check_status(status)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

>   raise CUDARuntimeError(status)
E   AssertionError: Only cupy raises error
E   
E   Traceback (most recent call last):
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.Np3X0NVCM9/cupy/cupy/testing/_helper.py", line 47, in _call_func
E       result = impl(self, *args, **kw)
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.Np3X0NVCM9/cupy/tests/cupyx_tests/scipy_tests/ndimage_tests/test_interpolation.py", line 398, in test_affine_transform_texture_memory
E       return m(a, matrix, output_shape=output_shape,
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.Np3X0NVCM9/cupy/cupyx/scipy/ndimage/interpolation.py", line 376, in affine_transform
E       return _texture.affine_transformation(data=input,
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.Np3X0NVCM9/cupy/cupyx/_texture.py", line 168, in affine_transformation
E       texture_object = _create_texture_object(data,
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.Np3X0NVCM9/cupy/cupyx/_texture.py", line 98, in _create_texture_object
E       array = texture.CUDAarray(texture_fmt, *data.shape[::-1])
E     File "cupy/cuda/texture.pyx", line 296, in cupy.cuda.texture.CUDAarray.__init__
E       self.ptr = runtime.malloc3DArray(desc.ptr, width, height, depth,
E     File "cupy_backends/cuda/api/runtime.pyx", line 593, in cupy_backends.cuda.api.runtime.malloc3DArray
E       check_status(status)
E     File "cupy_backends/cuda/api/runtime.pyx", line 265, in cupy_backends.cuda.api.runtime.check_status
E       raise CUDARuntimeError(status)
E   cupy_backends.cuda.api.runtime.CUDARuntimeError: hipErrorUnknown: hipErrorUnknown

cupy_backends/cuda/api/runtime.pyx:265: AssertionError
----------------------------- Captured stderr call -----------------------------
Traceback (most recent call last):
  File "cupy_backends/cuda/api/runtime.pyx", line 644, in cupy_backends.cuda.api.runtime.freeArray
    check_status(status)
  File "cupy_backends/cuda/api/runtime.pyx", line 265, in cupy_backends.cuda.api.runtime.check_status
    raise CUDARuntimeError(status)
cupy_backends.cuda.api.runtime.CUDARuntimeError: hipErrorUnknown: hipErrorUnknown
_ TestAffineTransformTextureMemory.test_affine_transform_texture_memory[_param_351_{mode='nearest', order=1, output=float32, output_shape=10, shape=(10, 20, 30), theta=270}] _

self = <<cupyx_tests.scipy_tests.ndimage_tests.test_interpolation.TestAffineTransformTextureMemory object at 0x7fd705741bb0> ...e': 'nearest', 'order': 1, 'output': <class 'numpy.float32'>, 'output_shape': 10, 'shape': (10, 20, 30), 'theta': 270}>
xp = <module 'cupy' from '/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.Np3X0NVCM9/cupy/cupy/__init__.py'>
scp = <module 'cupyx.scipy' from '/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.Np3X0NVCM9/cupy/cupyx/scipy/__init__.py'>

    @testing.numpy_cupy_allclose(atol=0.1, scipy_name='scp')
    def test_affine_transform_texture_memory(self, xp, scp):
        a = xp.ones(self.shape, dtype=xp.float32)
        center = numpy.divide(numpy.subtract(self.shape, 1), 2)
    
        if len(self.shape) == 2:
            matrix = self._2d_rotation_matrix(self.theta, center)
        elif len(self.shape) == 3:
            matrix = self._3d_rotation_matrix(self.theta, center)
        else:
            return pytest.xfail('Unsupported shape')
    
        if self.output == 'empty':
            output = xp.empty(self.shape, dtype=xp.float32)
            if self.output_shape:
                return pytest.skip('This combination is tested in '
                                   'test_invalid_texture_arguments')
        else:
            output = self.output
    
        if self.output_shape:
            output_shape = (self.output_shape, ) * len(self.shape)
        else:
            output_shape = self.output_shape
    
        if xp == cupy:
            m = cupyx.scipy.ndimage.affine_transform
            matrix = cupy.array(matrix)
>           return m(a, matrix, output_shape=output_shape,
                     output=output, order=self.order,
                     mode=self.mode, texture_memory=True)

tests/cupyx_tests/scipy_tests/ndimage_tests/test_interpolation.py:398: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
cupyx/scipy/ndimage/interpolation.py:376: in affine_transform
    return _texture.affine_transformation(data=input,
cupyx/_texture.py:168: in affine_transformation
    texture_object = _create_texture_object(data,
cupyx/_texture.py:98: in _create_texture_object
    array = texture.CUDAarray(texture_fmt, *data.shape[::-1])
cupy/cuda/texture.pyx:296: in cupy.cuda.texture.CUDAarray.__init__
    self.ptr = runtime.malloc3DArray(desc.ptr, width, height, depth,
cupy_backends/cuda/api/runtime.pyx:593: in cupy_backends.cuda.api.runtime.malloc3DArray
    check_status(status)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

>   raise CUDARuntimeError(status)
E   AssertionError: Only cupy raises error
E   
E   Traceback (most recent call last):
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.Np3X0NVCM9/cupy/cupy/testing/_helper.py", line 47, in _call_func
E       result = impl(self, *args, **kw)
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.Np3X0NVCM9/cupy/tests/cupyx_tests/scipy_tests/ndimage_tests/test_interpolation.py", line 398, in test_affine_transform_texture_memory
E       return m(a, matrix, output_shape=output_shape,
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.Np3X0NVCM9/cupy/cupyx/scipy/ndimage/interpolation.py", line 376, in affine_transform
E       return _texture.affine_transformation(data=input,
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.Np3X0NVCM9/cupy/cupyx/_texture.py", line 168, in affine_transformation
E       texture_object = _create_texture_object(data,
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.Np3X0NVCM9/cupy/cupyx/_texture.py", line 98, in _create_texture_object
E       array = texture.CUDAarray(texture_fmt, *data.shape[::-1])
E     File "cupy/cuda/texture.pyx", line 296, in cupy.cuda.texture.CUDAarray.__init__
E       self.ptr = runtime.malloc3DArray(desc.ptr, width, height, depth,
E     File "cupy_backends/cuda/api/runtime.pyx", line 593, in cupy_backends.cuda.api.runtime.malloc3DArray
E       check_status(status)
E     File "cupy_backends/cuda/api/runtime.pyx", line 265, in cupy_backends.cuda.api.runtime.check_status
E       raise CUDARuntimeError(status)
E   cupy_backends.cuda.api.runtime.CUDARuntimeError: hipErrorUnknown: hipErrorUnknown

cupy_backends/cuda/api/runtime.pyx:265: AssertionError
----------------------------- Captured stderr call -----------------------------
Traceback (most recent call last):
  File "cupy_backends/cuda/api/runtime.pyx", line 644, in cupy_backends.cuda.api.runtime.freeArray
    check_status(status)
  File "cupy_backends/cuda/api/runtime.pyx", line 265, in cupy_backends.cuda.api.runtime.check_status
    raise CUDARuntimeError(status)
cupy_backends.cuda.api.runtime.CUDARuntimeError: hipErrorUnknown: hipErrorUnknown
_ TestAffineTransformTextureMemory.test_affine_transform_texture_memory[_param_352_{mode='nearest', order=1, output='empty', output_shape=None, shape=(100, 100), theta=0}] _

self = <<cupyx_tests.scipy_tests.ndimage_tests.test_interpolation.TestAffineTransformTextureMemory object at 0x7fd7054d0cd0>  parameter: {'mode': 'nearest', 'order': 1, 'output': 'empty', 'output_shape': None, 'shape': (100, 100), 'theta': 0}>
xp = <module 'cupy' from '/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.Np3X0NVCM9/cupy/cupy/__init__.py'>
scp = <module 'cupyx.scipy' from '/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.Np3X0NVCM9/cupy/cupyx/scipy/__init__.py'>

    @testing.numpy_cupy_allclose(atol=0.1, scipy_name='scp')
    def test_affine_transform_texture_memory(self, xp, scp):
        a = xp.ones(self.shape, dtype=xp.float32)
        center = numpy.divide(numpy.subtract(self.shape, 1), 2)
    
        if len(self.shape) == 2:
            matrix = self._2d_rotation_matrix(self.theta, center)
        elif len(self.shape) == 3:
            matrix = self._3d_rotation_matrix(self.theta, center)
        else:
            return pytest.xfail('Unsupported shape')
    
        if self.output == 'empty':
            output = xp.empty(self.shape, dtype=xp.float32)
            if self.output_shape:
                return pytest.skip('This combination is tested in '
                                   'test_invalid_texture_arguments')
        else:
            output = self.output
    
        if self.output_shape:
            output_shape = (self.output_shape, ) * len(self.shape)
        else:
            output_shape = self.output_shape
    
        if xp == cupy:
            m = cupyx.scipy.ndimage.affine_transform
            matrix = cupy.array(matrix)
>           return m(a, matrix, output_shape=output_shape,
                     output=output, order=self.order,
                     mode=self.mode, texture_memory=True)

tests/cupyx_tests/scipy_tests/ndimage_tests/test_interpolation.py:398: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
cupyx/scipy/ndimage/interpolation.py:376: in affine_transform
    return _texture.affine_transformation(data=input,
cupyx/_texture.py:168: in affine_transformation
    texture_object = _create_texture_object(data,
cupyx/_texture.py:98: in _create_texture_object
    array = texture.CUDAarray(texture_fmt, *data.shape[::-1])
cupy/cuda/texture.pyx:296: in cupy.cuda.texture.CUDAarray.__init__
    self.ptr = runtime.malloc3DArray(desc.ptr, width, height, depth,
cupy_backends/cuda/api/runtime.pyx:593: in cupy_backends.cuda.api.runtime.malloc3DArray
    check_status(status)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

>   raise CUDARuntimeError(status)
E   AssertionError: Only cupy raises error
E   
E   Traceback (most recent call last):
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.Np3X0NVCM9/cupy/cupy/testing/_helper.py", line 47, in _call_func
E       result = impl(self, *args, **kw)
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.Np3X0NVCM9/cupy/tests/cupyx_tests/scipy_tests/ndimage_tests/test_interpolation.py", line 398, in test_affine_transform_texture_memory
E       return m(a, matrix, output_shape=output_shape,
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.Np3X0NVCM9/cupy/cupyx/scipy/ndimage/interpolation.py", line 376, in affine_transform
E       return _texture.affine_transformation(data=input,
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.Np3X0NVCM9/cupy/cupyx/_texture.py", line 168, in affine_transformation
E       texture_object = _create_texture_object(data,
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.Np3X0NVCM9/cupy/cupyx/_texture.py", line 98, in _create_texture_object
E       array = texture.CUDAarray(texture_fmt, *data.shape[::-1])
E     File "cupy/cuda/texture.pyx", line 296, in cupy.cuda.texture.CUDAarray.__init__
E       self.ptr = runtime.malloc3DArray(desc.ptr, width, height, depth,
E     File "cupy_backends/cuda/api/runtime.pyx", line 593, in cupy_backends.cuda.api.runtime.malloc3DArray
E       check_status(status)
E     File "cupy_backends/cuda/api/runtime.pyx", line 265, in cupy_backends.cuda.api.runtime.check_status
E       raise CUDARuntimeError(status)
E   cupy_backends.cuda.api.runtime.CUDARuntimeError: hipErrorUnknown: hipErrorUnknown

cupy_backends/cuda/api/runtime.pyx:265: AssertionError
----------------------------- Captured stderr call -----------------------------
Traceback (most recent call last):
  File "cupy_backends/cuda/api/runtime.pyx", line 644, in cupy_backends.cuda.api.runtime.freeArray
    check_status(status)
  File "cupy_backends/cuda/api/runtime.pyx", line 265, in cupy_backends.cuda.api.runtime.check_status
    raise CUDARuntimeError(status)
cupy_backends.cuda.api.runtime.CUDARuntimeError: hipErrorUnknown: hipErrorUnknown
_ TestAffineTransformTextureMemory.test_affine_transform_texture_memory[_param_353_{mode='nearest', order=1, output='empty', output_shape=None, shape=(100, 100), theta=90}] _

self = <<cupyx_tests.scipy_tests.ndimage_tests.test_interpolation.TestAffineTransformTextureMemory object at 0x7fd705e356d0>  parameter: {'mode': 'nearest', 'order': 1, 'output': 'empty', 'output_shape': None, 'shape': (100, 100), 'theta': 90}>
xp = <module 'cupy' from '/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.Np3X0NVCM9/cupy/cupy/__init__.py'>
scp = <module 'cupyx.scipy' from '/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.Np3X0NVCM9/cupy/cupyx/scipy/__init__.py'>

    @testing.numpy_cupy_allclose(atol=0.1, scipy_name='scp')
    def test_affine_transform_texture_memory(self, xp, scp):
        a = xp.ones(self.shape, dtype=xp.float32)
        center = numpy.divide(numpy.subtract(self.shape, 1), 2)
    
        if len(self.shape) == 2:
            matrix = self._2d_rotation_matrix(self.theta, center)
        elif len(self.shape) == 3:
            matrix = self._3d_rotation_matrix(self.theta, center)
        else:
            return pytest.xfail('Unsupported shape')
    
        if self.output == 'empty':
            output = xp.empty(self.shape, dtype=xp.float32)
            if self.output_shape:
                return pytest.skip('This combination is tested in '
                                   'test_invalid_texture_arguments')
        else:
            output = self.output
    
        if self.output_shape:
            output_shape = (self.output_shape, ) * len(self.shape)
        else:
            output_shape = self.output_shape
    
        if xp == cupy:
            m = cupyx.scipy.ndimage.affine_transform
            matrix = cupy.array(matrix)
>           return m(a, matrix, output_shape=output_shape,
                     output=output, order=self.order,
                     mode=self.mode, texture_memory=True)

tests/cupyx_tests/scipy_tests/ndimage_tests/test_interpolation.py:398: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
cupyx/scipy/ndimage/interpolation.py:376: in affine_transform
    return _texture.affine_transformation(data=input,
cupyx/_texture.py:168: in affine_transformation
    texture_object = _create_texture_object(data,
cupyx/_texture.py:98: in _create_texture_object
    array = texture.CUDAarray(texture_fmt, *data.shape[::-1])
cupy/cuda/texture.pyx:296: in cupy.cuda.texture.CUDAarray.__init__
    self.ptr = runtime.malloc3DArray(desc.ptr, width, height, depth,
cupy_backends/cuda/api/runtime.pyx:593: in cupy_backends.cuda.api.runtime.malloc3DArray
    check_status(status)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

>   raise CUDARuntimeError(status)
E   AssertionError: Only cupy raises error
E   
E   Traceback (most recent call last):
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.Np3X0NVCM9/cupy/cupy/testing/_helper.py", line 47, in _call_func
E       result = impl(self, *args, **kw)
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.Np3X0NVCM9/cupy/tests/cupyx_tests/scipy_tests/ndimage_tests/test_interpolation.py", line 398, in test_affine_transform_texture_memory
E       return m(a, matrix, output_shape=output_shape,
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.Np3X0NVCM9/cupy/cupyx/scipy/ndimage/interpolation.py", line 376, in affine_transform
E       return _texture.affine_transformation(data=input,
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.Np3X0NVCM9/cupy/cupyx/_texture.py", line 168, in affine_transformation
E       texture_object = _create_texture_object(data,
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.Np3X0NVCM9/cupy/cupyx/_texture.py", line 98, in _create_texture_object
E       array = texture.CUDAarray(texture_fmt, *data.shape[::-1])
E     File "cupy/cuda/texture.pyx", line 296, in cupy.cuda.texture.CUDAarray.__init__
E       self.ptr = runtime.malloc3DArray(desc.ptr, width, height, depth,
E     File "cupy_backends/cuda/api/runtime.pyx", line 593, in cupy_backends.cuda.api.runtime.malloc3DArray
E       check_status(status)
E     File "cupy_backends/cuda/api/runtime.pyx", line 265, in cupy_backends.cuda.api.runtime.check_status
E       raise CUDARuntimeError(status)
E   cupy_backends.cuda.api.runtime.CUDARuntimeError: hipErrorUnknown: hipErrorUnknown

cupy_backends/cuda/api/runtime.pyx:265: AssertionError
----------------------------- Captured stderr call -----------------------------
Traceback (most recent call last):
  File "cupy_backends/cuda/api/runtime.pyx", line 644, in cupy_backends.cuda.api.runtime.freeArray
    check_status(status)
  File "cupy_backends/cuda/api/runtime.pyx", line 265, in cupy_backends.cuda.api.runtime.check_status
    raise CUDARuntimeError(status)
cupy_backends.cuda.api.runtime.CUDARuntimeError: hipErrorUnknown: hipErrorUnknown
_ TestAffineTransformTextureMemory.test_affine_transform_texture_memory[_param_354_{mode='nearest', order=1, output='empty', output_shape=None, shape=(100, 100), theta=180}] _

self = <<cupyx_tests.scipy_tests.ndimage_tests.test_interpolation.TestAffineTransformTextureMemory object at 0x7fd705abfc10>  parameter: {'mode': 'nearest', 'order': 1, 'output': 'empty', 'output_shape': None, 'shape': (100, 100), 'theta': 180}>
xp = <module 'cupy' from '/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.Np3X0NVCM9/cupy/cupy/__init__.py'>
scp = <module 'cupyx.scipy' from '/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.Np3X0NVCM9/cupy/cupyx/scipy/__init__.py'>

    @testing.numpy_cupy_allclose(atol=0.1, scipy_name='scp')
    def test_affine_transform_texture_memory(self, xp, scp):
        a = xp.ones(self.shape, dtype=xp.float32)
        center = numpy.divide(numpy.subtract(self.shape, 1), 2)
    
        if len(self.shape) == 2:
            matrix = self._2d_rotation_matrix(self.theta, center)
        elif len(self.shape) == 3:
            matrix = self._3d_rotation_matrix(self.theta, center)
        else:
            return pytest.xfail('Unsupported shape')
    
        if self.output == 'empty':
            output = xp.empty(self.shape, dtype=xp.float32)
            if self.output_shape:
                return pytest.skip('This combination is tested in '
                                   'test_invalid_texture_arguments')
        else:
            output = self.output
    
        if self.output_shape:
            output_shape = (self.output_shape, ) * len(self.shape)
        else:
            output_shape = self.output_shape
    
        if xp == cupy:
            m = cupyx.scipy.ndimage.affine_transform
            matrix = cupy.array(matrix)
>           return m(a, matrix, output_shape=output_shape,
                     output=output, order=self.order,
                     mode=self.mode, texture_memory=True)

tests/cupyx_tests/scipy_tests/ndimage_tests/test_interpolation.py:398: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
cupyx/scipy/ndimage/interpolation.py:376: in affine_transform
    return _texture.affine_transformation(data=input,
cupyx/_texture.py:168: in affine_transformation
    texture_object = _create_texture_object(data,
cupyx/_texture.py:98: in _create_texture_object
    array = texture.CUDAarray(texture_fmt, *data.shape[::-1])
cupy/cuda/texture.pyx:296: in cupy.cuda.texture.CUDAarray.__init__
    self.ptr = runtime.malloc3DArray(desc.ptr, width, height, depth,
cupy_backends/cuda/api/runtime.pyx:593: in cupy_backends.cuda.api.runtime.malloc3DArray
    check_status(status)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

>   raise CUDARuntimeError(status)
E   AssertionError: Only cupy raises error
E   
E   Traceback (most recent call last):
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.Np3X0NVCM9/cupy/cupy/testing/_helper.py", line 47, in _call_func
E       result = impl(self, *args, **kw)
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.Np3X0NVCM9/cupy/tests/cupyx_tests/scipy_tests/ndimage_tests/test_interpolation.py", line 398, in test_affine_transform_texture_memory
E       return m(a, matrix, output_shape=output_shape,
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.Np3X0NVCM9/cupy/cupyx/scipy/ndimage/interpolation.py", line 376, in affine_transform
E       return _texture.affine_transformation(data=input,
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.Np3X0NVCM9/cupy/cupyx/_texture.py", line 168, in affine_transformation
E       texture_object = _create_texture_object(data,
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.Np3X0NVCM9/cupy/cupyx/_texture.py", line 98, in _create_texture_object
E       array = texture.CUDAarray(texture_fmt, *data.shape[::-1])
E     File "cupy/cuda/texture.pyx", line 296, in cupy.cuda.texture.CUDAarray.__init__
E       self.ptr = runtime.malloc3DArray(desc.ptr, width, height, depth,
E     File "cupy_backends/cuda/api/runtime.pyx", line 593, in cupy_backends.cuda.api.runtime.malloc3DArray
E       check_status(status)
E     File "cupy_backends/cuda/api/runtime.pyx", line 265, in cupy_backends.cuda.api.runtime.check_status
E       raise CUDARuntimeError(status)
E   cupy_backends.cuda.api.runtime.CUDARuntimeError: hipErrorUnknown: hipErrorUnknown

cupy_backends/cuda/api/runtime.pyx:265: AssertionError
----------------------------- Captured stderr call -----------------------------
Traceback (most recent call last):
  File "cupy_backends/cuda/api/runtime.pyx", line 644, in cupy_backends.cuda.api.runtime.freeArray
    check_status(status)
  File "cupy_backends/cuda/api/runtime.pyx", line 265, in cupy_backends.cuda.api.runtime.check_status
    raise CUDARuntimeError(status)
cupy_backends.cuda.api.runtime.CUDARuntimeError: hipErrorUnknown: hipErrorUnknown
_ TestAffineTransformTextureMemory.test_affine_transform_texture_memory[_param_355_{mode='nearest', order=1, output='empty', output_shape=None, shape=(100, 100), theta=270}] _

self = <<cupyx_tests.scipy_tests.ndimage_tests.test_interpolation.TestAffineTransformTextureMemory object at 0x7fd7059e4c70>  parameter: {'mode': 'nearest', 'order': 1, 'output': 'empty', 'output_shape': None, 'shape': (100, 100), 'theta': 270}>
xp = <module 'cupy' from '/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.Np3X0NVCM9/cupy/cupy/__init__.py'>
scp = <module 'cupyx.scipy' from '/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.Np3X0NVCM9/cupy/cupyx/scipy/__init__.py'>

    @testing.numpy_cupy_allclose(atol=0.1, scipy_name='scp')
    def test_affine_transform_texture_memory(self, xp, scp):
        a = xp.ones(self.shape, dtype=xp.float32)
        center = numpy.divide(numpy.subtract(self.shape, 1), 2)
    
        if len(self.shape) == 2:
            matrix = self._2d_rotation_matrix(self.theta, center)
        elif len(self.shape) == 3:
            matrix = self._3d_rotation_matrix(self.theta, center)
        else:
            return pytest.xfail('Unsupported shape')
    
        if self.output == 'empty':
            output = xp.empty(self.shape, dtype=xp.float32)
            if self.output_shape:
                return pytest.skip('This combination is tested in '
                                   'test_invalid_texture_arguments')
        else:
            output = self.output
    
        if self.output_shape:
            output_shape = (self.output_shape, ) * len(self.shape)
        else:
            output_shape = self.output_shape
    
        if xp == cupy:
            m = cupyx.scipy.ndimage.affine_transform
            matrix = cupy.array(matrix)
>           return m(a, matrix, output_shape=output_shape,
                     output=output, order=self.order,
                     mode=self.mode, texture_memory=True)

tests/cupyx_tests/scipy_tests/ndimage_tests/test_interpolation.py:398: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
cupyx/scipy/ndimage/interpolation.py:376: in affine_transform
    return _texture.affine_transformation(data=input,
cupyx/_texture.py:168: in affine_transformation
    texture_object = _create_texture_object(data,
cupyx/_texture.py:98: in _create_texture_object
    array = texture.CUDAarray(texture_fmt, *data.shape[::-1])
cupy/cuda/texture.pyx:296: in cupy.cuda.texture.CUDAarray.__init__
    self.ptr = runtime.malloc3DArray(desc.ptr, width, height, depth,
cupy_backends/cuda/api/runtime.pyx:593: in cupy_backends.cuda.api.runtime.malloc3DArray
    check_status(status)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

>   raise CUDARuntimeError(status)
E   AssertionError: Only cupy raises error
E   
E   Traceback (most recent call last):
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.Np3X0NVCM9/cupy/cupy/testing/_helper.py", line 47, in _call_func
E       result = impl(self, *args, **kw)
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.Np3X0NVCM9/cupy/tests/cupyx_tests/scipy_tests/ndimage_tests/test_interpolation.py", line 398, in test_affine_transform_texture_memory
E       return m(a, matrix, output_shape=output_shape,
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.Np3X0NVCM9/cupy/cupyx/scipy/ndimage/interpolation.py", line 376, in affine_transform
E       return _texture.affine_transformation(data=input,
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.Np3X0NVCM9/cupy/cupyx/_texture.py", line 168, in affine_transformation
E       texture_object = _create_texture_object(data,
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.Np3X0NVCM9/cupy/cupyx/_texture.py", line 98, in _create_texture_object
E       array = texture.CUDAarray(texture_fmt, *data.shape[::-1])
E     File "cupy/cuda/texture.pyx", line 296, in cupy.cuda.texture.CUDAarray.__init__
E       self.ptr = runtime.malloc3DArray(desc.ptr, width, height, depth,
E     File "cupy_backends/cuda/api/runtime.pyx", line 593, in cupy_backends.cuda.api.runtime.malloc3DArray
E       check_status(status)
E     File "cupy_backends/cuda/api/runtime.pyx", line 265, in cupy_backends.cuda.api.runtime.check_status
E       raise CUDARuntimeError(status)
E   cupy_backends.cuda.api.runtime.CUDARuntimeError: hipErrorUnknown: hipErrorUnknown

cupy_backends/cuda/api/runtime.pyx:265: AssertionError
----------------------------- Captured stderr call -----------------------------
Traceback (most recent call last):
  File "cupy_backends/cuda/api/runtime.pyx", line 644, in cupy_backends.cuda.api.runtime.freeArray
    check_status(status)
  File "cupy_backends/cuda/api/runtime.pyx", line 265, in cupy_backends.cuda.api.runtime.check_status
    raise CUDARuntimeError(status)
cupy_backends.cuda.api.runtime.CUDARuntimeError: hipErrorUnknown: hipErrorUnknown
_ TestAffineTransformTextureMemory.test_affine_transform_texture_memory[_param_356_{mode='nearest', order=1, output='empty', output_shape=None, shape=(10, 20), theta=0}] _

self = <<cupyx_tests.scipy_tests.ndimage_tests.test_interpolation.TestAffineTransformTextureMemory object at 0x7fd705a8da90>  parameter: {'mode': 'nearest', 'order': 1, 'output': 'empty', 'output_shape': None, 'shape': (10, 20), 'theta': 0}>
xp = <module 'cupy' from '/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.Np3X0NVCM9/cupy/cupy/__init__.py'>
scp = <module 'cupyx.scipy' from '/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.Np3X0NVCM9/cupy/cupyx/scipy/__init__.py'>

    @testing.numpy_cupy_allclose(atol=0.1, scipy_name='scp')
    def test_affine_transform_texture_memory(self, xp, scp):
        a = xp.ones(self.shape, dtype=xp.float32)
        center = numpy.divide(numpy.subtract(self.shape, 1), 2)
    
        if len(self.shape) == 2:
            matrix = self._2d_rotation_matrix(self.theta, center)
        elif len(self.shape) == 3:
            matrix = self._3d_rotation_matrix(self.theta, center)
        else:
            return pytest.xfail('Unsupported shape')
    
        if self.output == 'empty':
            output = xp.empty(self.shape, dtype=xp.float32)
            if self.output_shape:
                return pytest.skip('This combination is tested in '
                                   'test_invalid_texture_arguments')
        else:
            output = self.output
    
        if self.output_shape:
            output_shape = (self.output_shape, ) * len(self.shape)
        else:
            output_shape = self.output_shape
    
        if xp == cupy:
            m = cupyx.scipy.ndimage.affine_transform
            matrix = cupy.array(matrix)
>           return m(a, matrix, output_shape=output_shape,
                     output=output, order=self.order,
                     mode=self.mode, texture_memory=True)

tests/cupyx_tests/scipy_tests/ndimage_tests/test_interpolation.py:398: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
cupyx/scipy/ndimage/interpolation.py:376: in affine_transform
    return _texture.affine_transformation(data=input,
cupyx/_texture.py:168: in affine_transformation
    texture_object = _create_texture_object(data,
cupyx/_texture.py:98: in _create_texture_object
    array = texture.CUDAarray(texture_fmt, *data.shape[::-1])
cupy/cuda/texture.pyx:296: in cupy.cuda.texture.CUDAarray.__init__
    self.ptr = runtime.malloc3DArray(desc.ptr, width, height, depth,
cupy_backends/cuda/api/runtime.pyx:593: in cupy_backends.cuda.api.runtime.malloc3DArray
    check_status(status)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

>   raise CUDARuntimeError(status)
E   AssertionError: Only cupy raises error
E   
E   Traceback (most recent call last):
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.Np3X0NVCM9/cupy/cupy/testing/_helper.py", line 47, in _call_func
E       result = impl(self, *args, **kw)
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.Np3X0NVCM9/cupy/tests/cupyx_tests/scipy_tests/ndimage_tests/test_interpolation.py", line 398, in test_affine_transform_texture_memory
E       return m(a, matrix, output_shape=output_shape,
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.Np3X0NVCM9/cupy/cupyx/scipy/ndimage/interpolation.py", line 376, in affine_transform
E       return _texture.affine_transformation(data=input,
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.Np3X0NVCM9/cupy/cupyx/_texture.py", line 168, in affine_transformation
E       texture_object = _create_texture_object(data,
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.Np3X0NVCM9/cupy/cupyx/_texture.py", line 98, in _create_texture_object
E       array = texture.CUDAarray(texture_fmt, *data.shape[::-1])
E     File "cupy/cuda/texture.pyx", line 296, in cupy.cuda.texture.CUDAarray.__init__
E       self.ptr = runtime.malloc3DArray(desc.ptr, width, height, depth,
E     File "cupy_backends/cuda/api/runtime.pyx", line 593, in cupy_backends.cuda.api.runtime.malloc3DArray
E       check_status(status)
E     File "cupy_backends/cuda/api/runtime.pyx", line 265, in cupy_backends.cuda.api.runtime.check_status
E       raise CUDARuntimeError(status)
E   cupy_backends.cuda.api.runtime.CUDARuntimeError: hipErrorUnknown: hipErrorUnknown

cupy_backends/cuda/api/runtime.pyx:265: AssertionError
----------------------------- Captured stderr call -----------------------------
Traceback (most recent call last):
  File "cupy_backends/cuda/api/runtime.pyx", line 644, in cupy_backends.cuda.api.runtime.freeArray
    check_status(status)
  File "cupy_backends/cuda/api/runtime.pyx", line 265, in cupy_backends.cuda.api.runtime.check_status
    raise CUDARuntimeError(status)
cupy_backends.cuda.api.runtime.CUDARuntimeError: hipErrorUnknown: hipErrorUnknown
_ TestAffineTransformTextureMemory.test_affine_transform_texture_memory[_param_357_{mode='nearest', order=1, output='empty', output_shape=None, shape=(10, 20), theta=90}] _

self = <<cupyx_tests.scipy_tests.ndimage_tests.test_interpolation.TestAffineTransformTextureMemory object at 0x7fd705845c70>  parameter: {'mode': 'nearest', 'order': 1, 'output': 'empty', 'output_shape': None, 'shape': (10, 20), 'theta': 90}>
xp = <module 'cupy' from '/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.Np3X0NVCM9/cupy/cupy/__init__.py'>
scp = <module 'cupyx.scipy' from '/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.Np3X0NVCM9/cupy/cupyx/scipy/__init__.py'>

    @testing.numpy_cupy_allclose(atol=0.1, scipy_name='scp')
    def test_affine_transform_texture_memory(self, xp, scp):
        a = xp.ones(self.shape, dtype=xp.float32)
        center = numpy.divide(numpy.subtract(self.shape, 1), 2)
    
        if len(self.shape) == 2:
            matrix = self._2d_rotation_matrix(self.theta, center)
        elif len(self.shape) == 3:
            matrix = self._3d_rotation_matrix(self.theta, center)
        else:
            return pytest.xfail('Unsupported shape')
    
        if self.output == 'empty':
            output = xp.empty(self.shape, dtype=xp.float32)
            if self.output_shape:
                return pytest.skip('This combination is tested in '
                                   'test_invalid_texture_arguments')
        else:
            output = self.output
    
        if self.output_shape:
            output_shape = (self.output_shape, ) * len(self.shape)
        else:
            output_shape = self.output_shape
    
        if xp == cupy:
            m = cupyx.scipy.ndimage.affine_transform
            matrix = cupy.array(matrix)
>           return m(a, matrix, output_shape=output_shape,
                     output=output, order=self.order,
                     mode=self.mode, texture_memory=True)

tests/cupyx_tests/scipy_tests/ndimage_tests/test_interpolation.py:398: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
cupyx/scipy/ndimage/interpolation.py:376: in affine_transform
    return _texture.affine_transformation(data=input,
cupyx/_texture.py:168: in affine_transformation
    texture_object = _create_texture_object(data,
cupyx/_texture.py:98: in _create_texture_object
    array = texture.CUDAarray(texture_fmt, *data.shape[::-1])
cupy/cuda/texture.pyx:296: in cupy.cuda.texture.CUDAarray.__init__
    self.ptr = runtime.malloc3DArray(desc.ptr, width, height, depth,
cupy_backends/cuda/api/runtime.pyx:593: in cupy_backends.cuda.api.runtime.malloc3DArray
    check_status(status)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

>   raise CUDARuntimeError(status)
E   AssertionError: Only cupy raises error
E   
E   Traceback (most recent call last):
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.Np3X0NVCM9/cupy/cupy/testing/_helper.py", line 47, in _call_func
E       result = impl(self, *args, **kw)
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.Np3X0NVCM9/cupy/tests/cupyx_tests/scipy_tests/ndimage_tests/test_interpolation.py", line 398, in test_affine_transform_texture_memory
E       return m(a, matrix, output_shape=output_shape,
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.Np3X0NVCM9/cupy/cupyx/scipy/ndimage/interpolation.py", line 376, in affine_transform
E       return _texture.affine_transformation(data=input,
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.Np3X0NVCM9/cupy/cupyx/_texture.py", line 168, in affine_transformation
E       texture_object = _create_texture_object(data,
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.Np3X0NVCM9/cupy/cupyx/_texture.py", line 98, in _create_texture_object
E       array = texture.CUDAarray(texture_fmt, *data.shape[::-1])
E     File "cupy/cuda/texture.pyx", line 296, in cupy.cuda.texture.CUDAarray.__init__
E       self.ptr = runtime.malloc3DArray(desc.ptr, width, height, depth,
E     File "cupy_backends/cuda/api/runtime.pyx", line 593, in cupy_backends.cuda.api.runtime.malloc3DArray
E       check_status(status)
E     File "cupy_backends/cuda/api/runtime.pyx", line 265, in cupy_backends.cuda.api.runtime.check_status
E       raise CUDARuntimeError(status)
E   cupy_backends.cuda.api.runtime.CUDARuntimeError: hipErrorUnknown: hipErrorUnknown

cupy_backends/cuda/api/runtime.pyx:265: AssertionError
----------------------------- Captured stderr call -----------------------------
Traceback (most recent call last):
  File "cupy_backends/cuda/api/runtime.pyx", line 644, in cupy_backends.cuda.api.runtime.freeArray
    check_status(status)
  File "cupy_backends/cuda/api/runtime.pyx", line 265, in cupy_backends.cuda.api.runtime.check_status
    raise CUDARuntimeError(status)
cupy_backends.cuda.api.runtime.CUDARuntimeError: hipErrorUnknown: hipErrorUnknown
_ TestAffineTransformTextureMemory.test_affine_transform_texture_memory[_param_358_{mode='nearest', order=1, output='empty', output_shape=None, shape=(10, 20), theta=180}] _

self = <<cupyx_tests.scipy_tests.ndimage_tests.test_interpolation.TestAffineTransformTextureMemory object at 0x7fd7054c28b0>  parameter: {'mode': 'nearest', 'order': 1, 'output': 'empty', 'output_shape': None, 'shape': (10, 20), 'theta': 180}>
xp = <module 'cupy' from '/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.Np3X0NVCM9/cupy/cupy/__init__.py'>
scp = <module 'cupyx.scipy' from '/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.Np3X0NVCM9/cupy/cupyx/scipy/__init__.py'>

    @testing.numpy_cupy_allclose(atol=0.1, scipy_name='scp')
    def test_affine_transform_texture_memory(self, xp, scp):
        a = xp.ones(self.shape, dtype=xp.float32)
        center = numpy.divide(numpy.subtract(self.shape, 1), 2)
    
        if len(self.shape) == 2:
            matrix = self._2d_rotation_matrix(self.theta, center)
        elif len(self.shape) == 3:
            matrix = self._3d_rotation_matrix(self.theta, center)
        else:
            return pytest.xfail('Unsupported shape')
    
        if self.output == 'empty':
            output = xp.empty(self.shape, dtype=xp.float32)
            if self.output_shape:
                return pytest.skip('This combination is tested in '
                                   'test_invalid_texture_arguments')
        else:
            output = self.output
    
        if self.output_shape:
            output_shape = (self.output_shape, ) * len(self.shape)
        else:
            output_shape = self.output_shape
    
        if xp == cupy:
            m = cupyx.scipy.ndimage.affine_transform
            matrix = cupy.array(matrix)
>           return m(a, matrix, output_shape=output_shape,
                     output=output, order=self.order,
                     mode=self.mode, texture_memory=True)

tests/cupyx_tests/scipy_tests/ndimage_tests/test_interpolation.py:398: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
cupyx/scipy/ndimage/interpolation.py:376: in affine_transform
    return _texture.affine_transformation(data=input,
cupyx/_texture.py:168: in affine_transformation
    texture_object = _create_texture_object(data,
cupyx/_texture.py:98: in _create_texture_object
    array = texture.CUDAarray(texture_fmt, *data.shape[::-1])
cupy/cuda/texture.pyx:296: in cupy.cuda.texture.CUDAarray.__init__
    self.ptr = runtime.malloc3DArray(desc.ptr, width, height, depth,
cupy_backends/cuda/api/runtime.pyx:593: in cupy_backends.cuda.api.runtime.malloc3DArray
    check_status(status)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

>   raise CUDARuntimeError(status)
E   AssertionError: Only cupy raises error
E   
E   Traceback (most recent call last):
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.Np3X0NVCM9/cupy/cupy/testing/_helper.py", line 47, in _call_func
E       result = impl(self, *args, **kw)
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.Np3X0NVCM9/cupy/tests/cupyx_tests/scipy_tests/ndimage_tests/test_interpolation.py", line 398, in test_affine_transform_texture_memory
E       return m(a, matrix, output_shape=output_shape,
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.Np3X0NVCM9/cupy/cupyx/scipy/ndimage/interpolation.py", line 376, in affine_transform
E       return _texture.affine_transformation(data=input,
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.Np3X0NVCM9/cupy/cupyx/_texture.py", line 168, in affine_transformation
E       texture_object = _create_texture_object(data,
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.Np3X0NVCM9/cupy/cupyx/_texture.py", line 98, in _create_texture_object
E       array = texture.CUDAarray(texture_fmt, *data.shape[::-1])
E     File "cupy/cuda/texture.pyx", line 296, in cupy.cuda.texture.CUDAarray.__init__
E       self.ptr = runtime.malloc3DArray(desc.ptr, width, height, depth,
E     File "cupy_backends/cuda/api/runtime.pyx", line 593, in cupy_backends.cuda.api.runtime.malloc3DArray
E       check_status(status)
E     File "cupy_backends/cuda/api/runtime.pyx", line 265, in cupy_backends.cuda.api.runtime.check_status
E       raise CUDARuntimeError(status)
E   cupy_backends.cuda.api.runtime.CUDARuntimeError: hipErrorUnknown: hipErrorUnknown

cupy_backends/cuda/api/runtime.pyx:265: AssertionError
----------------------------- Captured stderr call -----------------------------
Traceback (most recent call last):
  File "cupy_backends/cuda/api/runtime.pyx", line 644, in cupy_backends.cuda.api.runtime.freeArray
    check_status(status)
  File "cupy_backends/cuda/api/runtime.pyx", line 265, in cupy_backends.cuda.api.runtime.check_status
    raise CUDARuntimeError(status)
cupy_backends.cuda.api.runtime.CUDARuntimeError: hipErrorUnknown: hipErrorUnknown
_ TestAffineTransformTextureMemory.test_affine_transform_texture_memory[_param_359_{mode='nearest', order=1, output='empty', output_shape=None, shape=(10, 20), theta=270}] _

self = <<cupyx_tests.scipy_tests.ndimage_tests.test_interpolation.TestAffineTransformTextureMemory object at 0x7fd705414b20>  parameter: {'mode': 'nearest', 'order': 1, 'output': 'empty', 'output_shape': None, 'shape': (10, 20), 'theta': 270}>
xp = <module 'cupy' from '/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.Np3X0NVCM9/cupy/cupy/__init__.py'>
scp = <module 'cupyx.scipy' from '/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.Np3X0NVCM9/cupy/cupyx/scipy/__init__.py'>

    @testing.numpy_cupy_allclose(atol=0.1, scipy_name='scp')
    def test_affine_transform_texture_memory(self, xp, scp):
        a = xp.ones(self.shape, dtype=xp.float32)
        center = numpy.divide(numpy.subtract(self.shape, 1), 2)
    
        if len(self.shape) == 2:
            matrix = self._2d_rotation_matrix(self.theta, center)
        elif len(self.shape) == 3:
            matrix = self._3d_rotation_matrix(self.theta, center)
        else:
            return pytest.xfail('Unsupported shape')
    
        if self.output == 'empty':
            output = xp.empty(self.shape, dtype=xp.float32)
            if self.output_shape:
                return pytest.skip('This combination is tested in '
                                   'test_invalid_texture_arguments')
        else:
            output = self.output
    
        if self.output_shape:
            output_shape = (self.output_shape, ) * len(self.shape)
        else:
            output_shape = self.output_shape
    
        if xp == cupy:
            m = cupyx.scipy.ndimage.affine_transform
            matrix = cupy.array(matrix)
>           return m(a, matrix, output_shape=output_shape,
                     output=output, order=self.order,
                     mode=self.mode, texture_memory=True)

tests/cupyx_tests/scipy_tests/ndimage_tests/test_interpolation.py:398: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
cupyx/scipy/ndimage/interpolation.py:376: in affine_transform
    return _texture.affine_transformation(data=input,
cupyx/_texture.py:168: in affine_transformation
    texture_object = _create_texture_object(data,
cupyx/_texture.py:98: in _create_texture_object
    array = texture.CUDAarray(texture_fmt, *data.shape[::-1])
cupy/cuda/texture.pyx:296: in cupy.cuda.texture.CUDAarray.__init__
    self.ptr = runtime.malloc3DArray(desc.ptr, width, height, depth,
cupy_backends/cuda/api/runtime.pyx:593: in cupy_backends.cuda.api.runtime.malloc3DArray
    check_status(status)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

>   raise CUDARuntimeError(status)
E   AssertionError: Only cupy raises error
E   
E   Traceback (most recent call last):
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.Np3X0NVCM9/cupy/cupy/testing/_helper.py", line 47, in _call_func
E       result = impl(self, *args, **kw)
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.Np3X0NVCM9/cupy/tests/cupyx_tests/scipy_tests/ndimage_tests/test_interpolation.py", line 398, in test_affine_transform_texture_memory
E       return m(a, matrix, output_shape=output_shape,
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.Np3X0NVCM9/cupy/cupyx/scipy/ndimage/interpolation.py", line 376, in affine_transform
E       return _texture.affine_transformation(data=input,
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.Np3X0NVCM9/cupy/cupyx/_texture.py", line 168, in affine_transformation
E       texture_object = _create_texture_object(data,
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.Np3X0NVCM9/cupy/cupyx/_texture.py", line 98, in _create_texture_object
E       array = texture.CUDAarray(texture_fmt, *data.shape[::-1])
E     File "cupy/cuda/texture.pyx", line 296, in cupy.cuda.texture.CUDAarray.__init__
E       self.ptr = runtime.malloc3DArray(desc.ptr, width, height, depth,
E     File "cupy_backends/cuda/api/runtime.pyx", line 593, in cupy_backends.cuda.api.runtime.malloc3DArray
E       check_status(status)
E     File "cupy_backends/cuda/api/runtime.pyx", line 265, in cupy_backends.cuda.api.runtime.check_status
E       raise CUDARuntimeError(status)
E   cupy_backends.cuda.api.runtime.CUDARuntimeError: hipErrorUnknown: hipErrorUnknown

cupy_backends/cuda/api/runtime.pyx:265: AssertionError
----------------------------- Captured stderr call -----------------------------
Traceback (most recent call last):
  File "cupy_backends/cuda/api/runtime.pyx", line 644, in cupy_backends.cuda.api.runtime.freeArray
    check_status(status)
  File "cupy_backends/cuda/api/runtime.pyx", line 265, in cupy_backends.cuda.api.runtime.check_status
    raise CUDARuntimeError(status)
cupy_backends.cuda.api.runtime.CUDARuntimeError: hipErrorUnknown: hipErrorUnknown
_ TestAffineTransformTextureMemory.test_affine_transform_texture_memory[_param_360_{mode='nearest', order=1, output='empty', output_shape=None, shape=(10, 10, 10), theta=0}] _

self = <<cupyx_tests.scipy_tests.ndimage_tests.test_interpolation.TestAffineTransformTextureMemory object at 0x7fd7059139a0>  parameter: {'mode': 'nearest', 'order': 1, 'output': 'empty', 'output_shape': None, 'shape': (10, 10, 10), 'theta': 0}>
xp = <module 'cupy' from '/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.Np3X0NVCM9/cupy/cupy/__init__.py'>
scp = <module 'cupyx.scipy' from '/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.Np3X0NVCM9/cupy/cupyx/scipy/__init__.py'>

    @testing.numpy_cupy_allclose(atol=0.1, scipy_name='scp')
    def test_affine_transform_texture_memory(self, xp, scp):
        a = xp.ones(self.shape, dtype=xp.float32)
        center = numpy.divide(numpy.subtract(self.shape, 1), 2)
    
        if len(self.shape) == 2:
            matrix = self._2d_rotation_matrix(self.theta, center)
        elif len(self.shape) == 3:
            matrix = self._3d_rotation_matrix(self.theta, center)
        else:
            return pytest.xfail('Unsupported shape')
    
        if self.output == 'empty':
            output = xp.empty(self.shape, dtype=xp.float32)
            if self.output_shape:
                return pytest.skip('This combination is tested in '
                                   'test_invalid_texture_arguments')
        else:
            output = self.output
    
        if self.output_shape:
            output_shape = (self.output_shape, ) * len(self.shape)
        else:
            output_shape = self.output_shape
    
        if xp == cupy:
            m = cupyx.scipy.ndimage.affine_transform
            matrix = cupy.array(matrix)
>           return m(a, matrix, output_shape=output_shape,
                     output=output, order=self.order,
                     mode=self.mode, texture_memory=True)

tests/cupyx_tests/scipy_tests/ndimage_tests/test_interpolation.py:398: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
cupyx/scipy/ndimage/interpolation.py:376: in affine_transform
    return _texture.affine_transformation(data=input,
cupyx/_texture.py:168: in affine_transformation
    texture_object = _create_texture_object(data,
cupyx/_texture.py:98: in _create_texture_object
    array = texture.CUDAarray(texture_fmt, *data.shape[::-1])
cupy/cuda/texture.pyx:296: in cupy.cuda.texture.CUDAarray.__init__
    self.ptr = runtime.malloc3DArray(desc.ptr, width, height, depth,
cupy_backends/cuda/api/runtime.pyx:593: in cupy_backends.cuda.api.runtime.malloc3DArray
    check_status(status)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

>   raise CUDARuntimeError(status)
E   AssertionError: Only cupy raises error
E   
E   Traceback (most recent call last):
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.Np3X0NVCM9/cupy/cupy/testing/_helper.py", line 47, in _call_func
E       result = impl(self, *args, **kw)
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.Np3X0NVCM9/cupy/tests/cupyx_tests/scipy_tests/ndimage_tests/test_interpolation.py", line 398, in test_affine_transform_texture_memory
E       return m(a, matrix, output_shape=output_shape,
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.Np3X0NVCM9/cupy/cupyx/scipy/ndimage/interpolation.py", line 376, in affine_transform
E       return _texture.affine_transformation(data=input,
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.Np3X0NVCM9/cupy/cupyx/_texture.py", line 168, in affine_transformation
E       texture_object = _create_texture_object(data,
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.Np3X0NVCM9/cupy/cupyx/_texture.py", line 98, in _create_texture_object
E       array = texture.CUDAarray(texture_fmt, *data.shape[::-1])
E     File "cupy/cuda/texture.pyx", line 296, in cupy.cuda.texture.CUDAarray.__init__
E       self.ptr = runtime.malloc3DArray(desc.ptr, width, height, depth,
E     File "cupy_backends/cuda/api/runtime.pyx", line 593, in cupy_backends.cuda.api.runtime.malloc3DArray
E       check_status(status)
E     File "cupy_backends/cuda/api/runtime.pyx", line 265, in cupy_backends.cuda.api.runtime.check_status
E       raise CUDARuntimeError(status)
E   cupy_backends.cuda.api.runtime.CUDARuntimeError: hipErrorUnknown: hipErrorUnknown

cupy_backends/cuda/api/runtime.pyx:265: AssertionError
----------------------------- Captured stderr call -----------------------------
Traceback (most recent call last):
  File "cupy_backends/cuda/api/runtime.pyx", line 644, in cupy_backends.cuda.api.runtime.freeArray
    check_status(status)
  File "cupy_backends/cuda/api/runtime.pyx", line 265, in cupy_backends.cuda.api.runtime.check_status
    raise CUDARuntimeError(status)
cupy_backends.cuda.api.runtime.CUDARuntimeError: hipErrorUnknown: hipErrorUnknown
_ TestAffineTransformTextureMemory.test_affine_transform_texture_memory[_param_361_{mode='nearest', order=1, output='empty', output_shape=None, shape=(10, 10, 10), theta=90}] _

self = <<cupyx_tests.scipy_tests.ndimage_tests.test_interpolation.TestAffineTransformTextureMemory object at 0x7fd7056c5670>  parameter: {'mode': 'nearest', 'order': 1, 'output': 'empty', 'output_shape': None, 'shape': (10, 10, 10), 'theta': 90}>
xp = <module 'cupy' from '/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.Np3X0NVCM9/cupy/cupy/__init__.py'>
scp = <module 'cupyx.scipy' from '/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.Np3X0NVCM9/cupy/cupyx/scipy/__init__.py'>

    @testing.numpy_cupy_allclose(atol=0.1, scipy_name='scp')
    def test_affine_transform_texture_memory(self, xp, scp):
        a = xp.ones(self.shape, dtype=xp.float32)
        center = numpy.divide(numpy.subtract(self.shape, 1), 2)
    
        if len(self.shape) == 2:
            matrix = self._2d_rotation_matrix(self.theta, center)
        elif len(self.shape) == 3:
            matrix = self._3d_rotation_matrix(self.theta, center)
        else:
            return pytest.xfail('Unsupported shape')
    
        if self.output == 'empty':
            output = xp.empty(self.shape, dtype=xp.float32)
            if self.output_shape:
                return pytest.skip('This combination is tested in '
                                   'test_invalid_texture_arguments')
        else:
            output = self.output
    
        if self.output_shape:
            output_shape = (self.output_shape, ) * len(self.shape)
        else:
            output_shape = self.output_shape
    
        if xp == cupy:
            m = cupyx.scipy.ndimage.affine_transform
            matrix = cupy.array(matrix)
>           return m(a, matrix, output_shape=output_shape,
                     output=output, order=self.order,
                     mode=self.mode, texture_memory=True)

tests/cupyx_tests/scipy_tests/ndimage_tests/test_interpolation.py:398: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
cupyx/scipy/ndimage/interpolation.py:376: in affine_transform
    return _texture.affine_transformation(data=input,
cupyx/_texture.py:168: in affine_transformation
    texture_object = _create_texture_object(data,
cupyx/_texture.py:98: in _create_texture_object
    array = texture.CUDAarray(texture_fmt, *data.shape[::-1])
cupy/cuda/texture.pyx:296: in cupy.cuda.texture.CUDAarray.__init__
    self.ptr = runtime.malloc3DArray(desc.ptr, width, height, depth,
cupy_backends/cuda/api/runtime.pyx:593: in cupy_backends.cuda.api.runtime.malloc3DArray
    check_status(status)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

>   raise CUDARuntimeError(status)
E   AssertionError: Only cupy raises error
E   
E   Traceback (most recent call last):
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.Np3X0NVCM9/cupy/cupy/testing/_helper.py", line 47, in _call_func
E       result = impl(self, *args, **kw)
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.Np3X0NVCM9/cupy/tests/cupyx_tests/scipy_tests/ndimage_tests/test_interpolation.py", line 398, in test_affine_transform_texture_memory
E       return m(a, matrix, output_shape=output_shape,
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.Np3X0NVCM9/cupy/cupyx/scipy/ndimage/interpolation.py", line 376, in affine_transform
E       return _texture.affine_transformation(data=input,
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.Np3X0NVCM9/cupy/cupyx/_texture.py", line 168, in affine_transformation
E       texture_object = _create_texture_object(data,
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.Np3X0NVCM9/cupy/cupyx/_texture.py", line 98, in _create_texture_object
E       array = texture.CUDAarray(texture_fmt, *data.shape[::-1])
E     File "cupy/cuda/texture.pyx", line 296, in cupy.cuda.texture.CUDAarray.__init__
E       self.ptr = runtime.malloc3DArray(desc.ptr, width, height, depth,
E     File "cupy_backends/cuda/api/runtime.pyx", line 593, in cupy_backends.cuda.api.runtime.malloc3DArray
E       check_status(status)
E     File "cupy_backends/cuda/api/runtime.pyx", line 265, in cupy_backends.cuda.api.runtime.check_status
E       raise CUDARuntimeError(status)
E   cupy_backends.cuda.api.runtime.CUDARuntimeError: hipErrorUnknown: hipErrorUnknown

cupy_backends/cuda/api/runtime.pyx:265: AssertionError
----------------------------- Captured stderr call -----------------------------
Traceback (most recent call last):
  File "cupy_backends/cuda/api/runtime.pyx", line 644, in cupy_backends.cuda.api.runtime.freeArray
    check_status(status)
  File "cupy_backends/cuda/api/runtime.pyx", line 265, in cupy_backends.cuda.api.runtime.check_status
    raise CUDARuntimeError(status)
cupy_backends.cuda.api.runtime.CUDARuntimeError: hipErrorUnknown: hipErrorUnknown
_ TestAffineTransformTextureMemory.test_affine_transform_texture_memory[_param_362_{mode='nearest', order=1, output='empty', output_shape=None, shape=(10, 10, 10), theta=180}] _

self = <<cupyx_tests.scipy_tests.ndimage_tests.test_interpolation.TestAffineTransformTextureMemory object at 0x7fd705ac6eb0>  parameter: {'mode': 'nearest', 'order': 1, 'output': 'empty', 'output_shape': None, 'shape': (10, 10, 10), 'theta': 180}>
xp = <module 'cupy' from '/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.Np3X0NVCM9/cupy/cupy/__init__.py'>
scp = <module 'cupyx.scipy' from '/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.Np3X0NVCM9/cupy/cupyx/scipy/__init__.py'>

    @testing.numpy_cupy_allclose(atol=0.1, scipy_name='scp')
    def test_affine_transform_texture_memory(self, xp, scp):
        a = xp.ones(self.shape, dtype=xp.float32)
        center = numpy.divide(numpy.subtract(self.shape, 1), 2)
    
        if len(self.shape) == 2:
            matrix = self._2d_rotation_matrix(self.theta, center)
        elif len(self.shape) == 3:
            matrix = self._3d_rotation_matrix(self.theta, center)
        else:
            return pytest.xfail('Unsupported shape')
    
        if self.output == 'empty':
            output = xp.empty(self.shape, dtype=xp.float32)
            if self.output_shape:
                return pytest.skip('This combination is tested in '
                                   'test_invalid_texture_arguments')
        else:
            output = self.output
    
        if self.output_shape:
            output_shape = (self.output_shape, ) * len(self.shape)
        else:
            output_shape = self.output_shape
    
        if xp == cupy:
            m = cupyx.scipy.ndimage.affine_transform
            matrix = cupy.array(matrix)
>           return m(a, matrix, output_shape=output_shape,
                     output=output, order=self.order,
                     mode=self.mode, texture_memory=True)

tests/cupyx_tests/scipy_tests/ndimage_tests/test_interpolation.py:398: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
cupyx/scipy/ndimage/interpolation.py:376: in affine_transform
    return _texture.affine_transformation(data=input,
cupyx/_texture.py:168: in affine_transformation
    texture_object = _create_texture_object(data,
cupyx/_texture.py:98: in _create_texture_object
    array = texture.CUDAarray(texture_fmt, *data.shape[::-1])
cupy/cuda/texture.pyx:296: in cupy.cuda.texture.CUDAarray.__init__
    self.ptr = runtime.malloc3DArray(desc.ptr, width, height, depth,
cupy_backends/cuda/api/runtime.pyx:593: in cupy_backends.cuda.api.runtime.malloc3DArray
    check_status(status)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

>   raise CUDARuntimeError(status)
E   AssertionError: Only cupy raises error
E   
E   Traceback (most recent call last):
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.Np3X0NVCM9/cupy/cupy/testing/_helper.py", line 47, in _call_func
E       result = impl(self, *args, **kw)
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.Np3X0NVCM9/cupy/tests/cupyx_tests/scipy_tests/ndimage_tests/test_interpolation.py", line 398, in test_affine_transform_texture_memory
E       return m(a, matrix, output_shape=output_shape,
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.Np3X0NVCM9/cupy/cupyx/scipy/ndimage/interpolation.py", line 376, in affine_transform
E       return _texture.affine_transformation(data=input,
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.Np3X0NVCM9/cupy/cupyx/_texture.py", line 168, in affine_transformation
E       texture_object = _create_texture_object(data,
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.Np3X0NVCM9/cupy/cupyx/_texture.py", line 98, in _create_texture_object
E       array = texture.CUDAarray(texture_fmt, *data.shape[::-1])
E     File "cupy/cuda/texture.pyx", line 296, in cupy.cuda.texture.CUDAarray.__init__
E       self.ptr = runtime.malloc3DArray(desc.ptr, width, height, depth,
E     File "cupy_backends/cuda/api/runtime.pyx", line 593, in cupy_backends.cuda.api.runtime.malloc3DArray
E       check_status(status)
E     File "cupy_backends/cuda/api/runtime.pyx", line 265, in cupy_backends.cuda.api.runtime.check_status
E       raise CUDARuntimeError(status)
E   cupy_backends.cuda.api.runtime.CUDARuntimeError: hipErrorUnknown: hipErrorUnknown

cupy_backends/cuda/api/runtime.pyx:265: AssertionError
----------------------------- Captured stderr call -----------------------------
Traceback (most recent call last):
  File "cupy_backends/cuda/api/runtime.pyx", line 644, in cupy_backends.cuda.api.runtime.freeArray
    check_status(status)
  File "cupy_backends/cuda/api/runtime.pyx", line 265, in cupy_backends.cuda.api.runtime.check_status
    raise CUDARuntimeError(status)
cupy_backends.cuda.api.runtime.CUDARuntimeError: hipErrorUnknown: hipErrorUnknown
_ TestAffineTransformTextureMemory.test_affine_transform_texture_memory[_param_363_{mode='nearest', order=1, output='empty', output_shape=None, shape=(10, 10, 10), theta=270}] _

self = <<cupyx_tests.scipy_tests.ndimage_tests.test_interpolation.TestAffineTransformTextureMemory object at 0x7fd70658ed00>  parameter: {'mode': 'nearest', 'order': 1, 'output': 'empty', 'output_shape': None, 'shape': (10, 10, 10), 'theta': 270}>
xp = <module 'cupy' from '/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.Np3X0NVCM9/cupy/cupy/__init__.py'>
scp = <module 'cupyx.scipy' from '/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.Np3X0NVCM9/cupy/cupyx/scipy/__init__.py'>

    @testing.numpy_cupy_allclose(atol=0.1, scipy_name='scp')
    def test_affine_transform_texture_memory(self, xp, scp):
        a = xp.ones(self.shape, dtype=xp.float32)
        center = numpy.divide(numpy.subtract(self.shape, 1), 2)
    
        if len(self.shape) == 2:
            matrix = self._2d_rotation_matrix(self.theta, center)
        elif len(self.shape) == 3:
            matrix = self._3d_rotation_matrix(self.theta, center)
        else:
            return pytest.xfail('Unsupported shape')
    
        if self.output == 'empty':
            output = xp.empty(self.shape, dtype=xp.float32)
            if self.output_shape:
                return pytest.skip('This combination is tested in '
                                   'test_invalid_texture_arguments')
        else:
            output = self.output
    
        if self.output_shape:
            output_shape = (self.output_shape, ) * len(self.shape)
        else:
            output_shape = self.output_shape
    
        if xp == cupy:
            m = cupyx.scipy.ndimage.affine_transform
            matrix = cupy.array(matrix)
>           return m(a, matrix, output_shape=output_shape,
                     output=output, order=self.order,
                     mode=self.mode, texture_memory=True)

tests/cupyx_tests/scipy_tests/ndimage_tests/test_interpolation.py:398: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
cupyx/scipy/ndimage/interpolation.py:376: in affine_transform
    return _texture.affine_transformation(data=input,
cupyx/_texture.py:168: in affine_transformation
    texture_object = _create_texture_object(data,
cupyx/_texture.py:98: in _create_texture_object
    array = texture.CUDAarray(texture_fmt, *data.shape[::-1])
cupy/cuda/texture.pyx:296: in cupy.cuda.texture.CUDAarray.__init__
    self.ptr = runtime.malloc3DArray(desc.ptr, width, height, depth,
cupy_backends/cuda/api/runtime.pyx:593: in cupy_backends.cuda.api.runtime.malloc3DArray
    check_status(status)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

>   raise CUDARuntimeError(status)
E   AssertionError: Only cupy raises error
E   
E   Traceback (most recent call last):
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.Np3X0NVCM9/cupy/cupy/testing/_helper.py", line 47, in _call_func
E       result = impl(self, *args, **kw)
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.Np3X0NVCM9/cupy/tests/cupyx_tests/scipy_tests/ndimage_tests/test_interpolation.py", line 398, in test_affine_transform_texture_memory
E       return m(a, matrix, output_shape=output_shape,
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.Np3X0NVCM9/cupy/cupyx/scipy/ndimage/interpolation.py", line 376, in affine_transform
E       return _texture.affine_transformation(data=input,
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.Np3X0NVCM9/cupy/cupyx/_texture.py", line 168, in affine_transformation
E       texture_object = _create_texture_object(data,
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.Np3X0NVCM9/cupy/cupyx/_texture.py", line 98, in _create_texture_object
E       array = texture.CUDAarray(texture_fmt, *data.shape[::-1])
E     File "cupy/cuda/texture.pyx", line 296, in cupy.cuda.texture.CUDAarray.__init__
E       self.ptr = runtime.malloc3DArray(desc.ptr, width, height, depth,
E     File "cupy_backends/cuda/api/runtime.pyx", line 593, in cupy_backends.cuda.api.runtime.malloc3DArray
E       check_status(status)
E     File "cupy_backends/cuda/api/runtime.pyx", line 265, in cupy_backends.cuda.api.runtime.check_status
E       raise CUDARuntimeError(status)
E   cupy_backends.cuda.api.runtime.CUDARuntimeError: hipErrorUnknown: hipErrorUnknown

cupy_backends/cuda/api/runtime.pyx:265: AssertionError
----------------------------- Captured stderr call -----------------------------
Traceback (most recent call last):
  File "cupy_backends/cuda/api/runtime.pyx", line 644, in cupy_backends.cuda.api.runtime.freeArray
    check_status(status)
  File "cupy_backends/cuda/api/runtime.pyx", line 265, in cupy_backends.cuda.api.runtime.check_status
    raise CUDARuntimeError(status)
cupy_backends.cuda.api.runtime.CUDARuntimeError: hipErrorUnknown: hipErrorUnknown
_ TestAffineTransformTextureMemory.test_affine_transform_texture_memory[_param_364_{mode='nearest', order=1, output='empty', output_shape=None, shape=(10, 20, 30), theta=0}] _

self = <<cupyx_tests.scipy_tests.ndimage_tests.test_interpolation.TestAffineTransformTextureMemory object at 0x7fd705ad8bb0>  parameter: {'mode': 'nearest', 'order': 1, 'output': 'empty', 'output_shape': None, 'shape': (10, 20, 30), 'theta': 0}>
xp = <module 'cupy' from '/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.Np3X0NVCM9/cupy/cupy/__init__.py'>
scp = <module 'cupyx.scipy' from '/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.Np3X0NVCM9/cupy/cupyx/scipy/__init__.py'>

    @testing.numpy_cupy_allclose(atol=0.1, scipy_name='scp')
    def test_affine_transform_texture_memory(self, xp, scp):
        a = xp.ones(self.shape, dtype=xp.float32)
        center = numpy.divide(numpy.subtract(self.shape, 1), 2)
    
        if len(self.shape) == 2:
            matrix = self._2d_rotation_matrix(self.theta, center)
        elif len(self.shape) == 3:
            matrix = self._3d_rotation_matrix(self.theta, center)
        else:
            return pytest.xfail('Unsupported shape')
    
        if self.output == 'empty':
            output = xp.empty(self.shape, dtype=xp.float32)
            if self.output_shape:
                return pytest.skip('This combination is tested in '
                                   'test_invalid_texture_arguments')
        else:
            output = self.output
    
        if self.output_shape:
            output_shape = (self.output_shape, ) * len(self.shape)
        else:
            output_shape = self.output_shape
    
        if xp == cupy:
            m = cupyx.scipy.ndimage.affine_transform
            matrix = cupy.array(matrix)
>           return m(a, matrix, output_shape=output_shape,
                     output=output, order=self.order,
                     mode=self.mode, texture_memory=True)

tests/cupyx_tests/scipy_tests/ndimage_tests/test_interpolation.py:398: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
cupyx/scipy/ndimage/interpolation.py:376: in affine_transform
    return _texture.affine_transformation(data=input,
cupyx/_texture.py:168: in affine_transformation
    texture_object = _create_texture_object(data,
cupyx/_texture.py:98: in _create_texture_object
    array = texture.CUDAarray(texture_fmt, *data.shape[::-1])
cupy/cuda/texture.pyx:296: in cupy.cuda.texture.CUDAarray.__init__
    self.ptr = runtime.malloc3DArray(desc.ptr, width, height, depth,
cupy_backends/cuda/api/runtime.pyx:593: in cupy_backends.cuda.api.runtime.malloc3DArray
    check_status(status)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

>   raise CUDARuntimeError(status)
E   AssertionError: Only cupy raises error
E   
E   Traceback (most recent call last):
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.Np3X0NVCM9/cupy/cupy/testing/_helper.py", line 47, in _call_func
E       result = impl(self, *args, **kw)
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.Np3X0NVCM9/cupy/tests/cupyx_tests/scipy_tests/ndimage_tests/test_interpolation.py", line 398, in test_affine_transform_texture_memory
E       return m(a, matrix, output_shape=output_shape,
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.Np3X0NVCM9/cupy/cupyx/scipy/ndimage/interpolation.py", line 376, in affine_transform
E       return _texture.affine_transformation(data=input,
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.Np3X0NVCM9/cupy/cupyx/_texture.py", line 168, in affine_transformation
E       texture_object = _create_texture_object(data,
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.Np3X0NVCM9/cupy/cupyx/_texture.py", line 98, in _create_texture_object
E       array = texture.CUDAarray(texture_fmt, *data.shape[::-1])
E     File "cupy/cuda/texture.pyx", line 296, in cupy.cuda.texture.CUDAarray.__init__
E       self.ptr = runtime.malloc3DArray(desc.ptr, width, height, depth,
E     File "cupy_backends/cuda/api/runtime.pyx", line 593, in cupy_backends.cuda.api.runtime.malloc3DArray
E       check_status(status)
E     File "cupy_backends/cuda/api/runtime.pyx", line 265, in cupy_backends.cuda.api.runtime.check_status
E       raise CUDARuntimeError(status)
E   cupy_backends.cuda.api.runtime.CUDARuntimeError: hipErrorUnknown: hipErrorUnknown

cupy_backends/cuda/api/runtime.pyx:265: AssertionError
----------------------------- Captured stderr call -----------------------------
Traceback (most recent call last):
  File "cupy_backends/cuda/api/runtime.pyx", line 644, in cupy_backends.cuda.api.runtime.freeArray
    check_status(status)
  File "cupy_backends/cuda/api/runtime.pyx", line 265, in cupy_backends.cuda.api.runtime.check_status
    raise CUDARuntimeError(status)
cupy_backends.cuda.api.runtime.CUDARuntimeError: hipErrorUnknown: hipErrorUnknown
_ TestAffineTransformTextureMemory.test_affine_transform_texture_memory[_param_365_{mode='nearest', order=1, output='empty', output_shape=None, shape=(10, 20, 30), theta=90}] _

self = <<cupyx_tests.scipy_tests.ndimage_tests.test_interpolation.TestAffineTransformTextureMemory object at 0x7fd7058d6a30>  parameter: {'mode': 'nearest', 'order': 1, 'output': 'empty', 'output_shape': None, 'shape': (10, 20, 30), 'theta': 90}>
xp = <module 'cupy' from '/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.Np3X0NVCM9/cupy/cupy/__init__.py'>
scp = <module 'cupyx.scipy' from '/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.Np3X0NVCM9/cupy/cupyx/scipy/__init__.py'>

    @testing.numpy_cupy_allclose(atol=0.1, scipy_name='scp')
    def test_affine_transform_texture_memory(self, xp, scp):
        a = xp.ones(self.shape, dtype=xp.float32)
        center = numpy.divide(numpy.subtract(self.shape, 1), 2)
    
        if len(self.shape) == 2:
            matrix = self._2d_rotation_matrix(self.theta, center)
        elif len(self.shape) == 3:
            matrix = self._3d_rotation_matrix(self.theta, center)
        else:
            return pytest.xfail('Unsupported shape')
    
        if self.output == 'empty':
            output = xp.empty(self.shape, dtype=xp.float32)
            if self.output_shape:
                return pytest.skip('This combination is tested in '
                                   'test_invalid_texture_arguments')
        else:
            output = self.output
    
        if self.output_shape:
            output_shape = (self.output_shape, ) * len(self.shape)
        else:
            output_shape = self.output_shape
    
        if xp == cupy:
            m = cupyx.scipy.ndimage.affine_transform
            matrix = cupy.array(matrix)
>           return m(a, matrix, output_shape=output_shape,
                     output=output, order=self.order,
                     mode=self.mode, texture_memory=True)

tests/cupyx_tests/scipy_tests/ndimage_tests/test_interpolation.py:398: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
cupyx/scipy/ndimage/interpolation.py:376: in affine_transform
    return _texture.affine_transformation(data=input,
cupyx/_texture.py:168: in affine_transformation
    texture_object = _create_texture_object(data,
cupyx/_texture.py:98: in _create_texture_object
    array = texture.CUDAarray(texture_fmt, *data.shape[::-1])
cupy/cuda/texture.pyx:296: in cupy.cuda.texture.CUDAarray.__init__
    self.ptr = runtime.malloc3DArray(desc.ptr, width, height, depth,
cupy_backends/cuda/api/runtime.pyx:593: in cupy_backends.cuda.api.runtime.malloc3DArray
    check_status(status)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

>   raise CUDARuntimeError(status)
E   AssertionError: Only cupy raises error
E   
E   Traceback (most recent call last):
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.Np3X0NVCM9/cupy/cupy/testing/_helper.py", line 47, in _call_func
E       result = impl(self, *args, **kw)
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.Np3X0NVCM9/cupy/tests/cupyx_tests/scipy_tests/ndimage_tests/test_interpolation.py", line 398, in test_affine_transform_texture_memory
E       return m(a, matrix, output_shape=output_shape,
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.Np3X0NVCM9/cupy/cupyx/scipy/ndimage/interpolation.py", line 376, in affine_transform
E       return _texture.affine_transformation(data=input,
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.Np3X0NVCM9/cupy/cupyx/_texture.py", line 168, in affine_transformation
E       texture_object = _create_texture_object(data,
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.Np3X0NVCM9/cupy/cupyx/_texture.py", line 98, in _create_texture_object
E       array = texture.CUDAarray(texture_fmt, *data.shape[::-1])
E     File "cupy/cuda/texture.pyx", line 296, in cupy.cuda.texture.CUDAarray.__init__
E       self.ptr = runtime.malloc3DArray(desc.ptr, width, height, depth,
E     File "cupy_backends/cuda/api/runtime.pyx", line 593, in cupy_backends.cuda.api.runtime.malloc3DArray
E       check_status(status)
E     File "cupy_backends/cuda/api/runtime.pyx", line 265, in cupy_backends.cuda.api.runtime.check_status
E       raise CUDARuntimeError(status)
E   cupy_backends.cuda.api.runtime.CUDARuntimeError: hipErrorUnknown: hipErrorUnknown

cupy_backends/cuda/api/runtime.pyx:265: AssertionError
----------------------------- Captured stderr call -----------------------------
Traceback (most recent call last):
  File "cupy_backends/cuda/api/runtime.pyx", line 644, in cupy_backends.cuda.api.runtime.freeArray
    check_status(status)
  File "cupy_backends/cuda/api/runtime.pyx", line 265, in cupy_backends.cuda.api.runtime.check_status
    raise CUDARuntimeError(status)
cupy_backends.cuda.api.runtime.CUDARuntimeError: hipErrorUnknown: hipErrorUnknown
_ TestAffineTransformTextureMemory.test_affine_transform_texture_memory[_param_366_{mode='nearest', order=1, output='empty', output_shape=None, shape=(10, 20, 30), theta=180}] _

self = <<cupyx_tests.scipy_tests.ndimage_tests.test_interpolation.TestAffineTransformTextureMemory object at 0x7fd7058c00d0>  parameter: {'mode': 'nearest', 'order': 1, 'output': 'empty', 'output_shape': None, 'shape': (10, 20, 30), 'theta': 180}>
xp = <module 'cupy' from '/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.Np3X0NVCM9/cupy/cupy/__init__.py'>
scp = <module 'cupyx.scipy' from '/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.Np3X0NVCM9/cupy/cupyx/scipy/__init__.py'>

    @testing.numpy_cupy_allclose(atol=0.1, scipy_name='scp')
    def test_affine_transform_texture_memory(self, xp, scp):
        a = xp.ones(self.shape, dtype=xp.float32)
        center = numpy.divide(numpy.subtract(self.shape, 1), 2)
    
        if len(self.shape) == 2:
            matrix = self._2d_rotation_matrix(self.theta, center)
        elif len(self.shape) == 3:
            matrix = self._3d_rotation_matrix(self.theta, center)
        else:
            return pytest.xfail('Unsupported shape')
    
        if self.output == 'empty':
            output = xp.empty(self.shape, dtype=xp.float32)
            if self.output_shape:
                return pytest.skip('This combination is tested in '
                                   'test_invalid_texture_arguments')
        else:
            output = self.output
    
        if self.output_shape:
            output_shape = (self.output_shape, ) * len(self.shape)
        else:
            output_shape = self.output_shape
    
        if xp == cupy:
            m = cupyx.scipy.ndimage.affine_transform
            matrix = cupy.array(matrix)
>           return m(a, matrix, output_shape=output_shape,
                     output=output, order=self.order,
                     mode=self.mode, texture_memory=True)

tests/cupyx_tests/scipy_tests/ndimage_tests/test_interpolation.py:398: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
cupyx/scipy/ndimage/interpolation.py:376: in affine_transform
    return _texture.affine_transformation(data=input,
cupyx/_texture.py:168: in affine_transformation
    texture_object = _create_texture_object(data,
cupyx/_texture.py:98: in _create_texture_object
    array = texture.CUDAarray(texture_fmt, *data.shape[::-1])
cupy/cuda/texture.pyx:296: in cupy.cuda.texture.CUDAarray.__init__
    self.ptr = runtime.malloc3DArray(desc.ptr, width, height, depth,
cupy_backends/cuda/api/runtime.pyx:593: in cupy_backends.cuda.api.runtime.malloc3DArray
    check_status(status)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

>   raise CUDARuntimeError(status)
E   AssertionError: Only cupy raises error
E   
E   Traceback (most recent call last):
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.Np3X0NVCM9/cupy/cupy/testing/_helper.py", line 47, in _call_func
E       result = impl(self, *args, **kw)
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.Np3X0NVCM9/cupy/tests/cupyx_tests/scipy_tests/ndimage_tests/test_interpolation.py", line 398, in test_affine_transform_texture_memory
E       return m(a, matrix, output_shape=output_shape,
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.Np3X0NVCM9/cupy/cupyx/scipy/ndimage/interpolation.py", line 376, in affine_transform
E       return _texture.affine_transformation(data=input,
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.Np3X0NVCM9/cupy/cupyx/_texture.py", line 168, in affine_transformation
E       texture_object = _create_texture_object(data,
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.Np3X0NVCM9/cupy/cupyx/_texture.py", line 98, in _create_texture_object
E       array = texture.CUDAarray(texture_fmt, *data.shape[::-1])
E     File "cupy/cuda/texture.pyx", line 296, in cupy.cuda.texture.CUDAarray.__init__
E       self.ptr = runtime.malloc3DArray(desc.ptr, width, height, depth,
E     File "cupy_backends/cuda/api/runtime.pyx", line 593, in cupy_backends.cuda.api.runtime.malloc3DArray
E       check_status(status)
E     File "cupy_backends/cuda/api/runtime.pyx", line 265, in cupy_backends.cuda.api.runtime.check_status
E       raise CUDARuntimeError(status)
E   cupy_backends.cuda.api.runtime.CUDARuntimeError: hipErrorUnknown: hipErrorUnknown

cupy_backends/cuda/api/runtime.pyx:265: AssertionError
----------------------------- Captured stderr call -----------------------------
Traceback (most recent call last):
  File "cupy_backends/cuda/api/runtime.pyx", line 644, in cupy_backends.cuda.api.runtime.freeArray
    check_status(status)
  File "cupy_backends/cuda/api/runtime.pyx", line 265, in cupy_backends.cuda.api.runtime.check_status
    raise CUDARuntimeError(status)
cupy_backends.cuda.api.runtime.CUDARuntimeError: hipErrorUnknown: hipErrorUnknown
_ TestAffineTransformTextureMemory.test_affine_transform_texture_memory[_param_367_{mode='nearest', order=1, output='empty', output_shape=None, shape=(10, 20, 30), theta=270}] _

self = <<cupyx_tests.scipy_tests.ndimage_tests.test_interpolation.TestAffineTransformTextureMemory object at 0x7fd7055730a0>  parameter: {'mode': 'nearest', 'order': 1, 'output': 'empty', 'output_shape': None, 'shape': (10, 20, 30), 'theta': 270}>
xp = <module 'cupy' from '/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.Np3X0NVCM9/cupy/cupy/__init__.py'>
scp = <module 'cupyx.scipy' from '/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.Np3X0NVCM9/cupy/cupyx/scipy/__init__.py'>

    @testing.numpy_cupy_allclose(atol=0.1, scipy_name='scp')
    def test_affine_transform_texture_memory(self, xp, scp):
        a = xp.ones(self.shape, dtype=xp.float32)
        center = numpy.divide(numpy.subtract(self.shape, 1), 2)
    
        if len(self.shape) == 2:
            matrix = self._2d_rotation_matrix(self.theta, center)
        elif len(self.shape) == 3:
            matrix = self._3d_rotation_matrix(self.theta, center)
        else:
            return pytest.xfail('Unsupported shape')
    
        if self.output == 'empty':
            output = xp.empty(self.shape, dtype=xp.float32)
            if self.output_shape:
                return pytest.skip('This combination is tested in '
                                   'test_invalid_texture_arguments')
        else:
            output = self.output
    
        if self.output_shape:
            output_shape = (self.output_shape, ) * len(self.shape)
        else:
            output_shape = self.output_shape
    
        if xp == cupy:
            m = cupyx.scipy.ndimage.affine_transform
            matrix = cupy.array(matrix)
>           return m(a, matrix, output_shape=output_shape,
                     output=output, order=self.order,
                     mode=self.mode, texture_memory=True)

tests/cupyx_tests/scipy_tests/ndimage_tests/test_interpolation.py:398: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
cupyx/scipy/ndimage/interpolation.py:376: in affine_transform
    return _texture.affine_transformation(data=input,
cupyx/_texture.py:168: in affine_transformation
    texture_object = _create_texture_object(data,
cupyx/_texture.py:98: in _create_texture_object
    array = texture.CUDAarray(texture_fmt, *data.shape[::-1])
cupy/cuda/texture.pyx:296: in cupy.cuda.texture.CUDAarray.__init__
    self.ptr = runtime.malloc3DArray(desc.ptr, width, height, depth,
cupy_backends/cuda/api/runtime.pyx:593: in cupy_backends.cuda.api.runtime.malloc3DArray
    check_status(status)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

>   raise CUDARuntimeError(status)
E   AssertionError: Only cupy raises error
E   
E   Traceback (most recent call last):
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.Np3X0NVCM9/cupy/cupy/testing/_helper.py", line 47, in _call_func
E       result = impl(self, *args, **kw)
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.Np3X0NVCM9/cupy/tests/cupyx_tests/scipy_tests/ndimage_tests/test_interpolation.py", line 398, in test_affine_transform_texture_memory
E       return m(a, matrix, output_shape=output_shape,
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.Np3X0NVCM9/cupy/cupyx/scipy/ndimage/interpolation.py", line 376, in affine_transform
E       return _texture.affine_transformation(data=input,
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.Np3X0NVCM9/cupy/cupyx/_texture.py", line 168, in affine_transformation
E       texture_object = _create_texture_object(data,
E     File "/home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.Np3X0NVCM9/cupy/cupyx/_texture.py", line 98, in _create_texture_object
E       array = texture.CUDAarray(texture_fmt, *data.shape[::-1])
E     File "cupy/cuda/texture.pyx", line 296, in cupy.cuda.texture.CUDAarray.__init__
E       self.ptr = runtime.malloc3DArray(desc.ptr, width, height, depth,
E     File "cupy_backends/cuda/api/runtime.pyx", line 593, in cupy_backends.cuda.api.runtime.malloc3DArray
E       check_status(status)
E     File "cupy_backends/cuda/api/runtime.pyx", line 265, in cupy_backends.cuda.api.runtime.check_status
E       raise CUDARuntimeError(status)
E   cupy_backends.cuda.api.runtime.CUDARuntimeError: hipErrorUnknown: hipErrorUnknown

cupy_backends/cuda/api/runtime.pyx:265: AssertionError
----------------------------- Captured stderr call -----------------------------
Traceback (most recent call last):
  File "cupy_backends/cuda/api/runtime.pyx", line 644, in cupy_backends.cuda.api.runtime.freeArray
    check_status(status)
  File "cupy_backends/cuda/api/runtime.pyx", line 265, in cupy_backends.cuda.api.runtime.check_status
    raise CUDARuntimeError(status)
cupy_backends.cuda.api.runtime.CUDARuntimeError: hipErrorUnknown: hipErrorUnknown
_ TestZoomOutputSize1.test_zoom_output_size1[_param_4_{grid_mode=False, mode='constant', order=4, shape=(5, 5, 2), zoom=(2, 2, 0.5)}] _

self = <<cupyx_tests.scipy_tests.ndimage_tests.test_interpolation.TestZoomOutputSize1 object at 0x7fd70351ae80>  parameter: {'grid_mode': False, 'mode': 'constant', 'order': 4, 'shape': (5, 5, 2), 'zoom': (2, 2, 0.5)}>
args = (), kw = {'dtype': <class 'numpy.float32'>}
dtype = <class 'numpy.float32'>

    @_wraps_partial(impl, name)
    def test_func(self, *args, **kw):
        for dtype in dtypes:
            try:
                kw[name] = numpy.dtype(dtype).type
>               impl(self, *args, **kw)

cupy/testing/_helper.py:825: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
cupy/testing/_helper.py:343: in test_func
    check_func(cupy_r, numpy_r)
cupy/testing/_helper.py:495: in check_func
    _array.assert_allclose(c, n, rtol1, atol1, err_msg, verbose)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

actual = array([[[-9.26215027e-04],
        [-7.12910551e-05],
        [-1.04548770e-03],
        [ 6.02170185e-04],
        [ ...   [-1.58413204e-05],
        [-2.26292832e-05],
        [-1.52809316e-05],
        [-2.62873400e-05]]], dtype=float32)
desired = array([[[-1.91677706e-16],
        [ 6.02007280e-16],
        [ 7.39644969e-18],
        [ 9.42839520e-17],
        [-...   [ 2.49078413e-18],
        [-6.86374620e-18],
        [-2.01807717e-17],
        [-1.36889723e-17]]], dtype=float32)
rtol = 1e-07, atol = 1e-05, err_msg = '', verbose = True

    def assert_allclose(actual, desired, rtol=1e-7, atol=0, err_msg='',
                        verbose=True):
        """Raises an AssertionError if objects are not equal up to desired tolerance.
    
        Args:
             actual(numpy.ndarray or cupy.ndarray): The actual object to check.
             desired(numpy.ndarray or cupy.ndarray): The desired, expected object.
             rtol(float): Relative tolerance.
             atol(float): Absolute tolerance.
             err_msg(str): The error message to be printed in case of failure.
             verbose(bool): If ``True``, the conflicting
                 values are appended to the error message.
    
        .. seealso:: :func:`numpy.testing.assert_allclose`
    
        """  # NOQA
>       numpy.testing.assert_allclose(
            cupy.asnumpy(actual), cupy.asnumpy(desired),
            rtol=rtol, atol=atol, err_msg=err_msg, verbose=verbose)
E       AssertionError: 
E       Not equal to tolerance rtol=1e-07, atol=1e-05
E       
E       Mismatched elements: 95 / 100 (95%)
E       Max absolute difference: 0.00124037
E       Max relative difference: 1.6367563e+14
E        x: array([[[-9.262150e-04],
E               [-7.129106e-05],
E               [-1.045488e-03],...
E        y: array([[[-1.916777e-16],
E               [ 6.020073e-16],
E               [ 7.396450e-18],...

cupy/testing/_array.py:24: AssertionError
----------------------------- Captured stdout call -----------------------------
dtype is <class 'numpy.float32'>
_ TestZoomOutputSize1.test_zoom_output_size1[_param_5_{grid_mode=False, mode='constant', order=5, shape=(5, 5, 2), zoom=(2, 2, 0.5)}] _

self = <<cupyx_tests.scipy_tests.ndimage_tests.test_interpolation.TestZoomOutputSize1 object at 0x7fd703bed940>  parameter: {'grid_mode': False, 'mode': 'constant', 'order': 5, 'shape': (5, 5, 2), 'zoom': (2, 2, 0.5)}>
args = (), kw = {'dtype': <class 'numpy.float32'>}
dtype = <class 'numpy.float32'>

    @_wraps_partial(impl, name)
    def test_func(self, *args, **kw):
        for dtype in dtypes:
            try:
                kw[name] = numpy.dtype(dtype).type
>               impl(self, *args, **kw)

cupy/testing/_helper.py:825: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
cupy/testing/_helper.py:343: in test_func
    check_func(cupy_r, numpy_r)
cupy/testing/_helper.py:495: in check_func
    _array.assert_allclose(c, n, rtol1, atol1, err_msg, verbose)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

actual = array([[[-6.23873319e-04],
        [-6.52701594e-04],
        [-5.34185849e-04],
        [-7.05319864e-04],
        [-...   [-2.50156190e-05],
        [ 9.55036171e-07],
        [-1.27298597e-06],
        [-4.17136789e-06]]], dtype=float32)
desired = array([[[ 2.1000416e-16],
        [-7.7505151e-16],
        [-6.6172874e-17],
        [-6.5140899e-16],
        [ 7.95...       [-1.5922411e-17],
        [ 3.1236140e-17],
        [-5.3157008e-17],
        [-1.3124647e-17]]], dtype=float32)
rtol = 1e-07, atol = 1e-05, err_msg = '', verbose = True

    def assert_allclose(actual, desired, rtol=1e-7, atol=0, err_msg='',
                        verbose=True):
        """Raises an AssertionError if objects are not equal up to desired tolerance.
    
        Args:
             actual(numpy.ndarray or cupy.ndarray): The actual object to check.
             desired(numpy.ndarray or cupy.ndarray): The desired, expected object.
             rtol(float): Relative tolerance.
             atol(float): Absolute tolerance.
             err_msg(str): The error message to be printed in case of failure.
             verbose(bool): If ``True``, the conflicting
                 values are appended to the error message.
    
        .. seealso:: :func:`numpy.testing.assert_allclose`
    
        """  # NOQA
>       numpy.testing.assert_allclose(
            cupy.asnumpy(actual), cupy.asnumpy(desired),
            rtol=rtol, atol=atol, err_msg=err_msg, verbose=verbose)
E       AssertionError: 
E       Not equal to tolerance rtol=1e-07, atol=1e-05
E       
E       Mismatched elements: 85 / 100 (85%)
E       Max absolute difference: 0.00084527
E       Max relative difference: 1.881553e+13
E        x: array([[[-6.238733e-04],
E               [-6.527016e-04],
E               [-5.341858e-04],...
E        y: array([[[ 2.100042e-16],
E               [-7.750515e-16],
E               [-6.617287e-17],...

cupy/testing/_array.py:24: AssertionError
----------------------------- Captured stdout call -----------------------------
dtype is <class 'numpy.float32'>
_ TestZoomOutputSize1.test_zoom_output_size1[_param_16_{grid_mode=False, mode='mirror', order=4, shape=(5, 5, 2), zoom=(2, 2, 0.5)}] _

self = <<cupyx_tests.scipy_tests.ndimage_tests.test_interpolation.TestZoomOutputSize1 object at 0x7fd7036d4190>  parameter: {'grid_mode': False, 'mode': 'mirror', 'order': 4, 'shape': (5, 5, 2), 'zoom': (2, 2, 0.5)}>
args = (), kw = {'dtype': <class 'numpy.float32'>}
dtype = <class 'numpy.float32'>

    @_wraps_partial(impl, name)
    def test_func(self, *args, **kw):
        for dtype in dtypes:
            try:
                kw[name] = numpy.dtype(dtype).type
>               impl(self, *args, **kw)

cupy/testing/_helper.py:825: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
cupy/testing/_helper.py:343: in test_func
    check_func(cupy_r, numpy_r)
cupy/testing/_helper.py:495: in check_func
    _array.assert_allclose(c, n, rtol1, atol1, err_msg, verbose)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

actual = array([[[-9.26215027e-04],
        [-7.12910551e-05],
        [-1.04548770e-03],
        [ 6.02170185e-04],
        [ ...   [-1.58413204e-05],
        [-2.26292832e-05],
        [-1.52809316e-05],
        [-2.62873400e-05]]], dtype=float32)
desired = array([[[-1.91677706e-16],
        [ 6.02007280e-16],
        [ 7.39644969e-18],
        [ 9.42839520e-17],
        [-...   [ 2.49078413e-18],
        [-6.86374620e-18],
        [-2.01807717e-17],
        [-1.36889723e-17]]], dtype=float32)
rtol = 1e-07, atol = 1e-05, err_msg = '', verbose = True

    def assert_allclose(actual, desired, rtol=1e-7, atol=0, err_msg='',
                        verbose=True):
        """Raises an AssertionError if objects are not equal up to desired tolerance.
    
        Args:
             actual(numpy.ndarray or cupy.ndarray): The actual object to check.
             desired(numpy.ndarray or cupy.ndarray): The desired, expected object.
             rtol(float): Relative tolerance.
             atol(float): Absolute tolerance.
             err_msg(str): The error message to be printed in case of failure.
             verbose(bool): If ``True``, the conflicting
                 values are appended to the error message.
    
        .. seealso:: :func:`numpy.testing.assert_allclose`
    
        """  # NOQA
>       numpy.testing.assert_allclose(
            cupy.asnumpy(actual), cupy.asnumpy(desired),
            rtol=rtol, atol=atol, err_msg=err_msg, verbose=verbose)
E       AssertionError: 
E       Not equal to tolerance rtol=1e-07, atol=1e-05
E       
E       Mismatched elements: 95 / 100 (95%)
E       Max absolute difference: 0.00124037
E       Max relative difference: 1.6367563e+14
E        x: array([[[-9.262150e-04],
E               [-7.129106e-05],
E               [-1.045488e-03],...
E        y: array([[[-1.916777e-16],
E               [ 6.020073e-16],
E               [ 7.396450e-18],...

cupy/testing/_array.py:24: AssertionError
----------------------------- Captured stdout call -----------------------------
dtype is <class 'numpy.float32'>
_ TestZoomOutputSize1.test_zoom_output_size1[_param_17_{grid_mode=False, mode='mirror', order=5, shape=(5, 5, 2), zoom=(2, 2, 0.5)}] _

self = <<cupyx_tests.scipy_tests.ndimage_tests.test_interpolation.TestZoomOutputSize1 object at 0x7fd703c21400>  parameter: {'grid_mode': False, 'mode': 'mirror', 'order': 5, 'shape': (5, 5, 2), 'zoom': (2, 2, 0.5)}>
args = (), kw = {'dtype': <class 'numpy.float32'>}
dtype = <class 'numpy.float32'>

    @_wraps_partial(impl, name)
    def test_func(self, *args, **kw):
        for dtype in dtypes:
            try:
                kw[name] = numpy.dtype(dtype).type
>               impl(self, *args, **kw)

cupy/testing/_helper.py:825: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
cupy/testing/_helper.py:343: in test_func
    check_func(cupy_r, numpy_r)
cupy/testing/_helper.py:495: in check_func
    _array.assert_allclose(c, n, rtol1, atol1, err_msg, verbose)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

actual = array([[[-6.23873319e-04],
        [-6.52701594e-04],
        [-5.34185849e-04],
        [-7.05319864e-04],
        [-...   [-2.50156190e-05],
        [ 9.55036171e-07],
        [-1.27298597e-06],
        [-4.17136789e-06]]], dtype=float32)
desired = array([[[ 2.1000416e-16],
        [-7.7505151e-16],
        [-6.6172874e-17],
        [-6.5140899e-16],
        [ 7.95...       [-1.5922411e-17],
        [ 3.1236140e-17],
        [-5.3157008e-17],
        [-1.3124647e-17]]], dtype=float32)
rtol = 1e-07, atol = 1e-05, err_msg = '', verbose = True

    def assert_allclose(actual, desired, rtol=1e-7, atol=0, err_msg='',
                        verbose=True):
        """Raises an AssertionError if objects are not equal up to desired tolerance.
    
        Args:
             actual(numpy.ndarray or cupy.ndarray): The actual object to check.
             desired(numpy.ndarray or cupy.ndarray): The desired, expected object.
             rtol(float): Relative tolerance.
             atol(float): Absolute tolerance.
             err_msg(str): The error message to be printed in case of failure.
             verbose(bool): If ``True``, the conflicting
                 values are appended to the error message.
    
        .. seealso:: :func:`numpy.testing.assert_allclose`
    
        """  # NOQA
>       numpy.testing.assert_allclose(
            cupy.asnumpy(actual), cupy.asnumpy(desired),
            rtol=rtol, atol=atol, err_msg=err_msg, verbose=verbose)
E       AssertionError: 
E       Not equal to tolerance rtol=1e-07, atol=1e-05
E       
E       Mismatched elements: 85 / 100 (85%)
E       Max absolute difference: 0.00084527
E       Max relative difference: 1.881553e+13
E        x: array([[[-6.238733e-04],
E               [-6.527016e-04],
E               [-5.341858e-04],...
E        y: array([[[ 2.100042e-16],
E               [-7.750515e-16],
E               [-6.617287e-17],...

cupy/testing/_array.py:24: AssertionError
----------------------------- Captured stdout call -----------------------------
dtype is <class 'numpy.float32'>
_ TestZoomOutputSize1.test_zoom_output_size1[_param_22_{grid_mode=False, mode='wrap', order=4, shape=(5, 5, 2), zoom=(2, 2, 0.5)}] _

self = <<cupyx_tests.scipy_tests.ndimage_tests.test_interpolation.TestZoomOutputSize1 object at 0x7fd7027ec1c0>  parameter: {'grid_mode': False, 'mode': 'wrap', 'order': 4, 'shape': (5, 5, 2), 'zoom': (2, 2, 0.5)}>
args = (), kw = {'dtype': <class 'numpy.float32'>}
dtype = <class 'numpy.float32'>

    @_wraps_partial(impl, name)
    def test_func(self, *args, **kw):
        for dtype in dtypes:
            try:
                kw[name] = numpy.dtype(dtype).type
>               impl(self, *args, **kw)

cupy/testing/_helper.py:825: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
cupy/testing/_helper.py:343: in test_func
    check_func(cupy_r, numpy_r)
cupy/testing/_helper.py:495: in check_func
    _array.assert_allclose(c, n, rtol1, atol1, err_msg, verbose)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

actual = array([[[-9.26215027e-04],
        [-7.12910551e-05],
        [-1.04548770e-03],
        [ 6.02170185e-04],
        [ ...   [-1.58413204e-05],
        [-2.26292832e-05],
        [-1.52809316e-05],
        [-2.62873400e-05]]], dtype=float32)
desired = array([[[-1.91677706e-16],
        [ 6.02007280e-16],
        [ 7.39644969e-18],
        [ 9.42839520e-17],
        [-...   [ 2.49078413e-18],
        [-6.86374620e-18],
        [-2.01807717e-17],
        [-1.36889723e-17]]], dtype=float32)
rtol = 1e-07, atol = 1e-05, err_msg = '', verbose = True

    def assert_allclose(actual, desired, rtol=1e-7, atol=0, err_msg='',
                        verbose=True):
        """Raises an AssertionError if objects are not equal up to desired tolerance.
    
        Args:
             actual(numpy.ndarray or cupy.ndarray): The actual object to check.
             desired(numpy.ndarray or cupy.ndarray): The desired, expected object.
             rtol(float): Relative tolerance.
             atol(float): Absolute tolerance.
             err_msg(str): The error message to be printed in case of failure.
             verbose(bool): If ``True``, the conflicting
                 values are appended to the error message.
    
        .. seealso:: :func:`numpy.testing.assert_allclose`
    
        """  # NOQA
>       numpy.testing.assert_allclose(
            cupy.asnumpy(actual), cupy.asnumpy(desired),
            rtol=rtol, atol=atol, err_msg=err_msg, verbose=verbose)
E       AssertionError: 
E       Not equal to tolerance rtol=1e-07, atol=1e-05
E       
E       Mismatched elements: 95 / 100 (95%)
E       Max absolute difference: 0.00124037
E       Max relative difference: 1.6367563e+14
E        x: array([[[-9.262150e-04],
E               [-7.129106e-05],
E               [-1.045488e-03],...
E        y: array([[[-1.916777e-16],
E               [ 6.020073e-16],
E               [ 7.396450e-18],...

cupy/testing/_array.py:24: AssertionError
----------------------------- Captured stdout call -----------------------------
dtype is <class 'numpy.float32'>
_ TestZoomOutputSize1.test_zoom_output_size1[_param_23_{grid_mode=False, mode='wrap', order=5, shape=(5, 5, 2), zoom=(2, 2, 0.5)}] _

self = <<cupyx_tests.scipy_tests.ndimage_tests.test_interpolation.TestZoomOutputSize1 object at 0x7fd702700a30>  parameter: {'grid_mode': False, 'mode': 'wrap', 'order': 5, 'shape': (5, 5, 2), 'zoom': (2, 2, 0.5)}>
args = (), kw = {'dtype': <class 'numpy.float32'>}
dtype = <class 'numpy.float32'>

    @_wraps_partial(impl, name)
    def test_func(self, *args, **kw):
        for dtype in dtypes:
            try:
                kw[name] = numpy.dtype(dtype).type
>               impl(self, *args, **kw)

cupy/testing/_helper.py:825: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
cupy/testing/_helper.py:343: in test_func
    check_func(cupy_r, numpy_r)
cupy/testing/_helper.py:495: in check_func
    _array.assert_allclose(c, n, rtol1, atol1, err_msg, verbose)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

actual = array([[[-6.23873319e-04],
        [-6.52701594e-04],
        [-5.34185849e-04],
        [-7.05319864e-04],
        [-...   [-2.50156190e-05],
        [ 9.55036171e-07],
        [-1.27298597e-06],
        [-4.17136789e-06]]], dtype=float32)
desired = array([[[ 2.1000416e-16],
        [-7.7505151e-16],
        [-6.6172874e-17],
        [-6.5140899e-16],
        [ 7.95...       [-1.5922411e-17],
        [ 3.1236140e-17],
        [-5.3157008e-17],
        [-1.3124647e-17]]], dtype=float32)
rtol = 1e-07, atol = 1e-05, err_msg = '', verbose = True

    def assert_allclose(actual, desired, rtol=1e-7, atol=0, err_msg='',
                        verbose=True):
        """Raises an AssertionError if objects are not equal up to desired tolerance.
    
        Args:
             actual(numpy.ndarray or cupy.ndarray): The actual object to check.
             desired(numpy.ndarray or cupy.ndarray): The desired, expected object.
             rtol(float): Relative tolerance.
             atol(float): Absolute tolerance.
             err_msg(str): The error message to be printed in case of failure.
             verbose(bool): If ``True``, the conflicting
                 values are appended to the error message.
    
        .. seealso:: :func:`numpy.testing.assert_allclose`
    
        """  # NOQA
>       numpy.testing.assert_allclose(
            cupy.asnumpy(actual), cupy.asnumpy(desired),
            rtol=rtol, atol=atol, err_msg=err_msg, verbose=verbose)
E       AssertionError: 
E       Not equal to tolerance rtol=1e-07, atol=1e-05
E       
E       Mismatched elements: 85 / 100 (85%)
E       Max absolute difference: 0.00084527
E       Max relative difference: 1.881553e+13
E        x: array([[[-6.238733e-04],
E               [-6.527016e-04],
E               [-5.341858e-04],...
E        y: array([[[ 2.100042e-16],
E               [-7.750515e-16],
E               [-6.617287e-17],...

cupy/testing/_array.py:24: AssertionError
----------------------------- Captured stdout call -----------------------------
dtype is <class 'numpy.float32'>
_ TestZoomOutputSize1.test_zoom_output_size1[_param_46_{grid_mode=False, mode='grid-constant', order=4, shape=(5, 5, 2), zoom=(2, 2, 0.5)}] _

self = <<cupyx_tests.scipy_tests.ndimage_tests.test_interpolation.TestZoomOutputSize1 object at 0x7fd7034079d0>  parameter: {'grid_mode': False, 'mode': 'grid-constant', 'order': 4, 'shape': (5, 5, 2), 'zoom': (2, 2, 0.5)}>
args = (), kw = {'dtype': <class 'numpy.float32'>}
dtype = <class 'numpy.float32'>

    @_wraps_partial(impl, name)
    def test_func(self, *args, **kw):
        for dtype in dtypes:
            try:
                kw[name] = numpy.dtype(dtype).type
>               impl(self, *args, **kw)

cupy/testing/_helper.py:825: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
cupy/testing/_helper.py:343: in test_func
    check_func(cupy_r, numpy_r)
cupy/testing/_helper.py:495: in check_func
    _array.assert_allclose(c, n, rtol1, atol1, err_msg, verbose)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

actual = array([[[-1.6466675e-04],
        [-3.1765160e-06],
        [-2.8256103e-04],
        [ 1.0465207e-04],
        [-5.02...       [-1.4928388e-06],
        [-5.8970027e-06],
        [-2.4932410e-06],
        [-3.5395026e-06]]], dtype=float32)
desired = array([[[-8.12850668e-17],
        [-9.62678620e-17],
        [-7.64445911e-17],
        [ 6.90388762e-17],
        [-...   [-1.31306278e-18],
        [-2.34584224e-18],
        [-1.16198641e-18],
        [-3.16820747e-19]]], dtype=float32)
rtol = 1e-07, atol = 1e-05, err_msg = '', verbose = True

    def assert_allclose(actual, desired, rtol=1e-7, atol=0, err_msg='',
                        verbose=True):
        """Raises an AssertionError if objects are not equal up to desired tolerance.
    
        Args:
             actual(numpy.ndarray or cupy.ndarray): The actual object to check.
             desired(numpy.ndarray or cupy.ndarray): The desired, expected object.
             rtol(float): Relative tolerance.
             atol(float): Absolute tolerance.
             err_msg(str): The error message to be printed in case of failure.
             verbose(bool): If ``True``, the conflicting
                 values are appended to the error message.
    
        .. seealso:: :func:`numpy.testing.assert_allclose`
    
        """  # NOQA
>       numpy.testing.assert_allclose(
            cupy.asnumpy(actual), cupy.asnumpy(desired),
            rtol=rtol, atol=atol, err_msg=err_msg, verbose=verbose)
E       AssertionError: 
E       Not equal to tolerance rtol=1e-07, atol=1e-05
E       
E       Mismatched elements: 75 / 100 (75%)
E       Max absolute difference: 0.00034115
E       Max relative difference: 2.5044335e+14
E        x: array([[[-1.646668e-04],
E               [-3.176516e-06],
E               [-2.825610e-04],...
E        y: array([[[-8.128507e-17],
E               [-9.626786e-17],
E               [-7.644459e-17],...

cupy/testing/_array.py:24: AssertionError
----------------------------- Captured stdout call -----------------------------
dtype is <class 'numpy.float32'>
_ TestZoomOutputSize1.test_zoom_output_size1[_param_47_{grid_mode=False, mode='grid-constant', order=5, shape=(5, 5, 2), zoom=(2, 2, 0.5)}] _

self = <<cupyx_tests.scipy_tests.ndimage_tests.test_interpolation.TestZoomOutputSize1 object at 0x7fd7026f6250>  parameter: {'grid_mode': False, 'mode': 'grid-constant', 'order': 5, 'shape': (5, 5, 2), 'zoom': (2, 2, 0.5)}>
args = (), kw = {'dtype': <class 'numpy.float32'>}
dtype = <class 'numpy.float32'>

    @_wraps_partial(impl, name)
    def test_func(self, *args, **kw):
        for dtype in dtypes:
            try:
                kw[name] = numpy.dtype(dtype).type
>               impl(self, *args, **kw)

cupy/testing/_helper.py:825: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
cupy/testing/_helper.py:343: in test_func
    check_func(cupy_r, numpy_r)
cupy/testing/_helper.py:495: in check_func
    _array.assert_allclose(c, n, rtol1, atol1, err_msg, verbose)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

actual = array([[[ 1.46576144e-06],
        [-1.07652804e-05],
        [ 1.48250510e-05],
        [-2.88788979e-05],
        [-...   [ 3.59045725e-06],
        [ 3.90473633e-06],
        [ 2.02454498e-06],
        [ 1.08106917e-06]]], dtype=float32)
desired = array([[[-5.28892732e-17],
        [-4.68497761e-17],
        [-1.70810335e-16],
        [-1.91986781e-16],
        [-...   [-3.94138989e-18],
        [-8.65396191e-18],
        [ 1.07858407e-18],
        [-2.29544853e-18]]], dtype=float32)
rtol = 1e-07, atol = 1e-05, err_msg = '', verbose = True

    def assert_allclose(actual, desired, rtol=1e-7, atol=0, err_msg='',
                        verbose=True):
        """Raises an AssertionError if objects are not equal up to desired tolerance.
    
        Args:
             actual(numpy.ndarray or cupy.ndarray): The actual object to check.
             desired(numpy.ndarray or cupy.ndarray): The desired, expected object.
             rtol(float): Relative tolerance.
             atol(float): Absolute tolerance.
             err_msg(str): The error message to be printed in case of failure.
             verbose(bool): If ``True``, the conflicting
                 values are appended to the error message.
    
        .. seealso:: :func:`numpy.testing.assert_allclose`
    
        """  # NOQA
>       numpy.testing.assert_allclose(
            cupy.asnumpy(actual), cupy.asnumpy(desired),
            rtol=rtol, atol=atol, err_msg=err_msg, verbose=verbose)
E       AssertionError: 
E       Not equal to tolerance rtol=1e-07, atol=1e-05
E       
E       Mismatched elements: 40 / 100 (40%)
E       Max absolute difference: 0.00011814
E       Max relative difference: 9.6834375e+13
E        x: array([[[ 1.465761e-06],
E               [-1.076528e-05],
E               [ 1.482505e-05],...
E        y: array([[[-5.288927e-17],
E               [-4.684978e-17],
E               [-1.708103e-16],...

cupy/testing/_array.py:24: AssertionError
----------------------------- Captured stdout call -----------------------------
dtype is <class 'numpy.float32'>
_ TestZoomOutputSize1.test_zoom_output_size1[_param_52_{grid_mode=True, mode='constant', order=4, shape=(5, 5, 2), zoom=(2, 2, 0.5)}] _

self = <<cupyx_tests.scipy_tests.ndimage_tests.test_interpolation.TestZoomOutputSize1 object at 0x7fd702448730>  parameter: {'grid_mode': True, 'mode': 'constant', 'order': 4, 'shape': (5, 5, 2), 'zoom': (2, 2, 0.5)}>
args = (), kw = {'dtype': <class 'numpy.float64'>}
dtype = <class 'numpy.float64'>

    @_wraps_partial(impl, name)
    def test_func(self, *args, **kw):
        for dtype in dtypes:
            try:
                kw[name] = numpy.dtype(dtype).type
>               impl(self, *args, **kw)

cupy/testing/_helper.py:825: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
cupy/testing/_helper.py:343: in test_func
    check_func(cupy_r, numpy_r)
cupy/testing/_helper.py:495: in check_func
    _array.assert_allclose(c, n, rtol1, atol1, err_msg, verbose)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

actual = array([[[   0.        ],
        [   0.        ],
        [   0.        ],
        [   0.        ],
        [   0.    ... [   0.        ],
        [   0.        ],
        [   0.        ],
        [   0.        ],
        [   0.        ]]])
desired = array([[[ 0.00000000e+00],
        [ 0.00000000e+00],
        [ 0.00000000e+00],
        [ 0.00000000e+00],
        [ ...000e+00],
        [ 0.00000000e+00],
        [ 0.00000000e+00],
        [ 0.00000000e+00],
        [ 0.00000000e+00]]])
rtol = 1e-07, atol = 1e-05, err_msg = '', verbose = True

    def assert_allclose(actual, desired, rtol=1e-7, atol=0, err_msg='',
                        verbose=True):
        """Raises an AssertionError if objects are not equal up to desired tolerance.
    
        Args:
             actual(numpy.ndarray or cupy.ndarray): The actual object to check.
             desired(numpy.ndarray or cupy.ndarray): The desired, expected object.
             rtol(float): Relative tolerance.
             atol(float): Absolute tolerance.
             err_msg(str): The error message to be printed in case of failure.
             verbose(bool): If ``True``, the conflicting
                 values are appended to the error message.
    
        .. seealso:: :func:`numpy.testing.assert_allclose`
    
        """  # NOQA
>       numpy.testing.assert_allclose(
            cupy.asnumpy(actual), cupy.asnumpy(desired),
            rtol=rtol, atol=atol, err_msg=err_msg, verbose=verbose)
E       AssertionError: 
E       Not equal to tolerance rtol=1e-07, atol=1e-05
E       
E       Mismatched elements: 64 / 100 (64%)
E       Max absolute difference: 2336.52632552
E       Max relative difference: 629887.8879561
E        x: array([[[   0.      ],
E               [   0.      ],
E               [   0.      ],...
E        y: array([[[ 0.000000e+00],
E               [ 0.000000e+00],
E               [ 0.000000e+00],...

cupy/testing/_array.py:24: AssertionError
----------------------------- Captured stdout call -----------------------------
dtype is <class 'numpy.float64'>
_ TestZoomOutputSize1.test_zoom_output_size1[_param_53_{grid_mode=True, mode='constant', order=5, shape=(5, 5, 2), zoom=(2, 2, 0.5)}] _

self = <<cupyx_tests.scipy_tests.ndimage_tests.test_interpolation.TestZoomOutputSize1 object at 0x7fd70244f2e0>  parameter: {'grid_mode': True, 'mode': 'constant', 'order': 5, 'shape': (5, 5, 2), 'zoom': (2, 2, 0.5)}>
args = (), kw = {'dtype': <class 'numpy.float64'>}
dtype = <class 'numpy.float64'>

    @_wraps_partial(impl, name)
    def test_func(self, *args, **kw):
        for dtype in dtypes:
            try:
                kw[name] = numpy.dtype(dtype).type
>               impl(self, *args, **kw)

cupy/testing/_helper.py:825: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
cupy/testing/_helper.py:343: in test_func
    check_func(cupy_r, numpy_r)
cupy/testing/_helper.py:495: in check_func
    _array.assert_allclose(c, n, rtol1, atol1, err_msg, verbose)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

actual = array([[[ 0.00000000e+00],
        [ 0.00000000e+00],
        [ 0.00000000e+00],
        [ 0.00000000e+00],
        [ ...000e+00],
        [ 0.00000000e+00],
        [ 0.00000000e+00],
        [ 0.00000000e+00],
        [ 0.00000000e+00]]])
desired = array([[[ 0.00000000e+00],
        [ 0.00000000e+00],
        [ 0.00000000e+00],
        [ 0.00000000e+00],
        [ ...000e+00],
        [ 0.00000000e+00],
        [ 0.00000000e+00],
        [ 0.00000000e+00],
        [ 0.00000000e+00]]])
rtol = 1e-07, atol = 1e-05, err_msg = '', verbose = True

    def assert_allclose(actual, desired, rtol=1e-7, atol=0, err_msg='',
                        verbose=True):
        """Raises an AssertionError if objects are not equal up to desired tolerance.
    
        Args:
             actual(numpy.ndarray or cupy.ndarray): The actual object to check.
             desired(numpy.ndarray or cupy.ndarray): The desired, expected object.
             rtol(float): Relative tolerance.
             atol(float): Absolute tolerance.
             err_msg(str): The error message to be printed in case of failure.
             verbose(bool): If ``True``, the conflicting
                 values are appended to the error message.
    
        .. seealso:: :func:`numpy.testing.assert_allclose`
    
        """  # NOQA
>       numpy.testing.assert_allclose(
            cupy.asnumpy(actual), cupy.asnumpy(desired),
            rtol=rtol, atol=atol, err_msg=err_msg, verbose=verbose)
E       AssertionError: 
E       Not equal to tolerance rtol=1e-07, atol=1e-05
E       
E       Mismatched elements: 64 / 100 (64%)
E       Max absolute difference: 233.83963068
E       Max relative difference: 148867.79248851
E        x: array([[[ 0.000000e+00],
E               [ 0.000000e+00],
E               [ 0.000000e+00],...
E        y: array([[[ 0.000000e+00],
E               [ 0.000000e+00],
E               [ 0.000000e+00],...

cupy/testing/_array.py:24: AssertionError
----------------------------- Captured stdout call -----------------------------
dtype is <class 'numpy.float64'>
_ TestZoomOutputSize1.test_zoom_output_size1[_param_64_{grid_mode=True, mode='mirror', order=4, shape=(5, 5, 2), zoom=(2, 2, 0.5)}] _

self = <<cupyx_tests.scipy_tests.ndimage_tests.test_interpolation.TestZoomOutputSize1 object at 0x7fd7026b6130>  parameter: {'grid_mode': True, 'mode': 'mirror', 'order': 4, 'shape': (5, 5, 2), 'zoom': (2, 2, 0.5)}>
args = (), kw = {'dtype': <class 'numpy.float64'>}
dtype = <class 'numpy.float64'>

    @_wraps_partial(impl, name)
    def test_func(self, *args, **kw):
        for dtype in dtypes:
            try:
                kw[name] = numpy.dtype(dtype).type
>               impl(self, *args, **kw)

cupy/testing/_helper.py:825: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
cupy/testing/_helper.py:343: in test_func
    check_func(cupy_r, numpy_r)
cupy/testing/_helper.py:495: in check_func
    _array.assert_allclose(c, n, rtol1, atol1, err_msg, verbose)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

actual = array([[[  48.82195577],
        [  48.82195577],
        [ 290.39318135],
        [ 337.78017528],
        [ 112.1240... [ -53.24969236],
        [ -21.88859247],
        [  44.15090669],
        [  53.29762289],
        [  53.29762289]]])
desired = array([[[ 8.54663183e-03],
        [ 8.54663183e-03],
        [ 5.30645857e-02],
        [ 6.15797757e-02],
        [ ...126e-03],
        [-5.57818230e-04],
        [ 2.89445841e-04],
        [ 8.46143247e-05],
        [ 8.46143247e-05]]])
rtol = 1e-07, atol = 1e-05, err_msg = '', verbose = True

    def assert_allclose(actual, desired, rtol=1e-7, atol=0, err_msg='',
                        verbose=True):
        """Raises an AssertionError if objects are not equal up to desired tolerance.
    
        Args:
             actual(numpy.ndarray or cupy.ndarray): The actual object to check.
             desired(numpy.ndarray or cupy.ndarray): The desired, expected object.
             rtol(float): Relative tolerance.
             atol(float): Absolute tolerance.
             err_msg(str): The error message to be printed in case of failure.
             verbose(bool): If ``True``, the conflicting
                 values are appended to the error message.
    
        .. seealso:: :func:`numpy.testing.assert_allclose`
    
        """  # NOQA
>       numpy.testing.assert_allclose(
            cupy.asnumpy(actual), cupy.asnumpy(desired),
            rtol=rtol, atol=atol, err_msg=err_msg, verbose=verbose)
E       AssertionError: 
E       Not equal to tolerance rtol=1e-07, atol=1e-05
E       
E       Mismatched elements: 100 / 100 (100%)
E       Max absolute difference: 2336.52632552
E       Max relative difference: 629887.88795612
E        x: array([[[  48.821956],
E               [  48.821956],
E               [ 290.393181],...
E        y: array([[[ 8.546632e-03],
E               [ 8.546632e-03],
E               [ 5.306459e-02],...

cupy/testing/_array.py:24: AssertionError
----------------------------- Captured stdout call -----------------------------
dtype is <class 'numpy.float64'>
_ TestZoomOutputSize1.test_zoom_output_size1[_param_65_{grid_mode=True, mode='mirror', order=5, shape=(5, 5, 2), zoom=(2, 2, 0.5)}] _

self = <<cupyx_tests.scipy_tests.ndimage_tests.test_interpolation.TestZoomOutputSize1 object at 0x7fd70266ac10>  parameter: {'grid_mode': True, 'mode': 'mirror', 'order': 5, 'shape': (5, 5, 2), 'zoom': (2, 2, 0.5)}>
args = (), kw = {'dtype': <class 'numpy.float64'>}
dtype = <class 'numpy.float64'>

    @_wraps_partial(impl, name)
    def test_func(self, *args, **kw):
        for dtype in dtypes:
            try:
                kw[name] = numpy.dtype(dtype).type
>               impl(self, *args, **kw)

cupy/testing/_helper.py:825: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
cupy/testing/_helper.py:343: in test_func
    check_func(cupy_r, numpy_r)
cupy/testing/_helper.py:495: in check_func
    _array.assert_allclose(c, n, rtol1, atol1, err_msg, verbose)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

actual = array([[[ 4.71685805e+00],
        [ 4.71685805e+00],
        [ 2.76221015e+01],
        [ 3.32433453e+01],
        [ ...958e+00],
        [-1.62349834e+00],
        [ 1.50933488e+01],
        [ 1.97919669e+01],
        [ 1.97919669e+01]]])
desired = array([[[ 8.60075856e-03],
        [ 8.60075856e-03],
        [ 5.25533883e-02],
        [ 6.23449044e-02],
        [ ...600e-03],
        [-8.00397905e-04],
        [ 4.16976616e-04],
        [ 1.32949066e-04],
        [ 1.32949066e-04]]])
rtol = 1e-07, atol = 1e-05, err_msg = '', verbose = True

    def assert_allclose(actual, desired, rtol=1e-7, atol=0, err_msg='',
                        verbose=True):
        """Raises an AssertionError if objects are not equal up to desired tolerance.
    
        Args:
             actual(numpy.ndarray or cupy.ndarray): The actual object to check.
             desired(numpy.ndarray or cupy.ndarray): The desired, expected object.
             rtol(float): Relative tolerance.
             atol(float): Absolute tolerance.
             err_msg(str): The error message to be printed in case of failure.
             verbose(bool): If ``True``, the conflicting
                 values are appended to the error message.
    
        .. seealso:: :func:`numpy.testing.assert_allclose`
    
        """  # NOQA
>       numpy.testing.assert_allclose(
            cupy.asnumpy(actual), cupy.asnumpy(desired),
            rtol=rtol, atol=atol, err_msg=err_msg, verbose=verbose)
E       AssertionError: 
E       Not equal to tolerance rtol=1e-07, atol=1e-05
E       
E       Mismatched elements: 100 / 100 (100%)
E       Max absolute difference: 233.83963068
E       Max relative difference: 148867.79248854
E        x: array([[[ 4.716858e+00],
E               [ 4.716858e+00],
E               [ 2.762210e+01],...
E        y: array([[[ 8.600759e-03],
E               [ 8.600759e-03],
E               [ 5.255339e-02],...

cupy/testing/_array.py:24: AssertionError
----------------------------- Captured stdout call -----------------------------
dtype is <class 'numpy.float64'>
_ TestZoomOutputSize1.test_zoom_output_size1[_param_70_{grid_mode=True, mode='wrap', order=4, shape=(5, 5, 2), zoom=(2, 2, 0.5)}] _

self = <<cupyx_tests.scipy_tests.ndimage_tests.test_interpolation.TestZoomOutputSize1 object at 0x7fd7027efb50>  parameter: {'grid_mode': True, 'mode': 'wrap', 'order': 4, 'shape': (5, 5, 2), 'zoom': (2, 2, 0.5)}>
args = (), kw = {'dtype': <class 'numpy.float64'>}
dtype = <class 'numpy.float64'>

    @_wraps_partial(impl, name)
    def test_func(self, *args, **kw):
        for dtype in dtypes:
            try:
                kw[name] = numpy.dtype(dtype).type
>               impl(self, *args, **kw)

cupy/testing/_helper.py:825: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
cupy/testing/_helper.py:343: in test_func
    check_func(cupy_r, numpy_r)
cupy/testing/_helper.py:495: in check_func
    _array.assert_allclose(c, n, rtol1, atol1, err_msg, verbose)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

actual = array([[[  53.29762289],
        [  51.0107262 ],
        [ 303.41199632],
        [ 352.92342892],
        [ 117.1507... [ -50.96485228],
        [ -20.9493958 ],
        [  42.25647769],
        [  51.0107262 ],
        [  48.82195577]]])
desired = array([[[ 8.46143247e-05],
        [ 8.50392545e-04],
        [ 5.27994291e-03],
        [ 6.12720698e-03],
        [ ...636e-02],
        [-5.60619571e-03],
        [ 2.90899427e-03],
        [ 8.50392545e-04],
        [ 8.54663183e-03]]])
rtol = 1e-07, atol = 1e-05, err_msg = '', verbose = True

    def assert_allclose(actual, desired, rtol=1e-7, atol=0, err_msg='',
                        verbose=True):
        """Raises an AssertionError if objects are not equal up to desired tolerance.
    
        Args:
             actual(numpy.ndarray or cupy.ndarray): The actual object to check.
             desired(numpy.ndarray or cupy.ndarray): The desired, expected object.
             rtol(float): Relative tolerance.
             atol(float): Absolute tolerance.
             err_msg(str): The error message to be printed in case of failure.
             verbose(bool): If ``True``, the conflicting
                 values are appended to the error message.
    
        .. seealso:: :func:`numpy.testing.assert_allclose`
    
        """  # NOQA
>       numpy.testing.assert_allclose(
            cupy.asnumpy(actual), cupy.asnumpy(desired),
            rtol=rtol, atol=atol, err_msg=err_msg, verbose=verbose)
E       AssertionError: 
E       Not equal to tolerance rtol=1e-07, atol=1e-05
E       
E       Mismatched elements: 100 / 100 (100%)
E       Max absolute difference: 2336.52632552
E       Max relative difference: 629887.8879561
E        x: array([[[  53.297623],
E               [  51.010726],
E               [ 303.411996],...
E        y: array([[[ 8.461432e-05],
E               [ 8.503925e-04],
E               [ 5.279943e-03],...

cupy/testing/_array.py:24: AssertionError
----------------------------- Captured stdout call -----------------------------
dtype is <class 'numpy.float64'>
_ TestZoomOutputSize1.test_zoom_output_size1[_param_71_{grid_mode=True, mode='wrap', order=5, shape=(5, 5, 2), zoom=(2, 2, 0.5)}] _

self = <<cupyx_tests.scipy_tests.ndimage_tests.test_interpolation.TestZoomOutputSize1 object at 0x7fd7026c8fd0>  parameter: {'grid_mode': True, 'mode': 'wrap', 'order': 5, 'shape': (5, 5, 2), 'zoom': (2, 2, 0.5)}>
args = (), kw = {'dtype': <class 'numpy.float64'>}
dtype = <class 'numpy.float64'>

    @_wraps_partial(impl, name)
    def test_func(self, *args, **kw):
        for dtype in dtypes:
            try:
                kw[name] = numpy.dtype(dtype).type
>               impl(self, *args, **kw)

cupy/testing/_helper.py:825: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
cupy/testing/_helper.py:343: in test_func
    check_func(cupy_r, numpy_r)
cupy/testing/_helper.py:495: in check_func
    _array.assert_allclose(c, n, rtol1, atol1, err_msg, verbose)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

actual = array([[[ 1.97919669e+01],
        [ 9.66208561e+00],
        [ 5.65815436e+01],
        [ 6.80961870e+01],
        [ ...577e+00],
        [-7.92562963e-01],
        [ 7.36830399e+00],
        [ 9.66208561e+00],
        [ 4.71685805e+00]]])
desired = array([[[ 1.32949066e-04],
        [ 1.06932821e-03],
        [ 6.53393769e-03],
        [ 7.75131221e-03],
        [ ...718e-02],
        [-6.43771396e-03],
        [ 3.35380211e-03],
        [ 1.06932821e-03],
        [ 8.60075856e-03]]])
rtol = 1e-07, atol = 1e-05, err_msg = '', verbose = True

    def assert_allclose(actual, desired, rtol=1e-7, atol=0, err_msg='',
                        verbose=True):
        """Raises an AssertionError if objects are not equal up to desired tolerance.
    
        Args:
             actual(numpy.ndarray or cupy.ndarray): The actual object to check.
             desired(numpy.ndarray or cupy.ndarray): The desired, expected object.
             rtol(float): Relative tolerance.
             atol(float): Absolute tolerance.
             err_msg(str): The error message to be printed in case of failure.
             verbose(bool): If ``True``, the conflicting
                 values are appended to the error message.
    
        .. seealso:: :func:`numpy.testing.assert_allclose`
    
        """  # NOQA
>       numpy.testing.assert_allclose(
            cupy.asnumpy(actual), cupy.asnumpy(desired),
            rtol=rtol, atol=atol, err_msg=err_msg, verbose=verbose)
E       AssertionError: 
E       Not equal to tolerance rtol=1e-07, atol=1e-05
E       
E       Mismatched elements: 100 / 100 (100%)
E       Max absolute difference: 233.83963068
E       Max relative difference: 148867.79248851
E        x: array([[[ 1.979197e+01],
E               [ 9.662086e+00],
E               [ 5.658154e+01],...
E        y: array([[[ 1.329491e-04],
E               [ 1.069328e-03],
E               [ 6.533938e-03],...

cupy/testing/_array.py:24: AssertionError
----------------------------- Captured stdout call -----------------------------
dtype is <class 'numpy.float64'>
_ TestZoomOutputSize1.test_zoom_output_size1[_param_94_{grid_mode=True, mode='grid-constant', order=4, shape=(5, 5, 2), zoom=(2, 2, 0.5)}] _

self = <<cupyx_tests.scipy_tests.ndimage_tests.test_interpolation.TestZoomOutputSize1 object at 0x7fd7026f5be0>  parameter: {'grid_mode': True, 'mode': 'grid-constant', 'order': 4, 'shape': (5, 5, 2), 'zoom': (2, 2, 0.5)}>
args = (), kw = {'dtype': <class 'numpy.float64'>}
dtype = <class 'numpy.float64'>

    @_wraps_partial(impl, name)
    def test_func(self, *args, **kw):
        for dtype in dtypes:
            try:
                kw[name] = numpy.dtype(dtype).type
>               impl(self, *args, **kw)

cupy/testing/_helper.py:825: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
cupy/testing/_helper.py:343: in test_func
    check_func(cupy_r, numpy_r)
cupy/testing/_helper.py:495: in check_func
    _array.assert_allclose(c, n, rtol1, atol1, err_msg, verbose)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

actual = array([[[ 5.63055219e+01],
        [-1.22528405e+02],
        [-3.83476709e+02],
        [-3.83476709e+02],
        [-...021e+00],
        [ 4.40535983e+00],
        [-2.69124172e+00],
        [-1.59183812e+00],
        [ 9.72456581e-01]]])
desired = array([[[ 1.27949283e-02],
        [-2.43606830e-02],
        [-7.91692940e-02],
        [-7.91692940e-02],
        [-...333e-03],
        [ 9.13158865e-04],
        [-5.54269262e-04],
        [-3.27391850e-04],
        [ 1.99955080e-04]]])
rtol = 1e-07, atol = 1e-05, err_msg = '', verbose = True

    def assert_allclose(actual, desired, rtol=1e-7, atol=0, err_msg='',
                        verbose=True):
        """Raises an AssertionError if objects are not equal up to desired tolerance.
    
        Args:
             actual(numpy.ndarray or cupy.ndarray): The actual object to check.
             desired(numpy.ndarray or cupy.ndarray): The desired, expected object.
             rtol(float): Relative tolerance.
             atol(float): Absolute tolerance.
             err_msg(str): The error message to be printed in case of failure.
             verbose(bool): If ``True``, the conflicting
                 values are appended to the error message.
    
        .. seealso:: :func:`numpy.testing.assert_allclose`
    
        """  # NOQA
>       numpy.testing.assert_allclose(
            cupy.asnumpy(actual), cupy.asnumpy(desired),
            rtol=rtol, atol=atol, err_msg=err_msg, verbose=verbose)
E       AssertionError: 
E       Not equal to tolerance rtol=1e-07, atol=1e-05
E       
E       Mismatched elements: 100 / 100 (100%)
E       Max absolute difference: 2611.23242921
E       Max relative difference: 5747.85704324
E        x: array([[[ 5.630552e+01],
E               [-1.225284e+02],
E               [-3.834767e+02],...
E        y: array([[[ 1.279493e-02],
E               [-2.436068e-02],
E               [-7.916929e-02],...

cupy/testing/_array.py:24: AssertionError
----------------------------- Captured stdout call -----------------------------
dtype is <class 'numpy.float64'>
_ TestZoomOutputSize1.test_zoom_output_size1[_param_95_{grid_mode=True, mode='grid-constant', order=5, shape=(5, 5, 2), zoom=(2, 2, 0.5)}] _

self = <<cupyx_tests.scipy_tests.ndimage_tests.test_interpolation.TestZoomOutputSize1 object at 0x7fd7026f6b80>  parameter: {'grid_mode': True, 'mode': 'grid-constant', 'order': 5, 'shape': (5, 5, 2), 'zoom': (2, 2, 0.5)}>
args = (), kw = {'dtype': <class 'numpy.float64'>}
dtype = <class 'numpy.float64'>

    @_wraps_partial(impl, name)
    def test_func(self, *args, **kw):
        for dtype in dtypes:
            try:
                kw[name] = numpy.dtype(dtype).type
>               impl(self, *args, **kw)

cupy/testing/_helper.py:825: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
cupy/testing/_helper.py:343: in test_func
    check_func(cupy_r, numpy_r)
cupy/testing/_helper.py:495: in check_func
    _array.assert_allclose(c, n, rtol1, atol1, err_msg, verbose)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

actual = array([[[ 4.16965077e+00],
        [-1.18699209e+01],
        [-3.36177788e+01],
        [-3.36177788e+01],
        [-...671e-01],
        [ 6.07624141e-01],
        [-3.96545295e-01],
        [-2.61764771e-01],
        [ 1.70742628e-01]]])
desired = array([[[ 1.44354197e-02],
        [-2.67893098e-02],
        [-8.45564959e-02],
        [-8.45564959e-02],
        [-...699e-03],
        [ 1.49724992e-03],
        [-9.55056276e-04],
        [-6.25982935e-04],
        [ 4.07383783e-04]]])
rtol = 1e-07, atol = 1e-05, err_msg = '', verbose = True

    def assert_allclose(actual, desired, rtol=1e-7, atol=0, err_msg='',
                        verbose=True):
        """Raises an AssertionError if objects are not equal up to desired tolerance.
    
        Args:
             actual(numpy.ndarray or cupy.ndarray): The actual object to check.
             desired(numpy.ndarray or cupy.ndarray): The desired, expected object.
             rtol(float): Relative tolerance.
             atol(float): Absolute tolerance.
             err_msg(str): The error message to be printed in case of failure.
             verbose(bool): If ``True``, the conflicting
                 values are appended to the error message.
    
        .. seealso:: :func:`numpy.testing.assert_allclose`
    
        """  # NOQA
>       numpy.testing.assert_allclose(
            cupy.asnumpy(actual), cupy.asnumpy(desired),
            rtol=rtol, atol=atol, err_msg=err_msg, verbose=verbose)
E       AssertionError: 
E       Not equal to tolerance rtol=1e-07, atol=1e-05
E       
E       Mismatched elements: 100 / 100 (100%)
E       Max absolute difference: 270.54779997
E       Max relative difference: 678.67662434
E        x: array([[[ 4.169651e+00],
E               [-1.186992e+01],
E               [-3.361778e+01],...
E        y: array([[[ 1.443542e-02],
E               [-2.678931e-02],
E               [-8.455650e-02],...

cupy/testing/_array.py:24: AssertionError
----------------------------- Captured stdout call -----------------------------
dtype is <class 'numpy.float64'>
_ TestFFTConvolve_param_44_{mode='valid', size1=(3, 4, 10), size2=3}.test_convolve_fft _
cupy/testing/_helper.py:825: in test_func
    impl(self, *args, **kw)
cupy/testing/_helper.py:343: in test_func
    check_func(cupy_r, numpy_r)
cupy/testing/_helper.py:495: in check_func
    _array.assert_allclose(c, n, rtol1, atol1, err_msg, verbose)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

actual = array([[[-9223372036683595776, -9223372032717438976,
         -9223372035725918208, -9223372034591522816,
         -92...463205888,
         -9223372033802764288, -9223372036012720128,
         -9223372034171469824, -9223372034640183296]]])
desired = array([[[648, 719, 544, 505, 439, 576, 586, 661],
        [710, 755, 643, 555, 464, 581, 669, 710]]])
rtol = 1e-08, atol = 1e-08, err_msg = '', verbose = True

    def assert_allclose(actual, desired, rtol=1e-7, atol=0, err_msg='',
                        verbose=True):
        """Raises an AssertionError if objects are not equal up to desired tolerance.
    
        Args:
             actual(numpy.ndarray or cupy.ndarray): The actual object to check.
             desired(numpy.ndarray or cupy.ndarray): The desired, expected object.
             rtol(float): Relative tolerance.
             atol(float): Absolute tolerance.
             err_msg(str): The error message to be printed in case of failure.
             verbose(bool): If ``True``, the conflicting
                 values are appended to the error message.
    
        .. seealso:: :func:`numpy.testing.assert_allclose`
    
        """  # NOQA
>       numpy.testing.assert_allclose(
            cupy.asnumpy(actual), cupy.asnumpy(desired),
            rtol=rtol, atol=atol, err_msg=err_msg, verbose=verbose)
E       AssertionError: 
E       Not equal to tolerance rtol=1e-08, atol=1e-08
E       
E       Mismatched elements: 16 / 16 (100%)
E       Max absolute difference: 9223372036683596424
E       Max relative difference: 2.10099591e+16
E        x: array([[[-9223372036683595776, -9223372032717438976,
E                -9223372035725918208, -9223372034591522816,
E                -9223372035954638848, -9223372033158709248,...
E        y: array([[[648, 719, 544, 505, 439, 576, 586, 661],
E               [710, 755, 643, 555, 464, 581, 669, 710]]])

cupy/testing/_array.py:24: AssertionError
----------------------------- Captured stdout call -----------------------------
dtype is <class 'numpy.int64'>
_ TestFFTConvolve_param_44_{mode='valid', size1=(3, 4, 10), size2=3}.test_correlate_fft _
cupy/testing/_helper.py:825: in test_func
    impl(self, *args, **kw)
cupy/testing/_helper.py:343: in test_func
    check_func(cupy_r, numpy_r)
cupy/testing/_helper.py:495: in check_func
    _array.assert_allclose(c, n, rtol1, atol1, err_msg, verbose)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

actual = array([[[  93,  -40,  -15,  104,  -39,   42,  -41,   25],
        [   0,  -28,   -9,  -95, -107,  -99,  112,  -98]]], dtype=int8)
desired = array([[[ 117,  -46,   34,   21,  -26,  -28,  -95,  101],
        [ -62,   -5,   31,  -49, -114,   93, -116,  -39]]], dtype=int8)
rtol = 1e-08, atol = 1e-08, err_msg = '', verbose = True

    def assert_allclose(actual, desired, rtol=1e-7, atol=0, err_msg='',
                        verbose=True):
        """Raises an AssertionError if objects are not equal up to desired tolerance.
    
        Args:
             actual(numpy.ndarray or cupy.ndarray): The actual object to check.
             desired(numpy.ndarray or cupy.ndarray): The desired, expected object.
             rtol(float): Relative tolerance.
             atol(float): Absolute tolerance.
             err_msg(str): The error message to be printed in case of failure.
             verbose(bool): If ``True``, the conflicting
                 values are appended to the error message.
    
        .. seealso:: :func:`numpy.testing.assert_allclose`
    
        """  # NOQA
>       numpy.testing.assert_allclose(
            cupy.asnumpy(actual), cupy.asnumpy(desired),
            rtol=rtol, atol=atol, err_msg=err_msg, verbose=verbose)
E       AssertionError: 
E       Not equal to tolerance rtol=1e-08, atol=1e-08
E       
E       Mismatched elements: 16 / 16 (100%)
E       Max absolute difference: 83
E       Max relative difference: 4.6
E        x: array([[[  93,  -40,  -15,  104,  -39,   42,  -41,   25],
E               [   0,  -28,   -9,  -95, -107,  -99,  112,  -98]]], dtype=int8)
E        y: array([[[ 117,  -46,   34,   21,  -26,  -28,  -95,  101],
E               [ -62,   -5,   31,  -49, -114,   93, -116,  -39]]], dtype=int8)

cupy/testing/_array.py:24: AssertionError
----------------------------- Captured stdout call -----------------------------
dtype is <class 'numpy.int8'>
_ TestFFTConvolve_param_44_{mode='valid', size1=(3, 4, 10), size2=3}.test_fftconvolve _
cupy/testing/_helper.py:825: in test_func
    impl(self, *args, **kw)
cupy/testing/_helper.py:343: in test_func
    check_func(cupy_r, numpy_r)
cupy/testing/_helper.py:495: in check_func
    _array.assert_allclose(c, n, rtol1, atol1, err_msg, verbose)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

actual = array([[[ -336.,  2067.,   552., -1533.,  1806., -1719.,  2414.,  -199.],
        [ -563.,  1198.,   105., -2202.,   -81.,  1175.,  1246.,  1177.]]])
desired = array([[[648., 719., 544., 505., 439., 576., 586., 661.],
        [710., 755., 643., 555., 464., 581., 669., 710.]]])
rtol = 1e-08, atol = 1e-08, err_msg = '', verbose = True

    def assert_allclose(actual, desired, rtol=1e-7, atol=0, err_msg='',
                        verbose=True):
        """Raises an AssertionError if objects are not equal up to desired tolerance.
    
        Args:
             actual(numpy.ndarray or cupy.ndarray): The actual object to check.
             desired(numpy.ndarray or cupy.ndarray): The desired, expected object.
             rtol(float): Relative tolerance.
             atol(float): Absolute tolerance.
             err_msg(str): The error message to be printed in case of failure.
             verbose(bool): If ``True``, the conflicting
                 values are appended to the error message.
    
        .. seealso:: :func:`numpy.testing.assert_allclose`
    
        """  # NOQA
>       numpy.testing.assert_allclose(
            cupy.asnumpy(actual), cupy.asnumpy(desired),
            rtol=rtol, atol=atol, err_msg=err_msg, verbose=verbose)
E       AssertionError: 
E       Not equal to tolerance rtol=1e-08, atol=1e-08
E       
E       Mismatched elements: 16 / 16 (100%)
E       Max absolute difference: 2757.
E       Max relative difference: 4.96756757
E        x: array([[[ -336.,  2067.,   552., -1533.,  1806., -1719.,  2414.,  -199.],
E               [ -563.,  1198.,   105., -2202.,   -81.,  1175.,  1246.,  1177.]]])
E        y: array([[[648., 719., 544., 505., 439., 576., 586., 661.],
E               [710., 755., 643., 555., 464., 581., 669., 710.]]])

cupy/testing/_array.py:24: AssertionError
----------------------------- Captured stdout call -----------------------------
dtype is <class 'numpy.int8'>
=============================== warnings summary ===============================
tests/cupy_tests/core_tests/fusion_tests/test_array.py: 1 warning
tests/cupy_tests/math_tests/test_sumprod.py: 19 warnings
  /home/kmaeh/.pyenv/versions/rocm-ci/lib/python3.8/site-packages/numpy/core/_methods.py:51: RuntimeWarning: overflow encountered in reduce
    return umr_prod(a, axis, dtype, out, keepdims, initial, where)

tests/cupy_tests/core_tests/fusion_tests/test_routines.py::TestFusionNumericalReduction_param_1_{func='prod'}::test_reduction
tests/cupy_tests/math_tests/test_sumprod.py::TestNansumNanprodLong_param_11_{axis=0, func='nanprod', keepdims=True, shape=(20, 30, 40), transpose_axes=False}::test_nansum_all
tests/cupy_tests/math_tests/test_sumprod.py::TestNansumNanprodLong_param_11_{axis=0, func='nanprod', keepdims=True, shape=(20, 30, 40), transpose_axes=False}::test_nansum_axis_transposed
tests/cupy_tests/math_tests/test_sumprod.py::TestNansumNanprodLong_param_15_{axis=0, func='nanprod', keepdims=False, shape=(20, 30, 40), transpose_axes=False}::test_nansum_all
tests/cupy_tests/math_tests/test_sumprod.py::TestNansumNanprodLong_param_15_{axis=0, func='nanprod', keepdims=False, shape=(20, 30, 40), transpose_axes=False}::test_nansum_axis_transposed
  /home/kmaeh/.pyenv/versions/rocm-ci/lib/python3.8/site-packages/numpy/core/fromnumeric.py:87: RuntimeWarning: overflow encountered in reduce
    return ufunc.reduce(obj, axis, dtype, out, **passkwargs)

tests/cupy_tests/lib_tests/test_polynomial.py::TestPolyval_param_0_{type_l='poly1d', type_r='ndarray'}::test_polyval
tests/cupy_tests/lib_tests/test_polynomial.py::TestPolyval_param_3_{type_l='ndarray', type_r='ndarray'}::test_polyval
tests/cupy_tests/lib_tests/test_polynomial.py::TestPolyvalDtypesCombination::test_polyval_diff_types_array_array
  /home/kmaeh/.pyenv/versions/rocm-ci/lib/python3.8/site-packages/numpy/lib/polynomial.py:734: RuntimeWarning: overflow encountered in multiply
    y = y * x + p[i]

tests/cupy_tests/lib_tests/test_polynomial.py::TestPolyval_param_1_{type_l='poly1d', type_r='numpy_scalar'}::test_polyval
tests/cupy_tests/lib_tests/test_polynomial.py::TestPolyval_param_4_{type_l='ndarray', type_r='numpy_scalar'}::test_polyval
tests/cupy_tests/lib_tests/test_polynomial.py::TestPolyvalDtypesCombination::test_polyval_diff_types_array_scalar
  /home/kmaeh/.pyenv/versions/rocm-ci/lib/python3.8/site-packages/numpy/lib/polynomial.py:734: RuntimeWarning: overflow encountered in half_scalars
    y = y * x + p[i]

tests/cupy_tests/lib_tests/test_polynomial.py::TestPolyval_param_1_{type_l='poly1d', type_r='numpy_scalar'}::test_polyval
tests/cupy_tests/lib_tests/test_polynomial.py::TestPolyval_param_4_{type_l='ndarray', type_r='numpy_scalar'}::test_polyval
tests/cupy_tests/lib_tests/test_polynomial.py::TestPolyvalDtypesCombination::test_polyval_diff_types_array_scalar
  /home/kmaeh/.pyenv/versions/rocm-ci/lib/python3.8/site-packages/numpy/lib/polynomial.py:734: RuntimeWarning: overflow encountered in byte_scalars
    y = y * x + p[i]

tests/cupy_tests/lib_tests/test_polynomial.py::TestPolyval_param_1_{type_l='poly1d', type_r='numpy_scalar'}::test_polyval
tests/cupy_tests/lib_tests/test_polynomial.py::TestPolyval_param_4_{type_l='ndarray', type_r='numpy_scalar'}::test_polyval
tests/cupy_tests/lib_tests/test_polynomial.py::TestPolyvalDtypesCombination::test_polyval_diff_types_array_scalar
  /home/kmaeh/.pyenv/versions/rocm-ci/lib/python3.8/site-packages/numpy/lib/polynomial.py:734: RuntimeWarning: overflow encountered in short_scalars
    y = y * x + p[i]

tests/cupy_tests/lib_tests/test_polynomial.py::TestPolyval_param_1_{type_l='poly1d', type_r='numpy_scalar'}::test_polyval
tests/cupy_tests/lib_tests/test_polynomial.py::TestPolyval_param_4_{type_l='ndarray', type_r='numpy_scalar'}::test_polyval
tests/cupy_tests/lib_tests/test_polynomial.py::TestPolyvalDtypesCombination::test_polyval_diff_types_array_scalar
  /home/kmaeh/.pyenv/versions/rocm-ci/lib/python3.8/site-packages/numpy/lib/polynomial.py:734: RuntimeWarning: overflow encountered in ubyte_scalars
    y = y * x + p[i]

tests/cupy_tests/lib_tests/test_polynomial.py::TestPolyval_param_1_{type_l='poly1d', type_r='numpy_scalar'}::test_polyval
tests/cupy_tests/lib_tests/test_polynomial.py::TestPolyval_param_4_{type_l='ndarray', type_r='numpy_scalar'}::test_polyval
tests/cupy_tests/lib_tests/test_polynomial.py::TestPolyvalDtypesCombination::test_polyval_diff_types_array_scalar
  /home/kmaeh/.pyenv/versions/rocm-ci/lib/python3.8/site-packages/numpy/lib/polynomial.py:734: RuntimeWarning: overflow encountered in ushort_scalars
    y = y * x + p[i]

tests/cupy_tests/linalg_tests/test_norms.py: 14 warnings
  /home/kmaeh/.pyenv/versions/rocm-ci/lib/python3.8/site-packages/numpy/linalg/linalg.py:2568: RuntimeWarning: divide by zero encountered in power
    absx **= ord

tests/cupy_tests/linalg_tests/test_norms.py: 14 warnings
  /home/kmaeh/.pyenv/versions/rocm-ci/lib/python3.8/site-packages/numpy/linalg/linalg.py:2568: RuntimeWarning: divide by zero encountered in reciprocal
    absx **= ord

tests/cupy_tests/math_tests/test_misc.py::TestMisc::test_nan_to_num_inf
tests/cupy_tests/math_tests/test_misc.py::TestMisc::test_nan_to_num_inf_nan
  /home/kmaeh/.pyenv/versions/rocm-ci/lib/python3.8/site-packages/numpy/core/numeric.py:2276: RuntimeWarning: overflow encountered in absolute
    return less_equal(abs(x-y), atol + rtol * abs(y))

tests/cupy_tests/math_tests/test_sumprod.py: 15 warnings
  /home/kmaeh/.pyenv/versions/rocm-ci/lib/python3.8/site-packages/numpy/core/_methods.py:51: RuntimeWarning: invalid value encountered in reduce
    return umr_prod(a, axis, dtype, out, keepdims, initial, where)

tests/cupy_tests/math_tests/test_sumprod.py::TestNansumNanprodLong_param_11_{axis=0, func='nanprod', keepdims=True, shape=(20, 30, 40), transpose_axes=False}::test_nansum_all
tests/cupy_tests/math_tests/test_sumprod.py::TestNansumNanprodLong_param_11_{axis=0, func='nanprod', keepdims=True, shape=(20, 30, 40), transpose_axes=False}::test_nansum_axis_transposed
tests/cupy_tests/math_tests/test_sumprod.py::TestNansumNanprodLong_param_15_{axis=0, func='nanprod', keepdims=False, shape=(20, 30, 40), transpose_axes=False}::test_nansum_all
tests/cupy_tests/math_tests/test_sumprod.py::TestNansumNanprodLong_param_15_{axis=0, func='nanprod', keepdims=False, shape=(20, 30, 40), transpose_axes=False}::test_nansum_axis_transposed
  /home/kmaeh/.pyenv/versions/rocm-ci/lib/python3.8/site-packages/numpy/core/fromnumeric.py:87: RuntimeWarning: invalid value encountered in reduce
    return ufunc.reduce(obj, axis, dtype, out, **passkwargs)

tests/cupy_tests/math_tests/test_sumprod.py: 32 warnings
  /home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.Np3X0NVCM9/cupy/tests/cupy_tests/math_tests/test_sumprod.py:800: RuntimeWarning: invalid value encountered in true_divide
    a = a / a

tests/cupy_tests/math_tests/test_sumprod.py::TestSumprod::test_sum_all2
tests/cupy_tests/math_tests/test_sumprod.py::TestSumprod::test_sum_all_transposed2
tests/cupy_tests/math_tests/test_sumprod.py::TestSumprod::test_sum_axes2
tests/cupy_tests/math_tests/test_sumprod.py::TestSumprod::test_sum_axes4
tests/cupy_tests/math_tests/test_sumprod.py::TestSumprod::test_sum_axis_transposed2
tests/cupyx_tests/scipy_tests/ndimage_tests/test_measurements.py::TestStats::test_only_input[_param_2_{op='variance'}]
tests/cupyx_tests/scipy_tests/ndimage_tests/test_measurements.py::TestStats::test_only_input[_param_3_{op='standard_deviation'}]
  /home/kmaeh/.pyenv/versions/rocm-ci/lib/python3.8/site-packages/numpy/core/_methods.py:47: RuntimeWarning: overflow encountered in reduce
    return umr_sum(a, axis, dtype, out, keepdims, initial, where)

tests/cupy_tests/statistics_tests/test_meanvar.py: 32 warnings
  /home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.Np3X0NVCM9/cupy/tests/cupy_tests/statistics_tests/test_meanvar.py:114: RuntimeWarning: invalid value encountered in true_divide
    a = a / a

tests/cupy_tests/statistics_tests/test_meanvar.py::TestNanMedian_param_4_{axis=0, keepdims=True, overwrite_input=True, shape=(3, 4, 5)}::test_nanmedian
tests/cupy_tests/statistics_tests/test_meanvar.py::TestNanMedian_param_5_{axis=0, keepdims=True, overwrite_input=False, shape=(3, 4, 5)}::test_nanmedian
tests/cupy_tests/statistics_tests/test_meanvar.py::TestNanMedian_param_6_{axis=0, keepdims=False, overwrite_input=True, shape=(3, 4, 5)}::test_nanmedian
tests/cupy_tests/statistics_tests/test_meanvar.py::TestNanMedian_param_7_{axis=0, keepdims=False, overwrite_input=False, shape=(3, 4, 5)}::test_nanmedian
tests/cupy_tests/statistics_tests/test_meanvar.py::TestNanMedian_param_8_{axis=1, keepdims=True, overwrite_input=True, shape=(3, 4, 5)}::test_nanmedian
tests/cupy_tests/statistics_tests/test_meanvar.py::TestNanMedian_param_9_{axis=1, keepdims=True, overwrite_input=False, shape=(3, 4, 5)}::test_nanmedian
tests/cupy_tests/statistics_tests/test_meanvar.py::TestNanMedian_param_10_{axis=1, keepdims=False, overwrite_input=True, shape=(3, 4, 5)}::test_nanmedian
tests/cupy_tests/statistics_tests/test_meanvar.py::TestNanMedian_param_11_{axis=1, keepdims=False, overwrite_input=False, shape=(3, 4, 5)}::test_nanmedian
  /home/kmaeh/.pyenv/versions/rocm-ci/lib/python3.8/site-packages/numpy/lib/nanfunctions.py:1113: RuntimeWarning: All-NaN slice encountered
    r, k = function_base._ureduce(a, func=_nanmedian, axis=axis, out=out,

tests/cupy_tests/statistics_tests/test_meanvar.py::TestProductZeroLength_param_1_{func='mean', params=((0,), None)}::test_external_mean_zero_len
tests/cupy_tests/statistics_tests/test_meanvar.py::TestProductZeroLength_param_2_{func='mean', params=((0, 0), None)}::test_external_mean_zero_len
tests/cupy_tests/statistics_tests/test_meanvar.py::TestProductZeroLength_param_3_{func='mean', params=((0, 0), 1)}::test_external_mean_zero_len
tests/cupy_tests/statistics_tests/test_meanvar.py::TestProductZeroLength_param_4_{func='mean', params=((0, 0, 0), None)}::test_external_mean_zero_len
tests/cupy_tests/statistics_tests/test_meanvar.py::TestProductZeroLength_param_5_{func='mean', params=((0, 0, 0), (0, 2))}::test_external_mean_zero_len
  /home/kmaeh/.pyenv/versions/rocm-ci/lib/python3.8/site-packages/numpy/core/fromnumeric.py:3372: RuntimeWarning: Mean of empty slice.
    return _methods._mean(a, axis=axis, dtype=dtype,

tests/cupy_tests/statistics_tests/test_meanvar.py::TestProductZeroLength_param_1_{func='mean', params=((0,), None)}::test_external_mean_zero_len
tests/cupy_tests/statistics_tests/test_meanvar.py::TestProductZeroLength_param_2_{func='mean', params=((0, 0), None)}::test_external_mean_zero_len
tests/cupy_tests/statistics_tests/test_meanvar.py::TestProductZeroLength_param_4_{func='mean', params=((0, 0, 0), None)}::test_external_mean_zero_len
  /home/kmaeh/.pyenv/versions/rocm-ci/lib/python3.8/site-packages/numpy/core/_methods.py:170: RuntimeWarning: invalid value encountered in double_scalars
    ret = ret.dtype.type(ret / rcount)

tests/cupy_tests/statistics_tests/test_meanvar.py::TestProductZeroLength_param_1_{func='mean', params=((0,), None)}::test_external_mean_zero_len
tests/cupy_tests/statistics_tests/test_meanvar.py::TestProductZeroLength_param_2_{func='mean', params=((0, 0), None)}::test_external_mean_zero_len
tests/cupy_tests/statistics_tests/test_meanvar.py::TestProductZeroLength_param_4_{func='mean', params=((0, 0, 0), None)}::test_external_mean_zero_len
  /home/kmaeh/.pyenv/versions/rocm-ci/lib/python3.8/site-packages/numpy/core/_methods.py:170: RuntimeWarning: invalid value encountered in true_divide
    ret = ret.dtype.type(ret / rcount)

tests/cupy_tests/statistics_tests/test_meanvar.py::TestProductZeroLength_param_1_{func='mean', params=((0,), None)}::test_external_mean_zero_len
tests/cupy_tests/statistics_tests/test_meanvar.py::TestProductZeroLength_param_2_{func='mean', params=((0, 0), None)}::test_external_mean_zero_len
tests/cupy_tests/statistics_tests/test_meanvar.py::TestProductZeroLength_param_4_{func='mean', params=((0, 0, 0), None)}::test_external_mean_zero_len
  /home/kmaeh/.pyenv/versions/rocm-ci/lib/python3.8/site-packages/numpy/core/_methods.py:168: RuntimeWarning: invalid value encountered in true_divide
    ret = arr.dtype.type(ret / rcount)

tests/cupy_tests/statistics_tests/test_meanvar.py::TestProductZeroLength_param_7_{func='std', params=((0,), None)}::test_external_mean_zero_len
tests/cupy_tests/statistics_tests/test_meanvar.py::TestProductZeroLength_param_8_{func='std', params=((0, 0), None)}::test_external_mean_zero_len
tests/cupy_tests/statistics_tests/test_meanvar.py::TestProductZeroLength_param_9_{func='std', params=((0, 0), 1)}::test_external_mean_zero_len
tests/cupy_tests/statistics_tests/test_meanvar.py::TestProductZeroLength_param_10_{func='std', params=((0, 0, 0), None)}::test_external_mean_zero_len
tests/cupy_tests/statistics_tests/test_meanvar.py::TestProductZeroLength_param_11_{func='std', params=((0, 0, 0), (0, 2))}::test_external_mean_zero_len
  /home/kmaeh/.pyenv/versions/rocm-ci/lib/python3.8/site-packages/numpy/core/_methods.py:233: RuntimeWarning: Degrees of freedom <= 0 for slice
    ret = _var(a, axis=axis, dtype=dtype, out=out, ddof=ddof,

tests/cupy_tests/statistics_tests/test_meanvar.py::TestProductZeroLength_param_7_{func='std', params=((0,), None)}::test_external_mean_zero_len
tests/cupy_tests/statistics_tests/test_meanvar.py::TestProductZeroLength_param_8_{func='std', params=((0, 0), None)}::test_external_mean_zero_len
tests/cupy_tests/statistics_tests/test_meanvar.py::TestProductZeroLength_param_10_{func='std', params=((0, 0, 0), None)}::test_external_mean_zero_len
tests/cupy_tests/statistics_tests/test_meanvar.py::TestProductZeroLength_param_13_{func='var', params=((0,), None)}::test_external_mean_zero_len
tests/cupy_tests/statistics_tests/test_meanvar.py::TestProductZeroLength_param_14_{func='var', params=((0, 0), None)}::test_external_mean_zero_len
tests/cupy_tests/statistics_tests/test_meanvar.py::TestProductZeroLength_param_16_{func='var', params=((0, 0, 0), None)}::test_external_mean_zero_len
  /home/kmaeh/.pyenv/versions/rocm-ci/lib/python3.8/site-packages/numpy/core/_methods.py:194: RuntimeWarning: invalid value encountered in true_divide
    arrmean = um.true_divide(

tests/cupy_tests/statistics_tests/test_meanvar.py::TestProductZeroLength_param_7_{func='std', params=((0,), None)}::test_external_mean_zero_len
tests/cupy_tests/statistics_tests/test_meanvar.py::TestProductZeroLength_param_8_{func='std', params=((0, 0), None)}::test_external_mean_zero_len
tests/cupy_tests/statistics_tests/test_meanvar.py::TestProductZeroLength_param_10_{func='std', params=((0, 0, 0), None)}::test_external_mean_zero_len
tests/cupy_tests/statistics_tests/test_meanvar.py::TestProductZeroLength_param_13_{func='var', params=((0,), None)}::test_external_mean_zero_len
tests/cupy_tests/statistics_tests/test_meanvar.py::TestProductZeroLength_param_14_{func='var', params=((0, 0), None)}::test_external_mean_zero_len
tests/cupy_tests/statistics_tests/test_meanvar.py::TestProductZeroLength_param_16_{func='var', params=((0, 0, 0), None)}::test_external_mean_zero_len
  /home/kmaeh/.pyenv/versions/rocm-ci/lib/python3.8/site-packages/numpy/core/_methods.py:226: RuntimeWarning: invalid value encountered in double_scalars
    ret = ret.dtype.type(ret / rcount)

tests/cupy_tests/statistics_tests/test_meanvar.py::TestProductZeroLength_param_7_{func='std', params=((0,), None)}::test_external_mean_zero_len
tests/cupy_tests/statistics_tests/test_meanvar.py::TestProductZeroLength_param_8_{func='std', params=((0, 0), None)}::test_external_mean_zero_len
tests/cupy_tests/statistics_tests/test_meanvar.py::TestProductZeroLength_param_10_{func='std', params=((0, 0, 0), None)}::test_external_mean_zero_len
tests/cupy_tests/statistics_tests/test_meanvar.py::TestProductZeroLength_param_13_{func='var', params=((0,), None)}::test_external_mean_zero_len
tests/cupy_tests/statistics_tests/test_meanvar.py::TestProductZeroLength_param_14_{func='var', params=((0, 0), None)}::test_external_mean_zero_len
tests/cupy_tests/statistics_tests/test_meanvar.py::TestProductZeroLength_param_16_{func='var', params=((0, 0, 0), None)}::test_external_mean_zero_len
  /home/kmaeh/.pyenv/versions/rocm-ci/lib/python3.8/site-packages/numpy/core/_methods.py:226: RuntimeWarning: invalid value encountered in true_divide
    ret = ret.dtype.type(ret / rcount)

tests/cupy_tests/statistics_tests/test_meanvar.py::TestProductZeroLength_param_13_{func='var', params=((0,), None)}::test_external_mean_zero_len
tests/cupy_tests/statistics_tests/test_meanvar.py::TestProductZeroLength_param_14_{func='var', params=((0, 0), None)}::test_external_mean_zero_len
tests/cupy_tests/statistics_tests/test_meanvar.py::TestProductZeroLength_param_15_{func='var', params=((0, 0), 1)}::test_external_mean_zero_len
tests/cupy_tests/statistics_tests/test_meanvar.py::TestProductZeroLength_param_16_{func='var', params=((0, 0, 0), None)}::test_external_mean_zero_len
tests/cupy_tests/statistics_tests/test_meanvar.py::TestProductZeroLength_param_17_{func='var', params=((0, 0, 0), (0, 2))}::test_external_mean_zero_len
  /home/kmaeh/.pyenv/versions/rocm-ci/lib/python3.8/site-packages/numpy/core/fromnumeric.py:3621: RuntimeWarning: Degrees of freedom <= 0 for slice
    return _methods._var(a, axis=axis, dtype=dtype, out=out, ddof=ddof,

tests/cupyx_tests/jit_tests/test_raw.py: 21 warnings
  /home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.Np3X0NVCM9/cupy/cupyx/jit/_builtin_funcs.py:319: RuntimeWarning: mask 4294967295 is ignored on HIP
    warnings.warn(f'mask {mask} is ignored on HIP', RuntimeWarning)

tests/cupyx_tests/jit_tests/test_raw.py::TestRaw::test_syncwarp_mask
  /home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.Np3X0NVCM9/cupy/cupyx/jit/_builtin_funcs.py:131: RuntimeWarning: mask <Data code = "m", type = int> is ignored on HIP
    warnings.warn(f'mask {mask} is ignored on HIP', RuntimeWarning)

tests/cupyx_tests/scipy_tests/ndimage_tests/test_interpolation.py::TestShift::test_shift_int[_param_217_{cval=nan, mode='constant', order=0, output=float64, prefilter=True, shift=0.1}]
tests/cupyx_tests/scipy_tests/ndimage_tests/test_interpolation.py::TestShift::test_shift_int[_param_220_{cval=nan, mode='constant', order=1, output=float64, prefilter=True, shift=0.1}]
tests/cupyx_tests/scipy_tests/ndimage_tests/test_interpolation.py::TestShift::test_shift_int[_param_223_{cval=nan, mode='constant', order=3, output=float64, prefilter=True, shift=0.1}]
tests/cupyx_tests/scipy_tests/ndimage_tests/test_interpolation.py::TestShift::test_shift_int[_param_226_{cval=inf, mode='constant', order=0, output=float64, prefilter=True, shift=0.1}]
tests/cupyx_tests/scipy_tests/ndimage_tests/test_interpolation.py::TestShift::test_shift_int[_param_229_{cval=inf, mode='constant', order=1, output=float64, prefilter=True, shift=0.1}]
tests/cupyx_tests/scipy_tests/ndimage_tests/test_interpolation.py::TestShift::test_shift_int[_param_232_{cval=inf, mode='constant', order=3, output=float64, prefilter=True, shift=0.1}]
tests/cupyx_tests/scipy_tests/ndimage_tests/test_interpolation.py::TestShift::test_shift_int[_param_235_{cval=-inf, mode='constant', order=0, output=float64, prefilter=True, shift=0.1}]
tests/cupyx_tests/scipy_tests/ndimage_tests/test_interpolation.py::TestShift::test_shift_int[_param_238_{cval=-inf, mode='constant', order=1, output=float64, prefilter=True, shift=0.1}]
tests/cupyx_tests/scipy_tests/ndimage_tests/test_interpolation.py::TestShift::test_shift_int[_param_241_{cval=-inf, mode='constant', order=3, output=float64, prefilter=True, shift=0.1}]
  /home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.Np3X0NVCM9/cupy/tests/cupyx_tests/scipy_tests/ndimage_tests/test_interpolation.py:665: RuntimeWarning: invalid value encountered in remainder
    float_out = self._shift(xp, scp, a.astype(xp.float64)) % 1

tests/cupyx_tests/scipy_tests/ndimage_tests/test_measurements.py: 14 warnings
  /home/kmaeh/.pyenv/versions/rocm-ci/lib/python3.8/site-packages/scipy/ndimage/measurements.py:684: RuntimeWarning: invalid value encountered in true_divide
    return sum / numpy.asanyarray(count).astype(numpy.float64)

tests/cupyx_tests/scipy_tests/ndimage_tests/test_measurements.py: 28 warnings
  /home/kmaeh/.pyenv/versions/rocm-ci/lib/python3.8/site-packages/scipy/ndimage/measurements.py:736: RuntimeWarning: invalid value encountered in true_divide
    return sum_c_sq / np.asanyarray(count).astype(float)

tests/cupyx_tests/scipy_tests/signal_tests/test_signaltools.py::TestWiener_param_0_{im=(10,), mysize=3, noise=False}::test_wiener
tests/cupyx_tests/scipy_tests/signal_tests/test_signaltools.py::TestWiener_param_1_{im=(10,), mysize=3, noise=True}::test_wiener
tests/cupyx_tests/scipy_tests/signal_tests/test_signaltools.py::TestWiener_param_2_{im=(10,), mysize=4, noise=False}::test_wiener
tests/cupyx_tests/scipy_tests/signal_tests/test_signaltools.py::TestWiener_param_3_{im=(10,), mysize=4, noise=True}::test_wiener
tests/cupyx_tests/scipy_tests/signal_tests/test_signaltools.py::TestWiener_param_4_{im=(10,), mysize=(3, 4, 5), noise=False}::test_wiener
tests/cupyx_tests/scipy_tests/signal_tests/test_signaltools.py::TestWiener_param_5_{im=(10,), mysize=(3, 4, 5), noise=True}::test_wiener
  /home/kmaeh/.pyenv/versions/rocm-ci/lib/python3.8/site-packages/scipy/signal/signaltools.py:1598: RuntimeWarning: divide by zero encountered in true_divide
    res *= (1 - noise / lVar)

tests/cupyx_tests/scipy_tests/signal_tests/test_signaltools.py::TestWiener_param_0_{im=(10,), mysize=3, noise=False}::test_wiener
tests/cupyx_tests/scipy_tests/signal_tests/test_signaltools.py::TestWiener_param_1_{im=(10,), mysize=3, noise=True}::test_wiener
tests/cupyx_tests/scipy_tests/signal_tests/test_signaltools.py::TestWiener_param_2_{im=(10,), mysize=4, noise=False}::test_wiener
tests/cupyx_tests/scipy_tests/signal_tests/test_signaltools.py::TestWiener_param_3_{im=(10,), mysize=4, noise=True}::test_wiener
tests/cupyx_tests/scipy_tests/signal_tests/test_signaltools.py::TestWiener_param_4_{im=(10,), mysize=(3, 4, 5), noise=False}::test_wiener
tests/cupyx_tests/scipy_tests/signal_tests/test_signaltools.py::TestWiener_param_5_{im=(10,), mysize=(3, 4, 5), noise=True}::test_wiener
  /home/kmaeh/.pyenv/versions/rocm-ci/lib/python3.8/site-packages/scipy/signal/signaltools.py:1598: RuntimeWarning: invalid value encountered in multiply
    res *= (1 - noise / lVar)

-- Docs: https://docs.pytest.org/en/stable/warnings.html
- generated html file: file:///home/kmaeh/Development/cupy-rocm-ci-report/tools/tmp.Np3X0NVCM9/cupy/_output/report.html -
=========================== short test summary info ============================
FAILED tests/cupy_tests/core_tests/test_dlpack.py::TestNewDLPackConversion::test_stream
FAILED tests/cupy_tests/core_tests/test_ndarray.py::TestNdarrayCopy::test_copy_multi_device_with_stream
FAILED tests/cupy_tests/core_tests/test_ndarray_unary_op.py::TestArrayBoolOp::test_bool_one_element
FAILED tests/cupy_tests/functional_tests/test_vectorize.py::TestVectorize::test_vectorize_arithmetic_ops
FAILED tests/cupy_tests/indexing_tests/test_generate.py::TestIX_::test_ix_ndarray
FAILED tests/cupy_tests/math_tests/test_misc.py::TestConvolve_param_0_{mode='valid'}::test_convolve_diff_types
FAILED tests/cupy_tests/math_tests/test_misc.py::TestConvolve_param_1_{mode='same'}::test_convolve_diff_types
FAILED tests/cupy_tests/math_tests/test_misc.py::TestConvolve_param_2_{mode='full'}::test_convolve_diff_types
FAILED tests/cupy_tests/random_tests/test_distributions.py::TestDistributionsPoissonInvalid::test_none_lam_generator
FAILED tests/cupy_tests/random_tests/test_distributions.py::TestDistributionsStandardGammaInvalid::test_none_shape_generator
FAILED tests/cupy_tests/statistics_tests/test_correlation.py::TestCorrelate_param_0_{mode='valid'}::test_correlate_diff_types
FAILED tests/cupy_tests/statistics_tests/test_correlation.py::TestCorrelate_param_1_{mode='full'}::test_correlate_diff_types
FAILED tests/cupy_tests/statistics_tests/test_correlation.py::TestCorrelate_param_2_{mode='same'}::test_correlate_diff_types
FAILED tests/cupyx_tests/test_scatter.py::TestScatter::test_scatter_add - Ass...
FAILED tests/cupyx_tests/scipy_tests/fft_tests/test_fft.py::TestHfftn_param_25_{axes=(0, 1, 2), norm='backward', s=None, shape=(3, 5, 20)}::test_ihfftn
FAILED tests/cupyx_tests/scipy_tests/linalg_tests/test_decomp_lu.py::TestLUSolve_param_0_{shapes=((4, 4), (4,)), trans=0}::test_lu_solve
FAILED tests/cupyx_tests/scipy_tests/linalg_tests/test_decomp_lu.py::TestLUSolve_param_4_{shapes=((5, 5), (5, 2)), trans=1}::test_lu_solve
FAILED tests/cupyx_tests/scipy_tests/linalg_tests/test_decomp_lu.py::TestLUSolve_param_5_{shapes=((5, 5), (5, 2)), trans=2}::test_lu_solve
FAILED tests/cupyx_tests/scipy_tests/ndimage_tests/test_interpolation.py::TestMapCoordinatesHalfInteger::test_map_coordinates_float[_param_46_{mode='grid-constant', order=4}]
FAILED tests/cupyx_tests/scipy_tests/ndimage_tests/test_interpolation.py::TestMapCoordinatesHalfInteger::test_map_coordinates_float[_param_47_{mode='grid-constant', order=5}]
FAILED tests/cupyx_tests/scipy_tests/ndimage_tests/test_interpolation.py::TestAffineTransformTextureMemory::test_affine_transform_texture_memory[_param_0_{mode='constant', order=0, output=None, output_shape=None, shape=(100, 100), theta=0}]
FAILED tests/cupyx_tests/scipy_tests/ndimage_tests/test_interpolation.py::TestAffineTransformTextureMemory::test_affine_transform_texture_memory[_param_1_{mode='constant', order=0, output=None, output_shape=None, shape=(100, 100), theta=90}]
FAILED tests/cupyx_tests/scipy_tests/ndimage_tests/test_interpolation.py::TestAffineTransformTextureMemory::test_affine_transform_texture_memory[_param_2_{mode='constant', order=0, output=None, output_shape=None, shape=(100, 100), theta=180}]
FAILED tests/cupyx_tests/scipy_tests/ndimage_tests/test_interpolation.py::TestAffineTransformTextureMemory::test_affine_transform_texture_memory[_param_3_{mode='constant', order=0, output=None, output_shape=None, shape=(100, 100), theta=270}]
FAILED tests/cupyx_tests/scipy_tests/ndimage_tests/test_interpolation.py::TestAffineTransformTextureMemory::test_affine_transform_texture_memory[_param_4_{mode='constant', order=0, output=None, output_shape=None, shape=(10, 20), theta=0}]
FAILED tests/cupyx_tests/scipy_tests/ndimage_tests/test_interpolation.py::TestAffineTransformTextureMemory::test_affine_transform_texture_memory[_param_5_{mode='constant', order=0, output=None, output_shape=None, shape=(10, 20), theta=90}]
FAILED tests/cupyx_tests/scipy_tests/ndimage_tests/test_interpolation.py::TestAffineTransformTextureMemory::test_affine_transform_texture_memory[_param_6_{mode='constant', order=0, output=None, output_shape=None, shape=(10, 20), theta=180}]
FAILED tests/cupyx_tests/scipy_tests/ndimage_tests/test_interpolation.py::TestAffineTransformTextureMemory::test_affine_transform_texture_memory[_param_7_{mode='constant', order=0, output=None, output_shape=None, shape=(10, 20), theta=270}]
FAILED tests/cupyx_tests/scipy_tests/ndimage_tests/test_interpolation.py::TestAffineTransformTextureMemory::test_affine_transform_texture_memory[_param_8_{mode='constant', order=0, output=None, output_shape=None, shape=(10, 10, 10), theta=0}]
FAILED tests/cupyx_tests/scipy_tests/ndimage_tests/test_interpolation.py::TestAffineTransformTextureMemory::test_affine_transform_texture_memory[_param_9_{mode='constant', order=0, output=None, output_shape=None, shape=(10, 10, 10), theta=90}]
FAILED tests/cupyx_tests/scipy_tests/ndimage_tests/test_interpolation.py::TestAffineTransformTextureMemory::test_affine_transform_texture_memory[_param_10_{mode='constant', order=0, output=None, output_shape=None, shape=(10, 10, 10), theta=180}]
FAILED tests/cupyx_tests/scipy_tests/ndimage_tests/test_interpolation.py::TestAffineTransformTextureMemory::test_affine_transform_texture_memory[_param_11_{mode='constant', order=0, output=None, output_shape=None, shape=(10, 10, 10), theta=270}]
FAILED tests/cupyx_tests/scipy_tests/ndimage_tests/test_interpolation.py::TestAffineTransformTextureMemory::test_affine_transform_texture_memory[_param_12_{mode='constant', order=0, output=None, output_shape=None, shape=(10, 20, 30), theta=0}]
FAILED tests/cupyx_tests/scipy_tests/ndimage_tests/test_interpolation.py::TestAffineTransformTextureMemory::test_affine_transform_texture_memory[_param_13_{mode='constant', order=0, output=None, output_shape=None, shape=(10, 20, 30), theta=90}]
FAILED tests/cupyx_tests/scipy_tests/ndimage_tests/test_interpolation.py::TestAffineTransformTextureMemory::test_affine_transform_texture_memory[_param_14_{mode='constant', order=0, output=None, output_shape=None, shape=(10, 20, 30), theta=180}]
FAILED tests/cupyx_tests/scipy_tests/ndimage_tests/test_interpolation.py::TestAffineTransformTextureMemory::test_affine_transform_texture_memory[_param_15_{mode='constant', order=0, output=None, output_shape=None, shape=(10, 20, 30), theta=270}]
FAILED tests/cupyx_tests/scipy_tests/ndimage_tests/test_interpolation.py::TestAffineTransformTextureMemory::test_affine_transform_texture_memory[_param_16_{mode='constant', order=0, output=None, output_shape=10, shape=(100, 100), theta=0}]
FAILED tests/cupyx_tests/scipy_tests/ndimage_tests/test_interpolation.py::TestAffineTransformTextureMemory::test_affine_transform_texture_memory[_param_17_{mode='constant', order=0, output=None, output_shape=10, shape=(100, 100), theta=90}]
FAILED tests/cupyx_tests/scipy_tests/ndimage_tests/test_interpolation.py::TestAffineTransformTextureMemory::test_affine_transform_texture_memory[_param_18_{mode='constant', order=0, output=None, output_shape=10, shape=(100, 100), theta=180}]
FAILED tests/cupyx_tests/scipy_tests/ndimage_tests/test_interpolation.py::TestAffineTransformTextureMemory::test_affine_transform_texture_memory[_param_19_{mode='constant', order=0, output=None, output_shape=10, shape=(100, 100), theta=270}]
FAILED tests/cupyx_tests/scipy_tests/ndimage_tests/test_interpolation.py::TestAffineTransformTextureMemory::test_affine_transform_texture_memory[_param_20_{mode='constant', order=0, output=None, output_shape=10, shape=(10, 20), theta=0}]
FAILED tests/cupyx_tests/scipy_tests/ndimage_tests/test_interpolation.py::TestAffineTransformTextureMemory::test_affine_transform_texture_memory[_param_21_{mode='constant', order=0, output=None, output_shape=10, shape=(10, 20), theta=90}]
FAILED tests/cupyx_tests/scipy_tests/ndimage_tests/test_interpolation.py::TestAffineTransformTextureMemory::test_affine_transform_texture_memory[_param_22_{mode='constant', order=0, output=None, output_shape=10, shape=(10, 20), theta=180}]
FAILED tests/cupyx_tests/scipy_tests/ndimage_tests/test_interpolation.py::TestAffineTransformTextureMemory::test_affine_transform_texture_memory[_param_23_{mode='constant', order=0, output=None, output_shape=10, shape=(10, 20), theta=270}]
FAILED tests/cupyx_tests/scipy_tests/ndimage_tests/test_interpolation.py::TestAffineTransformTextureMemory::test_affine_transform_texture_memory[_param_24_{mode='constant', order=0, output=None, output_shape=10, shape=(10, 10, 10), theta=0}]
FAILED tests/cupyx_tests/scipy_tests/ndimage_tests/test_interpolation.py::TestAffineTransformTextureMemory::test_affine_transform_texture_memory[_param_25_{mode='constant', order=0, output=None, output_shape=10, shape=(10, 10, 10), theta=90}]
FAILED tests/cupyx_tests/scipy_tests/ndimage_tests/test_interpolation.py::TestAffineTransformTextureMemory::test_affine_transform_texture_memory[_param_26_{mode='constant', order=0, output=None, output_shape=10, shape=(10, 10, 10), theta=180}]
FAILED tests/cupyx_tests/scipy_tests/ndimage_tests/test_interpolation.py::TestAffineTransformTextureMemory::test_affine_transform_texture_memory[_param_27_{mode='constant', order=0, output=None, output_shape=10, shape=(10, 10, 10), theta=270}]
FAILED tests/cupyx_tests/scipy_tests/ndimage_tests/test_interpolation.py::TestAffineTransformTextureMemory::test_affine_transform_texture_memory[_param_28_{mode='constant', order=0, output=None, output_shape=10, shape=(10, 20, 30), theta=0}]
FAILED tests/cupyx_tests/scipy_tests/ndimage_tests/test_interpolation.py::TestAffineTransformTextureMemory::test_affine_transform_texture_memory[_param_29_{mode='constant', order=0, output=None, output_shape=10, shape=(10, 20, 30), theta=90}]
FAILED tests/cupyx_tests/scipy_tests/ndimage_tests/test_interpolation.py::TestAffineTransformTextureMemory::test_affine_transform_texture_memory[_param_30_{mode='constant', order=0, output=None, output_shape=10, shape=(10, 20, 30), theta=180}]
FAILED tests/cupyx_tests/scipy_tests/ndimage_tests/test_interpolation.py::TestAffineTransformTextureMemory::test_affine_transform_texture_memory[_param_31_{mode='constant', order=0, output=None, output_shape=10, shape=(10, 20, 30), theta=270}]
FAILED tests/cupyx_tests/scipy_tests/ndimage_tests/test_interpolation.py::TestAffineTransformTextureMemory::test_affine_transform_texture_memory[_param_32_{mode='constant', order=0, output=float32, output_shape=None, shape=(100, 100), theta=0}]
FAILED tests/cupyx_tests/scipy_tests/ndimage_tests/test_interpolation.py::TestAffineTransformTextureMemory::test_affine_transform_texture_memory[_param_33_{mode='constant', order=0, output=float32, output_shape=None, shape=(100, 100), theta=90}]
FAILED tests/cupyx_tests/scipy_tests/ndimage_tests/test_interpolation.py::TestAffineTransformTextureMemory::test_affine_transform_texture_memory[_param_34_{mode='constant', order=0, output=float32, output_shape=None, shape=(100, 100), theta=180}]
FAILED tests/cupyx_tests/scipy_tests/ndimage_tests/test_interpolation.py::TestAffineTransformTextureMemory::test_affine_transform_texture_memory[_param_35_{mode='constant', order=0, output=float32, output_shape=None, shape=(100, 100), theta=270}]
FAILED tests/cupyx_tests/scipy_tests/ndimage_tests/test_interpolation.py::TestAffineTransformTextureMemory::test_affine_transform_texture_memory[_param_36_{mode='constant', order=0, output=float32, output_shape=None, shape=(10, 20), theta=0}]
FAILED tests/cupyx_tests/scipy_tests/ndimage_tests/test_interpolation.py::TestAffineTransformTextureMemory::test_affine_transform_texture_memory[_param_37_{mode='constant', order=0, output=float32, output_shape=None, shape=(10, 20), theta=90}]
FAILED tests/cupyx_tests/scipy_tests/ndimage_tests/test_interpolation.py::TestAffineTransformTextureMemory::test_affine_transform_texture_memory[_param_38_{mode='constant', order=0, output=float32, output_shape=None, shape=(10, 20), theta=180}]
FAILED tests/cupyx_tests/scipy_tests/ndimage_tests/test_interpolation.py::TestAffineTransformTextureMemory::test_affine_transform_texture_memory[_param_39_{mode='constant', order=0, output=float32, output_shape=None, shape=(10, 20), theta=270}]
FAILED tests/cupyx_tests/scipy_tests/ndimage_tests/test_interpolation.py::TestAffineTransformTextureMemory::test_affine_transform_texture_memory[_param_40_{mode='constant', order=0, output=float32, output_shape=None, shape=(10, 10, 10), theta=0}]
FAILED tests/cupyx_tests/scipy_tests/ndimage_tests/test_interpolation.py::TestAffineTransformTextureMemory::test_affine_transform_texture_memory[_param_41_{mode='constant', order=0, output=float32, output_shape=None, shape=(10, 10, 10), theta=90}]
FAILED tests/cupyx_tests/scipy_tests/ndimage_tests/test_interpolation.py::TestAffineTransformTextureMemory::test_affine_transform_texture_memory[_param_42_{mode='constant', order=0, output=float32, output_shape=None, shape=(10, 10, 10), theta=180}]
FAILED tests/cupyx_tests/scipy_tests/ndimage_tests/test_interpolation.py::TestAffineTransformTextureMemory::test_affine_transform_texture_memory[_param_43_{mode='constant', order=0, output=float32, output_shape=None, shape=(10, 10, 10), theta=270}]
FAILED tests/cupyx_tests/scipy_tests/ndimage_tests/test_interpolation.py::TestAffineTransformTextureMemory::test_affine_transform_texture_memory[_param_44_{mode='constant', order=0, output=float32, output_shape=None, shape=(10, 20, 30), theta=0}]
FAILED tests/cupyx_tests/scipy_tests/ndimage_tests/test_interpolation.py::TestAffineTransformTextureMemory::test_affine_transform_texture_memory[_param_45_{mode='constant', order=0, output=float32, output_shape=None, shape=(10, 20, 30), theta=90}]
FAILED tests/cupyx_tests/scipy_tests/ndimage_tests/test_interpolation.py::TestAffineTransformTextureMemory::test_affine_transform_texture_memory[_param_46_{mode='constant', order=0, output=float32, output_shape=None, shape=(10, 20, 30), theta=180}]
FAILED tests/cupyx_tests/scipy_tests/ndimage_tests/test_interpolation.py::TestAffineTransformTextureMemory::test_affine_transform_texture_memory[_param_47_{mode='constant', order=0, output=float32, output_shape=None, shape=(10, 20, 30), theta=270}]
FAILED tests/cupyx_tests/scipy_tests/ndimage_tests/test_interpolation.py::TestAffineTransformTextureMemory::test_affine_transform_texture_memory[_param_48_{mode='constant', order=0, output=float32, output_shape=10, shape=(100, 100), theta=0}]
FAILED tests/cupyx_tests/scipy_tests/ndimage_tests/test_interpolation.py::TestAffineTransformTextureMemory::test_affine_transform_texture_memory[_param_49_{mode='constant', order=0, output=float32, output_shape=10, shape=(100, 100), theta=90}]
FAILED tests/cupyx_tests/scipy_tests/ndimage_tests/test_interpolation.py::TestAffineTransformTextureMemory::test_affine_transform_texture_memory[_param_50_{mode='constant', order=0, output=float32, output_shape=10, shape=(100, 100), theta=180}]
FAILED tests/cupyx_tests/scipy_tests/ndimage_tests/test_interpolation.py::TestAffineTransformTextureMemory::test_affine_transform_texture_memory[_param_51_{mode='constant', order=0, output=float32, output_shape=10, shape=(100, 100), theta=270}]
FAILED tests/cupyx_tests/scipy_tests/ndimage_tests/test_interpolation.py::TestAffineTransformTextureMemory::test_affine_transform_texture_memory[_param_52_{mode='constant', order=0, output=float32, output_shape=10, shape=(10, 20), theta=0}]
FAILED tests/cupyx_tests/scipy_tests/ndimage_tests/test_interpolation.py::TestAffineTransformTextureMemory::test_affine_transform_texture_memory[_param_53_{mode='constant', order=0, output=float32, output_shape=10, shape=(10, 20), theta=90}]
FAILED tests/cupyx_tests/scipy_tests/ndimage_tests/test_interpolation.py::TestAffineTransformTextureMemory::test_affine_transform_texture_memory[_param_54_{mode='constant', order=0, output=float32, output_shape=10, shape=(10, 20), theta=180}]
FAILED tests/cupyx_tests/scipy_tests/ndimage_tests/test_interpolation.py::TestAffineTransformTextureMemory::test_affine_transform_texture_memory[_param_55_{mode='constant', order=0, output=float32, output_shape=10, shape=(10, 20), theta=270}]
FAILED tests/cupyx_tests/scipy_tests/ndimage_tests/test_interpolation.py::TestAffineTransformTextureMemory::test_affine_transform_texture_memory[_param_56_{mode='constant', order=0, output=float32, output_shape=10, shape=(10, 10, 10), theta=0}]
FAILED tests/cupyx_tests/scipy_tests/ndimage_tests/test_interpolation.py::TestAffineTransformTextureMemory::test_affine_transform_texture_memory[_param_57_{mode='constant', order=0, output=float32, output_shape=10, shape=(10, 10, 10), theta=90}]
FAILED tests/cupyx_tests/scipy_tests/ndimage_tests/test_interpolation.py::TestAffineTransformTextureMemory::test_affine_transform_texture_memory[_param_58_{mode='constant', order=0, output=float32, output_shape=10, shape=(10, 10, 10), theta=180}]
FAILED tests/cupyx_tests/scipy_tests/ndimage_tests/test_interpolation.py::TestAffineTransformTextureMemory::test_affine_transform_texture_memory[_param_59_{mode='constant', order=0, output=float32, output_shape=10, shape=(10, 10, 10), theta=270}]
FAILED tests/cupyx_tests/scipy_tests/ndimage_tests/test_interpolation.py::TestAffineTransformTextureMemory::test_affine_transform_texture_memory[_param_60_{mode='constant', order=0, output=float32, output_shape=10, shape=(10, 20, 30), theta=0}]
FAILED tests/cupyx_tests/scipy_tests/ndimage_tests/test_interpolation.py::TestAffineTransformTextureMemory::test_affine_transform_texture_memory[_param_61_{mode='constant', order=0, output=float32, output_shape=10, shape=(10, 20, 30), theta=90}]
FAILED tests/cupyx_tests/scipy_tests/ndimage_tests/test_interpolation.py::TestAffineTransformTextureMemory::test_affine_transform_texture_memory[_param_62_{mode='constant', order=0, output=float32, output_shape=10, shape=(10, 20, 30), theta=180}]
FAILED tests/cupyx_tests/scipy_tests/ndimage_tests/test_interpolation.py::TestAffineTransformTextureMemory::test_affine_transform_texture_memory[_param_63_{mode='constant', order=0, output=float32, output_shape=10, shape=(10, 20, 30), theta=270}]
FAILED tests/cupyx_tests/scipy_tests/ndimage_tests/test_interpolation.py::TestAffineTransformTextureMemory::test_affine_transform_texture_memory[_param_64_{mode='constant', order=0, output='empty', output_shape=None, shape=(100, 100), theta=0}]
FAILED tests/cupyx_tests/scipy_tests/ndimage_tests/test_interpolation.py::TestAffineTransformTextureMemory::test_affine_transform_texture_memory[_param_65_{mode='constant', order=0, output='empty', output_shape=None, shape=(100, 100), theta=90}]
FAILED tests/cupyx_tests/scipy_tests/ndimage_tests/test_interpolation.py::TestAffineTransformTextureMemory::test_affine_transform_texture_memory[_param_66_{mode='constant', order=0, output='empty', output_shape=None, shape=(100, 100), theta=180}]
FAILED tests/cupyx_tests/scipy_tests/ndimage_tests/test_interpolation.py::TestAffineTransformTextureMemory::test_affine_transform_texture_memory[_param_67_{mode='constant', order=0, output='empty', output_shape=None, shape=(100, 100), theta=270}]
FAILED tests/cupyx_tests/scipy_tests/ndimage_tests/test_interpolation.py::TestAffineTransformTextureMemory::test_affine_transform_texture_memory[_param_68_{mode='constant', order=0, output='empty', output_shape=None, shape=(10, 20), theta=0}]
FAILED tests/cupyx_tests/scipy_tests/ndimage_tests/test_interpolation.py::TestAffineTransformTextureMemory::test_affine_transform_texture_memory[_param_69_{mode='constant', order=0, output='empty', output_shape=None, shape=(10, 20), theta=90}]
FAILED tests/cupyx_tests/scipy_tests/ndimage_tests/test_interpolation.py::TestAffineTransformTextureMemory::test_affine_transform_texture_memory[_param_70_{mode='constant', order=0, output='empty', output_shape=None, shape=(10, 20), theta=180}]
FAILED tests/cupyx_tests/scipy_tests/ndimage_tests/test_interpolation.py::TestAffineTransformTextureMemory::test_affine_transform_texture_memory[_param_71_{mode='constant', order=0, output='empty', output_shape=None, shape=(10, 20), theta=270}]
FAILED tests/cupyx_tests/scipy_tests/ndimage_tests/test_interpolation.py::TestAffineTransformTextureMemory::test_affine_transform_texture_memory[_param_72_{mode='constant', order=0, output='empty', output_shape=None, shape=(10, 10, 10), theta=0}]
FAILED tests/cupyx_tests/scipy_tests/ndimage_tests/test_interpolation.py::TestAffineTransformTextureMemory::test_affine_transform_texture_memory[_param_73_{mode='constant', order=0, output='empty', output_shape=None, shape=(10, 10, 10), theta=90}]
FAILED tests/cupyx_tests/scipy_tests/ndimage_tests/test_interpolation.py::TestAffineTransformTextureMemory::test_affine_transform_texture_memory[_param_74_{mode='constant', order=0, output='empty', output_shape=None, shape=(10, 10, 10), theta=180}]
FAILED tests/cupyx_tests/scipy_tests/ndimage_tests/test_interpolation.py::TestAffineTransformTextureMemory::test_affine_transform_texture_memory[_param_75_{mode='constant', order=0, output='empty', output_shape=None, shape=(10, 10, 10), theta=270}]
FAILED tests/cupyx_tests/scipy_tests/ndimage_tests/test_interpolation.py::TestAffineTransformTextureMemory::test_affine_transform_texture_memory[_param_76_{mode='constant', order=0, output='empty', output_shape=None, shape=(10, 20, 30), theta=0}]
FAILED tests/cupyx_tests/scipy_tests/ndimage_tests/test_interpolation.py::TestAffineTransformTextureMemory::test_affine_transform_texture_memory[_param_77_{mode='constant', order=0, output='empty', output_shape=None, shape=(10, 20, 30), theta=90}]
FAILED tests/cupyx_tests/scipy_tests/ndimage_tests/test_interpolation.py::TestAffineTransformTextureMemory::test_affine_transform_texture_memory[_param_78_{mode='constant', order=0, output='empty', output_shape=None, shape=(10, 20, 30), theta=180}]
FAILED tests/cupyx_tests/scipy_tests/ndimage_tests/test_interpolation.py::TestAffineTransformTextureMemory::test_affine_transform_texture_memory[_param_79_{mode='constant', order=0, output='empty', output_shape=None, shape=(10, 20, 30), theta=270}]
FAILED tests/cupyx_tests/scipy_tests/ndimage_tests/test_interpolation.py::TestAffineTransformTextureMemory::test_affine_transform_texture_memory[_param_96_{mode='constant', order=1, output=None, output_shape=None, shape=(100, 100), theta=0}]
FAILED tests/cupyx_tests/scipy_tests/ndimage_tests/test_interpolation.py::TestAffineTransformTextureMemory::test_affine_transform_texture_memory[_param_97_{mode='constant', order=1, output=None, output_shape=None, shape=(100, 100), theta=90}]
FAILED tests/cupyx_tests/scipy_tests/ndimage_tests/test_interpolation.py::TestAffineTransformTextureMemory::test_affine_transform_texture_memory[_param_98_{mode='constant', order=1, output=None, output_shape=None, shape=(100, 100), theta=180}]
FAILED tests/cupyx_tests/scipy_tests/ndimage_tests/test_interpolation.py::TestAffineTransformTextureMemory::test_affine_transform_texture_memory[_param_99_{mode='constant', order=1, output=None, output_shape=None, shape=(100, 100), theta=270}]
FAILED tests/cupyx_tests/scipy_tests/ndimage_tests/test_interpolation.py::TestAffineTransformTextureMemory::test_affine_transform_texture_memory[_param_100_{mode='constant', order=1, output=None, output_shape=None, shape=(10, 20), theta=0}]
FAILED tests/cupyx_tests/scipy_tests/ndimage_tests/test_interpolation.py::TestAffineTransformTextureMemory::test_affine_transform_texture_memory[_param_101_{mode='constant', order=1, output=None, output_shape=None, shape=(10, 20), theta=90}]
FAILED tests/cupyx_tests/scipy_tests/ndimage_tests/test_interpolation.py::TestAffineTransformTextureMemory::test_affine_transform_texture_memory[_param_102_{mode='constant', order=1, output=None, output_shape=None, shape=(10, 20), theta=180}]
FAILED tests/cupyx_tests/scipy_tests/ndimage_tests/test_interpolation.py::TestAffineTransformTextureMemory::test_affine_transform_texture_memory[_param_103_{mode='constant', order=1, output=None, output_shape=None, shape=(10, 20), theta=270}]
FAILED tests/cupyx_tests/scipy_tests/ndimage_tests/test_interpolation.py::TestAffineTransformTextureMemory::test_affine_transform_texture_memory[_param_104_{mode='constant', order=1, output=None, output_shape=None, shape=(10, 10, 10), theta=0}]
FAILED tests/cupyx_tests/scipy_tests/ndimage_tests/test_interpolation.py::TestAffineTransformTextureMemory::test_affine_transform_texture_memory[_param_105_{mode='constant', order=1, output=None, output_shape=None, shape=(10, 10, 10), theta=90}]
FAILED tests/cupyx_tests/scipy_tests/ndimage_tests/test_interpolation.py::TestAffineTransformTextureMemory::test_affine_transform_texture_memory[_param_106_{mode='constant', order=1, output=None, output_shape=None, shape=(10, 10, 10), theta=180}]
FAILED tests/cupyx_tests/scipy_tests/ndimage_tests/test_interpolation.py::TestAffineTransformTextureMemory::test_affine_transform_texture_memory[_param_107_{mode='constant', order=1, output=None, output_shape=None, shape=(10, 10, 10), theta=270}]
FAILED tests/cupyx_tests/scipy_tests/ndimage_tests/test_interpolation.py::TestAffineTransformTextureMemory::test_affine_transform_texture_memory[_param_108_{mode='constant', order=1, output=None, output_shape=None, shape=(10, 20, 30), theta=0}]
FAILED tests/cupyx_tests/scipy_tests/ndimage_tests/test_interpolation.py::TestAffineTransformTextureMemory::test_affine_transform_texture_memory[_param_109_{mode='constant', order=1, output=None, output_shape=None, shape=(10, 20, 30), theta=90}]
FAILED tests/cupyx_tests/scipy_tests/ndimage_tests/test_interpolation.py::TestAffineTransformTextureMemory::test_affine_transform_texture_memory[_param_110_{mode='constant', order=1, output=None, output_shape=None, shape=(10, 20, 30), theta=180}]
FAILED tests/cupyx_tests/scipy_tests/ndimage_tests/test_interpolation.py::TestAffineTransformTextureMemory::test_affine_transform_texture_memory[_param_111_{mode='constant', order=1, output=None, output_shape=None, shape=(10, 20, 30), theta=270}]
FAILED tests/cupyx_tests/scipy_tests/ndimage_tests/test_interpolation.py::TestAffineTransformTextureMemory::test_affine_transform_texture_memory[_param_112_{mode='constant', order=1, output=None, output_shape=10, shape=(100, 100), theta=0}]
FAILED tests/cupyx_tests/scipy_tests/ndimage_tests/test_interpolation.py::TestAffineTransformTextureMemory::test_affine_transform_texture_memory[_param_113_{mode='constant', order=1, output=None, output_shape=10, shape=(100, 100), theta=90}]
FAILED tests/cupyx_tests/scipy_tests/ndimage_tests/test_interpolation.py::TestAffineTransformTextureMemory::test_affine_transform_texture_memory[_param_114_{mode='constant', order=1, output=None, output_shape=10, shape=(100, 100), theta=180}]
FAILED tests/cupyx_tests/scipy_tests/ndimage_tests/test_interpolation.py::TestAffineTransformTextureMemory::test_affine_transform_texture_memory[_param_115_{mode='constant', order=1, output=None, output_shape=10, shape=(100, 100), theta=270}]
FAILED tests/cupyx_tests/scipy_tests/ndimage_tests/test_interpolation.py::TestAffineTransformTextureMemory::test_affine_transform_texture_memory[_param_116_{mode='constant', order=1, output=None, output_shape=10, shape=(10, 20), theta=0}]
FAILED tests/cupyx_tests/scipy_tests/ndimage_tests/test_interpolation.py::TestAffineTransformTextureMemory::test_affine_transform_texture_memory[_param_117_{mode='constant', order=1, output=None, output_shape=10, shape=(10, 20), theta=90}]
FAILED tests/cupyx_tests/scipy_tests/ndimage_tests/test_interpolation.py::TestAffineTransformTextureMemory::test_affine_transform_texture_memory[_param_118_{mode='constant', order=1, output=None, output_shape=10, shape=(10, 20), theta=180}]
FAILED tests/cupyx_tests/scipy_tests/ndimage_tests/test_interpolation.py::TestAffineTransformTextureMemory::test_affine_transform_texture_memory[_param_119_{mode='constant', order=1, output=None, output_shape=10, shape=(10, 20), theta=270}]
FAILED tests/cupyx_tests/scipy_tests/ndimage_tests/test_interpolation.py::TestAffineTransformTextureMemory::test_affine_transform_texture_memory[_param_120_{mode='constant', order=1, output=None, output_shape=10, shape=(10, 10, 10), theta=0}]
FAILED tests/cupyx_tests/scipy_tests/ndimage_tests/test_interpolation.py::TestAffineTransformTextureMemory::test_affine_transform_texture_memory[_param_121_{mode='constant', order=1, output=None, output_shape=10, shape=(10, 10, 10), theta=90}]
FAILED tests/cupyx_tests/scipy_tests/ndimage_tests/test_interpolation.py::TestAffineTransformTextureMemory::test_affine_transform_texture_memory[_param_122_{mode='constant', order=1, output=None, output_shape=10, shape=(10, 10, 10), theta=180}]
FAILED tests/cupyx_tests/scipy_tests/ndimage_tests/test_interpolation.py::TestAffineTransformTextureMemory::test_affine_transform_texture_memory[_param_123_{mode='constant', order=1, output=None, output_shape=10, shape=(10, 10, 10), theta=270}]
FAILED tests/cupyx_tests/scipy_tests/ndimage_tests/test_interpolation.py::TestAffineTransformTextureMemory::test_affine_transform_texture_memory[_param_124_{mode='constant', order=1, output=None, output_shape=10, shape=(10, 20, 30), theta=0}]
FAILED tests/cupyx_tests/scipy_tests/ndimage_tests/test_interpolation.py::TestAffineTransformTextureMemory::test_affine_transform_texture_memory[_param_125_{mode='constant', order=1, output=None, output_shape=10, shape=(10, 20, 30), theta=90}]
FAILED tests/cupyx_tests/scipy_tests/ndimage_tests/test_interpolation.py::TestAffineTransformTextureMemory::test_affine_transform_texture_memory[_param_126_{mode='constant', order=1, output=None, output_shape=10, shape=(10, 20, 30), theta=180}]
FAILED tests/cupyx_tests/scipy_tests/ndimage_tests/test_interpolation.py::TestAffineTransformTextureMemory::test_affine_transform_texture_memory[_param_127_{mode='constant', order=1, output=None, output_shape=10, shape=(10, 20, 30), theta=270}]
FAILED tests/cupyx_tests/scipy_tests/ndimage_tests/test_interpolation.py::TestAffineTransformTextureMemory::test_affine_transform_texture_memory[_param_128_{mode='constant', order=1, output=float32, output_shape=None, shape=(100, 100), theta=0}]
FAILED tests/cupyx_tests/scipy_tests/ndimage_tests/test_interpolation.py::TestAffineTransformTextureMemory::test_affine_transform_texture_memory[_param_129_{mode='constant', order=1, output=float32, output_shape=None, shape=(100, 100), theta=90}]
FAILED tests/cupyx_tests/scipy_tests/ndimage_tests/test_interpolation.py::TestAffineTransformTextureMemory::test_affine_transform_texture_memory[_param_130_{mode='constant', order=1, output=float32, output_shape=None, shape=(100, 100), theta=180}]
FAILED tests/cupyx_tests/scipy_tests/ndimage_tests/test_interpolation.py::TestAffineTransformTextureMemory::test_affine_transform_texture_memory[_param_131_{mode='constant', order=1, output=float32, output_shape=None, shape=(100, 100), theta=270}]
FAILED tests/cupyx_tests/scipy_tests/ndimage_tests/test_interpolation.py::TestAffineTransformTextureMemory::test_affine_transform_texture_memory[_param_132_{mode='constant', order=1, output=float32, output_shape=None, shape=(10, 20), theta=0}]
FAILED tests/cupyx_tests/scipy_tests/ndimage_tests/test_interpolation.py::TestAffineTransformTextureMemory::test_affine_transform_texture_memory[_param_133_{mode='constant', order=1, output=float32, output_shape=None, shape=(10, 20), theta=90}]
FAILED tests/cupyx_tests/scipy_tests/ndimage_tests/test_interpolation.py::TestAffineTransformTextureMemory::test_affine_transform_texture_memory[_param_134_{mode='constant', order=1, output=float32, output_shape=None, shape=(10, 20), theta=180}]
FAILED tests/cupyx_tests/scipy_tests/ndimage_tests/test_interpolation.py::TestAffineTransformTextureMemory::test_affine_transform_texture_memory[_param_135_{mode='constant', order=1, output=float32, output_shape=None, shape=(10, 20), theta=270}]
FAILED tests/cupyx_tests/scipy_tests/ndimage_tests/test_interpolation.py::TestAffineTransformTextureMemory::test_affine_transform_texture_memory[_param_136_{mode='constant', order=1, output=float32, output_shape=None, shape=(10, 10, 10), theta=0}]
FAILED tests/cupyx_tests/scipy_tests/ndimage_tests/test_interpolation.py::TestAffineTransformTextureMemory::test_affine_transform_texture_memory[_param_137_{mode='constant', order=1, output=float32, output_shape=None, shape=(10, 10, 10), theta=90}]
FAILED tests/cupyx_tests/scipy_tests/ndimage_tests/test_interpolation.py::TestAffineTransformTextureMemory::test_affine_transform_texture_memory[_param_138_{mode='constant', order=1, output=float32, output_shape=None, shape=(10, 10, 10), theta=180}]
FAILED tests/cupyx_tests/scipy_tests/ndimage_tests/test_interpolation.py::TestAffineTransformTextureMemory::test_affine_transform_texture_memory[_param_139_{mode='constant', order=1, output=float32, output_shape=None, shape=(10, 10, 10), theta=270}]
FAILED tests/cupyx_tests/scipy_tests/ndimage_tests/test_interpolation.py::TestAffineTransformTextureMemory::test_affine_transform_texture_memory[_param_140_{mode='constant', order=1, output=float32, output_shape=None, shape=(10, 20, 30), theta=0}]
FAILED tests/cupyx_tests/scipy_tests/ndimage_tests/test_interpolation.py::TestAffineTransformTextureMemory::test_affine_transform_texture_memory[_param_141_{mode='constant', order=1, output=float32, output_shape=None, shape=(10, 20, 30), theta=90}]
FAILED tests/cupyx_tests/scipy_tests/ndimage_tests/test_interpolation.py::TestAffineTransformTextureMemory::test_affine_transform_texture_memory[_param_142_{mode='constant', order=1, output=float32, output_shape=None, shape=(10, 20, 30), theta=180}]
FAILED tests/cupyx_tests/scipy_tests/ndimage_tests/test_interpolation.py::TestAffineTransformTextureMemory::test_affine_transform_texture_memory[_param_143_{mode='constant', order=1, output=float32, output_shape=None, shape=(10, 20, 30), theta=270}]
FAILED tests/cupyx_tests/scipy_tests/ndimage_tests/test_interpolation.py::TestAffineTransformTextureMemory::test_affine_transform_texture_memory[_param_144_{mode='constant', order=1, output=float32, output_shape=10, shape=(100, 100), theta=0}]
FAILED tests/cupyx_tests/scipy_tests/ndimage_tests/test_interpolation.py::TestAffineTransformTextureMemory::test_affine_transform_texture_memory[_param_145_{mode='constant', order=1, output=float32, output_shape=10, shape=(100, 100), theta=90}]
FAILED tests/cupyx_tests/scipy_tests/ndimage_tests/test_interpolation.py::TestAffineTransformTextureMemory::test_affine_transform_texture_memory[_param_146_{mode='constant', order=1, output=float32, output_shape=10, shape=(100, 100), theta=180}]
FAILED tests/cupyx_tests/scipy_tests/ndimage_tests/test_interpolation.py::TestAffineTransformTextureMemory::test_affine_transform_texture_memory[_param_147_{mode='constant', order=1, output=float32, output_shape=10, shape=(100, 100), theta=270}]
FAILED tests/cupyx_tests/scipy_tests/ndimage_tests/test_interpolation.py::TestAffineTransformTextureMemory::test_affine_transform_texture_memory[_param_148_{mode='constant', order=1, output=float32, output_shape=10, shape=(10, 20), theta=0}]
FAILED tests/cupyx_tests/scipy_tests/ndimage_tests/test_interpolation.py::TestAffineTransformTextureMemory::test_affine_transform_texture_memory[_param_149_{mode='constant', order=1, output=float32, output_shape=10, shape=(10, 20), theta=90}]
FAILED tests/cupyx_tests/scipy_tests/ndimage_tests/test_interpolation.py::TestAffineTransformTextureMemory::test_affine_transform_texture_memory[_param_150_{mode='constant', order=1, output=float32, output_shape=10, shape=(10, 20), theta=180}]
FAILED tests/cupyx_tests/scipy_tests/ndimage_tests/test_interpolation.py::TestAffineTransformTextureMemory::test_affine_transform_texture_memory[_param_151_{mode='constant', order=1, output=float32, output_shape=10, shape=(10, 20), theta=270}]
FAILED tests/cupyx_tests/scipy_tests/ndimage_tests/test_interpolation.py::TestAffineTransformTextureMemory::test_affine_transform_texture_memory[_param_152_{mode='constant', order=1, output=float32, output_shape=10, shape=(10, 10, 10), theta=0}]
FAILED tests/cupyx_tests/scipy_tests/ndimage_tests/test_interpolation.py::TestAffineTransformTextureMemory::test_affine_transform_texture_memory[_param_153_{mode='constant', order=1, output=float32, output_shape=10, shape=(10, 10, 10), theta=90}]
FAILED tests/cupyx_tests/scipy_tests/ndimage_tests/test_interpolation.py::TestAffineTransformTextureMemory::test_affine_transform_texture_memory[_param_154_{mode='constant', order=1, output=float32, output_shape=10, shape=(10, 10, 10), theta=180}]
FAILED tests/cupyx_tests/scipy_tests/ndimage_tests/test_interpolation.py::TestAffineTransformTextureMemory::test_affine_transform_texture_memory[_param_155_{mode='constant', order=1, output=float32, output_shape=10, shape=(10, 10, 10), theta=270}]
FAILED tests/cupyx_tests/scipy_tests/ndimage_tests/test_interpolation.py::TestAffineTransformTextureMemory::test_affine_transform_texture_memory[_param_156_{mode='constant', order=1, output=float32, output_shape=10, shape=(10, 20, 30), theta=0}]
FAILED tests/cupyx_tests/scipy_tests/ndimage_tests/test_interpolation.py::TestAffineTransformTextureMemory::test_affine_transform_texture_memory[_param_157_{mode='constant', order=1, output=float32, output_shape=10, shape=(10, 20, 30), theta=90}]
FAILED tests/cupyx_tests/scipy_tests/ndimage_tests/test_interpolation.py::TestAffineTransformTextureMemory::test_affine_transform_texture_memory[_param_158_{mode='constant', order=1, output=float32, output_shape=10, shape=(10, 20, 30), theta=180}]
FAILED tests/cupyx_tests/scipy_tests/ndimage_tests/test_interpolation.py::TestAffineTransformTextureMemory::test_affine_transform_texture_memory[_param_159_{mode='constant', order=1, output=float32, output_shape=10, shape=(10, 20, 30), theta=270}]
FAILED tests/cupyx_tests/scipy_tests/ndimage_tests/test_interpolation.py::TestAffineTransformTextureMemory::test_affine_transform_texture_memory[_param_160_{mode='constant', order=1, output='empty', output_shape=None, shape=(100, 100), theta=0}]
FAILED tests/cupyx_tests/scipy_tests/ndimage_tests/test_interpolation.py::TestAffineTransformTextureMemory::test_affine_transform_texture_memory[_param_161_{mode='constant', order=1, output='empty', output_shape=None, shape=(100, 100), theta=90}]
FAILED tests/cupyx_tests/scipy_tests/ndimage_tests/test_interpolation.py::TestAffineTransformTextureMemory::test_affine_transform_texture_memory[_param_162_{mode='constant', order=1, output='empty', output_shape=None, shape=(100, 100), theta=180}]
FAILED tests/cupyx_tests/scipy_tests/ndimage_tests/test_interpolation.py::TestAffineTransformTextureMemory::test_affine_transform_texture_memory[_param_163_{mode='constant', order=1, output='empty', output_shape=None, shape=(100, 100), theta=270}]
FAILED tests/cupyx_tests/scipy_tests/ndimage_tests/test_interpolation.py::TestAffineTransformTextureMemory::test_affine_transform_texture_memory[_param_164_{mode='constant', order=1, output='empty', output_shape=None, shape=(10, 20), theta=0}]
FAILED tests/cupyx_tests/scipy_tests/ndimage_tests/test_interpolation.py::TestAffineTransformTextureMemory::test_affine_transform_texture_memory[_param_165_{mode='constant', order=1, output='empty', output_shape=None, shape=(10, 20), theta=90}]
FAILED tests/cupyx_tests/scipy_tests/ndimage_tests/test_interpolation.py::TestAffineTransformTextureMemory::test_affine_transform_texture_memory[_param_166_{mode='constant', order=1, output='empty', output_shape=None, shape=(10, 20), theta=180}]
FAILED tests/cupyx_tests/scipy_tests/ndimage_tests/test_interpolation.py::TestAffineTransformTextureMemory::test_affine_transform_texture_memory[_param_167_{mode='constant', order=1, output='empty', output_shape=None, shape=(10, 20), theta=270}]
FAILED tests/cupyx_tests/scipy_tests/ndimage_tests/test_interpolation.py::TestAffineTransformTextureMemory::test_affine_transform_texture_memory[_param_168_{mode='constant', order=1, output='empty', output_shape=None, shape=(10, 10, 10), theta=0}]
FAILED tests/cupyx_tests/scipy_tests/ndimage_tests/test_interpolation.py::TestAffineTransformTextureMemory::test_affine_transform_texture_memory[_param_169_{mode='constant', order=1, output='empty', output_shape=None, shape=(10, 10, 10), theta=90}]
FAILED tests/cupyx_tests/scipy_tests/ndimage_tests/test_interpolation.py::TestAffineTransformTextureMemory::test_affine_transform_texture_memory[_param_170_{mode='constant', order=1, output='empty', output_shape=None, shape=(10, 10, 10), theta=180}]
FAILED tests/cupyx_tests/scipy_tests/ndimage_tests/test_interpolation.py::TestAffineTransformTextureMemory::test_affine_transform_texture_memory[_param_171_{mode='constant', order=1, output='empty', output_shape=None, shape=(10, 10, 10), theta=270}]
FAILED tests/cupyx_tests/scipy_tests/ndimage_tests/test_interpolation.py::TestAffineTransformTextureMemory::test_affine_transform_texture_memory[_param_172_{mode='constant', order=1, output='empty', output_shape=None, shape=(10, 20, 30), theta=0}]
FAILED tests/cupyx_tests/scipy_tests/ndimage_tests/test_interpolation.py::TestAffineTransformTextureMemory::test_affine_transform_texture_memory[_param_173_{mode='constant', order=1, output='empty', output_shape=None, shape=(10, 20, 30), theta=90}]
FAILED tests/cupyx_tests/scipy_tests/ndimage_tests/test_interpolation.py::TestAffineTransformTextureMemory::test_affine_transform_texture_memory[_param_174_{mode='constant', order=1, output='empty', output_shape=None, shape=(10, 20, 30), theta=180}]
FAILED tests/cupyx_tests/scipy_tests/ndimage_tests/test_interpolation.py::TestAffineTransformTextureMemory::test_affine_transform_texture_memory[_param_175_{mode='constant', order=1, output='empty', output_shape=None, shape=(10, 20, 30), theta=270}]
FAILED tests/cupyx_tests/scipy_tests/ndimage_tests/test_interpolation.py::TestAffineTransformTextureMemory::test_affine_transform_texture_memory[_param_192_{mode='nearest', order=0, output=None, output_shape=None, shape=(100, 100), theta=0}]
FAILED tests/cupyx_tests/scipy_tests/ndimage_tests/test_interpolation.py::TestAffineTransformTextureMemory::test_affine_transform_texture_memory[_param_193_{mode='nearest', order=0, output=None, output_shape=None, shape=(100, 100), theta=90}]
FAILED tests/cupyx_tests/scipy_tests/ndimage_tests/test_interpolation.py::TestAffineTransformTextureMemory::test_affine_transform_texture_memory[_param_194_{mode='nearest', order=0, output=None, output_shape=None, shape=(100, 100), theta=180}]
FAILED tests/cupyx_tests/scipy_tests/ndimage_tests/test_interpolation.py::TestAffineTransformTextureMemory::test_affine_transform_texture_memory[_param_195_{mode='nearest', order=0, output=None, output_shape=None, shape=(100, 100), theta=270}]
FAILED tests/cupyx_tests/scipy_tests/ndimage_tests/test_interpolation.py::TestAffineTransformTextureMemory::test_affine_transform_texture_memory[_param_196_{mode='nearest', order=0, output=None, output_shape=None, shape=(10, 20), theta=0}]
FAILED tests/cupyx_tests/scipy_tests/ndimage_tests/test_interpolation.py::TestAffineTransformTextureMemory::test_affine_transform_texture_memory[_param_197_{mode='nearest', order=0, output=None, output_shape=None, shape=(10, 20), theta=90}]
FAILED tests/cupyx_tests/scipy_tests/ndimage_tests/test_interpolation.py::TestAffineTransformTextureMemory::test_affine_transform_texture_memory[_param_198_{mode='nearest', order=0, output=None, output_shape=None, shape=(10, 20), theta=180}]
FAILED tests/cupyx_tests/scipy_tests/ndimage_tests/test_interpolation.py::TestAffineTransformTextureMemory::test_affine_transform_texture_memory[_param_199_{mode='nearest', order=0, output=None, output_shape=None, shape=(10, 20), theta=270}]
FAILED tests/cupyx_tests/scipy_tests/ndimage_tests/test_interpolation.py::TestAffineTransformTextureMemory::test_affine_transform_texture_memory[_param_200_{mode='nearest', order=0, output=None, output_shape=None, shape=(10, 10, 10), theta=0}]
FAILED tests/cupyx_tests/scipy_tests/ndimage_tests/test_interpolation.py::TestAffineTransformTextureMemory::test_affine_transform_texture_memory[_param_201_{mode='nearest', order=0, output=None, output_shape=None, shape=(10, 10, 10), theta=90}]
FAILED tests/cupyx_tests/scipy_tests/ndimage_tests/test_interpolation.py::TestAffineTransformTextureMemory::test_affine_transform_texture_memory[_param_202_{mode='nearest', order=0, output=None, output_shape=None, shape=(10, 10, 10), theta=180}]
FAILED tests/cupyx_tests/scipy_tests/ndimage_tests/test_interpolation.py::TestAffineTransformTextureMemory::test_affine_transform_texture_memory[_param_203_{mode='nearest', order=0, output=None, output_shape=None, shape=(10, 10, 10), theta=270}]
FAILED tests/cupyx_tests/scipy_tests/ndimage_tests/test_interpolation.py::TestAffineTransformTextureMemory::test_affine_transform_texture_memory[_param_204_{mode='nearest', order=0, output=None, output_shape=None, shape=(10, 20, 30), theta=0}]
FAILED tests/cupyx_tests/scipy_tests/ndimage_tests/test_interpolation.py::TestAffineTransformTextureMemory::test_affine_transform_texture_memory[_param_205_{mode='nearest', order=0, output=None, output_shape=None, shape=(10, 20, 30), theta=90}]
FAILED tests/cupyx_tests/scipy_tests/ndimage_tests/test_interpolation.py::TestAffineTransformTextureMemory::test_affine_transform_texture_memory[_param_206_{mode='nearest', order=0, output=None, output_shape=None, shape=(10, 20, 30), theta=180}]
FAILED tests/cupyx_tests/scipy_tests/ndimage_tests/test_interpolation.py::TestAffineTransformTextureMemory::test_affine_transform_texture_memory[_param_207_{mode='nearest', order=0, output=None, output_shape=None, shape=(10, 20, 30), theta=270}]
FAILED tests/cupyx_tests/scipy_tests/ndimage_tests/test_interpolation.py::TestAffineTransformTextureMemory::test_affine_transform_texture_memory[_param_208_{mode='nearest', order=0, output=None, output_shape=10, shape=(100, 100), theta=0}]
FAILED tests/cupyx_tests/scipy_tests/ndimage_tests/test_interpolation.py::TestAffineTransformTextureMemory::test_affine_transform_texture_memory[_param_209_{mode='nearest', order=0, output=None, output_shape=10, shape=(100, 100), theta=90}]
FAILED tests/cupyx_tests/scipy_tests/ndimage_tests/test_interpolation.py::TestAffineTransformTextureMemory::test_affine_transform_texture_memory[_param_210_{mode='nearest', order=0, output=None, output_shape=10, shape=(100, 100), theta=180}]
FAILED tests/cupyx_tests/scipy_tests/ndimage_tests/test_interpolation.py::TestAffineTransformTextureMemory::test_affine_transform_texture_memory[_param_211_{mode='nearest', order=0, output=None, output_shape=10, shape=(100, 100), theta=270}]
FAILED tests/cupyx_tests/scipy_tests/ndimage_tests/test_interpolation.py::TestAffineTransformTextureMemory::test_affine_transform_texture_memory[_param_212_{mode='nearest', order=0, output=None, output_shape=10, shape=(10, 20), theta=0}]
FAILED tests/cupyx_tests/scipy_tests/ndimage_tests/test_interpolation.py::TestAffineTransformTextureMemory::test_affine_transform_texture_memory[_param_213_{mode='nearest', order=0, output=None, output_shape=10, shape=(10, 20), theta=90}]
FAILED tests/cupyx_tests/scipy_tests/ndimage_tests/test_interpolation.py::TestAffineTransformTextureMemory::test_affine_transform_texture_memory[_param_214_{mode='nearest', order=0, output=None, output_shape=10, shape=(10, 20), theta=180}]
FAILED tests/cupyx_tests/scipy_tests/ndimage_tests/test_interpolation.py::TestAffineTransformTextureMemory::test_affine_transform_texture_memory[_param_215_{mode='nearest', order=0, output=None, output_shape=10, shape=(10, 20), theta=270}]
FAILED tests/cupyx_tests/scipy_tests/ndimage_tests/test_interpolation.py::TestAffineTransformTextureMemory::test_affine_transform_texture_memory[_param_216_{mode='nearest', order=0, output=None, output_shape=10, shape=(10, 10, 10), theta=0}]
FAILED tests/cupyx_tests/scipy_tests/ndimage_tests/test_interpolation.py::TestAffineTransformTextureMemory::test_affine_transform_texture_memory[_param_217_{mode='nearest', order=0, output=None, output_shape=10, shape=(10, 10, 10), theta=90}]
FAILED tests/cupyx_tests/scipy_tests/ndimage_tests/test_interpolation.py::TestAffineTransformTextureMemory::test_affine_transform_texture_memory[_param_218_{mode='nearest', order=0, output=None, output_shape=10, shape=(10, 10, 10), theta=180}]
FAILED tests/cupyx_tests/scipy_tests/ndimage_tests/test_interpolation.py::TestAffineTransformTextureMemory::test_affine_transform_texture_memory[_param_219_{mode='nearest', order=0, output=None, output_shape=10, shape=(10, 10, 10), theta=270}]
FAILED tests/cupyx_tests/scipy_tests/ndimage_tests/test_interpolation.py::TestAffineTransformTextureMemory::test_affine_transform_texture_memory[_param_220_{mode='nearest', order=0, output=None, output_shape=10, shape=(10, 20, 30), theta=0}]
FAILED tests/cupyx_tests/scipy_tests/ndimage_tests/test_interpolation.py::TestAffineTransformTextureMemory::test_affine_transform_texture_memory[_param_221_{mode='nearest', order=0, output=None, output_shape=10, shape=(10, 20, 30), theta=90}]
FAILED tests/cupyx_tests/scipy_tests/ndimage_tests/test_interpolation.py::TestAffineTransformTextureMemory::test_affine_transform_texture_memory[_param_222_{mode='nearest', order=0, output=None, output_shape=10, shape=(10, 20, 30), theta=180}]
FAILED tests/cupyx_tests/scipy_tests/ndimage_tests/test_interpolation.py::TestAffineTransformTextureMemory::test_affine_transform_texture_memory[_param_223_{mode='nearest', order=0, output=None, output_shape=10, shape=(10, 20, 30), theta=270}]
FAILED tests/cupyx_tests/scipy_tests/ndimage_tests/test_interpolation.py::TestAffineTransformTextureMemory::test_affine_transform_texture_memory[_param_224_{mode='nearest', order=0, output=float32, output_shape=None, shape=(100, 100), theta=0}]
FAILED tests/cupyx_tests/scipy_tests/ndimage_tests/test_interpolation.py::TestAffineTransformTextureMemory::test_affine_transform_texture_memory[_param_225_{mode='nearest', order=0, output=float32, output_shape=None, shape=(100, 100), theta=90}]
FAILED tests/cupyx_tests/scipy_tests/ndimage_tests/test_interpolation.py::TestAffineTransformTextureMemory::test_affine_transform_texture_memory[_param_226_{mode='nearest', order=0, output=float32, output_shape=None, shape=(100, 100), theta=180}]
FAILED tests/cupyx_tests/scipy_tests/ndimage_tests/test_interpolation.py::TestAffineTransformTextureMemory::test_affine_transform_texture_memory[_param_227_{mode='nearest', order=0, output=float32, output_shape=None, shape=(100, 100), theta=270}]
FAILED tests/cupyx_tests/scipy_tests/ndimage_tests/test_interpolation.py::TestAffineTransformTextureMemory::test_affine_transform_texture_memory[_param_228_{mode='nearest', order=0, output=float32, output_shape=None, shape=(10, 20), theta=0}]
FAILED tests/cupyx_tests/scipy_tests/ndimage_tests/test_interpolation.py::TestAffineTransformTextureMemory::test_affine_transform_texture_memory[_param_229_{mode='nearest', order=0, output=float32, output_shape=None, shape=(10, 20), theta=90}]
FAILED tests/cupyx_tests/scipy_tests/ndimage_tests/test_interpolation.py::TestAffineTransformTextureMemory::test_affine_transform_texture_memory[_param_230_{mode='nearest', order=0, output=float32, output_shape=None, shape=(10, 20), theta=180}]
FAILED tests/cupyx_tests/scipy_tests/ndimage_tests/test_interpolation.py::TestAffineTransformTextureMemory::test_affine_transform_texture_memory[_param_231_{mode='nearest', order=0, output=float32, output_shape=None, shape=(10, 20), theta=270}]
FAILED tests/cupyx_tests/scipy_tests/ndimage_tests/test_interpolation.py::TestAffineTransformTextureMemory::test_affine_transform_texture_memory[_param_232_{mode='nearest', order=0, output=float32, output_shape=None, shape=(10, 10, 10), theta=0}]
FAILED tests/cupyx_tests/scipy_tests/ndimage_tests/test_interpolation.py::TestAffineTransformTextureMemory::test_affine_transform_texture_memory[_param_233_{mode='nearest', order=0, output=float32, output_shape=None, shape=(10, 10, 10), theta=90}]
FAILED tests/cupyx_tests/scipy_tests/ndimage_tests/test_interpolation.py::TestAffineTransformTextureMemory::test_affine_transform_texture_memory[_param_234_{mode='nearest', order=0, output=float32, output_shape=None, shape=(10, 10, 10), theta=180}]
FAILED tests/cupyx_tests/scipy_tests/ndimage_tests/test_interpolation.py::TestAffineTransformTextureMemory::test_affine_transform_texture_memory[_param_235_{mode='nearest', order=0, output=float32, output_shape=None, shape=(10, 10, 10), theta=270}]
FAILED tests/cupyx_tests/scipy_tests/ndimage_tests/test_interpolation.py::TestAffineTransformTextureMemory::test_affine_transform_texture_memory[_param_236_{mode='nearest', order=0, output=float32, output_shape=None, shape=(10, 20, 30), theta=0}]
FAILED tests/cupyx_tests/scipy_tests/ndimage_tests/test_interpolation.py::TestAffineTransformTextureMemory::test_affine_transform_texture_memory[_param_237_{mode='nearest', order=0, output=float32, output_shape=None, shape=(10, 20, 30), theta=90}]
FAILED tests/cupyx_tests/scipy_tests/ndimage_tests/test_interpolation.py::TestAffineTransformTextureMemory::test_affine_transform_texture_memory[_param_238_{mode='nearest', order=0, output=float32, output_shape=None, shape=(10, 20, 30), theta=180}]
FAILED tests/cupyx_tests/scipy_tests/ndimage_tests/test_interpolation.py::TestAffineTransformTextureMemory::test_affine_transform_texture_memory[_param_239_{mode='nearest', order=0, output=float32, output_shape=None, shape=(10, 20, 30), theta=270}]
FAILED tests/cupyx_tests/scipy_tests/ndimage_tests/test_interpolation.py::TestAffineTransformTextureMemory::test_affine_transform_texture_memory[_param_240_{mode='nearest', order=0, output=float32, output_shape=10, shape=(100, 100), theta=0}]
FAILED tests/cupyx_tests/scipy_tests/ndimage_tests/test_interpolation.py::TestAffineTransformTextureMemory::test_affine_transform_texture_memory[_param_241_{mode='nearest', order=0, output=float32, output_shape=10, shape=(100, 100), theta=90}]
FAILED tests/cupyx_tests/scipy_tests/ndimage_tests/test_interpolation.py::TestAffineTransformTextureMemory::test_affine_transform_texture_memory[_param_242_{mode='nearest', order=0, output=float32, output_shape=10, shape=(100, 100), theta=180}]
FAILED tests/cupyx_tests/scipy_tests/ndimage_tests/test_interpolation.py::TestAffineTransformTextureMemory::test_affine_transform_texture_memory[_param_243_{mode='nearest', order=0, output=float32, output_shape=10, shape=(100, 100), theta=270}]
FAILED tests/cupyx_tests/scipy_tests/ndimage_tests/test_interpolation.py::TestAffineTransformTextureMemory::test_affine_transform_texture_memory[_param_244_{mode='nearest', order=0, output=float32, output_shape=10, shape=(10, 20), theta=0}]
FAILED tests/cupyx_tests/scipy_tests/ndimage_tests/test_interpolation.py::TestAffineTransformTextureMemory::test_affine_transform_texture_memory[_param_245_{mode='nearest', order=0, output=float32, output_shape=10, shape=(10, 20), theta=90}]
FAILED tests/cupyx_tests/scipy_tests/ndimage_tests/test_interpolation.py::TestAffineTransformTextureMemory::test_affine_transform_texture_memory[_param_246_{mode='nearest', order=0, output=float32, output_shape=10, shape=(10, 20), theta=180}]
FAILED tests/cupyx_tests/scipy_tests/ndimage_tests/test_interpolation.py::TestAffineTransformTextureMemory::test_affine_transform_texture_memory[_param_247_{mode='nearest', order=0, output=float32, output_shape=10, shape=(10, 20), theta=270}]
FAILED tests/cupyx_tests/scipy_tests/ndimage_tests/test_interpolation.py::TestAffineTransformTextureMemory::test_affine_transform_texture_memory[_param_248_{mode='nearest', order=0, output=float32, output_shape=10, shape=(10, 10, 10), theta=0}]
FAILED tests/cupyx_tests/scipy_tests/ndimage_tests/test_interpolation.py::TestAffineTransformTextureMemory::test_affine_transform_texture_memory[_param_249_{mode='nearest', order=0, output=float32, output_shape=10, shape=(10, 10, 10), theta=90}]
FAILED tests/cupyx_tests/scipy_tests/ndimage_tests/test_interpolation.py::TestAffineTransformTextureMemory::test_affine_transform_texture_memory[_param_250_{mode='nearest', order=0, output=float32, output_shape=10, shape=(10, 10, 10), theta=180}]
FAILED tests/cupyx_tests/scipy_tests/ndimage_tests/test_interpolation.py::TestAffineTransformTextureMemory::test_affine_transform_texture_memory[_param_251_{mode='nearest', order=0, output=float32, output_shape=10, shape=(10, 10, 10), theta=270}]
FAILED tests/cupyx_tests/scipy_tests/ndimage_tests/test_interpolation.py::TestAffineTransformTextureMemory::test_affine_transform_texture_memory[_param_252_{mode='nearest', order=0, output=float32, output_shape=10, shape=(10, 20, 30), theta=0}]
FAILED tests/cupyx_tests/scipy_tests/ndimage_tests/test_interpolation.py::TestAffineTransformTextureMemory::test_affine_transform_texture_memory[_param_253_{mode='nearest', order=0, output=float32, output_shape=10, shape=(10, 20, 30), theta=90}]
FAILED tests/cupyx_tests/scipy_tests/ndimage_tests/test_interpolation.py::TestAffineTransformTextureMemory::test_affine_transform_texture_memory[_param_254_{mode='nearest', order=0, output=float32, output_shape=10, shape=(10, 20, 30), theta=180}]
FAILED tests/cupyx_tests/scipy_tests/ndimage_tests/test_interpolation.py::TestAffineTransformTextureMemory::test_affine_transform_texture_memory[_param_255_{mode='nearest', order=0, output=float32, output_shape=10, shape=(10, 20, 30), theta=270}]
FAILED tests/cupyx_tests/scipy_tests/ndimage_tests/test_interpolation.py::TestAffineTransformTextureMemory::test_affine_transform_texture_memory[_param_256_{mode='nearest', order=0, output='empty', output_shape=None, shape=(100, 100), theta=0}]
FAILED tests/cupyx_tests/scipy_tests/ndimage_tests/test_interpolation.py::TestAffineTransformTextureMemory::test_affine_transform_texture_memory[_param_257_{mode='nearest', order=0, output='empty', output_shape=None, shape=(100, 100), theta=90}]
FAILED tests/cupyx_tests/scipy_tests/ndimage_tests/test_interpolation.py::TestAffineTransformTextureMemory::test_affine_transform_texture_memory[_param_258_{mode='nearest', order=0, output='empty', output_shape=None, shape=(100, 100), theta=180}]
FAILED tests/cupyx_tests/scipy_tests/ndimage_tests/test_interpolation.py::TestAffineTransformTextureMemory::test_affine_transform_texture_memory[_param_259_{mode='nearest', order=0, output='empty', output_shape=None, shape=(100, 100), theta=270}]
FAILED tests/cupyx_tests/scipy_tests/ndimage_tests/test_interpolation.py::TestAffineTransformTextureMemory::test_affine_transform_texture_memory[_param_260_{mode='nearest', order=0, output='empty', output_shape=None, shape=(10, 20), theta=0}]
FAILED tests/cupyx_tests/scipy_tests/ndimage_tests/test_interpolation.py::TestAffineTransformTextureMemory::test_affine_transform_texture_memory[_param_261_{mode='nearest', order=0, output='empty', output_shape=None, shape=(10, 20), theta=90}]
FAILED tests/cupyx_tests/scipy_tests/ndimage_tests/test_interpolation.py::TestAffineTransformTextureMemory::test_affine_transform_texture_memory[_param_262_{mode='nearest', order=0, output='empty', output_shape=None, shape=(10, 20), theta=180}]
FAILED tests/cupyx_tests/scipy_tests/ndimage_tests/test_interpolation.py::TestAffineTransformTextureMemory::test_affine_transform_texture_memory[_param_263_{mode='nearest', order=0, output='empty', output_shape=None, shape=(10, 20), theta=270}]
FAILED tests/cupyx_tests/scipy_tests/ndimage_tests/test_interpolation.py::TestAffineTransformTextureMemory::test_affine_transform_texture_memory[_param_264_{mode='nearest', order=0, output='empty', output_shape=None, shape=(10, 10, 10), theta=0}]
FAILED tests/cupyx_tests/scipy_tests/ndimage_tests/test_interpolation.py::TestAffineTransformTextureMemory::test_affine_transform_texture_memory[_param_265_{mode='nearest', order=0, output='empty', output_shape=None, shape=(10, 10, 10), theta=90}]
FAILED tests/cupyx_tests/scipy_tests/ndimage_tests/test_interpolation.py::TestAffineTransformTextureMemory::test_affine_transform_texture_memory[_param_266_{mode='nearest', order=0, output='empty', output_shape=None, shape=(10, 10, 10), theta=180}]
FAILED tests/cupyx_tests/scipy_tests/ndimage_tests/test_interpolation.py::TestAffineTransformTextureMemory::test_affine_transform_texture_memory[_param_267_{mode='nearest', order=0, output='empty', output_shape=None, shape=(10, 10, 10), theta=270}]
FAILED tests/cupyx_tests/scipy_tests/ndimage_tests/test_interpolation.py::TestAffineTransformTextureMemory::test_affine_transform_texture_memory[_param_268_{mode='nearest', order=0, output='empty', output_shape=None, shape=(10, 20, 30), theta=0}]
FAILED tests/cupyx_tests/scipy_tests/ndimage_tests/test_interpolation.py::TestAffineTransformTextureMemory::test_affine_transform_texture_memory[_param_269_{mode='nearest', order=0, output='empty', output_shape=None, shape=(10, 20, 30), theta=90}]
FAILED tests/cupyx_tests/scipy_tests/ndimage_tests/test_interpolation.py::TestAffineTransformTextureMemory::test_affine_transform_texture_memory[_param_270_{mode='nearest', order=0, output='empty', output_shape=None, shape=(10, 20, 30), theta=180}]
FAILED tests/cupyx_tests/scipy_tests/ndimage_tests/test_interpolation.py::TestAffineTransformTextureMemory::test_affine_transform_texture_memory[_param_271_{mode='nearest', order=0, output='empty', output_shape=None, shape=(10, 20, 30), theta=270}]
FAILED tests/cupyx_tests/scipy_tests/ndimage_tests/test_interpolation.py::TestAffineTransformTextureMemory::test_affine_transform_texture_memory[_param_288_{mode='nearest', order=1, output=None, output_shape=None, shape=(100, 100), theta=0}]
FAILED tests/cupyx_tests/scipy_tests/ndimage_tests/test_interpolation.py::TestAffineTransformTextureMemory::test_affine_transform_texture_memory[_param_289_{mode='nearest', order=1, output=None, output_shape=None, shape=(100, 100), theta=90}]
FAILED tests/cupyx_tests/scipy_tests/ndimage_tests/test_interpolation.py::TestAffineTransformTextureMemory::test_affine_transform_texture_memory[_param_290_{mode='nearest', order=1, output=None, output_shape=None, shape=(100, 100), theta=180}]
FAILED tests/cupyx_tests/scipy_tests/ndimage_tests/test_interpolation.py::TestAffineTransformTextureMemory::test_affine_transform_texture_memory[_param_291_{mode='nearest', order=1, output=None, output_shape=None, shape=(100, 100), theta=270}]
FAILED tests/cupyx_tests/scipy_tests/ndimage_tests/test_interpolation.py::TestAffineTransformTextureMemory::test_affine_transform_texture_memory[_param_292_{mode='nearest', order=1, output=None, output_shape=None, shape=(10, 20), theta=0}]
FAILED tests/cupyx_tests/scipy_tests/ndimage_tests/test_interpolation.py::TestAffineTransformTextureMemory::test_affine_transform_texture_memory[_param_293_{mode='nearest', order=1, output=None, output_shape=None, shape=(10, 20), theta=90}]
FAILED tests/cupyx_tests/scipy_tests/ndimage_tests/test_interpolation.py::TestAffineTransformTextureMemory::test_affine_transform_texture_memory[_param_294_{mode='nearest', order=1, output=None, output_shape=None, shape=(10, 20), theta=180}]
FAILED tests/cupyx_tests/scipy_tests/ndimage_tests/test_interpolation.py::TestAffineTransformTextureMemory::test_affine_transform_texture_memory[_param_295_{mode='nearest', order=1, output=None, output_shape=None, shape=(10, 20), theta=270}]
FAILED tests/cupyx_tests/scipy_tests/ndimage_tests/test_interpolation.py::TestAffineTransformTextureMemory::test_affine_transform_texture_memory[_param_296_{mode='nearest', order=1, output=None, output_shape=None, shape=(10, 10, 10), theta=0}]
FAILED tests/cupyx_tests/scipy_tests/ndimage_tests/test_interpolation.py::TestAffineTransformTextureMemory::test_affine_transform_texture_memory[_param_297_{mode='nearest', order=1, output=None, output_shape=None, shape=(10, 10, 10), theta=90}]
FAILED tests/cupyx_tests/scipy_tests/ndimage_tests/test_interpolation.py::TestAffineTransformTextureMemory::test_affine_transform_texture_memory[_param_298_{mode='nearest', order=1, output=None, output_shape=None, shape=(10, 10, 10), theta=180}]
FAILED tests/cupyx_tests/scipy_tests/ndimage_tests/test_interpolation.py::TestAffineTransformTextureMemory::test_affine_transform_texture_memory[_param_299_{mode='nearest', order=1, output=None, output_shape=None, shape=(10, 10, 10), theta=270}]
FAILED tests/cupyx_tests/scipy_tests/ndimage_tests/test_interpolation.py::TestAffineTransformTextureMemory::test_affine_transform_texture_memory[_param_300_{mode='nearest', order=1, output=None, output_shape=None, shape=(10, 20, 30), theta=0}]
FAILED tests/cupyx_tests/scipy_tests/ndimage_tests/test_interpolation.py::TestAffineTransformTextureMemory::test_affine_transform_texture_memory[_param_301_{mode='nearest', order=1, output=None, output_shape=None, shape=(10, 20, 30), theta=90}]
FAILED tests/cupyx_tests/scipy_tests/ndimage_tests/test_interpolation.py::TestAffineTransformTextureMemory::test_affine_transform_texture_memory[_param_302_{mode='nearest', order=1, output=None, output_shape=None, shape=(10, 20, 30), theta=180}]
FAILED tests/cupyx_tests/scipy_tests/ndimage_tests/test_interpolation.py::TestAffineTransformTextureMemory::test_affine_transform_texture_memory[_param_303_{mode='nearest', order=1, output=None, output_shape=None, shape=(10, 20, 30), theta=270}]
FAILED tests/cupyx_tests/scipy_tests/ndimage_tests/test_interpolation.py::TestAffineTransformTextureMemory::test_affine_transform_texture_memory[_param_304_{mode='nearest', order=1, output=None, output_shape=10, shape=(100, 100), theta=0}]
FAILED tests/cupyx_tests/scipy_tests/ndimage_tests/test_interpolation.py::TestAffineTransformTextureMemory::test_affine_transform_texture_memory[_param_305_{mode='nearest', order=1, output=None, output_shape=10, shape=(100, 100), theta=90}]
FAILED tests/cupyx_tests/scipy_tests/ndimage_tests/test_interpolation.py::TestAffineTransformTextureMemory::test_affine_transform_texture_memory[_param_306_{mode='nearest', order=1, output=None, output_shape=10, shape=(100, 100), theta=180}]
FAILED tests/cupyx_tests/scipy_tests/ndimage_tests/test_interpolation.py::TestAffineTransformTextureMemory::test_affine_transform_texture_memory[_param_307_{mode='nearest', order=1, output=None, output_shape=10, shape=(100, 100), theta=270}]
FAILED tests/cupyx_tests/scipy_tests/ndimage_tests/test_interpolation.py::TestAffineTransformTextureMemory::test_affine_transform_texture_memory[_param_308_{mode='nearest', order=1, output=None, output_shape=10, shape=(10, 20), theta=0}]
FAILED tests/cupyx_tests/scipy_tests/ndimage_tests/test_interpolation.py::TestAffineTransformTextureMemory::test_affine_transform_texture_memory[_param_309_{mode='nearest', order=1, output=None, output_shape=10, shape=(10, 20), theta=90}]
FAILED tests/cupyx_tests/scipy_tests/ndimage_tests/test_interpolation.py::TestAffineTransformTextureMemory::test_affine_transform_texture_memory[_param_310_{mode='nearest', order=1, output=None, output_shape=10, shape=(10, 20), theta=180}]
FAILED tests/cupyx_tests/scipy_tests/ndimage_tests/test_interpolation.py::TestAffineTransformTextureMemory::test_affine_transform_texture_memory[_param_311_{mode='nearest', order=1, output=None, output_shape=10, shape=(10, 20), theta=270}]
FAILED tests/cupyx_tests/scipy_tests/ndimage_tests/test_interpolation.py::TestAffineTransformTextureMemory::test_affine_transform_texture_memory[_param_312_{mode='nearest', order=1, output=None, output_shape=10, shape=(10, 10, 10), theta=0}]
FAILED tests/cupyx_tests/scipy_tests/ndimage_tests/test_interpolation.py::TestAffineTransformTextureMemory::test_affine_transform_texture_memory[_param_313_{mode='nearest', order=1, output=None, output_shape=10, shape=(10, 10, 10), theta=90}]
FAILED tests/cupyx_tests/scipy_tests/ndimage_tests/test_interpolation.py::TestAffineTransformTextureMemory::test_affine_transform_texture_memory[_param_314_{mode='nearest', order=1, output=None, output_shape=10, shape=(10, 10, 10), theta=180}]
FAILED tests/cupyx_tests/scipy_tests/ndimage_tests/test_interpolation.py::TestAffineTransformTextureMemory::test_affine_transform_texture_memory[_param_315_{mode='nearest', order=1, output=None, output_shape=10, shape=(10, 10, 10), theta=270}]
FAILED tests/cupyx_tests/scipy_tests/ndimage_tests/test_interpolation.py::TestAffineTransformTextureMemory::test_affine_transform_texture_memory[_param_316_{mode='nearest', order=1, output=None, output_shape=10, shape=(10, 20, 30), theta=0}]
FAILED tests/cupyx_tests/scipy_tests/ndimage_tests/test_interpolation.py::TestAffineTransformTextureMemory::test_affine_transform_texture_memory[_param_317_{mode='nearest', order=1, output=None, output_shape=10, shape=(10, 20, 30), theta=90}]
FAILED tests/cupyx_tests/scipy_tests/ndimage_tests/test_interpolation.py::TestAffineTransformTextureMemory::test_affine_transform_texture_memory[_param_318_{mode='nearest', order=1, output=None, output_shape=10, shape=(10, 20, 30), theta=180}]
FAILED tests/cupyx_tests/scipy_tests/ndimage_tests/test_interpolation.py::TestAffineTransformTextureMemory::test_affine_transform_texture_memory[_param_319_{mode='nearest', order=1, output=None, output_shape=10, shape=(10, 20, 30), theta=270}]
FAILED tests/cupyx_tests/scipy_tests/ndimage_tests/test_interpolation.py::TestAffineTransformTextureMemory::test_affine_transform_texture_memory[_param_320_{mode='nearest', order=1, output=float32, output_shape=None, shape=(100, 100), theta=0}]
FAILED tests/cupyx_tests/scipy_tests/ndimage_tests/test_interpolation.py::TestAffineTransformTextureMemory::test_affine_transform_texture_memory[_param_321_{mode='nearest', order=1, output=float32, output_shape=None, shape=(100, 100), theta=90}]
FAILED tests/cupyx_tests/scipy_tests/ndimage_tests/test_interpolation.py::TestAffineTransformTextureMemory::test_affine_transform_texture_memory[_param_322_{mode='nearest', order=1, output=float32, output_shape=None, shape=(100, 100), theta=180}]
FAILED tests/cupyx_tests/scipy_tests/ndimage_tests/test_interpolation.py::TestAffineTransformTextureMemory::test_affine_transform_texture_memory[_param_323_{mode='nearest', order=1, output=float32, output_shape=None, shape=(100, 100), theta=270}]
FAILED tests/cupyx_tests/scipy_tests/ndimage_tests/test_interpolation.py::TestAffineTransformTextureMemory::test_affine_transform_texture_memory[_param_324_{mode='nearest', order=1, output=float32, output_shape=None, shape=(10, 20), theta=0}]
FAILED tests/cupyx_tests/scipy_tests/ndimage_tests/test_interpolation.py::TestAffineTransformTextureMemory::test_affine_transform_texture_memory[_param_325_{mode='nearest', order=1, output=float32, output_shape=None, shape=(10, 20), theta=90}]
FAILED tests/cupyx_tests/scipy_tests/ndimage_tests/test_interpolation.py::TestAffineTransformTextureMemory::test_affine_transform_texture_memory[_param_326_{mode='nearest', order=1, output=float32, output_shape=None, shape=(10, 20), theta=180}]
FAILED tests/cupyx_tests/scipy_tests/ndimage_tests/test_interpolation.py::TestAffineTransformTextureMemory::test_affine_transform_texture_memory[_param_327_{mode='nearest', order=1, output=float32, output_shape=None, shape=(10, 20), theta=270}]
FAILED tests/cupyx_tests/scipy_tests/ndimage_tests/test_interpolation.py::TestAffineTransformTextureMemory::test_affine_transform_texture_memory[_param_328_{mode='nearest', order=1, output=float32, output_shape=None, shape=(10, 10, 10), theta=0}]
FAILED tests/cupyx_tests/scipy_tests/ndimage_tests/test_interpolation.py::TestAffineTransformTextureMemory::test_affine_transform_texture_memory[_param_329_{mode='nearest', order=1, output=float32, output_shape=None, shape=(10, 10, 10), theta=90}]
FAILED tests/cupyx_tests/scipy_tests/ndimage_tests/test_interpolation.py::TestAffineTransformTextureMemory::test_affine_transform_texture_memory[_param_330_{mode='nearest', order=1, output=float32, output_shape=None, shape=(10, 10, 10), theta=180}]
FAILED tests/cupyx_tests/scipy_tests/ndimage_tests/test_interpolation.py::TestAffineTransformTextureMemory::test_affine_transform_texture_memory[_param_331_{mode='nearest', order=1, output=float32, output_shape=None, shape=(10, 10, 10), theta=270}]
FAILED tests/cupyx_tests/scipy_tests/ndimage_tests/test_interpolation.py::TestAffineTransformTextureMemory::test_affine_transform_texture_memory[_param_332_{mode='nearest', order=1, output=float32, output_shape=None, shape=(10, 20, 30), theta=0}]
FAILED tests/cupyx_tests/scipy_tests/ndimage_tests/test_interpolation.py::TestAffineTransformTextureMemory::test_affine_transform_texture_memory[_param_333_{mode='nearest', order=1, output=float32, output_shape=None, shape=(10, 20, 30), theta=90}]
FAILED tests/cupyx_tests/scipy_tests/ndimage_tests/test_interpolation.py::TestAffineTransformTextureMemory::test_affine_transform_texture_memory[_param_334_{mode='nearest', order=1, output=float32, output_shape=None, shape=(10, 20, 30), theta=180}]
FAILED tests/cupyx_tests/scipy_tests/ndimage_tests/test_interpolation.py::TestAffineTransformTextureMemory::test_affine_transform_texture_memory[_param_335_{mode='nearest', order=1, output=float32, output_shape=None, shape=(10, 20, 30), theta=270}]
FAILED tests/cupyx_tests/scipy_tests/ndimage_tests/test_interpolation.py::TestAffineTransformTextureMemory::test_affine_transform_texture_memory[_param_336_{mode='nearest', order=1, output=float32, output_shape=10, shape=(100, 100), theta=0}]
FAILED tests/cupyx_tests/scipy_tests/ndimage_tests/test_interpolation.py::TestAffineTransformTextureMemory::test_affine_transform_texture_memory[_param_337_{mode='nearest', order=1, output=float32, output_shape=10, shape=(100, 100), theta=90}]
FAILED tests/cupyx_tests/scipy_tests/ndimage_tests/test_interpolation.py::TestAffineTransformTextureMemory::test_affine_transform_texture_memory[_param_338_{mode='nearest', order=1, output=float32, output_shape=10, shape=(100, 100), theta=180}]
FAILED tests/cupyx_tests/scipy_tests/ndimage_tests/test_interpolation.py::TestAffineTransformTextureMemory::test_affine_transform_texture_memory[_param_339_{mode='nearest', order=1, output=float32, output_shape=10, shape=(100, 100), theta=270}]
FAILED tests/cupyx_tests/scipy_tests/ndimage_tests/test_interpolation.py::TestAffineTransformTextureMemory::test_affine_transform_texture_memory[_param_340_{mode='nearest', order=1, output=float32, output_shape=10, shape=(10, 20), theta=0}]
FAILED tests/cupyx_tests/scipy_tests/ndimage_tests/test_interpolation.py::TestAffineTransformTextureMemory::test_affine_transform_texture_memory[_param_341_{mode='nearest', order=1, output=float32, output_shape=10, shape=(10, 20), theta=90}]
FAILED tests/cupyx_tests/scipy_tests/ndimage_tests/test_interpolation.py::TestAffineTransformTextureMemory::test_affine_transform_texture_memory[_param_342_{mode='nearest', order=1, output=float32, output_shape=10, shape=(10, 20), theta=180}]
FAILED tests/cupyx_tests/scipy_tests/ndimage_tests/test_interpolation.py::TestAffineTransformTextureMemory::test_affine_transform_texture_memory[_param_343_{mode='nearest', order=1, output=float32, output_shape=10, shape=(10, 20), theta=270}]
FAILED tests/cupyx_tests/scipy_tests/ndimage_tests/test_interpolation.py::TestAffineTransformTextureMemory::test_affine_transform_texture_memory[_param_344_{mode='nearest', order=1, output=float32, output_shape=10, shape=(10, 10, 10), theta=0}]
FAILED tests/cupyx_tests/scipy_tests/ndimage_tests/test_interpolation.py::TestAffineTransformTextureMemory::test_affine_transform_texture_memory[_param_345_{mode='nearest', order=1, output=float32, output_shape=10, shape=(10, 10, 10), theta=90}]
FAILED tests/cupyx_tests/scipy_tests/ndimage_tests/test_interpolation.py::TestAffineTransformTextureMemory::test_affine_transform_texture_memory[_param_346_{mode='nearest', order=1, output=float32, output_shape=10, shape=(10, 10, 10), theta=180}]
FAILED tests/cupyx_tests/scipy_tests/ndimage_tests/test_interpolation.py::TestAffineTransformTextureMemory::test_affine_transform_texture_memory[_param_347_{mode='nearest', order=1, output=float32, output_shape=10, shape=(10, 10, 10), theta=270}]
FAILED tests/cupyx_tests/scipy_tests/ndimage_tests/test_interpolation.py::TestAffineTransformTextureMemory::test_affine_transform_texture_memory[_param_348_{mode='nearest', order=1, output=float32, output_shape=10, shape=(10, 20, 30), theta=0}]
FAILED tests/cupyx_tests/scipy_tests/ndimage_tests/test_interpolation.py::TestAffineTransformTextureMemory::test_affine_transform_texture_memory[_param_349_{mode='nearest', order=1, output=float32, output_shape=10, shape=(10, 20, 30), theta=90}]
FAILED tests/cupyx_tests/scipy_tests/ndimage_tests/test_interpolation.py::TestAffineTransformTextureMemory::test_affine_transform_texture_memory[_param_350_{mode='nearest', order=1, output=float32, output_shape=10, shape=(10, 20, 30), theta=180}]
FAILED tests/cupyx_tests/scipy_tests/ndimage_tests/test_interpolation.py::TestAffineTransformTextureMemory::test_affine_transform_texture_memory[_param_351_{mode='nearest', order=1, output=float32, output_shape=10, shape=(10, 20, 30), theta=270}]
FAILED tests/cupyx_tests/scipy_tests/ndimage_tests/test_interpolation.py::TestAffineTransformTextureMemory::test_affine_transform_texture_memory[_param_352_{mode='nearest', order=1, output='empty', output_shape=None, shape=(100, 100), theta=0}]
FAILED tests/cupyx_tests/scipy_tests/ndimage_tests/test_interpolation.py::TestAffineTransformTextureMemory::test_affine_transform_texture_memory[_param_353_{mode='nearest', order=1, output='empty', output_shape=None, shape=(100, 100), theta=90}]
FAILED tests/cupyx_tests/scipy_tests/ndimage_tests/test_interpolation.py::TestAffineTransformTextureMemory::test_affine_transform_texture_memory[_param_354_{mode='nearest', order=1, output='empty', output_shape=None, shape=(100, 100), theta=180}]
FAILED tests/cupyx_tests/scipy_tests/ndimage_tests/test_interpolation.py::TestAffineTransformTextureMemory::test_affine_transform_texture_memory[_param_355_{mode='nearest', order=1, output='empty', output_shape=None, shape=(100, 100), theta=270}]
FAILED tests/cupyx_tests/scipy_tests/ndimage_tests/test_interpolation.py::TestAffineTransformTextureMemory::test_affine_transform_texture_memory[_param_356_{mode='nearest', order=1, output='empty', output_shape=None, shape=(10, 20), theta=0}]
FAILED tests/cupyx_tests/scipy_tests/ndimage_tests/test_interpolation.py::TestAffineTransformTextureMemory::test_affine_transform_texture_memory[_param_357_{mode='nearest', order=1, output='empty', output_shape=None, shape=(10, 20), theta=90}]
FAILED tests/cupyx_tests/scipy_tests/ndimage_tests/test_interpolation.py::TestAffineTransformTextureMemory::test_affine_transform_texture_memory[_param_358_{mode='nearest', order=1, output='empty', output_shape=None, shape=(10, 20), theta=180}]
FAILED tests/cupyx_tests/scipy_tests/ndimage_tests/test_interpolation.py::TestAffineTransformTextureMemory::test_affine_transform_texture_memory[_param_359_{mode='nearest', order=1, output='empty', output_shape=None, shape=(10, 20), theta=270}]
FAILED tests/cupyx_tests/scipy_tests/ndimage_tests/test_interpolation.py::TestAffineTransformTextureMemory::test_affine_transform_texture_memory[_param_360_{mode='nearest', order=1, output='empty', output_shape=None, shape=(10, 10, 10), theta=0}]
FAILED tests/cupyx_tests/scipy_tests/ndimage_tests/test_interpolation.py::TestAffineTransformTextureMemory::test_affine_transform_texture_memory[_param_361_{mode='nearest', order=1, output='empty', output_shape=None, shape=(10, 10, 10), theta=90}]
FAILED tests/cupyx_tests/scipy_tests/ndimage_tests/test_interpolation.py::TestAffineTransformTextureMemory::test_affine_transform_texture_memory[_param_362_{mode='nearest', order=1, output='empty', output_shape=None, shape=(10, 10, 10), theta=180}]
FAILED tests/cupyx_tests/scipy_tests/ndimage_tests/test_interpolation.py::TestAffineTransformTextureMemory::test_affine_transform_texture_memory[_param_363_{mode='nearest', order=1, output='empty', output_shape=None, shape=(10, 10, 10), theta=270}]
FAILED tests/cupyx_tests/scipy_tests/ndimage_tests/test_interpolation.py::TestAffineTransformTextureMemory::test_affine_transform_texture_memory[_param_364_{mode='nearest', order=1, output='empty', output_shape=None, shape=(10, 20, 30), theta=0}]
FAILED tests/cupyx_tests/scipy_tests/ndimage_tests/test_interpolation.py::TestAffineTransformTextureMemory::test_affine_transform_texture_memory[_param_365_{mode='nearest', order=1, output='empty', output_shape=None, shape=(10, 20, 30), theta=90}]
FAILED tests/cupyx_tests/scipy_tests/ndimage_tests/test_interpolation.py::TestAffineTransformTextureMemory::test_affine_transform_texture_memory[_param_366_{mode='nearest', order=1, output='empty', output_shape=None, shape=(10, 20, 30), theta=180}]
FAILED tests/cupyx_tests/scipy_tests/ndimage_tests/test_interpolation.py::TestAffineTransformTextureMemory::test_affine_transform_texture_memory[_param_367_{mode='nearest', order=1, output='empty', output_shape=None, shape=(10, 20, 30), theta=270}]
FAILED tests/cupyx_tests/scipy_tests/ndimage_tests/test_interpolation.py::TestZoomOutputSize1::test_zoom_output_size1[_param_4_{grid_mode=False, mode='constant', order=4, shape=(5, 5, 2), zoom=(2, 2, 0.5)}]
FAILED tests/cupyx_tests/scipy_tests/ndimage_tests/test_interpolation.py::TestZoomOutputSize1::test_zoom_output_size1[_param_5_{grid_mode=False, mode='constant', order=5, shape=(5, 5, 2), zoom=(2, 2, 0.5)}]
FAILED tests/cupyx_tests/scipy_tests/ndimage_tests/test_interpolation.py::TestZoomOutputSize1::test_zoom_output_size1[_param_16_{grid_mode=False, mode='mirror', order=4, shape=(5, 5, 2), zoom=(2, 2, 0.5)}]
FAILED tests/cupyx_tests/scipy_tests/ndimage_tests/test_interpolation.py::TestZoomOutputSize1::test_zoom_output_size1[_param_17_{grid_mode=False, mode='mirror', order=5, shape=(5, 5, 2), zoom=(2, 2, 0.5)}]
FAILED tests/cupyx_tests/scipy_tests/ndimage_tests/test_interpolation.py::TestZoomOutputSize1::test_zoom_output_size1[_param_22_{grid_mode=False, mode='wrap', order=4, shape=(5, 5, 2), zoom=(2, 2, 0.5)}]
FAILED tests/cupyx_tests/scipy_tests/ndimage_tests/test_interpolation.py::TestZoomOutputSize1::test_zoom_output_size1[_param_23_{grid_mode=False, mode='wrap', order=5, shape=(5, 5, 2), zoom=(2, 2, 0.5)}]
FAILED tests/cupyx_tests/scipy_tests/ndimage_tests/test_interpolation.py::TestZoomOutputSize1::test_zoom_output_size1[_param_46_{grid_mode=False, mode='grid-constant', order=4, shape=(5, 5, 2), zoom=(2, 2, 0.5)}]
FAILED tests/cupyx_tests/scipy_tests/ndimage_tests/test_interpolation.py::TestZoomOutputSize1::test_zoom_output_size1[_param_47_{grid_mode=False, mode='grid-constant', order=5, shape=(5, 5, 2), zoom=(2, 2, 0.5)}]
FAILED tests/cupyx_tests/scipy_tests/ndimage_tests/test_interpolation.py::TestZoomOutputSize1::test_zoom_output_size1[_param_52_{grid_mode=True, mode='constant', order=4, shape=(5, 5, 2), zoom=(2, 2, 0.5)}]
FAILED tests/cupyx_tests/scipy_tests/ndimage_tests/test_interpolation.py::TestZoomOutputSize1::test_zoom_output_size1[_param_53_{grid_mode=True, mode='constant', order=5, shape=(5, 5, 2), zoom=(2, 2, 0.5)}]
FAILED tests/cupyx_tests/scipy_tests/ndimage_tests/test_interpolation.py::TestZoomOutputSize1::test_zoom_output_size1[_param_64_{grid_mode=True, mode='mirror', order=4, shape=(5, 5, 2), zoom=(2, 2, 0.5)}]
FAILED tests/cupyx_tests/scipy_tests/ndimage_tests/test_interpolation.py::TestZoomOutputSize1::test_zoom_output_size1[_param_65_{grid_mode=True, mode='mirror', order=5, shape=(5, 5, 2), zoom=(2, 2, 0.5)}]
FAILED tests/cupyx_tests/scipy_tests/ndimage_tests/test_interpolation.py::TestZoomOutputSize1::test_zoom_output_size1[_param_70_{grid_mode=True, mode='wrap', order=4, shape=(5, 5, 2), zoom=(2, 2, 0.5)}]
FAILED tests/cupyx_tests/scipy_tests/ndimage_tests/test_interpolation.py::TestZoomOutputSize1::test_zoom_output_size1[_param_71_{grid_mode=True, mode='wrap', order=5, shape=(5, 5, 2), zoom=(2, 2, 0.5)}]
FAILED tests/cupyx_tests/scipy_tests/ndimage_tests/test_interpolation.py::TestZoomOutputSize1::test_zoom_output_size1[_param_94_{grid_mode=True, mode='grid-constant', order=4, shape=(5, 5, 2), zoom=(2, 2, 0.5)}]
FAILED tests/cupyx_tests/scipy_tests/ndimage_tests/test_interpolation.py::TestZoomOutputSize1::test_zoom_output_size1[_param_95_{grid_mode=True, mode='grid-constant', order=5, shape=(5, 5, 2), zoom=(2, 2, 0.5)}]
FAILED tests/cupyx_tests/scipy_tests/signal_tests/test_signaltools.py::TestFFTConvolve_param_44_{mode='valid', size1=(3, 4, 10), size2=3}::test_convolve_fft
FAILED tests/cupyx_tests/scipy_tests/signal_tests/test_signaltools.py::TestFFTConvolve_param_44_{mode='valid', size1=(3, 4, 10), size2=3}::test_correlate_fft
FAILED tests/cupyx_tests/scipy_tests/signal_tests/test_signaltools.py::TestFFTConvolve_param_44_{mode='valid', size1=(3, 4, 10), size2=3}::test_fftconvolve
= 359 failed, 64198 passed, 7496 skipped, 71 deselected, 557 xfailed, 298 warnings in 27062.14s (7:31:02) =
